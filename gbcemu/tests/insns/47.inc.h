    TEST(gbcemu, opcode_47) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 47 0000
        gbc.setState(0x5282, 0xe279, 0x2d60, 0xb738, 0xbc10, 0xebfd, 0x1, 0x1);
        gbc.writeMem(0x5282, { 0x47 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0x5283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0001
        gbc.setState(0x66f5, 0x6ec8, 0x4990, 0x681b, 0x11f9, 0xd668, 0x1, 0x1);
        gbc.writeMem(0x66f5, { 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x66f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0002
        gbc.setState(0x22, 0xe4b3, 0xbfe0, 0xb8e7, 0x6b8, 0xcf6d, 0x1, 0x0);
        gbc.writeMem(0x22, { 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe4b3, gbc.sp());
        EXPECT(0x23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0003
        gbc.setState(0x1dd, 0xc197, 0xe800, 0xc838, 0xdfc2, 0xe053, 0x0, 0x0);
        gbc.writeMem(0x1dd, { 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc197, gbc.sp());
        EXPECT(0x1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0004
        gbc.setState(0xbc29, 0xeb9d, 0x99c0, 0x7474, 0x82a8, 0x42ee, 0x1, 0x1);
        gbc.writeMem(0xbc29, { 0x47 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbc29));
        // 47 0005
        gbc.setState(0x704d, 0xc39b, 0x5850, 0xff53, 0x738b, 0x9888, 0x1, 0x0);
        gbc.writeMem(0x704d, { 0x47 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x704e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0006
        gbc.setState(0x48d5, 0x5cc7, 0xb30, 0x4208, 0x79b1, 0xd18d, 0x1, 0x1);
        gbc.writeMem(0x48d5, { 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0007
        gbc.setState(0xbde2, 0xf121, 0x9e00, 0xb50, 0x8b25, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0xbde2, { 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0xbde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbde2));
        // 47 000A
        gbc.setState(0xe2d6, 0xcbdb, 0xcb90, 0xc865, 0x2977, 0x3284, 0x0, 0x1);
        gbc.writeMem(0xe2d6, { 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcbdb, gbc.sp());
        EXPECT(0xe2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe2d6));
        // 47 000B
        gbc.setState(0x504b, 0x44, 0x7e80, 0x8bd9, 0x3859, 0x5bee, 0x0, 0x1);
        gbc.writeMem(0x504b, { 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 000C
        gbc.setState(0xb67a, 0x65f2, 0x2890, 0x9668, 0xd09e, 0x9eff, 0x0, 0x1);
        gbc.writeMem(0xb67a, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb67a));
        // 47 000D
        gbc.setState(0xaa7d, 0x58bf, 0xc9e0, 0x4c09, 0xf82, 0xddba, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x58bf, gbc.sp());
        EXPECT(0xaa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaa7d));
        // 47 000E
        gbc.setState(0x530c, 0x863c, 0x9570, 0x367d, 0x4d9f, 0xdb49, 0x1, 0x1);
        gbc.writeMem(0x530c, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0x530d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 000F
        gbc.setState(0x1636, 0xfa95, 0xfc40, 0xdad6, 0x4a08, 0xa8b6, 0x1, 0x1);
        gbc.writeMem(0x1636, { 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfa95, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0010
        gbc.setState(0xb2ab, 0x1179, 0x7cc0, 0xa319, 0xbac7, 0xe8af, 0x1, 0x0);
        gbc.writeMem(0xb2ab, { 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb2ab));
        // 47 0011
        gbc.setState(0xc3c9, 0x88e4, 0xbab0, 0xc234, 0x381f, 0x5ece, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x88e4, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc3c9));
        // 47 0012
        gbc.setState(0x3569, 0xf5bb, 0x3ae0, 0x5cc, 0x3cb8, 0x998e, 0x0, 0x1);
        gbc.writeMem(0x3569, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0x356a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0013
        gbc.setState(0x9ad9, 0x14de, 0xcf90, 0xaf40, 0xa24b, 0x1553, 0x1, 0x0);
        gbc.writeMem(0x9ad9, { 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9ad9));
        // 47 0014
        gbc.setState(0xa351, 0x73fe, 0x3c60, 0x2e15, 0x65d8, 0xa060, 0x1, 0x0);
        gbc.writeMem(0xa351, { 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x73fe, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa351));
        // 47 0015
        gbc.setState(0x2a5e, 0x7f5b, 0x4a20, 0xf66d, 0x9148, 0x21ea, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f5b, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0016
        gbc.setState(0x706b, 0x6686, 0x88a0, 0xe366, 0x6489, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x706b, { 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6686, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0017
        gbc.setState(0xd4e2, 0x494e, 0x8e60, 0x1b03, 0x7e17, 0x8604, 0x1, 0x1);
        gbc.writeMem(0xd4e2, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x494e, gbc.sp());
        EXPECT(0xd4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd4e2));
        // 47 0018
        gbc.setState(0x35e, 0x4548, 0x1dc0, 0x5918, 0xc7cc, 0x2901, 0x1, 0x0);
        gbc.writeMem(0x35e, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4548, gbc.sp());
        EXPECT(0x35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0019
        gbc.setState(0xc86, 0xc42b, 0xe350, 0xa15e, 0xfa53, 0x4047, 0x1, 0x1);
        gbc.writeMem(0xc86, { 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc42b, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 001A
        gbc.setState(0x7d45, 0x63d, 0x9d80, 0x923f, 0x1c43, 0x76a9, 0x0, 0x1);
        gbc.writeMem(0x7d45, { 0x47 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0x7d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 001B
        gbc.setState(0x8061, 0x1bac, 0x9710, 0xa6c2, 0x39a7, 0x4e4e, 0x0, 0x1);
        gbc.writeMem(0x8061, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1bac, gbc.sp());
        EXPECT(0x8062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8061));
        // 47 001C
        gbc.setState(0xce9, 0x9e81, 0x3ae0, 0x61b4, 0xeb7a, 0x9879, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e81, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 001D
        gbc.setState(0x75e8, 0x257c, 0xdf20, 0xf907, 0xdf3a, 0xb5c2, 0x0, 0x1);
        gbc.writeMem(0x75e8, { 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 001E
        gbc.setState(0xe76b, 0xa3a2, 0xab20, 0xcf71, 0x2c14, 0x373c, 0x0, 0x0);
        gbc.writeMem(0xe76b, { 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe76b));
        // 47 001F
        gbc.setState(0x590a, 0xe978, 0x3a80, 0xf32, 0xe2ff, 0x23fe, 0x0, 0x1);
        gbc.writeMem(0x590a, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0x590b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0020
        gbc.setState(0x3fbc, 0x3179, 0xd30, 0xfa45, 0x4490, 0x729d, 0x1, 0x1);
        gbc.writeMem(0x3fbc, { 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0x3fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0022
        gbc.setState(0xa01f, 0x83f6, 0x6f00, 0x607f, 0xc827, 0xb0f3, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa01f));
        // 47 0023
        gbc.setState(0xc3b1, 0x5d2b, 0x31d0, 0xcf53, 0xdbde, 0xb5b4, 0x0, 0x0);
        gbc.writeMem(0xc3b1, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc3b1));
        // 47 0024
        gbc.setState(0x75f3, 0xefc2, 0x12b0, 0x6571, 0xbddc, 0x569d, 0x1, 0x1);
        gbc.writeMem(0x75f3, { 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0025
        gbc.setState(0xa424, 0x8733, 0x1d30, 0xa830, 0x79b0, 0x32fb, 0x1, 0x0);
        gbc.writeMem(0xa424, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8733, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa424));
        // 47 0026
        gbc.setState(0xa68e, 0xa4bb, 0x96c0, 0xa6e5, 0xb64b, 0x2fb3, 0x0, 0x1);
        gbc.writeMem(0xa68e, { 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa4bb, gbc.sp());
        EXPECT(0xa68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa68e));
        // 47 0027
        gbc.setState(0xbe28, 0xe538, 0xe160, 0xe707, 0xc514, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0xbe28, { 0x47 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe538, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbe28));
        // 47 0028
        gbc.setState(0xd18a, 0x3141, 0x5b70, 0xc302, 0xaf86, 0xd9a6, 0x1, 0x0);
        gbc.writeMem(0xd18a, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3141, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd18a));
        // 47 0029
        gbc.setState(0xb2ca, 0x2474, 0xb1c0, 0x7f51, 0xfa6e, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0xb2ca, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2474, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb2ca));
        // 47 002A
        gbc.setState(0x6b81, 0xb3b6, 0xf5c0, 0xe690, 0xd967, 0x2cc0, 0x1, 0x0);
        gbc.writeMem(0x6b81, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb3b6, gbc.sp());
        EXPECT(0x6b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 002C
        gbc.setState(0x684d, 0xa6c3, 0x8e00, 0xeb3e, 0x8a47, 0x2155, 0x0, 0x1);
        gbc.writeMem(0x684d, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa6c3, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 002D
        gbc.setState(0x8209, 0xc35, 0x3d60, 0xc9c8, 0x79ee, 0x1e7b, 0x1, 0x1);
        gbc.writeMem(0x8209, { 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x820a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8209));
        // 47 002E
        gbc.setState(0xc235, 0x1f7, 0xe870, 0x4f9b, 0xc6e3, 0x4864, 0x0, 0x0);
        gbc.writeMem(0xc235, { 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1f7, gbc.sp());
        EXPECT(0xc236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc235));
        // 47 002F
        gbc.setState(0xd58, 0x129c, 0x3990, 0x123a, 0xd81, 0x15a3, 0x1, 0x1);
        gbc.writeMem(0xd58, { 0x47 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x129c, gbc.sp());
        EXPECT(0xd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0030
        gbc.setState(0xaac6, 0xca2c, 0x3c20, 0x1cca, 0xc5b7, 0x6616, 0x1, 0x0);
        gbc.writeMem(0xaac6, { 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xca2c, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaac6));
        // 47 0031
        gbc.setState(0xd467, 0x8a9f, 0xf820, 0xe427, 0xe7fd, 0xd362, 0x1, 0x1);
        gbc.writeMem(0xd467, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd467));
        // 47 0032
        gbc.setState(0x8b15, 0xc766, 0xe3e0, 0x2523, 0x5f6e, 0x3593, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc766, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8b15));
        // 47 0033
        gbc.setState(0xe06f, 0x629b, 0x7e0, 0x9357, 0x5a0c, 0x5f75, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x629b, gbc.sp());
        EXPECT(0xe070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe06f));
        // 47 0034
        gbc.setState(0x57ca, 0x674f, 0xd90, 0xca5b, 0xf722, 0x8e4f, 0x1, 0x0);
        gbc.writeMem(0x57ca, { 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x57cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0035
        gbc.setState(0x8f40, 0xd485, 0x5f40, 0x6629, 0x42, 0xfef5, 0x0, 0x1);
        gbc.writeMem(0x8f40, { 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0x8f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8f40));
        // 47 0036
        gbc.setState(0x4b77, 0x506b, 0x5080, 0x54c4, 0xe14e, 0x7dea, 0x1, 0x0);
        gbc.writeMem(0x4b77, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0x4b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0037
        gbc.setState(0xd3a0, 0x1821, 0xc590, 0x6458, 0x1d1f, 0x938c, 0x1, 0x1);
        gbc.writeMem(0xd3a0, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1821, gbc.sp());
        EXPECT(0xd3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd3a0));
        // 47 0038
        gbc.setState(0x975f, 0x7a60, 0x85c0, 0x3e68, 0xb35b, 0x816f, 0x0, 0x0);
        gbc.writeMem(0x975f, { 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x975f));
        // 47 0039
        gbc.setState(0x72d3, 0x5c75, 0xe730, 0xe0a6, 0x8e1e, 0xaead, 0x1, 0x1);
        gbc.writeMem(0x72d3, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x72d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 003A
        gbc.setState(0x7df5, 0x1d48, 0xc300, 0xcfed, 0xa41a, 0x2ed2, 0x0, 0x1);
        gbc.writeMem(0x7df5, { 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1d48, gbc.sp());
        EXPECT(0x7df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 003B
        gbc.setState(0x4fcf, 0x8b81, 0x8790, 0xb602, 0x63a1, 0xca25, 0x1, 0x1);
        gbc.writeMem(0x4fcf, { 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8b81, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 003C
        gbc.setState(0x2547, 0x8f77, 0x5d50, 0x2ee2, 0x6057, 0x116b, 0x1, 0x0);
        gbc.writeMem(0x2547, { 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8f77, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 003E
        gbc.setState(0x849e, 0xf051, 0xca80, 0x4d95, 0x50c5, 0xfa93, 0x1, 0x0);
        gbc.writeMem(0x849e, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf051, gbc.sp());
        EXPECT(0x849f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x849e));
        // 47 003F
        gbc.setState(0xdfe3, 0x201e, 0xa6f0, 0x3802, 0x203a, 0xda4f, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x201e, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdfe3));
        // 47 0040
        gbc.setState(0x3c0f, 0xa31b, 0xdbf0, 0x1ff1, 0x2f5b, 0xf09b, 0x0, 0x0);
        gbc.writeMem(0x3c0f, { 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa31b, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0041
        gbc.setState(0xd212, 0x9b8f, 0xa590, 0x342, 0xc521, 0xb8f7, 0x1, 0x0);
        gbc.writeMem(0xd212, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0xd213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd212));
        // 47 0042
        gbc.setState(0x47cf, 0xfff2, 0xa30, 0x5956, 0xd4b, 0x5af, 0x0, 0x0);
        gbc.writeMem(0x47cf, { 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfff2, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0043
        gbc.setState(0x26bd, 0x2478, 0xeb10, 0x358a, 0xb1c2, 0xdd50, 0x1, 0x0);
        gbc.writeMem(0x26bd, { 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0x26be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0044
        gbc.setState(0xcd39, 0x4269, 0xe4a0, 0x3940, 0x11c, 0x7ed1, 0x0, 0x1);
        gbc.writeMem(0xcd39, { 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4269, gbc.sp());
        EXPECT(0xcd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcd39));
        // 47 0045
        gbc.setState(0xd3c9, 0x6681, 0x4e70, 0x373e, 0xfe05, 0x265f, 0x1, 0x1);
        gbc.writeMem(0xd3c9, { 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd3c9));
        // 47 0046
        gbc.setState(0x1107, 0x4f88, 0x5c20, 0xb92f, 0xa8bd, 0xc115, 0x0, 0x1);
        gbc.writeMem(0x1107, { 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4f88, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0047
        gbc.setState(0x70ea, 0xd077, 0x1c20, 0x6b8b, 0xadcd, 0xef06, 0x1, 0x0);
        gbc.writeMem(0x70ea, { 0x47 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0048
        gbc.setState(0x2a26, 0xa968, 0x4690, 0x38dc, 0xc0fe, 0xb429, 0x0, 0x1);
        gbc.writeMem(0x2a26, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0049
        gbc.setState(0x407a, 0x6d1b, 0xa0b0, 0x6db, 0x67a5, 0xacf1, 0x1, 0x1);
        gbc.writeMem(0x407a, { 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6d1b, gbc.sp());
        EXPECT(0x407b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 004A
        gbc.setState(0x74fa, 0xe7fc, 0x3c30, 0xf31d, 0x75b2, 0xf45d, 0x0, 0x1);
        gbc.writeMem(0x74fa, { 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 004B
        gbc.setState(0xb01c, 0x7caf, 0x9e90, 0xde0, 0xf4f4, 0x1b15, 0x1, 0x1);
        gbc.writeMem(0xb01c, { 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7caf, gbc.sp());
        EXPECT(0xb01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb01c));
        // 47 004C
        gbc.setState(0xcf37, 0x3183, 0x5ec0, 0x6981, 0xc607, 0xca56, 0x0, 0x1);
        gbc.writeMem(0xcf37, { 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3183, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcf37));
        // 47 004D
        gbc.setState(0x3853, 0x9512, 0x3820, 0x644b, 0x2ba, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9512, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 004E
        gbc.setState(0xa9c0, 0xa8c0, 0xbed0, 0x3985, 0x13b8, 0x480c, 0x0, 0x0);
        gbc.writeMem(0xa9c0, { 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa8c0, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa9c0));
        // 47 004F
        gbc.setState(0x9288, 0x776a, 0x6200, 0x9a27, 0xc1c7, 0x8051, 0x0, 0x1);
        gbc.writeMem(0x9288, { 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x776a, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9288));
        // 47 0050
        gbc.setState(0x2ef2, 0x122d, 0x7ec0, 0x2509, 0xd7d5, 0x13a5, 0x1, 0x0);
        gbc.writeMem(0x2ef2, { 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x122d, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0051
        gbc.setState(0x892b, 0x12ff, 0x6020, 0x66f2, 0xdf6b, 0x7f5d, 0x0, 0x1);
        gbc.writeMem(0x892b, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x892c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x892b));
        // 47 0052
        gbc.setState(0x1028, 0xc7d4, 0x95e0, 0x76bd, 0xc47d, 0x7d86, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc7d4, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0053
        gbc.setState(0x5d6c, 0xcb2, 0x5d00, 0xb87d, 0xe6a, 0x345, 0x1, 0x0);
        gbc.writeMem(0x5d6c, { 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0054
        gbc.setState(0x4560, 0x4b30, 0x9710, 0xdb18, 0xdef0, 0x5ab3, 0x1, 0x0);
        gbc.writeMem(0x4560, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b30, gbc.sp());
        EXPECT(0x4561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0055
        gbc.setState(0xe460, 0x4262, 0xdef0, 0x2d05, 0xb490, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0xe460, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0xe461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe460));
        // 47 0056
        gbc.setState(0xc8d9, 0xb964, 0x9b20, 0x26f4, 0xcd78, 0x5451, 0x0, 0x1);
        gbc.writeMem(0xc8d9, { 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb964, gbc.sp());
        EXPECT(0xc8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc8d9));
        // 47 0057
        gbc.setState(0x6024, 0x2dcc, 0x6a20, 0xf44d, 0xbb9c, 0x8d09, 0x0, 0x0);
        gbc.writeMem(0x6024, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0058
        gbc.setState(0xbd68, 0x438c, 0x7d0, 0x6730, 0x403a, 0x7dc0, 0x1, 0x1);
        gbc.writeMem(0xbd68, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x438c, gbc.sp());
        EXPECT(0xbd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbd68));
        // 47 0059
        gbc.setState(0xa338, 0xac80, 0xcc50, 0x229a, 0xcce9, 0x71b6, 0x1, 0x0);
        gbc.writeMem(0xa338, { 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac80, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa338));
        // 47 005A
        gbc.setState(0x6258, 0xd33d, 0x1030, 0x95e8, 0x7acc, 0x2e11, 0x0, 0x0);
        gbc.writeMem(0x6258, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 005B
        gbc.setState(0x9157, 0xa21f, 0x5d10, 0x75b8, 0x9fb7, 0xdf3f, 0x0, 0x1);
        gbc.writeMem(0x9157, { 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x9158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9157));
        // 47 005D
        gbc.setState(0x6745, 0xc032, 0x9dc0, 0xec4a, 0xa6d1, 0x665c, 0x1, 0x0);
        gbc.writeMem(0x6745, { 0x47 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 005E
        gbc.setState(0x6d8e, 0xfd51, 0xa20, 0x8b9b, 0x21a1, 0x3807, 0x1, 0x0);
        gbc.writeMem(0x6d8e, { 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 005F
        gbc.setState(0x970e, 0x873b, 0x6200, 0x4c88, 0x3066, 0x20b4, 0x1, 0x1);
        gbc.writeMem(0x970e, { 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x873b, gbc.sp());
        EXPECT(0x970f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x970e));
        // 47 0060
        gbc.setState(0x32d, 0xb54a, 0xe0a0, 0x5a3, 0xb99f, 0xa61a, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0061
        gbc.setState(0x4b63, 0x4b3b, 0x6f10, 0x1dae, 0x766b, 0x8338, 0x0, 0x1);
        gbc.writeMem(0x4b63, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0062
        gbc.setState(0xd761, 0x82d7, 0xca80, 0xed45, 0xd8e, 0x64a4, 0x1, 0x1);
        gbc.writeMem(0xd761, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x82d7, gbc.sp());
        EXPECT(0xd762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd761));
        // 47 0063
        gbc.setState(0xaeb3, 0x4d7e, 0xb0e0, 0x8fa2, 0xab45, 0x2dd9, 0x1, 0x1);
        gbc.writeMem(0xaeb3, { 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4d7e, gbc.sp());
        EXPECT(0xaeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaeb3));
        // 47 0064
        gbc.setState(0x1c67, 0x6ec5, 0xa0, 0xc570, 0x5b2b, 0xadf6, 0x1, 0x1);
        gbc.writeMem(0x1c67, { 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6ec5, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0065
        gbc.setState(0x3112, 0x6d4e, 0xc460, 0x874c, 0xd8d7, 0xa60, 0x1, 0x0);
        gbc.writeMem(0x3112, { 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0x3113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0066
        gbc.setState(0x35e, 0xa5e0, 0xdfe0, 0x72c2, 0xddcf, 0x8c4f, 0x0, 0x0);
        gbc.writeMem(0x35e, { 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0067
        gbc.setState(0x8552, 0xc732, 0x5f50, 0xefc3, 0x353f, 0x15de, 0x0, 0x0);
        gbc.writeMem(0x8552, { 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc732, gbc.sp());
        EXPECT(0x8553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8552));
        // 47 0068
        gbc.setState(0x1922, 0x1bab, 0x4e0, 0x39b, 0x783c, 0x94eb, 0x1, 0x1);
        gbc.writeMem(0x1922, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0069
        gbc.setState(0x32d, 0xadd0, 0xb390, 0x5ee2, 0x88c1, 0x4034, 0x1, 0x0);
        gbc.writeMem(0x32d, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xadd0, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 006A
        gbc.setState(0x5983, 0xbea0, 0x44a0, 0xc4cd, 0x366d, 0xd2f4, 0x0, 0x1);
        gbc.writeMem(0x5983, { 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbea0, gbc.sp());
        EXPECT(0x5984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 006B
        gbc.setState(0x2d97, 0x1ceb, 0x6f60, 0xe342, 0xa135, 0x4efe, 0x0, 0x1);
        gbc.writeMem(0x2d97, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0x2d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 006C
        gbc.setState(0x4c18, 0xa411, 0xa0f0, 0x4530, 0xf52, 0xc136, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 006D
        gbc.setState(0x54a8, 0xbaf0, 0xcaa0, 0xadb0, 0xa6dd, 0x37d6, 0x0, 0x0);
        gbc.writeMem(0x54a8, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbaf0, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 006E
        gbc.setState(0xc208, 0x477c, 0xe280, 0xeef2, 0x16e2, 0x82d1, 0x0, 0x1);
        gbc.writeMem(0xc208, { 0x47 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0xc209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc208));
        // 47 006F
        gbc.setState(0x4cd3, 0x2162, 0x10a0, 0x8e, 0x2090, 0x2bb4, 0x1, 0x0);
        gbc.writeMem(0x4cd3, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0070
        gbc.setState(0x12ca, 0xf41f, 0x10e0, 0xf9d0, 0xb329, 0x9621, 0x0, 0x0);
        gbc.writeMem(0x12ca, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf41f, gbc.sp());
        EXPECT(0x12cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0071
        gbc.setState(0xb6d8, 0x69da, 0x6210, 0xb361, 0x1f6a, 0x83d9, 0x0, 0x0);
        gbc.writeMem(0xb6d8, { 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x69da, gbc.sp());
        EXPECT(0xb6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb6d8));
        // 47 0072
        gbc.setState(0xd1ba, 0x679b, 0xbcc0, 0x40df, 0x66c8, 0xa31, 0x0, 0x1);
        gbc.writeMem(0xd1ba, { 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x679b, gbc.sp());
        EXPECT(0xd1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd1ba));
        // 47 0073
        gbc.setState(0x2ddc, 0x1a79, 0xee80, 0x3db9, 0x222a, 0xd513, 0x1, 0x0);
        gbc.writeMem(0x2ddc, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0x2ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0074
        gbc.setState(0xbc8a, 0xb00b, 0x5b00, 0x1106, 0x7d55, 0x6128, 0x1, 0x0);
        gbc.writeMem(0xbc8a, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb00b, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbc8a));
        // 47 0075
        gbc.setState(0x31b8, 0x63a7, 0xfaf0, 0x6ddd, 0xedc9, 0x4885, 0x0, 0x1);
        gbc.writeMem(0x31b8, { 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0076
        gbc.setState(0xef7f, 0x3e87, 0xcd20, 0xea13, 0x7a59, 0x8bf2, 0x1, 0x1);
        gbc.writeMem(0xef7f, { 0x47 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3e87, gbc.sp());
        EXPECT(0xef80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xef7f));
        // 47 0077
        gbc.setState(0xe1fa, 0xd929, 0x8b70, 0xb412, 0x17fc, 0xf78e, 0x0, 0x1);
        gbc.writeMem(0xe1fa, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd929, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe1fa));
        // 47 0078
        gbc.setState(0x3cdc, 0xbca2, 0x80a0, 0xf444, 0x7406, 0x9659, 0x0, 0x1);
        gbc.writeMem(0x3cdc, { 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0079
        gbc.setState(0x559, 0x7dad, 0xff70, 0x1dc9, 0xa0b7, 0x963, 0x0, 0x0);
        gbc.writeMem(0x559, { 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0x55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 007A
        gbc.setState(0x5ea9, 0x8556, 0xead0, 0x3103, 0xc889, 0xddba, 0x1, 0x1);
        gbc.writeMem(0x5ea9, { 0x47 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 007B
        gbc.setState(0xcbae, 0x2a17, 0x32d0, 0x2bb8, 0x2518, 0x2846, 0x0, 0x1);
        gbc.writeMem(0xcbae, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0xcbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcbae));
        // 47 007C
        gbc.setState(0x9e04, 0xf38f, 0x7fa0, 0x1cdb, 0xc10b, 0x26bf, 0x1, 0x0);
        gbc.writeMem(0x9e04, { 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf38f, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9e04));
        // 47 007D
        gbc.setState(0xdb64, 0xc4d2, 0x79d0, 0xd8a1, 0x6f98, 0x1774, 0x1, 0x0);
        gbc.writeMem(0xdb64, { 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc4d2, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb64));
        // 47 007E
        gbc.setState(0xe9b2, 0xbc3c, 0x17b0, 0x9ea1, 0x8984, 0x3217, 0x0, 0x1);
        gbc.writeMem(0xe9b2, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0xe9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9b2));
        // 47 007F
        gbc.setState(0xb1ce, 0x4147, 0xecf0, 0x6d3f, 0x4896, 0x415f, 0x0, 0x0);
        gbc.writeMem(0xb1ce, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb1ce));
        // 47 0080
        gbc.setState(0x84e9, 0xf9cb, 0x9760, 0xdcbc, 0x5fd9, 0xd181, 0x1, 0x1);
        gbc.writeMem(0x84e9, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf9cb, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x84e9));
        // 47 0081
        gbc.setState(0xe0ee, 0x3be9, 0x33b0, 0x38fb, 0x78b8, 0x17cb, 0x0, 0x0);
        gbc.writeMem(0xe0ee, { 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3be9, gbc.sp());
        EXPECT(0xe0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe0ee));
        // 47 0082
        gbc.setState(0x69b, 0x9603, 0xee0, 0xc18d, 0x706, 0x1f4b, 0x1, 0x0);
        gbc.writeMem(0x69b, { 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0083
        gbc.setState(0x314d, 0x3ebf, 0x2110, 0xe69e, 0xdd62, 0x215a, 0x1, 0x0);
        gbc.writeMem(0x314d, { 0x47 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0x314e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0084
        gbc.setState(0xac0c, 0xe6fd, 0xab20, 0x6b0, 0xcbac, 0xc531, 0x1, 0x1);
        gbc.writeMem(0xac0c, { 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe6fd, gbc.sp());
        EXPECT(0xac0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xac0c));
        // 47 0085
        gbc.setState(0xc84b, 0xb010, 0x8580, 0x5082, 0xe34d, 0x9119, 0x1, 0x1);
        gbc.writeMem(0xc84b, { 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb010, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc84b));
        // 47 0086
        gbc.setState(0xb084, 0xaaf7, 0x9980, 0x8d9b, 0xd626, 0x399c, 0x0, 0x0);
        gbc.writeMem(0xb084, { 0x47 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaaf7, gbc.sp());
        EXPECT(0xb085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb084));
        // 47 0087
        gbc.setState(0x332c, 0x2042, 0x1ec0, 0x2da7, 0x26a8, 0x8986, 0x0, 0x0);
        gbc.writeMem(0x332c, { 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0088
        gbc.setState(0x3bab, 0xf886, 0xaef0, 0x40fa, 0xe7b, 0xa933, 0x0, 0x0);
        gbc.writeMem(0x3bab, { 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf886, gbc.sp());
        EXPECT(0x3bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0089
        gbc.setState(0x54f, 0x55c5, 0x9a10, 0x90b2, 0xa85e, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0x54f, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x55c5, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 008A
        gbc.setState(0xd009, 0x25b9, 0xedf0, 0xab61, 0xefa6, 0xfae1, 0x0, 0x0);
        gbc.writeMem(0xd009, { 0x47 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd009));
        // 47 008B
        gbc.setState(0x8881, 0x7b7f, 0x730, 0xe481, 0xc8ac, 0x232, 0x1, 0x0);
        gbc.writeMem(0x8881, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7b7f, gbc.sp());
        EXPECT(0x8882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8881));
        // 47 008C
        gbc.setState(0xdb7d, 0xc683, 0x4a70, 0x7c6, 0x5770, 0x5519, 0x1, 0x1);
        gbc.writeMem(0xdb7d, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb7d));
        // 47 008D
        gbc.setState(0x9bf7, 0xfde5, 0x8e60, 0x91c6, 0x8cbb, 0xf604, 0x1, 0x1);
        gbc.writeMem(0x9bf7, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9bf7));
        // 47 008E
        gbc.setState(0xe76f, 0x375e, 0xd900, 0x1836, 0xb188, 0x4362, 0x0, 0x1);
        gbc.writeMem(0xe76f, { 0x47 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x375e, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe76f));
        // 47 008F
        gbc.setState(0xc923, 0x4c9c, 0x3270, 0xdfb, 0xc7b0, 0x28ef, 0x0, 0x0);
        gbc.writeMem(0xc923, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4c9c, gbc.sp());
        EXPECT(0xc924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc923));
        // 47 0091
        gbc.setState(0x8f9e, 0x4fa0, 0x24b0, 0x9503, 0x929c, 0x4760, 0x0, 0x1);
        gbc.writeMem(0x8f9e, { 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8f9e));
        // 47 0092
        gbc.setState(0x4448, 0x64c9, 0x2940, 0xe3f5, 0xe0e0, 0x8819, 0x1, 0x0);
        gbc.writeMem(0x4448, { 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0x4449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0093
        gbc.setState(0x32b9, 0xe3c9, 0xfa70, 0xf071, 0xfb48, 0x803c, 0x1, 0x1);
        gbc.writeMem(0x32b9, { 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe3c9, gbc.sp());
        EXPECT(0x32ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0094
        gbc.setState(0xa1ea, 0xcacb, 0x7a0, 0xdf18, 0x9c1c, 0x872a, 0x1, 0x1);
        gbc.writeMem(0xa1ea, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcacb, gbc.sp());
        EXPECT(0xa1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa1ea));
        // 47 0095
        gbc.setState(0xbebd, 0x8940, 0xb910, 0x7541, 0xb65a, 0xe92f, 0x1, 0x0);
        gbc.writeMem(0xbebd, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8940, gbc.sp());
        EXPECT(0xbebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbebd));
        // 47 0096
        gbc.setState(0xd7a4, 0x7faf, 0xef50, 0x4cbe, 0xa904, 0xe8b0, 0x1, 0x1);
        gbc.writeMem(0xd7a4, { 0x47 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0xd7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd7a4));
        // 47 0097
        gbc.setState(0x87a0, 0xb83d, 0xc350, 0x5bbb, 0xaea8, 0xe282, 0x0, 0x0);
        gbc.writeMem(0x87a0, { 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x87a0));
        // 47 0098
        gbc.setState(0xa30d, 0x9039, 0xbc70, 0xc298, 0xb42c, 0xf8ff, 0x0, 0x1);
        gbc.writeMem(0xa30d, { 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9039, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa30d));
        // 47 0099
        gbc.setState(0xe96, 0x82f6, 0xc9f0, 0xb74, 0x480c, 0xeeb4, 0x0, 0x0);
        gbc.writeMem(0xe96, { 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x82f6, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 009A
        gbc.setState(0x3648, 0x471e, 0x950, 0xf573, 0xf999, 0x5cc3, 0x0, 0x0);
        gbc.writeMem(0x3648, { 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x471e, gbc.sp());
        EXPECT(0x3649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 009C
        gbc.setState(0xe59f, 0x1396, 0x4870, 0x2dbd, 0x7a72, 0x5f62, 0x1, 0x1);
        gbc.writeMem(0xe59f, { 0x47 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe59f));
        // 47 009D
        gbc.setState(0x1a31, 0xa7df, 0xaf20, 0x2f38, 0x5bab, 0x6f47, 0x1, 0x0);
        gbc.writeMem(0x1a31, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0x1a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 009E
        gbc.setState(0xde6, 0xd968, 0xd790, 0xaf90, 0x75ac, 0xdb37, 0x0, 0x0);
        gbc.writeMem(0xde6, { 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd968, gbc.sp());
        EXPECT(0xde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 009F
        gbc.setState(0x2810, 0x30be, 0x8570, 0xbb52, 0x9557, 0x1559, 0x0, 0x1);
        gbc.writeMem(0x2810, { 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x30be, gbc.sp());
        EXPECT(0x2811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00A0
        gbc.setState(0xb9, 0xf308, 0x8430, 0x63c7, 0x3257, 0xdea8, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf308, gbc.sp());
        EXPECT(0xba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00A1
        gbc.setState(0xa64c, 0xb541, 0xe090, 0x7cc4, 0xded6, 0x3ed4, 0x1, 0x1);
        gbc.writeMem(0xa64c, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb541, gbc.sp());
        EXPECT(0xa64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa64c));
        // 47 00A2
        gbc.setState(0x80c4, 0x7a01, 0xc150, 0xf230, 0x2fed, 0x8669, 0x0, 0x1);
        gbc.writeMem(0x80c4, { 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7a01, gbc.sp());
        EXPECT(0x80c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x80c4));
        // 47 00A3
        gbc.setState(0xaa47, 0x20b3, 0xb3a0, 0x94d4, 0xd071, 0x53d0, 0x0, 0x1);
        gbc.writeMem(0xaa47, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x20b3, gbc.sp());
        EXPECT(0xaa48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaa47));
        // 47 00A4
        gbc.setState(0xbfd2, 0xec31, 0x7400, 0xd25b, 0x5c19, 0xc907, 0x0, 0x0);
        gbc.writeMem(0xbfd2, { 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xec31, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbfd2));
        // 47 00A5
        gbc.setState(0x3312, 0xf78d, 0x2300, 0x6d5b, 0x7408, 0xd115, 0x1, 0x0);
        gbc.writeMem(0x3312, { 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00A6
        gbc.setState(0x64a8, 0xce71, 0x21f0, 0x754d, 0x1857, 0x2d37, 0x0, 0x0);
        gbc.writeMem(0x64a8, { 0x47 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xce71, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00A7
        gbc.setState(0x1949, 0x4570, 0xf480, 0xc0ee, 0x8a49, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x1949, { 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4570, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00A8
        gbc.setState(0x7696, 0xe87c, 0xe3e0, 0xcb6, 0x599, 0xd932, 0x0, 0x0);
        gbc.writeMem(0x7696, { 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0x7697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00A9
        gbc.setState(0xb0ad, 0x6f42, 0xc060, 0x6a90, 0xcb7c, 0xfc18, 0x1, 0x1);
        gbc.writeMem(0xb0ad, { 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6f42, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb0ad));
        // 47 00AB
        gbc.setState(0x8ab7, 0x9055, 0x52a0, 0x9f35, 0xae42, 0x29ae, 0x0, 0x1);
        gbc.writeMem(0x8ab7, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8ab7));
        // 47 00AC
        gbc.setState(0xb6da, 0xbfb5, 0xd010, 0x94, 0x8c60, 0x6ab5, 0x0, 0x1);
        gbc.writeMem(0xb6da, { 0x47 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbfb5, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb6da));
        // 47 00AD
        gbc.setState(0x2ded, 0x6c3d, 0xe20, 0x199e, 0xada8, 0x4c70, 0x0, 0x1);
        gbc.writeMem(0x2ded, { 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c3d, gbc.sp());
        EXPECT(0x2dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00AE
        gbc.setState(0xb5cc, 0x343a, 0xa520, 0xcfc, 0x2d64, 0x22de, 0x1, 0x1);
        gbc.writeMem(0xb5cc, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x343a, gbc.sp());
        EXPECT(0xb5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb5cc));
        // 47 00B0
        gbc.setState(0xd48e, 0xf4b2, 0xade0, 0xa78c, 0x6800, 0x5b60, 0x1, 0x0);
        gbc.writeMem(0xd48e, { 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0xd48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd48e));
        // 47 00B1
        gbc.setState(0x884a, 0xff90, 0x4790, 0x6412, 0x5183, 0xad4, 0x0, 0x1);
        gbc.writeMem(0x884a, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0x884b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x884a));
        // 47 00B2
        gbc.setState(0xc36a, 0x3255, 0xb0d0, 0x55f0, 0x1474, 0xce27, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3255, gbc.sp());
        EXPECT(0xc36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc36a));
        // 47 00B3
        gbc.setState(0xa660, 0xe936, 0xb2e0, 0x318f, 0xf74e, 0x9827, 0x0, 0x0);
        gbc.writeMem(0xa660, { 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa660));
        // 47 00B4
        gbc.setState(0x3237, 0xb6b0, 0xe7c0, 0xf1bf, 0x9161, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x3237, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb6b0, gbc.sp());
        EXPECT(0x3238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00B5
        gbc.setState(0x4bd7, 0xcd74, 0x6720, 0x65c5, 0xa737, 0x1e0b, 0x0, 0x0);
        gbc.writeMem(0x4bd7, { 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00B6
        gbc.setState(0x60cb, 0x6890, 0x39a0, 0x7c3e, 0x941, 0x324, 0x1, 0x1);
        gbc.writeMem(0x60cb, { 0x47 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6890, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00B7
        gbc.setState(0x2dfe, 0xcaf9, 0x3310, 0x7281, 0xc46, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0x2dfe, { 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0x2dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00B8
        gbc.setState(0xcfad, 0x5e27, 0x4a10, 0xe9ea, 0x6d36, 0x7253, 0x1, 0x0);
        gbc.writeMem(0xcfad, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5e27, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcfad));
        // 47 00B9
        gbc.setState(0xe12a, 0xb739, 0xb6f0, 0xa8ba, 0x4c9d, 0xe11f, 0x0, 0x1);
        gbc.writeMem(0xe12a, { 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe12a));
        // 47 00BA
        gbc.setState(0x497a, 0xb0a5, 0xe9e0, 0x7097, 0x211b, 0x5ae7, 0x1, 0x0);
        gbc.writeMem(0x497a, { 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0x497b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00BC
        gbc.setState(0x9b51, 0x8360, 0xf410, 0x4a47, 0xed82, 0x9d99, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0x47 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x9b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9b51));
        // 47 00BD
        gbc.setState(0x8a1e, 0x21c8, 0xe4c0, 0x6461, 0xa3, 0x4cec, 0x1, 0x0);
        gbc.writeMem(0x8a1e, { 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x8a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8a1e));
        // 47 00BE
        gbc.setState(0xa45a, 0xaf46, 0x46c0, 0x88a3, 0x538a, 0xc99c, 0x0, 0x1);
        gbc.writeMem(0xa45a, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa45a));
        // 47 00BF
        gbc.setState(0x4516, 0xac56, 0x1470, 0xc77f, 0x13c6, 0xb300, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xac56, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00C0
        gbc.setState(0x3955, 0x9f37, 0x4190, 0xfd81, 0x5604, 0x699a, 0x1, 0x1);
        gbc.writeMem(0x3955, { 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9f37, gbc.sp());
        EXPECT(0x3956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00C1
        gbc.setState(0xda48, 0xd63d, 0x9850, 0xb9c1, 0xbabb, 0xd0c3, 0x1, 0x0);
        gbc.writeMem(0xda48, { 0x47 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd63d, gbc.sp());
        EXPECT(0xda49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xda48));
        // 47 00C2
        gbc.setState(0x74a, 0x63bd, 0x3260, 0x275f, 0x7757, 0x1081, 0x0, 0x0);
        gbc.writeMem(0x74a, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x63bd, gbc.sp());
        EXPECT(0x74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00C3
        gbc.setState(0xd488, 0x61d3, 0x9a90, 0x284, 0xb85b, 0xb157, 0x0, 0x0);
        gbc.writeMem(0xd488, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x61d3, gbc.sp());
        EXPECT(0xd489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd488));
        // 47 00C4
        gbc.setState(0x4b62, 0xb07e, 0x8b20, 0xe4e3, 0xf548, 0x8869, 0x0, 0x0);
        gbc.writeMem(0x4b62, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb07e, gbc.sp());
        EXPECT(0x4b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00C5
        gbc.setState(0xec3d, 0xd9e0, 0x1200, 0xcfe2, 0xdb9, 0x3ac4, 0x1, 0x1);
        gbc.writeMem(0xec3d, { 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd9e0, gbc.sp());
        EXPECT(0xec3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xec3d));
        // 47 00C6
        gbc.setState(0x2965, 0x9c0b, 0x5100, 0x6141, 0x984c, 0x1e5e, 0x1, 0x1);
        gbc.writeMem(0x2965, { 0x47 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9c0b, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00C7
        gbc.setState(0xb72b, 0xb039, 0xc7e0, 0x67ff, 0xaf11, 0xeea2, 0x0, 0x0);
        gbc.writeMem(0xb72b, { 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb039, gbc.sp());
        EXPECT(0xb72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb72b));
        // 47 00C8
        gbc.setState(0xd97b, 0x274c, 0x81a0, 0x9ad8, 0xdd01, 0xb58f, 0x0, 0x0);
        gbc.writeMem(0xd97b, { 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd97b));
        // 47 00C9
        gbc.setState(0x1a4c, 0x79ce, 0xbc20, 0xbc50, 0x39d3, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x1a4c, { 0x47 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x79ce, gbc.sp());
        EXPECT(0x1a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00CA
        gbc.setState(0x91d2, 0xfbe3, 0xd8f0, 0x6f32, 0xa90f, 0xc5de, 0x0, 0x0);
        gbc.writeMem(0x91d2, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfbe3, gbc.sp());
        EXPECT(0x91d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x91d2));
        // 47 00CB
        gbc.setState(0x4eb0, 0xf013, 0x7b60, 0x11bc, 0x3f79, 0x6b63, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf013, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00CC
        gbc.setState(0xe07c, 0x31e1, 0x6a40, 0x5e03, 0xb4e4, 0xbc3, 0x1, 0x0);
        gbc.writeMem(0xe07c, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0xe07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe07c));
        // 47 00CD
        gbc.setState(0x4c06, 0xd08d, 0xefe0, 0xb213, 0x26f6, 0x84a0, 0x1, 0x0);
        gbc.writeMem(0x4c06, { 0x47 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd08d, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00CE
        gbc.setState(0xd890, 0x8c2b, 0x8bb0, 0x9926, 0xd2f8, 0x5c4c, 0x0, 0x0);
        gbc.writeMem(0xd890, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8c2b, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd890));
        // 47 00CF
        gbc.setState(0xb741, 0x551a, 0x6510, 0xfe93, 0xae8b, 0xad04, 0x1, 0x0);
        gbc.writeMem(0xb741, { 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb741));
        // 47 00D1
        gbc.setState(0x53f0, 0x152f, 0x4260, 0xbdc9, 0x1dce, 0x4798, 0x0, 0x0);
        gbc.writeMem(0x53f0, { 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00D2
        gbc.setState(0xac89, 0x8434, 0xdbb0, 0x9e44, 0x44ce, 0x3ecf, 0x1, 0x0);
        gbc.writeMem(0xac89, { 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8434, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xac89));
        // 47 00D3
        gbc.setState(0xdc90, 0xee4b, 0xd660, 0xdccb, 0x56d6, 0xf0cc, 0x1, 0x1);
        gbc.writeMem(0xdc90, { 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xee4b, gbc.sp());
        EXPECT(0xdc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdc90));
        // 47 00D4
        gbc.setState(0x3c01, 0x9ae, 0x63e0, 0x2a3a, 0xbe63, 0xace, 0x0, 0x0);
        gbc.writeMem(0x3c01, { 0x47 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00D5
        gbc.setState(0x8a5a, 0x403a, 0x4b0, 0x429b, 0x3b86, 0x1049, 0x0, 0x0);
        gbc.writeMem(0x8a5a, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0x8a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8a5a));
        // 47 00D6
        gbc.setState(0x669b, 0x6898, 0xc010, 0x851d, 0xe799, 0xbda6, 0x0, 0x1);
        gbc.writeMem(0x669b, { 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6898, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00D7
        gbc.setState(0x68fc, 0x3cc5, 0xed40, 0x56fb, 0x6b21, 0x96a3, 0x0, 0x0);
        gbc.writeMem(0x68fc, { 0x47 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00DA
        gbc.setState(0x3314, 0x1808, 0x41f0, 0xe3bc, 0x7dec, 0x17af, 0x0, 0x0);
        gbc.writeMem(0x3314, { 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1808, gbc.sp());
        EXPECT(0x3315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00DB
        gbc.setState(0x3c22, 0xd6f6, 0xcc50, 0xb042, 0x9917, 0xd83c, 0x0, 0x1);
        gbc.writeMem(0x3c22, { 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd6f6, gbc.sp());
        EXPECT(0x3c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00DC
        gbc.setState(0x6304, 0x4e6e, 0x14e0, 0x5137, 0x8d1b, 0xde10, 0x0, 0x0);
        gbc.writeMem(0x6304, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4e6e, gbc.sp());
        EXPECT(0x6305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00DD
        gbc.setState(0x604e, 0x13a2, 0xcb30, 0x5c24, 0x2013, 0x8acc, 0x1, 0x1);
        gbc.writeMem(0x604e, { 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x13a2, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00DE
        gbc.setState(0x4314, 0x8b8b, 0x1420, 0x4724, 0x9865, 0x82fa, 0x0, 0x0);
        gbc.writeMem(0x4314, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8b8b, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00DF
        gbc.setState(0xc42b, 0x1857, 0x6070, 0x792f, 0xd384, 0xbaff, 0x0, 0x0);
        gbc.writeMem(0xc42b, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0xc42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc42b));
        // 47 00E0
        gbc.setState(0x3a27, 0xc5b1, 0xb9e0, 0xb5c2, 0x6c1e, 0x7b3a, 0x1, 0x0);
        gbc.writeMem(0x3a27, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00E1
        gbc.setState(0xb6c6, 0xb54b, 0x5470, 0x979c, 0xcc89, 0xab5c, 0x0, 0x1);
        gbc.writeMem(0xb6c6, { 0x47 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb54b, gbc.sp());
        EXPECT(0xb6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb6c6));
        // 47 00E2
        gbc.setState(0x98d2, 0x4f30, 0xb860, 0x785d, 0x5b50, 0x11a0, 0x0, 0x0);
        gbc.writeMem(0x98d2, { 0x47 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4f30, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x98d2));
        // 47 00E3
        gbc.setState(0xdaf4, 0xff1e, 0x7e40, 0x80a9, 0x1ae0, 0xda32, 0x1, 0x0);
        gbc.writeMem(0xdaf4, { 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdaf4));
        // 47 00E4
        gbc.setState(0x3fcf, 0x13b0, 0xaea0, 0x7d5d, 0xff3d, 0xc538, 0x1, 0x1);
        gbc.writeMem(0x3fcf, { 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x13b0, gbc.sp());
        EXPECT(0x3fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00E5
        gbc.setState(0x59c1, 0x3d53, 0xcc90, 0xa5ad, 0xbd49, 0x1997, 0x0, 0x0);
        gbc.writeMem(0x59c1, { 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0x59c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00E6
        gbc.setState(0xa832, 0x611e, 0xb710, 0xef71, 0x9b5e, 0x536b, 0x1, 0x0);
        gbc.writeMem(0xa832, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x611e, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa832));
        // 47 00E7
        gbc.setState(0x6c72, 0xf46b, 0x3260, 0x23b3, 0xd0bb, 0xa6d7, 0x1, 0x0);
        gbc.writeMem(0x6c72, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x6c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00E8
        gbc.setState(0x8082, 0x1e45, 0xabf0, 0x2ef1, 0xdd6a, 0x5216, 0x1, 0x1);
        gbc.writeMem(0x8082, { 0x47 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0x8083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8082));
        // 47 00E9
        gbc.setState(0x29eb, 0x652f, 0x4010, 0xed07, 0x73fd, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0x29eb, { 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0x29ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00EA
        gbc.setState(0xdaad, 0x3019, 0x1930, 0x83ab, 0x2997, 0xff56, 0x0, 0x0);
        gbc.writeMem(0xdaad, { 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3019, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdaad));
        // 47 00EB
        gbc.setState(0x1b77, 0xf540, 0x72c0, 0x86c6, 0x5a08, 0x1cc6, 0x1, 0x0);
        gbc.writeMem(0x1b77, { 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00EC
        gbc.setState(0x7bb9, 0x140e, 0x1c70, 0x5a40, 0x8c63, 0x7762, 0x0, 0x0);
        gbc.writeMem(0x7bb9, { 0x47 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x140e, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00ED
        gbc.setState(0xe5c4, 0x4ecf, 0x6d60, 0x16fd, 0x998b, 0xa034, 0x0, 0x1);
        gbc.writeMem(0xe5c4, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4ecf, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe5c4));
        // 47 00EE
        gbc.setState(0x12ae, 0xd457, 0x4800, 0xc457, 0xac78, 0xa292, 0x1, 0x1);
        gbc.writeMem(0x12ae, { 0x47 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd457, gbc.sp());
        EXPECT(0x12af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00F0
        gbc.setState(0xdf51, 0xa09b, 0x8e0, 0x916a, 0xc59, 0xb89d, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdf51));
        // 47 00F1
        gbc.setState(0x1d29, 0x645, 0xdc20, 0x52c1, 0x1570, 0xde0c, 0x1, 0x1);
        gbc.writeMem(0x1d29, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x645, gbc.sp());
        EXPECT(0x1d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00F2
        gbc.setState(0x3cdf, 0x4848, 0x20a0, 0xeb43, 0xbcb8, 0x3e86, 0x0, 0x1);
        gbc.writeMem(0x3cdf, { 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4848, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00F3
        gbc.setState(0xbfc6, 0xc11, 0x6480, 0x7b6b, 0x8090, 0xdd06, 0x1, 0x0);
        gbc.writeMem(0xbfc6, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc11, gbc.sp());
        EXPECT(0xbfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbfc6));
        // 47 00F4
        gbc.setState(0x8c7b, 0xfd66, 0x4c20, 0x5ce4, 0xeb4, 0xd62e, 0x1, 0x1);
        gbc.writeMem(0x8c7b, { 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfd66, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8c7b));
        // 47 00F5
        gbc.setState(0x4ae, 0x6b15, 0xeca0, 0x3ae5, 0xc8b8, 0x71c7, 0x0, 0x0);
        gbc.writeMem(0x4ae, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6b15, gbc.sp());
        EXPECT(0x4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00F6
        gbc.setState(0xec1e, 0x5310, 0xe0d0, 0x9d0a, 0xd477, 0xb080, 0x0, 0x1);
        gbc.writeMem(0xec1e, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0xec1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xec1e));
        // 47 00F7
        gbc.setState(0xea14, 0x9ef6, 0x7910, 0xa810, 0xbc15, 0xdbe5, 0x0, 0x0);
        gbc.writeMem(0xea14, { 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9ef6, gbc.sp());
        EXPECT(0xea15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xea14));
        // 47 00F8
        gbc.setState(0x3d7e, 0x5463, 0xcec0, 0x42, 0x5f11, 0x107e, 0x1, 0x0);
        gbc.writeMem(0x3d7e, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5463, gbc.sp());
        EXPECT(0x3d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00F9
        gbc.setState(0xb72f, 0xb17b, 0xcdc0, 0xa845, 0xace1, 0xea3e, 0x1, 0x1);
        gbc.writeMem(0xb72f, { 0x47 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb17b, gbc.sp());
        EXPECT(0xb730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb72f));
        // 47 00FA
        gbc.setState(0x7345, 0xf771, 0x3420, 0x81b6, 0xb4dd, 0x8361, 0x1, 0x1);
        gbc.writeMem(0x7345, { 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0x7346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00FB
        gbc.setState(0xc23b, 0xea0b, 0x64d0, 0x302, 0x53b, 0xfa88, 0x1, 0x0);
        gbc.writeMem(0xc23b, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0xc23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc23b));
        // 47 00FC
        gbc.setState(0x5873, 0x5302, 0x1a90, 0x652b, 0x7692, 0x9fb3, 0x0, 0x0);
        gbc.writeMem(0x5873, { 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5302, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 00FD
        gbc.setState(0x77c2, 0x6af2, 0x9580, 0x4371, 0x540e, 0x4543, 0x0, 0x0);
        gbc.writeMem(0x77c2, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0x77c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 00FE
        gbc.setState(0x8c7, 0xcd2b, 0xc310, 0xa4e9, 0x6450, 0xd207, 0x0, 0x1);
        gbc.writeMem(0x8c7, { 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcd2b, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0100
        gbc.setState(0xed58, 0xc014, 0x4bd0, 0x120c, 0x93ee, 0x6daa, 0x0, 0x1);
        gbc.writeMem(0xed58, { 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc014, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xed58));
        // 47 0101
        gbc.setState(0xe648, 0xa9be, 0x1800, 0x7500, 0x988f, 0xae10, 0x0, 0x1);
        gbc.writeMem(0xe648, { 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa9be, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe648));
        // 47 0102
        gbc.setState(0xecac, 0x7bbd, 0x5a60, 0xcfa3, 0xd39a, 0x56d, 0x0, 0x0);
        gbc.writeMem(0xecac, { 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7bbd, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xecac));
        // 47 0103
        gbc.setState(0x8931, 0xc6e6, 0x3830, 0x1ad9, 0x6c97, 0xf414, 0x0, 0x0);
        gbc.writeMem(0x8931, { 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc6e6, gbc.sp());
        EXPECT(0x8932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8931));
        // 47 0105
        gbc.setState(0x745b, 0xdb6, 0x8fc0, 0xc8c7, 0x3dcf, 0x4d7e, 0x0, 0x0);
        gbc.writeMem(0x745b, { 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdb6, gbc.sp());
        EXPECT(0x745c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0106
        gbc.setState(0x90cf, 0x3324, 0x20c0, 0x12bb, 0x165e, 0x7afe, 0x1, 0x1);
        gbc.writeMem(0x90cf, { 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0x90d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x90cf));
        // 47 0107
        gbc.setState(0x6a83, 0x93bb, 0xb1b0, 0x554e, 0x45c5, 0x5728, 0x0, 0x0);
        gbc.writeMem(0x6a83, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x93bb, gbc.sp());
        EXPECT(0x6a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0108
        gbc.setState(0x82be, 0xd907, 0x1de0, 0xd189, 0xc2c7, 0x19f0, 0x0, 0x1);
        gbc.writeMem(0x82be, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd907, gbc.sp());
        EXPECT(0x82bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x82be));
        // 47 0109
        gbc.setState(0xbed4, 0xc14a, 0x31d0, 0x3abc, 0x11d2, 0x2c82, 0x0, 0x1);
        gbc.writeMem(0xbed4, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc14a, gbc.sp());
        EXPECT(0xbed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbed4));
        // 47 010C
        gbc.setState(0x522e, 0x4efd, 0xa5b0, 0x3449, 0x29, 0x7d3a, 0x0, 0x1);
        gbc.writeMem(0x522e, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4efd, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 010D
        gbc.setState(0x54ef, 0x5181, 0x6b90, 0xc15c, 0xaa36, 0x129c, 0x1, 0x0);
        gbc.writeMem(0x54ef, { 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5181, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 010E
        gbc.setState(0x27a3, 0xecdb, 0x6fe0, 0xa7f6, 0xa7f8, 0x498a, 0x0, 0x0);
        gbc.writeMem(0x27a3, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xecdb, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 010F
        gbc.setState(0x18ed, 0x2645, 0xe810, 0x8c98, 0x2884, 0xe6ec, 0x0, 0x0);
        gbc.writeMem(0x18ed, { 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2645, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0110
        gbc.setState(0x3905, 0x726b, 0x3ad0, 0x6baf, 0x7b36, 0x27b2, 0x1, 0x0);
        gbc.writeMem(0x3905, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0111
        gbc.setState(0x5910, 0x5d09, 0x8410, 0x8ed0, 0xb2c, 0xd2fa, 0x1, 0x1);
        gbc.writeMem(0x5910, { 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5d09, gbc.sp());
        EXPECT(0x5911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0112
        gbc.setState(0x7d82, 0xa3ac, 0x1de0, 0x4e12, 0xcff, 0xdab, 0x1, 0x1);
        gbc.writeMem(0x7d82, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3ac, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0113
        gbc.setState(0xc781, 0xfd2d, 0xa850, 0x1336, 0x1b5d, 0x8f4c, 0x0, 0x0);
        gbc.writeMem(0xc781, { 0x47 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfd2d, gbc.sp());
        EXPECT(0xc782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc781));
        // 47 0114
        gbc.setState(0xb312, 0xda23, 0xfaf0, 0x6590, 0x47e2, 0x3728, 0x0, 0x1);
        gbc.writeMem(0xb312, { 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xda23, gbc.sp());
        EXPECT(0xb313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb312));
        // 47 0115
        gbc.setState(0xd923, 0x4a99, 0x8ec0, 0xe734, 0x5ebb, 0x29fe, 0x1, 0x0);
        gbc.writeMem(0xd923, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4a99, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd923));
        // 47 0116
        gbc.setState(0xc7cc, 0xb073, 0xc6d0, 0xaf35, 0xd8d7, 0x6621, 0x0, 0x0);
        gbc.writeMem(0xc7cc, { 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb073, gbc.sp());
        EXPECT(0xc7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc7cc));
        // 47 0117
        gbc.setState(0xa785, 0x83a9, 0xa970, 0x8460, 0x3a1e, 0x3b15, 0x0, 0x1);
        gbc.writeMem(0xa785, { 0x47 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0xa786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa785));
        // 47 0118
        gbc.setState(0x40a6, 0x3eb0, 0x3620, 0x836, 0xf6a2, 0x3ccd, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3eb0, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0119
        gbc.setState(0x17c, 0x391f, 0xa790, 0xaa8d, 0xb9c4, 0x6b75, 0x0, 0x1);
        gbc.writeMem(0x17c, { 0x47 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 011A
        gbc.setState(0x4d31, 0xaf8f, 0x2760, 0x453d, 0x24cb, 0x387c, 0x0, 0x1);
        gbc.writeMem(0x4d31, { 0x47 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaf8f, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 011B
        gbc.setState(0xc61, 0xf724, 0x1a80, 0xd3a7, 0x42f3, 0xb7c7, 0x0, 0x1);
        gbc.writeMem(0xc61, { 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 011C
        gbc.setState(0x4820, 0x8957, 0x72b0, 0x1c20, 0x83ce, 0xb897, 0x1, 0x0);
        gbc.writeMem(0x4820, { 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8957, gbc.sp());
        EXPECT(0x4821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 011D
        gbc.setState(0x2576, 0x4e39, 0x8ca0, 0xdea0, 0x53, 0xae5e, 0x0, 0x1);
        gbc.writeMem(0x2576, { 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0x2577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 011E
        gbc.setState(0xf5a, 0x5d4, 0xe7e0, 0x345c, 0xc221, 0xc72, 0x0, 0x1);
        gbc.writeMem(0xf5a, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0xf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 011F
        gbc.setState(0x2163, 0xe025, 0x1980, 0x3466, 0x5f43, 0x294e, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0120
        gbc.setState(0x7be4, 0x7821, 0xd8c0, 0x54c0, 0x3044, 0xd572, 0x0, 0x0);
        gbc.writeMem(0x7be4, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0121
        gbc.setState(0xd6c7, 0x169e, 0x5020, 0x9fdd, 0x5091, 0x2cae, 0x1, 0x1);
        gbc.writeMem(0xd6c7, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x169e, gbc.sp());
        EXPECT(0xd6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd6c7));
        // 47 0122
        gbc.setState(0x51c, 0x38ba, 0x4a20, 0x4636, 0xbc77, 0x236a, 0x0, 0x0);
        gbc.writeMem(0x51c, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0123
        gbc.setState(0x935f, 0xbe35, 0xe9d0, 0xa4df, 0xbcc1, 0x3111, 0x0, 0x1);
        gbc.writeMem(0x935f, { 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x9360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x935f));
        // 47 0124
        gbc.setState(0xafbb, 0xa98f, 0x6b50, 0xdccb, 0x1b37, 0x67b1, 0x0, 0x1);
        gbc.writeMem(0xafbb, { 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xafbb));
        // 47 0125
        gbc.setState(0xc75b, 0x500f, 0xcd30, 0xc845, 0xa63d, 0x64f2, 0x0, 0x0);
        gbc.writeMem(0xc75b, { 0x47 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x500f, gbc.sp());
        EXPECT(0xc75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc75b));
        // 47 0126
        gbc.setState(0x5c18, 0x4f3, 0x56a0, 0x5ff6, 0xa225, 0x3ea9, 0x0, 0x0);
        gbc.writeMem(0x5c18, { 0x47 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4f3, gbc.sp());
        EXPECT(0x5c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0127
        gbc.setState(0x9631, 0x8a08, 0x6a30, 0x8c4d, 0x8433, 0x1845, 0x1, 0x0);
        gbc.writeMem(0x9631, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9631));
        // 47 0128
        gbc.setState(0x1e15, 0xe138, 0x7aa0, 0x600f, 0xaa7f, 0x288a, 0x0, 0x0);
        gbc.writeMem(0x1e15, { 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe138, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0129
        gbc.setState(0x8238, 0xbaaf, 0x42c0, 0xbb55, 0xe2ec, 0x8e95, 0x0, 0x0);
        gbc.writeMem(0x8238, { 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbaaf, gbc.sp());
        EXPECT(0x8239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8238));
        // 47 012A
        gbc.setState(0x878a, 0x8800, 0x88a0, 0x1081, 0x39b7, 0x5213, 0x0, 0x1);
        gbc.writeMem(0x878a, { 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8800, gbc.sp());
        EXPECT(0x878b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x878a));
        // 47 012B
        gbc.setState(0x9918, 0x8623, 0xf640, 0x6513, 0x8836, 0x7987, 0x0, 0x0);
        gbc.writeMem(0x9918, { 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8623, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9918));
        // 47 012C
        gbc.setState(0x5b0c, 0xd809, 0xb310, 0x3d1b, 0x8ea0, 0x8306, 0x0, 0x1);
        gbc.writeMem(0x5b0c, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd809, gbc.sp());
        EXPECT(0x5b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 012D
        gbc.setState(0x9e4f, 0x7518, 0x41d0, 0xc529, 0x22ed, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x9e4f, { 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7518, gbc.sp());
        EXPECT(0x9e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9e4f));
        // 47 012E
        gbc.setState(0x69cc, 0x1d31, 0xafa0, 0x2a20, 0x6e1d, 0xee7, 0x0, 0x0);
        gbc.writeMem(0x69cc, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1d31, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 012F
        gbc.setState(0x7961, 0x19e0, 0x9a30, 0x413f, 0xc39, 0x474a, 0x0, 0x0);
        gbc.writeMem(0x7961, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0130
        gbc.setState(0x4c58, 0x6bbe, 0xf340, 0x7e88, 0x1eb2, 0x696d, 0x0, 0x1);
        gbc.writeMem(0x4c58, { 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6bbe, gbc.sp());
        EXPECT(0x4c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0131
        gbc.setState(0x34e7, 0x1b5a, 0xda00, 0x3cf0, 0x240a, 0x4466, 0x0, 0x1);
        gbc.writeMem(0x34e7, { 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b5a, gbc.sp());
        EXPECT(0x34e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0132
        gbc.setState(0x2105, 0x7b61, 0x64b0, 0x6eec, 0x9b00, 0x41e, 0x0, 0x0);
        gbc.writeMem(0x2105, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7b61, gbc.sp());
        EXPECT(0x2106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0133
        gbc.setState(0x53fe, 0x55d6, 0x630, 0xdaf, 0xfe04, 0x7cca, 0x1, 0x0);
        gbc.writeMem(0x53fe, { 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x55d6, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0134
        gbc.setState(0x4fa3, 0x1a96, 0xb950, 0xde29, 0x57d6, 0xae6c, 0x0, 0x1);
        gbc.writeMem(0x4fa3, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0135
        gbc.setState(0x12cc, 0xb7c4, 0xcfd0, 0x414c, 0x586c, 0x6ef5, 0x0, 0x0);
        gbc.writeMem(0x12cc, { 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb7c4, gbc.sp());
        EXPECT(0x12cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0136
        gbc.setState(0x90c9, 0x9c7, 0xd4b0, 0x9b83, 0x1681, 0x9ba5, 0x0, 0x0);
        gbc.writeMem(0x90c9, { 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0x90ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x90c9));
        // 47 0137
        gbc.setState(0x6ab9, 0x481, 0xfb40, 0x456c, 0x7c08, 0x69db, 0x1, 0x1);
        gbc.writeMem(0x6ab9, { 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x481, gbc.sp());
        EXPECT(0x6aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0138
        gbc.setState(0x727a, 0x8c8, 0x8b80, 0x37c5, 0xbba3, 0x278c, 0x0, 0x1);
        gbc.writeMem(0x727a, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0x727b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0139
        gbc.setState(0xb33a, 0x1921, 0xaa10, 0x94e, 0xa0d4, 0x9207, 0x0, 0x1);
        gbc.writeMem(0xb33a, { 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1921, gbc.sp());
        EXPECT(0xb33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb33a));
        // 47 013A
        gbc.setState(0x626a, 0x26f5, 0x5ea0, 0xa7ab, 0xe1d1, 0x9fac, 0x0, 0x0);
        gbc.writeMem(0x626a, { 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x626b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 013B
        gbc.setState(0xe4e8, 0x1a0e, 0xfe60, 0x60d, 0x5b51, 0x926c, 0x0, 0x1);
        gbc.writeMem(0xe4e8, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1a0e, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe4e8));
        // 47 013C
        gbc.setState(0x77ff, 0x18f6, 0x7100, 0xed60, 0x77ed, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x77ff, { 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x18f6, gbc.sp());
        EXPECT(0x7800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 013D
        gbc.setState(0x17bc, 0x2bf, 0x4e60, 0xa01e, 0x6180, 0x86de, 0x1, 0x0);
        gbc.writeMem(0x17bc, { 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 013E
        gbc.setState(0x7fea, 0x7bda, 0x8bb0, 0xd3f5, 0xc1b6, 0x7c24, 0x1, 0x1);
        gbc.writeMem(0x7fea, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7bda, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 013F
        gbc.setState(0xb368, 0xfb78, 0xaff0, 0x309c, 0xe322, 0x73f1, 0x1, 0x1);
        gbc.writeMem(0xb368, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0xb369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb368));
        // 47 0140
        gbc.setState(0x1083, 0x9e14, 0x1af0, 0xfec0, 0xef65, 0xc051, 0x1, 0x1);
        gbc.writeMem(0x1083, { 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e14, gbc.sp());
        EXPECT(0x1084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0142
        gbc.setState(0xa742, 0x7e90, 0xc830, 0xcf3, 0x1ff, 0x6b37, 0x1, 0x1);
        gbc.writeMem(0xa742, { 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7e90, gbc.sp());
        EXPECT(0xa743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa742));
        // 47 0143
        gbc.setState(0xe9a3, 0x8daa, 0x6ce0, 0x3e57, 0x43dd, 0xd9d2, 0x0, 0x0);
        gbc.writeMem(0xe9a3, { 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xe9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9a3));
        // 47 0144
        gbc.setState(0x63b0, 0x965b, 0x200, 0x5fa5, 0x1c76, 0xbc65, 0x1, 0x0);
        gbc.writeMem(0x63b0, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x965b, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0147
        gbc.setState(0xd6e9, 0xd295, 0x240, 0x6ad1, 0xf013, 0xe97f, 0x0, 0x0);
        gbc.writeMem(0xd6e9, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd295, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd6e9));
        // 47 0148
        gbc.setState(0x1f55, 0x52b4, 0x2a00, 0xe974, 0xf3bf, 0x408a, 0x0, 0x0);
        gbc.writeMem(0x1f55, { 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52b4, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0149
        gbc.setState(0xe914, 0x603f, 0xccd0, 0x415, 0xf109, 0x2f69, 0x1, 0x0);
        gbc.writeMem(0xe914, { 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x603f, gbc.sp());
        EXPECT(0xe915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe914));
        // 47 014A
        gbc.setState(0x3e75, 0x8de, 0xdb00, 0xfe1, 0xcb3e, 0x1f05, 0x0, 0x1);
        gbc.writeMem(0x3e75, { 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8de, gbc.sp());
        EXPECT(0x3e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 014B
        gbc.setState(0xa5c1, 0xfe85, 0x5a10, 0xcf28, 0x3757, 0x880a, 0x0, 0x0);
        gbc.writeMem(0xa5c1, { 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfe85, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa5c1));
        // 47 014C
        gbc.setState(0xceeb, 0x8901, 0x97b0, 0x8c36, 0x2c56, 0x5360, 0x1, 0x0);
        gbc.writeMem(0xceeb, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0xceec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xceeb));
        // 47 014D
        gbc.setState(0xcd36, 0x8533, 0xa5c0, 0x1501, 0x1b3c, 0x9989, 0x1, 0x0);
        gbc.writeMem(0xcd36, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0xcd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcd36));
        // 47 014E
        gbc.setState(0x611f, 0x2e8f, 0xa550, 0x2150, 0xb65d, 0x6d3e, 0x0, 0x1);
        gbc.writeMem(0x611f, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2e8f, gbc.sp());
        EXPECT(0x6120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 014F
        gbc.setState(0x12b9, 0x3050, 0x8610, 0x64b, 0x3172, 0xed1d, 0x1, 0x1);
        gbc.writeMem(0x12b9, { 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0150
        gbc.setState(0x94ff, 0x2dad, 0x5990, 0x92b0, 0x6f5c, 0x1e12, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0x47 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2dad, gbc.sp());
        EXPECT(0x9500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x94ff));
        // 47 0151
        gbc.setState(0x175e, 0xeb97, 0xca30, 0x46d, 0x37c0, 0xfb2c, 0x1, 0x1);
        gbc.writeMem(0x175e, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeb97, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0152
        gbc.setState(0x5a09, 0xf518, 0xe730, 0x1fd0, 0x76d8, 0x215f, 0x1, 0x0);
        gbc.writeMem(0x5a09, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf518, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0153
        gbc.setState(0x451d, 0x5f85, 0x9220, 0x563f, 0xd284, 0x29e7, 0x0, 0x0);
        gbc.writeMem(0x451d, { 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5f85, gbc.sp());
        EXPECT(0x451e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0154
        gbc.setState(0x6b29, 0x7ab, 0x6e00, 0x2359, 0x57b9, 0x68c5, 0x1, 0x1);
        gbc.writeMem(0x6b29, { 0x47 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0155
        gbc.setState(0x5809, 0x76e5, 0x85f0, 0x19d, 0xcb8c, 0x2a91, 0x0, 0x1);
        gbc.writeMem(0x5809, { 0x47 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0x580a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0156
        gbc.setState(0x4fce, 0x2646, 0x6da0, 0x7e4b, 0xf691, 0xbede, 0x0, 0x0);
        gbc.writeMem(0x4fce, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0x4fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0157
        gbc.setState(0xaef, 0x727c, 0xdda0, 0xaca1, 0xb0ba, 0xd300, 0x0, 0x0);
        gbc.writeMem(0xaef, { 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x727c, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0158
        gbc.setState(0x305a, 0x6efa, 0x8ee0, 0x5619, 0x3100, 0xd67d, 0x1, 0x1);
        gbc.writeMem(0x305a, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6efa, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0159
        gbc.setState(0xc658, 0x41a8, 0x94c0, 0x72bd, 0x3e26, 0xa808, 0x0, 0x1);
        gbc.writeMem(0xc658, { 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc658));
        // 47 015A
        gbc.setState(0xb7be, 0x77ec, 0x7040, 0x158e, 0x9a35, 0xa0e, 0x1, 0x1);
        gbc.writeMem(0xb7be, { 0x47 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x77ec, gbc.sp());
        EXPECT(0xb7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb7be));
        // 47 015B
        gbc.setState(0x854e, 0x2b51, 0x4a20, 0x4ba8, 0xf519, 0x2180, 0x1, 0x1);
        gbc.writeMem(0x854e, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2b51, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x854e));
        // 47 015C
        gbc.setState(0xdafc, 0xb1f1, 0xaa60, 0xf0c3, 0x4e82, 0x4029, 0x0, 0x1);
        gbc.writeMem(0xdafc, { 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdafc));
        // 47 015D
        gbc.setState(0xe370, 0x86be, 0x1c70, 0x2780, 0x7362, 0xdc54, 0x0, 0x1);
        gbc.writeMem(0xe370, { 0x47 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x86be, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe370));
        // 47 015E
        gbc.setState(0x709f, 0xfb4b, 0xdb0, 0xcbfc, 0x4718, 0x6fc6, 0x0, 0x1);
        gbc.writeMem(0x709f, { 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 015F
        gbc.setState(0xb1c1, 0xf69c, 0xc2a0, 0xe464, 0x2038, 0x660c, 0x0, 0x1);
        gbc.writeMem(0xb1c1, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf69c, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb1c1));
        // 47 0160
        gbc.setState(0x628b, 0xa06e, 0x7e60, 0xd907, 0xaf80, 0x87eb, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x628c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0161
        gbc.setState(0xe2fa, 0x2700, 0xc2f0, 0x61b1, 0x2bdd, 0x34bc, 0x0, 0x1);
        gbc.writeMem(0xe2fa, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0xe2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe2fa));
        // 47 0162
        gbc.setState(0x706b, 0x1e74, 0x7b60, 0xfa17, 0x4468, 0x7206, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0163
        gbc.setState(0x2413, 0xf9f0, 0xb6c0, 0x411e, 0xa867, 0xcc9c, 0x1, 0x0);
        gbc.writeMem(0x2413, { 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf9f0, gbc.sp());
        EXPECT(0x2414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0164
        gbc.setState(0x7702, 0x76c6, 0xa890, 0xd86b, 0x54c9, 0x966d, 0x1, 0x1);
        gbc.writeMem(0x7702, { 0x47 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x76c6, gbc.sp());
        EXPECT(0x7703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0165
        gbc.setState(0x4fa, 0xe8cc, 0x9060, 0x1c8f, 0x9522, 0x9210, 0x1, 0x1);
        gbc.writeMem(0x4fa, { 0x47 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe8cc, gbc.sp());
        EXPECT(0x4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0166
        gbc.setState(0xe9d3, 0x4352, 0x2830, 0xb723, 0xecd2, 0x76dc, 0x0, 0x0);
        gbc.writeMem(0xe9d3, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9d3));
        // 47 0167
        gbc.setState(0x7722, 0xdad6, 0x8c0, 0xaccd, 0xef42, 0x218f, 0x0, 0x1);
        gbc.writeMem(0x7722, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0x7723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0168
        gbc.setState(0xd9cc, 0xf8bb, 0xd7a0, 0x9cbe, 0x9476, 0xfe1a, 0x1, 0x1);
        gbc.writeMem(0xd9cc, { 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd9cc));
        // 47 0169
        gbc.setState(0x8238, 0x3660, 0xfd80, 0xf523, 0x72d4, 0x84b0, 0x0, 0x1);
        gbc.writeMem(0x8238, { 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x8239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8238));
        // 47 016B
        gbc.setState(0x3c51, 0x1df5, 0x77c0, 0xa4ee, 0x8948, 0x18a2, 0x1, 0x1);
        gbc.writeMem(0x3c51, { 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 016C
        gbc.setState(0x5ef8, 0xfd72, 0xec10, 0x87fa, 0xac10, 0x57dd, 0x0, 0x1);
        gbc.writeMem(0x5ef8, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 016D
        gbc.setState(0x3f92, 0x3adf, 0xceb0, 0x3967, 0xbbd3, 0xd106, 0x1, 0x0);
        gbc.writeMem(0x3f92, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3adf, gbc.sp());
        EXPECT(0x3f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 016E
        gbc.setState(0xda7, 0xf559, 0xeeb0, 0xbd1b, 0x678c, 0xc214, 0x0, 0x0);
        gbc.writeMem(0xda7, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 016F
        gbc.setState(0x4336, 0xecfc, 0xdc60, 0xe36d, 0xee7d, 0x9fe7, 0x1, 0x1);
        gbc.writeMem(0x4336, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xecfc, gbc.sp());
        EXPECT(0x4337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0170
        gbc.setState(0x68d0, 0xd216, 0xc910, 0x58d7, 0x244f, 0x171d, 0x0, 0x0);
        gbc.writeMem(0x68d0, { 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd216, gbc.sp());
        EXPECT(0x68d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0171
        gbc.setState(0x767d, 0xf057, 0xf50, 0xa332, 0xb832, 0x47bc, 0x0, 0x0);
        gbc.writeMem(0x767d, { 0x47 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0173
        gbc.setState(0x6198, 0x8bf6, 0xe0a0, 0xe038, 0xe3bf, 0x8c38, 0x1, 0x0);
        gbc.writeMem(0x6198, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8bf6, gbc.sp());
        EXPECT(0x6199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0174
        gbc.setState(0x47e4, 0x24f3, 0xfe90, 0x1c14, 0x441e, 0x4dc2, 0x1, 0x1);
        gbc.writeMem(0x47e4, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x24f3, gbc.sp());
        EXPECT(0x47e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0175
        gbc.setState(0xb92b, 0x61bc, 0x57d0, 0x74d1, 0x5bab, 0xc4df, 0x0, 0x1);
        gbc.writeMem(0xb92b, { 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb92b));
        // 47 0176
        gbc.setState(0x22f4, 0xcfb3, 0x1a90, 0xb198, 0xffe, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0x22f4, { 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0177
        gbc.setState(0x5618, 0xe966, 0x5c90, 0x5aee, 0x81ec, 0x137f, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0178
        gbc.setState(0x70db, 0xd508, 0xa170, 0xa7f8, 0x6462, 0x7b7e, 0x1, 0x1);
        gbc.writeMem(0x70db, { 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd508, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0179
        gbc.setState(0xa04f, 0xf4c2, 0x5bd0, 0xfd1f, 0xbee7, 0x9d99, 0x0, 0x0);
        gbc.writeMem(0xa04f, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf4c2, gbc.sp());
        EXPECT(0xa050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa04f));
        // 47 017A
        gbc.setState(0x5fef, 0x470a, 0xd5e0, 0xecb5, 0x2731, 0x9e95, 0x0, 0x1);
        gbc.writeMem(0x5fef, { 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x470a, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 017B
        gbc.setState(0x9b2c, 0x8602, 0x8ef0, 0xc4ac, 0xf04a, 0x5491, 0x1, 0x0);
        gbc.writeMem(0x9b2c, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x9b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9b2c));
        // 47 017D
        gbc.setState(0x3205, 0xda75, 0x6c0, 0xd0c4, 0x521a, 0x1439, 0x0, 0x1);
        gbc.writeMem(0x3205, { 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 017E
        gbc.setState(0x928, 0x9d98, 0x66b0, 0x6d7c, 0xc37e, 0x6514, 0x0, 0x0);
        gbc.writeMem(0x928, { 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 017F
        gbc.setState(0xb3e0, 0xb52d, 0x2320, 0x9eae, 0x222b, 0x5dce, 0x1, 0x1);
        gbc.writeMem(0xb3e0, { 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb52d, gbc.sp());
        EXPECT(0xb3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb3e0));
        // 47 0180
        gbc.setState(0x3d78, 0xb826, 0x2670, 0x6be2, 0x3ae4, 0xca78, 0x1, 0x0);
        gbc.writeMem(0x3d78, { 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb826, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0183
        gbc.setState(0x5892, 0xbfc4, 0x5de0, 0xfe25, 0xcac0, 0xd9f4, 0x1, 0x0);
        gbc.writeMem(0x5892, { 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbfc4, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0184
        gbc.setState(0xb752, 0xb78, 0xcfa0, 0x262f, 0x9133, 0xedb4, 0x1, 0x1);
        gbc.writeMem(0xb752, { 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb78, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb752));
        // 47 0185
        gbc.setState(0x5ffb, 0xc286, 0xb2d0, 0xd78, 0x60e6, 0x6f14, 0x1, 0x1);
        gbc.writeMem(0x5ffb, { 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc286, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0186
        gbc.setState(0x5b04, 0xa2c4, 0x4710, 0xef7e, 0xdb43, 0x4769, 0x0, 0x0);
        gbc.writeMem(0x5b04, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa2c4, gbc.sp());
        EXPECT(0x5b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0187
        gbc.setState(0xe094, 0xa639, 0xebb0, 0xeafd, 0x50e4, 0x7a5e, 0x0, 0x1);
        gbc.writeMem(0xe094, { 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa639, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe094));
        // 47 0188
        gbc.setState(0xc105, 0xfdc9, 0x810, 0x9ffc, 0x91a6, 0xa4f1, 0x0, 0x0);
        gbc.writeMem(0xc105, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfdc9, gbc.sp());
        EXPECT(0xc106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc105));
        // 47 0189
        gbc.setState(0x3300, 0x7e59, 0x6e50, 0x628b, 0xd30d, 0xbdc6, 0x1, 0x1);
        gbc.writeMem(0x3300, { 0x47 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7e59, gbc.sp());
        EXPECT(0x3301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 018A
        gbc.setState(0x5043, 0xa445, 0x6140, 0x5713, 0xe4dd, 0x81a7, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa445, gbc.sp());
        EXPECT(0x5044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 018B
        gbc.setState(0xa8d4, 0x3783, 0x4b90, 0x12ff, 0x61df, 0x4296, 0x1, 0x1);
        gbc.writeMem(0xa8d4, { 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3783, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa8d4));
        // 47 018C
        gbc.setState(0x79f0, 0xc92e, 0x4ed0, 0x1668, 0x23e1, 0x3e8d, 0x1, 0x1);
        gbc.writeMem(0x79f0, { 0x47 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 018D
        gbc.setState(0x918c, 0x7a62, 0xeb00, 0x7f3, 0xbec5, 0x8ee4, 0x0, 0x0);
        gbc.writeMem(0x918c, { 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7a62, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x918c));
        // 47 018E
        gbc.setState(0xaac5, 0x204c, 0xb100, 0xfefe, 0x547d, 0xd0b2, 0x1, 0x1);
        gbc.writeMem(0xaac5, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0xaac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaac5));
        // 47 018F
        gbc.setState(0x85ce, 0x6e3f, 0x97d0, 0xcc08, 0xd212, 0xd369, 0x1, 0x1);
        gbc.writeMem(0x85ce, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x85cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x85ce));
        // 47 0190
        gbc.setState(0x8fb9, 0x434d, 0x54e0, 0x7dbb, 0xb05a, 0x996b, 0x0, 0x1);
        gbc.writeMem(0x8fb9, { 0x47 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8fb9));
        // 47 0191
        gbc.setState(0x83c6, 0xcf32, 0x6040, 0x1c7, 0x5293, 0xa9e, 0x1, 0x0);
        gbc.writeMem(0x83c6, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcf32, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x83c6));
        // 47 0192
        gbc.setState(0xa7ac, 0x4676, 0x2050, 0x5a3, 0xca04, 0x84e8, 0x1, 0x0);
        gbc.writeMem(0xa7ac, { 0x47 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4676, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa7ac));
        // 47 0193
        gbc.setState(0x6620, 0x8c9d, 0xded0, 0x890e, 0x7f06, 0xfa4d, 0x1, 0x0);
        gbc.writeMem(0x6620, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8c9d, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0194
        gbc.setState(0xe497, 0x86a4, 0xf650, 0x7736, 0x7eb8, 0x83c7, 0x1, 0x1);
        gbc.writeMem(0xe497, { 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe497));
        // 47 0195
        gbc.setState(0x1553, 0x3d51, 0xb760, 0x2ce0, 0xf888, 0xed06, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3d51, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0196
        gbc.setState(0x52fa, 0x2281, 0x6070, 0xcdb7, 0x81e2, 0x60a6, 0x1, 0x0);
        gbc.writeMem(0x52fa, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2281, gbc.sp());
        EXPECT(0x52fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0197
        gbc.setState(0x12f9, 0x4262, 0x7ae0, 0x4998, 0x4872, 0x84b1, 0x1, 0x0);
        gbc.writeMem(0x12f9, { 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0198
        gbc.setState(0xd0b8, 0x1f8c, 0x540, 0xe801, 0x13b8, 0x9b6f, 0x0, 0x1);
        gbc.writeMem(0xd0b8, { 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd0b8));
        // 47 0199
        gbc.setState(0x6bc6, 0xddfd, 0x4510, 0x42fd, 0x31a6, 0x3e34, 0x0, 0x1);
        gbc.writeMem(0x6bc6, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xddfd, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 019A
        gbc.setState(0xa515, 0x726b, 0x9b50, 0xfcac, 0xd4b, 0x8fa4, 0x1, 0x0);
        gbc.writeMem(0xa515, { 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa515));
        // 47 019B
        gbc.setState(0x4d20, 0x26ef, 0x6cb0, 0x733a, 0x85c0, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0x4d20, { 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x26ef, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 019D
        gbc.setState(0x8a42, 0x3fb9, 0xf180, 0xeeb3, 0x5d8d, 0x110, 0x0, 0x1);
        gbc.writeMem(0x8a42, { 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3fb9, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8a42));
        // 47 019E
        gbc.setState(0xb142, 0x31c2, 0xbb0, 0xe0ce, 0x2bd, 0x20f5, 0x1, 0x0);
        gbc.writeMem(0xb142, { 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb142));
        // 47 019F
        gbc.setState(0x1311, 0x4b3, 0x6ab0, 0x88d0, 0x99fc, 0x8b23, 0x1, 0x0);
        gbc.writeMem(0x1311, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0x1312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01A0
        gbc.setState(0x9410, 0xd17e, 0xa3b0, 0x905b, 0xf0c7, 0xf693, 0x1, 0x0);
        gbc.writeMem(0x9410, { 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9410));
        // 47 01A1
        gbc.setState(0xd4b8, 0x48a4, 0x26c0, 0xe422, 0xd51e, 0xd9f8, 0x0, 0x1);
        gbc.writeMem(0xd4b8, { 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x48a4, gbc.sp());
        EXPECT(0xd4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd4b8));
        // 47 01A2
        gbc.setState(0x68ac, 0xabec, 0x95f0, 0xcbc1, 0x1eae, 0xe573, 0x1, 0x1);
        gbc.writeMem(0x68ac, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xabec, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01A4
        gbc.setState(0x4983, 0x5348, 0x8f0, 0x3505, 0x8b73, 0x9500, 0x0, 0x0);
        gbc.writeMem(0x4983, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5348, gbc.sp());
        EXPECT(0x4984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01A5
        gbc.setState(0x64ea, 0x62ac, 0x21d0, 0xb831, 0x30ab, 0xe0b8, 0x1, 0x1);
        gbc.writeMem(0x64ea, { 0x47 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01A6
        gbc.setState(0x8563, 0x12c6, 0xa650, 0x5364, 0xe1f9, 0x58e4, 0x1, 0x0);
        gbc.writeMem(0x8563, { 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0x8564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8563));
        // 47 01A7
        gbc.setState(0x4fc3, 0x6e9a, 0x53b0, 0x124b, 0x767e, 0x620d, 0x0, 0x1);
        gbc.writeMem(0x4fc3, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0x4fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01A8
        gbc.setState(0xa99d, 0x4731, 0xa3e0, 0x2ecb, 0xe363, 0x5b7f, 0x0, 0x0);
        gbc.writeMem(0xa99d, { 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa99d));
        // 47 01AA
        gbc.setState(0xb126, 0xf5b7, 0xcde0, 0xf5c1, 0xba07, 0x8f8, 0x1, 0x0);
        gbc.writeMem(0xb126, { 0x47 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf5b7, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb126));
        // 47 01AB
        gbc.setState(0x9f79, 0x1d9e, 0x1750, 0xcf3a, 0xbefb, 0xce87, 0x0, 0x1);
        gbc.writeMem(0x9f79, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1d9e, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9f79));
        // 47 01AC
        gbc.setState(0x2159, 0xe96, 0x3050, 0x927f, 0xc7cf, 0x78cb, 0x0, 0x0);
        gbc.writeMem(0x2159, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x215a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01AD
        gbc.setState(0xe4fa, 0x623f, 0x3330, 0xda86, 0x8c95, 0x45cf, 0x1, 0x1);
        gbc.writeMem(0xe4fa, { 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe4fa));
        // 47 01AE
        gbc.setState(0xb0da, 0xec10, 0xe2b0, 0x30c4, 0x1ea9, 0xf830, 0x0, 0x0);
        gbc.writeMem(0xb0da, { 0x47 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xb0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb0da));
        // 47 01AF
        gbc.setState(0x7e72, 0x4496, 0x52f0, 0xd35e, 0x83e6, 0x1192, 0x0, 0x1);
        gbc.writeMem(0x7e72, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4496, gbc.sp());
        EXPECT(0x7e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01B0
        gbc.setState(0x7915, 0x1ea7, 0x7790, 0x3280, 0x639f, 0xd868, 0x1, 0x0);
        gbc.writeMem(0x7915, { 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01B1
        gbc.setState(0x5aee, 0xb9b2, 0xdc0, 0x4bca, 0xf77b, 0x635b, 0x0, 0x0);
        gbc.writeMem(0x5aee, { 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0x5aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01B2
        gbc.setState(0x1e71, 0xb826, 0xae0, 0x5eea, 0xded3, 0x56be, 0x1, 0x0);
        gbc.writeMem(0x1e71, { 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb826, gbc.sp());
        EXPECT(0x1e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01B4
        gbc.setState(0x3fa, 0xdea3, 0x150, 0xcc90, 0xa708, 0x9db5, 0x0, 0x1);
        gbc.writeMem(0x3fa, { 0x47 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdea3, gbc.sp());
        EXPECT(0x3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01B5
        gbc.setState(0xdb79, 0x1988, 0x9b00, 0x68f3, 0x21b3, 0xd652, 0x0, 0x1);
        gbc.writeMem(0xdb79, { 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1988, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb79));
        // 47 01B6
        gbc.setState(0xdbcd, 0x9043, 0x4a80, 0xf5, 0xa93b, 0x1833, 0x1, 0x1);
        gbc.writeMem(0xdbcd, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdbcd));
        // 47 01B7
        gbc.setState(0x11d6, 0x1cc2, 0xee90, 0x4f8b, 0xc788, 0x50b8, 0x1, 0x0);
        gbc.writeMem(0x11d6, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x11d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01B8
        gbc.setState(0xa22f, 0x7c2c, 0x1030, 0xcbfc, 0x7b47, 0x827a, 0x0, 0x1);
        gbc.writeMem(0xa22f, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7c2c, gbc.sp());
        EXPECT(0xa230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa22f));
        // 47 01B9
        gbc.setState(0xab74, 0x8bd8, 0x14f0, 0x3e83, 0x5b9a, 0xf7c8, 0x1, 0x0);
        gbc.writeMem(0xab74, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8bd8, gbc.sp());
        EXPECT(0xab75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xab74));
        // 47 01BA
        gbc.setState(0xced8, 0xadfd, 0x3250, 0x80a5, 0xd3b9, 0xca10, 0x0, 0x0);
        gbc.writeMem(0xced8, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xadfd, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xced8));
        // 47 01BC
        gbc.setState(0xe9ea, 0x7a10, 0x6b70, 0x2188, 0x35dd, 0x8c40, 0x1, 0x0);
        gbc.writeMem(0xe9ea, { 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0xe9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9ea));
        // 47 01BD
        gbc.setState(0xab8b, 0x92c3, 0x9c90, 0x9379, 0x2d, 0x709d, 0x0, 0x1);
        gbc.writeMem(0xab8b, { 0x47 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xab8b));
        // 47 01BE
        gbc.setState(0xa73, 0x9211, 0x4540, 0x4121, 0xfdd4, 0x9d7c, 0x0, 0x0);
        gbc.writeMem(0xa73, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01BF
        gbc.setState(0xadfc, 0xb7f, 0x5580, 0x7d47, 0xcc3c, 0x2b69, 0x0, 0x1);
        gbc.writeMem(0xadfc, { 0x47 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb7f, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xadfc));
        // 47 01C1
        gbc.setState(0x7979, 0x2ba9, 0xac80, 0x37c4, 0x2232, 0x43c6, 0x0, 0x0);
        gbc.writeMem(0x7979, { 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2ba9, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01C2
        gbc.setState(0xbeb1, 0x6168, 0x3190, 0x452e, 0x90f9, 0x1197, 0x0, 0x1);
        gbc.writeMem(0xbeb1, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0xbeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbeb1));
        // 47 01C3
        gbc.setState(0x9390, 0x5d8b, 0xdca0, 0x80c4, 0x11bd, 0x7386, 0x1, 0x1);
        gbc.writeMem(0x9390, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d8b, gbc.sp());
        EXPECT(0x9391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9390));
        // 47 01C4
        gbc.setState(0xdc41, 0xfb73, 0xde70, 0x6c13, 0xe9a9, 0x6107, 0x0, 0x0);
        gbc.writeMem(0xdc41, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfb73, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdc41));
        // 47 01C5
        gbc.setState(0x211d, 0xb36f, 0xaf20, 0x7f43, 0x2d74, 0xf470, 0x1, 0x0);
        gbc.writeMem(0x211d, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb36f, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01C6
        gbc.setState(0x34, 0xbc91, 0xc060, 0xf99b, 0xb552, 0xc389, 0x0, 0x0);
        gbc.writeMem(0x34, { 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01C7
        gbc.setState(0x1b9c, 0x95eb, 0xebd0, 0x6942, 0x4c8b, 0x450a, 0x0, 0x0);
        gbc.writeMem(0x1b9c, { 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x95eb, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01C9
        gbc.setState(0xcd9d, 0xd62f, 0x3f90, 0x2ee5, 0xafca, 0x5969, 0x1, 0x1);
        gbc.writeMem(0xcd9d, { 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0xcd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcd9d));
        // 47 01CA
        gbc.setState(0xb974, 0x8e67, 0xb7e0, 0x3d98, 0x6c7a, 0x63c1, 0x1, 0x1);
        gbc.writeMem(0xb974, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8e67, gbc.sp());
        EXPECT(0xb975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb974));
        // 47 01CB
        gbc.setState(0x7ae, 0xc7c8, 0xd8b0, 0x225a, 0x6824, 0x7851, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01CC
        gbc.setState(0x706c, 0x99f8, 0xeba0, 0xaeb, 0x7e25, 0x1148, 0x1, 0x1);
        gbc.writeMem(0x706c, { 0x47 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x99f8, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01CD
        gbc.setState(0xea08, 0x3de9, 0xc880, 0xa6be, 0x3674, 0x63f6, 0x0, 0x0);
        gbc.writeMem(0xea08, { 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xea08));
        // 47 01CE
        gbc.setState(0x5328, 0x6435, 0xcd0, 0xa07e, 0xb093, 0x8e5c, 0x1, 0x0);
        gbc.writeMem(0x5328, { 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x5329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01CF
        gbc.setState(0xba0d, 0x928d, 0x7d60, 0xb973, 0xde34, 0x4311, 0x1, 0x1);
        gbc.writeMem(0xba0d, { 0x47 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0xba0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xba0d));
        // 47 01D0
        gbc.setState(0x418e, 0x17a7, 0xfee0, 0x7b67, 0x4358, 0x45c6, 0x0, 0x0);
        gbc.writeMem(0x418e, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x17a7, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01D1
        gbc.setState(0x8465, 0x57af, 0x7630, 0x333, 0xbadf, 0x87bd, 0x1, 0x1);
        gbc.writeMem(0x8465, { 0x47 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x57af, gbc.sp());
        EXPECT(0x8466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8465));
        // 47 01D2
        gbc.setState(0x34ba, 0x7f56, 0xef60, 0xcd03, 0x26cf, 0xc527, 0x0, 0x0);
        gbc.writeMem(0x34ba, { 0x47 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7f56, gbc.sp());
        EXPECT(0x34bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01D3
        gbc.setState(0xb09d, 0x4717, 0xdab0, 0xd01, 0xe5f8, 0x19ae, 0x0, 0x1);
        gbc.writeMem(0xb09d, { 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4717, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb09d));
        // 47 01D4
        gbc.setState(0x5679, 0x1f62, 0x87a0, 0x1b32, 0xb40f, 0xdfea, 0x0, 0x0);
        gbc.writeMem(0x5679, { 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1f62, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01D5
        gbc.setState(0xeefc, 0x39ac, 0x9570, 0xcb92, 0xaaf, 0xbee3, 0x1, 0x0);
        gbc.writeMem(0xeefc, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeefc));
        // 47 01D6
        gbc.setState(0x62d2, 0x9cad, 0xb9c0, 0x2864, 0x548d, 0xcaf3, 0x0, 0x1);
        gbc.writeMem(0x62d2, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0x62d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01D7
        gbc.setState(0x89b8, 0xb5b2, 0x3c50, 0xff6e, 0x3d9, 0xba3, 0x1, 0x0);
        gbc.writeMem(0x89b8, { 0x47 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb5b2, gbc.sp());
        EXPECT(0x89b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x89b8));
        // 47 01D8
        gbc.setState(0xd04a, 0xa2f7, 0x3970, 0x8c6, 0xbbd6, 0x2237, 0x1, 0x0);
        gbc.writeMem(0xd04a, { 0x47 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa2f7, gbc.sp());
        EXPECT(0xd04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd04a));
        // 47 01D9
        gbc.setState(0x4860, 0x726c, 0x2c90, 0x3ac0, 0x525d, 0x1e1a, 0x1, 0x1);
        gbc.writeMem(0x4860, { 0x47 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x726c, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01DA
        gbc.setState(0x6b8, 0x46de, 0x9200, 0x96b, 0x7576, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x6b8, { 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01DB
        gbc.setState(0x81a5, 0xa6d3, 0x1f10, 0xd5c9, 0xb008, 0xd64, 0x1, 0x1);
        gbc.writeMem(0x81a5, { 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0x81a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x81a5));
        // 47 01DC
        gbc.setState(0x4929, 0x206c, 0x9790, 0x1a73, 0x3512, 0x9761, 0x0, 0x0);
        gbc.writeMem(0x4929, { 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x206c, gbc.sp());
        EXPECT(0x492a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01DD
        gbc.setState(0x7688, 0x9d6f, 0xeed0, 0xf58e, 0x118, 0xaae7, 0x0, 0x0);
        gbc.writeMem(0x7688, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01DE
        gbc.setState(0xd5c6, 0xc653, 0x62d0, 0x7c96, 0xa9cf, 0x5377, 0x1, 0x1);
        gbc.writeMem(0xd5c6, { 0x47 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc653, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd5c6));
        // 47 01DF
        gbc.setState(0xd674, 0xec89, 0xe3a0, 0x4a26, 0x1e4b, 0x5346, 0x1, 0x0);
        gbc.writeMem(0xd674, { 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0xd675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd674));
        // 47 01E1
        gbc.setState(0x29e8, 0xbb2, 0xfed0, 0xbfbd, 0x411, 0x7a5c, 0x1, 0x0);
        gbc.writeMem(0x29e8, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbb2, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01E2
        gbc.setState(0x9f4a, 0xf268, 0x5210, 0xfa41, 0xc6b8, 0x59aa, 0x1, 0x1);
        gbc.writeMem(0x9f4a, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf268, gbc.sp());
        EXPECT(0x9f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9f4a));
        // 47 01E4
        gbc.setState(0xbb9, 0x1ab3, 0x2980, 0xa4e4, 0x80f2, 0x1895, 0x0, 0x0);
        gbc.writeMem(0xbb9, { 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01E5
        gbc.setState(0x4229, 0xe7a3, 0x890, 0x44a3, 0xd24b, 0x6665, 0x0, 0x0);
        gbc.writeMem(0x4229, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x422a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01E6
        gbc.setState(0x55d0, 0xd00b, 0xdc50, 0x88e3, 0xc66b, 0xbb4a, 0x1, 0x1);
        gbc.writeMem(0x55d0, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd00b, gbc.sp());
        EXPECT(0x55d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01E7
        gbc.setState(0x5d33, 0x2dce, 0x9180, 0xb62d, 0x4a46, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0x5d33, { 0x47 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01E9
        gbc.setState(0xed5, 0x2fd3, 0xc050, 0xbc85, 0x73e7, 0x9c0e, 0x1, 0x0);
        gbc.writeMem(0xed5, { 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0xed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01EA
        gbc.setState(0xadb2, 0xc0b7, 0x7ee0, 0x3ba1, 0x69d5, 0x6bcf, 0x0, 0x0);
        gbc.writeMem(0xadb2, { 0x47 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc0b7, gbc.sp());
        EXPECT(0xadb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xadb2));
        // 47 01EB
        gbc.setState(0x8453, 0x55e2, 0xbf0, 0x83e8, 0x1b08, 0x24ab, 0x0, 0x0);
        gbc.writeMem(0x8453, { 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x55e2, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8453));
        // 47 01EC
        gbc.setState(0xe72c, 0x7b16, 0xac20, 0xee2c, 0x8cf8, 0x3f1f, 0x1, 0x1);
        gbc.writeMem(0xe72c, { 0x47 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7b16, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe72c));
        // 47 01ED
        gbc.setState(0xf8c, 0xb606, 0xa450, 0x3b03, 0xf855, 0x4c2f, 0x1, 0x0);
        gbc.writeMem(0xf8c, { 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01EE
        gbc.setState(0x3930, 0xa9a, 0x8b80, 0x9e23, 0xce7c, 0x14b3, 0x1, 0x1);
        gbc.writeMem(0x3930, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa9a, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01EF
        gbc.setState(0x9b7, 0xd1db, 0xf9d0, 0xc7a0, 0xb6fa, 0x2a28, 0x1, 0x0);
        gbc.writeMem(0x9b7, { 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0x9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01F0
        gbc.setState(0xb55d, 0xda79, 0x8f90, 0x1e9a, 0x62cc, 0x4dff, 0x1, 0x1);
        gbc.writeMem(0xb55d, { 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0xb55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb55d));
        // 47 01F1
        gbc.setState(0xc89, 0x9109, 0x60a0, 0xe720, 0x5fca, 0x7ce5, 0x1, 0x0);
        gbc.writeMem(0xc89, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01F2
        gbc.setState(0x4da, 0x8138, 0xcab0, 0x3dac, 0x3914, 0x9f07, 0x0, 0x0);
        gbc.writeMem(0x4da, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8138, gbc.sp());
        EXPECT(0x4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01F3
        gbc.setState(0xd0f, 0x4265, 0xa2a0, 0x6365, 0x42c9, 0xf111, 0x1, 0x0);
        gbc.writeMem(0xd0f, { 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4265, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01F4
        gbc.setState(0x5ded, 0xf127, 0x9d0, 0xa9b1, 0x362, 0x4a77, 0x0, 0x0);
        gbc.writeMem(0x5ded, { 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf127, gbc.sp());
        EXPECT(0x5dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01F5
        gbc.setState(0x382, 0xf002, 0x4b80, 0x51b7, 0xdfa, 0x97a1, 0x1, 0x0);
        gbc.writeMem(0x382, { 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01F6
        gbc.setState(0xa2c4, 0xfd27, 0xfd00, 0xc914, 0x15b0, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa2c4));
        // 47 01F7
        gbc.setState(0x3a66, 0xf50f, 0x72d0, 0x30af, 0x2a5e, 0x4319, 0x1, 0x0);
        gbc.writeMem(0x3a66, { 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf50f, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 01F8
        gbc.setState(0x9d6f, 0x27ea, 0xe7e0, 0x4bd5, 0x9bdb, 0xb0de, 0x1, 0x0);
        gbc.writeMem(0x9d6f, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x27ea, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9d6f));
        // 47 01F9
        gbc.setState(0xe436, 0xd300, 0x3a10, 0x15a, 0x50cc, 0xd785, 0x0, 0x0);
        gbc.writeMem(0xe436, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd300, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe436));
        // 47 01FA
        gbc.setState(0x5cef, 0xcbde, 0xc8a0, 0x5a7b, 0x6acc, 0x8764, 0x1, 0x0);
        gbc.writeMem(0x5cef, { 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcbde, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01FB
        gbc.setState(0xa176, 0x414d, 0x3e40, 0xeb83, 0xa480, 0xb720, 0x0, 0x1);
        gbc.writeMem(0xa176, { 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x414d, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa176));
        // 47 01FC
        gbc.setState(0x3a9b, 0x90, 0x4520, 0xf9b1, 0x4a06, 0x11c, 0x0, 0x1);
        gbc.writeMem(0x3a9b, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x90, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01FD
        gbc.setState(0xe8f8, 0xe9c, 0x7ae0, 0x8a83, 0x1507, 0xbb1c, 0x0, 0x1);
        gbc.writeMem(0xe8f8, { 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe9c, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe8f8));
        // 47 01FE
        gbc.setState(0x3472, 0xbfd, 0x8e40, 0x3190, 0x4ae9, 0x1a05, 0x1, 0x0);
        gbc.writeMem(0x3472, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbfd, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 01FF
        gbc.setState(0x9e66, 0x603, 0x2270, 0x648e, 0x6dda, 0x9113, 0x1, 0x1);
        gbc.writeMem(0x9e66, { 0x47 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9e66));
        // 47 0200
        gbc.setState(0x1a1f, 0xe359, 0xb050, 0x8ee2, 0x2145, 0xa7c3, 0x1, 0x0);
        gbc.writeMem(0x1a1f, { 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0202
        gbc.setState(0xec6a, 0x9fb2, 0x77e0, 0xbba1, 0xae18, 0x7b32, 0x0, 0x1);
        gbc.writeMem(0xec6a, { 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0xec6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xec6a));
        // 47 0203
        gbc.setState(0xbeaf, 0x8cef, 0x4920, 0x68ef, 0xd0e2, 0xf775, 0x1, 0x1);
        gbc.writeMem(0xbeaf, { 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbeaf));
        // 47 0205
        gbc.setState(0xe20b, 0x4b10, 0x34a0, 0x4cc2, 0x6734, 0xf6c, 0x0, 0x1);
        gbc.writeMem(0xe20b, { 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4b10, gbc.sp());
        EXPECT(0xe20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe20b));
        // 47 0206
        gbc.setState(0x1d3e, 0x3119, 0xf140, 0x354e, 0xcf96, 0x89cf, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x47 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3119, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0207
        gbc.setState(0x401a, 0x411f, 0x6b60, 0x397f, 0x7b65, 0xb14f, 0x1, 0x1);
        gbc.writeMem(0x401a, { 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x411f, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0208
        gbc.setState(0x7982, 0x9a40, 0x6dc0, 0x3c94, 0xe2cd, 0x9157, 0x1, 0x0);
        gbc.writeMem(0x7982, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9a40, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0209
        gbc.setState(0x49cc, 0xf204, 0x32d0, 0xde4f, 0x389e, 0x8d2c, 0x0, 0x1);
        gbc.writeMem(0x49cc, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0x49cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 020B
        gbc.setState(0x7851, 0xd78f, 0xddb0, 0x57dc, 0x8e71, 0xb25b, 0x1, 0x1);
        gbc.writeMem(0x7851, { 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd78f, gbc.sp());
        EXPECT(0x7852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 020C
        gbc.setState(0x3818, 0x576f, 0x7990, 0xa848, 0x92cc, 0x66c5, 0x0, 0x1);
        gbc.writeMem(0x3818, { 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 020D
        gbc.setState(0x3a43, 0x8544, 0xc700, 0xff6f, 0xc35b, 0xac1f, 0x0, 0x0);
        gbc.writeMem(0x3a43, { 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8544, gbc.sp());
        EXPECT(0x3a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 020E
        gbc.setState(0x30bb, 0x91e5, 0xd050, 0x9bc4, 0x4f16, 0x41af, 0x0, 0x1);
        gbc.writeMem(0x30bb, { 0x47 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x91e5, gbc.sp());
        EXPECT(0x30bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0210
        gbc.setState(0x9c17, 0xd053, 0x4210, 0xd6cc, 0xaaf5, 0xbadb, 0x0, 0x0);
        gbc.writeMem(0x9c17, { 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd053, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9c17));
        // 47 0211
        gbc.setState(0x331e, 0x7a2a, 0x1a20, 0xcc4c, 0x28f4, 0x9458, 0x0, 0x0);
        gbc.writeMem(0x331e, { 0x47 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0x331f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0212
        gbc.setState(0x666d, 0x216e, 0x5370, 0x4f50, 0x60bf, 0xd825, 0x0, 0x1);
        gbc.writeMem(0x666d, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x216e, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0213
        gbc.setState(0x9ef3, 0xe150, 0x4d00, 0x2196, 0x2a8, 0x2d1f, 0x0, 0x1);
        gbc.writeMem(0x9ef3, { 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0x9ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9ef3));
        // 47 0214
        gbc.setState(0x4071, 0x5c30, 0xc7d0, 0x8110, 0x6327, 0xf5da, 0x0, 0x0);
        gbc.writeMem(0x4071, { 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5c30, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0215
        gbc.setState(0xacfb, 0x6ceb, 0xe600, 0xb98b, 0x4e5d, 0x6492, 0x0, 0x0);
        gbc.writeMem(0xacfb, { 0x47 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xacfb));
        // 47 0216
        gbc.setState(0x8ac5, 0xfea6, 0xf930, 0x5fb4, 0x7add, 0xbfad, 0x0, 0x0);
        gbc.writeMem(0x8ac5, { 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfea6, gbc.sp());
        EXPECT(0x8ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8ac5));
        // 47 0217
        gbc.setState(0x9315, 0x5adb, 0x35d0, 0xed4d, 0x939d, 0xbf9e, 0x1, 0x1);
        gbc.writeMem(0x9315, { 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5adb, gbc.sp());
        EXPECT(0x9316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9315));
        // 47 0218
        gbc.setState(0xac8, 0xf480, 0x6750, 0xefe5, 0xd4c4, 0x8b91, 0x0, 0x1);
        gbc.writeMem(0xac8, { 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0219
        gbc.setState(0x9403, 0x15fc, 0x6f40, 0x7b9d, 0xc5fd, 0xb72b, 0x1, 0x1);
        gbc.writeMem(0x9403, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9403));
        // 47 021A
        gbc.setState(0xc108, 0x5efd, 0x310, 0xb3de, 0x9e8a, 0x1355, 0x0, 0x0);
        gbc.writeMem(0xc108, { 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5efd, gbc.sp());
        EXPECT(0xc109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc108));
        // 47 021B
        gbc.setState(0xa4a2, 0xc7fa, 0xa000, 0x302e, 0x4073, 0x182a, 0x1, 0x1);
        gbc.writeMem(0xa4a2, { 0x47 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc7fa, gbc.sp());
        EXPECT(0xa4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa4a2));
        // 47 021C
        gbc.setState(0xd30a, 0x2cb, 0xd410, 0x532e, 0x73e1, 0xefbc, 0x1, 0x1);
        gbc.writeMem(0xd30a, { 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2cb, gbc.sp());
        EXPECT(0xd30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd30a));
        // 47 021D
        gbc.setState(0x930e, 0x98ef, 0x3070, 0x70e1, 0x7b5b, 0xa424, 0x1, 0x0);
        gbc.writeMem(0x930e, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0x930f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x930e));
        // 47 021E
        gbc.setState(0x9609, 0x7e00, 0xc8d0, 0xd349, 0x85c1, 0x9217, 0x0, 0x1);
        gbc.writeMem(0x9609, { 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7e00, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9609));
        // 47 021F
        gbc.setState(0x56d6, 0x9981, 0xe380, 0x2385, 0x4730, 0x84e2, 0x0, 0x0);
        gbc.writeMem(0x56d6, { 0x47 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0x56d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0220
        gbc.setState(0xf61, 0x696a, 0xbd0, 0x6e33, 0x7f47, 0xff14, 0x0, 0x1);
        gbc.writeMem(0xf61, { 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0xf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0221
        gbc.setState(0x9a2, 0xb875, 0x2b0, 0xb383, 0x3f28, 0xf0e5, 0x0, 0x1);
        gbc.writeMem(0x9a2, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb875, gbc.sp());
        EXPECT(0x9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0223
        gbc.setState(0xe98d, 0xf80c, 0xdc10, 0xd25f, 0x21a7, 0x78e4, 0x0, 0x0);
        gbc.writeMem(0xe98d, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf80c, gbc.sp());
        EXPECT(0xe98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe98d));
        // 47 0224
        gbc.setState(0xd613, 0x8c96, 0xd20, 0x716d, 0x2ccc, 0x11d1, 0x1, 0x0);
        gbc.writeMem(0xd613, { 0x47 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0xd614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd613));
        // 47 0225
        gbc.setState(0x908d, 0xd7cd, 0xb140, 0x65db, 0x8a05, 0x3649, 0x0, 0x0);
        gbc.writeMem(0x908d, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd7cd, gbc.sp());
        EXPECT(0x908e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x908d));
        // 47 0226
        gbc.setState(0xa1d6, 0xa0c5, 0xb670, 0xa569, 0x45e7, 0xd04, 0x1, 0x0);
        gbc.writeMem(0xa1d6, { 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa1d6));
        // 47 0227
        gbc.setState(0x560, 0x2f39, 0xa590, 0x4e3, 0x6afb, 0x4981, 0x1, 0x0);
        gbc.writeMem(0x560, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0228
        gbc.setState(0x17b6, 0xe9bf, 0x8090, 0xe754, 0xbb9b, 0x5ae1, 0x0, 0x1);
        gbc.writeMem(0x17b6, { 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0229
        gbc.setState(0x29d8, 0xc5e6, 0xe920, 0x41cd, 0xbadd, 0xf466, 0x1, 0x1);
        gbc.writeMem(0x29d8, { 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0x29d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 022A
        gbc.setState(0xc80f, 0x3bbe, 0xf7e0, 0x57a6, 0xcda8, 0x2adc, 0x1, 0x0);
        gbc.writeMem(0xc80f, { 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0xc810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc80f));
        // 47 022B
        gbc.setState(0x6832, 0x90e3, 0x7800, 0xe50f, 0xed40, 0xe3e6, 0x0, 0x0);
        gbc.writeMem(0x6832, { 0x47 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 022C
        gbc.setState(0xe254, 0xf92d, 0xb550, 0xa568, 0x907, 0xb90f, 0x1, 0x1);
        gbc.writeMem(0xe254, { 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf92d, gbc.sp());
        EXPECT(0xe255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe254));
        // 47 022D
        gbc.setState(0x3adf, 0x7616, 0x4160, 0x92e5, 0x6790, 0xe1bd, 0x1, 0x0);
        gbc.writeMem(0x3adf, { 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 022E
        gbc.setState(0x8b3f, 0x9add, 0xf910, 0xa455, 0xf3fd, 0x25b, 0x1, 0x1);
        gbc.writeMem(0x8b3f, { 0x47 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8b3f));
        // 47 022F
        gbc.setState(0x1a84, 0x5717, 0xfae0, 0xc665, 0xfad3, 0x35ae, 0x1, 0x0);
        gbc.writeMem(0x1a84, { 0x47 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x1a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0230
        gbc.setState(0x58af, 0xe6b4, 0xea0, 0xaecf, 0x30d, 0xe349, 0x0, 0x0);
        gbc.writeMem(0x58af, { 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe6b4, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0231
        gbc.setState(0x3eb8, 0xff6d, 0x220, 0x8601, 0xd38, 0x567a, 0x0, 0x1);
        gbc.writeMem(0x3eb8, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xff6d, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0232
        gbc.setState(0x9b25, 0x575b, 0x25d0, 0x420b, 0x28b3, 0xa9db, 0x1, 0x0);
        gbc.writeMem(0x9b25, { 0x47 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x575b, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9b25));
        // 47 0233
        gbc.setState(0xd94d, 0x9311, 0x76c0, 0x79fd, 0x649b, 0x1e03, 0x0, 0x0);
        gbc.writeMem(0xd94d, { 0x47 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd94d));
        // 47 0234
        gbc.setState(0xe9f8, 0xfbe, 0x6a50, 0x17d3, 0x56ad, 0x71a0, 0x1, 0x1);
        gbc.writeMem(0xe9f8, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfbe, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9f8));
        // 47 0235
        gbc.setState(0x6380, 0x4744, 0x5b50, 0xb0b5, 0x7017, 0x69d, 0x0, 0x1);
        gbc.writeMem(0x6380, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0236
        gbc.setState(0x9d47, 0x61ef, 0x5ad0, 0x6e57, 0x29aa, 0xa012, 0x1, 0x1);
        gbc.writeMem(0x9d47, { 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x61ef, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9d47));
        // 47 0237
        gbc.setState(0x455d, 0xe1af, 0xc5c0, 0x5d24, 0x20b9, 0xce80, 0x0, 0x1);
        gbc.writeMem(0x455d, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe1af, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0238
        gbc.setState(0xa491, 0xc5d2, 0x8bc0, 0xbe64, 0xddae, 0x2470, 0x1, 0x0);
        gbc.writeMem(0xa491, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0xa492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa491));
        // 47 0239
        gbc.setState(0xd5be, 0x95bd, 0xb980, 0x8232, 0xb3e2, 0x94d0, 0x0, 0x1);
        gbc.writeMem(0xd5be, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x95bd, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd5be));
        // 47 023A
        gbc.setState(0xbe1, 0x310b, 0x8f60, 0x6313, 0x7b57, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0xbe1, { 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0xbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 023B
        gbc.setState(0xb17d, 0x9fc4, 0x2a20, 0x6386, 0x593c, 0x958f, 0x0, 0x1);
        gbc.writeMem(0xb17d, { 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb17d));
        // 47 023C
        gbc.setState(0x8746, 0x6650, 0x1380, 0xd2f5, 0x2da3, 0x5d25, 0x1, 0x0);
        gbc.writeMem(0x8746, { 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8746));
        // 47 023D
        gbc.setState(0xa5bf, 0xbc34, 0xf5b0, 0x2dbf, 0x486c, 0xb6e8, 0x1, 0x1);
        gbc.writeMem(0xa5bf, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbc34, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa5bf));
        // 47 023E
        gbc.setState(0x15d4, 0x639e, 0xa390, 0x8935, 0xaaac, 0x25e3, 0x1, 0x0);
        gbc.writeMem(0x15d4, { 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x639e, gbc.sp());
        EXPECT(0x15d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 023F
        gbc.setState(0xcb0a, 0x5116, 0x5310, 0x4343, 0x67db, 0x43bf, 0x0, 0x0);
        gbc.writeMem(0xcb0a, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xcb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcb0a));
        // 47 0240
        gbc.setState(0x5446, 0xcc8b, 0x18f0, 0xe809, 0x539d, 0x3948, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0x47 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcc8b, gbc.sp());
        EXPECT(0x5447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0241
        gbc.setState(0xddcb, 0x2282, 0x48a0, 0x412a, 0x5155, 0x1c9f, 0x1, 0x1);
        gbc.writeMem(0xddcb, { 0x47 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2282, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xddcb));
        // 47 0242
        gbc.setState(0x3fd6, 0xd78d, 0xafc0, 0xbb10, 0x7d82, 0x676f, 0x1, 0x0);
        gbc.writeMem(0x3fd6, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd78d, gbc.sp());
        EXPECT(0x3fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0243
        gbc.setState(0x4d79, 0x46b, 0x17f0, 0x9d2c, 0xa27e, 0x8a87, 0x0, 0x0);
        gbc.writeMem(0x4d79, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x46b, gbc.sp());
        EXPECT(0x4d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0245
        gbc.setState(0x5752, 0x6a1c, 0xe10, 0x9750, 0x7bff, 0x949e, 0x0, 0x0);
        gbc.writeMem(0x5752, { 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6a1c, gbc.sp());
        EXPECT(0x5753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0246
        gbc.setState(0xee8d, 0x48fe, 0x670, 0xfda3, 0x1f5b, 0x8953, 0x1, 0x1);
        gbc.writeMem(0xee8d, { 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x48fe, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xee8d));
        // 47 0248
        gbc.setState(0x3c36, 0x8e2b, 0x3f20, 0x7f1, 0xa918, 0x51a4, 0x1, 0x1);
        gbc.writeMem(0x3c36, { 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x3c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0249
        gbc.setState(0x7e0b, 0x94da, 0x1be0, 0x9df5, 0x8389, 0x130d, 0x1, 0x1);
        gbc.writeMem(0x7e0b, { 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x7e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 024A
        gbc.setState(0xbb7, 0x90c, 0xb760, 0x84fc, 0xe9d, 0x288f, 0x1, 0x0);
        gbc.writeMem(0xbb7, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x90c, gbc.sp());
        EXPECT(0xbb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 024B
        gbc.setState(0xd1bc, 0x1a86, 0x7b50, 0xc7d8, 0x50a, 0xb893, 0x1, 0x0);
        gbc.writeMem(0xd1bc, { 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a86, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd1bc));
        // 47 024C
        gbc.setState(0xeda7, 0x6bd3, 0xbff0, 0x3441, 0xfc68, 0xed30, 0x0, 0x1);
        gbc.writeMem(0xeda7, { 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xeda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeda7));
        // 47 024D
        gbc.setState(0x83d9, 0xc729, 0x11a0, 0x198f, 0xb3fc, 0xb534, 0x1, 0x0);
        gbc.writeMem(0x83d9, { 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc729, gbc.sp());
        EXPECT(0x83da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x83d9));
        // 47 024E
        gbc.setState(0xc26d, 0xe36f, 0xfe50, 0xb139, 0x5845, 0xf46a, 0x1, 0x1);
        gbc.writeMem(0xc26d, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0xc26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc26d));
        // 47 024F
        gbc.setState(0xd940, 0xdbec, 0x5d0, 0xac0d, 0xd416, 0xee1d, 0x0, 0x0);
        gbc.writeMem(0xd940, { 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd940));
        // 47 0250
        gbc.setState(0x22d5, 0xfdcd, 0x17d0, 0xebab, 0xb0b3, 0x988f, 0x0, 0x0);
        gbc.writeMem(0x22d5, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfdcd, gbc.sp());
        EXPECT(0x22d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0253
        gbc.setState(0xca1f, 0xbe33, 0x92a0, 0x9bb, 0x7ad4, 0xfced, 0x1, 0x1);
        gbc.writeMem(0xca1f, { 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xca1f));
        // 47 0254
        gbc.setState(0xd263, 0x8ba2, 0x270, 0xf99b, 0xc025, 0x9fa, 0x1, 0x0);
        gbc.writeMem(0xd263, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8ba2, gbc.sp());
        EXPECT(0xd264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd263));
        // 47 0255
        gbc.setState(0xed0b, 0x240d, 0xe7c0, 0x510, 0x2797, 0x6227, 0x0, 0x0);
        gbc.writeMem(0xed0b, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x240d, gbc.sp());
        EXPECT(0xed0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xed0b));
        // 47 0256
        gbc.setState(0x1edf, 0x2b28, 0x11f0, 0xb11c, 0xccdf, 0x74e7, 0x0, 0x1);
        gbc.writeMem(0x1edf, { 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2b28, gbc.sp());
        EXPECT(0x1ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0257
        gbc.setState(0x693, 0x7de5, 0x1930, 0x91ce, 0x4a35, 0x3a8c, 0x1, 0x1);
        gbc.writeMem(0x693, { 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0258
        gbc.setState(0xc168, 0x15a3, 0x16b0, 0x4fda, 0x7e74, 0x1187, 0x0, 0x1);
        gbc.writeMem(0xc168, { 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc168));
        // 47 0259
        gbc.setState(0x944a, 0xfd95, 0x820, 0x4bba, 0x56d7, 0x8304, 0x1, 0x1);
        gbc.writeMem(0x944a, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfd95, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x944a));
        // 47 025A
        gbc.setState(0xdf1e, 0x8bda, 0x75f0, 0x248c, 0x3b46, 0x775e, 0x1, 0x0);
        gbc.writeMem(0xdf1e, { 0x47 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0xdf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdf1e));
        // 47 025D
        gbc.setState(0xd819, 0x8924, 0x1170, 0x2a34, 0x3b2b, 0x3e7f, 0x1, 0x1);
        gbc.writeMem(0xd819, { 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8924, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd819));
        // 47 025E
        gbc.setState(0x235f, 0x4d32, 0x730, 0x9bd2, 0x5b2b, 0xe98, 0x1, 0x1);
        gbc.writeMem(0x235f, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4d32, gbc.sp());
        EXPECT(0x2360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 025F
        gbc.setState(0xd0dc, 0x2efb, 0xa70, 0x913a, 0x15bd, 0xe, 0x1, 0x0);
        gbc.writeMem(0xd0dc, { 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2efb, gbc.sp());
        EXPECT(0xd0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd0dc));
        // 47 0260
        gbc.setState(0x8e98, 0x5186, 0x410, 0xb5dc, 0xa787, 0xb05d, 0x1, 0x0);
        gbc.writeMem(0x8e98, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5186, gbc.sp());
        EXPECT(0x8e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8e98));
        // 47 0261
        gbc.setState(0x233d, 0x8458, 0xc4b0, 0x18b4, 0x7ade, 0xc280, 0x0, 0x1);
        gbc.writeMem(0x233d, { 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8458, gbc.sp());
        EXPECT(0x233e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0262
        gbc.setState(0x8353, 0x17f8, 0x6130, 0x9cec, 0xca2, 0x8aa5, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x17f8, gbc.sp());
        EXPECT(0x8354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8353));
        // 47 0263
        gbc.setState(0xc9da, 0xc6b4, 0x7b60, 0x1297, 0x1304, 0x473, 0x1, 0x1);
        gbc.writeMem(0xc9da, { 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc9da));
        // 47 0264
        gbc.setState(0x3c86, 0x6010, 0x2c20, 0x1daf, 0xdc01, 0xfeb6, 0x1, 0x0);
        gbc.writeMem(0x3c86, { 0x47 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0265
        gbc.setState(0x7728, 0x6135, 0x31e0, 0xb1a8, 0x1f16, 0xac4e, 0x0, 0x0);
        gbc.writeMem(0x7728, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x7729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0266
        gbc.setState(0xabbd, 0x359a, 0xd150, 0x66bb, 0x54e3, 0x64b7, 0x0, 0x1);
        gbc.writeMem(0xabbd, { 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x359a, gbc.sp());
        EXPECT(0xabbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xabbd));
        // 47 0267
        gbc.setState(0xea8e, 0xbdfc, 0x1110, 0x24, 0x7ed9, 0x8686, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0xea8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xea8e));
        // 47 0269
        gbc.setState(0xdcdf, 0xc6e5, 0x5c80, 0xc142, 0xf06a, 0x62b4, 0x1, 0x0);
        gbc.writeMem(0xdcdf, { 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc6e5, gbc.sp());
        EXPECT(0xdce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdcdf));
        // 47 026A
        gbc.setState(0x1d54, 0x50b7, 0x34c0, 0x7c28, 0x145b, 0xa29f, 0x1, 0x1);
        gbc.writeMem(0x1d54, { 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0x1d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 026B
        gbc.setState(0x1f93, 0xb3f0, 0x8ce0, 0x63bd, 0x58aa, 0xcedf, 0x1, 0x0);
        gbc.writeMem(0x1f93, { 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0x1f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 026C
        gbc.setState(0x83c, 0x780c, 0x11d0, 0x88ce, 0xd31d, 0x832e, 0x1, 0x0);
        gbc.writeMem(0x83c, { 0x47 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x780c, gbc.sp());
        EXPECT(0x83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 026D
        gbc.setState(0x9c68, 0xb87b, 0x6590, 0x7249, 0x5f50, 0x64e4, 0x0, 0x0);
        gbc.writeMem(0x9c68, { 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb87b, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9c68));
        // 47 026E
        gbc.setState(0xa7a3, 0xd9ca, 0x9ac0, 0x8ed0, 0x2275, 0x18ac, 0x0, 0x0);
        gbc.writeMem(0xa7a3, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa7a3));
        // 47 026F
        gbc.setState(0x5b6f, 0x24ef, 0xaee0, 0xa327, 0xc600, 0x10bb, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0x5b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0270
        gbc.setState(0x958, 0x5c25, 0x66e0, 0x778b, 0x6944, 0x52f0, 0x1, 0x1);
        gbc.writeMem(0x958, { 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0271
        gbc.setState(0xd725, 0x7e33, 0xe4d0, 0xe1c6, 0x9afb, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0xd725, { 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd725));
        // 47 0272
        gbc.setState(0xe9b5, 0x4b68, 0xee20, 0xe9c1, 0x474, 0x3de4, 0x0, 0x1);
        gbc.writeMem(0xe9b5, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b68, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe9b5));
        // 47 0274
        gbc.setState(0x48b5, 0xf330, 0xce40, 0x271c, 0x1bb1, 0xe23f, 0x1, 0x1);
        gbc.writeMem(0x48b5, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf330, gbc.sp());
        EXPECT(0x48b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0275
        gbc.setState(0xd752, 0xad75, 0xa510, 0xacfc, 0xbbbf, 0x4558, 0x0, 0x0);
        gbc.writeMem(0xd752, { 0x47 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd752));
        // 47 0276
        gbc.setState(0x6d05, 0x6633, 0xbda0, 0x63fd, 0x1403, 0x4d8, 0x0, 0x1);
        gbc.writeMem(0x6d05, { 0x47 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0277
        gbc.setState(0xaf49, 0x1583, 0xdd20, 0xedde, 0x6a0d, 0xd58b, 0x1, 0x1);
        gbc.writeMem(0xaf49, { 0x47 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xaf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaf49));
        // 47 0278
        gbc.setState(0x5db8, 0x7e1b, 0xe730, 0xfd66, 0x93f5, 0xfd5e, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7e1b, gbc.sp());
        EXPECT(0x5db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0279
        gbc.setState(0xa571, 0x3b31, 0xd5d0, 0xb5ae, 0x1f98, 0x18ec, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3b31, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa571));
        // 47 027A
        gbc.setState(0xc198, 0x6d2e, 0xd5d0, 0x71ad, 0xe379, 0x9c04, 0x1, 0x1);
        gbc.writeMem(0xc198, { 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc198));
        // 47 027B
        gbc.setState(0xc04a, 0xde93, 0x5cb0, 0x1f51, 0xba91, 0x5da0, 0x1, 0x1);
        gbc.writeMem(0xc04a, { 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0xc04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc04a));
        // 47 027D
        gbc.setState(0xcf65, 0x36fb, 0x49f0, 0x5ed2, 0x3c25, 0xb9ac, 0x0, 0x1);
        gbc.writeMem(0xcf65, { 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0xcf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcf65));
        // 47 027E
        gbc.setState(0xc374, 0x19b9, 0xbf10, 0x8380, 0x2a4, 0xe097, 0x0, 0x1);
        gbc.writeMem(0xc374, { 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x19b9, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc374));
        // 47 027F
        gbc.setState(0x6326, 0x8755, 0xfc10, 0x2014, 0x9371, 0x65af, 0x0, 0x0);
        gbc.writeMem(0x6326, { 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8755, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0280
        gbc.setState(0xc58b, 0xa552, 0xd8c0, 0xa3e7, 0xf741, 0xd23b, 0x0, 0x0);
        gbc.writeMem(0xc58b, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0xc58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc58b));
        // 47 0281
        gbc.setState(0x299, 0xc936, 0xb9b0, 0xd176, 0x4bdf, 0x3688, 0x0, 0x1);
        gbc.writeMem(0x299, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0282
        gbc.setState(0xd1f, 0xf1f, 0xda30, 0x4691, 0xbe6, 0x8e41, 0x1, 0x0);
        gbc.writeMem(0xd1f, { 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf1f, gbc.sp());
        EXPECT(0xd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0283
        gbc.setState(0xc7de, 0x25e5, 0x8610, 0x681, 0x5c1, 0x129e, 0x0, 0x1);
        gbc.writeMem(0xc7de, { 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x25e5, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc7de));
        // 47 0284
        gbc.setState(0x2f3c, 0x549e, 0x9f50, 0xa3d9, 0x7fb7, 0xa456, 0x1, 0x0);
        gbc.writeMem(0x2f3c, { 0x47 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x549e, gbc.sp());
        EXPECT(0x2f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0285
        gbc.setState(0x5e1b, 0xeece, 0xf520, 0x394c, 0x3fd4, 0xa04f, 0x0, 0x0);
        gbc.writeMem(0x5e1b, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0x5e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0286
        gbc.setState(0x6024, 0x7fc8, 0xdf60, 0x49c8, 0x4f56, 0xa452, 0x1, 0x0);
        gbc.writeMem(0x6024, { 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7fc8, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0287
        gbc.setState(0x12f9, 0xcecd, 0x59c0, 0x949c, 0xa47a, 0xb33a, 0x0, 0x0);
        gbc.writeMem(0x12f9, { 0x47 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcecd, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0288
        gbc.setState(0x3336, 0x3b69, 0x6ed0, 0x83b3, 0x7383, 0xef70, 0x1, 0x1);
        gbc.writeMem(0x3336, { 0x47 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0289
        gbc.setState(0x5cdd, 0x9f8e, 0xd6e0, 0xb022, 0x7370, 0x9ace, 0x1, 0x1);
        gbc.writeMem(0x5cdd, { 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0x5cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 028A
        gbc.setState(0x4812, 0x682f, 0x9e70, 0xc589, 0x17e1, 0xb81b, 0x0, 0x1);
        gbc.writeMem(0x4812, { 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0x4813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 028C
        gbc.setState(0x1fb5, 0x838b, 0x6a10, 0xf561, 0x620d, 0xc97, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x838b, gbc.sp());
        EXPECT(0x1fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 028D
        gbc.setState(0xe674, 0x3a22, 0x620, 0x1f46, 0x4b31, 0x345, 0x1, 0x0);
        gbc.writeMem(0xe674, { 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3a22, gbc.sp());
        EXPECT(0xe675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe674));
        // 47 028E
        gbc.setState(0xd09c, 0x5e0, 0xd900, 0x40cf, 0xe361, 0xed63, 0x1, 0x1);
        gbc.writeMem(0xd09c, { 0x47 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5e0, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd09c));
        // 47 028F
        gbc.setState(0xdecb, 0x3661, 0x3650, 0x4475, 0xe981, 0xed15, 0x1, 0x0);
        gbc.writeMem(0xdecb, { 0x47 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3661, gbc.sp());
        EXPECT(0xdecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdecb));
        // 47 0290
        gbc.setState(0x9553, 0xb9b1, 0x84a0, 0xa29d, 0x7130, 0xf410, 0x1, 0x1);
        gbc.writeMem(0x9553, { 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb9b1, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9553));
        // 47 0291
        gbc.setState(0x9457, 0x7e38, 0x8a10, 0x9b2c, 0xffd, 0x7352, 0x1, 0x0);
        gbc.writeMem(0x9457, { 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9457));
        // 47 0292
        gbc.setState(0xd7ca, 0xc43d, 0xb650, 0x688e, 0xd98a, 0x5b69, 0x1, 0x1);
        gbc.writeMem(0xd7ca, { 0x47 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc43d, gbc.sp());
        EXPECT(0xd7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd7ca));
        // 47 0293
        gbc.setState(0x6511, 0x808c, 0xc940, 0xb62f, 0x8326, 0x7606, 0x0, 0x0);
        gbc.writeMem(0x6511, { 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0x6512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0294
        gbc.setState(0x1ac7, 0x40e4, 0xf5c0, 0x1187, 0x9dd, 0x2809, 0x1, 0x0);
        gbc.writeMem(0x1ac7, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x40e4, gbc.sp());
        EXPECT(0x1ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0295
        gbc.setState(0xeffa, 0x9a47, 0xec10, 0xf122, 0xa5c6, 0x2567, 0x1, 0x0);
        gbc.writeMem(0xeffa, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9a47, gbc.sp());
        EXPECT(0xeffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeffa));
        // 47 0296
        gbc.setState(0x1b6a, 0x78d, 0x3500, 0xb74a, 0x466b, 0xb6b7, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0x47 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x78d, gbc.sp());
        EXPECT(0x1b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0297
        gbc.setState(0xae79, 0xe202, 0xa140, 0xff71, 0x7b20, 0xb88d, 0x0, 0x1);
        gbc.writeMem(0xae79, { 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe202, gbc.sp());
        EXPECT(0xae7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xae79));
        // 47 0298
        gbc.setState(0x6f01, 0x947a, 0xf80, 0x40d8, 0xae97, 0x1805, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0x47 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x947a, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0299
        gbc.setState(0x1a0d, 0xf05f, 0x46a0, 0x8179, 0x574, 0xeb55, 0x0, 0x1);
        gbc.writeMem(0x1a0d, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0x1a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 029A
        gbc.setState(0x521a, 0x766d, 0x1bb0, 0xa106, 0xbf98, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0x521a, { 0x47 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x521b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 029B
        gbc.setState(0xa4fd, 0xc9a7, 0x3b70, 0x3014, 0x8b01, 0x3e14, 0x1, 0x1);
        gbc.writeMem(0xa4fd, { 0x47 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc9a7, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa4fd));
        // 47 029C
        gbc.setState(0x4754, 0x240b, 0xc820, 0xdbc0, 0x7825, 0xf2bf, 0x0, 0x1);
        gbc.writeMem(0x4754, { 0x47 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 029D
        gbc.setState(0xd61b, 0x7822, 0xee10, 0x4302, 0x25ed, 0xef4b, 0x0, 0x1);
        gbc.writeMem(0xd61b, { 0x47 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd61b));
        // 47 029E
        gbc.setState(0xa23f, 0x458f, 0xb790, 0xc3b9, 0x8188, 0xc492, 0x1, 0x1);
        gbc.writeMem(0xa23f, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x458f, gbc.sp());
        EXPECT(0xa240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa23f));
        // 47 029F
        gbc.setState(0x716f, 0xed94, 0x2e0, 0xd61, 0xf0b4, 0x92c2, 0x0, 0x1);
        gbc.writeMem(0x716f, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xed94, gbc.sp());
        EXPECT(0x7170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02A0
        gbc.setState(0x1df4, 0x502a, 0xf810, 0x5af0, 0xbbce, 0xb8f3, 0x0, 0x0);
        gbc.writeMem(0x1df4, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0x1df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02A1
        gbc.setState(0x8ce5, 0x4019, 0x1f70, 0x1f5d, 0x2d2b, 0xcda5, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0x47 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4019, gbc.sp());
        EXPECT(0x8ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8ce5));
        // 47 02A2
        gbc.setState(0xa597, 0xa3dd, 0xdc20, 0xf986, 0x3a5f, 0x3aff, 0x0, 0x1);
        gbc.writeMem(0xa597, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa3dd, gbc.sp());
        EXPECT(0xa598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa597));
        // 47 02A3
        gbc.setState(0xbdbe, 0xc49d, 0x3350, 0xd177, 0xbc1c, 0x7532, 0x1, 0x1);
        gbc.writeMem(0xbdbe, { 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc49d, gbc.sp());
        EXPECT(0xbdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbdbe));
        // 47 02A4
        gbc.setState(0x6029, 0x50da, 0x51b0, 0xcc25, 0x8bf, 0x3c52, 0x0, 0x1);
        gbc.writeMem(0x6029, { 0x47 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x50da, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02A5
        gbc.setState(0xcc14, 0xe20f, 0x5800, 0xcdd9, 0xb2e1, 0xb6b4, 0x0, 0x1);
        gbc.writeMem(0xcc14, { 0x47 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe20f, gbc.sp());
        EXPECT(0xcc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcc14));
        // 47 02A6
        gbc.setState(0xd4e, 0x2c91, 0x30c0, 0xbee3, 0xe96e, 0xfce2, 0x1, 0x0);
        gbc.writeMem(0xd4e, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02A7
        gbc.setState(0x7d43, 0xd769, 0x2d80, 0x8df9, 0x567b, 0x48f5, 0x0, 0x0);
        gbc.writeMem(0x7d43, { 0x47 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd769, gbc.sp());
        EXPECT(0x7d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02A8
        gbc.setState(0x4769, 0xd0bf, 0xf760, 0x81d7, 0x6364, 0x9668, 0x0, 0x0);
        gbc.writeMem(0x4769, { 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02A9
        gbc.setState(0x81c5, 0x2996, 0xd570, 0x148d, 0x5729, 0x719a, 0x1, 0x1);
        gbc.writeMem(0x81c5, { 0x47 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2996, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x81c5));
        // 47 02AA
        gbc.setState(0x6275, 0x7cf8, 0x1e40, 0xd7d, 0x15, 0x9c7d, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02AB
        gbc.setState(0x137d, 0xa39, 0xc140, 0x58f7, 0x971d, 0x4c3e, 0x1, 0x0);
        gbc.writeMem(0x137d, { 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa39, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02AC
        gbc.setState(0x5e44, 0x83c1, 0x2d90, 0x2cad, 0x6894, 0x5a08, 0x0, 0x0);
        gbc.writeMem(0x5e44, { 0x47 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0x5e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02AD
        gbc.setState(0x36d1, 0x6f46, 0x53a0, 0x92e8, 0xfae0, 0xad89, 0x0, 0x1);
        gbc.writeMem(0x36d1, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6f46, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02AE
        gbc.setState(0x3102, 0x2327, 0xb540, 0x6db7, 0x3761, 0x368, 0x1, 0x0);
        gbc.writeMem(0x3102, { 0x47 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2327, gbc.sp());
        EXPECT(0x3103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02AF
        gbc.setState(0xc1d4, 0xcf95, 0xe7b0, 0x54e8, 0xdc3b, 0xf1bd, 0x1, 0x1);
        gbc.writeMem(0xc1d4, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xc1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc1d4));
        // 47 02B0
        gbc.setState(0x1d7c, 0xb187, 0xc000, 0xa02b, 0xeb79, 0xa2b8, 0x0, 0x0);
        gbc.writeMem(0x1d7c, { 0x47 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb187, gbc.sp());
        EXPECT(0x1d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02B1
        gbc.setState(0x4d19, 0xff78, 0x4830, 0x1cdb, 0x738d, 0x9634, 0x0, 0x1);
        gbc.writeMem(0x4d19, { 0x47 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02B2
        gbc.setState(0xadd4, 0xebf2, 0xf080, 0xa733, 0x3f84, 0x4e93, 0x1, 0x0);
        gbc.writeMem(0xadd4, { 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xebf2, gbc.sp());
        EXPECT(0xadd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xadd4));
        // 47 02B3
        gbc.setState(0x9c05, 0x7d79, 0x4d40, 0x68b4, 0xaf4e, 0x7618, 0x1, 0x0);
        gbc.writeMem(0x9c05, { 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d79, gbc.sp());
        EXPECT(0x9c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9c05));
        // 47 02B4
        gbc.setState(0xb24c, 0xa2b0, 0xc750, 0x7cdd, 0x9e94, 0x698c, 0x0, 0x0);
        gbc.writeMem(0xb24c, { 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0xb24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb24c));
        // 47 02B5
        gbc.setState(0x4d2e, 0x6fc6, 0x8490, 0x43f4, 0x304c, 0x337f, 0x1, 0x1);
        gbc.writeMem(0x4d2e, { 0x47 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02B6
        gbc.setState(0x55e3, 0x112d, 0x300, 0x2488, 0x8eb7, 0x1035, 0x0, 0x1);
        gbc.writeMem(0x55e3, { 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0x55e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02B7
        gbc.setState(0xe3c4, 0xd2b1, 0x3ec0, 0xf9dd, 0x2cea, 0xc29, 0x0, 0x1);
        gbc.writeMem(0xe3c4, { 0x47 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0xe3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe3c4));
        // 47 02B8
        gbc.setState(0xd9d5, 0xc203, 0x45a0, 0xa5be, 0x3f7e, 0xb594, 0x0, 0x1);
        gbc.writeMem(0xd9d5, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd9d5));
        // 47 02B9
        gbc.setState(0x6ef7, 0xf6b6, 0xe970, 0x8444, 0xd75b, 0xf390, 0x1, 0x0);
        gbc.writeMem(0x6ef7, { 0x47 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf6b6, gbc.sp());
        EXPECT(0x6ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02BA
        gbc.setState(0xcfb5, 0x3c90, 0x9bc0, 0x2a11, 0x1563, 0x1ab2, 0x1, 0x1);
        gbc.writeMem(0xcfb5, { 0x47 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0xcfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcfb5));
        // 47 02BB
        gbc.setState(0x72bc, 0xee3c, 0x80e0, 0x12a6, 0xb56d, 0xc6e1, 0x0, 0x0);
        gbc.writeMem(0x72bc, { 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xee3c, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02BC
        gbc.setState(0x67a, 0x6f57, 0x8de0, 0x1461, 0x7c54, 0xa2a, 0x1, 0x1);
        gbc.writeMem(0x67a, { 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6f57, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02BD
        gbc.setState(0x8b32, 0xd8c0, 0x4f20, 0x294d, 0x84bf, 0x3be8, 0x0, 0x0);
        gbc.writeMem(0x8b32, { 0x47 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd8c0, gbc.sp());
        EXPECT(0x8b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8b32));
        // 47 02BE
        gbc.setState(0xa5b1, 0x558b, 0x5c90, 0xc02d, 0x7924, 0x64b5, 0x1, 0x0);
        gbc.writeMem(0xa5b1, { 0x47 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x558b, gbc.sp());
        EXPECT(0xa5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa5b1));
        // 47 02BF
        gbc.setState(0x19dc, 0xb509, 0x3a70, 0x5c02, 0xe2da, 0xca54, 0x0, 0x1);
        gbc.writeMem(0x19dc, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb509, gbc.sp());
        EXPECT(0x19dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02C0
        gbc.setState(0xbece, 0xbff8, 0x7240, 0x23a2, 0x5fc2, 0xa4dd, 0x0, 0x1);
        gbc.writeMem(0xbece, { 0x47 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbece));
        // 47 02C1
        gbc.setState(0xeccf, 0x33e0, 0x2f40, 0xd65, 0x5ce1, 0x9010, 0x1, 0x0);
        gbc.writeMem(0xeccf, { 0x47 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x33e0, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeccf));
        // 47 02C2
        gbc.setState(0x5fe1, 0x19a0, 0x6c20, 0xcb7d, 0xbc58, 0x8293, 0x0, 0x0);
        gbc.writeMem(0x5fe1, { 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0x5fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02C3
        gbc.setState(0x641e, 0x8dc4, 0xdc20, 0xd1cc, 0x850f, 0xe770, 0x1, 0x0);
        gbc.writeMem(0x641e, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8dc4, gbc.sp());
        EXPECT(0x641f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02C4
        gbc.setState(0x5b67, 0xa1c3, 0x9010, 0x4a42, 0xf143, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0x5b67, { 0x47 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa1c3, gbc.sp());
        EXPECT(0x5b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02C5
        gbc.setState(0x95e5, 0x4663, 0xba20, 0x94b9, 0xfcf5, 0xc456, 0x1, 0x0);
        gbc.writeMem(0x95e5, { 0x47 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4663, gbc.sp());
        EXPECT(0x95e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x95e5));
        // 47 02C6
        gbc.setState(0xdb8c, 0xa560, 0x9ab0, 0x8e15, 0x2a0e, 0xca44, 0x0, 0x1);
        gbc.writeMem(0xdb8c, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa560, gbc.sp());
        EXPECT(0xdb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb8c));
        // 47 02C7
        gbc.setState(0x4b3e, 0x65d8, 0xc670, 0xca0b, 0xa661, 0xfde5, 0x0, 0x0);
        gbc.writeMem(0x4b3e, { 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x65d8, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02C8
        gbc.setState(0x3cbc, 0x4a79, 0xa470, 0x75, 0x66d, 0x5488, 0x1, 0x1);
        gbc.writeMem(0x3cbc, { 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a79, gbc.sp());
        EXPECT(0x3cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02C9
        gbc.setState(0xa26b, 0xfde0, 0xfb40, 0xbf89, 0xb373, 0x8dc, 0x1, 0x0);
        gbc.writeMem(0xa26b, { 0x47 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfde0, gbc.sp());
        EXPECT(0xa26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa26b));
        // 47 02CA
        gbc.setState(0x5892, 0x9408, 0x4680, 0x9d13, 0x2ea5, 0xec8f, 0x0, 0x0);
        gbc.writeMem(0x5892, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9408, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02CB
        gbc.setState(0x1e4a, 0x6bcb, 0x3ab0, 0xc5de, 0x7f6b, 0xccf9, 0x1, 0x1);
        gbc.writeMem(0x1e4a, { 0x47 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6bcb, gbc.sp());
        EXPECT(0x1e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02CC
        gbc.setState(0x3260, 0x3222, 0x9170, 0xf382, 0xc435, 0xb7f2, 0x0, 0x1);
        gbc.writeMem(0x3260, { 0x47 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3222, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02CD
        gbc.setState(0x77c0, 0xc9cc, 0xcf40, 0x29f, 0x94cf, 0x37a8, 0x1, 0x1);
        gbc.writeMem(0x77c0, { 0x47 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc9cc, gbc.sp());
        EXPECT(0x77c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02CE
        gbc.setState(0xf90, 0x7116, 0xd220, 0x57dd, 0x5364, 0x4e69, 0x0, 0x1);
        gbc.writeMem(0xf90, { 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7116, gbc.sp());
        EXPECT(0xf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02CF
        gbc.setState(0x2392, 0x3330, 0xfec0, 0x82db, 0xca49, 0x6981, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0x47 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3330, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02D0
        gbc.setState(0xac4, 0x7625, 0xd8e0, 0x5051, 0x3fdc, 0xfe3b, 0x1, 0x1);
        gbc.writeMem(0xac4, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7625, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02D1
        gbc.setState(0x5d39, 0xcf99, 0x26b0, 0xeb39, 0x7aec, 0xb2c6, 0x0, 0x1);
        gbc.writeMem(0x5d39, { 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcf99, gbc.sp());
        EXPECT(0x5d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02D2
        gbc.setState(0xc23b, 0x8571, 0x2890, 0xfacf, 0xcc30, 0x1e79, 0x0, 0x0);
        gbc.writeMem(0xc23b, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0xc23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc23b));
        // 47 02D3
        gbc.setState(0x9b5d, 0xd000, 0x5ea0, 0x7697, 0xd953, 0x4dd7, 0x1, 0x1);
        gbc.writeMem(0x9b5d, { 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd000, gbc.sp());
        EXPECT(0x9b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9b5d));
        // 47 02D4
        gbc.setState(0x4b57, 0x50e1, 0x93a0, 0x83d, 0xf3ff, 0x9da6, 0x0, 0x0);
        gbc.writeMem(0x4b57, { 0x47 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0x4b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02D5
        gbc.setState(0xb0f0, 0x819a, 0x8d90, 0x64e7, 0xca28, 0xe230, 0x0, 0x0);
        gbc.writeMem(0xb0f0, { 0x47 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0xb0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb0f0));
        // 47 02D6
        gbc.setState(0x20cc, 0x8495, 0x6a20, 0xfb3c, 0x340f, 0x5d9, 0x1, 0x0);
        gbc.writeMem(0x20cc, { 0x47 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x20cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02D7
        gbc.setState(0xb24a, 0xac1b, 0xae30, 0x6797, 0x56be, 0xd262, 0x0, 0x1);
        gbc.writeMem(0xb24a, { 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xac1b, gbc.sp());
        EXPECT(0xb24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb24a));
        // 47 02DA
        gbc.setState(0xcc98, 0x48ae, 0x9c60, 0x476, 0x1be3, 0xb25, 0x1, 0x1);
        gbc.writeMem(0xcc98, { 0x47 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcc98));
        // 47 02DC
        gbc.setState(0x9d01, 0x57e7, 0xb930, 0xa7c5, 0xaf7d, 0xd20b, 0x0, 0x0);
        gbc.writeMem(0x9d01, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9d01));
        // 47 02DD
        gbc.setState(0xc181, 0x2c61, 0x1d90, 0x98d9, 0x57cb, 0x2bd1, 0x0, 0x0);
        gbc.writeMem(0xc181, { 0x47 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2c61, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc181));
        // 47 02DE
        gbc.setState(0x8d91, 0x47bb, 0xc190, 0xde2, 0x68df, 0x79f6, 0x1, 0x1);
        gbc.writeMem(0x8d91, { 0x47 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0x8d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8d91));
        // 47 02DF
        gbc.setState(0xcd8, 0xc567, 0x1360, 0xd1b0, 0x1343, 0xb196, 0x0, 0x1);
        gbc.writeMem(0xcd8, { 0x47 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02E0
        gbc.setState(0x9fe0, 0xaed8, 0x6520, 0x71d9, 0x52de, 0xeca0, 0x0, 0x1);
        gbc.writeMem(0x9fe0, { 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaed8, gbc.sp());
        EXPECT(0x9fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9fe0));
        // 47 02E1
        gbc.setState(0xab22, 0xf451, 0xbf10, 0x6a08, 0xfcbe, 0x2579, 0x1, 0x1);
        gbc.writeMem(0xab22, { 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xab22));
        // 47 02E2
        gbc.setState(0xbc1f, 0x96a0, 0x53b0, 0x1524, 0x3f78, 0xb567, 0x1, 0x0);
        gbc.writeMem(0xbc1f, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x96a0, gbc.sp());
        EXPECT(0xbc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbc1f));
        // 47 02E3
        gbc.setState(0xd184, 0xa30a, 0x7cf0, 0x8378, 0xe168, 0x6558, 0x0, 0x1);
        gbc.writeMem(0xd184, { 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0xd185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd184));
        // 47 02E4
        gbc.setState(0x63fe, 0x3d37, 0x6440, 0x88a5, 0xc403, 0x79a0, 0x0, 0x0);
        gbc.writeMem(0x63fe, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02E5
        gbc.setState(0xcb3e, 0x5b75, 0x5260, 0x8a1a, 0xd304, 0xc4a9, 0x1, 0x1);
        gbc.writeMem(0xcb3e, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5b75, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcb3e));
        // 47 02E6
        gbc.setState(0x3fb4, 0xc7ce, 0xbd60, 0x521d, 0xdbe7, 0x328e, 0x0, 0x0);
        gbc.writeMem(0x3fb4, { 0x47 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc7ce, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02E7
        gbc.setState(0xa4a1, 0x7ec5, 0xff20, 0xf06c, 0x1e04, 0x2f0d, 0x1, 0x0);
        gbc.writeMem(0xa4a1, { 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa4a1));
        // 47 02E8
        gbc.setState(0xcad9, 0xcf43, 0x9c90, 0xdab1, 0x5058, 0x69bb, 0x0, 0x0);
        gbc.writeMem(0xcad9, { 0x47 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcad9));
        // 47 02E9
        gbc.setState(0xa33c, 0x27c, 0x1a0, 0xd510, 0x9e8b, 0xd103, 0x1, 0x1);
        gbc.writeMem(0xa33c, { 0x47 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x27c, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa33c));
        // 47 02EA
        gbc.setState(0x1e6b, 0x5d5c, 0xe830, 0xdd63, 0x1121, 0x78ea, 0x0, 0x1);
        gbc.writeMem(0x1e6b, { 0x47 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0x1e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02EB
        gbc.setState(0x20c2, 0x1f9f, 0x86d0, 0x5b56, 0xb7aa, 0xbd47, 0x1, 0x0);
        gbc.writeMem(0x20c2, { 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x20c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02EC
        gbc.setState(0x7069, 0xef17, 0x29d0, 0xd7df, 0xf39e, 0x1ebf, 0x1, 0x1);
        gbc.writeMem(0x7069, { 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0x706a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02ED
        gbc.setState(0x8595, 0x25d7, 0x4710, 0x7c5e, 0xf6df, 0x3d4f, 0x0, 0x0);
        gbc.writeMem(0x8595, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0x8596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8595));
        // 47 02EF
        gbc.setState(0x3bd, 0x1144, 0x61c0, 0xca18, 0x35e5, 0xc47d, 0x1, 0x0);
        gbc.writeMem(0x3bd, { 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1144, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02F0
        gbc.setState(0xc7e7, 0xfa5b, 0xb110, 0x8f32, 0xdfa6, 0x1c63, 0x1, 0x1);
        gbc.writeMem(0xc7e7, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfa5b, gbc.sp());
        EXPECT(0xc7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc7e7));
        // 47 02F2
        gbc.setState(0x7db9, 0x66f, 0xdc00, 0xca52, 0x980d, 0xc3b8, 0x0, 0x1);
        gbc.writeMem(0x7db9, { 0x47 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x66f, gbc.sp());
        EXPECT(0x7dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02F3
        gbc.setState(0xb458, 0x1095, 0x6560, 0xfe33, 0x2a15, 0xa791, 0x0, 0x1);
        gbc.writeMem(0xb458, { 0x47 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1095, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb458));
        // 47 02F4
        gbc.setState(0x2e62, 0xb31a, 0xcc0, 0xd606, 0xc534, 0xfd02, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02F5
        gbc.setState(0x7676, 0x92e1, 0xf510, 0x4a55, 0x72d9, 0xc070, 0x0, 0x0);
        gbc.writeMem(0x7676, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02F6
        gbc.setState(0xb98f, 0x4e47, 0xaa00, 0x6a72, 0x504b, 0xa5e, 0x1, 0x1);
        gbc.writeMem(0xb98f, { 0x47 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4e47, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb98f));
        // 47 02F7
        gbc.setState(0x8c1c, 0x2d70, 0xce40, 0x42f2, 0x36dc, 0x994a, 0x1, 0x1);
        gbc.writeMem(0x8c1c, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d70, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8c1c));
        // 47 02F8
        gbc.setState(0x809, 0x9ad5, 0xce10, 0x2c50, 0xf75e, 0xcc9a, 0x0, 0x1);
        gbc.writeMem(0x809, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ad5, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 02F9
        gbc.setState(0x8ac2, 0xc9ce, 0x7160, 0xe91e, 0xa8a, 0xcc72, 0x0, 0x0);
        gbc.writeMem(0x8ac2, { 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x8ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8ac2));
        // 47 02FA
        gbc.setState(0x4f99, 0xf5a, 0x8120, 0xa4fb, 0x1d62, 0x45ac, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf5a, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02FB
        gbc.setState(0x3eb7, 0x8531, 0xb300, 0xdb96, 0xcd71, 0x5e74, 0x1, 0x1);
        gbc.writeMem(0x3eb7, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8531, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02FC
        gbc.setState(0x668d, 0x1591, 0x21e0, 0x5e7, 0x52e8, 0xcc1c, 0x1, 0x0);
        gbc.writeMem(0x668d, { 0x47 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1591, gbc.sp());
        EXPECT(0x668e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02FD
        gbc.setState(0xa1bd, 0x299a, 0xd8c0, 0x1ce3, 0x8858, 0xb5fd, 0x1, 0x0);
        gbc.writeMem(0xa1bd, { 0x47 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x299a, gbc.sp());
        EXPECT(0xa1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa1bd));
        // 47 02FE
        gbc.setState(0x3960, 0x27a8, 0xf280, 0x40e2, 0x95fd, 0x6e5f, 0x0, 0x0);
        gbc.writeMem(0x3960, { 0x47 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x3961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 02FF
        gbc.setState(0x2e2f, 0x7e24, 0xf660, 0x4e98, 0xdb0, 0x6e06, 0x0, 0x1);
        gbc.writeMem(0x2e2f, { 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0300
        gbc.setState(0x4485, 0xdcec, 0xc540, 0x25af, 0x3a29, 0xc7c7, 0x1, 0x1);
        gbc.writeMem(0x4485, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdcec, gbc.sp());
        EXPECT(0x4486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0301
        gbc.setState(0x520a, 0x5acf, 0xed80, 0x360c, 0x127, 0x8a7e, 0x1, 0x0);
        gbc.writeMem(0x520a, { 0x47 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5acf, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0302
        gbc.setState(0x9a18, 0xe0a8, 0x8260, 0x86f6, 0xcf5e, 0x2321, 0x1, 0x0);
        gbc.writeMem(0x9a18, { 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9a18));
        // 47 0303
        gbc.setState(0xf74, 0x453a, 0xb7f0, 0x736f, 0x2322, 0x45aa, 0x0, 0x1);
        gbc.writeMem(0xf74, { 0x47 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x453a, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0304
        gbc.setState(0xa751, 0x9383, 0x50a0, 0x6bb1, 0x8c1a, 0x6bf8, 0x0, 0x0);
        gbc.writeMem(0xa751, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa751));
        // 47 0305
        gbc.setState(0xec59, 0xc443, 0x9ee0, 0xa26e, 0x8eff, 0x14e5, 0x1, 0x0);
        gbc.writeMem(0xec59, { 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc443, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xec59));
        // 47 0306
        gbc.setState(0x5606, 0x7bee, 0xc620, 0xf5dc, 0xa481, 0xb031, 0x1, 0x1);
        gbc.writeMem(0x5606, { 0x47 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7bee, gbc.sp());
        EXPECT(0x5607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0307
        gbc.setState(0x4e8a, 0x68fa, 0xb130, 0x34c9, 0x2030, 0x173b, 0x0, 0x0);
        gbc.writeMem(0x4e8a, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x68fa, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0308
        gbc.setState(0x62a9, 0x496a, 0x82e0, 0x8318, 0xebe5, 0x286c, 0x1, 0x1);
        gbc.writeMem(0x62a9, { 0x47 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x496a, gbc.sp());
        EXPECT(0x62aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0309
        gbc.setState(0x71fb, 0xbc2d, 0x31d0, 0x5907, 0xb00c, 0xb61d, 0x1, 0x0);
        gbc.writeMem(0x71fb, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0x71fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 030A
        gbc.setState(0xa8f7, 0x6062, 0x71c0, 0xebf9, 0x1b63, 0x7aed, 0x1, 0x1);
        gbc.writeMem(0xa8f7, { 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6062, gbc.sp());
        EXPECT(0xa8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa8f7));
        // 47 030B
        gbc.setState(0x21e9, 0xd2da, 0x3230, 0x216f, 0x946b, 0xcac4, 0x1, 0x1);
        gbc.writeMem(0x21e9, { 0x47 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0x21ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 030C
        gbc.setState(0xc1fa, 0xab22, 0x6630, 0x2148, 0xc433, 0xc5a2, 0x0, 0x1);
        gbc.writeMem(0xc1fa, { 0x47 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0xc1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc1fa));
        // 47 030D
        gbc.setState(0xb300, 0xd537, 0x91f0, 0x69a, 0x8792, 0x1de6, 0x0, 0x0);
        gbc.writeMem(0xb300, { 0x47 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd537, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb300));
        // 47 030E
        gbc.setState(0xd463, 0x30e0, 0x7f40, 0x2e60, 0x1968, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0xd463, { 0x47 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x30e0, gbc.sp());
        EXPECT(0xd464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd463));
        // 47 030F
        gbc.setState(0x2ef2, 0xb275, 0xe40, 0xa808, 0xe192, 0xaa11, 0x1, 0x0);
        gbc.writeMem(0x2ef2, { 0x47 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb275, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0310
        gbc.setState(0xa2c3, 0xd74f, 0x2810, 0xafee, 0x7b89, 0x38d7, 0x1, 0x0);
        gbc.writeMem(0xa2c3, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0xa2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa2c3));
        // 47 0311
        gbc.setState(0x51cd, 0x219d, 0x950, 0x84f7, 0x2f23, 0xcccc, 0x1, 0x1);
        gbc.writeMem(0x51cd, { 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x219d, gbc.sp());
        EXPECT(0x51ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0312
        gbc.setState(0x99, 0xed0a, 0xe070, 0x3394, 0x19fa, 0x64b3, 0x1, 0x0);
        gbc.writeMem(0x99, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0x9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0313
        gbc.setState(0x839f, 0xe713, 0x50f0, 0x15ae, 0xcb5, 0x900e, 0x1, 0x1);
        gbc.writeMem(0x839f, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0x83a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x839f));
        // 47 0314
        gbc.setState(0x7fc9, 0x3085, 0x6d30, 0xde3d, 0xec81, 0xef1, 0x0, 0x1);
        gbc.writeMem(0x7fc9, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0315
        gbc.setState(0xacd8, 0x2fc6, 0x350, 0xb498, 0x65a, 0xbae, 0x0, 0x0);
        gbc.writeMem(0xacd8, { 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2fc6, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xacd8));
        // 47 0316
        gbc.setState(0xefe1, 0x4caa, 0x4d80, 0xa6ed, 0xc91f, 0x8456, 0x1, 0x1);
        gbc.writeMem(0xefe1, { 0x47 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4caa, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xefe1));
        // 47 0317
        gbc.setState(0xa14d, 0x7b4e, 0x2370, 0xdb41, 0x1b44, 0x6267, 0x0, 0x0);
        gbc.writeMem(0xa14d, { 0x47 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7b4e, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa14d));
        // 47 0318
        gbc.setState(0x6847, 0x675c, 0x2840, 0xe35c, 0xf5db, 0x6e11, 0x1, 0x0);
        gbc.writeMem(0x6847, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x675c, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0319
        gbc.setState(0xe6a7, 0x3a96, 0xd240, 0x8a3a, 0x431d, 0x94ac, 0x0, 0x0);
        gbc.writeMem(0xe6a7, { 0x47 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3a96, gbc.sp());
        EXPECT(0xe6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe6a7));
        // 47 031B
        gbc.setState(0x59e1, 0x430f, 0xcef0, 0xd791, 0xb7e0, 0x5137, 0x1, 0x1);
        gbc.writeMem(0x59e1, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 031C
        gbc.setState(0xb323, 0xee08, 0xa350, 0x4172, 0x714e, 0xebd2, 0x0, 0x0);
        gbc.writeMem(0xb323, { 0x47 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xee08, gbc.sp());
        EXPECT(0xb324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb323));
        // 47 031D
        gbc.setState(0xb959, 0x8497, 0x7c70, 0xdfcf, 0x4863, 0x3eb1, 0x1, 0x0);
        gbc.writeMem(0xb959, { 0x47 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8497, gbc.sp());
        EXPECT(0xb95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb959));
        // 47 031E
        gbc.setState(0x9bec, 0x6efc, 0x9420, 0xff81, 0xc04b, 0xf93e, 0x1, 0x0);
        gbc.writeMem(0x9bec, { 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6efc, gbc.sp());
        EXPECT(0x9bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9bec));
        // 47 031F
        gbc.setState(0x99a, 0x6605, 0x1450, 0x180c, 0xdec5, 0x2ffe, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6605, gbc.sp());
        EXPECT(0x99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0320
        gbc.setState(0xb176, 0x612e, 0x4640, 0x70e7, 0x507a, 0xc0d2, 0x0, 0x1);
        gbc.writeMem(0xb176, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x612e, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb176));
        // 47 0321
        gbc.setState(0xdb2d, 0x121c, 0xdba0, 0x948, 0x6d8, 0xe78e, 0x0, 0x1);
        gbc.writeMem(0xdb2d, { 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb2d));
        // 47 0322
        gbc.setState(0x9841, 0xe491, 0x19a0, 0x66d2, 0x54d3, 0x3a33, 0x1, 0x1);
        gbc.writeMem(0x9841, { 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe491, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9841));
        // 47 0324
        gbc.setState(0xaed3, 0xcd9a, 0xd410, 0xd5d6, 0xb8d5, 0xf202, 0x0, 0x0);
        gbc.writeMem(0xaed3, { 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcd9a, gbc.sp());
        EXPECT(0xaed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xaed3));
        // 47 0325
        gbc.setState(0xd78f, 0x8835, 0xb1c0, 0xad3c, 0x2a3d, 0xee0f, 0x0, 0x0);
        gbc.writeMem(0xd78f, { 0x47 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd78f));
        // 47 0326
        gbc.setState(0xd058, 0x2a4a, 0x7a0, 0x586d, 0x1799, 0xa009, 0x0, 0x1);
        gbc.writeMem(0xd058, { 0x47 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2a4a, gbc.sp());
        EXPECT(0xd059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd058));
        // 47 0327
        gbc.setState(0x9b7, 0x8236, 0xc510, 0x7c87, 0xbe5d, 0xc221, 0x0, 0x1);
        gbc.writeMem(0x9b7, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0x9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0328
        gbc.setState(0x5e69, 0x5c3e, 0xfdf0, 0xab36, 0x190b, 0x2a6e, 0x0, 0x0);
        gbc.writeMem(0x5e69, { 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5c3e, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0329
        gbc.setState(0x599d, 0x1f84, 0xc280, 0xa6f6, 0x466b, 0x6e94, 0x0, 0x1);
        gbc.writeMem(0x599d, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0x599e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 032A
        gbc.setState(0x1d86, 0xe37d, 0x1e30, 0xb698, 0xde36, 0xb476, 0x0, 0x1);
        gbc.writeMem(0x1d86, { 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe37d, gbc.sp());
        EXPECT(0x1d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 032B
        gbc.setState(0xddb0, 0x4395, 0xf8f0, 0x3d7d, 0x5729, 0x997b, 0x0, 0x0);
        gbc.writeMem(0xddb0, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4395, gbc.sp());
        EXPECT(0xddb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xddb0));
        // 47 032C
        gbc.setState(0x5e9b, 0x5f0b, 0x6c60, 0x3c64, 0xa936, 0xabf8, 0x1, 0x1);
        gbc.writeMem(0x5e9b, { 0x47 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f0b, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 032D
        gbc.setState(0x86cd, 0x4b71, 0x440, 0xd5b3, 0xd6e8, 0xcc51, 0x0, 0x0);
        gbc.writeMem(0x86cd, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x86cd));
        // 47 032E
        gbc.setState(0xa612, 0x427b, 0xdeb0, 0x45bf, 0x9d72, 0xe57f, 0x0, 0x1);
        gbc.writeMem(0xa612, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0xa613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa612));
        // 47 032F
        gbc.setState(0xd95c, 0xf315, 0x8620, 0x9fd4, 0xab4e, 0x2b3b, 0x1, 0x1);
        gbc.writeMem(0xd95c, { 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0xd95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd95c));
        // 47 0330
        gbc.setState(0x6ee1, 0xf998, 0x3d80, 0x67f8, 0xe0ed, 0x3c5e, 0x0, 0x1);
        gbc.writeMem(0x6ee1, { 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf998, gbc.sp());
        EXPECT(0x6ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0331
        gbc.setState(0xd2d6, 0xdc92, 0xb400, 0x733b, 0x4ee3, 0x9c24, 0x1, 0x0);
        gbc.writeMem(0xd2d6, { 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd2d6));
        // 47 0332
        gbc.setState(0xc7b8, 0xd3b6, 0x17a0, 0x8431, 0x370c, 0xb092, 0x0, 0x1);
        gbc.writeMem(0xc7b8, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0xc7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc7b8));
        // 47 0333
        gbc.setState(0x51f7, 0x5501, 0x1720, 0xbbce, 0x78bf, 0x535f, 0x1, 0x1);
        gbc.writeMem(0x51f7, { 0x47 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0x51f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0334
        gbc.setState(0x3856, 0x4b10, 0x8650, 0x886a, 0x147a, 0x68ea, 0x1, 0x1);
        gbc.writeMem(0x3856, { 0x47 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4b10, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0335
        gbc.setState(0x7183, 0x188f, 0x6740, 0xc85b, 0xa773, 0xf0ae, 0x1, 0x1);
        gbc.writeMem(0x7183, { 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x188f, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0336
        gbc.setState(0xbfc7, 0x8423, 0x6400, 0x6354, 0x384, 0x4f4d, 0x0, 0x0);
        gbc.writeMem(0xbfc7, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8423, gbc.sp());
        EXPECT(0xbfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbfc7));
        // 47 0337
        gbc.setState(0x5d85, 0xa8cc, 0xb20, 0xe6d2, 0xf79c, 0x4e1, 0x1, 0x1);
        gbc.writeMem(0x5d85, { 0x47 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0x5d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0338
        gbc.setState(0x6178, 0x2dcd, 0xcc00, 0x756b, 0xfaeb, 0xde21, 0x1, 0x1);
        gbc.writeMem(0x6178, { 0x47 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0339
        gbc.setState(0x9773, 0xe289, 0xe4c0, 0x557f, 0x84e9, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0x9773, { 0x47 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x9774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9773));
        // 47 033A
        gbc.setState(0x5719, 0xd52, 0xc10, 0xe921, 0xc78, 0x48ed, 0x1, 0x0);
        gbc.writeMem(0x5719, { 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 033B
        gbc.setState(0x4a77, 0x5b0d, 0x5820, 0x2f80, 0x5024, 0x4709, 0x1, 0x0);
        gbc.writeMem(0x4a77, { 0x47 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5b0d, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 033C
        gbc.setState(0x6721, 0x1c83, 0x9ad0, 0x7b5e, 0x5603, 0xaf4d, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0x47 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1c83, gbc.sp());
        EXPECT(0x6722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 033D
        gbc.setState(0xc57d, 0xa8da, 0xdb70, 0x5335, 0x5514, 0x792, 0x1, 0x0);
        gbc.writeMem(0xc57d, { 0x47 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa8da, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc57d));
        // 47 033E
        gbc.setState(0x8fcc, 0xc13f, 0x90d0, 0x3a4, 0x11f3, 0xe508, 0x1, 0x1);
        gbc.writeMem(0x8fcc, { 0x47 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc13f, gbc.sp());
        EXPECT(0x8fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8fcc));
        // 47 033F
        gbc.setState(0x5832, 0xe7e6, 0x4c40, 0x5400, 0x3994, 0xbc6c, 0x1, 0x1);
        gbc.writeMem(0x5832, { 0x47 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe7e6, gbc.sp());
        EXPECT(0x5833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0340
        gbc.setState(0xc692, 0xfdfa, 0x5650, 0x6e96, 0x3bbc, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0x47 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfdfa, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc692));
        // 47 0341
        gbc.setState(0xd245, 0xf045, 0xd100, 0xc290, 0xcbde, 0x3305, 0x1, 0x1);
        gbc.writeMem(0xd245, { 0x47 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0xd246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd245));
        // 47 0342
        gbc.setState(0xa6d4, 0x4cc3, 0xd6a0, 0x8158, 0x34b, 0xd1dc, 0x1, 0x1);
        gbc.writeMem(0xa6d4, { 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4cc3, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa6d4));
        // 47 0343
        gbc.setState(0x3b63, 0x1abf, 0xafc0, 0x2a79, 0x8e0d, 0x8dfc, 0x0, 0x0);
        gbc.writeMem(0x3b63, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1abf, gbc.sp());
        EXPECT(0x3b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0345
        gbc.setState(0xcab3, 0xc24, 0x4770, 0x882, 0x1cf7, 0xbaae, 0x1, 0x0);
        gbc.writeMem(0xcab3, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc24, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcab3));
        // 47 0346
        gbc.setState(0x44e3, 0xa1aa, 0x69f0, 0x8a8, 0x730d, 0xe933, 0x1, 0x1);
        gbc.writeMem(0x44e3, { 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa1aa, gbc.sp());
        EXPECT(0x44e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0347
        gbc.setState(0x4327, 0x838b, 0xf7c0, 0x5115, 0x8954, 0x9fac, 0x0, 0x0);
        gbc.writeMem(0x4327, { 0x47 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x838b, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0348
        gbc.setState(0x254b, 0x7a28, 0x64b0, 0xf921, 0xe9cb, 0x6413, 0x1, 0x0);
        gbc.writeMem(0x254b, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0x254c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0349
        gbc.setState(0xef5f, 0x7669, 0x0, 0x2601, 0x9d9f, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0xef5f, { 0x47 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xef5f));
        // 47 034A
        gbc.setState(0x153, 0xe78e, 0xde60, 0x9c73, 0x6b20, 0x561d, 0x1, 0x1);
        gbc.writeMem(0x153, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe78e, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 034B
        gbc.setState(0xbbb0, 0xc8fd, 0x3880, 0xe0b4, 0xa336, 0x95fc, 0x1, 0x1);
        gbc.writeMem(0xbbb0, { 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0xbbb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbbb0));
        // 47 034C
        gbc.setState(0x702b, 0x838a, 0x92d0, 0xba8d, 0xdb2, 0x5bc0, 0x0, 0x1);
        gbc.writeMem(0x702b, { 0x47 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x838a, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 034D
        gbc.setState(0x862a, 0xa69f, 0xcb70, 0x28ac, 0x5a0d, 0xc895, 0x0, 0x0);
        gbc.writeMem(0x862a, { 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa69f, gbc.sp());
        EXPECT(0x862b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x862a));
        // 47 034E
        gbc.setState(0xd7b9, 0x7246, 0x1000, 0x7563, 0xc3d9, 0xdbc9, 0x0, 0x1);
        gbc.writeMem(0xd7b9, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7246, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd7b9));
        // 47 034F
        gbc.setState(0xd702, 0xb5b4, 0x330, 0x448c, 0x49bc, 0x6ec5, 0x0, 0x1);
        gbc.writeMem(0xd702, { 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5b4, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd702));
        // 47 0350
        gbc.setState(0xcc6c, 0xb3cd, 0xfdf0, 0xa212, 0xeea2, 0x2ce6, 0x0, 0x1);
        gbc.writeMem(0xcc6c, { 0x47 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb3cd, gbc.sp());
        EXPECT(0xcc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcc6c));
        // 47 0351
        gbc.setState(0x9eec, 0x459c, 0x6490, 0x61ba, 0x2a4, 0x74e8, 0x0, 0x0);
        gbc.writeMem(0x9eec, { 0x47 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x459c, gbc.sp());
        EXPECT(0x9eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9eec));
        // 47 0352
        gbc.setState(0x1061, 0xdc7b, 0x3050, 0x31c5, 0xe53d, 0xf53a, 0x0, 0x0);
        gbc.writeMem(0x1061, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0x1062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0353
        gbc.setState(0x141d, 0x3738, 0xca60, 0xa8f3, 0x1bcb, 0xcf86, 0x0, 0x0);
        gbc.writeMem(0x141d, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3738, gbc.sp());
        EXPECT(0x141e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0354
        gbc.setState(0x6d95, 0x24e2, 0xa100, 0xd8b3, 0x95da, 0xae36, 0x0, 0x0);
        gbc.writeMem(0x6d95, { 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x24e2, gbc.sp());
        EXPECT(0x6d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0355
        gbc.setState(0xb5b9, 0x7a09, 0x60c0, 0x93ce, 0x88a9, 0x3844, 0x0, 0x1);
        gbc.writeMem(0xb5b9, { 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0xb5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb5b9));
        // 47 0356
        gbc.setState(0xa877, 0xb055, 0x3480, 0x31ec, 0x163f, 0xd6c8, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb055, gbc.sp());
        EXPECT(0xa878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa877));
        // 47 0357
        gbc.setState(0x239d, 0x87c9, 0x4440, 0x2bb, 0x4ef2, 0x2e91, 0x1, 0x1);
        gbc.writeMem(0x239d, { 0x47 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x87c9, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0358
        gbc.setState(0xc62f, 0xaef3, 0xf380, 0xda66, 0x2a5c, 0x449c, 0x0, 0x0);
        gbc.writeMem(0xc62f, { 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0xc630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc62f));
        // 47 0359
        gbc.setState(0xd265, 0xdf00, 0x2a10, 0x37a7, 0x8646, 0x3286, 0x1, 0x0);
        gbc.writeMem(0xd265, { 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdf00, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd265));
        // 47 035B
        gbc.setState(0xc7e0, 0xad9f, 0x570, 0xecd, 0xd4b1, 0x58ae, 0x1, 0x1);
        gbc.writeMem(0xc7e0, { 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xad9f, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc7e0));
        // 47 035C
        gbc.setState(0xd730, 0x2cc9, 0xcef0, 0x2bc0, 0x810, 0xc1c2, 0x1, 0x1);
        gbc.writeMem(0xd730, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2cc9, gbc.sp());
        EXPECT(0xd731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd730));
        // 47 035D
        gbc.setState(0x2c1b, 0xb10a, 0x2f40, 0x35e9, 0xa0e7, 0x816b, 0x0, 0x1);
        gbc.writeMem(0x2c1b, { 0x47 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 035E
        gbc.setState(0xeff2, 0xa2d8, 0x5b10, 0x448c, 0x9cef, 0x2865, 0x1, 0x1);
        gbc.writeMem(0xeff2, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa2d8, gbc.sp());
        EXPECT(0xeff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeff2));
        // 47 035F
        gbc.setState(0x3592, 0x6703, 0x43a0, 0xa58f, 0x9c34, 0x894d, 0x0, 0x0);
        gbc.writeMem(0x3592, { 0x47 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6703, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0360
        gbc.setState(0x5c01, 0xbdf, 0x96b0, 0xd446, 0x966b, 0xe95d, 0x1, 0x1);
        gbc.writeMem(0x5c01, { 0x47 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0361
        gbc.setState(0xc73c, 0xcdd6, 0x5260, 0x30ca, 0x38a1, 0x919e, 0x0, 0x0);
        gbc.writeMem(0xc73c, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0xc73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc73c));
        // 47 0362
        gbc.setState(0xef43, 0xfd8a, 0x2f10, 0x744c, 0x3edc, 0x533, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0x47 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xef43));
        // 47 0363
        gbc.setState(0xea1, 0x1d45, 0xf860, 0x4c7a, 0xc65e, 0x86ab, 0x1, 0x0);
        gbc.writeMem(0xea1, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d45, gbc.sp());
        EXPECT(0xea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0364
        gbc.setState(0xdb52, 0xdfec, 0x9f50, 0xc945, 0x96ed, 0xca41, 0x1, 0x0);
        gbc.writeMem(0xdb52, { 0x47 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdfec, gbc.sp());
        EXPECT(0xdb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdb52));
        // 47 0365
        gbc.setState(0xb047, 0xf3ac, 0xf540, 0xe2b7, 0xb369, 0x78ae, 0x1, 0x1);
        gbc.writeMem(0xb047, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0xb048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb047));
        // 47 0367
        gbc.setState(0xcb5c, 0xf18c, 0xc5f0, 0x4a28, 0xc407, 0x4bea, 0x1, 0x0);
        gbc.writeMem(0xcb5c, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0xcb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcb5c));
        // 47 0368
        gbc.setState(0x52db, 0xc250, 0x53d0, 0x9134, 0x4c42, 0x9562, 0x1, 0x0);
        gbc.writeMem(0x52db, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc250, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0369
        gbc.setState(0x442f, 0x5c77, 0x5b10, 0x8645, 0x77d7, 0xb153, 0x0, 0x1);
        gbc.writeMem(0x442f, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5c77, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 036A
        gbc.setState(0xdd2d, 0x3a9a, 0x9520, 0xcda2, 0xb422, 0x3948, 0x1, 0x1);
        gbc.writeMem(0xdd2d, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3a9a, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdd2d));
        // 47 036B
        gbc.setState(0xc0d7, 0x584b, 0xec30, 0x58bf, 0xd61b, 0x539a, 0x0, 0x0);
        gbc.writeMem(0xc0d7, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x584b, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc0d7));
        // 47 036C
        gbc.setState(0x6c2b, 0x37d5, 0x1280, 0x4b87, 0x6eb, 0x47dc, 0x0, 0x1);
        gbc.writeMem(0x6c2b, { 0x47 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 036D
        gbc.setState(0x66a9, 0x5f5, 0xb940, 0xd4e0, 0x4aba, 0x9260, 0x0, 0x1);
        gbc.writeMem(0x66a9, { 0x47 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0x66aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 036E
        gbc.setState(0x67d2, 0x9351, 0x2940, 0x5074, 0xa952, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x67d2, { 0x47 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9351, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 036F
        gbc.setState(0xc06f, 0x1140, 0x3700, 0xaf21, 0x9164, 0xfe48, 0x1, 0x1);
        gbc.writeMem(0xc06f, { 0x47 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1140, gbc.sp());
        EXPECT(0xc070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc06f));
        // 47 0370
        gbc.setState(0x6444, 0x656a, 0xf3e0, 0xdba2, 0xe2fd, 0x3eb1, 0x0, 0x1);
        gbc.writeMem(0x6444, { 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0371
        gbc.setState(0x4779, 0x7668, 0x7b90, 0x2729, 0xaadc, 0x8ae, 0x0, 0x1);
        gbc.writeMem(0x4779, { 0x47 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7668, gbc.sp());
        EXPECT(0x477a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0372
        gbc.setState(0x646, 0x20d1, 0x69c0, 0x2b6a, 0x415f, 0xd3ec, 0x1, 0x0);
        gbc.writeMem(0x646, { 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x20d1, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0373
        gbc.setState(0xc83f, 0xc945, 0x3420, 0xbacf, 0xa6ba, 0xb2f9, 0x1, 0x0);
        gbc.writeMem(0xc83f, { 0x47 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc83f));
        // 47 0374
        gbc.setState(0x8982, 0xbe22, 0xc2e0, 0x4ef5, 0xa46b, 0x9fc4, 0x1, 0x0);
        gbc.writeMem(0x8982, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8982));
        // 47 0375
        gbc.setState(0x8f1e, 0x6d89, 0xf040, 0x60fc, 0xef77, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0x8f1e, { 0x47 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6d89, gbc.sp());
        EXPECT(0x8f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8f1e));
        // 47 0376
        gbc.setState(0x10ab, 0x3487, 0x4b30, 0x2edd, 0x5b3e, 0xac7b, 0x1, 0x1);
        gbc.writeMem(0x10ab, { 0x47 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0x10ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0377
        gbc.setState(0xef1, 0x6fa, 0xc510, 0x184b, 0x10d0, 0xcd48, 0x0, 0x0);
        gbc.writeMem(0xef1, { 0x47 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6fa, gbc.sp());
        EXPECT(0xef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0378
        gbc.setState(0xdfce, 0xb4f6, 0xf860, 0xce8a, 0xe582, 0xa9c8, 0x1, 0x0);
        gbc.writeMem(0xdfce, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb4f6, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdfce));
        // 47 0379
        gbc.setState(0xe922, 0x5bfb, 0xec20, 0x8ad1, 0x5fe0, 0xde83, 0x1, 0x0);
        gbc.writeMem(0xe922, { 0x47 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe922));
        // 47 037A
        gbc.setState(0x31bb, 0xb7f, 0x570, 0x8d28, 0xf2d3, 0x56b4, 0x1, 0x1);
        gbc.writeMem(0x31bb, { 0x47 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb7f, gbc.sp());
        EXPECT(0x31bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 037C
        gbc.setState(0xcc45, 0x98c0, 0x1ed0, 0x7116, 0xb70, 0x84f2, 0x0, 0x0);
        gbc.writeMem(0xcc45, { 0x47 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x98c0, gbc.sp());
        EXPECT(0xcc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcc45));
        // 47 037D
        gbc.setState(0xeffb, 0x8c1e, 0x1490, 0xe815, 0xdb8, 0xffa5, 0x0, 0x0);
        gbc.writeMem(0xeffb, { 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c1e, gbc.sp());
        EXPECT(0xeffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeffb));
        // 47 037E
        gbc.setState(0xd7ad, 0x31ad, 0x220, 0xb3fc, 0xf2a8, 0x377b, 0x1, 0x0);
        gbc.writeMem(0xd7ad, { 0x47 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0xd7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd7ad));
        // 47 037F
        gbc.setState(0x1283, 0xf6, 0x6db0, 0x37ef, 0x1881, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0x1283, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf6, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0380
        gbc.setState(0x8c07, 0x3386, 0xe210, 0xe71f, 0x5ff4, 0xa676, 0x0, 0x1);
        gbc.writeMem(0x8c07, { 0x47 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3386, gbc.sp());
        EXPECT(0x8c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8c07));
        // 47 0381
        gbc.setState(0xce84, 0xc1ca, 0x8e90, 0x4658, 0x2309, 0x6752, 0x0, 0x0);
        gbc.writeMem(0xce84, { 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc1ca, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xce84));
        // 47 0382
        gbc.setState(0x5c0e, 0xdeab, 0x79a0, 0x2233, 0x7829, 0x7c7b, 0x1, 0x1);
        gbc.writeMem(0x5c0e, { 0x47 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdeab, gbc.sp());
        EXPECT(0x5c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0384
        gbc.setState(0x297a, 0x4316, 0x80f0, 0x8493, 0xa01d, 0x4f09, 0x0, 0x1);
        gbc.writeMem(0x297a, { 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4316, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0385
        gbc.setState(0x5ca2, 0xdd68, 0x5a10, 0xfc3d, 0xc6ff, 0x8aad, 0x0, 0x1);
        gbc.writeMem(0x5ca2, { 0x47 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdd68, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0386
        gbc.setState(0xa622, 0x92f0, 0x870, 0x6d8e, 0x81d, 0x8c1b, 0x1, 0x0);
        gbc.writeMem(0xa622, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa622));
        // 47 0387
        gbc.setState(0x6eff, 0x9168, 0x46a0, 0x1303, 0x2926, 0xddf9, 0x1, 0x0);
        gbc.writeMem(0x6eff, { 0x47 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9168, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 0388
        gbc.setState(0xc646, 0x3238, 0xc80, 0xcc62, 0x1193, 0x35d7, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3238, gbc.sp());
        EXPECT(0xc647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc646));
        // 47 0389
        gbc.setState(0x96f5, 0xbe1c, 0xbb90, 0xea96, 0x8e03, 0x5b40, 0x1, 0x0);
        gbc.writeMem(0x96f5, { 0x47 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0x96f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x96f5));
        // 47 038A
        gbc.setState(0x1160, 0x1d3b, 0xb3c0, 0x473d, 0x3618, 0x4c10, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1d3b, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 038B
        gbc.setState(0xc944, 0x4248, 0x4af0, 0x4fb9, 0xfc83, 0x5e55, 0x0, 0x1);
        gbc.writeMem(0xc944, { 0x47 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0xc945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc944));
        // 47 038C
        gbc.setState(0xac11, 0x5bb0, 0xf560, 0xecbb, 0x240, 0xa30c, 0x1, 0x1);
        gbc.writeMem(0xac11, { 0x47 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0xac12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xac11));
        // 47 038D
        gbc.setState(0x5464, 0x58ba, 0xdfe0, 0x2a66, 0x252c, 0x962c, 0x0, 0x1);
        gbc.writeMem(0x5464, { 0x47 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0x5465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 038E
        gbc.setState(0x8c8b, 0x5dcf, 0x99f0, 0x123b, 0xfb70, 0x3ca4, 0x1, 0x1);
        gbc.writeMem(0x8c8b, { 0x47 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5dcf, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8c8b));
        // 47 038F
        gbc.setState(0x37cc, 0xaea1, 0x8110, 0xee36, 0x9bd3, 0xdc03, 0x0, 0x1);
        gbc.writeMem(0x37cc, { 0x47 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0390
        gbc.setState(0x88d6, 0x2378, 0xac0, 0xf67d, 0x70f0, 0x4a13, 0x0, 0x1);
        gbc.writeMem(0x88d6, { 0x47 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x88d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x88d6));
        // 47 0391
        gbc.setState(0xb36b, 0xedaf, 0x2e30, 0x6fad, 0xff6a, 0xd77, 0x0, 0x0);
        gbc.writeMem(0xb36b, { 0x47 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xedaf, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb36b));
        // 47 0392
        gbc.setState(0x351a, 0xaad7, 0xc290, 0x6192, 0x6c2d, 0x1297, 0x1, 0x0);
        gbc.writeMem(0x351a, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0393
        gbc.setState(0xa385, 0xcad3, 0x9190, 0x79ff, 0xad0d, 0xeccc, 0x0, 0x0);
        gbc.writeMem(0xa385, { 0x47 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcad3, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa385));
        // 47 0394
        gbc.setState(0x7106, 0x6481, 0x19d0, 0x282d, 0x1892, 0x5ffe, 0x1, 0x1);
        gbc.writeMem(0x7106, { 0x47 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6481, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0395
        gbc.setState(0x5e5a, 0xeb6c, 0x8ad0, 0x3b55, 0xfd61, 0xdd3b, 0x0, 0x1);
        gbc.writeMem(0x5e5a, { 0x47 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeb6c, gbc.sp());
        EXPECT(0x5e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0396
        gbc.setState(0xae17, 0xfc25, 0x9da0, 0xa66c, 0x9354, 0xe805, 0x0, 0x0);
        gbc.writeMem(0xae17, { 0x47 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfc25, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xae17));
        // 47 0397
        gbc.setState(0xb862, 0xf49d, 0x6150, 0x9c97, 0x68ee, 0x8c2b, 0x1, 0x1);
        gbc.writeMem(0xb862, { 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf49d, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb862));
        // 47 0398
        gbc.setState(0x75a, 0x4019, 0x970, 0x3c56, 0xbba7, 0xd1e6, 0x0, 0x0);
        gbc.writeMem(0x75a, { 0x47 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4019, gbc.sp());
        EXPECT(0x75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 0399
        gbc.setState(0xc35, 0xf65, 0xb450, 0x4fe, 0x8206, 0xb717, 0x0, 0x0);
        gbc.writeMem(0xc35, { 0x47 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 039A
        gbc.setState(0x29c4, 0x30b8, 0xb260, 0x7b1f, 0xb4ce, 0xa98b, 0x1, 0x0);
        gbc.writeMem(0x29c4, { 0x47 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 039B
        gbc.setState(0x1387, 0xf41d, 0xa670, 0x5e0d, 0xbf1, 0xc7f6, 0x1, 0x1);
        gbc.writeMem(0x1387, { 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf41d, gbc.sp());
        EXPECT(0x1388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 039C
        gbc.setState(0x3015, 0x40f8, 0xaef0, 0x135c, 0xeb41, 0x3f79, 0x1, 0x0);
        gbc.writeMem(0x3015, { 0x47 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0x3016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 039D
        gbc.setState(0xbd0f, 0x64c2, 0xa400, 0x3731, 0xdbba, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0xbd0f, { 0x47 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x64c2, gbc.sp());
        EXPECT(0xbd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbd0f));
        // 47 039E
        gbc.setState(0xb331, 0x108f, 0x39d0, 0x4d26, 0x49b1, 0x6f94, 0x0, 0x1);
        gbc.writeMem(0xb331, { 0x47 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0xb332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb331));
        // 47 039F
        gbc.setState(0x471, 0x5e08, 0xc7e0, 0x6e20, 0xbf18, 0x2455, 0x0, 0x1);
        gbc.writeMem(0x471, { 0x47 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03A0
        gbc.setState(0x309a, 0x7ff6, 0x4520, 0x9068, 0x80e2, 0x56db, 0x0, 0x1);
        gbc.writeMem(0x309a, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7ff6, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03A1
        gbc.setState(0xdc5e, 0x2aa3, 0x71e0, 0x88ef, 0xa41d, 0x15e3, 0x0, 0x1);
        gbc.writeMem(0xdc5e, { 0x47 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0xdc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdc5e));
        // 47 03A2
        gbc.setState(0x9f35, 0x2f0f, 0x40f0, 0x1178, 0xa8ae, 0xa84, 0x0, 0x0);
        gbc.writeMem(0x9f35, { 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2f0f, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9f35));
        // 47 03A3
        gbc.setState(0x5075, 0xc4cc, 0x57c0, 0xb6b7, 0x68b1, 0x7abb, 0x0, 0x0);
        gbc.writeMem(0x5075, { 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc4cc, gbc.sp());
        EXPECT(0x5076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03A4
        gbc.setState(0xbdc9, 0x9acc, 0x10a0, 0x180d, 0xcaed, 0x142e, 0x0, 0x0);
        gbc.writeMem(0xbdc9, { 0x47 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0xbdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbdc9));
        // 47 03A5
        gbc.setState(0xf6d, 0x496a, 0x5f60, 0x2736, 0x665f, 0x5216, 0x1, 0x0);
        gbc.writeMem(0xf6d, { 0x47 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x496a, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03A6
        gbc.setState(0x44b, 0x1ef9, 0x2870, 0x5fa5, 0x3f9c, 0xf940, 0x1, 0x1);
        gbc.writeMem(0x44b, { 0x47 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ef9, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03A7
        gbc.setState(0xd469, 0xef6, 0x5360, 0x8994, 0x7d73, 0x42c4, 0x0, 0x0);
        gbc.writeMem(0xd469, { 0x47 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xef6, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd469));
        // 47 03A8
        gbc.setState(0x6a31, 0xa1b4, 0x30d0, 0x99ef, 0xa966, 0xa0dc, 0x0, 0x0);
        gbc.writeMem(0x6a31, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa1b4, gbc.sp());
        EXPECT(0x6a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03A9
        gbc.setState(0xe382, 0x795, 0x1640, 0xab04, 0xbf2e, 0xa7e4, 0x0, 0x1);
        gbc.writeMem(0xe382, { 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x795, gbc.sp());
        EXPECT(0xe383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe382));
        // 47 03AA
        gbc.setState(0x1804, 0xe84a, 0x870, 0xf256, 0x28f5, 0xbb01, 0x1, 0x0);
        gbc.writeMem(0x1804, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe84a, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03AB
        gbc.setState(0x1e2e, 0xf3fa, 0xcb70, 0x739f, 0x5763, 0xa3c4, 0x1, 0x1);
        gbc.writeMem(0x1e2e, { 0x47 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf3fa, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03AC
        gbc.setState(0xb2c2, 0x8e15, 0x6dd0, 0xd88a, 0x74af, 0x71cf, 0x1, 0x1);
        gbc.writeMem(0xb2c2, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0xb2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb2c2));
        // 47 03AD
        gbc.setState(0x3e6a, 0xab2b, 0x850, 0xeb6, 0xa171, 0xb9ec, 0x0, 0x0);
        gbc.writeMem(0x3e6a, { 0x47 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xab2b, gbc.sp());
        EXPECT(0x3e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03AE
        gbc.setState(0xa518, 0x3997, 0x78e0, 0x5011, 0x5a8c, 0x1f57, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0x47 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa518));
        // 47 03AF
        gbc.setState(0xa8f6, 0x31fd, 0x6e0, 0xbbad, 0xd490, 0x2159, 0x0, 0x0);
        gbc.writeMem(0xa8f6, { 0x47 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0xa8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa8f6));
        // 47 03B0
        gbc.setState(0x119c, 0x19b6, 0x6860, 0x89c1, 0xe78f, 0xbe89, 0x1, 0x1);
        gbc.writeMem(0x119c, { 0x47 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x19b6, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03B1
        gbc.setState(0x44cf, 0x8b22, 0x3820, 0x70ff, 0x5d07, 0x96e3, 0x1, 0x1);
        gbc.writeMem(0x44cf, { 0x47 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03B2
        gbc.setState(0x7d76, 0x13e0, 0xe580, 0x6e92, 0x449d, 0x3b93, 0x1, 0x0);
        gbc.writeMem(0x7d76, { 0x47 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03B3
        gbc.setState(0x8104, 0xd41d, 0x6f00, 0x8c99, 0x8d96, 0xd2c, 0x0, 0x0);
        gbc.writeMem(0x8104, { 0x47 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd41d, gbc.sp());
        EXPECT(0x8105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8104));
        // 47 03B4
        gbc.setState(0x8dee, 0x9536, 0xe070, 0x5ab9, 0x37e, 0xefbb, 0x0, 0x1);
        gbc.writeMem(0x8dee, { 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9536, gbc.sp());
        EXPECT(0x8def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8dee));
        // 47 03B5
        gbc.setState(0x1d6, 0x6784, 0xd680, 0xd2ad, 0xdc9e, 0xdfe5, 0x1, 0x1);
        gbc.writeMem(0x1d6, { 0x47 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03B6
        gbc.setState(0x5f6d, 0xbef3, 0xdeb0, 0x28fa, 0x4d1d, 0x1b11, 0x1, 0x0);
        gbc.writeMem(0x5f6d, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03B7
        gbc.setState(0x873, 0x4ef3, 0x2660, 0xb2ff, 0xb872, 0x6c0b, 0x0, 0x1);
        gbc.writeMem(0x873, { 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03B8
        gbc.setState(0xa4b8, 0x626c, 0xc250, 0xfd6b, 0x115d, 0x4d5, 0x0, 0x1);
        gbc.writeMem(0xa4b8, { 0x47 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x626c, gbc.sp());
        EXPECT(0xa4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa4b8));
        // 47 03B9
        gbc.setState(0x7b47, 0xeee7, 0x2ad0, 0x7a94, 0x3503, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x7b47, { 0x47 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeee7, gbc.sp());
        EXPECT(0x7b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03BA
        gbc.setState(0xb5ec, 0x752b, 0xca60, 0xb383, 0xd2d6, 0xc30, 0x1, 0x0);
        gbc.writeMem(0xb5ec, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x752b, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb5ec));
        // 47 03BB
        gbc.setState(0x7a6d, 0x349b, 0x5d30, 0x6aa8, 0x5c5d, 0x4c7c, 0x0, 0x0);
        gbc.writeMem(0x7a6d, { 0x47 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x349b, gbc.sp());
        EXPECT(0x7a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03BC
        gbc.setState(0x6afa, 0xa0c5, 0xde10, 0xbfa8, 0x98d8, 0x200d, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0x47 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0x6afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03BD
        gbc.setState(0x9656, 0x7da4, 0x6390, 0xd1a2, 0x47cc, 0xc5b1, 0x0, 0x1);
        gbc.writeMem(0x9656, { 0x47 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7da4, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9656));
        // 47 03BE
        gbc.setState(0x50a9, 0x2569, 0x4c0, 0xacc4, 0x8ae2, 0x9386, 0x0, 0x0);
        gbc.writeMem(0x50a9, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2569, gbc.sp());
        EXPECT(0x50aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03BF
        gbc.setState(0x2709, 0xa3e, 0x8820, 0x7466, 0xb418, 0x2225, 0x0, 0x0);
        gbc.writeMem(0x2709, { 0x47 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03C0
        gbc.setState(0xb116, 0x22e4, 0x4280, 0x2a26, 0xaa60, 0xdd1, 0x0, 0x1);
        gbc.writeMem(0xb116, { 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0xb117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb116));
        // 47 03C1
        gbc.setState(0x2889, 0xda77, 0xb090, 0xa365, 0xfc26, 0x760e, 0x1, 0x0);
        gbc.writeMem(0x2889, { 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03C2
        gbc.setState(0x5729, 0x675c, 0x8cb0, 0xef04, 0xb4bf, 0x5525, 0x0, 0x0);
        gbc.writeMem(0x5729, { 0x47 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x675c, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03C3
        gbc.setState(0x8c5b, 0xaf3a, 0xeda0, 0x9bf9, 0x7fec, 0x4d5b, 0x1, 0x1);
        gbc.writeMem(0x8c5b, { 0x47 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0x8c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8c5b));
        // 47 03C5
        gbc.setState(0x2251, 0x38ab, 0xce80, 0xd3d8, 0xa599, 0x84d7, 0x0, 0x0);
        gbc.writeMem(0x2251, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03C6
        gbc.setState(0x3386, 0x184d, 0x7710, 0x8b40, 0x7123, 0x715b, 0x0, 0x1);
        gbc.writeMem(0x3386, { 0x47 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x184d, gbc.sp());
        EXPECT(0x3387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03C7
        gbc.setState(0xd155, 0xfda5, 0xf380, 0xec34, 0xba1b, 0xb117, 0x0, 0x0);
        gbc.writeMem(0xd155, { 0x47 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xd156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd155));
        // 47 03C8
        gbc.setState(0x7ea2, 0x68c3, 0x9410, 0xd834, 0xb7fc, 0xb14b, 0x1, 0x0);
        gbc.writeMem(0x7ea2, { 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03C9
        gbc.setState(0xe270, 0xc376, 0x89b0, 0x7dc1, 0xfdb, 0x383, 0x0, 0x1);
        gbc.writeMem(0xe270, { 0x47 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc376, gbc.sp());
        EXPECT(0xe271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe270));
        // 47 03CA
        gbc.setState(0x7d14, 0xb3c3, 0xe750, 0x6787, 0x172f, 0xb9de, 0x1, 0x1);
        gbc.writeMem(0x7d14, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb3c3, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03CB
        gbc.setState(0x772a, 0xffa3, 0xa6d0, 0xad4c, 0x2b8f, 0xb843, 0x0, 0x1);
        gbc.writeMem(0x772a, { 0x47 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0x772b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03CC
        gbc.setState(0x1ddf, 0xb292, 0x6d60, 0x2b9, 0x4b47, 0x1a58, 0x0, 0x0);
        gbc.writeMem(0x1ddf, { 0x47 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb292, gbc.sp());
        EXPECT(0x1de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03CD
        gbc.setState(0xdf58, 0xbecb, 0xb390, 0x763, 0x4b4e, 0xa690, 0x0, 0x1);
        gbc.writeMem(0xdf58, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdf58));
        // 47 03CE
        gbc.setState(0x83f9, 0x5c5c, 0xafa0, 0x81eb, 0x1901, 0x6ed8, 0x1, 0x0);
        gbc.writeMem(0x83f9, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5c5c, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x83f9));
        // 47 03CF
        gbc.setState(0xbc07, 0xb7bd, 0x4560, 0xf300, 0xb61a, 0x7c81, 0x0, 0x0);
        gbc.writeMem(0xbc07, { 0x47 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb7bd, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbc07));
        // 47 03D0
        gbc.setState(0x98d2, 0x1044, 0x9500, 0xafd1, 0xe117, 0x37b4, 0x1, 0x1);
        gbc.writeMem(0x98d2, { 0x47 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x98d2));
        // 47 03D1
        gbc.setState(0xe8d3, 0x476c, 0xffb0, 0x3bc3, 0xf4f3, 0x6acf, 0x0, 0x0);
        gbc.writeMem(0xe8d3, { 0x47 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x476c, gbc.sp());
        EXPECT(0xe8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe8d3));
        // 47 03D2
        gbc.setState(0x278b, 0x45a8, 0x4060, 0x57f2, 0xb30c, 0x4473, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0x47 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x278c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03D3
        gbc.setState(0xb118, 0xf78, 0x8b00, 0x37b4, 0xa930, 0x1f00, 0x0, 0x0);
        gbc.writeMem(0xb118, { 0x47 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0xb119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb118));
        // 47 03D4
        gbc.setState(0x2924, 0xffa1, 0x7440, 0x81b1, 0x4741, 0x6417, 0x1, 0x0);
        gbc.writeMem(0x2924, { 0x47 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xffa1, gbc.sp());
        EXPECT(0x2925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03D5
        gbc.setState(0xc8d, 0xbae3, 0x9470, 0xcf3d, 0x9bae, 0x9e8d, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbae3, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03D6
        gbc.setState(0xed19, 0xa52a, 0x94b0, 0xad52, 0x6a1c, 0x6e62, 0x0, 0x1);
        gbc.writeMem(0xed19, { 0x47 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0xed1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xed19));
        // 47 03D7
        gbc.setState(0x9029, 0x45c1, 0x5bd0, 0xa68b, 0xb975, 0xe848, 0x1, 0x1);
        gbc.writeMem(0x9029, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x45c1, gbc.sp());
        EXPECT(0x902a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9029));
        // 47 03D8
        gbc.setState(0x78be, 0x4aaf, 0x3180, 0xa0ee, 0x10fd, 0x8879, 0x0, 0x1);
        gbc.writeMem(0x78be, { 0x47 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4aaf, gbc.sp());
        EXPECT(0x78bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03D9
        gbc.setState(0x7e50, 0xd8ad, 0x4780, 0x8136, 0xfa06, 0x159c, 0x1, 0x1);
        gbc.writeMem(0x7e50, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd8ad, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03DA
        gbc.setState(0x258e, 0x2f20, 0xadd0, 0xc9c8, 0xc09e, 0x834a, 0x0, 0x0);
        gbc.writeMem(0x258e, { 0x47 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0x258f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03DB
        gbc.setState(0xd25b, 0xb76, 0x2430, 0x3bcb, 0xc45a, 0x7951, 0x1, 0x1);
        gbc.writeMem(0xd25b, { 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0xd25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd25b));
        // 47 03DC
        gbc.setState(0x6dd6, 0x23c4, 0xbfb0, 0x3402, 0x2134, 0xbc78, 0x0, 0x0);
        gbc.writeMem(0x6dd6, { 0x47 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0x6dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03DD
        gbc.setState(0x7e78, 0x9132, 0x5710, 0xfbc7, 0xb730, 0xc5f5, 0x1, 0x0);
        gbc.writeMem(0x7e78, { 0x47 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9132, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 47 03DE
        gbc.setState(0x96ef, 0xfee7, 0xaf10, 0xe163, 0x8180, 0x20ea, 0x1, 0x0);
        gbc.writeMem(0x96ef, { 0x47 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfee7, gbc.sp());
        EXPECT(0x96f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x96ef));
        // 47 03DF
        gbc.setState(0xdde8, 0xea48, 0xa200, 0x166c, 0x4ff5, 0xe086, 0x1, 0x1);
        gbc.writeMem(0xdde8, { 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xea48, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdde8));
        // 47 03E0
        gbc.setState(0xc998, 0x8a53, 0x9d80, 0x3e35, 0x996c, 0xf4f6, 0x0, 0x1);
        gbc.writeMem(0xc998, { 0x47 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8a53, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc998));
        // 47 03E1
        gbc.setState(0xb522, 0x1f5b, 0x3d20, 0x680c, 0x806c, 0x2fac, 0x0, 0x0);
        gbc.writeMem(0xb522, { 0x47 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1f5b, gbc.sp());
        EXPECT(0xb523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb522));
        // 47 03E2
        gbc.setState(0x73fa, 0x3a3b, 0xf620, 0xc893, 0xe59f, 0x58c7, 0x1, 0x1);
        gbc.writeMem(0x73fa, { 0x47 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3a3b, gbc.sp());
        EXPECT(0x73fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03E3
        gbc.setState(0x9141, 0xcf97, 0xdae0, 0x59a1, 0x6b23, 0xe263, 0x0, 0x0);
        gbc.writeMem(0x9141, { 0x47 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcf97, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9141));
        // 47 03E4
        gbc.setState(0x2203, 0x9cdb, 0x5060, 0x895e, 0x37d6, 0x8bb8, 0x1, 0x1);
        gbc.writeMem(0x2203, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03E5
        gbc.setState(0xe5a2, 0x269d, 0xc3f0, 0xd966, 0x4d86, 0x59a7, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0x47 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x269d, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe5a2));
        // 47 03E6
        gbc.setState(0x942, 0x7d9c, 0xa160, 0x4af5, 0xe350, 0xfe84, 0x1, 0x1);
        gbc.writeMem(0x942, { 0x47 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 47 03E7
        gbc.setState(0x5be1, 0xc00f, 0x52e0, 0x6886, 0xe101, 0x8a96, 0x1, 0x0);
        gbc.writeMem(0x5be1, { 0x47 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc00f, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
