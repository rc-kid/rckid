    TEST(gbcemu, opcode_35) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 35 0001
        gbc.setState(0xbcde, 0x495a, 0x3320, 0x2e39, 0x67f7, 0xcc74, 0x1, 0x1);
        gbc.writeMem(0xbcde, { 0x35 });
        gbc.writeMem(0xcc74, { 0x28 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0xbcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbcde));
        EXPECT(0x27, gbc.readMem(0xcc74));
        // 35 0003
        gbc.setState(0x64ff, 0x694, 0xc060, 0xa46d, 0xb9f6, 0xe124, 0x1, 0x1);
        gbc.writeMem(0x64ff, { 0x35 });
        gbc.writeMem(0xe124, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x694, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe124));
        // 35 0004
        gbc.setState(0xe3f4, 0x6842, 0x8380, 0xe7ac, 0x6fdc, 0xf532, 0x0, 0x0);
        gbc.writeMem(0xe3f4, { 0x35 });
        gbc.writeMem(0xf532, { 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6842, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe3f4));
        EXPECT(0xab, gbc.readMem(0xf532));
        // 35 0005
        gbc.setState(0xb60b, 0x6127, 0xbfb0, 0x57cd, 0x609b, 0xc645, 0x1, 0x1);
        gbc.writeMem(0xb60b, { 0x35 });
        gbc.writeMem(0xc645, { 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6127, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb60b));
        EXPECT(0xb9, gbc.readMem(0xc645));
        // 35 0007
        gbc.setState(0x8372, 0xfe9e, 0x9160, 0x3f75, 0xfc1c, 0xe0c0, 0x0, 0x1);
        gbc.writeMem(0x8372, { 0x35 });
        gbc.writeMem(0xe0c0, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfe9e, gbc.sp());
        EXPECT(0x8373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8372));
        EXPECT(0x43, gbc.readMem(0xe0c0));
        // 35 0008
        gbc.setState(0xa6b1, 0xaa86, 0xfdb0, 0xa84e, 0xa387, 0x8451, 0x1, 0x0);
        gbc.writeMem(0x8451, { 0x22 });
        gbc.writeMem(0xa6b1, { 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaa86, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8451));
        EXPECT(0x35, gbc.readMem(0xa6b1));
        // 35 000A
        gbc.setState(0x8cfa, 0xf1a8, 0xe80, 0x6ae, 0xdd22, 0xcd50, 0x0, 0x1);
        gbc.writeMem(0x8cfa, { 0x35 });
        gbc.writeMem(0xcd50, { 0xfa });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8cfa));
        EXPECT(0xf9, gbc.readMem(0xcd50));
        // 35 000D
        gbc.setState(0xa9a, 0xe024, 0xce90, 0xdcc4, 0xcaea, 0xc5eb, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0x35 });
        gbc.writeMem(0xc5eb, { 0x14 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc5eb));
        // 35 0011
        gbc.setState(0x472b, 0x5c40, 0x5c80, 0x2c63, 0xc3a4, 0x8b72, 0x0, 0x0);
        gbc.writeMem(0x472b, { 0x35 });
        gbc.writeMem(0x8b72, { 0xe2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0x472c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8b72));
        // 35 0013
        gbc.setState(0xee24, 0xa5f8, 0x3d40, 0x83b9, 0xafc5, 0xe23b, 0x0, 0x0);
        gbc.writeMem(0xe23b, { 0x20 });
        gbc.writeMem(0xee24, { 0x35 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa5f8, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe23b));
        EXPECT(0x35, gbc.readMem(0xee24));
        // 35 0015
        gbc.setState(0x3c65, 0xfdd4, 0x1890, 0x28e7, 0xaaed, 0x94ca, 0x0, 0x0);
        gbc.writeMem(0x3c65, { 0x35 });
        gbc.writeMem(0x94ca, { 0x1e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfdd4, gbc.sp());
        EXPECT(0x3c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x94ca));
        // 35 0016
        gbc.setState(0x8f42, 0x2ec6, 0xa680, 0xd777, 0xeb7c, 0xff2b, 0x0, 0x0);
        gbc.writeMem(0x8f42, { 0x35 });
        gbc.writeMem(0xff2b, { 0xd4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0x8f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8f42));
        EXPECT(0xd3, gbc.readMem(0xff2b));
        // 35 0017
        gbc.setState(0x365e, 0x7f3, 0x9870, 0x3148, 0x8cd1, 0x9388, 0x1, 0x0);
        gbc.writeMem(0x365e, { 0x35 });
        gbc.writeMem(0x9388, { 0xa9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7f3, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9388));
        // 35 0018
        gbc.setState(0x996f, 0x1a62, 0xbbf0, 0x4f22, 0x6f7f, 0xa6e7, 0x1, 0x1);
        gbc.writeMem(0x996f, { 0x35 });
        gbc.writeMem(0xa6e7, { 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1a62, gbc.sp());
        EXPECT(0x9970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x996f));
        EXPECT(0xc8, gbc.readMem(0xa6e7));
        // 35 0019
        gbc.setState(0xae68, 0xefbe, 0x3e20, 0xe7e6, 0x8282, 0x86a3, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0x70 });
        gbc.writeMem(0xae68, { 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x86a3));
        EXPECT(0x35, gbc.readMem(0xae68));
        // 35 001D
        gbc.setState(0x89f6, 0x4e6f, 0xc850, 0x5ceb, 0xd254, 0xe411, 0x0, 0x0);
        gbc.writeMem(0x89f6, { 0x35 });
        gbc.writeMem(0xe411, { 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0x89f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x89f6));
        EXPECT(0xd4, gbc.readMem(0xe411));
        // 35 001E
        gbc.setState(0x78e9, 0xb32b, 0x9b70, 0x9ebd, 0x44b8, 0xd230, 0x0, 0x1);
        gbc.writeMem(0x78e9, { 0x35 });
        gbc.writeMem(0xd230, { 0x8c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0x78ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd230));
        // 35 001F
        gbc.setState(0x76d2, 0x285d, 0x8ef0, 0x9dcb, 0xd1d6, 0xa4e4, 0x0, 0x0);
        gbc.writeMem(0x76d2, { 0x35 });
        gbc.writeMem(0xa4e4, { 0x67 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x285d, gbc.sp());
        EXPECT(0x76d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa4e4));
        // 35 0024
        gbc.setState(0xb98b, 0xd524, 0x3e40, 0xa326, 0xf678, 0xa679, 0x1, 0x0);
        gbc.writeMem(0xa679, { 0xc6 });
        gbc.writeMem(0xb98b, { 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa679));
        EXPECT(0x35, gbc.readMem(0xb98b));
        // 35 0025
        gbc.setState(0x63e2, 0x3bcf, 0xb720, 0xcb2d, 0xae7, 0xde1d, 0x0, 0x0);
        gbc.writeMem(0x63e2, { 0x35 });
        gbc.writeMem(0xde1d, { 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3bcf, gbc.sp());
        EXPECT(0x63e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xde1d));
        // 35 0026
        gbc.setState(0x454b, 0x30d0, 0x2450, 0x893, 0x5597, 0x872a, 0x1, 0x1);
        gbc.writeMem(0x454b, { 0x35 });
        gbc.writeMem(0x872a, { 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0x454c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x872a));
        // 35 0028
        gbc.setState(0x4de4, 0x727f, 0xc2e0, 0xd46e, 0xd919, 0x80e2, 0x1, 0x0);
        gbc.writeMem(0x4de4, { 0x35 });
        gbc.writeMem(0x80e2, { 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x727f, gbc.sp());
        EXPECT(0x4de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x80e2));
        // 35 0031
        gbc.setState(0xbba7, 0x917c, 0x90e0, 0x6382, 0x9641, 0xb4db, 0x1, 0x1);
        gbc.writeMem(0xb4db, { 0x2 });
        gbc.writeMem(0xbba7, { 0x35 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0xbba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb4db));
        EXPECT(0x35, gbc.readMem(0xbba7));
        // 35 0035
        gbc.setState(0x9ef4, 0x684, 0xe0, 0x92b1, 0x8e1d, 0xd33b, 0x0, 0x1);
        gbc.writeMem(0x9ef4, { 0x35 });
        gbc.writeMem(0xd33b, { 0x23 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x684, gbc.sp());
        EXPECT(0x9ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9ef4));
        EXPECT(0x22, gbc.readMem(0xd33b));
        // 35 0036
        gbc.setState(0x3b26, 0x5cb0, 0x9f80, 0x6cf0, 0x2504, 0xff73, 0x0, 0x1);
        gbc.writeMem(0x3b26, { 0x35 });
        gbc.writeMem(0xff73, { 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0x3b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff73));
        // 35 0039
        gbc.setState(0xb92d, 0xeca9, 0x2380, 0xdc9e, 0xe280, 0xbad8, 0x1, 0x0);
        gbc.writeMem(0xb92d, { 0x35 });
        gbc.writeMem(0xbad8, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0xb92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb92d));
        EXPECT(0xf, gbc.readMem(0xbad8));
        // 35 003A
        gbc.setState(0xe961, 0xef24, 0x6b50, 0xf536, 0x853a, 0x8ada, 0x1, 0x1);
        gbc.writeMem(0x8ada, { 0xe5 });
        gbc.writeMem(0xe961, { 0x35 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xef24, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8ada));
        EXPECT(0x35, gbc.readMem(0xe961));
        // 35 003E
        gbc.setState(0x5d86, 0xe997, 0xfa0, 0xa479, 0xd28d, 0xec38, 0x1, 0x1);
        gbc.writeMem(0x5d86, { 0x35 });
        gbc.writeMem(0xec38, { 0x24 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xec38));
        // 35 003F
        gbc.setState(0x324d, 0xe61a, 0x2000, 0x1afb, 0x332e, 0xdba1, 0x1, 0x0);
        gbc.writeMem(0x324d, { 0x35 });
        gbc.writeMem(0xdba1, { 0xe7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x324e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xdba1));
        // 35 0040
        gbc.setState(0xebf1, 0x933c, 0x9b50, 0x1ff4, 0x36a1, 0xc024, 0x1, 0x1);
        gbc.writeMem(0xc024, { 0xff });
        gbc.writeMem(0xebf1, { 0x35 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc024));
        EXPECT(0x35, gbc.readMem(0xebf1));
        // 35 0041
        gbc.setState(0x59a6, 0x5ba1, 0xa510, 0x7cee, 0x9f71, 0xb241, 0x0, 0x1);
        gbc.writeMem(0x59a6, { 0x35 });
        gbc.writeMem(0xb241, { 0xc0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5ba1, gbc.sp());
        EXPECT(0x59a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb241));
        // 35 0042
        gbc.setState(0x7b54, 0xe358, 0xf190, 0x5e76, 0x62c9, 0x9ab0, 0x1, 0x1);
        gbc.writeMem(0x7b54, { 0x35 });
        gbc.writeMem(0x9ab0, { 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x7b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9ab0));
        // 35 0043
        gbc.setState(0xe942, 0xe8fb, 0x3970, 0xf1e0, 0x590d, 0xfd34, 0x0, 0x0);
        gbc.writeMem(0xe942, { 0x35 });
        gbc.writeMem(0xfd34, { 0x32 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe8fb, gbc.sp());
        EXPECT(0xe943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe942));
        EXPECT(0x31, gbc.readMem(0xfd34));
        // 35 0044
        gbc.setState(0x4286, 0x785b, 0x2280, 0xdfab, 0xa091, 0x9491, 0x0, 0x0);
        gbc.writeMem(0x4286, { 0x35 });
        gbc.writeMem(0x9491, { 0x53 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x785b, gbc.sp());
        EXPECT(0x4287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9491));
        // 35 0046
        gbc.setState(0x88a7, 0xde25, 0xf830, 0x5858, 0x7893, 0xebf9, 0x0, 0x0);
        gbc.writeMem(0x88a7, { 0x35 });
        gbc.writeMem(0xebf9, { 0xfc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0x88a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x88a7));
        EXPECT(0xfb, gbc.readMem(0xebf9));
        // 35 0048
        gbc.setState(0xa0c5, 0x4565, 0xfa80, 0x2ad6, 0x9ffd, 0x8b4c, 0x0, 0x0);
        gbc.writeMem(0x8b4c, { 0x3 });
        gbc.writeMem(0xa0c5, { 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0xa0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8b4c));
        EXPECT(0x35, gbc.readMem(0xa0c5));
        // 35 004D
        gbc.setState(0xc063, 0xcbe4, 0x9ac0, 0x4a4f, 0xae0, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0xa0f4, { 0x4a });
        gbc.writeMem(0xc063, { 0x35 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcbe4, gbc.sp());
        EXPECT(0xc064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa0f4));
        EXPECT(0x35, gbc.readMem(0xc063));
        // 35 004F
        gbc.setState(0x50fa, 0x5286, 0x4ca0, 0xe01a, 0xd3fa, 0xc732, 0x0, 0x1);
        gbc.writeMem(0x50fa, { 0x35 });
        gbc.writeMem(0xc732, { 0x2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x50fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc732));
        // 35 0051
        gbc.setState(0x338b, 0x16be, 0x2830, 0x5da3, 0x7c0b, 0xb57b, 0x1, 0x1);
        gbc.writeMem(0x338b, { 0x35 });
        gbc.writeMem(0xb57b, { 0xc2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x16be, gbc.sp());
        EXPECT(0x338c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb57b));
        // 35 0055
        gbc.setState(0x8420, 0x1a72, 0x6ab0, 0x337e, 0x8005, 0xbd70, 0x0, 0x0);
        gbc.writeMem(0x8420, { 0x35 });
        gbc.writeMem(0xbd70, { 0x78 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1a72, gbc.sp());
        EXPECT(0x8421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8420));
        EXPECT(0x77, gbc.readMem(0xbd70));
        // 35 0057
        gbc.setState(0x917a, 0x7bd1, 0xf340, 0xc330, 0x2952, 0x989b, 0x0, 0x0);
        gbc.writeMem(0x917a, { 0x35 });
        gbc.writeMem(0x989b, { 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7bd1, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x917a));
        EXPECT(0xda, gbc.readMem(0x989b));
        // 35 005A
        gbc.setState(0x82d7, 0x627c, 0x9640, 0x8005, 0x59b4, 0xb657, 0x1, 0x1);
        gbc.writeMem(0x82d7, { 0x35 });
        gbc.writeMem(0xb657, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x627c, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x82d7));
        EXPECT(0x9b, gbc.readMem(0xb657));
        // 35 005B
        gbc.setState(0x13c, 0x7d7d, 0xf530, 0xa2d2, 0xe3c7, 0xe5d9, 0x1, 0x1);
        gbc.writeMem(0x13c, { 0x35 });
        gbc.writeMem(0xe5d9, { 0xcc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        // 35 005C
        gbc.setState(0x3ecb, 0x1b98, 0xb1b0, 0x721d, 0xe450, 0xa868, 0x0, 0x1);
        gbc.writeMem(0x3ecb, { 0x35 });
        gbc.writeMem(0xa868, { 0x8d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x3ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa868));
        // 35 005D
        gbc.setState(0x6823, 0x484c, 0xae90, 0x8576, 0x85b, 0xcb0b, 0x1, 0x0);
        gbc.writeMem(0x6823, { 0x35 });
        gbc.writeMem(0xcb0b, { 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x484c, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcb0b));
        // 35 005E
        gbc.setState(0x72b7, 0xbb70, 0x5310, 0x84f7, 0xe8a2, 0xde35, 0x0, 0x0);
        gbc.writeMem(0x72b7, { 0x35 });
        gbc.writeMem(0xde35, { 0x83 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x72b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xde35));
        // 35 0061
        gbc.setState(0xccd5, 0x5bd4, 0x1eb0, 0xbe24, 0x780e, 0x8e42, 0x0, 0x1);
        gbc.writeMem(0x8e42, { 0x3b });
        gbc.writeMem(0xccd5, { 0x35 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5bd4, gbc.sp());
        EXPECT(0xccd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8e42));
        EXPECT(0x35, gbc.readMem(0xccd5));
        // 35 0064
        gbc.setState(0x6853, 0xde61, 0x3010, 0x1d4a, 0xabff, 0xdcbe, 0x1, 0x1);
        gbc.writeMem(0x6853, { 0x35 });
        gbc.writeMem(0xdcbe, { 0xb6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xde61, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdcbe));
        // 35 0065
        gbc.setState(0xcf09, 0x5d67, 0xf480, 0x80bc, 0xe6ca, 0xcc33, 0x1, 0x1);
        gbc.writeMem(0xcc33, { 0x83 });
        gbc.writeMem(0xcf09, { 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5d67, gbc.sp());
        EXPECT(0xcf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xcc33));
        EXPECT(0x35, gbc.readMem(0xcf09));
        // 35 0069
        gbc.setState(0x637, 0xb73a, 0x42e0, 0x6391, 0x66c4, 0xf996, 0x1, 0x0);
        gbc.writeMem(0x637, { 0x35 });
        gbc.writeMem(0xf996, { 0x9d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb73a, gbc.sp());
        EXPECT(0x638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xf996));
        // 35 006D
        gbc.setState(0xbf3f, 0x7039, 0x5690, 0x6011, 0x7c0d, 0xfea1, 0x1, 0x0);
        gbc.writeMem(0xbf3f, { 0x35 });
        gbc.writeMem(0xfea1, { 0x63 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7039, gbc.sp());
        EXPECT(0xbf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbf3f));
        EXPECT(0x62, gbc.readMem(0xfea1));
        // 35 0071
        gbc.setState(0x3141, 0x5f68, 0x2620, 0xbea7, 0xf45b, 0xd12c, 0x1, 0x1);
        gbc.writeMem(0x3141, { 0x35 });
        gbc.writeMem(0xd12c, { 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5f68, gbc.sp());
        EXPECT(0x3142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd12c));
        // 35 0072
        gbc.setState(0x7ea2, 0x8400, 0x3d70, 0x7f74, 0x9efa, 0xbb34, 0x1, 0x1);
        gbc.writeMem(0x7ea2, { 0x35 });
        gbc.writeMem(0xbb34, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8400, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb34));
        // 35 0074
        gbc.setState(0x17c9, 0x13a7, 0x7550, 0x634, 0x239e, 0xdefd, 0x0, 0x0);
        gbc.writeMem(0x17c9, { 0x35 });
        gbc.writeMem(0xdefd, { 0xe0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x13a7, gbc.sp());
        EXPECT(0x17ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xdefd));
        // 35 0078
        gbc.setState(0x499c, 0xe4a6, 0xebb0, 0x32de, 0x1bd2, 0xea84, 0x1, 0x0);
        gbc.writeMem(0x499c, { 0x35 });
        gbc.writeMem(0xea84, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xea84));
        // 35 007A
        gbc.setState(0xdf1e, 0x6ba2, 0x1940, 0xe698, 0xa2a1, 0x9d28, 0x1, 0x0);
        gbc.writeMem(0x9d28, { 0x29 });
        gbc.writeMem(0xdf1e, { 0x35 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6ba2, gbc.sp());
        EXPECT(0xdf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9d28));
        EXPECT(0x35, gbc.readMem(0xdf1e));
        // 35 007B
        gbc.setState(0xe5ed, 0xec87, 0x1f40, 0x674b, 0x5239, 0xf362, 0x0, 0x0);
        gbc.writeMem(0xe5ed, { 0x35 });
        gbc.writeMem(0xf362, { 0xda });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xec87, gbc.sp());
        EXPECT(0xe5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe5ed));
        EXPECT(0xd9, gbc.readMem(0xf362));
        // 35 007E
        gbc.setState(0x8a42, 0x8117, 0x70b0, 0xd9f6, 0xd8c8, 0xf940, 0x0, 0x0);
        gbc.writeMem(0x8a42, { 0x35 });
        gbc.writeMem(0xf940, { 0x6a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8117, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8a42));
        EXPECT(0x69, gbc.readMem(0xf940));
        // 35 007F
        gbc.setState(0xa0db, 0xb921, 0xd220, 0xf7d3, 0x6341, 0xdee9, 0x1, 0x0);
        gbc.writeMem(0xa0db, { 0x35 });
        gbc.writeMem(0xdee9, { 0x1e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa0db));
        EXPECT(0x1d, gbc.readMem(0xdee9));
        // 35 0081
        gbc.setState(0x3d00, 0xc7e8, 0x6fe0, 0x9c4, 0xa66, 0xf9c8, 0x1, 0x0);
        gbc.writeMem(0x3d00, { 0x35 });
        gbc.writeMem(0xf9c8, { 0x9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x3d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xf9c8));
        // 35 0082
        gbc.setState(0x9bbb, 0x304d, 0xe4d0, 0xa882, 0x5796, 0x8c6f, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0x12 });
        gbc.writeMem(0x9bbb, { 0x35 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8c6f));
        EXPECT(0x35, gbc.readMem(0x9bbb));
        // 35 0086
        gbc.setState(0x16d3, 0xd565, 0x9610, 0xb668, 0xf2f7, 0xf773, 0x1, 0x1);
        gbc.writeMem(0x16d3, { 0x35 });
        gbc.writeMem(0xf773, { 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xf773));
        // 35 0087
        gbc.setState(0x515d, 0x31ba, 0xf250, 0x9a65, 0xc8dd, 0xea3c, 0x1, 0x1);
        gbc.writeMem(0x515d, { 0x35 });
        gbc.writeMem(0xea3c, { 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x31ba, gbc.sp());
        EXPECT(0x515e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xea3c));
        // 35 0089
        gbc.setState(0xd3ce, 0x650, 0x7fe0, 0x7864, 0x530b, 0xe3d6, 0x0, 0x1);
        gbc.writeMem(0xd3ce, { 0x35 });
        gbc.writeMem(0xe3d6, { 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x650, gbc.sp());
        EXPECT(0xd3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd3ce));
        EXPECT(0xb3, gbc.readMem(0xe3d6));
        // 35 008B
        gbc.setState(0xdc6d, 0x8965, 0x25a0, 0x96c4, 0x1ad, 0x8735, 0x1, 0x1);
        gbc.writeMem(0x8735, { 0xec });
        gbc.writeMem(0xdc6d, { 0x35 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8965, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8735));
        EXPECT(0x35, gbc.readMem(0xdc6d));
        // 35 008C
        gbc.setState(0xccfe, 0x95e5, 0x61d0, 0x3700, 0xfe98, 0xabf5, 0x1, 0x1);
        gbc.writeMem(0xabf5, { 0x14 });
        gbc.writeMem(0xccfe, { 0x35 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x95e5, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xabf5));
        EXPECT(0x35, gbc.readMem(0xccfe));
        // 35 008D
        gbc.setState(0x368f, 0xa966, 0x1310, 0x7ec9, 0xd1d9, 0xf15d, 0x1, 0x0);
        gbc.writeMem(0x368f, { 0x35 });
        gbc.writeMem(0xf15d, { 0xa9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa966, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xf15d));
        // 35 008E
        gbc.setState(0x8d5e, 0xa667, 0xed0, 0x57d5, 0x17c6, 0x89b2, 0x0, 0x1);
        gbc.writeMem(0x89b2, { 0x70 });
        gbc.writeMem(0x8d5e, { 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa667, gbc.sp());
        EXPECT(0x8d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x89b2));
        EXPECT(0x35, gbc.readMem(0x8d5e));
        // 35 008F
        gbc.setState(0x41e3, 0x9b11, 0xd480, 0x221e, 0x929e, 0xf0f6, 0x0, 0x0);
        gbc.writeMem(0x41e3, { 0x35 });
        gbc.writeMem(0xf0f6, { 0x8a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9b11, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xf0f6));
        // 35 0090
        gbc.setState(0xe7a1, 0x7aa2, 0x3530, 0x890b, 0x6e6c, 0xd96e, 0x0, 0x1);
        gbc.writeMem(0xd96e, { 0x89 });
        gbc.writeMem(0xe7a1, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7aa2, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd96e));
        EXPECT(0x35, gbc.readMem(0xe7a1));
        // 35 0094
        gbc.setState(0xc3f, 0xcd01, 0xbeb0, 0x63bc, 0x4164, 0x8b24, 0x0, 0x0);
        gbc.writeMem(0xc3f, { 0x35 });
        gbc.writeMem(0x8b24, { 0xa0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcd01, gbc.sp());
        EXPECT(0xc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8b24));
        // 35 0095
        gbc.setState(0x8c29, 0x573, 0xae10, 0xa67c, 0xcd23, 0xc707, 0x0, 0x1);
        gbc.writeMem(0x8c29, { 0x35 });
        gbc.writeMem(0xc707, { 0x51 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x573, gbc.sp());
        EXPECT(0x8c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8c29));
        EXPECT(0x50, gbc.readMem(0xc707));
        // 35 0096
        gbc.setState(0x872f, 0xbd58, 0x5e60, 0x4053, 0xab47, 0x8d5b, 0x0, 0x0);
        gbc.writeMem(0x872f, { 0x35 });
        gbc.writeMem(0x8d5b, { 0x17 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbd58, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x872f));
        EXPECT(0x16, gbc.readMem(0x8d5b));
        // 35 0098
        gbc.setState(0x172f, 0x87d9, 0x4300, 0x73fd, 0x2264, 0xf64a, 0x0, 0x1);
        gbc.writeMem(0x172f, { 0x35 });
        gbc.writeMem(0xf64a, { 0xb5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x87d9, gbc.sp());
        EXPECT(0x1730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xf64a));
        // 35 0099
        gbc.setState(0xee83, 0xcfa7, 0xa0f0, 0x783a, 0x1a02, 0x814c, 0x1, 0x0);
        gbc.writeMem(0x814c, { 0x8f });
        gbc.writeMem(0xee83, { 0x35 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcfa7, gbc.sp());
        EXPECT(0xee84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x814c));
        EXPECT(0x35, gbc.readMem(0xee83));
        // 35 009C
        gbc.setState(0x8d66, 0x65e7, 0x4160, 0xcf32, 0x397, 0xbdc9, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0x35 });
        gbc.writeMem(0xbdc9, { 0x67 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8d66));
        EXPECT(0x66, gbc.readMem(0xbdc9));
        // 35 009E
        gbc.setState(0x2d6c, 0x493b, 0x7a70, 0x2b2c, 0xe0f0, 0xe6e6, 0x0, 0x0);
        gbc.writeMem(0x2d6c, { 0x35 });
        gbc.writeMem(0xe6e6, { 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x493b, gbc.sp());
        EXPECT(0x2d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe6e6));
        // 35 00A0
        gbc.setState(0x833b, 0x66dc, 0xa640, 0x9238, 0xd05b, 0xa815, 0x0, 0x0);
        gbc.writeMem(0x833b, { 0x35 });
        gbc.writeMem(0xa815, { 0xf2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x66dc, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x833b));
        EXPECT(0xf1, gbc.readMem(0xa815));
        // 35 00A1
        gbc.setState(0x6efb, 0xf8a1, 0xfe0, 0x7235, 0x9a67, 0xd24f, 0x1, 0x1);
        gbc.writeMem(0x6efb, { 0x35 });
        gbc.writeMem(0xd24f, { 0xcf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0x6efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd24f));
        // 35 00A2
        gbc.setState(0x3b31, 0xa02c, 0xc0c0, 0x15f4, 0x446d, 0xa0c4, 0x1, 0x0);
        gbc.writeMem(0x3b31, { 0x35 });
        gbc.writeMem(0xa0c4, { 0xc7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa02c, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa0c4));
        // 35 00A7
        gbc.setState(0xcdc9, 0xacaa, 0x1730, 0x4a96, 0xcabe, 0xfb82, 0x0, 0x1);
        gbc.writeMem(0xcdc9, { 0x35 });
        gbc.writeMem(0xfb82, { 0x33 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xacaa, gbc.sp());
        EXPECT(0xcdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcdc9));
        EXPECT(0x32, gbc.readMem(0xfb82));
        // 35 00A8
        gbc.setState(0x7094, 0x3aad, 0x2200, 0x74be, 0xf446, 0x9243, 0x0, 0x0);
        gbc.writeMem(0x7094, { 0x35 });
        gbc.writeMem(0x9243, { 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0x7095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9243));
        // 35 00AA
        gbc.setState(0x87ba, 0xe3e5, 0xee50, 0xebc8, 0x7468, 0xd884, 0x0, 0x0);
        gbc.writeMem(0x87ba, { 0x35 });
        gbc.writeMem(0xd884, { 0xb4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe3e5, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x87ba));
        EXPECT(0xb3, gbc.readMem(0xd884));
        // 35 00AB
        gbc.setState(0xc4bc, 0xb4de, 0x6960, 0xcffb, 0xee16, 0xf3ed, 0x0, 0x0);
        gbc.writeMem(0xc4bc, { 0x35 });
        gbc.writeMem(0xf3ed, { 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb4de, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc4bc));
        EXPECT(0x39, gbc.readMem(0xf3ed));
        // 35 00AC
        gbc.setState(0x2e75, 0xfa65, 0xa250, 0xb954, 0xf52, 0xa257, 0x1, 0x1);
        gbc.writeMem(0x2e75, { 0x35 });
        gbc.writeMem(0xa257, { 0x77 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa257));
        // 35 00B2
        gbc.setState(0xc64f, 0xcfe0, 0xb8c0, 0x216a, 0x862b, 0xf107, 0x0, 0x1);
        gbc.writeMem(0xc64f, { 0x35 });
        gbc.writeMem(0xf107, { 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcfe0, gbc.sp());
        EXPECT(0xc650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc64f));
        EXPECT(0x39, gbc.readMem(0xf107));
        // 35 00B4
        gbc.setState(0x567e, 0xb35, 0x5b40, 0x7a4a, 0x33f5, 0xc425, 0x1, 0x1);
        gbc.writeMem(0x567e, { 0x35 });
        gbc.writeMem(0xc425, { 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0x567f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc425));
        // 35 00B6
        gbc.setState(0xe874, 0x6da3, 0x74d0, 0x9c4c, 0xb243, 0x811f, 0x1, 0x1);
        gbc.writeMem(0x811f, { 0x79 });
        gbc.writeMem(0xe874, { 0x35 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x811f));
        EXPECT(0x35, gbc.readMem(0xe874));
        // 35 00B7
        gbc.setState(0xcca3, 0x1779, 0x9fe0, 0xe022, 0x3f22, 0x9083, 0x0, 0x0);
        gbc.writeMem(0x9083, { 0x23 });
        gbc.writeMem(0xcca3, { 0x35 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0xcca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9083));
        EXPECT(0x35, gbc.readMem(0xcca3));
        // 35 00B9
        gbc.setState(0xcb70, 0x484, 0x9470, 0xc065, 0xc0e2, 0x8cfc, 0x0, 0x1);
        gbc.writeMem(0x8cfc, { 0x5f });
        gbc.writeMem(0xcb70, { 0x35 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8cfc));
        EXPECT(0x35, gbc.readMem(0xcb70));
        // 35 00BC
        gbc.setState(0x68f0, 0x7661, 0x77f0, 0x46ea, 0x1f87, 0xe1ea, 0x1, 0x1);
        gbc.writeMem(0x68f0, { 0x35 });
        gbc.writeMem(0xe1ea, { 0x33 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe1ea));
        // 35 00BD
        gbc.setState(0x7575, 0x2cda, 0x55d0, 0x5c0e, 0x9620, 0xea6e, 0x0, 0x0);
        gbc.writeMem(0x7575, { 0x35 });
        gbc.writeMem(0xea6e, { 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0x7576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xea6e));
        // 35 00BE
        gbc.setState(0x72e0, 0x3b81, 0x6340, 0x4d18, 0xfe86, 0xac14, 0x1, 0x1);
        gbc.writeMem(0x72e0, { 0x35 });
        gbc.writeMem(0xac14, { 0x16 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3b81, gbc.sp());
        EXPECT(0x72e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xac14));
        // 35 00C2
        gbc.setState(0xb282, 0x774, 0xbb50, 0xab4d, 0x637d, 0xaf3a, 0x0, 0x1);
        gbc.writeMem(0xaf3a, { 0xf });
        gbc.writeMem(0xb282, { 0x35 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0xb283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xaf3a));
        EXPECT(0x35, gbc.readMem(0xb282));
        // 35 00C3
        gbc.setState(0x3b3, 0xacd2, 0xfb90, 0xf07b, 0x3a77, 0x93df, 0x1, 0x0);
        gbc.writeMem(0x3b3, { 0x35 });
        gbc.writeMem(0x93df, { 0xd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xacd2, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x93df));
        // 35 00C4
        gbc.setState(0x6e2b, 0xe386, 0x4940, 0x5b, 0x2164, 0xdf80, 0x0, 0x1);
        gbc.writeMem(0x6e2b, { 0x35 });
        gbc.writeMem(0xdf80, { 0x14 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe386, gbc.sp());
        EXPECT(0x6e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdf80));
        // 35 00C6
        gbc.setState(0x633b, 0x810f, 0xeb20, 0x3bdf, 0x17c, 0xb69e, 0x1, 0x0);
        gbc.writeMem(0x633b, { 0x35 });
        gbc.writeMem(0xb69e, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0x633c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb69e));
        // 35 00C7
        gbc.setState(0xc554, 0x81c8, 0x3680, 0xb332, 0xb755, 0xb9d2, 0x0, 0x0);
        gbc.writeMem(0xb9d2, { 0x8f });
        gbc.writeMem(0xc554, { 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x81c8, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb9d2));
        EXPECT(0x35, gbc.readMem(0xc554));
        // 35 00C8
        gbc.setState(0xea21, 0xac67, 0xf3e0, 0xea33, 0x13cd, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0xea21, { 0x35 });
        gbc.writeMem(0xf18e, { 0x90 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xea21));
        EXPECT(0x8f, gbc.readMem(0xf18e));
        // 35 00CA
        gbc.setState(0x8b83, 0x6618, 0x8f80, 0x5137, 0xd13f, 0xd598, 0x1, 0x0);
        gbc.writeMem(0x8b83, { 0x35 });
        gbc.writeMem(0xd598, { 0x15 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6618, gbc.sp());
        EXPECT(0x8b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8b83));
        EXPECT(0x14, gbc.readMem(0xd598));
        // 35 00CF
        gbc.setState(0x6635, 0xc1b7, 0x92d0, 0x4416, 0x300c, 0x9f6e, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0x35 });
        gbc.writeMem(0x9f6e, { 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc1b7, gbc.sp());
        EXPECT(0x6636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9f6e));
        // 35 00D0
        gbc.setState(0x644, 0x4fe0, 0xc870, 0xa9b5, 0xee18, 0xc537, 0x1, 0x1);
        gbc.writeMem(0x644, { 0x35 });
        gbc.writeMem(0xc537, { 0xe7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4fe0, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc537));
        // 35 00D1
        gbc.setState(0x6533, 0xd901, 0xede0, 0x1667, 0x2d5a, 0xf571, 0x1, 0x1);
        gbc.writeMem(0x6533, { 0x35 });
        gbc.writeMem(0xf571, { 0x98 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd901, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf571));
        // 35 00D7
        gbc.setState(0x12e8, 0xa752, 0x1500, 0x73f1, 0x6d71, 0xc516, 0x0, 0x0);
        gbc.writeMem(0x12e8, { 0x35 });
        gbc.writeMem(0xc516, { 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa752, gbc.sp());
        EXPECT(0x12e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc516));
        // 35 00D8
        gbc.setState(0xbfdc, 0x83a0, 0xcf50, 0x9b14, 0x18d3, 0xfeab, 0x0, 0x1);
        gbc.writeMem(0xbfdc, { 0x35 });
        gbc.writeMem(0xfeab, { 0xcb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x83a0, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbfdc));
        EXPECT(0xca, gbc.readMem(0xfeab));
        // 35 00D9
        gbc.setState(0x4032, 0xc9a3, 0x1a70, 0xd649, 0xdfc9, 0xe0e7, 0x0, 0x1);
        gbc.writeMem(0x4032, { 0x35 });
        gbc.writeMem(0xe0e7, { 0xc8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x4033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe0e7));
        // 35 00DA
        gbc.setState(0xac60, 0x3854, 0xdd40, 0x8c36, 0xda04, 0xa929, 0x1, 0x1);
        gbc.writeMem(0xa929, { 0x92 });
        gbc.writeMem(0xac60, { 0x35 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa929));
        EXPECT(0x35, gbc.readMem(0xac60));
        // 35 00DC
        gbc.setState(0x4bc9, 0x1eae, 0x7360, 0xc72b, 0x4634, 0xd00d, 0x0, 0x0);
        gbc.writeMem(0x4bc9, { 0x35 });
        gbc.writeMem(0xd00d, { 0xd7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0x4bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd00d));
        // 35 00DE
        gbc.setState(0x7ab1, 0x85b7, 0xc520, 0x6319, 0xc82f, 0xc6c4, 0x0, 0x0);
        gbc.writeMem(0x7ab1, { 0x35 });
        gbc.writeMem(0xc6c4, { 0xcf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0x7ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc6c4));
        // 35 00DF
        gbc.setState(0x908e, 0x80b1, 0x7ee0, 0xf12f, 0xda0, 0xabc3, 0x0, 0x0);
        gbc.writeMem(0x908e, { 0x35 });
        gbc.writeMem(0xabc3, { 0x6f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0x908f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x908e));
        EXPECT(0x6e, gbc.readMem(0xabc3));
        // 35 00E0
        gbc.setState(0x6b6d, 0x2421, 0xecb0, 0xb50, 0x2ac5, 0x909b, 0x1, 0x1);
        gbc.writeMem(0x6b6d, { 0x35 });
        gbc.writeMem(0x909b, { 0x29 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x909b));
        // 35 00E1
        gbc.setState(0xb585, 0x2ed1, 0x130, 0xde60, 0x2a03, 0x8e2d, 0x1, 0x1);
        gbc.writeMem(0x8e2d, { 0x14 });
        gbc.writeMem(0xb585, { 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0xb586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8e2d));
        EXPECT(0x35, gbc.readMem(0xb585));
        // 35 00E2
        gbc.setState(0xd0d7, 0x6bdc, 0xa1c0, 0x9c2d, 0xda11, 0x8ccf, 0x1, 0x1);
        gbc.writeMem(0x8ccf, { 0xeb });
        gbc.writeMem(0xd0d7, { 0x35 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0xd0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8ccf));
        EXPECT(0x35, gbc.readMem(0xd0d7));
        // 35 00E3
        gbc.setState(0x439e, 0x3fd3, 0xdbb0, 0x7ad8, 0x6b06, 0xa232, 0x0, 0x0);
        gbc.writeMem(0x439e, { 0x35 });
        gbc.writeMem(0xa232, { 0x52 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3fd3, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa232));
        // 35 00E4
        gbc.setState(0xe9b2, 0x3d2f, 0xbfc0, 0x5cfe, 0x406f, 0xec61, 0x0, 0x1);
        gbc.writeMem(0xe9b2, { 0x35 });
        gbc.writeMem(0xec61, { 0xb3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3d2f, gbc.sp());
        EXPECT(0xe9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe9b2));
        EXPECT(0xb2, gbc.readMem(0xec61));
        // 35 00E6
        gbc.setState(0x5b7a, 0x5187, 0x3400, 0x78a5, 0xcd9, 0x8aa1, 0x0, 0x1);
        gbc.writeMem(0x5b7a, { 0x35 });
        gbc.writeMem(0x8aa1, { 0xc1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5187, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8aa1));
        // 35 00E7
        gbc.setState(0x1ddd, 0xf114, 0xb9a0, 0xf083, 0x2ef9, 0xa9d2, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0x35 });
        gbc.writeMem(0xa9d2, { 0xf1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf114, gbc.sp());
        EXPECT(0x1dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa9d2));
        // 35 00E8
        gbc.setState(0xe217, 0x248b, 0xd630, 0x2135, 0x8fd9, 0x94fc, 0x0, 0x0);
        gbc.writeMem(0x94fc, { 0x18 });
        gbc.writeMem(0xe217, { 0x35 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0xe218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x94fc));
        EXPECT(0x35, gbc.readMem(0xe217));
        // 35 00EA
        gbc.setState(0x6c11, 0xc391, 0x5af0, 0x97ee, 0xb076, 0xc0cb, 0x0, 0x1);
        gbc.writeMem(0x6c11, { 0x35 });
        gbc.writeMem(0xc0cb, { 0x8d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc391, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc0cb));
        // 35 00ED
        gbc.setState(0xeede, 0x6a26, 0x2c00, 0x3d8e, 0x7455, 0x9b2d, 0x0, 0x0);
        gbc.writeMem(0x9b2d, { 0x3a });
        gbc.writeMem(0xeede, { 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6a26, gbc.sp());
        EXPECT(0xeedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9b2d));
        EXPECT(0x35, gbc.readMem(0xeede));
        // 35 00EE
        gbc.setState(0xc459, 0xf67d, 0x9e80, 0xe9f3, 0x372c, 0xa758, 0x1, 0x0);
        gbc.writeMem(0xa758, { 0xf9 });
        gbc.writeMem(0xc459, { 0x35 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0xc45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa758));
        EXPECT(0x35, gbc.readMem(0xc459));
        // 35 00EF
        gbc.setState(0xb937, 0xc230, 0x220, 0xfd0, 0x6937, 0x8a70, 0x0, 0x1);
        gbc.writeMem(0x8a70, { 0x3b });
        gbc.writeMem(0xb937, { 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc230, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8a70));
        EXPECT(0x35, gbc.readMem(0xb937));
        // 35 00F1
        gbc.setState(0x5e50, 0x7b06, 0x8e00, 0xf52b, 0x4f55, 0xc35b, 0x0, 0x1);
        gbc.writeMem(0x5e50, { 0x35 });
        gbc.writeMem(0xc35b, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7b06, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc35b));
        // 35 00F5
        gbc.setState(0x4833, 0x56e3, 0x7a40, 0x14e3, 0x7801, 0xa28c, 0x0, 0x0);
        gbc.writeMem(0x4833, { 0x35 });
        gbc.writeMem(0xa28c, { 0x76 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x56e3, gbc.sp());
        EXPECT(0x4834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa28c));
        // 35 00F6
        gbc.setState(0xa507, 0x456f, 0x4d50, 0x8642, 0x6d1a, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0xa507, { 0x35 });
        gbc.writeMem(0xe9c4, { 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0xa508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa507));
        EXPECT(0xdf, gbc.readMem(0xe9c4));
        // 35 00F7
        gbc.setState(0x39da, 0x7bf3, 0xc570, 0xdead, 0x4f91, 0x934f, 0x0, 0x0);
        gbc.writeMem(0x39da, { 0x35 });
        gbc.writeMem(0x934f, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7bf3, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x934f));
        // 35 00F8
        gbc.setState(0xb896, 0x5a04, 0xa950, 0x7f56, 0x407b, 0xc38d, 0x0, 0x0);
        gbc.writeMem(0xb896, { 0x35 });
        gbc.writeMem(0xc38d, { 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb896));
        EXPECT(0x7, gbc.readMem(0xc38d));
        // 35 00FA
        gbc.setState(0x287f, 0x848b, 0xcce0, 0x7acc, 0x4302, 0xb4ba, 0x0, 0x0);
        gbc.writeMem(0x287f, { 0x35 });
        gbc.writeMem(0xb4ba, { 0x4c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x848b, gbc.sp());
        EXPECT(0x2880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb4ba));
        // 35 00FB
        gbc.setState(0x89a, 0x47f6, 0x5b0, 0xd831, 0x9b94, 0x8534, 0x1, 0x1);
        gbc.writeMem(0x89a, { 0x35 });
        gbc.writeMem(0x8534, { 0x38 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x47f6, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8534));
        // 35 00FC
        gbc.setState(0x1452, 0x2b41, 0x94e0, 0x3941, 0x6b2f, 0xc547, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0x35 });
        gbc.writeMem(0xc547, { 0xe1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0x1453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc547));
        // 35 00FE
        gbc.setState(0xafb6, 0xbd17, 0xc120, 0xf2cd, 0x95b8, 0xe738, 0x0, 0x0);
        gbc.writeMem(0xafb6, { 0x35 });
        gbc.writeMem(0xe738, { 0x79 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xafb6));
        EXPECT(0x78, gbc.readMem(0xe738));
        // 35 00FF
        gbc.setState(0x4a1e, 0x52bc, 0xa3a0, 0x374b, 0xfd91, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x4a1e, { 0x35 });
        gbc.writeMem(0xe56f, { 0x1f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x52bc, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xe56f));
        // 35 0101
        gbc.setState(0x31c, 0xb839, 0x220, 0x8934, 0x5814, 0x9224, 0x0, 0x0);
        gbc.writeMem(0x31c, { 0x35 });
        gbc.writeMem(0x9224, { 0x91 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9224));
        // 35 0103
        gbc.setState(0xa083, 0x45f8, 0x6410, 0x9cea, 0x4abc, 0xe778, 0x0, 0x0);
        gbc.writeMem(0xa083, { 0x35 });
        gbc.writeMem(0xe778, { 0x68 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0xa084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa083));
        EXPECT(0x67, gbc.readMem(0xe778));
        // 35 0104
        gbc.setState(0x27f, 0xddbd, 0x72d0, 0xd6fd, 0x954e, 0xf7e8, 0x0, 0x0);
        gbc.writeMem(0x27f, { 0x35 });
        gbc.writeMem(0xf7e8, { 0x15 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xddbd, gbc.sp());
        EXPECT(0x280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xf7e8));
        // 35 0105
        gbc.setState(0xc1cc, 0x7fa6, 0xe0, 0x61d6, 0x18fd, 0xfd30, 0x0, 0x1);
        gbc.writeMem(0xc1cc, { 0x35 });
        gbc.writeMem(0xfd30, { 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0xc1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc1cc));
        EXPECT(0x24, gbc.readMem(0xfd30));
        // 35 0108
        gbc.setState(0xc242, 0x317c, 0x260, 0x4364, 0x2487, 0x9a83, 0x0, 0x1);
        gbc.writeMem(0x9a83, { 0xdd });
        gbc.writeMem(0xc242, { 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x317c, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x9a83));
        EXPECT(0x35, gbc.readMem(0xc242));
        // 35 0109
        gbc.setState(0x3fa0, 0xc010, 0x4750, 0x58bb, 0x5802, 0xf432, 0x0, 0x0);
        gbc.writeMem(0x3fa0, { 0x35 });
        gbc.writeMem(0xf432, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xf432));
        // 35 010A
        gbc.setState(0x45d7, 0x9644, 0x8950, 0x5f0a, 0x969b, 0xf8d9, 0x1, 0x1);
        gbc.writeMem(0x45d7, { 0x35 });
        gbc.writeMem(0xf8d9, { 0x86 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9644, gbc.sp());
        EXPECT(0x45d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf8d9));
        // 35 010D
        gbc.setState(0x5a72, 0xe240, 0x9d30, 0x71dc, 0xdb02, 0x9a3c, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0x35 });
        gbc.writeMem(0x9a3c, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe240, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9a3c));
        // 35 0111
        gbc.setState(0xc0e1, 0x12a5, 0x8af0, 0x67ef, 0x800b, 0xa238, 0x0, 0x1);
        gbc.writeMem(0xa238, { 0x35 });
        gbc.writeMem(0xc0e1, { 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0xc0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa238));
        EXPECT(0x35, gbc.readMem(0xc0e1));
        // 35 0112
        gbc.setState(0x7311, 0xa8a9, 0xa8a0, 0x1772, 0x7758, 0xa9e8, 0x0, 0x1);
        gbc.writeMem(0x7311, { 0x35 });
        gbc.writeMem(0xa9e8, { 0xf0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa8a9, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa9e8));
        // 35 0114
        gbc.setState(0x5a3a, 0x60a6, 0xbd50, 0xd7, 0xa335, 0x956a, 0x0, 0x0);
        gbc.writeMem(0x5a3a, { 0x35 });
        gbc.writeMem(0x956a, { 0xf9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0x5a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x956a));
        // 35 0116
        gbc.setState(0x4cd6, 0x9b71, 0x9080, 0xdfa6, 0xa945, 0xf85c, 0x0, 0x0);
        gbc.writeMem(0x4cd6, { 0x35 });
        gbc.writeMem(0xf85c, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0x4cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xf85c));
        // 35 0117
        gbc.setState(0x57ff, 0x7634, 0x88c0, 0xf908, 0x8758, 0x81c4, 0x1, 0x1);
        gbc.writeMem(0x57ff, { 0x35 });
        gbc.writeMem(0x81c4, { 0x5b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x81c4));
        // 35 0119
        gbc.setState(0xe3ca, 0xe8e0, 0xddd0, 0xcb72, 0x9c1e, 0xca83, 0x0, 0x0);
        gbc.writeMem(0xca83, { 0x96 });
        gbc.writeMem(0xe3ca, { 0x35 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe8e0, gbc.sp());
        EXPECT(0xe3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xca83));
        EXPECT(0x35, gbc.readMem(0xe3ca));
        // 35 011F
        gbc.setState(0xe696, 0x3dbd, 0x1620, 0x738a, 0xb3c4, 0xf7d5, 0x0, 0x1);
        gbc.writeMem(0xe696, { 0x35 });
        gbc.writeMem(0xf7d5, { 0x7c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3dbd, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe696));
        EXPECT(0x7b, gbc.readMem(0xf7d5));
        // 35 0123
        gbc.setState(0x9a1e, 0x11bd, 0x8980, 0x50e1, 0xeba0, 0xb09a, 0x0, 0x0);
        gbc.writeMem(0x9a1e, { 0x35 });
        gbc.writeMem(0xb09a, { 0x63 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0x9a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9a1e));
        EXPECT(0x62, gbc.readMem(0xb09a));
        // 35 0124
        gbc.setState(0x6b0a, 0x48ef, 0xfd0, 0x318e, 0x7264, 0xa59c, 0x0, 0x1);
        gbc.writeMem(0x6b0a, { 0x35 });
        gbc.writeMem(0xa59c, { 0xeb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x48ef, gbc.sp());
        EXPECT(0x6b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa59c));
        // 35 0125
        gbc.setState(0xc254, 0x8f9c, 0xaae0, 0x24ae, 0xb123, 0xd531, 0x0, 0x0);
        gbc.writeMem(0xc254, { 0x35 });
        gbc.writeMem(0xd531, { 0x4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8f9c, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc254));
        EXPECT(0x3, gbc.readMem(0xd531));
        // 35 0126
        gbc.setState(0x80d9, 0x4311, 0x3bc0, 0x19fa, 0xbfa9, 0xae43, 0x0, 0x0);
        gbc.writeMem(0x80d9, { 0x35 });
        gbc.writeMem(0xae43, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4311, gbc.sp());
        EXPECT(0x80da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x80d9));
        EXPECT(0x19, gbc.readMem(0xae43));
        // 35 0128
        gbc.setState(0xd9a0, 0x796c, 0x59a0, 0xd718, 0x41b7, 0x9835, 0x0, 0x0);
        gbc.writeMem(0x9835, { 0x2f });
        gbc.writeMem(0xd9a0, { 0x35 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x796c, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9835));
        EXPECT(0x35, gbc.readMem(0xd9a0));
        // 35 0129
        gbc.setState(0xd1f9, 0x9ee, 0xd9e0, 0x1775, 0xd192, 0xf247, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0x35 });
        gbc.writeMem(0xf247, { 0xbe });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9ee, gbc.sp());
        EXPECT(0xd1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd1f9));
        EXPECT(0xbd, gbc.readMem(0xf247));
        // 35 012E
        gbc.setState(0x4fa9, 0x2b1a, 0x19f0, 0xd0b9, 0x54fa, 0xd3f4, 0x0, 0x1);
        gbc.writeMem(0x4fa9, { 0x35 });
        gbc.writeMem(0xd3f4, { 0x18 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x4faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xd3f4));
        // 35 0130
        gbc.setState(0xd1ad, 0x4524, 0xe9b0, 0x7f1f, 0x2d88, 0xa5d5, 0x1, 0x1);
        gbc.writeMem(0xa5d5, { 0xbd });
        gbc.writeMem(0xd1ad, { 0x35 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4524, gbc.sp());
        EXPECT(0xd1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa5d5));
        EXPECT(0x35, gbc.readMem(0xd1ad));
        // 35 0132
        gbc.setState(0x500, 0xad93, 0xc9b0, 0x3f8e, 0xa84b, 0xf92c, 0x1, 0x0);
        gbc.writeMem(0x500, { 0x35 });
        gbc.writeMem(0xf92c, { 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xad93, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xf92c));
        // 35 0135
        gbc.setState(0xd9b8, 0x9b3e, 0x2c30, 0xb737, 0xa1aa, 0x92b7, 0x0, 0x0);
        gbc.writeMem(0x92b7, { 0x5d });
        gbc.writeMem(0xd9b8, { 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9b3e, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x92b7));
        EXPECT(0x35, gbc.readMem(0xd9b8));
        // 35 0137
        gbc.setState(0x4338, 0x2307, 0xf7f0, 0x5adb, 0x6047, 0x8328, 0x0, 0x0);
        gbc.writeMem(0x4338, { 0x35 });
        gbc.writeMem(0x8328, { 0x7f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2307, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8328));
        // 35 0139
        gbc.setState(0x319e, 0x4a20, 0xab20, 0xb4f, 0xd817, 0x9eb7, 0x0, 0x1);
        gbc.writeMem(0x319e, { 0x35 });
        gbc.writeMem(0x9eb7, { 0x92 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4a20, gbc.sp());
        EXPECT(0x319f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9eb7));
        // 35 013B
        gbc.setState(0x246b, 0x1c44, 0xa1f0, 0xfd08, 0x2dec, 0xd0c2, 0x0, 0x0);
        gbc.writeMem(0x246b, { 0x35 });
        gbc.writeMem(0xd0c2, { 0xbf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0x246c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd0c2));
        // 35 013C
        gbc.setState(0x432f, 0xa6ba, 0xd680, 0x3927, 0xe8a9, 0x9386, 0x0, 0x0);
        gbc.writeMem(0x432f, { 0x35 });
        gbc.writeMem(0x9386, { 0x6c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x4330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9386));
        // 35 013E
        gbc.setState(0xa883, 0xc203, 0x82a0, 0x66e1, 0x210e, 0xc6c0, 0x0, 0x0);
        gbc.writeMem(0xa883, { 0x35 });
        gbc.writeMem(0xc6c0, { 0x69 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa883));
        EXPECT(0x68, gbc.readMem(0xc6c0));
        // 35 013F
        gbc.setState(0x857b, 0x1289, 0xa1c0, 0x5575, 0x865b, 0xd552, 0x0, 0x1);
        gbc.writeMem(0x857b, { 0x35 });
        gbc.writeMem(0xd552, { 0x99 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1289, gbc.sp());
        EXPECT(0x857c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x857b));
        EXPECT(0x98, gbc.readMem(0xd552));
        // 35 0146
        gbc.setState(0xc380, 0x88ac, 0xd770, 0xde50, 0x307b, 0x8f66, 0x0, 0x0);
        gbc.writeMem(0x8f66, { 0x34 });
        gbc.writeMem(0xc380, { 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x88ac, gbc.sp());
        EXPECT(0xc381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8f66));
        EXPECT(0x35, gbc.readMem(0xc380));
        // 35 0148
        gbc.setState(0xb303, 0xbbdb, 0xd790, 0x18ef, 0xeefc, 0x9f0a, 0x1, 0x0);
        gbc.writeMem(0x9f0a, { 0xd5 });
        gbc.writeMem(0xb303, { 0x35 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0xb304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9f0a));
        EXPECT(0x35, gbc.readMem(0xb303));
        // 35 0149
        gbc.setState(0x7103, 0x47f0, 0xa9d0, 0xf6ac, 0x6f4f, 0x9f3c, 0x0, 0x1);
        gbc.writeMem(0x7103, { 0x35 });
        gbc.writeMem(0x9f3c, { 0x2b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x47f0, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9f3c));
        // 35 014A
        gbc.setState(0x7959, 0x791, 0xa9c0, 0x7365, 0xf8cd, 0xd3cc, 0x1, 0x1);
        gbc.writeMem(0x7959, { 0x35 });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x791, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xd3cc));
        // 35 014C
        gbc.setState(0x6880, 0x93a5, 0xdf10, 0x3295, 0xd59e, 0xf8b1, 0x0, 0x1);
        gbc.writeMem(0x6880, { 0x35 });
        gbc.writeMem(0xf8b1, { 0x38 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xf8b1));
        // 35 014E
        gbc.setState(0x2a6b, 0x8912, 0x7090, 0x596f, 0x9bba, 0x9282, 0x1, 0x0);
        gbc.writeMem(0x2a6b, { 0x35 });
        gbc.writeMem(0x9282, { 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0x2a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9282));
        // 35 014F
        gbc.setState(0x320, 0x7759, 0x3b0, 0x5bb8, 0x5600, 0xc074, 0x0, 0x0);
        gbc.writeMem(0x320, { 0x35 });
        gbc.writeMem(0xc074, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0x321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc074));
        // 35 0152
        gbc.setState(0x82ab, 0xdcb0, 0xe600, 0x11db, 0xc0b8, 0xe6de, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0x35 });
        gbc.writeMem(0xe6de, { 0x60 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdcb0, gbc.sp());
        EXPECT(0x82ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x82ab));
        EXPECT(0x5f, gbc.readMem(0xe6de));
        // 35 0153
        gbc.setState(0x9fdd, 0x214f, 0x64c0, 0x35e9, 0xfef8, 0x844b, 0x0, 0x0);
        gbc.writeMem(0x844b, { 0xbb });
        gbc.writeMem(0x9fdd, { 0x35 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0x9fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x844b));
        EXPECT(0x35, gbc.readMem(0x9fdd));
        // 35 0159
        gbc.setState(0x5147, 0x5243, 0x4270, 0x7a20, 0xefbc, 0xd54b, 0x0, 0x1);
        gbc.writeMem(0x5147, { 0x35 });
        gbc.writeMem(0xd54b, { 0xb7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0x5148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd54b));
        // 35 015D
        gbc.setState(0xe971, 0x8fa0, 0x8260, 0xc8c4, 0xaa17, 0xc510, 0x1, 0x1);
        gbc.writeMem(0xc510, { 0x7f });
        gbc.writeMem(0xe971, { 0x35 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8fa0, gbc.sp());
        EXPECT(0xe972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc510));
        EXPECT(0x35, gbc.readMem(0xe971));
        // 35 015E
        gbc.setState(0xd27b, 0xc21f, 0xb4d0, 0xd7, 0x3bf0, 0x9c3c, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0x5c });
        gbc.writeMem(0xd27b, { 0x35 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc21f, gbc.sp());
        EXPECT(0xd27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9c3c));
        EXPECT(0x35, gbc.readMem(0xd27b));
        // 35 015F
        gbc.setState(0x3b42, 0xec02, 0xae0, 0x7168, 0xe176, 0xa29f, 0x0, 0x0);
        gbc.writeMem(0x3b42, { 0x35 });
        gbc.writeMem(0xa29f, { 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xec02, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa29f));
        // 35 0160
        gbc.setState(0x87f7, 0xf95b, 0x4560, 0xec68, 0xf8b1, 0xcbe3, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0x35 });
        gbc.writeMem(0xcbe3, { 0x6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x87f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x87f7));
        EXPECT(0x5, gbc.readMem(0xcbe3));
        // 35 0163
        gbc.setState(0x9fe1, 0xcb3, 0xfd0, 0x26d3, 0x44be, 0xccf4, 0x1, 0x1);
        gbc.writeMem(0x9fe1, { 0x35 });
        gbc.writeMem(0xccf4, { 0x1d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0x9fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9fe1));
        EXPECT(0x1c, gbc.readMem(0xccf4));
        // 35 0164
        gbc.setState(0x997a, 0x82, 0xced0, 0x133c, 0x1805, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x997a, { 0x35 });
        gbc.writeMem(0xdee1, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x82, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x997a));
        EXPECT(0x18, gbc.readMem(0xdee1));
        // 35 0167
        gbc.setState(0x63b8, 0x4fd, 0xb7a0, 0x4731, 0xa554, 0xb555, 0x0, 0x0);
        gbc.writeMem(0x63b8, { 0x35 });
        gbc.writeMem(0xb555, { 0x34 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb555));
        // 35 0168
        gbc.setState(0xd396, 0x246b, 0xaff0, 0xd541, 0x5724, 0xcd3e, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xef });
        gbc.writeMem(0xd396, { 0x35 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x246b, gbc.sp());
        EXPECT(0xd397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcd3e));
        EXPECT(0x35, gbc.readMem(0xd396));
        // 35 0169
        gbc.setState(0x7027, 0x8e6c, 0x3940, 0x783c, 0xfdc1, 0xf6c9, 0x1, 0x0);
        gbc.writeMem(0x7027, { 0x35 });
        gbc.writeMem(0xf6c9, { 0x6c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8e6c, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf6c9));
        // 35 016C
        gbc.setState(0x6f51, 0x90e3, 0xde30, 0x250b, 0xb63, 0xd780, 0x1, 0x0);
        gbc.writeMem(0x6f51, { 0x35 });
        gbc.writeMem(0xd780, { 0x86 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0x6f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd780));
        // 35 016D
        gbc.setState(0x5474, 0xe7b2, 0x31a0, 0xdcc8, 0x82af, 0xd7b5, 0x0, 0x1);
        gbc.writeMem(0x5474, { 0x35 });
        gbc.writeMem(0xd7b5, { 0x8d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd7b5));
        // 35 016E
        gbc.setState(0xbb6c, 0x14ff, 0x9690, 0xae46, 0x3dd4, 0xa6b0, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0xb2 });
        gbc.writeMem(0xbb6c, { 0x35 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa6b0));
        EXPECT(0x35, gbc.readMem(0xbb6c));
        // 35 016F
        gbc.setState(0xcc27, 0x8a46, 0x38f0, 0x8169, 0x6453, 0xb07c, 0x0, 0x0);
        gbc.writeMem(0xb07c, { 0x7f });
        gbc.writeMem(0xcc27, { 0x35 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8a46, gbc.sp());
        EXPECT(0xcc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb07c));
        EXPECT(0x35, gbc.readMem(0xcc27));
        // 35 0171
        gbc.setState(0x6896, 0x544c, 0x7070, 0x7151, 0x6057, 0xe790, 0x0, 0x0);
        gbc.writeMem(0x6896, { 0x35 });
        gbc.writeMem(0xe790, { 0xca });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x544c, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe790));
        // 35 0175
        gbc.setState(0xc9c7, 0x8e50, 0x5250, 0xae, 0xd78f, 0xbdfa, 0x1, 0x0);
        gbc.writeMem(0xbdfa, { 0x83 });
        gbc.writeMem(0xc9c7, { 0x35 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8e50, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbdfa));
        EXPECT(0x35, gbc.readMem(0xc9c7));
        // 35 0176
        gbc.setState(0x4edd, 0x48ec, 0x8700, 0xf02e, 0x134f, 0xb54a, 0x1, 0x1);
        gbc.writeMem(0x4edd, { 0x35 });
        gbc.writeMem(0xb54a, { 0xcc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x48ec, gbc.sp());
        EXPECT(0x4ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        // 35 0177
        gbc.setState(0x9a25, 0xbc33, 0x9d80, 0x7d55, 0x4519, 0xac0e, 0x0, 0x1);
        gbc.writeMem(0x9a25, { 0x35 });
        gbc.writeMem(0xac0e, { 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbc33, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9a25));
        EXPECT(0x2f, gbc.readMem(0xac0e));
        // 35 0179
        gbc.setState(0xcff9, 0xa281, 0x1c50, 0xcd4b, 0x6a09, 0xb7e4, 0x1, 0x1);
        gbc.writeMem(0xb7e4, { 0x2d });
        gbc.writeMem(0xcff9, { 0x35 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0xcffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb7e4));
        EXPECT(0x35, gbc.readMem(0xcff9));
        // 35 017A
        gbc.setState(0x712c, 0x7589, 0xce80, 0x2e3c, 0xfb8d, 0x940c, 0x1, 0x1);
        gbc.writeMem(0x712c, { 0x35 });
        gbc.writeMem(0x940c, { 0xa2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7589, gbc.sp());
        EXPECT(0x712d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x940c));
        // 35 017B
        gbc.setState(0x51ad, 0x943f, 0xa980, 0x2c9c, 0x7934, 0xc8b4, 0x0, 0x0);
        gbc.writeMem(0x51ad, { 0x35 });
        gbc.writeMem(0xc8b4, { 0x32 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x943f, gbc.sp());
        EXPECT(0x51ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc8b4));
        // 35 017F
        gbc.setState(0x8df0, 0xc5b, 0x8d50, 0x9a10, 0x3972, 0x9649, 0x0, 0x0);
        gbc.writeMem(0x8df0, { 0x35 });
        gbc.writeMem(0x9649, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc5b, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8df0));
        EXPECT(0x2c, gbc.readMem(0x9649));
        // 35 0180
        gbc.setState(0x800b, 0x6c5d, 0xa9f0, 0xb626, 0x2e05, 0xb699, 0x0, 0x0);
        gbc.writeMem(0x800b, { 0x35 });
        gbc.writeMem(0xb699, { 0x66 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x800c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x800b));
        EXPECT(0x65, gbc.readMem(0xb699));
        // 35 0181
        gbc.setState(0xa7d, 0x9df3, 0x5da0, 0xb638, 0xb82a, 0x9e3e, 0x0, 0x0);
        gbc.writeMem(0xa7d, { 0x35 });
        gbc.writeMem(0x9e3e, { 0xfe });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9e3e));
        // 35 0184
        gbc.setState(0xafaf, 0xe303, 0x95e0, 0x32ab, 0xb697, 0xcea4, 0x0, 0x1);
        gbc.writeMem(0xafaf, { 0x35 });
        gbc.writeMem(0xcea4, { 0x9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xafaf));
        EXPECT(0x8, gbc.readMem(0xcea4));
        // 35 0185
        gbc.setState(0x1b4f, 0x7fd3, 0x4510, 0xe029, 0x376b, 0xc10b, 0x0, 0x1);
        gbc.writeMem(0x1b4f, { 0x35 });
        gbc.writeMem(0xc10b, { 0x1e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7fd3, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc10b));
        // 35 0186
        gbc.setState(0xcab0, 0x9080, 0x9980, 0x18fa, 0x94a, 0xa367, 0x1, 0x1);
        gbc.writeMem(0xa367, { 0xc1 });
        gbc.writeMem(0xcab0, { 0x35 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa367));
        EXPECT(0x35, gbc.readMem(0xcab0));
        // 35 0187
        gbc.setState(0xd31f, 0x795b, 0x1e10, 0xe103, 0x6845, 0x95d1, 0x0, 0x0);
        gbc.writeMem(0x95d1, { 0x9b });
        gbc.writeMem(0xd31f, { 0x35 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x795b, gbc.sp());
        EXPECT(0xd320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x95d1));
        EXPECT(0x35, gbc.readMem(0xd31f));
        // 35 0188
        gbc.setState(0xc0e, 0x407d, 0xf8d0, 0xf497, 0x2189, 0xd4e0, 0x1, 0x0);
        gbc.writeMem(0xc0e, { 0x35 });
        gbc.writeMem(0xd4e0, { 0x6d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x407d, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd4e0));
        // 35 018B
        gbc.setState(0x4029, 0xb154, 0xfa80, 0x5d78, 0xc1ba, 0xf64e, 0x1, 0x1);
        gbc.writeMem(0x4029, { 0x35 });
        gbc.writeMem(0xf64e, { 0x29 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0x402a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xf64e));
        // 35 018C
        gbc.setState(0xe2bc, 0x4d9f, 0xe8d0, 0x6a98, 0xd220, 0x9a20, 0x1, 0x1);
        gbc.writeMem(0x9a20, { 0x4b });
        gbc.writeMem(0xe2bc, { 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0xe2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9a20));
        EXPECT(0x35, gbc.readMem(0xe2bc));
        // 35 018D
        gbc.setState(0x38c8, 0xb83a, 0xabe0, 0xb483, 0x58b, 0xc11b, 0x0, 0x0);
        gbc.writeMem(0x38c8, { 0x35 });
        gbc.writeMem(0xc11b, { 0x4a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb83a, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc11b));
        // 35 018F
        gbc.setState(0x486f, 0x3d0a, 0xaa20, 0xeaf4, 0x8aa, 0xb455, 0x1, 0x0);
        gbc.writeMem(0x486f, { 0x35 });
        gbc.writeMem(0xb455, { 0x69 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0x4870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb455));
        // 35 0190
        gbc.setState(0xe5e7, 0x3014, 0xf540, 0x3322, 0xa2ed, 0xf73c, 0x1, 0x1);
        gbc.writeMem(0xe5e7, { 0x35 });
        gbc.writeMem(0xf73c, { 0xf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3014, gbc.sp());
        EXPECT(0xe5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe5e7));
        EXPECT(0xe, gbc.readMem(0xf73c));
        // 35 0191
        gbc.setState(0xd098, 0x2d8f, 0xfef0, 0x298b, 0x709a, 0xc49c, 0x1, 0x1);
        gbc.writeMem(0xc49c, { 0xaf });
        gbc.writeMem(0xd098, { 0x35 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2d8f, gbc.sp());
        EXPECT(0xd099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc49c));
        EXPECT(0x35, gbc.readMem(0xd098));
        // 35 0194
        gbc.setState(0x115, 0xd7c4, 0x6e70, 0x71bf, 0x43b, 0xbdba, 0x1, 0x0);
        gbc.writeMem(0x115, { 0x35 });
        gbc.writeMem(0xbdba, { 0xc6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd7c4, gbc.sp());
        EXPECT(0x116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbdba));
        // 35 0196
        gbc.setState(0xace8, 0xc76f, 0xce00, 0xa649, 0x4b1c, 0xea9e, 0x1, 0x1);
        gbc.writeMem(0xace8, { 0x35 });
        gbc.writeMem(0xea9e, { 0xd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc76f, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xace8));
        EXPECT(0xc, gbc.readMem(0xea9e));
        // 35 0197
        gbc.setState(0x8b22, 0x9adf, 0x7ba0, 0xabed, 0xcc, 0xc82a, 0x1, 0x1);
        gbc.writeMem(0x8b22, { 0x35 });
        gbc.writeMem(0xc82a, { 0xe5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9adf, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8b22));
        EXPECT(0xe4, gbc.readMem(0xc82a));
        // 35 0199
        gbc.setState(0x9a4c, 0x8b29, 0x3970, 0xd341, 0x82af, 0xa89b, 0x0, 0x0);
        gbc.writeMem(0x9a4c, { 0x35 });
        gbc.writeMem(0xa89b, { 0x9f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8b29, gbc.sp());
        EXPECT(0x9a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9a4c));
        EXPECT(0x9e, gbc.readMem(0xa89b));
        // 35 019A
        gbc.setState(0x67c6, 0xb2cc, 0xa840, 0x672c, 0x22e3, 0x9eaa, 0x1, 0x1);
        gbc.writeMem(0x67c6, { 0x35 });
        gbc.writeMem(0x9eaa, { 0x3c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb2cc, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9eaa));
        // 35 019C
        gbc.setState(0xc284, 0xb5b2, 0xd210, 0x7151, 0x189f, 0xa178, 0x0, 0x0);
        gbc.writeMem(0xa178, { 0x36 });
        gbc.writeMem(0xc284, { 0x35 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb5b2, gbc.sp());
        EXPECT(0xc285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa178));
        EXPECT(0x35, gbc.readMem(0xc284));
        // 35 019E
        gbc.setState(0xc4ce, 0xd166, 0x8940, 0xb00f, 0xf024, 0xc019, 0x0, 0x1);
        gbc.writeMem(0xc019, { 0x4d });
        gbc.writeMem(0xc4ce, { 0x35 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd166, gbc.sp());
        EXPECT(0xc4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc019));
        EXPECT(0x35, gbc.readMem(0xc4ce));
        // 35 01A3
        gbc.setState(0xac00, 0x9070, 0x4910, 0x5156, 0xe344, 0xc5c2, 0x0, 0x1);
        gbc.writeMem(0xac00, { 0x35 });
        gbc.writeMem(0xc5c2, { 0x38 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xac00));
        EXPECT(0x37, gbc.readMem(0xc5c2));
        // 35 01A7
        gbc.setState(0x41e4, 0xa360, 0x2c80, 0xd5d5, 0x41ef, 0x9681, 0x0, 0x1);
        gbc.writeMem(0x41e4, { 0x35 });
        gbc.writeMem(0x9681, { 0x5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa360, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9681));
        // 35 01AA
        gbc.setState(0xdcbc, 0x6e80, 0xbc30, 0x1d6, 0xdd35, 0x868f, 0x1, 0x0);
        gbc.writeMem(0x868f, { 0xb });
        gbc.writeMem(0xdcbc, { 0x35 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x868f));
        EXPECT(0x35, gbc.readMem(0xdcbc));
        // 35 01AB
        gbc.setState(0x817d, 0x5264, 0xc920, 0xa885, 0x9897, 0xb4ea, 0x0, 0x0);
        gbc.writeMem(0x817d, { 0x35 });
        gbc.writeMem(0xb4ea, { 0x47 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5264, gbc.sp());
        EXPECT(0x817e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x817d));
        EXPECT(0x46, gbc.readMem(0xb4ea));
        // 35 01B3
        gbc.setState(0xcf45, 0xd2f2, 0x3a60, 0xdb16, 0x8b32, 0x9f34, 0x1, 0x0);
        gbc.writeMem(0x9f34, { 0x2 });
        gbc.writeMem(0xcf45, { 0x35 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd2f2, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9f34));
        EXPECT(0x35, gbc.readMem(0xcf45));
        // 35 01B6
        gbc.setState(0x8585, 0x40dc, 0xb110, 0x9224, 0x82a3, 0xb2da, 0x0, 0x0);
        gbc.writeMem(0x8585, { 0x35 });
        gbc.writeMem(0xb2da, { 0x9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8585));
        EXPECT(0x8, gbc.readMem(0xb2da));
        // 35 01B9
        gbc.setState(0x49aa, 0x69ff, 0xb2e0, 0x1dd8, 0xebf0, 0x9ff4, 0x1, 0x0);
        gbc.writeMem(0x49aa, { 0x35 });
        gbc.writeMem(0x9ff4, { 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x69ff, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ff4));
        // 35 01BA
        gbc.setState(0x65b1, 0xb7d8, 0x3800, 0xe7f2, 0x5115, 0x89ab, 0x0, 0x1);
        gbc.writeMem(0x65b1, { 0x35 });
        gbc.writeMem(0x89ab, { 0x96 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb7d8, gbc.sp());
        EXPECT(0x65b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x89ab));
        // 35 01BB
        gbc.setState(0x274e, 0x9b90, 0xba90, 0x4d05, 0x8f82, 0xd3d3, 0x1, 0x0);
        gbc.writeMem(0x274e, { 0x35 });
        gbc.writeMem(0xd3d3, { 0x4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3d3));
        // 35 01C1
        gbc.setState(0x9ffe, 0x995a, 0xca40, 0x4fae, 0xc1f, 0x87aa, 0x0, 0x1);
        gbc.writeMem(0x87aa, { 0x6d });
        gbc.writeMem(0x9ffe, { 0x35 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x9fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x87aa));
        EXPECT(0x35, gbc.readMem(0x9ffe));
        // 35 01C4
        gbc.setState(0x799, 0xabaa, 0x5b90, 0x2d3d, 0x10f6, 0x8f81, 0x1, 0x0);
        gbc.writeMem(0x799, { 0x35 });
        gbc.writeMem(0x8f81, { 0x70 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xabaa, gbc.sp());
        EXPECT(0x79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8f81));
        // 35 01CA
        gbc.setState(0xee8b, 0xaa02, 0x7190, 0xf978, 0x65c5, 0x98af, 0x0, 0x0);
        gbc.writeMem(0x98af, { 0x5b });
        gbc.writeMem(0xee8b, { 0x35 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaa02, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x98af));
        EXPECT(0x35, gbc.readMem(0xee8b));
        // 35 01CE
        gbc.setState(0x3aa2, 0x7542, 0xb500, 0x4e57, 0xce2d, 0xf117, 0x0, 0x1);
        gbc.writeMem(0x3aa2, { 0x35 });
        gbc.writeMem(0xf117, { 0x71 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7542, gbc.sp());
        EXPECT(0x3aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf117));
        // 35 01D1
        gbc.setState(0x97a0, 0xbe02, 0x58b0, 0x4ad0, 0x816, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0x97a0, { 0x35 });
        gbc.writeMem(0xddf7, { 0xdc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe02, gbc.sp());
        EXPECT(0x97a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x97a0));
        EXPECT(0xdb, gbc.readMem(0xddf7));
        // 35 01D2
        gbc.setState(0xd4cf, 0xbe89, 0x7df0, 0x1dec, 0x3485, 0xa2e7, 0x0, 0x1);
        gbc.writeMem(0xa2e7, { 0xfc });
        gbc.writeMem(0xd4cf, { 0x35 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbe89, gbc.sp());
        EXPECT(0xd4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa2e7));
        EXPECT(0x35, gbc.readMem(0xd4cf));
        // 35 01D4
        gbc.setState(0x7442, 0x4280, 0x6360, 0xd5f2, 0x5802, 0xc069, 0x1, 0x1);
        gbc.writeMem(0x7442, { 0x35 });
        gbc.writeMem(0xc069, { 0xd2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc069));
        // 35 01D5
        gbc.setState(0xc21c, 0x5fff, 0x41d0, 0x5ac5, 0x21fa, 0xb655, 0x1, 0x1);
        gbc.writeMem(0xb655, { 0xf7 });
        gbc.writeMem(0xc21c, { 0x35 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0xc21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xb655));
        EXPECT(0x35, gbc.readMem(0xc21c));
        // 35 01D6
        gbc.setState(0x412b, 0x1d53, 0x21f0, 0x472b, 0xf30a, 0x9299, 0x1, 0x1);
        gbc.writeMem(0x412b, { 0x35 });
        gbc.writeMem(0x9299, { 0xcc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1d53, gbc.sp());
        EXPECT(0x412c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9299));
        // 35 01D9
        gbc.setState(0x819d, 0x1358, 0x340, 0x88ed, 0xad91, 0xa277, 0x1, 0x1);
        gbc.writeMem(0x819d, { 0x35 });
        gbc.writeMem(0xa277, { 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0x819e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x819d));
        EXPECT(0x32, gbc.readMem(0xa277));
        // 35 01DB
        gbc.setState(0xa6b2, 0x5c7e, 0xad60, 0xbe24, 0xfe30, 0xb6c3, 0x0, 0x0);
        gbc.writeMem(0xa6b2, { 0x35 });
        gbc.writeMem(0xb6c3, { 0x1c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa6b2));
        EXPECT(0x1b, gbc.readMem(0xb6c3));
        // 35 01DE
        gbc.setState(0x1003, 0x1f27, 0x4b60, 0x35c3, 0x296b, 0xe1ab, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0x35 });
        gbc.writeMem(0xe1ab, { 0x5e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe1ab));
        // 35 01E4
        gbc.setState(0x981d, 0x7793, 0xea20, 0x5cbb, 0xe74d, 0xe3d7, 0x1, 0x0);
        gbc.writeMem(0x981d, { 0x35 });
        gbc.writeMem(0xe3d7, { 0xd8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7793, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x981d));
        EXPECT(0xd7, gbc.readMem(0xe3d7));
        // 35 01EB
        gbc.setState(0x45dd, 0xec11, 0x2660, 0x8fba, 0x681b, 0xb142, 0x0, 0x0);
        gbc.writeMem(0x45dd, { 0x35 });
        gbc.writeMem(0xb142, { 0x14 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0x45de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb142));
        // 35 01EE
        gbc.setState(0xac98, 0x54b7, 0xf360, 0x7afb, 0x9062, 0xa61d, 0x0, 0x0);
        gbc.writeMem(0xa61d, { 0xa5 });
        gbc.writeMem(0xac98, { 0x35 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x54b7, gbc.sp());
        EXPECT(0xac99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa61d));
        EXPECT(0x35, gbc.readMem(0xac98));
        // 35 01F0
        gbc.setState(0x96c5, 0x6725, 0xdf90, 0x8fdb, 0x7db0, 0xfffc, 0x1, 0x0);
        gbc.writeMem(0x96c5, { 0x35 });
        gbc.writeMem(0xfffc, { 0x8b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6725, gbc.sp());
        EXPECT(0x96c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x96c5));
        EXPECT(0x8a, gbc.readMem(0xfffc));
        // 35 01F3
        gbc.setState(0x4f23, 0x6a4, 0x7040, 0xe035, 0x4461, 0xfc1e, 0x0, 0x1);
        gbc.writeMem(0x4f23, { 0x35 });
        gbc.writeMem(0xfc1e, { 0x3d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6a4, gbc.sp());
        EXPECT(0x4f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xfc1e));
        // 35 01F5
        gbc.setState(0x22ca, 0xa858, 0x8f60, 0x7579, 0x1756, 0xc23b, 0x0, 0x0);
        gbc.writeMem(0x22ca, { 0x35 });
        gbc.writeMem(0xc23b, { 0x95 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa858, gbc.sp());
        EXPECT(0x22cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc23b));
        // 35 01F6
        gbc.setState(0x76ac, 0xed0d, 0xaaa0, 0x947f, 0x5869, 0xa120, 0x1, 0x1);
        gbc.writeMem(0x76ac, { 0x35 });
        gbc.writeMem(0xa120, { 0xa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xed0d, gbc.sp());
        EXPECT(0x76ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa120));
        // 35 01FE
        gbc.setState(0x6ecb, 0xebec, 0xee10, 0xa63a, 0x9cab, 0x953e, 0x1, 0x0);
        gbc.writeMem(0x6ecb, { 0x35 });
        gbc.writeMem(0x953e, { 0x17 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xebec, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x953e));
        // 35 0202
        gbc.setState(0xab5b, 0x4f7, 0xb90, 0xde22, 0x8d39, 0xd2ed, 0x0, 0x1);
        gbc.writeMem(0xab5b, { 0x35 });
        gbc.writeMem(0xd2ed, { 0xd7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4f7, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xab5b));
        EXPECT(0xd6, gbc.readMem(0xd2ed));
        // 35 0203
        gbc.setState(0x92be, 0x9d60, 0xd9e0, 0x93eb, 0x144f, 0xb069, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x35 });
        gbc.writeMem(0xb069, { 0x2a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0x92bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x92be));
        EXPECT(0x29, gbc.readMem(0xb069));
        // 35 0204
        gbc.setState(0xbf7b, 0x8cee, 0x8550, 0xd5b8, 0xff8f, 0xf305, 0x1, 0x0);
        gbc.writeMem(0xbf7b, { 0x35 });
        gbc.writeMem(0xf305, { 0x6f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0xbf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbf7b));
        EXPECT(0x6e, gbc.readMem(0xf305));
        // 35 0206
        gbc.setState(0x4a1b, 0xf644, 0x77f0, 0xabed, 0xfaf3, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0x4a1b, { 0x35 });
        gbc.writeMem(0xe5b0, { 0x7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x4a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe5b0));
        // 35 0209
        gbc.setState(0xc7e0, 0x2cc2, 0x330, 0xf50a, 0x3c6d, 0xc688, 0x1, 0x0);
        gbc.writeMem(0xc688, { 0x38 });
        gbc.writeMem(0xc7e0, { 0x35 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cc2, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc688));
        EXPECT(0x35, gbc.readMem(0xc7e0));
        // 35 020A
        gbc.setState(0x4e98, 0x82fa, 0x82d0, 0x93c4, 0xc759, 0xdc85, 0x1, 0x0);
        gbc.writeMem(0x4e98, { 0x35 });
        gbc.writeMem(0xdc85, { 0x6b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xdc85));
        // 35 020C
        gbc.setState(0xa0c3, 0xcd70, 0x9b60, 0x4cc3, 0x9c60, 0xbf3e, 0x0, 0x0);
        gbc.writeMem(0xa0c3, { 0x35 });
        gbc.writeMem(0xbf3e, { 0x6e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcd70, gbc.sp());
        EXPECT(0xa0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa0c3));
        EXPECT(0x6d, gbc.readMem(0xbf3e));
        // 35 020E
        gbc.setState(0xc968, 0x2d88, 0x3a90, 0x502a, 0x2a89, 0xdbd7, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0x35 });
        gbc.writeMem(0xdbd7, { 0xf9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2d88, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc968));
        EXPECT(0xf8, gbc.readMem(0xdbd7));
        // 35 020F
        gbc.setState(0x8ffe, 0x6139, 0x1830, 0x2151, 0xa8d9, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0x8ffe, { 0x35 });
        gbc.writeMem(0xeefc, { 0xb9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0x8fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8ffe));
        EXPECT(0xb8, gbc.readMem(0xeefc));
        // 35 0215
        gbc.setState(0x5115, 0x9184, 0xf2a0, 0xb0e8, 0xb6a6, 0xdb63, 0x1, 0x1);
        gbc.writeMem(0x5115, { 0x35 });
        gbc.writeMem(0xdb63, { 0x93 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9184, gbc.sp());
        EXPECT(0x5116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xdb63));
        // 35 0216
        gbc.setState(0x9d80, 0xfe8, 0x6070, 0xef06, 0x4569, 0xd213, 0x1, 0x0);
        gbc.writeMem(0x9d80, { 0x35 });
        gbc.writeMem(0xd213, { 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfe8, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9d80));
        EXPECT(0x2e, gbc.readMem(0xd213));
        // 35 0217
        gbc.setState(0xcbfd, 0x6975, 0xf230, 0x5473, 0x25c7, 0xb5f1, 0x0, 0x1);
        gbc.writeMem(0xb5f1, { 0x85 });
        gbc.writeMem(0xcbfd, { 0x35 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0xcbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb5f1));
        EXPECT(0x35, gbc.readMem(0xcbfd));
        // 35 0219
        gbc.setState(0xbcc5, 0xdc10, 0x3e70, 0x1b0f, 0x66ee, 0x9b33, 0x1, 0x0);
        gbc.writeMem(0x9b33, { 0x89 });
        gbc.writeMem(0xbcc5, { 0x35 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b33));
        EXPECT(0x35, gbc.readMem(0xbcc5));
        // 35 021C
        gbc.setState(0x91d7, 0x4d1, 0xf640, 0x13cf, 0xb4aa, 0xbb41, 0x0, 0x1);
        gbc.writeMem(0x91d7, { 0x35 });
        gbc.writeMem(0xbb41, { 0xe7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x91d7));
        EXPECT(0xe6, gbc.readMem(0xbb41));
        // 35 021F
        gbc.setState(0x2c0d, 0xdb02, 0xfa50, 0xae62, 0xb286, 0xe178, 0x1, 0x0);
        gbc.writeMem(0x2c0d, { 0x35 });
        gbc.writeMem(0xe178, { 0x34 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdb02, gbc.sp());
        EXPECT(0x2c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe178));
        // 35 0224
        gbc.setState(0x9990, 0xc515, 0xd6f0, 0xc938, 0x6ca7, 0xd150, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0x35 });
        gbc.writeMem(0xd150, { 0xee });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x9991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9990));
        EXPECT(0xed, gbc.readMem(0xd150));
        // 35 0226
        gbc.setState(0x9041, 0xdaa2, 0xe7a0, 0xef93, 0xd44b, 0x97b5, 0x0, 0x1);
        gbc.writeMem(0x9041, { 0x35 });
        gbc.writeMem(0x97b5, { 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0x9042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9041));
        EXPECT(0x0, gbc.readMem(0x97b5));
        // 35 0227
        gbc.setState(0xad6d, 0x1ccd, 0xb500, 0xffb6, 0xd68e, 0xcc95, 0x0, 0x1);
        gbc.writeMem(0xad6d, { 0x35 });
        gbc.writeMem(0xcc95, { 0xc6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xad6d));
        EXPECT(0xc5, gbc.readMem(0xcc95));
        // 35 0228
        gbc.setState(0x43ba, 0x60f, 0xd5f0, 0xce28, 0x199e, 0xf106, 0x0, 0x0);
        gbc.writeMem(0x43ba, { 0x35 });
        gbc.writeMem(0xf106, { 0xfb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x60f, gbc.sp());
        EXPECT(0x43bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf106));
        // 35 0229
        gbc.setState(0x171, 0x7097, 0x7e80, 0xd3b2, 0x291, 0xbb0e, 0x0, 0x0);
        gbc.writeMem(0x171, { 0x35 });
        gbc.writeMem(0xbb0e, { 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7097, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbb0e));
        // 35 022A
        gbc.setState(0x45a0, 0x81aa, 0x9920, 0x567, 0x8325, 0x91b8, 0x0, 0x0);
        gbc.writeMem(0x45a0, { 0x35 });
        gbc.writeMem(0x91b8, { 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x81aa, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x91b8));
        // 35 022C
        gbc.setState(0xafee, 0x49eb, 0xc9a0, 0x5468, 0x6716, 0xc377, 0x1, 0x1);
        gbc.writeMem(0xafee, { 0x35 });
        gbc.writeMem(0xc377, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x49eb, gbc.sp());
        EXPECT(0xafef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xafee));
        EXPECT(0xc8, gbc.readMem(0xc377));
        // 35 022F
        gbc.setState(0x54d0, 0x5d1e, 0x38b0, 0x9088, 0xb92c, 0x9467, 0x0, 0x1);
        gbc.writeMem(0x54d0, { 0x35 });
        gbc.writeMem(0x9467, { 0xe1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9467));
        // 35 0230
        gbc.setState(0x37a7, 0x37c8, 0xb780, 0xc3f8, 0x2663, 0xde25, 0x0, 0x1);
        gbc.writeMem(0x37a7, { 0x35 });
        gbc.writeMem(0xde25, { 0xe1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x37c8, gbc.sp());
        EXPECT(0x37a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xde25));
        // 35 0231
        gbc.setState(0x73b, 0xc30b, 0x8e40, 0x6962, 0x9721, 0x82ec, 0x1, 0x0);
        gbc.writeMem(0x73b, { 0x35 });
        gbc.writeMem(0x82ec, { 0x69 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc30b, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x82ec));
        // 35 0232
        gbc.setState(0x4c0b, 0xa7a5, 0x4eb0, 0xc3b0, 0xd8b0, 0x95aa, 0x0, 0x1);
        gbc.writeMem(0x4c0b, { 0x35 });
        gbc.writeMem(0x95aa, { 0x17 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7a5, gbc.sp());
        EXPECT(0x4c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x95aa));
        // 35 0235
        gbc.setState(0x2aae, 0x9e3b, 0x67f0, 0x74af, 0xe552, 0x8f94, 0x0, 0x0);
        gbc.writeMem(0x2aae, { 0x35 });
        gbc.writeMem(0x8f94, { 0xfa });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8f94));
        // 35 0238
        gbc.setState(0x6c32, 0xfca7, 0x6c70, 0xdf4b, 0xbdb1, 0xcedc, 0x0, 0x1);
        gbc.writeMem(0x6c32, { 0x35 });
        gbc.writeMem(0xcedc, { 0xc2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfca7, gbc.sp());
        EXPECT(0x6c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcedc));
        // 35 023C
        gbc.setState(0xef4d, 0x88c, 0x9320, 0xa46a, 0x7fff, 0xad89, 0x0, 0x0);
        gbc.writeMem(0xad89, { 0x5e });
        gbc.writeMem(0xef4d, { 0x35 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xad89));
        EXPECT(0x35, gbc.readMem(0xef4d));
        // 35 023F
        gbc.setState(0xc86d, 0x7c4c, 0x8d60, 0x3d53, 0xbec7, 0xa77b, 0x0, 0x1);
        gbc.writeMem(0xa77b, { 0x2e });
        gbc.writeMem(0xc86d, { 0x35 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa77b));
        EXPECT(0x35, gbc.readMem(0xc86d));
        // 35 0244
        gbc.setState(0x805b, 0x8cef, 0xb290, 0x439a, 0xa0b3, 0xf37f, 0x1, 0x1);
        gbc.writeMem(0x805b, { 0x35 });
        gbc.writeMem(0xf37f, { 0xf6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0x805c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x805b));
        EXPECT(0xf5, gbc.readMem(0xf37f));
        // 35 0247
        gbc.setState(0xbda3, 0x675a, 0x2880, 0x759d, 0xd6a2, 0x8473, 0x0, 0x0);
        gbc.writeMem(0x8473, { 0x5d });
        gbc.writeMem(0xbda3, { 0x35 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8473));
        EXPECT(0x35, gbc.readMem(0xbda3));
        // 35 024B
        gbc.setState(0x3bb1, 0x58d4, 0xb5c0, 0xab62, 0x67ad, 0x9eb4, 0x1, 0x0);
        gbc.writeMem(0x3bb1, { 0x35 });
        gbc.writeMem(0x9eb4, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x58d4, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9eb4));
        // 35 024D
        gbc.setState(0x8ed, 0x5b6a, 0xfea0, 0xbaca, 0xd414, 0xb6fd, 0x0, 0x1);
        gbc.writeMem(0x8ed, { 0x35 });
        gbc.writeMem(0xb6fd, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5b6a, gbc.sp());
        EXPECT(0x8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb6fd));
        // 35 024E
        gbc.setState(0x1f5f, 0x2296, 0xcd50, 0x5979, 0x9f6c, 0x986b, 0x0, 0x0);
        gbc.writeMem(0x1f5f, { 0x35 });
        gbc.writeMem(0x986b, { 0x97 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2296, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x986b));
        // 35 0250
        gbc.setState(0xec3f, 0x50a0, 0x5840, 0x1439, 0xddda, 0x9704, 0x0, 0x0);
        gbc.writeMem(0x9704, { 0x7c });
        gbc.writeMem(0xec3f, { 0x35 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x50a0, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9704));
        EXPECT(0x35, gbc.readMem(0xec3f));
        // 35 0251
        gbc.setState(0xc91d, 0xdd29, 0x8ec0, 0xf4e8, 0x95b, 0xcfb8, 0x0, 0x1);
        gbc.writeMem(0xc91d, { 0x35 });
        gbc.writeMem(0xcfb8, { 0x66 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0xc91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc91d));
        EXPECT(0x65, gbc.readMem(0xcfb8));
        // 35 0254
        gbc.setState(0xaccd, 0xb98b, 0x6b0, 0x7f77, 0x863e, 0x8381, 0x0, 0x1);
        gbc.writeMem(0x8381, { 0x36 });
        gbc.writeMem(0xaccd, { 0x35 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb98b, gbc.sp());
        EXPECT(0xacce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8381));
        EXPECT(0x35, gbc.readMem(0xaccd));
        // 35 0256
        gbc.setState(0x94f0, 0xc611, 0xca0, 0x6ef8, 0x961e, 0xf7b5, 0x0, 0x0);
        gbc.writeMem(0x94f0, { 0x35 });
        gbc.writeMem(0xf7b5, { 0x3d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc611, gbc.sp());
        EXPECT(0x94f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x94f0));
        EXPECT(0x3c, gbc.readMem(0xf7b5));
        // 35 025A
        gbc.setState(0x2462, 0x137b, 0x8210, 0x2c31, 0xd5be, 0xb541, 0x1, 0x1);
        gbc.writeMem(0x2462, { 0x35 });
        gbc.writeMem(0xb541, { 0xd4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0x2463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb541));
        // 35 025B
        gbc.setState(0x1219, 0x2829, 0x3c30, 0x7312, 0xa4a2, 0xe151, 0x1, 0x1);
        gbc.writeMem(0x1219, { 0x35 });
        gbc.writeMem(0xe151, { 0x17 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2829, gbc.sp());
        EXPECT(0x121a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe151));
        // 35 025C
        gbc.setState(0x7fac, 0x3e48, 0x3d30, 0xce39, 0x4ff9, 0xec2d, 0x0, 0x1);
        gbc.writeMem(0x7fac, { 0x35 });
        gbc.writeMem(0xec2d, { 0x17 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3e48, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec2d));
        // 35 025D
        gbc.setState(0xc08f, 0xbe6b, 0x3730, 0x70a4, 0x1d10, 0xee70, 0x1, 0x1);
        gbc.writeMem(0xc08f, { 0x35 });
        gbc.writeMem(0xee70, { 0x21 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbe6b, gbc.sp());
        EXPECT(0xc090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc08f));
        EXPECT(0x20, gbc.readMem(0xee70));
        // 35 025F
        gbc.setState(0xd7d2, 0xa1b5, 0x3510, 0x9e0d, 0xa383, 0xafc9, 0x1, 0x0);
        gbc.writeMem(0xafc9, { 0xe4 });
        gbc.writeMem(0xd7d2, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xafc9));
        EXPECT(0x35, gbc.readMem(0xd7d2));
        // 35 0262
        gbc.setState(0xa761, 0xd0d5, 0x46a0, 0x69eb, 0x3f24, 0xcd45, 0x0, 0x0);
        gbc.writeMem(0xa761, { 0x35 });
        gbc.writeMem(0xcd45, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd0d5, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa761));
        EXPECT(0x50, gbc.readMem(0xcd45));
        // 35 0263
        gbc.setState(0xad15, 0xa228, 0x6f70, 0x33c0, 0x71a6, 0x920f, 0x0, 0x0);
        gbc.writeMem(0x920f, { 0x6a });
        gbc.writeMem(0xad15, { 0x35 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa228, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x920f));
        EXPECT(0x35, gbc.readMem(0xad15));
        // 35 0265
        gbc.setState(0xa960, 0x808a, 0x280, 0x7d67, 0x7822, 0x9b34, 0x0, 0x0);
        gbc.writeMem(0x9b34, { 0x7d });
        gbc.writeMem(0xa960, { 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0xa961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9b34));
        EXPECT(0x35, gbc.readMem(0xa960));
        // 35 0266
        gbc.setState(0x26e6, 0x3495, 0xaaf0, 0x46f7, 0xe568, 0xbac4, 0x0, 0x0);
        gbc.writeMem(0x26e6, { 0x35 });
        gbc.writeMem(0xbac4, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3495, gbc.sp());
        EXPECT(0x26e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbac4));
        // 35 0267
        gbc.setState(0x51fc, 0x81d2, 0x3990, 0xeb4d, 0x9753, 0xc54b, 0x0, 0x0);
        gbc.writeMem(0x51fc, { 0x35 });
        gbc.writeMem(0xc54b, { 0xda });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x81d2, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc54b));
        // 35 026A
        gbc.setState(0x237e, 0xee2d, 0xdae0, 0x3e65, 0xdb3a, 0xc212, 0x1, 0x0);
        gbc.writeMem(0x237e, { 0x35 });
        gbc.writeMem(0xc212, { 0xa9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc212));
        // 35 026D
        gbc.setState(0x46f1, 0xf438, 0x7ef0, 0x7191, 0x2905, 0xef07, 0x0, 0x1);
        gbc.writeMem(0x46f1, { 0x35 });
        gbc.writeMem(0xef07, { 0xeb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xef07));
        // 35 0270
        gbc.setState(0x3aef, 0x4c9f, 0x8f80, 0xa915, 0xcd9d, 0xe536, 0x0, 0x1);
        gbc.writeMem(0x3aef, { 0x35 });
        gbc.writeMem(0xe536, { 0xf0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4c9f, gbc.sp());
        EXPECT(0x3af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xe536));
        // 35 0271
        gbc.setState(0xc667, 0xf1ad, 0x250, 0x6dd8, 0xe4bc, 0x842d, 0x0, 0x0);
        gbc.writeMem(0x842d, { 0xa });
        gbc.writeMem(0xc667, { 0x35 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf1ad, gbc.sp());
        EXPECT(0xc668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x842d));
        EXPECT(0x35, gbc.readMem(0xc667));
        // 35 0273
        gbc.setState(0xb7ad, 0xbc8c, 0xe460, 0x5055, 0xc04b, 0xae31, 0x1, 0x1);
        gbc.writeMem(0xae31, { 0xd0 });
        gbc.writeMem(0xb7ad, { 0x35 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0xb7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xae31));
        EXPECT(0x35, gbc.readMem(0xb7ad));
        // 35 0274
        gbc.setState(0xb2e8, 0xe06c, 0x6250, 0x4980, 0xf529, 0xe7fd, 0x0, 0x1);
        gbc.writeMem(0xb2e8, { 0x35 });
        gbc.writeMem(0xe7fd, { 0xd5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb2e8));
        EXPECT(0xd4, gbc.readMem(0xe7fd));
        // 35 0275
        gbc.setState(0x2b38, 0x2e7d, 0x5f60, 0xb987, 0xa4cf, 0xef47, 0x0, 0x0);
        gbc.writeMem(0x2b38, { 0x35 });
        gbc.writeMem(0xef47, { 0x6b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0x2b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xef47));
        // 35 0276
        gbc.setState(0x357b, 0x65ec, 0xc260, 0xc8b9, 0xe007, 0xf556, 0x0, 0x1);
        gbc.writeMem(0x357b, { 0x35 });
        gbc.writeMem(0xf556, { 0xa5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x65ec, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf556));
        // 35 0277
        gbc.setState(0xb4e2, 0xb2d6, 0x4490, 0xe123, 0xd246, 0x9875, 0x1, 0x0);
        gbc.writeMem(0x9875, { 0x1e });
        gbc.writeMem(0xb4e2, { 0x35 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb2d6, gbc.sp());
        EXPECT(0xb4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9875));
        EXPECT(0x35, gbc.readMem(0xb4e2));
        // 35 0278
        gbc.setState(0x629, 0xe2cd, 0x3990, 0xd981, 0x9e9, 0xe7a8, 0x0, 0x1);
        gbc.writeMem(0x629, { 0x35 });
        gbc.writeMem(0xe7a8, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe7a8));
        // 35 0279
        gbc.setState(0x378d, 0xb148, 0x4920, 0x2242, 0x4e3b, 0xb1a2, 0x0, 0x0);
        gbc.writeMem(0x378d, { 0x35 });
        gbc.writeMem(0xb1a2, { 0xe1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb1a2));
        // 35 027A
        gbc.setState(0x1aa8, 0xc6fe, 0xcdf0, 0x47ab, 0xb6a7, 0xb859, 0x0, 0x0);
        gbc.writeMem(0x1aa8, { 0x35 });
        gbc.writeMem(0xb859, { 0x9e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc6fe, gbc.sp());
        EXPECT(0x1aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb859));
        // 35 027B
        gbc.setState(0x2a84, 0xf679, 0x4e30, 0x1d6, 0x9226, 0xa84f, 0x1, 0x1);
        gbc.writeMem(0x2a84, { 0x35 });
        gbc.writeMem(0xa84f, { 0x22 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0x2a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa84f));
        // 35 027F
        gbc.setState(0x25fb, 0x5d52, 0xafb0, 0x3ab2, 0xbc3, 0xf9f9, 0x1, 0x1);
        gbc.writeMem(0x25fb, { 0x35 });
        gbc.writeMem(0xf9f9, { 0xa1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xf9f9));
        // 35 0281
        gbc.setState(0x50d9, 0x707d, 0x1fa0, 0xabf8, 0x3b64, 0xae22, 0x0, 0x1);
        gbc.writeMem(0x50d9, { 0x35 });
        gbc.writeMem(0xae22, { 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x707d, gbc.sp());
        EXPECT(0x50da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xae22));
        // 35 0286
        gbc.setState(0xdece, 0x999a, 0x1770, 0x705a, 0x5b0a, 0xbd6c, 0x0, 0x0);
        gbc.writeMem(0xbd6c, { 0x65 });
        gbc.writeMem(0xdece, { 0x35 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0xdecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xbd6c));
        EXPECT(0x35, gbc.readMem(0xdece));
        // 35 0287
        gbc.setState(0x36cb, 0x2cc2, 0x2390, 0xeae8, 0xeccd, 0xada4, 0x0, 0x0);
        gbc.writeMem(0x36cb, { 0x35 });
        gbc.writeMem(0xada4, { 0x8d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2cc2, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xada4));
        // 35 0288
        gbc.setState(0x3b5e, 0x4e33, 0xb660, 0x5655, 0x8e2a, 0xe1bc, 0x0, 0x1);
        gbc.writeMem(0x3b5e, { 0x35 });
        gbc.writeMem(0xe1bc, { 0x8f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4e33, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xe1bc));
        // 35 0289
        gbc.setState(0xcb3b, 0x1b86, 0xe7f0, 0xb387, 0x95de, 0xca65, 0x1, 0x0);
        gbc.writeMem(0xca65, { 0xc });
        gbc.writeMem(0xcb3b, { 0x35 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1b86, gbc.sp());
        EXPECT(0xcb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xca65));
        EXPECT(0x35, gbc.readMem(0xcb3b));
        // 35 028A
        gbc.setState(0x2f6d, 0xb253, 0x1db0, 0xd62, 0x6379, 0xe6e1, 0x1, 0x0);
        gbc.writeMem(0x2f6d, { 0x35 });
        gbc.writeMem(0xe6e1, { 0xe });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb253, gbc.sp());
        EXPECT(0x2f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xe6e1));
        // 35 0290
        gbc.setState(0x2b18, 0x64d6, 0xeb0, 0x5e57, 0x8d6c, 0xd657, 0x1, 0x1);
        gbc.writeMem(0x2b18, { 0x35 });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x64d6, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd657));
        // 35 0291
        gbc.setState(0x1d41, 0x2d7d, 0xdd0, 0xe016, 0x9593, 0xa6d1, 0x1, 0x1);
        gbc.writeMem(0x1d41, { 0x35 });
        gbc.writeMem(0xa6d1, { 0xef });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2d7d, gbc.sp());
        EXPECT(0x1d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa6d1));
        // 35 0292
        gbc.setState(0x8548, 0x75fc, 0x8d80, 0xdb9f, 0x494a, 0x85fc, 0x1, 0x0);
        gbc.writeMem(0x8548, { 0x35 });
        gbc.writeMem(0x85fc, { 0xdc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x75fc, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8548));
        EXPECT(0xdb, gbc.readMem(0x85fc));
        // 35 0294
        gbc.setState(0x971f, 0x6e17, 0x3340, 0xd011, 0x7bc5, 0x8460, 0x1, 0x0);
        gbc.writeMem(0x8460, { 0x4e });
        gbc.writeMem(0x971f, { 0x35 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x9720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8460));
        EXPECT(0x35, gbc.readMem(0x971f));
        // 35 0295
        gbc.setState(0xee77, 0x17d3, 0xf7e0, 0xeabd, 0xae1a, 0xaded, 0x0, 0x0);
        gbc.writeMem(0xaded, { 0x4c });
        gbc.writeMem(0xee77, { 0x35 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x17d3, gbc.sp());
        EXPECT(0xee78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaded));
        EXPECT(0x35, gbc.readMem(0xee77));
        // 35 0297
        gbc.setState(0x4800, 0x2f15, 0xa6c0, 0x621c, 0x58c8, 0xb43d, 0x0, 0x1);
        gbc.writeMem(0x4800, { 0x35 });
        gbc.writeMem(0xb43d, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2f15, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb43d));
        // 35 0298
        gbc.setState(0xd673, 0xf26a, 0x5690, 0xd267, 0x2f27, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0x8e39, { 0x95 });
        gbc.writeMem(0xd673, { 0x35 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf26a, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8e39));
        EXPECT(0x35, gbc.readMem(0xd673));
        // 35 0299
        gbc.setState(0x3a47, 0x71a9, 0x1920, 0x2ce5, 0xe2e7, 0x95dc, 0x0, 0x1);
        gbc.writeMem(0x3a47, { 0x35 });
        gbc.writeMem(0x95dc, { 0xc0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x71a9, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x95dc));
        // 35 029B
        gbc.setState(0x7af8, 0xd7b6, 0xc1f0, 0x4315, 0xe070, 0x910e, 0x0, 0x1);
        gbc.writeMem(0x7af8, { 0x35 });
        gbc.writeMem(0x910e, { 0x22 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x7af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x910e));
        // 35 029E
        gbc.setState(0x3190, 0x8d3b, 0xa730, 0xa1f5, 0x7fcc, 0x8ef5, 0x0, 0x0);
        gbc.writeMem(0x3190, { 0x35 });
        gbc.writeMem(0x8ef5, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8d3b, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8ef5));
        // 35 029F
        gbc.setState(0xd5a7, 0x9893, 0xa7f0, 0x4990, 0x7210, 0x9776, 0x0, 0x0);
        gbc.writeMem(0x9776, { 0xd3 });
        gbc.writeMem(0xd5a7, { 0x35 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9893, gbc.sp());
        EXPECT(0xd5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9776));
        EXPECT(0x35, gbc.readMem(0xd5a7));
        // 35 02A0
        gbc.setState(0x8477, 0x24da, 0x85e0, 0x1295, 0x41f8, 0xff5e, 0x0, 0x1);
        gbc.writeMem(0x8477, { 0x35 });
        gbc.writeMem(0xff5e, { 0x62 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0x8478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8477));
        EXPECT(0x61, gbc.readMem(0xff5e));
        // 35 02A1
        gbc.setState(0x6d77, 0x9569, 0x9020, 0x1189, 0x28a5, 0xfb56, 0x0, 0x1);
        gbc.writeMem(0x6d77, { 0x35 });
        gbc.writeMem(0xfb56, { 0x58 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9569, gbc.sp());
        EXPECT(0x6d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xfb56));
        // 35 02A4
        gbc.setState(0x4bbb, 0xbbdc, 0x7f10, 0xba7b, 0xfa73, 0xbd17, 0x1, 0x0);
        gbc.writeMem(0x4bbb, { 0x35 });
        gbc.writeMem(0xbd17, { 0x8d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbbdc, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd17));
        // 35 02A6
        gbc.setState(0x607f, 0x8f05, 0x7a20, 0x89fc, 0x7bb2, 0xac86, 0x1, 0x1);
        gbc.writeMem(0x607f, { 0x35 });
        gbc.writeMem(0xac86, { 0x28 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac86));
        // 35 02A7
        gbc.setState(0x9756, 0x326, 0x10a0, 0xe150, 0x8ab8, 0xef2a, 0x1, 0x0);
        gbc.writeMem(0x9756, { 0x35 });
        gbc.writeMem(0xef2a, { 0xd5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9756));
        EXPECT(0xd4, gbc.readMem(0xef2a));
        // 35 02A9
        gbc.setState(0x6e4d, 0x3b87, 0x4ad0, 0xd58, 0xf8c2, 0xbea7, 0x1, 0x0);
        gbc.writeMem(0x6e4d, { 0x35 });
        gbc.writeMem(0xbea7, { 0xe6 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3b87, gbc.sp());
        EXPECT(0x6e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbea7));
        // 35 02AA
        gbc.setState(0x1bc7, 0xb7b, 0xa8d0, 0xa96c, 0x5ad8, 0x8496, 0x1, 0x0);
        gbc.writeMem(0x1bc7, { 0x35 });
        gbc.writeMem(0x8496, { 0x78 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x1bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8496));
        // 35 02AE
        gbc.setState(0x2094, 0xf3ed, 0x83b0, 0x8439, 0x6ef9, 0xac01, 0x1, 0x0);
        gbc.writeMem(0x2094, { 0x35 });
        gbc.writeMem(0xac01, { 0x7b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf3ed, gbc.sp());
        EXPECT(0x2095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xac01));
        // 35 02AF
        gbc.setState(0x97a3, 0x2743, 0x770, 0x570f, 0x6443, 0xee78, 0x0, 0x0);
        gbc.writeMem(0x97a3, { 0x35 });
        gbc.writeMem(0xee78, { 0xf2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x97a3));
        EXPECT(0xf1, gbc.readMem(0xee78));
        // 35 02B0
        gbc.setState(0x1383, 0x9f6d, 0x2130, 0x9f77, 0x68ef, 0xba18, 0x1, 0x1);
        gbc.writeMem(0x1383, { 0x35 });
        gbc.writeMem(0xba18, { 0x6f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9f6d, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xba18));
        // 35 02B2
        gbc.setState(0x4da7, 0xf51a, 0x5c60, 0x318a, 0x1802, 0xa40e, 0x1, 0x0);
        gbc.writeMem(0x4da7, { 0x35 });
        gbc.writeMem(0xa40e, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf51a, gbc.sp());
        EXPECT(0x4da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa40e));
        // 35 02B6
        gbc.setState(0x21f8, 0xbc5a, 0xd2d0, 0xcb4a, 0x2be9, 0xe677, 0x1, 0x1);
        gbc.writeMem(0x21f8, { 0x35 });
        gbc.writeMem(0xe677, { 0x59 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbc5a, gbc.sp());
        EXPECT(0x21f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe677));
        // 35 02BB
        gbc.setState(0x863e, 0x2d67, 0x2db0, 0xf019, 0xf69f, 0x8c95, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0x35 });
        gbc.writeMem(0x8c95, { 0x1d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2d67, gbc.sp());
        EXPECT(0x863f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x863e));
        EXPECT(0x1c, gbc.readMem(0x8c95));
        // 35 02BC
        gbc.setState(0x4965, 0x7137, 0xe200, 0x152a, 0x88ad, 0x8d71, 0x0, 0x0);
        gbc.writeMem(0x4965, { 0x35 });
        gbc.writeMem(0x8d71, { 0xba });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7137, gbc.sp());
        EXPECT(0x4966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8d71));
        // 35 02BD
        gbc.setState(0xbbc8, 0xe40c, 0x3320, 0xf93d, 0x4057, 0xa368, 0x0, 0x0);
        gbc.writeMem(0xa368, { 0x6e });
        gbc.writeMem(0xbbc8, { 0x35 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa368));
        EXPECT(0x35, gbc.readMem(0xbbc8));
        // 35 02C0
        gbc.setState(0x2cd3, 0x2315, 0x2f40, 0xca70, 0x5f7c, 0xdd8e, 0x1, 0x1);
        gbc.writeMem(0x2cd3, { 0x35 });
        gbc.writeMem(0xdd8e, { 0x25 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2315, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xdd8e));
        // 35 02C1
        gbc.setState(0xb24, 0xc116, 0xfef0, 0x33c3, 0x7b4e, 0x9a4c, 0x0, 0x0);
        gbc.writeMem(0xb24, { 0x35 });
        gbc.writeMem(0x9a4c, { 0x63 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0xb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9a4c));
        // 35 02C2
        gbc.setState(0xf92, 0x6aa5, 0xac90, 0xfe64, 0xa181, 0xa6e9, 0x0, 0x1);
        gbc.writeMem(0xf92, { 0x35 });
        gbc.writeMem(0xa6e9, { 0x80 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0xf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa6e9));
        // 35 02C3
        gbc.setState(0x6ca9, 0xbc2a, 0x3f90, 0x690c, 0x7230, 0x9118, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0x35 });
        gbc.writeMem(0x9118, { 0x91 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbc2a, gbc.sp());
        EXPECT(0x6caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9118));
        // 35 02C4
        gbc.setState(0x3945, 0xa4c3, 0x1720, 0x37dd, 0x465e, 0xe071, 0x1, 0x1);
        gbc.writeMem(0x3945, { 0x35 });
        gbc.writeMem(0xe071, { 0xcd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa4c3, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xe071));
        // 35 02C6
        gbc.setState(0xed5f, 0x7053, 0x29f0, 0x11ed, 0x9f6a, 0xd986, 0x1, 0x0);
        gbc.writeMem(0xd986, { 0x4d });
        gbc.writeMem(0xed5f, { 0x35 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7053, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd986));
        EXPECT(0x35, gbc.readMem(0xed5f));
        // 35 02C7
        gbc.setState(0x5d3b, 0xc64d, 0xda70, 0x4a3d, 0xe609, 0xdddc, 0x0, 0x0);
        gbc.writeMem(0x5d3b, { 0x35 });
        gbc.writeMem(0xdddc, { 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdddc));
        // 35 02C8
        gbc.setState(0x88da, 0x5f16, 0xe160, 0x4dea, 0x250b, 0xdcf7, 0x1, 0x1);
        gbc.writeMem(0x88da, { 0x35 });
        gbc.writeMem(0xdcf7, { 0x68 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0x88db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x88da));
        EXPECT(0x67, gbc.readMem(0xdcf7));
        // 35 02C9
        gbc.setState(0x65f7, 0x4400, 0x4ba0, 0x8e5c, 0xd4be, 0xa2cc, 0x1, 0x0);
        gbc.writeMem(0x65f7, { 0x35 });
        gbc.writeMem(0xa2cc, { 0x65 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4400, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa2cc));
        // 35 02CD
        gbc.setState(0x23bc, 0xfba0, 0xdf90, 0xc6d2, 0x3cbe, 0xe564, 0x1, 0x1);
        gbc.writeMem(0x23bc, { 0x35 });
        gbc.writeMem(0xe564, { 0x1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfba0, gbc.sp());
        EXPECT(0x23bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe564));
        // 35 02CF
        gbc.setState(0x796b, 0x3a53, 0x2e50, 0xd2f1, 0x7370, 0x9b82, 0x1, 0x0);
        gbc.writeMem(0x796b, { 0x35 });
        gbc.writeMem(0x9b82, { 0xe5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9b82));
        // 35 02D1
        gbc.setState(0x31c3, 0xa4c8, 0x7ae0, 0x8125, 0xa9fb, 0xafb0, 0x1, 0x0);
        gbc.writeMem(0x31c3, { 0x35 });
        gbc.writeMem(0xafb0, { 0xd1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x31c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xafb0));
        // 35 02D2
        gbc.setState(0x8cf4, 0xa313, 0xfdc0, 0xebab, 0xaa7b, 0x9d7c, 0x1, 0x1);
        gbc.writeMem(0x8cf4, { 0x35 });
        gbc.writeMem(0x9d7c, { 0xb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa313, gbc.sp());
        EXPECT(0x8cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8cf4));
        EXPECT(0xa, gbc.readMem(0x9d7c));
        // 35 02D8
        gbc.setState(0x8682, 0x1fe5, 0x7fa0, 0x7d0d, 0xe66, 0x848a, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0x3d });
        gbc.writeMem(0x8682, { 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1fe5, gbc.sp());
        EXPECT(0x8683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x848a));
        EXPECT(0x35, gbc.readMem(0x8682));
        // 35 02D9
        gbc.setState(0x2647, 0x167e, 0x730, 0x5de4, 0xfe31, 0x9184, 0x0, 0x0);
        gbc.writeMem(0x2647, { 0x35 });
        gbc.writeMem(0x9184, { 0xd6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x167e, gbc.sp());
        EXPECT(0x2648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9184));
        // 35 02DC
        gbc.setState(0x916d, 0xf796, 0x63e0, 0xb218, 0x5d7b, 0xdc98, 0x1, 0x1);
        gbc.writeMem(0x916d, { 0x35 });
        gbc.writeMem(0xdc98, { 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf796, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x916d));
        EXPECT(0x9d, gbc.readMem(0xdc98));
        // 35 02DD
        gbc.setState(0x9fb9, 0xa921, 0x6010, 0x6dc3, 0xbe9e, 0xa442, 0x1, 0x0);
        gbc.writeMem(0x9fb9, { 0x35 });
        gbc.writeMem(0xa442, { 0x68 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa921, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9fb9));
        EXPECT(0x67, gbc.readMem(0xa442));
        // 35 02DF
        gbc.setState(0xdc3f, 0x1a90, 0xee90, 0xcee0, 0x76b7, 0xe1fe, 0x1, 0x0);
        gbc.writeMem(0xdc3f, { 0x35 });
        gbc.writeMem(0xe1fe, { 0x99 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xdc3f));
        EXPECT(0x98, gbc.readMem(0xe1fe));
        // 35 02E0
        gbc.setState(0xb57b, 0x67b9, 0x1c00, 0xcb26, 0x7adf, 0xe1c8, 0x0, 0x1);
        gbc.writeMem(0xb57b, { 0x35 });
        gbc.writeMem(0xe1c8, { 0x51 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb57b));
        EXPECT(0x50, gbc.readMem(0xe1c8));
        // 35 02E1
        gbc.setState(0x6351, 0xe972, 0x53c0, 0x27b3, 0xf21c, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0x6351, { 0x35 });
        gbc.writeMem(0x8e9e, { 0x6a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0x6352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8e9e));
        // 35 02E2
        gbc.setState(0xc59, 0x80d6, 0x5900, 0x47b5, 0xc054, 0xe2b6, 0x0, 0x1);
        gbc.writeMem(0xc59, { 0x35 });
        gbc.writeMem(0xe2b6, { 0x68 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xe2b6));
        // 35 02E5
        gbc.setState(0x40b5, 0x4b0, 0x470, 0x4724, 0xc6a7, 0xf58a, 0x1, 0x0);
        gbc.writeMem(0x40b5, { 0x35 });
        gbc.writeMem(0xf58a, { 0x2a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xf58a));
        // 35 02E6
        gbc.setState(0x6a40, 0x1642, 0x56d0, 0x8892, 0x8616, 0x8b0d, 0x0, 0x1);
        gbc.writeMem(0x6a40, { 0x35 });
        gbc.writeMem(0x8b0d, { 0x14 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1642, gbc.sp());
        EXPECT(0x6a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8b0d));
        // 35 02E7
        gbc.setState(0x9838, 0xff5e, 0x2390, 0xd39, 0xd231, 0xd731, 0x1, 0x1);
        gbc.writeMem(0x9838, { 0x35 });
        gbc.writeMem(0xd731, { 0x75 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0x9839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9838));
        EXPECT(0x74, gbc.readMem(0xd731));
        // 35 02E9
        gbc.setState(0x963e, 0x4d2f, 0x5d20, 0xbc8b, 0x3c53, 0xb654, 0x1, 0x1);
        gbc.writeMem(0x963e, { 0x35 });
        gbc.writeMem(0xb654, { 0x5f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x963f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x963e));
        EXPECT(0x5e, gbc.readMem(0xb654));
        // 35 02EA
        gbc.setState(0x3f24, 0x4695, 0xd510, 0x36de, 0x51cd, 0xd0d3, 0x1, 0x1);
        gbc.writeMem(0x3f24, { 0x35 });
        gbc.writeMem(0xd0d3, { 0x70 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0x3f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xd0d3));
        // 35 02EF
        gbc.setState(0x61, 0x1878, 0x8e00, 0x18a2, 0xd27c, 0xe8e8, 0x1, 0x0);
        gbc.writeMem(0x61, { 0x35 });
        gbc.writeMem(0xe8e8, { 0x79 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1878, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe8e8));
        // 35 02F1
        gbc.setState(0x75d1, 0xd106, 0x4360, 0x1a6c, 0xaa1, 0xeb4b, 0x0, 0x0);
        gbc.writeMem(0x75d1, { 0x35 });
        gbc.writeMem(0xeb4b, { 0x5b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0x75d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xeb4b));
        // 35 02F2
        gbc.setState(0x37e7, 0xc248, 0xf770, 0xdc4d, 0xc8b6, 0xbf7a, 0x1, 0x0);
        gbc.writeMem(0x37e7, { 0x35 });
        gbc.writeMem(0xbf7a, { 0xcc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7a));
        // 35 02F7
        gbc.setState(0xd98f, 0xa22e, 0x6ef0, 0x43e1, 0x7891, 0xc593, 0x0, 0x1);
        gbc.writeMem(0xc593, { 0x46 });
        gbc.writeMem(0xd98f, { 0x35 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0xd990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc593));
        EXPECT(0x35, gbc.readMem(0xd98f));
        // 35 02F9
        gbc.setState(0x6616, 0x6fdd, 0x9b30, 0x664f, 0x4b38, 0xc401, 0x0, 0x0);
        gbc.writeMem(0x6616, { 0x35 });
        gbc.writeMem(0xc401, { 0xd1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6fdd, gbc.sp());
        EXPECT(0x6617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc401));
        // 35 02FA
        gbc.setState(0x5295, 0xed48, 0xced0, 0x2d23, 0x55e, 0xc73e, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0x35 });
        gbc.writeMem(0xc73e, { 0xf0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed48, gbc.sp());
        EXPECT(0x5296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc73e));
        // 35 02FB
        gbc.setState(0x8ba9, 0xffac, 0x1200, 0xecf8, 0x1409, 0x9e4d, 0x0, 0x0);
        gbc.writeMem(0x8ba9, { 0x35 });
        gbc.writeMem(0x9e4d, { 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x8baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8ba9));
        EXPECT(0x4e, gbc.readMem(0x9e4d));
        // 35 02FC
        gbc.setState(0x5cc7, 0x3030, 0xb990, 0x961d, 0x1366, 0xe56d, 0x0, 0x1);
        gbc.writeMem(0x5cc7, { 0x35 });
        gbc.writeMem(0xe56d, { 0x5e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe56d));
        // 35 02FD
        gbc.setState(0x7b9, 0xe022, 0xbe40, 0xc046, 0xe5f8, 0xca68, 0x0, 0x0);
        gbc.writeMem(0x7b9, { 0x35 });
        gbc.writeMem(0xca68, { 0x4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0x7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xca68));
        // 35 02FE
        gbc.setState(0xcd3b, 0xfb3, 0x30d0, 0x10ed, 0x589f, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0x35 });
        gbc.writeMem(0xdfaf, { 0x8b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfb3, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcd3b));
        EXPECT(0x8a, gbc.readMem(0xdfaf));
        // 35 02FF
        gbc.setState(0x1fa3, 0x25ce, 0x1370, 0x927c, 0x439f, 0xb77d, 0x1, 0x0);
        gbc.writeMem(0x1fa3, { 0x35 });
        gbc.writeMem(0xb77d, { 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x25ce, gbc.sp());
        EXPECT(0x1fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb77d));
        // 35 0302
        gbc.setState(0x3641, 0xd28, 0x4f0, 0x3123, 0x7300, 0xd6bc, 0x0, 0x0);
        gbc.writeMem(0x3641, { 0x35 });
        gbc.writeMem(0xd6bc, { 0x23 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd28, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd6bc));
        // 35 0303
        gbc.setState(0x53bb, 0xca55, 0xa1d0, 0xbfa, 0xffe, 0xa9f0, 0x0, 0x0);
        gbc.writeMem(0x53bb, { 0x35 });
        gbc.writeMem(0xa9f0, { 0x3f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0x53bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa9f0));
        // 35 0305
        gbc.setState(0x638, 0xdb91, 0x9ee0, 0xd5cb, 0x9945, 0xdf5a, 0x0, 0x1);
        gbc.writeMem(0x638, { 0x35 });
        gbc.writeMem(0xdf5a, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0x639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdf5a));
        // 35 0306
        gbc.setState(0x3491, 0xfb6c, 0x7660, 0x45b9, 0x2a1b, 0xe6c9, 0x0, 0x0);
        gbc.writeMem(0x3491, { 0x35 });
        gbc.writeMem(0xe6c9, { 0x5b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb6c, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe6c9));
        // 35 030B
        gbc.setState(0xc02f, 0x9ef8, 0x2fa0, 0x123, 0xa49b, 0xb5f9, 0x0, 0x1);
        gbc.writeMem(0xb5f9, { 0x51 });
        gbc.writeMem(0xc02f, { 0x35 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9ef8, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb5f9));
        EXPECT(0x35, gbc.readMem(0xc02f));
        // 35 030D
        gbc.setState(0xdb2c, 0xf077, 0x2a40, 0x9fbd, 0xbbc6, 0xc082, 0x1, 0x0);
        gbc.writeMem(0xc082, { 0x40 });
        gbc.writeMem(0xdb2c, { 0x35 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc082));
        EXPECT(0x35, gbc.readMem(0xdb2c));
        // 35 030E
        gbc.setState(0x8729, 0x67a3, 0xb00, 0x84b5, 0xd1a4, 0xe067, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0x35 });
        gbc.writeMem(0xe067, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x67a3, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8729));
        EXPECT(0x79, gbc.readMem(0xe067));
        // 35 030F
        gbc.setState(0x623c, 0x1b50, 0x82e0, 0x59e1, 0x53c3, 0xbefb, 0x0, 0x0);
        gbc.writeMem(0x623c, { 0x35 });
        gbc.writeMem(0xbefb, { 0x8b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbefb));
        // 35 0310
        gbc.setState(0x49cf, 0x2d14, 0x4ab0, 0xb148, 0xa1f5, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0x49cf, { 0x35 });
        gbc.writeMem(0xc50c, { 0xbc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2d14, gbc.sp());
        EXPECT(0x49d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc50c));
        // 35 0311
        gbc.setState(0x16cb, 0xd09e, 0xdd70, 0x19f, 0xf8a1, 0xca6a, 0x1, 0x1);
        gbc.writeMem(0x16cb, { 0x35 });
        gbc.writeMem(0xca6a, { 0x3e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x16cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xca6a));
        // 35 0313
        gbc.setState(0xd8ec, 0x26d3, 0xb320, 0x2873, 0x833d, 0xd7b3, 0x0, 0x1);
        gbc.writeMem(0xd7b3, { 0xcd });
        gbc.writeMem(0xd8ec, { 0x35 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0xd8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd7b3));
        EXPECT(0x35, gbc.readMem(0xd8ec));
        // 35 0314
        gbc.setState(0xba5b, 0x945e, 0xe940, 0x2ea0, 0xf21e, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0xba5b, { 0x35 });
        gbc.writeMem(0xeefc, { 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0xba5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xba5b));
        EXPECT(0xb8, gbc.readMem(0xeefc));
        // 35 031A
        gbc.setState(0xa852, 0x77b4, 0x3fa0, 0x2cd, 0xf08a, 0xa39f, 0x1, 0x1);
        gbc.writeMem(0xa39f, { 0x82 });
        gbc.writeMem(0xa852, { 0x35 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0xa853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa39f));
        EXPECT(0x35, gbc.readMem(0xa852));
        // 35 031E
        gbc.setState(0xeb9a, 0x2deb, 0x3400, 0x4587, 0x2ea1, 0xde86, 0x1, 0x1);
        gbc.writeMem(0xde86, { 0x9f });
        gbc.writeMem(0xeb9a, { 0x35 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2deb, gbc.sp());
        EXPECT(0xeb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xde86));
        EXPECT(0x35, gbc.readMem(0xeb9a));
        // 35 031F
        gbc.setState(0xb44e, 0xf032, 0xec0, 0x2c2d, 0xf604, 0xa7c1, 0x1, 0x0);
        gbc.writeMem(0xa7c1, { 0x7 });
        gbc.writeMem(0xb44e, { 0x35 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf032, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa7c1));
        EXPECT(0x35, gbc.readMem(0xb44e));
        // 35 0320
        gbc.setState(0x171, 0x2de6, 0xfd50, 0x98c3, 0x7ace, 0xd007, 0x0, 0x1);
        gbc.writeMem(0x171, { 0x35 });
        gbc.writeMem(0xd007, { 0x52 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd007));
        // 35 0325
        gbc.setState(0x1d5, 0x3538, 0x5f10, 0x1cc4, 0xe07, 0x8885, 0x1, 0x0);
        gbc.writeMem(0x1d5, { 0x35 });
        gbc.writeMem(0x8885, { 0x86 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8885));
        // 35 0328
        gbc.setState(0x9c21, 0xa2e3, 0x7ce0, 0x2aca, 0xa90e, 0xfb1a, 0x1, 0x0);
        gbc.writeMem(0x9c21, { 0x35 });
        gbc.writeMem(0xfb1a, { 0x2d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa2e3, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9c21));
        EXPECT(0x2c, gbc.readMem(0xfb1a));
        // 35 032A
        gbc.setState(0x13d3, 0x4c40, 0x1ad0, 0x4b24, 0x41e9, 0xa6d8, 0x1, 0x0);
        gbc.writeMem(0x13d3, { 0x35 });
        gbc.writeMem(0xa6d8, { 0x14 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa6d8));
        // 35 032B
        gbc.setState(0xcc43, 0x818f, 0xa750, 0xdcb9, 0x5090, 0xf080, 0x0, 0x1);
        gbc.writeMem(0xcc43, { 0x35 });
        gbc.writeMem(0xf080, { 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x818f, gbc.sp());
        EXPECT(0xcc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcc43));
        EXPECT(0x9e, gbc.readMem(0xf080));
        // 35 032D
        gbc.setState(0xd1ba, 0x8ad4, 0x6840, 0xae21, 0x6323, 0xfaa0, 0x1, 0x0);
        gbc.writeMem(0xd1ba, { 0x35 });
        gbc.writeMem(0xfaa0, { 0xf6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8ad4, gbc.sp());
        EXPECT(0xd1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd1ba));
        EXPECT(0xf5, gbc.readMem(0xfaa0));
        // 35 032E
        gbc.setState(0x2121, 0x3d01, 0x600, 0xa3ee, 0x83e6, 0xc53b, 0x0, 0x1);
        gbc.writeMem(0x2121, { 0x35 });
        gbc.writeMem(0xc53b, { 0xbe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3d01, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc53b));
        // 35 0331
        gbc.setState(0x3fe7, 0x273d, 0x72f0, 0x767c, 0x45e3, 0xb965, 0x1, 0x1);
        gbc.writeMem(0x3fe7, { 0x35 });
        gbc.writeMem(0xb965, { 0x5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x273d, gbc.sp());
        EXPECT(0x3fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb965));
        // 35 0334
        gbc.setState(0x2cb4, 0x9cef, 0x1250, 0x9c6e, 0xb6e6, 0xfcb0, 0x0, 0x1);
        gbc.writeMem(0x2cb4, { 0x35 });
        gbc.writeMem(0xfcb0, { 0x87 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0x2cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xfcb0));
        // 35 0335
        gbc.setState(0x77d5, 0x2a94, 0x4430, 0xa4b, 0x47a1, 0xb5d6, 0x1, 0x0);
        gbc.writeMem(0x77d5, { 0x35 });
        gbc.writeMem(0xb5d6, { 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb5d6));
        // 35 0337
        gbc.setState(0x7869, 0x9604, 0x5290, 0x8057, 0xa921, 0xc869, 0x0, 0x1);
        gbc.writeMem(0x7869, { 0x35 });
        gbc.writeMem(0xc869, { 0x73 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x786a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc869));
        // 35 0338
        gbc.setState(0x87c2, 0x272e, 0xcbc0, 0xefec, 0xda7a, 0xd7fc, 0x1, 0x1);
        gbc.writeMem(0x87c2, { 0x35 });
        gbc.writeMem(0xd7fc, { 0xdb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x272e, gbc.sp());
        EXPECT(0x87c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x87c2));
        EXPECT(0xda, gbc.readMem(0xd7fc));
        // 35 033A
        gbc.setState(0x76b0, 0xa11, 0xe650, 0x625c, 0x8dae, 0xf64f, 0x0, 0x1);
        gbc.writeMem(0x76b0, { 0x35 });
        gbc.writeMem(0xf64f, { 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa11, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf64f));
        // 35 033B
        gbc.setState(0xb60a, 0x567f, 0x2900, 0xf52e, 0x1734, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0x35 });
        gbc.writeMem(0xcd5e, { 0xeb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x567f, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb60a));
        EXPECT(0xea, gbc.readMem(0xcd5e));
        // 35 0341
        gbc.setState(0x65f8, 0xcc24, 0x82d0, 0xa638, 0x6972, 0xe043, 0x0, 0x1);
        gbc.writeMem(0x65f8, { 0x35 });
        gbc.writeMem(0xe043, { 0x79 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe043));
        // 35 0343
        gbc.setState(0xed42, 0xf90a, 0xefd0, 0xb2da, 0x8f48, 0x8339, 0x0, 0x1);
        gbc.writeMem(0x8339, { 0x71 });
        gbc.writeMem(0xed42, { 0x35 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8339));
        EXPECT(0x35, gbc.readMem(0xed42));
        // 35 0346
        gbc.setState(0x607e, 0x2061, 0x2280, 0x8a51, 0xd55c, 0x95d6, 0x1, 0x1);
        gbc.writeMem(0x607e, { 0x35 });
        gbc.writeMem(0x95d6, { 0xc7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2061, gbc.sp());
        EXPECT(0x607f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x95d6));
        // 35 0347
        gbc.setState(0xea09, 0xec75, 0x1bc0, 0x30ed, 0xce58, 0xb15e, 0x0, 0x0);
        gbc.writeMem(0xb15e, { 0xf6 });
        gbc.writeMem(0xea09, { 0x35 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xec75, gbc.sp());
        EXPECT(0xea0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb15e));
        EXPECT(0x35, gbc.readMem(0xea09));
        // 35 0348
        gbc.setState(0x8624, 0xbf2a, 0x1480, 0x5481, 0xff56, 0xdd46, 0x0, 0x1);
        gbc.writeMem(0x8624, { 0x35 });
        gbc.writeMem(0xdd46, { 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8624));
        EXPECT(0x72, gbc.readMem(0xdd46));
        // 35 034D
        gbc.setState(0x57b2, 0xd880, 0x3710, 0xa588, 0x5784, 0xcf46, 0x1, 0x0);
        gbc.writeMem(0x57b2, { 0x35 });
        gbc.writeMem(0xcf46, { 0x73 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd880, gbc.sp());
        EXPECT(0x57b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xcf46));
        // 35 034E
        gbc.setState(0xd71e, 0x13ba, 0x7d00, 0x70e5, 0x1af2, 0xe589, 0x1, 0x0);
        gbc.writeMem(0xd71e, { 0x35 });
        gbc.writeMem(0xe589, { 0x60 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x13ba, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd71e));
        EXPECT(0x5f, gbc.readMem(0xe589));
        // 35 034F
        gbc.setState(0x926e, 0xcdb2, 0x170, 0xdf60, 0x1048, 0x8367, 0x1, 0x1);
        gbc.writeMem(0x8367, { 0xf0 });
        gbc.writeMem(0x926e, { 0x35 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcdb2, gbc.sp());
        EXPECT(0x926f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8367));
        EXPECT(0x35, gbc.readMem(0x926e));
        // 35 0354
        gbc.setState(0x1f72, 0x36e3, 0x9e90, 0xb657, 0x84b1, 0xc093, 0x1, 0x0);
        gbc.writeMem(0x1f72, { 0x35 });
        gbc.writeMem(0xc093, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x36e3, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc093));
        // 35 0356
        gbc.setState(0xcb04, 0xc702, 0xe640, 0x7ebf, 0xd3fd, 0xcfbd, 0x1, 0x1);
        gbc.writeMem(0xcb04, { 0x35 });
        gbc.writeMem(0xcfbd, { 0xf9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcb04));
        EXPECT(0xf8, gbc.readMem(0xcfbd));
        // 35 0359
        gbc.setState(0xb558, 0x4f2b, 0xedd0, 0x6b44, 0x9383, 0xbd65, 0x0, 0x0);
        gbc.writeMem(0xb558, { 0x35 });
        gbc.writeMem(0xbd65, { 0xfc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0xb559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb558));
        EXPECT(0xfb, gbc.readMem(0xbd65));
        // 35 035A
        gbc.setState(0x94d8, 0x4c25, 0x2e80, 0xc49f, 0x7e36, 0xfe3f, 0x1, 0x1);
        gbc.writeMem(0x94d8, { 0x35 });
        gbc.writeMem(0xfe3f, { 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x94d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x94d8));
        EXPECT(0xa3, gbc.readMem(0xfe3f));
        // 35 035B
        gbc.setState(0x47aa, 0x44c3, 0x6360, 0x328b, 0x811a, 0xe5b5, 0x1, 0x0);
        gbc.writeMem(0x47aa, { 0x35 });
        gbc.writeMem(0xe5b5, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x47ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe5b5));
        // 35 0367
        gbc.setState(0x5a4f, 0x99ce, 0x6cd0, 0x10dc, 0x28f0, 0xc281, 0x0, 0x1);
        gbc.writeMem(0x5a4f, { 0x35 });
        gbc.writeMem(0xc281, { 0xaf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x99ce, gbc.sp());
        EXPECT(0x5a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc281));
        // 35 0369
        gbc.setState(0xaf39, 0xb73d, 0xaf70, 0x7de6, 0xd2be, 0xc8af, 0x1, 0x1);
        gbc.writeMem(0xaf39, { 0x35 });
        gbc.writeMem(0xc8af, { 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb73d, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xaf39));
        EXPECT(0xe9, gbc.readMem(0xc8af));
        // 35 036D
        gbc.setState(0xca35, 0x26c, 0x7bc0, 0xd29, 0x3053, 0xa473, 0x1, 0x0);
        gbc.writeMem(0xa473, { 0x5f });
        gbc.writeMem(0xca35, { 0x35 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0xca36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa473));
        EXPECT(0x35, gbc.readMem(0xca35));
        // 35 036E
        gbc.setState(0x423a, 0x6020, 0xc3e0, 0xabd6, 0xc575, 0x8814, 0x1, 0x0);
        gbc.writeMem(0x423a, { 0x35 });
        gbc.writeMem(0x8814, { 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6020, gbc.sp());
        EXPECT(0x423b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8814));
        // 35 036F
        gbc.setState(0xc1fd, 0xd76b, 0xb450, 0x9722, 0x803f, 0xb301, 0x0, 0x1);
        gbc.writeMem(0xb301, { 0xaa });
        gbc.writeMem(0xc1fd, { 0x35 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb301));
        EXPECT(0x35, gbc.readMem(0xc1fd));
        // 35 0371
        gbc.setState(0xbbeb, 0x8afc, 0xa330, 0xe298, 0xcf3d, 0x8bdc, 0x0, 0x1);
        gbc.writeMem(0x8bdc, { 0x3b });
        gbc.writeMem(0xbbeb, { 0x35 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8afc, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8bdc));
        EXPECT(0x35, gbc.readMem(0xbbeb));
        // 35 0373
        gbc.setState(0xa164, 0x6eff, 0x3290, 0xc129, 0x8ef9, 0xf34e, 0x0, 0x0);
        gbc.writeMem(0xa164, { 0x35 });
        gbc.writeMem(0xf34e, { 0x86 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0xa165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa164));
        EXPECT(0x85, gbc.readMem(0xf34e));
        // 35 0374
        gbc.setState(0x109, 0x855b, 0x5be0, 0xb4ce, 0xe1d0, 0xa3ce, 0x0, 0x1);
        gbc.writeMem(0x109, { 0x35 });
        gbc.writeMem(0xa3ce, { 0x28 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x855b, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa3ce));
        // 35 037A
        gbc.setState(0x5e4a, 0x11, 0xc390, 0xbf6f, 0x64a2, 0xf815, 0x1, 0x1);
        gbc.writeMem(0x5e4a, { 0x35 });
        gbc.writeMem(0xf815, { 0xf4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0x5e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf815));
        // 35 037C
        gbc.setState(0x4ff, 0x6d5e, 0x2390, 0x7459, 0x4e74, 0xacf8, 0x0, 0x1);
        gbc.writeMem(0x4ff, { 0x35 });
        gbc.writeMem(0xacf8, { 0x45 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xacf8));
        // 35 037D
        gbc.setState(0xb090, 0x4b3a, 0x95b0, 0xaa07, 0x7e3a, 0xe108, 0x1, 0x0);
        gbc.writeMem(0xb090, { 0x35 });
        gbc.writeMem(0xe108, { 0xf3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4b3a, gbc.sp());
        EXPECT(0xb091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb090));
        EXPECT(0xf2, gbc.readMem(0xe108));
        // 35 037E
        gbc.setState(0x242e, 0xc211, 0x9750, 0xef78, 0x7610, 0xa615, 0x1, 0x1);
        gbc.writeMem(0x242e, { 0x35 });
        gbc.writeMem(0xa615, { 0x92 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc211, gbc.sp());
        EXPECT(0x242f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa615));
        // 35 037F
        gbc.setState(0xe966, 0x9a8f, 0xbf60, 0xc1d8, 0x1ea, 0x8718, 0x0, 0x0);
        gbc.writeMem(0x8718, { 0x52 });
        gbc.writeMem(0xe966, { 0x35 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9a8f, gbc.sp());
        EXPECT(0xe967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8718));
        EXPECT(0x35, gbc.readMem(0xe966));
        // 35 0381
        gbc.setState(0xc46, 0x8e15, 0x6e40, 0x325c, 0xfe1e, 0xd464, 0x0, 0x1);
        gbc.writeMem(0xc46, { 0x35 });
        gbc.writeMem(0xd464, { 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0xc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xd464));
        // 35 0385
        gbc.setState(0xa809, 0xa593, 0x7af0, 0xbccd, 0x7c20, 0xbc68, 0x0, 0x1);
        gbc.writeMem(0xa809, { 0x35 });
        gbc.writeMem(0xbc68, { 0x90 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0xa80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa809));
        EXPECT(0x8f, gbc.readMem(0xbc68));
        // 35 0388
        gbc.setState(0x2070, 0x361f, 0x7d0, 0x6665, 0xdc92, 0x9c30, 0x0, 0x1);
        gbc.writeMem(0x2070, { 0x35 });
        gbc.writeMem(0x9c30, { 0x77 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0x2071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9c30));
        // 35 0389
        gbc.setState(0xe620, 0xd157, 0xa950, 0x6e24, 0x6c00, 0xec9c, 0x0, 0x0);
        gbc.writeMem(0xe620, { 0x35 });
        gbc.writeMem(0xec9c, { 0x74 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd157, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe620));
        EXPECT(0x73, gbc.readMem(0xec9c));
        // 35 038F
        gbc.setState(0x29c0, 0x9c3c, 0xe10, 0x2b02, 0xf6e9, 0xcc70, 0x0, 0x0);
        gbc.writeMem(0x29c0, { 0x35 });
        gbc.writeMem(0xcc70, { 0x1e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9c3c, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcc70));
        // 35 0392
        gbc.setState(0xb8ec, 0xa2cc, 0xfc70, 0x5aa7, 0x1491, 0xe509, 0x0, 0x0);
        gbc.writeMem(0xb8ec, { 0x35 });
        gbc.writeMem(0xe509, { 0xaf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2cc, gbc.sp());
        EXPECT(0xb8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb8ec));
        EXPECT(0xae, gbc.readMem(0xe509));
        // 35 0394
        gbc.setState(0x74b, 0xbc2c, 0x5b80, 0x6fe8, 0x863, 0xc427, 0x0, 0x0);
        gbc.writeMem(0x74b, { 0x35 });
        gbc.writeMem(0xc427, { 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc427));
        // 35 0395
        gbc.setState(0x1e5b, 0x775e, 0x71d0, 0xc0b7, 0xf54b, 0xb3c9, 0x1, 0x1);
        gbc.writeMem(0x1e5b, { 0x35 });
        gbc.writeMem(0xb3c9, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x775e, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb3c9));
        // 35 0396
        gbc.setState(0xcc4, 0x5cc4, 0x4ec0, 0x2a40, 0xef80, 0xee8e, 0x0, 0x1);
        gbc.writeMem(0xcc4, { 0x35 });
        gbc.writeMem(0xee8e, { 0x90 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0xcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xee8e));
        // 35 0398
        gbc.setState(0x42cd, 0x7f47, 0x3a20, 0xe5c0, 0xcfab, 0x8b44, 0x1, 0x1);
        gbc.writeMem(0x42cd, { 0x35 });
        gbc.writeMem(0x8b44, { 0x8c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7f47, gbc.sp());
        EXPECT(0x42ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8b44));
        // 35 039B
        gbc.setState(0x8786, 0x9c91, 0xf960, 0x89da, 0x5a34, 0x85d8, 0x1, 0x0);
        gbc.writeMem(0x85d8, { 0x2b });
        gbc.writeMem(0x8786, { 0x35 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9c91, gbc.sp());
        EXPECT(0x8787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x85d8));
        EXPECT(0x35, gbc.readMem(0x8786));
        // 35 039C
        gbc.setState(0x6ce9, 0xeea1, 0x2e70, 0x1f90, 0x8ff7, 0x8a22, 0x0, 0x1);
        gbc.writeMem(0x6ce9, { 0x35 });
        gbc.writeMem(0x8a22, { 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x8a22));
        // 35 039D
        gbc.setState(0xa28b, 0xd101, 0x6ae0, 0x1bc5, 0xa934, 0xb83b, 0x1, 0x1);
        gbc.writeMem(0xa28b, { 0x35 });
        gbc.writeMem(0xb83b, { 0xf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0xa28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa28b));
        EXPECT(0xe, gbc.readMem(0xb83b));
        // 35 039E
        gbc.setState(0x29f4, 0xf2d5, 0xe0b0, 0x2818, 0xf0b2, 0x8c5b, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0x35 });
        gbc.writeMem(0x8c5b, { 0x33 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf2d5, gbc.sp());
        EXPECT(0x29f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8c5b));
        // 35 039F
        gbc.setState(0xce8b, 0xb319, 0xd4c0, 0x1510, 0x7eb9, 0xd357, 0x0, 0x1);
        gbc.writeMem(0xce8b, { 0x35 });
        gbc.writeMem(0xd357, { 0x8d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0xce8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xce8b));
        EXPECT(0x8c, gbc.readMem(0xd357));
        // 35 03A0
        gbc.setState(0x538e, 0xe24f, 0x36a0, 0xb927, 0xf5a6, 0xc804, 0x1, 0x0);
        gbc.writeMem(0x538e, { 0x35 });
        gbc.writeMem(0xc804, { 0x56 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc804));
        // 35 03A1
        gbc.setState(0xdf92, 0x4e79, 0xe850, 0x5dbf, 0xe64b, 0x88bc, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0xd7 });
        gbc.writeMem(0xdf92, { 0x35 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x88bc));
        EXPECT(0x35, gbc.readMem(0xdf92));
        // 35 03A2
        gbc.setState(0x5e77, 0x5c6e, 0xb620, 0x2d40, 0x3c68, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x5e77, { 0x35 });
        gbc.writeMem(0x9ba6, { 0xc0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9ba6));
        // 35 03A4
        gbc.setState(0x127b, 0x834f, 0xe6e0, 0x47e3, 0xf733, 0x8fb4, 0x1, 0x0);
        gbc.writeMem(0x127b, { 0x35 });
        gbc.writeMem(0x8fb4, { 0xbb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x834f, gbc.sp());
        EXPECT(0x127c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8fb4));
        // 35 03A5
        gbc.setState(0x51e4, 0x1c45, 0xe3b0, 0x891b, 0x862, 0xed8b, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0x35 });
        gbc.writeMem(0xed8b, { 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xed8b));
        // 35 03A9
        gbc.setState(0x4663, 0xf565, 0x3810, 0x44b8, 0xa416, 0x85c4, 0x0, 0x1);
        gbc.writeMem(0x4663, { 0x35 });
        gbc.writeMem(0x85c4, { 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x85c4));
        // 35 03AA
        gbc.setState(0x724d, 0x9f56, 0x6b30, 0xf18c, 0xb444, 0xa333, 0x1, 0x1);
        gbc.writeMem(0x724d, { 0x35 });
        gbc.writeMem(0xa333, { 0x28 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0x724e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa333));
        // 35 03AC
        gbc.setState(0x1200, 0x15e8, 0x4f0, 0xfdf6, 0x8c53, 0xf69f, 0x1, 0x1);
        gbc.writeMem(0x1200, { 0x35 });
        gbc.writeMem(0xf69f, { 0xdc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x15e8, gbc.sp());
        EXPECT(0x1201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf69f));
        // 35 03AD
        gbc.setState(0x589, 0x5aad, 0x81d0, 0x8f36, 0xb170, 0xe3d3, 0x0, 0x0);
        gbc.writeMem(0x589, { 0x35 });
        gbc.writeMem(0xe3d3, { 0x74 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5aad, gbc.sp());
        EXPECT(0x58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe3d3));
        // 35 03B1
        gbc.setState(0x59d5, 0x2b88, 0x5d20, 0x9324, 0xef81, 0xa201, 0x0, 0x0);
        gbc.writeMem(0x59d5, { 0x35 });
        gbc.writeMem(0xa201, { 0x73 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa201));
        // 35 03B3
        gbc.setState(0xb3ee, 0x4d6d, 0xc9c0, 0xf735, 0x734c, 0xb5d8, 0x0, 0x0);
        gbc.writeMem(0xb3ee, { 0x35 });
        gbc.writeMem(0xb5d8, { 0x91 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0xb3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb3ee));
        EXPECT(0x90, gbc.readMem(0xb5d8));
        // 35 03B4
        gbc.setState(0x3893, 0xa6ef, 0xfc30, 0xeb0a, 0x5c94, 0xb829, 0x0, 0x0);
        gbc.writeMem(0x3893, { 0x35 });
        gbc.writeMem(0xb829, { 0xc1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0x3894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb829));
        // 35 03B6
        gbc.setState(0x463b, 0x580f, 0x8290, 0xe598, 0x1a9f, 0xde98, 0x1, 0x1);
        gbc.writeMem(0x463b, { 0x35 });
        gbc.writeMem(0xde98, { 0x2b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xde98));
        // 35 03B8
        gbc.setState(0x9d8a, 0xd2c, 0x480, 0x522e, 0xa89a, 0xc606, 0x0, 0x1);
        gbc.writeMem(0x9d8a, { 0x35 });
        gbc.writeMem(0xc606, { 0x92 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9d8a));
        EXPECT(0x91, gbc.readMem(0xc606));
        // 35 03B9
        gbc.setState(0x561, 0xaba, 0x9220, 0x6ff1, 0x37ce, 0x9148, 0x1, 0x1);
        gbc.writeMem(0x561, { 0x35 });
        gbc.writeMem(0x9148, { 0x69 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaba, gbc.sp());
        EXPECT(0x562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x9148));
        // 35 03BC
        gbc.setState(0x376e, 0x2b60, 0x5690, 0xa92, 0x805c, 0xdcc0, 0x0, 0x0);
        gbc.writeMem(0x376e, { 0x35 });
        gbc.writeMem(0xdcc0, { 0x22 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2b60, gbc.sp());
        EXPECT(0x376f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdcc0));
        // 35 03C1
        gbc.setState(0xde79, 0xd778, 0x990, 0x9075, 0x8178, 0xb224, 0x1, 0x0);
        gbc.writeMem(0xb224, { 0xeb });
        gbc.writeMem(0xde79, { 0x35 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd778, gbc.sp());
        EXPECT(0xde7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb224));
        EXPECT(0x35, gbc.readMem(0xde79));
        // 35 03C3
        gbc.setState(0x7631, 0xca25, 0xf3a0, 0x88de, 0xeb18, 0xceea, 0x0, 0x0);
        gbc.writeMem(0x7631, { 0x35 });
        gbc.writeMem(0xceea, { 0xcf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xceea));
        // 35 03C6
        gbc.setState(0xd39d, 0x6b06, 0xfad0, 0xe3a8, 0x2233, 0x824e, 0x1, 0x1);
        gbc.writeMem(0x824e, { 0x8 });
        gbc.writeMem(0xd39d, { 0x35 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6b06, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x824e));
        EXPECT(0x35, gbc.readMem(0xd39d));
        // 35 03C8
        gbc.setState(0x2f23, 0x9a9, 0x1c00, 0x77b4, 0xd125, 0xb314, 0x0, 0x1);
        gbc.writeMem(0x2f23, { 0x35 });
        gbc.writeMem(0xb314, { 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9a9, gbc.sp());
        EXPECT(0x2f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb314));
        // 35 03CA
        gbc.setState(0x7392, 0xa072, 0xd210, 0xf582, 0x6b4f, 0x9a9f, 0x1, 0x0);
        gbc.writeMem(0x7392, { 0x35 });
        gbc.writeMem(0x9a9f, { 0x2a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa072, gbc.sp());
        EXPECT(0x7393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9a9f));
        // 35 03CE
        gbc.setState(0x19c3, 0x7e49, 0x12a0, 0xfbe0, 0xce3c, 0xde8b, 0x1, 0x0);
        gbc.writeMem(0x19c3, { 0x35 });
        gbc.writeMem(0xde8b, { 0xc9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7e49, gbc.sp());
        EXPECT(0x19c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xde8b));
        // 35 03CF
        gbc.setState(0xa014, 0x86a4, 0xf6b0, 0x88cc, 0x982c, 0xf319, 0x0, 0x1);
        gbc.writeMem(0xa014, { 0x35 });
        gbc.writeMem(0xf319, { 0x18 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa014));
        EXPECT(0x17, gbc.readMem(0xf319));
        // 35 03D6
        gbc.setState(0xcb39, 0x3180, 0x8ee0, 0x21c5, 0xaf41, 0xcbfc, 0x0, 0x0);
        gbc.writeMem(0xcb39, { 0x35 });
        gbc.writeMem(0xcbfc, { 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3180, gbc.sp());
        EXPECT(0xcb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xcb39));
        EXPECT(0x79, gbc.readMem(0xcbfc));
        // 35 03D9
        gbc.setState(0xcae6, 0x1f5e, 0x7f10, 0x186b, 0xe0fe, 0xc819, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0x4 });
        gbc.writeMem(0xcae6, { 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1f5e, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc819));
        EXPECT(0x35, gbc.readMem(0xcae6));
        // 35 03DB
        gbc.setState(0x6fdf, 0xef0, 0xbea0, 0xef52, 0x18f6, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0x6fdf, { 0x35 });
        gbc.writeMem(0xcf1b, { 0x67 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xef0, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcf1b));
        // 35 03DC
        gbc.setState(0x70e3, 0x1476, 0x6050, 0x7946, 0xc477, 0x8ceb, 0x1, 0x1);
        gbc.writeMem(0x70e3, { 0x35 });
        gbc.writeMem(0x8ceb, { 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8ceb));
        // 35 03E4
        gbc.setState(0xc554, 0x6609, 0x200, 0x53db, 0xd094, 0xf18e, 0x0, 0x0);
        gbc.writeMem(0xc554, { 0x35 });
        gbc.writeMem(0xf18e, { 0x90 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6609, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc554));
        EXPECT(0x8f, gbc.readMem(0xf18e));
        // 35 03E6
        gbc.setState(0x8826, 0x3eff, 0xed40, 0x2f99, 0x6a50, 0xdaa5, 0x0, 0x1);
        gbc.writeMem(0x8826, { 0x35 });
        gbc.writeMem(0xdaa5, { 0xc5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3eff, gbc.sp());
        EXPECT(0x8827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8826));
        EXPECT(0xc4, gbc.readMem(0xdaa5));
    }
