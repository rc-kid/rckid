#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_d5)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_d5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D5 0001
        gbc.setState(0x2eeb, 0xb811, 0x35d0, 0xc246, 0xb87, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0x2eeb, { 0xd5 });
        gbc.writeMem(0xb80f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb80f);
        EXPECT(gbc.pc(), 0x2eec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb80f), 0x87);
        EXPECT(gbc.readMem(0xb810), 0xb);
        // D5 0003
        gbc.setState(0x4675, 0xf768, 0x7250, 0x588d, 0x5aa, 0xf801, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0xd5 });
        gbc.writeMem(0xf766, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf766);
        EXPECT(gbc.pc(), 0x4676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf766), 0xaa);
        EXPECT(gbc.readMem(0xf767), 0x5);
        // D5 0004
        gbc.setState(0xea8b, 0xb7ae, 0x2000, 0x3384, 0x422a, 0x919f, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0x0, 0x0 });
        gbc.writeMem(0xea8b, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb7ac);
        EXPECT(gbc.pc(), 0xea8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0x2a);
        EXPECT(gbc.readMem(0xb7ad), 0x42);
        EXPECT(gbc.readMem(0xea8b), 0xd5);
        // D5 000D
        gbc.setState(0x558c, 0xd085, 0xfc40, 0x13f4, 0x74de, 0xa907, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0xd5 });
        gbc.writeMem(0xd083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0x558d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd083), 0xde);
        EXPECT(gbc.readMem(0xd084), 0x74);
        // D5 0012
        gbc.setState(0x1757, 0x82bf, 0x0, 0x6da7, 0xe799, 0x2a56, 0x1, 0x1);
        gbc.writeMem(0x1757, { 0xd5 });
        gbc.writeMem(0x82bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x82bd);
        EXPECT(gbc.pc(), 0x1758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bd), 0x99);
        EXPECT(gbc.readMem(0x82be), 0xe7);
        // D5 001A
        gbc.setState(0xe575, 0xbe84, 0xed50, 0xf51c, 0xf477, 0x39ac, 0x0, 0x1);
        gbc.writeMem(0xbe82, { 0x0, 0x0 });
        gbc.writeMem(0xe575, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbe82);
        EXPECT(gbc.pc(), 0xe576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe82), 0x77);
        EXPECT(gbc.readMem(0xbe83), 0xf4);
        EXPECT(gbc.readMem(0xe575), 0xd5);
        // D5 001B
        gbc.setState(0xee58, 0xa5ed, 0x7b10, 0xdd23, 0x5521, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0xa5eb, { 0x0, 0x0 });
        gbc.writeMem(0xee58, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa5eb);
        EXPECT(gbc.pc(), 0xee59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5eb), 0x21);
        EXPECT(gbc.readMem(0xa5ec), 0x55);
        EXPECT(gbc.readMem(0xee58), 0xd5);
        // D5 001C
        gbc.setState(0xe7f9, 0x8ab5, 0x2730, 0xb781, 0x1005, 0xb7a7, 0x0, 0x0);
        gbc.writeMem(0x8ab3, { 0x0, 0x0 });
        gbc.writeMem(0xe7f9, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0xe7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab3), 0x5);
        EXPECT(gbc.readMem(0x8ab4), 0x10);
        EXPECT(gbc.readMem(0xe7f9), 0xd5);
        // D5 0020
        gbc.setState(0x42ac, 0xf86f, 0x4a30, 0x6591, 0x2a2b, 0xd24f, 0x1, 0x1);
        gbc.writeMem(0x42ac, { 0xd5 });
        gbc.writeMem(0xf86d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf86d);
        EXPECT(gbc.pc(), 0x42ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf86d), 0x2b);
        EXPECT(gbc.readMem(0xf86e), 0x2a);
        // D5 0023
        gbc.setState(0x7277, 0xb944, 0x17e0, 0xf77f, 0xce34, 0xe774, 0x0, 0x0);
        gbc.writeMem(0x7277, { 0xd5 });
        gbc.writeMem(0xb942, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb942);
        EXPECT(gbc.pc(), 0x7278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb942), 0x34);
        EXPECT(gbc.readMem(0xb943), 0xce);
        // D5 0024
        gbc.setState(0xb18a, 0x9b26, 0xa610, 0x10eb, 0x7246, 0xc391, 0x1, 0x0);
        gbc.writeMem(0x9b24, { 0x0, 0x0 });
        gbc.writeMem(0xb18a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9b24);
        EXPECT(gbc.pc(), 0xb18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b24), 0x46);
        EXPECT(gbc.readMem(0x9b25), 0x72);
        EXPECT(gbc.readMem(0xb18a), 0xd5);
        // D5 0029
        gbc.setState(0x362f, 0xcbbc, 0x7cf0, 0x31a, 0xccc, 0x9a94, 0x0, 0x0);
        gbc.writeMem(0x362f, { 0xd5 });
        gbc.writeMem(0xcbba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcbba);
        EXPECT(gbc.pc(), 0x3630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbba), 0xcc);
        EXPECT(gbc.readMem(0xcbbb), 0xc);
        // D5 002B
        gbc.setState(0x3b21, 0xbf6b, 0x4330, 0x8258, 0xf25, 0xf1ce, 0x0, 0x1);
        gbc.writeMem(0x3b21, { 0xd5 });
        gbc.writeMem(0xbf69, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbf69);
        EXPECT(gbc.pc(), 0x3b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf69), 0x25);
        EXPECT(gbc.readMem(0xbf6a), 0xf);
        // D5 002D
        gbc.setState(0x205e, 0xc280, 0xaa70, 0x698a, 0x7b95, 0xe4ec, 0x1, 0x1);
        gbc.writeMem(0x205e, { 0xd5 });
        gbc.writeMem(0xc27e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc27e);
        EXPECT(gbc.pc(), 0x205f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27e), 0x95);
        EXPECT(gbc.readMem(0xc27f), 0x7b);
        // D5 002E
        gbc.setState(0xeb98, 0x932e, 0x1710, 0xccf6, 0x9b2b, 0x73ca, 0x1, 0x1);
        gbc.writeMem(0x932c, { 0x0, 0x0 });
        gbc.writeMem(0xeb98, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x932c);
        EXPECT(gbc.pc(), 0xeb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932c), 0x2b);
        EXPECT(gbc.readMem(0x932d), 0x9b);
        EXPECT(gbc.readMem(0xeb98), 0xd5);
        // D5 0035
        gbc.setState(0xe5ba, 0x8ef3, 0xd9f0, 0xaf1, 0xd906, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0x0, 0x0 });
        gbc.writeMem(0xe5ba, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8ef1);
        EXPECT(gbc.pc(), 0xe5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef1), 0x6);
        EXPECT(gbc.readMem(0x8ef2), 0xd9);
        EXPECT(gbc.readMem(0xe5ba), 0xd5);
        // D5 0036
        gbc.setState(0xd3df, 0xc351, 0x1f80, 0x9f85, 0xc2a5, 0xc0c6, 0x1, 0x1);
        gbc.writeMem(0xc34f, { 0x0, 0x0 });
        gbc.writeMem(0xd3df, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc34f);
        EXPECT(gbc.pc(), 0xd3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34f), 0xa5);
        EXPECT(gbc.readMem(0xc350), 0xc2);
        EXPECT(gbc.readMem(0xd3df), 0xd5);
        // D5 0038
        gbc.setState(0xa7d6, 0xcd15, 0xaa80, 0xc5f1, 0x8b91, 0x690, 0x1, 0x1);
        gbc.writeMem(0xa7d6, { 0xd5 });
        gbc.writeMem(0xcd13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcd13);
        EXPECT(gbc.pc(), 0xa7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d6), 0xd5);
        EXPECT(gbc.readMem(0xcd13), 0x91);
        EXPECT(gbc.readMem(0xcd14), 0x8b);
        // D5 003C
        gbc.setState(0x6c53, 0xe379, 0x2090, 0x44fb, 0x4f0, 0x5948, 0x1, 0x1);
        gbc.writeMem(0x6c53, { 0xd5 });
        gbc.writeMem(0xe377, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe377);
        EXPECT(gbc.pc(), 0x6c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe377), 0xf0);
        EXPECT(gbc.readMem(0xe378), 0x4);
        // D5 003E
        gbc.setState(0x829e, 0xbff1, 0xe780, 0x5b51, 0x1c86, 0xa2d0, 0x0, 0x1);
        gbc.writeMem(0x829e, { 0xd5 });
        gbc.writeMem(0xbfef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbfef);
        EXPECT(gbc.pc(), 0x829f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829e), 0xd5);
        EXPECT(gbc.readMem(0xbfef), 0x86);
        EXPECT(gbc.readMem(0xbff0), 0x1c);
        // D5 0042
        gbc.setState(0xb2a0, 0x8231, 0xcad0, 0xb379, 0xdc52, 0xf9f, 0x1, 0x1);
        gbc.writeMem(0x822f, { 0x0, 0x0 });
        gbc.writeMem(0xb2a0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x822f);
        EXPECT(gbc.pc(), 0xb2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822f), 0x52);
        EXPECT(gbc.readMem(0x8230), 0xdc);
        EXPECT(gbc.readMem(0xb2a0), 0xd5);
        // D5 0044
        gbc.setState(0x411b, 0xdb0e, 0x31e0, 0x4967, 0xf0f5, 0x3a7e, 0x0, 0x0);
        gbc.writeMem(0x411b, { 0xd5 });
        gbc.writeMem(0xdb0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdb0c);
        EXPECT(gbc.pc(), 0x411c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0c), 0xf5);
        EXPECT(gbc.readMem(0xdb0d), 0xf0);
        // D5 0046
        gbc.setState(0x9da0, 0xedd6, 0x7350, 0x6222, 0x46c2, 0x3c17, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xd5 });
        gbc.writeMem(0xedd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xedd4);
        EXPECT(gbc.pc(), 0x9da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da0), 0xd5);
        EXPECT(gbc.readMem(0xedd4), 0xc2);
        EXPECT(gbc.readMem(0xedd5), 0x46);
        // D5 004A
        gbc.setState(0xeba9, 0xf174, 0xfe50, 0xaf48, 0xe7ad, 0xd7e4, 0x0, 0x1);
        gbc.writeMem(0xeba9, { 0xd5 });
        gbc.writeMem(0xf172, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf172);
        EXPECT(gbc.pc(), 0xebaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba9), 0xd5);
        EXPECT(gbc.readMem(0xf172), 0xad);
        EXPECT(gbc.readMem(0xf173), 0xe7);
        // D5 004B
        gbc.setState(0xf56, 0xb649, 0xf020, 0xaa02, 0x95a6, 0x6253, 0x1, 0x0);
        gbc.writeMem(0xf56, { 0xd5 });
        gbc.writeMem(0xb647, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb647);
        EXPECT(gbc.pc(), 0xf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb647), 0xa6);
        EXPECT(gbc.readMem(0xb648), 0x95);
        // D5 004D
        gbc.setState(0x332, 0x8eac, 0x7d40, 0x7a34, 0x63e1, 0xf54b, 0x1, 0x0);
        gbc.writeMem(0x332, { 0xd5 });
        gbc.writeMem(0x8eaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8eaa);
        EXPECT(gbc.pc(), 0x333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eaa), 0xe1);
        EXPECT(gbc.readMem(0x8eab), 0x63);
        // D5 004E
        gbc.setState(0x4dcc, 0xc944, 0xdbe0, 0xb86c, 0x1c6c, 0xe807, 0x0, 0x1);
        gbc.writeMem(0x4dcc, { 0xd5 });
        gbc.writeMem(0xc942, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc942);
        EXPECT(gbc.pc(), 0x4dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc942), 0x6c);
        EXPECT(gbc.readMem(0xc943), 0x1c);
        // D5 0053
        gbc.setState(0x507d, 0xad69, 0x23c0, 0x2b5b, 0xa5ef, 0xbf61, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0xd5 });
        gbc.writeMem(0xad67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xad67);
        EXPECT(gbc.pc(), 0x507e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad67), 0xef);
        EXPECT(gbc.readMem(0xad68), 0xa5);
        // D5 0054
        gbc.setState(0x53c, 0xa550, 0x3b80, 0xa91d, 0x3aec, 0x899c, 0x1, 0x0);
        gbc.writeMem(0x53c, { 0xd5 });
        gbc.writeMem(0xa54e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa54e);
        EXPECT(gbc.pc(), 0x53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54e), 0xec);
        EXPECT(gbc.readMem(0xa54f), 0x3a);
        // D5 0055
        gbc.setState(0x6be2, 0xd86e, 0xf290, 0x51e8, 0x12d8, 0x14ea, 0x0, 0x0);
        gbc.writeMem(0x6be2, { 0xd5 });
        gbc.writeMem(0xd86c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x6be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86c), 0xd8);
        EXPECT(gbc.readMem(0xd86d), 0x12);
        // D5 0056
        gbc.setState(0x2f7d, 0xe79a, 0xe060, 0xdedf, 0xc1ad, 0xd672, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0xd5 });
        gbc.writeMem(0xe798, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe798);
        EXPECT(gbc.pc(), 0x2f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe798), 0xad);
        EXPECT(gbc.readMem(0xe799), 0xc1);
        // D5 005B
        gbc.setState(0x6dba, 0xf860, 0x6430, 0x74d3, 0x2740, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0x6dba, { 0xd5 });
        gbc.writeMem(0xf85e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf85e);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf85e), 0x40);
        EXPECT(gbc.readMem(0xf85f), 0x27);
        // D5 005C
        gbc.setState(0xabee, 0x8f8e, 0x6440, 0xc6e7, 0xb9c9, 0xa009, 0x1, 0x1);
        gbc.writeMem(0x8f8c, { 0x0, 0x0 });
        gbc.writeMem(0xabee, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8c), 0xc9);
        EXPECT(gbc.readMem(0x8f8d), 0xb9);
        EXPECT(gbc.readMem(0xabee), 0xd5);
        // D5 005D
        gbc.setState(0xbc33, 0xac72, 0x1fb0, 0xa7ca, 0x9cca, 0xbae0, 0x1, 0x0);
        gbc.writeMem(0xac70, { 0x0, 0x0 });
        gbc.writeMem(0xbc33, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xac70);
        EXPECT(gbc.pc(), 0xbc34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac70), 0xca);
        EXPECT(gbc.readMem(0xac71), 0x9c);
        EXPECT(gbc.readMem(0xbc33), 0xd5);
        // D5 0060
        gbc.setState(0x4060, 0xca2e, 0xe960, 0x8388, 0x72cb, 0xf084, 0x1, 0x1);
        gbc.writeMem(0x4060, { 0xd5 });
        gbc.writeMem(0xca2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xca2c);
        EXPECT(gbc.pc(), 0x4061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2c), 0xcb);
        EXPECT(gbc.readMem(0xca2d), 0x72);
        // D5 0061
        gbc.setState(0x2945, 0xf569, 0xae0, 0xa008, 0x9a46, 0xda3e, 0x1, 0x1);
        gbc.writeMem(0x2945, { 0xd5 });
        gbc.writeMem(0xf567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf567);
        EXPECT(gbc.pc(), 0x2946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf567), 0x46);
        EXPECT(gbc.readMem(0xf568), 0x9a);
        // D5 0063
        gbc.setState(0x4b33, 0xddda, 0xaa30, 0x9d8d, 0x5c4e, 0xc535, 0x0, 0x1);
        gbc.writeMem(0x4b33, { 0xd5 });
        gbc.writeMem(0xddd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xddd8);
        EXPECT(gbc.pc(), 0x4b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd8), 0x4e);
        EXPECT(gbc.readMem(0xddd9), 0x5c);
        // D5 0065
        gbc.setState(0x11b6, 0xb8a6, 0xb5a0, 0xc203, 0xa537, 0x9c40, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xd5 });
        gbc.writeMem(0xb8a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a4), 0x37);
        EXPECT(gbc.readMem(0xb8a5), 0xa5);
        // D5 0069
        gbc.setState(0xac29, 0xadc3, 0xa700, 0x207a, 0x621f, 0xc513, 0x0, 0x1);
        gbc.writeMem(0xac29, { 0xd5 });
        gbc.writeMem(0xadc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xadc1);
        EXPECT(gbc.pc(), 0xac2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac29), 0xd5);
        EXPECT(gbc.readMem(0xadc1), 0x1f);
        EXPECT(gbc.readMem(0xadc2), 0x62);
        // D5 006E
        gbc.setState(0x5e0, 0xc4af, 0x1d80, 0x4962, 0xb8df, 0xfd7, 0x0, 0x1);
        gbc.writeMem(0x5e0, { 0xd5 });
        gbc.writeMem(0xc4ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc4ad);
        EXPECT(gbc.pc(), 0x5e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ad), 0xdf);
        EXPECT(gbc.readMem(0xc4ae), 0xb8);
        // D5 0070
        gbc.setState(0x1c91, 0xbec4, 0x9f40, 0x7b83, 0xa06b, 0x313, 0x1, 0x0);
        gbc.writeMem(0x1c91, { 0xd5 });
        gbc.writeMem(0xbec2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbec2);
        EXPECT(gbc.pc(), 0x1c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec2), 0x6b);
        EXPECT(gbc.readMem(0xbec3), 0xa0);
        // D5 0074
        gbc.setState(0xa352, 0x9c74, 0xa6a0, 0x9dc6, 0xc115, 0xced, 0x0, 0x1);
        gbc.writeMem(0x9c72, { 0x0, 0x0 });
        gbc.writeMem(0xa352, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9c72);
        EXPECT(gbc.pc(), 0xa353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c72), 0x15);
        EXPECT(gbc.readMem(0x9c73), 0xc1);
        EXPECT(gbc.readMem(0xa352), 0xd5);
        // D5 0076
        gbc.setState(0xd32f, 0xe049, 0xfca0, 0xf713, 0x786c, 0x62c1, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xd5 });
        gbc.writeMem(0xe047, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe047);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32f), 0xd5);
        EXPECT(gbc.readMem(0xe047), 0x6c);
        EXPECT(gbc.readMem(0xe048), 0x78);
        // D5 0078
        gbc.setState(0xac5, 0xd6b8, 0xdb60, 0x287b, 0xd1bf, 0x1c73, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xd5 });
        gbc.writeMem(0xd6b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd6b6);
        EXPECT(gbc.pc(), 0xac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b6), 0xbf);
        EXPECT(gbc.readMem(0xd6b7), 0xd1);
        // D5 007B
        gbc.setState(0xe26c, 0xfa9b, 0xc430, 0xe827, 0x93d1, 0xc744, 0x0, 0x1);
        gbc.writeMem(0xe26c, { 0xd5 });
        gbc.writeMem(0xfa99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfa99);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26c), 0xd5);
        EXPECT(gbc.readMem(0xfa99), 0xd1);
        EXPECT(gbc.readMem(0xfa9a), 0x93);
        // D5 007C
        gbc.setState(0xb13a, 0xce7e, 0x2c80, 0x47e5, 0xb0a3, 0xfb9b, 0x0, 0x0);
        gbc.writeMem(0xb13a, { 0xd5 });
        gbc.writeMem(0xce7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xce7c);
        EXPECT(gbc.pc(), 0xb13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13a), 0xd5);
        EXPECT(gbc.readMem(0xce7c), 0xa3);
        EXPECT(gbc.readMem(0xce7d), 0xb0);
        // D5 007D
        gbc.setState(0x8ebb, 0xd73f, 0x1ce0, 0xcd39, 0xed4, 0x28bd, 0x1, 0x1);
        gbc.writeMem(0x8ebb, { 0xd5 });
        gbc.writeMem(0xd73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd73d);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebb), 0xd5);
        EXPECT(gbc.readMem(0xd73d), 0xd4);
        EXPECT(gbc.readMem(0xd73e), 0xe);
        // D5 0080
        gbc.setState(0xd9ea, 0xcdc0, 0xac60, 0x2343, 0xf84f, 0x8fca, 0x0, 0x1);
        gbc.writeMem(0xcdbe, { 0x0, 0x0 });
        gbc.writeMem(0xd9ea, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcdbe);
        EXPECT(gbc.pc(), 0xd9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdbe), 0x4f);
        EXPECT(gbc.readMem(0xcdbf), 0xf8);
        EXPECT(gbc.readMem(0xd9ea), 0xd5);
        // D5 0081
        gbc.setState(0xcf72, 0x94b3, 0xb470, 0xfc13, 0x1f6f, 0x84e5, 0x1, 0x1);
        gbc.writeMem(0x94b1, { 0x0, 0x0 });
        gbc.writeMem(0xcf72, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x94b1);
        EXPECT(gbc.pc(), 0xcf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b1), 0x6f);
        EXPECT(gbc.readMem(0x94b2), 0x1f);
        EXPECT(gbc.readMem(0xcf72), 0xd5);
        // D5 0082
        gbc.setState(0x21f8, 0xc46b, 0x9640, 0x3236, 0x8da5, 0x99aa, 0x0, 0x0);
        gbc.writeMem(0x21f8, { 0xd5 });
        gbc.writeMem(0xc469, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc469);
        EXPECT(gbc.pc(), 0x21f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc469), 0xa5);
        EXPECT(gbc.readMem(0xc46a), 0x8d);
        // D5 0083
        gbc.setState(0x7846, 0xd20e, 0xf310, 0x64fa, 0x7f06, 0x883b, 0x0, 0x1);
        gbc.writeMem(0x7846, { 0xd5 });
        gbc.writeMem(0xd20c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd20c);
        EXPECT(gbc.pc(), 0x7847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20c), 0x6);
        EXPECT(gbc.readMem(0xd20d), 0x7f);
        // D5 0084
        gbc.setState(0xc10f, 0x9cef, 0x30f0, 0x2566, 0x6a2d, 0x34d9, 0x0, 0x0);
        gbc.writeMem(0x9ced, { 0x0, 0x0 });
        gbc.writeMem(0xc10f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9ced);
        EXPECT(gbc.pc(), 0xc110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ced), 0x2d);
        EXPECT(gbc.readMem(0x9cee), 0x6a);
        EXPECT(gbc.readMem(0xc10f), 0xd5);
        // D5 0086
        gbc.setState(0x22f3, 0xe2be, 0x9e30, 0xd5f4, 0x9147, 0x3f2d, 0x0, 0x0);
        gbc.writeMem(0x22f3, { 0xd5 });
        gbc.writeMem(0xe2bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe2bc);
        EXPECT(gbc.pc(), 0x22f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bc), 0x47);
        EXPECT(gbc.readMem(0xe2bd), 0x91);
        // D5 0087
        gbc.setState(0x460e, 0xbfd4, 0x5460, 0x5943, 0xc7aa, 0xaef6, 0x0, 0x1);
        gbc.writeMem(0x460e, { 0xd5 });
        gbc.writeMem(0xbfd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbfd2);
        EXPECT(gbc.pc(), 0x460f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd2), 0xaa);
        EXPECT(gbc.readMem(0xbfd3), 0xc7);
        // D5 0088
        gbc.setState(0xcf93, 0xe4aa, 0xfee0, 0xe063, 0x3255, 0x6f0a, 0x0, 0x0);
        gbc.writeMem(0xcf93, { 0xd5 });
        gbc.writeMem(0xe4a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe4a8);
        EXPECT(gbc.pc(), 0xcf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf93), 0xd5);
        EXPECT(gbc.readMem(0xe4a8), 0x55);
        EXPECT(gbc.readMem(0xe4a9), 0x32);
        // D5 0089
        gbc.setState(0x2457, 0xe8b3, 0xd3a0, 0x4ed3, 0xc86b, 0x8881, 0x1, 0x0);
        gbc.writeMem(0x2457, { 0xd5 });
        gbc.writeMem(0xe8b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe8b1);
        EXPECT(gbc.pc(), 0x2458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b1), 0x6b);
        EXPECT(gbc.readMem(0xe8b2), 0xc8);
        // D5 008B
        gbc.setState(0xb9e4, 0x97b7, 0x4f40, 0x1194, 0x2a03, 0x5174, 0x1, 0x1);
        gbc.writeMem(0x97b5, { 0x0, 0x0 });
        gbc.writeMem(0xb9e4, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0xb9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b5), 0x3);
        EXPECT(gbc.readMem(0x97b6), 0x2a);
        EXPECT(gbc.readMem(0xb9e4), 0xd5);
        // D5 008C
        gbc.setState(0x7c0e, 0x9d02, 0xd4f0, 0x840c, 0x4c8a, 0x6f8c, 0x0, 0x0);
        gbc.writeMem(0x7c0e, { 0xd5 });
        gbc.writeMem(0x9d00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9d00);
        EXPECT(gbc.pc(), 0x7c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d00), 0x8a);
        EXPECT(gbc.readMem(0x9d01), 0x4c);
        // D5 008D
        gbc.setState(0x4e0a, 0x8a76, 0x3710, 0xd579, 0x6534, 0x35c, 0x1, 0x1);
        gbc.writeMem(0x4e0a, { 0xd5 });
        gbc.writeMem(0x8a74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x4e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a74), 0x34);
        EXPECT(gbc.readMem(0x8a75), 0x65);
        // D5 0091
        gbc.setState(0xe616, 0xb750, 0x13a0, 0x6454, 0x3f08, 0xe5af, 0x1, 0x1);
        gbc.writeMem(0xb74e, { 0x0, 0x0 });
        gbc.writeMem(0xe616, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb74e);
        EXPECT(gbc.pc(), 0xe617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74e), 0x8);
        EXPECT(gbc.readMem(0xb74f), 0x3f);
        EXPECT(gbc.readMem(0xe616), 0xd5);
        // D5 0093
        gbc.setState(0xe1e7, 0xd93b, 0xa400, 0xfbe0, 0x3f5e, 0x5ad6, 0x1, 0x1);
        gbc.writeMem(0xd939, { 0x0, 0x0 });
        gbc.writeMem(0xe1e7, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd939);
        EXPECT(gbc.pc(), 0xe1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd939), 0x5e);
        EXPECT(gbc.readMem(0xd93a), 0x3f);
        EXPECT(gbc.readMem(0xe1e7), 0xd5);
        // D5 0094
        gbc.setState(0x9095, 0xbcac, 0x4fb0, 0xa14d, 0x1a54, 0xd228, 0x0, 0x1);
        gbc.writeMem(0x9095, { 0xd5 });
        gbc.writeMem(0xbcaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbcaa);
        EXPECT(gbc.pc(), 0x9096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9095), 0xd5);
        EXPECT(gbc.readMem(0xbcaa), 0x54);
        EXPECT(gbc.readMem(0xbcab), 0x1a);
        // D5 0097
        gbc.setState(0xcc17, 0xab15, 0x5700, 0x62c5, 0x3ad9, 0x879a, 0x1, 0x0);
        gbc.writeMem(0xab13, { 0x0, 0x0 });
        gbc.writeMem(0xcc17, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xab13);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab13), 0xd9);
        EXPECT(gbc.readMem(0xab14), 0x3a);
        EXPECT(gbc.readMem(0xcc17), 0xd5);
        // D5 0099
        gbc.setState(0x5147, 0xf94a, 0x38b0, 0xb637, 0x1620, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x5147, { 0xd5 });
        gbc.writeMem(0xf948, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf948);
        EXPECT(gbc.pc(), 0x5148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf948), 0x20);
        EXPECT(gbc.readMem(0xf949), 0x16);
        // D5 009B
        gbc.setState(0xce1f, 0xe183, 0x9c70, 0xdbbc, 0x3412, 0xdacc, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xd5 });
        gbc.writeMem(0xe181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe181);
        EXPECT(gbc.pc(), 0xce20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1f), 0xd5);
        EXPECT(gbc.readMem(0xe181), 0x12);
        EXPECT(gbc.readMem(0xe182), 0x34);
        // D5 009E
        gbc.setState(0x3bd9, 0xfeaf, 0xbe40, 0x8ead, 0x5dfe, 0x8905, 0x0, 0x1);
        gbc.writeMem(0x3bd9, { 0xd5 });
        gbc.writeMem(0xfead, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfead);
        EXPECT(gbc.pc(), 0x3bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfead), 0xfe);
        EXPECT(gbc.readMem(0xfeae), 0x5d);
        // D5 00A2
        gbc.setState(0xe167, 0xaf5b, 0x4e70, 0x18fd, 0xd1a0, 0x69e2, 0x0, 0x1);
        gbc.writeMem(0xaf59, { 0x0, 0x0 });
        gbc.writeMem(0xe167, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaf59);
        EXPECT(gbc.pc(), 0xe168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf59), 0xa0);
        EXPECT(gbc.readMem(0xaf5a), 0xd1);
        EXPECT(gbc.readMem(0xe167), 0xd5);
        // D5 00A3
        gbc.setState(0x50bb, 0x9845, 0x4c70, 0x638b, 0xc746, 0x4fa7, 0x1, 0x0);
        gbc.writeMem(0x50bb, { 0xd5 });
        gbc.writeMem(0x9843, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9843);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9843), 0x46);
        EXPECT(gbc.readMem(0x9844), 0xc7);
        // D5 00A5
        gbc.setState(0x7260, 0x83d7, 0x9970, 0x8749, 0x80fe, 0xb33, 0x1, 0x0);
        gbc.writeMem(0x7260, { 0xd5 });
        gbc.writeMem(0x83d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0x7261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d5), 0xfe);
        EXPECT(gbc.readMem(0x83d6), 0x80);
        // D5 00A7
        gbc.setState(0x9f9f, 0x90ad, 0xbd20, 0xf372, 0x8cd8, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x90ab, { 0x0, 0x0 });
        gbc.writeMem(0x9f9f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x90ab);
        EXPECT(gbc.pc(), 0x9fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ab), 0xd8);
        EXPECT(gbc.readMem(0x90ac), 0x8c);
        EXPECT(gbc.readMem(0x9f9f), 0xd5);
        // D5 00A8
        gbc.setState(0xc242, 0xbb4e, 0xbf90, 0x6ee6, 0x4908, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xbb4c, { 0x0, 0x0 });
        gbc.writeMem(0xc242, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbb4c);
        EXPECT(gbc.pc(), 0xc243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4c), 0x8);
        EXPECT(gbc.readMem(0xbb4d), 0x49);
        EXPECT(gbc.readMem(0xc242), 0xd5);
        // D5 00A9
        gbc.setState(0x30da, 0xe1cc, 0x21e0, 0xe94b, 0xb057, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0x30da, { 0xd5 });
        gbc.writeMem(0xe1ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe1ca);
        EXPECT(gbc.pc(), 0x30db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ca), 0x57);
        EXPECT(gbc.readMem(0xe1cb), 0xb0);
        // D5 00AA
        gbc.setState(0xaafc, 0xbc67, 0xbd0, 0xb609, 0x55be, 0x8e13, 0x0, 0x0);
        gbc.writeMem(0xaafc, { 0xd5 });
        gbc.writeMem(0xbc65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbc65);
        EXPECT(gbc.pc(), 0xaafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafc), 0xd5);
        EXPECT(gbc.readMem(0xbc65), 0xbe);
        EXPECT(gbc.readMem(0xbc66), 0x55);
        // D5 00AB
        gbc.setState(0x875, 0xcfe1, 0xb960, 0x3ca3, 0x9c0e, 0xb2d6, 0x0, 0x1);
        gbc.writeMem(0x875, { 0xd5 });
        gbc.writeMem(0xcfdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcfdf);
        EXPECT(gbc.pc(), 0x876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdf), 0xe);
        EXPECT(gbc.readMem(0xcfe0), 0x9c);
        // D5 00AE
        gbc.setState(0x83f1, 0xce77, 0x4560, 0x954c, 0xf9b9, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x83f1, { 0xd5 });
        gbc.writeMem(0xce75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xce75);
        EXPECT(gbc.pc(), 0x83f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f1), 0xd5);
        EXPECT(gbc.readMem(0xce75), 0xb9);
        EXPECT(gbc.readMem(0xce76), 0xf9);
        // D5 00AF
        gbc.setState(0x5c08, 0xe028, 0x5920, 0x27ee, 0x6cf4, 0xb47d, 0x1, 0x0);
        gbc.writeMem(0x5c08, { 0xd5 });
        gbc.writeMem(0xe026, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe026);
        EXPECT(gbc.pc(), 0x5c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe026), 0xf4);
        EXPECT(gbc.readMem(0xe027), 0x6c);
        // D5 00B1
        gbc.setState(0x5e07, 0x9c3a, 0x6b20, 0x27c0, 0x963a, 0xc839, 0x1, 0x0);
        gbc.writeMem(0x5e07, { 0xd5 });
        gbc.writeMem(0x9c38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9c38);
        EXPECT(gbc.pc(), 0x5e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c38), 0x3a);
        EXPECT(gbc.readMem(0x9c39), 0x96);
        // D5 00B6
        gbc.setState(0xdd8, 0xa7a5, 0xd0e0, 0xef9f, 0x52a9, 0xc5bc, 0x1, 0x1);
        gbc.writeMem(0xdd8, { 0xd5 });
        gbc.writeMem(0xa7a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa7a3);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a3), 0xa9);
        EXPECT(gbc.readMem(0xa7a4), 0x52);
        // D5 00B9
        gbc.setState(0xdf7d, 0xc705, 0x6e20, 0x53e8, 0x3387, 0xd223, 0x1, 0x1);
        gbc.writeMem(0xc703, { 0x0, 0x0 });
        gbc.writeMem(0xdf7d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc703);
        EXPECT(gbc.pc(), 0xdf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc703), 0x87);
        EXPECT(gbc.readMem(0xc704), 0x33);
        EXPECT(gbc.readMem(0xdf7d), 0xd5);
        // D5 00BA
        gbc.setState(0xe7d1, 0xd83b, 0xfa40, 0x8203, 0x3e9b, 0x1f1c, 0x0, 0x0);
        gbc.writeMem(0xd839, { 0x0, 0x0 });
        gbc.writeMem(0xe7d1, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd839);
        EXPECT(gbc.pc(), 0xe7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd839), 0x9b);
        EXPECT(gbc.readMem(0xd83a), 0x3e);
        EXPECT(gbc.readMem(0xe7d1), 0xd5);
        // D5 00C0
        gbc.setState(0xe7aa, 0x9d82, 0xd010, 0x128e, 0x83ee, 0x434a, 0x0, 0x1);
        gbc.writeMem(0x9d80, { 0x0, 0x0 });
        gbc.writeMem(0xe7aa, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9d80);
        EXPECT(gbc.pc(), 0xe7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d80), 0xee);
        EXPECT(gbc.readMem(0x9d81), 0x83);
        EXPECT(gbc.readMem(0xe7aa), 0xd5);
        // D5 00C1
        gbc.setState(0xb58a, 0xd7cf, 0x30, 0x8402, 0x5326, 0x3503, 0x1, 0x0);
        gbc.writeMem(0xb58a, { 0xd5 });
        gbc.writeMem(0xd7cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd7cd);
        EXPECT(gbc.pc(), 0xb58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58a), 0xd5);
        EXPECT(gbc.readMem(0xd7cd), 0x26);
        EXPECT(gbc.readMem(0xd7ce), 0x53);
        // D5 00C2
        gbc.setState(0x86dd, 0x8b45, 0x2fe0, 0x71d8, 0x8a59, 0x5e8d, 0x0, 0x0);
        gbc.writeMem(0x86dd, { 0xd5 });
        gbc.writeMem(0x8b43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8b43);
        EXPECT(gbc.pc(), 0x86de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86dd), 0xd5);
        EXPECT(gbc.readMem(0x8b43), 0x59);
        EXPECT(gbc.readMem(0x8b44), 0x8a);
        // D5 00C3
        gbc.setState(0xd04a, 0xab5b, 0x2a40, 0x74b3, 0x7af6, 0xd63, 0x0, 0x0);
        gbc.writeMem(0xab59, { 0x0, 0x0 });
        gbc.writeMem(0xd04a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xab59);
        EXPECT(gbc.pc(), 0xd04b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab59), 0xf6);
        EXPECT(gbc.readMem(0xab5a), 0x7a);
        EXPECT(gbc.readMem(0xd04a), 0xd5);
        // D5 00C9
        gbc.setState(0xe15e, 0x877f, 0x53e0, 0x45b8, 0x874c, 0x91ba, 0x0, 0x1);
        gbc.writeMem(0x877d, { 0x0, 0x0 });
        gbc.writeMem(0xe15e, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x877d);
        EXPECT(gbc.pc(), 0xe15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877d), 0x4c);
        EXPECT(gbc.readMem(0x877e), 0x87);
        EXPECT(gbc.readMem(0xe15e), 0xd5);
        // D5 00CC
        gbc.setState(0x1f6, 0xf5ef, 0x21e0, 0xe42c, 0x8dbc, 0x5204, 0x0, 0x0);
        gbc.writeMem(0x1f6, { 0xd5 });
        gbc.writeMem(0xf5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0x1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5ed), 0xbc);
        EXPECT(gbc.readMem(0xf5ee), 0x8d);
        // D5 00CE
        gbc.setState(0xd0d7, 0xabc4, 0xfd50, 0x946d, 0x1249, 0xf630, 0x0, 0x0);
        gbc.writeMem(0xabc2, { 0x0, 0x0 });
        gbc.writeMem(0xd0d7, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xabc2);
        EXPECT(gbc.pc(), 0xd0d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc2), 0x49);
        EXPECT(gbc.readMem(0xabc3), 0x12);
        EXPECT(gbc.readMem(0xd0d7), 0xd5);
        // D5 00D2
        gbc.setState(0x35fb, 0xd997, 0xef60, 0x25a7, 0xfe31, 0x31a0, 0x1, 0x1);
        gbc.writeMem(0x35fb, { 0xd5 });
        gbc.writeMem(0xd995, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd995);
        EXPECT(gbc.pc(), 0x35fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd995), 0x31);
        EXPECT(gbc.readMem(0xd996), 0xfe);
        // D5 00D5
        gbc.setState(0xd022, 0xc24f, 0x7190, 0xec69, 0xbd06, 0x1235, 0x0, 0x1);
        gbc.writeMem(0xc24d, { 0x0, 0x0 });
        gbc.writeMem(0xd022, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc24d);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24d), 0x6);
        EXPECT(gbc.readMem(0xc24e), 0xbd);
        EXPECT(gbc.readMem(0xd022), 0xd5);
        // D5 00D7
        gbc.setState(0x4ee0, 0xf737, 0xe10, 0x479e, 0x83a8, 0x2a5b, 0x1, 0x0);
        gbc.writeMem(0x4ee0, { 0xd5 });
        gbc.writeMem(0xf735, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf735);
        EXPECT(gbc.pc(), 0x4ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf735), 0xa8);
        EXPECT(gbc.readMem(0xf736), 0x83);
        // D5 00D8
        gbc.setState(0x4c44, 0xcadf, 0x170, 0xaf86, 0x864, 0xe08f, 0x0, 0x1);
        gbc.writeMem(0x4c44, { 0xd5 });
        gbc.writeMem(0xcadd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcadd);
        EXPECT(gbc.pc(), 0x4c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadd), 0x64);
        EXPECT(gbc.readMem(0xcade), 0x8);
        // D5 00D9
        gbc.setState(0xa5de, 0xff59, 0xb3b0, 0xa182, 0xda73, 0xf145, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0xd5 });
        gbc.writeMem(0xff57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xff57);
        EXPECT(gbc.pc(), 0xa5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5de), 0xd5);
        EXPECT(gbc.readMem(0xff57), 0x73);
        EXPECT(gbc.readMem(0xff58), 0xda);
        // D5 00DC
        gbc.setState(0x9d47, 0xc146, 0x4260, 0x11b5, 0x18c6, 0x25c4, 0x1, 0x0);
        gbc.writeMem(0x9d47, { 0xd5 });
        gbc.writeMem(0xc144, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc144);
        EXPECT(gbc.pc(), 0x9d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d47), 0xd5);
        EXPECT(gbc.readMem(0xc144), 0xc6);
        EXPECT(gbc.readMem(0xc145), 0x18);
        // D5 00DD
        gbc.setState(0xb9ab, 0xc569, 0x4e20, 0x2fe1, 0xe544, 0xa891, 0x1, 0x0);
        gbc.writeMem(0xb9ab, { 0xd5 });
        gbc.writeMem(0xc567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc567);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ab), 0xd5);
        EXPECT(gbc.readMem(0xc567), 0x44);
        EXPECT(gbc.readMem(0xc568), 0xe5);
        // D5 00DF
        gbc.setState(0x5c9e, 0xedd7, 0xcbe0, 0x5936, 0x575e, 0xe5f5, 0x0, 0x0);
        gbc.writeMem(0x5c9e, { 0xd5 });
        gbc.writeMem(0xedd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedd5);
        EXPECT(gbc.pc(), 0x5c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd5), 0x5e);
        EXPECT(gbc.readMem(0xedd6), 0x57);
        // D5 00E1
        gbc.setState(0x5a44, 0xb2e6, 0x4de0, 0x7553, 0xdf27, 0x1ccf, 0x1, 0x1);
        gbc.writeMem(0x5a44, { 0xd5 });
        gbc.writeMem(0xb2e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb2e4);
        EXPECT(gbc.pc(), 0x5a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e4), 0x27);
        EXPECT(gbc.readMem(0xb2e5), 0xdf);
        // D5 00E2
        gbc.setState(0x5268, 0xdbf2, 0xe7f0, 0xcc61, 0x4bd4, 0x50fe, 0x0, 0x0);
        gbc.writeMem(0x5268, { 0xd5 });
        gbc.writeMem(0xdbf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdbf0);
        EXPECT(gbc.pc(), 0x5269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0xd4);
        EXPECT(gbc.readMem(0xdbf1), 0x4b);
        // D5 00E3
        gbc.setState(0xbf57, 0xcedc, 0x6f50, 0x242f, 0xf8cf, 0x6578, 0x1, 0x0);
        gbc.writeMem(0xbf57, { 0xd5 });
        gbc.writeMem(0xceda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xceda);
        EXPECT(gbc.pc(), 0xbf58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf57), 0xd5);
        EXPECT(gbc.readMem(0xceda), 0xcf);
        EXPECT(gbc.readMem(0xcedb), 0xf8);
        // D5 00E6
        gbc.setState(0xa615, 0xbcfd, 0x3820, 0x3559, 0xb515, 0x4660, 0x1, 0x0);
        gbc.writeMem(0xa615, { 0xd5 });
        gbc.writeMem(0xbcfb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbcfb);
        EXPECT(gbc.pc(), 0xa616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa615), 0xd5);
        EXPECT(gbc.readMem(0xbcfb), 0x15);
        EXPECT(gbc.readMem(0xbcfc), 0xb5);
        // D5 00E7
        gbc.setState(0xb7bb, 0xbbdb, 0x4d30, 0xb81, 0x2ee, 0xa35a, 0x0, 0x0);
        gbc.writeMem(0xb7bb, { 0xd5 });
        gbc.writeMem(0xbbd9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbbd9);
        EXPECT(gbc.pc(), 0xb7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bb), 0xd5);
        EXPECT(gbc.readMem(0xbbd9), 0xee);
        EXPECT(gbc.readMem(0xbbda), 0x2);
        // D5 00E8
        gbc.setState(0xede8, 0xff51, 0xc560, 0xd0ed, 0xa8f7, 0x7d15, 0x0, 0x0);
        gbc.writeMem(0xede8, { 0xd5 });
        gbc.writeMem(0xff4f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xff4f);
        EXPECT(gbc.pc(), 0xede9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede8), 0xd5);
        EXPECT(gbc.readMem(0xff4f), 0xf7);
        EXPECT(gbc.readMem(0xff50), 0xa8);
        // D5 00ED
        gbc.setState(0xea78, 0x83b2, 0x1c60, 0x5c4d, 0xb99d, 0x7831, 0x1, 0x0);
        gbc.writeMem(0x83b0, { 0x0, 0x0 });
        gbc.writeMem(0xea78, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x83b0);
        EXPECT(gbc.pc(), 0xea79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b0), 0x9d);
        EXPECT(gbc.readMem(0x83b1), 0xb9);
        EXPECT(gbc.readMem(0xea78), 0xd5);
        // D5 00EE
        gbc.setState(0xaffa, 0xcbc4, 0x2170, 0x1894, 0xfc15, 0x433e, 0x1, 0x1);
        gbc.writeMem(0xaffa, { 0xd5 });
        gbc.writeMem(0xcbc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcbc2);
        EXPECT(gbc.pc(), 0xaffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffa), 0xd5);
        EXPECT(gbc.readMem(0xcbc2), 0x15);
        EXPECT(gbc.readMem(0xcbc3), 0xfc);
        // D5 00F0
        gbc.setState(0xe919, 0x8d02, 0x1410, 0xd1e0, 0x27ec, 0x581e, 0x0, 0x1);
        gbc.writeMem(0x8d00, { 0x0, 0x0 });
        gbc.writeMem(0xe919, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8d00);
        EXPECT(gbc.pc(), 0xe91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d00), 0xec);
        EXPECT(gbc.readMem(0x8d01), 0x27);
        EXPECT(gbc.readMem(0xe919), 0xd5);
        // D5 00F1
        gbc.setState(0xbe8, 0xe7e6, 0x7d80, 0xe1e4, 0x3f3c, 0xb6dd, 0x1, 0x1);
        gbc.writeMem(0xbe8, { 0xd5 });
        gbc.writeMem(0xe7e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe7e4);
        EXPECT(gbc.pc(), 0xbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e4), 0x3c);
        EXPECT(gbc.readMem(0xe7e5), 0x3f);
        // D5 00F3
        gbc.setState(0x4ce7, 0xae0f, 0xceb0, 0x7ed5, 0x946d, 0x528c, 0x1, 0x1);
        gbc.writeMem(0x4ce7, { 0xd5 });
        gbc.writeMem(0xae0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0x4ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0d), 0x6d);
        EXPECT(gbc.readMem(0xae0e), 0x94);
        // D5 00F5
        gbc.setState(0xa951, 0x8f6f, 0xfb90, 0x23b8, 0x15fa, 0xe188, 0x1, 0x0);
        gbc.writeMem(0x8f6d, { 0x0, 0x0 });
        gbc.writeMem(0xa951, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8f6d);
        EXPECT(gbc.pc(), 0xa952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6d), 0xfa);
        EXPECT(gbc.readMem(0x8f6e), 0x15);
        EXPECT(gbc.readMem(0xa951), 0xd5);
        // D5 00F6
        gbc.setState(0x6cb, 0x8db3, 0xf860, 0xb21d, 0x1b64, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0xd5 });
        gbc.writeMem(0x8db1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8db1);
        EXPECT(gbc.pc(), 0x6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db1), 0x64);
        EXPECT(gbc.readMem(0x8db2), 0x1b);
        // D5 00F7
        gbc.setState(0x6ac0, 0xc148, 0x1010, 0x673, 0x98b, 0x11f1, 0x0, 0x0);
        gbc.writeMem(0x6ac0, { 0xd5 });
        gbc.writeMem(0xc146, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc146);
        EXPECT(gbc.pc(), 0x6ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc146), 0x8b);
        EXPECT(gbc.readMem(0xc147), 0x9);
        // D5 00F8
        gbc.setState(0xcbbe, 0xd062, 0x3dd0, 0xfec8, 0x6f35, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0xcbbe, { 0xd5 });
        gbc.writeMem(0xd060, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0xcbbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbbe), 0xd5);
        EXPECT(gbc.readMem(0xd060), 0x35);
        EXPECT(gbc.readMem(0xd061), 0x6f);
        // D5 00F9
        gbc.setState(0xccaa, 0xd9ee, 0xda50, 0xb85a, 0x1959, 0x80e9, 0x0, 0x1);
        gbc.writeMem(0xccaa, { 0xd5 });
        gbc.writeMem(0xd9ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd9ec);
        EXPECT(gbc.pc(), 0xccab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccaa), 0xd5);
        EXPECT(gbc.readMem(0xd9ec), 0x59);
        EXPECT(gbc.readMem(0xd9ed), 0x19);
        // D5 00FC
        gbc.setState(0x30b7, 0x84bd, 0x7110, 0x938, 0x32d8, 0x7911, 0x0, 0x1);
        gbc.writeMem(0x30b7, { 0xd5 });
        gbc.writeMem(0x84bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x84bb);
        EXPECT(gbc.pc(), 0x30b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bb), 0xd8);
        EXPECT(gbc.readMem(0x84bc), 0x32);
        // D5 00FF
        gbc.setState(0x17af, 0xad04, 0xf190, 0x253, 0xae52, 0x9b45, 0x0, 0x0);
        gbc.writeMem(0x17af, { 0xd5 });
        gbc.writeMem(0xad02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0x17b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad02), 0x52);
        EXPECT(gbc.readMem(0xad03), 0xae);
        // D5 0100
        gbc.setState(0xd762, 0xc79b, 0x7560, 0xd8fe, 0x85e4, 0x6611, 0x1, 0x0);
        gbc.writeMem(0xc799, { 0x0, 0x0 });
        gbc.writeMem(0xd762, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc799);
        EXPECT(gbc.pc(), 0xd763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc799), 0xe4);
        EXPECT(gbc.readMem(0xc79a), 0x85);
        EXPECT(gbc.readMem(0xd762), 0xd5);
        // D5 0102
        gbc.setState(0xbc54, 0xcebd, 0x2d0, 0xd812, 0x31d0, 0x1c01, 0x0, 0x1);
        gbc.writeMem(0xbc54, { 0xd5 });
        gbc.writeMem(0xcebb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcebb);
        EXPECT(gbc.pc(), 0xbc55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc54), 0xd5);
        EXPECT(gbc.readMem(0xcebb), 0xd0);
        EXPECT(gbc.readMem(0xcebc), 0x31);
        // D5 0103
        gbc.setState(0x48e2, 0xbc2e, 0x8490, 0x73cd, 0x3c17, 0xb2e5, 0x1, 0x1);
        gbc.writeMem(0x48e2, { 0xd5 });
        gbc.writeMem(0xbc2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbc2c);
        EXPECT(gbc.pc(), 0x48e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2c), 0x17);
        EXPECT(gbc.readMem(0xbc2d), 0x3c);
        // D5 0109
        gbc.setState(0xa627, 0xa923, 0x31e0, 0x398b, 0x99af, 0x5ea3, 0x0, 0x0);
        gbc.writeMem(0xa627, { 0xd5 });
        gbc.writeMem(0xa921, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa921);
        EXPECT(gbc.pc(), 0xa628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa627), 0xd5);
        EXPECT(gbc.readMem(0xa921), 0xaf);
        EXPECT(gbc.readMem(0xa922), 0x99);
        // D5 010A
        gbc.setState(0x8577, 0x93e3, 0xd9c0, 0xa29b, 0xb964, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0x8577, { 0xd5 });
        gbc.writeMem(0x93e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x93e1);
        EXPECT(gbc.pc(), 0x8578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8577), 0xd5);
        EXPECT(gbc.readMem(0x93e1), 0x64);
        EXPECT(gbc.readMem(0x93e2), 0xb9);
        // D5 010B
        gbc.setState(0x7e5e, 0xc139, 0x5a0, 0xcade, 0x335f, 0xba28, 0x1, 0x0);
        gbc.writeMem(0x7e5e, { 0xd5 });
        gbc.writeMem(0xc137, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc137);
        EXPECT(gbc.pc(), 0x7e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc137), 0x5f);
        EXPECT(gbc.readMem(0xc138), 0x33);
        // D5 010E
        gbc.setState(0xd783, 0xb2a5, 0x5d20, 0xa77b, 0xe730, 0xd342, 0x1, 0x1);
        gbc.writeMem(0xb2a3, { 0x0, 0x0 });
        gbc.writeMem(0xd783, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb2a3);
        EXPECT(gbc.pc(), 0xd784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a3), 0x30);
        EXPECT(gbc.readMem(0xb2a4), 0xe7);
        EXPECT(gbc.readMem(0xd783), 0xd5);
        // D5 0111
        gbc.setState(0x7e36, 0x9e72, 0x65c0, 0x8a66, 0x4692, 0x7342, 0x0, 0x0);
        gbc.writeMem(0x7e36, { 0xd5 });
        gbc.writeMem(0x9e70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9e70);
        EXPECT(gbc.pc(), 0x7e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e70), 0x92);
        EXPECT(gbc.readMem(0x9e71), 0x46);
        // D5 0113
        gbc.setState(0x33f4, 0xedba, 0xd870, 0xf0f3, 0xf8f3, 0x2db3, 0x1, 0x1);
        gbc.writeMem(0x33f4, { 0xd5 });
        gbc.writeMem(0xedb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xedb8);
        EXPECT(gbc.pc(), 0x33f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb8), 0xf3);
        EXPECT(gbc.readMem(0xedb9), 0xf8);
        // D5 0118
        gbc.setState(0x89ae, 0xc204, 0x67b0, 0xfba4, 0x2b85, 0x2134, 0x0, 0x1);
        gbc.writeMem(0x89ae, { 0xd5 });
        gbc.writeMem(0xc202, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc202);
        EXPECT(gbc.pc(), 0x89af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ae), 0xd5);
        EXPECT(gbc.readMem(0xc202), 0x85);
        EXPECT(gbc.readMem(0xc203), 0x2b);
        // D5 0119
        gbc.setState(0xa80e, 0x8d7f, 0xef30, 0x81ab, 0xb98b, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0x0, 0x0 });
        gbc.writeMem(0xa80e, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8d7d);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7d), 0x8b);
        EXPECT(gbc.readMem(0x8d7e), 0xb9);
        EXPECT(gbc.readMem(0xa80e), 0xd5);
        // D5 011A
        gbc.setState(0x73f6, 0xa26f, 0x520, 0x1d1f, 0x94dd, 0x26fe, 0x0, 0x0);
        gbc.writeMem(0x73f6, { 0xd5 });
        gbc.writeMem(0xa26d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa26d);
        EXPECT(gbc.pc(), 0x73f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26d), 0xdd);
        EXPECT(gbc.readMem(0xa26e), 0x94);
        // D5 011E
        gbc.setState(0x4eb8, 0xfc49, 0xf2a0, 0x7b6b, 0x638, 0x26c8, 0x1, 0x0);
        gbc.writeMem(0x4eb8, { 0xd5 });
        gbc.writeMem(0xfc47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfc47);
        EXPECT(gbc.pc(), 0x4eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc47), 0x38);
        EXPECT(gbc.readMem(0xfc48), 0x6);
        // D5 0122
        gbc.setState(0x2f20, 0x868f, 0x7a0, 0x7e63, 0x2f49, 0x7816, 0x0, 0x1);
        gbc.writeMem(0x2f20, { 0xd5 });
        gbc.writeMem(0x868d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x868d);
        EXPECT(gbc.pc(), 0x2f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868d), 0x49);
        EXPECT(gbc.readMem(0x868e), 0x2f);
        // D5 0126
        gbc.setState(0x2da, 0xcc72, 0xa190, 0x3374, 0x57f, 0xbda7, 0x0, 0x1);
        gbc.writeMem(0x2da, { 0xd5 });
        gbc.writeMem(0xcc70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcc70);
        EXPECT(gbc.pc(), 0x2db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc70), 0x7f);
        EXPECT(gbc.readMem(0xcc71), 0x5);
        // D5 0127
        gbc.setState(0xc63e, 0xc75f, 0x2870, 0x8520, 0x61df, 0xe447, 0x0, 0x0);
        gbc.writeMem(0xc63e, { 0xd5 });
        gbc.writeMem(0xc75d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc75d);
        EXPECT(gbc.pc(), 0xc63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63e), 0xd5);
        EXPECT(gbc.readMem(0xc75d), 0xdf);
        EXPECT(gbc.readMem(0xc75e), 0x61);
        // D5 012F
        gbc.setState(0xb14f, 0x9614, 0xfed0, 0xdd51, 0xbda1, 0x5f09, 0x1, 0x0);
        gbc.writeMem(0x9612, { 0x0, 0x0 });
        gbc.writeMem(0xb14f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9612);
        EXPECT(gbc.pc(), 0xb150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9612), 0xa1);
        EXPECT(gbc.readMem(0x9613), 0xbd);
        EXPECT(gbc.readMem(0xb14f), 0xd5);
        // D5 0130
        gbc.setState(0xe68d, 0xbb60, 0xf6f0, 0xefb3, 0xf260, 0x5cf8, 0x1, 0x1);
        gbc.writeMem(0xbb5e, { 0x0, 0x0 });
        gbc.writeMem(0xe68d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbb5e);
        EXPECT(gbc.pc(), 0xe68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5e), 0x60);
        EXPECT(gbc.readMem(0xbb5f), 0xf2);
        EXPECT(gbc.readMem(0xe68d), 0xd5);
        // D5 0133
        gbc.setState(0x54c4, 0xf3df, 0x1300, 0xca5d, 0x708c, 0x42f3, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xd5 });
        gbc.writeMem(0xf3dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf3dd);
        EXPECT(gbc.pc(), 0x54c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3dd), 0x8c);
        EXPECT(gbc.readMem(0xf3de), 0x70);
        // D5 0134
        gbc.setState(0x35f, 0xc358, 0xd690, 0x22bc, 0x299d, 0x5992, 0x0, 0x0);
        gbc.writeMem(0x35f, { 0xd5 });
        gbc.writeMem(0xc356, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc356);
        EXPECT(gbc.pc(), 0x360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc356), 0x9d);
        EXPECT(gbc.readMem(0xc357), 0x29);
        // D5 0135
        gbc.setState(0xa51d, 0xf473, 0xb2c0, 0xf430, 0x3048, 0xe9e1, 0x1, 0x1);
        gbc.writeMem(0xa51d, { 0xd5 });
        gbc.writeMem(0xf471, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf471);
        EXPECT(gbc.pc(), 0xa51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51d), 0xd5);
        EXPECT(gbc.readMem(0xf471), 0x48);
        EXPECT(gbc.readMem(0xf472), 0x30);
        // D5 0137
        gbc.setState(0x3cc4, 0xd495, 0xe1f0, 0x482b, 0x35e3, 0xaca7, 0x0, 0x1);
        gbc.writeMem(0x3cc4, { 0xd5 });
        gbc.writeMem(0xd493, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd493);
        EXPECT(gbc.pc(), 0x3cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd493), 0xe3);
        EXPECT(gbc.readMem(0xd494), 0x35);
        // D5 0138
        gbc.setState(0xb2c7, 0xe6e5, 0x7f80, 0xbe5f, 0x70b9, 0xa719, 0x1, 0x1);
        gbc.writeMem(0xb2c7, { 0xd5 });
        gbc.writeMem(0xe6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe6e3);
        EXPECT(gbc.pc(), 0xb2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c7), 0xd5);
        EXPECT(gbc.readMem(0xe6e3), 0xb9);
        EXPECT(gbc.readMem(0xe6e4), 0x70);
        // D5 0139
        gbc.setState(0x5823, 0xb6d8, 0x5300, 0xa458, 0xdc90, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x5823, { 0xd5 });
        gbc.writeMem(0xb6d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb6d6);
        EXPECT(gbc.pc(), 0x5824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d6), 0x90);
        EXPECT(gbc.readMem(0xb6d7), 0xdc);
        // D5 013B
        gbc.setState(0x270d, 0xa361, 0x57d0, 0x5065, 0x9592, 0xd19b, 0x0, 0x1);
        gbc.writeMem(0x270d, { 0xd5 });
        gbc.writeMem(0xa35f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa35f);
        EXPECT(gbc.pc(), 0x270e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35f), 0x92);
        EXPECT(gbc.readMem(0xa360), 0x95);
        // D5 013D
        gbc.setState(0x6f72, 0xd6cd, 0x32f0, 0xab25, 0x7d40, 0x9c79, 0x0, 0x0);
        gbc.writeMem(0x6f72, { 0xd5 });
        gbc.writeMem(0xd6cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd6cb);
        EXPECT(gbc.pc(), 0x6f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cb), 0x40);
        EXPECT(gbc.readMem(0xd6cc), 0x7d);
        // D5 013E
        gbc.setState(0x9e71, 0xf897, 0x7b50, 0x9cdd, 0xa59b, 0x8f7, 0x1, 0x0);
        gbc.writeMem(0x9e71, { 0xd5 });
        gbc.writeMem(0xf895, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf895);
        EXPECT(gbc.pc(), 0x9e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e71), 0xd5);
        EXPECT(gbc.readMem(0xf895), 0x9b);
        EXPECT(gbc.readMem(0xf896), 0xa5);
        // D5 0140
        gbc.setState(0xaf68, 0xc351, 0x4cf0, 0x174e, 0xe176, 0xf82d, 0x0, 0x0);
        gbc.writeMem(0xaf68, { 0xd5 });
        gbc.writeMem(0xc34f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc34f);
        EXPECT(gbc.pc(), 0xaf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf68), 0xd5);
        EXPECT(gbc.readMem(0xc34f), 0x76);
        EXPECT(gbc.readMem(0xc350), 0xe1);
        // D5 0142
        gbc.setState(0xb66b, 0xcf60, 0x7960, 0x2022, 0x5e91, 0x2366, 0x1, 0x0);
        gbc.writeMem(0xb66b, { 0xd5 });
        gbc.writeMem(0xcf5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0xb66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66b), 0xd5);
        EXPECT(gbc.readMem(0xcf5e), 0x91);
        EXPECT(gbc.readMem(0xcf5f), 0x5e);
        // D5 0148
        gbc.setState(0xd0cd, 0xa94c, 0x1dd0, 0xbd60, 0x17a5, 0xc264, 0x0, 0x1);
        gbc.writeMem(0xa94a, { 0x0, 0x0 });
        gbc.writeMem(0xd0cd, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa94a);
        EXPECT(gbc.pc(), 0xd0ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94a), 0xa5);
        EXPECT(gbc.readMem(0xa94b), 0x17);
        EXPECT(gbc.readMem(0xd0cd), 0xd5);
        // D5 0149
        gbc.setState(0x44dd, 0xb659, 0xdaa0, 0x9534, 0x7c7c, 0xbfc1, 0x1, 0x1);
        gbc.writeMem(0x44dd, { 0xd5 });
        gbc.writeMem(0xb657, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb657);
        EXPECT(gbc.pc(), 0x44de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb657), 0x7c);
        EXPECT(gbc.readMem(0xb658), 0x7c);
        // D5 014A
        gbc.setState(0xc232, 0xd6cc, 0x1930, 0xaa51, 0x2d49, 0x91bb, 0x0, 0x0);
        gbc.writeMem(0xc232, { 0xd5 });
        gbc.writeMem(0xd6ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd6ca);
        EXPECT(gbc.pc(), 0xc233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc232), 0xd5);
        EXPECT(gbc.readMem(0xd6ca), 0x49);
        EXPECT(gbc.readMem(0xd6cb), 0x2d);
        // D5 014B
        gbc.setState(0x121d, 0x8f55, 0xbca0, 0x33cb, 0x1df3, 0x8e44, 0x0, 0x0);
        gbc.writeMem(0x121d, { 0xd5 });
        gbc.writeMem(0x8f53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8f53);
        EXPECT(gbc.pc(), 0x121e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f53), 0xf3);
        EXPECT(gbc.readMem(0x8f54), 0x1d);
        // D5 014C
        gbc.setState(0x689c, 0xc029, 0xa290, 0x4982, 0x4d43, 0xe3b4, 0x0, 0x1);
        gbc.writeMem(0x689c, { 0xd5 });
        gbc.writeMem(0xc027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc027);
        EXPECT(gbc.pc(), 0x689d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc027), 0x43);
        EXPECT(gbc.readMem(0xc028), 0x4d);
        // D5 014D
        gbc.setState(0xcbcb, 0xf7fe, 0x810, 0x6c94, 0x6be0, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xcbcb, { 0xd5 });
        gbc.writeMem(0xf7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0xcbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbcb), 0xd5);
        EXPECT(gbc.readMem(0xf7fc), 0xe0);
        EXPECT(gbc.readMem(0xf7fd), 0x6b);
        // D5 014E
        gbc.setState(0x8c6c, 0x8e21, 0x93f0, 0x5542, 0x9e78, 0xb20c, 0x0, 0x0);
        gbc.writeMem(0x8c6c, { 0xd5 });
        gbc.writeMem(0x8e1f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8e1f);
        EXPECT(gbc.pc(), 0x8c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c6c), 0xd5);
        EXPECT(gbc.readMem(0x8e1f), 0x78);
        EXPECT(gbc.readMem(0x8e20), 0x9e);
        // D5 0150
        gbc.setState(0xa8d8, 0xa094, 0x7b60, 0x64f2, 0x762b, 0xe277, 0x0, 0x0);
        gbc.writeMem(0xa092, { 0x0, 0x0 });
        gbc.writeMem(0xa8d8, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa092);
        EXPECT(gbc.pc(), 0xa8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa092), 0x2b);
        EXPECT(gbc.readMem(0xa093), 0x76);
        EXPECT(gbc.readMem(0xa8d8), 0xd5);
        // D5 0152
        gbc.setState(0x1526, 0xcdff, 0x5c40, 0x1f72, 0x72da, 0xec36, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xd5 });
        gbc.writeMem(0xcdfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcdfd);
        EXPECT(gbc.pc(), 0x1527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdfd), 0xda);
        EXPECT(gbc.readMem(0xcdfe), 0x72);
        // D5 0154
        gbc.setState(0x4dfe, 0x8d0b, 0x1ae0, 0x76bc, 0xe42f, 0xf865, 0x1, 0x1);
        gbc.writeMem(0x4dfe, { 0xd5 });
        gbc.writeMem(0x8d09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8d09);
        EXPECT(gbc.pc(), 0x4dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d09), 0x2f);
        EXPECT(gbc.readMem(0x8d0a), 0xe4);
        // D5 0155
        gbc.setState(0x8e19, 0xdece, 0xb280, 0xddfc, 0xfdc1, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0x8e19, { 0xd5 });
        gbc.writeMem(0xdecc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdecc);
        EXPECT(gbc.pc(), 0x8e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e19), 0xd5);
        EXPECT(gbc.readMem(0xdecc), 0xc1);
        EXPECT(gbc.readMem(0xdecd), 0xfd);
        // D5 0156
        gbc.setState(0x1027, 0x8da8, 0x1710, 0x1aca, 0x3b7e, 0xf68f, 0x1, 0x0);
        gbc.writeMem(0x1027, { 0xd5 });
        gbc.writeMem(0x8da6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8da6);
        EXPECT(gbc.pc(), 0x1028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da6), 0x7e);
        EXPECT(gbc.readMem(0x8da7), 0x3b);
        // D5 0157
        gbc.setState(0x1cf3, 0xdc2a, 0x98b0, 0x4e11, 0x4571, 0x357f, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0xd5 });
        gbc.writeMem(0xdc28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdc28);
        EXPECT(gbc.pc(), 0x1cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc28), 0x71);
        EXPECT(gbc.readMem(0xdc29), 0x45);
        // D5 015C
        gbc.setState(0xbb5, 0xab59, 0x16f0, 0xfe71, 0x9ad7, 0xf926, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xd5 });
        gbc.writeMem(0xab57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xab57);
        EXPECT(gbc.pc(), 0xbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab57), 0xd7);
        EXPECT(gbc.readMem(0xab58), 0x9a);
        // D5 015D
        gbc.setState(0xa0e1, 0x90f8, 0xa3c0, 0x3dbf, 0x74dc, 0x59ba, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x0, 0x0 });
        gbc.writeMem(0xa0e1, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x90f6);
        EXPECT(gbc.pc(), 0xa0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f6), 0xdc);
        EXPECT(gbc.readMem(0x90f7), 0x74);
        EXPECT(gbc.readMem(0xa0e1), 0xd5);
        // D5 015F
        gbc.setState(0xb9ab, 0x87ce, 0x1d90, 0x905d, 0x6476, 0x3627, 0x0, 0x0);
        gbc.writeMem(0x87cc, { 0x0, 0x0 });
        gbc.writeMem(0xb9ab, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x87cc);
        EXPECT(gbc.pc(), 0xb9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87cc), 0x76);
        EXPECT(gbc.readMem(0x87cd), 0x64);
        EXPECT(gbc.readMem(0xb9ab), 0xd5);
        // D5 0161
        gbc.setState(0x7b1c, 0xba1f, 0x51f0, 0xa2eb, 0x14f6, 0x400e, 0x1, 0x1);
        gbc.writeMem(0x7b1c, { 0xd5 });
        gbc.writeMem(0xba1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xba1d);
        EXPECT(gbc.pc(), 0x7b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1d), 0xf6);
        EXPECT(gbc.readMem(0xba1e), 0x14);
        // D5 0163
        gbc.setState(0xc310, 0xcc1d, 0xdd90, 0x9301, 0xd97a, 0xea9, 0x1, 0x0);
        gbc.writeMem(0xc310, { 0xd5 });
        gbc.writeMem(0xcc1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcc1b);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc310), 0xd5);
        EXPECT(gbc.readMem(0xcc1b), 0x7a);
        EXPECT(gbc.readMem(0xcc1c), 0xd9);
        // D5 0164
        gbc.setState(0xc9af, 0xdb12, 0xe4d0, 0x3dd1, 0xcad1, 0x7e04, 0x1, 0x1);
        gbc.writeMem(0xc9af, { 0xd5 });
        gbc.writeMem(0xdb10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdb10);
        EXPECT(gbc.pc(), 0xc9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9af), 0xd5);
        EXPECT(gbc.readMem(0xdb10), 0xd1);
        EXPECT(gbc.readMem(0xdb11), 0xca);
        // D5 0166
        gbc.setState(0x981e, 0x9c63, 0x4ee0, 0x693d, 0x4050, 0x6726, 0x1, 0x1);
        gbc.writeMem(0x981e, { 0xd5 });
        gbc.writeMem(0x9c61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9c61);
        EXPECT(gbc.pc(), 0x981f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981e), 0xd5);
        EXPECT(gbc.readMem(0x9c61), 0x50);
        EXPECT(gbc.readMem(0x9c62), 0x40);
        // D5 0167
        gbc.setState(0x91a9, 0xca5d, 0xa870, 0xa077, 0xb4e5, 0x972, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0xd5 });
        gbc.writeMem(0xca5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xca5b);
        EXPECT(gbc.pc(), 0x91aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0xd5);
        EXPECT(gbc.readMem(0xca5b), 0xe5);
        EXPECT(gbc.readMem(0xca5c), 0xb4);
        // D5 0168
        gbc.setState(0x4bd9, 0xa7e2, 0x550, 0xc300, 0x27cd, 0x2e5b, 0x0, 0x1);
        gbc.writeMem(0x4bd9, { 0xd5 });
        gbc.writeMem(0xa7e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa7e0);
        EXPECT(gbc.pc(), 0x4bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e0), 0xcd);
        EXPECT(gbc.readMem(0xa7e1), 0x27);
        // D5 016B
        gbc.setState(0x6a47, 0xbb94, 0xf1d0, 0xef10, 0x4272, 0x89b0, 0x1, 0x1);
        gbc.writeMem(0x6a47, { 0xd5 });
        gbc.writeMem(0xbb92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbb92);
        EXPECT(gbc.pc(), 0x6a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb92), 0x72);
        EXPECT(gbc.readMem(0xbb93), 0x42);
        // D5 016E
        gbc.setState(0xc310, 0xacb2, 0xc7d0, 0xd9b5, 0x3d25, 0xd50f, 0x1, 0x0);
        gbc.writeMem(0xacb0, { 0x0, 0x0 });
        gbc.writeMem(0xc310, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xacb0);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb0), 0x25);
        EXPECT(gbc.readMem(0xacb1), 0x3d);
        EXPECT(gbc.readMem(0xc310), 0xd5);
        // D5 0170
        gbc.setState(0x5da8, 0xf181, 0x3a00, 0x88b, 0xc088, 0xbd2f, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0xd5 });
        gbc.writeMem(0xf17f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf17f);
        EXPECT(gbc.pc(), 0x5da9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf17f), 0x88);
        EXPECT(gbc.readMem(0xf180), 0xc0);
        // D5 0171
        gbc.setState(0xd994, 0xfb98, 0x9e30, 0xd38, 0xd74e, 0x552a, 0x1, 0x0);
        gbc.writeMem(0xd994, { 0xd5 });
        gbc.writeMem(0xfb96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfb96);
        EXPECT(gbc.pc(), 0xd995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd994), 0xd5);
        EXPECT(gbc.readMem(0xfb96), 0x4e);
        EXPECT(gbc.readMem(0xfb97), 0xd7);
        // D5 0172
        gbc.setState(0x48b6, 0xe43a, 0x1c40, 0x7a54, 0x323f, 0x3c4e, 0x0, 0x1);
        gbc.writeMem(0x48b6, { 0xd5 });
        gbc.writeMem(0xe438, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe438);
        EXPECT(gbc.pc(), 0x48b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe438), 0x3f);
        EXPECT(gbc.readMem(0xe439), 0x32);
        // D5 0174
        gbc.setState(0x6ced, 0xb225, 0xf230, 0x996f, 0x4560, 0x9bb5, 0x1, 0x1);
        gbc.writeMem(0x6ced, { 0xd5 });
        gbc.writeMem(0xb223, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb223);
        EXPECT(gbc.pc(), 0x6cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb223), 0x60);
        EXPECT(gbc.readMem(0xb224), 0x45);
        // D5 0175
        gbc.setState(0x12d, 0x8851, 0xbd10, 0xd28a, 0x4156, 0x9b7a, 0x1, 0x1);
        gbc.writeMem(0x12d, { 0xd5 });
        gbc.writeMem(0x884f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x884f);
        EXPECT(gbc.pc(), 0x12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884f), 0x56);
        EXPECT(gbc.readMem(0x8850), 0x41);
        // D5 0178
        gbc.setState(0xb21d, 0xc146, 0x4350, 0x9008, 0x3d2d, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0xd5 });
        gbc.writeMem(0xc144, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc144);
        EXPECT(gbc.pc(), 0xb21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21d), 0xd5);
        EXPECT(gbc.readMem(0xc144), 0x2d);
        EXPECT(gbc.readMem(0xc145), 0x3d);
        // D5 017B
        gbc.setState(0x295e, 0xa1e2, 0x9d80, 0xb8ab, 0xc0ee, 0xca35, 0x1, 0x1);
        gbc.writeMem(0x295e, { 0xd5 });
        gbc.writeMem(0xa1e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa1e0);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e0), 0xee);
        EXPECT(gbc.readMem(0xa1e1), 0xc0);
        // D5 017C
        gbc.setState(0x550c, 0xc947, 0x7090, 0x2aea, 0xecec, 0x9e5, 0x1, 0x0);
        gbc.writeMem(0x550c, { 0xd5 });
        gbc.writeMem(0xc945, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc945);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc945), 0xec);
        EXPECT(gbc.readMem(0xc946), 0xec);
        // D5 017E
        gbc.setState(0x90ab, 0xdd3e, 0x3a60, 0xc8c0, 0x9bee, 0xde3b, 0x1, 0x1);
        gbc.writeMem(0x90ab, { 0xd5 });
        gbc.writeMem(0xdd3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdd3c);
        EXPECT(gbc.pc(), 0x90ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ab), 0xd5);
        EXPECT(gbc.readMem(0xdd3c), 0xee);
        EXPECT(gbc.readMem(0xdd3d), 0x9b);
        // D5 017F
        gbc.setState(0x1b80, 0xb7ee, 0xdb90, 0x280e, 0xa3e, 0xe55a, 0x0, 0x1);
        gbc.writeMem(0x1b80, { 0xd5 });
        gbc.writeMem(0xb7ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb7ec);
        EXPECT(gbc.pc(), 0x1b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ec), 0x3e);
        EXPECT(gbc.readMem(0xb7ed), 0xa);
        // D5 0180
        gbc.setState(0x4d2f, 0xd4ff, 0x43f0, 0x7474, 0xc4b4, 0xb8ea, 0x1, 0x1);
        gbc.writeMem(0x4d2f, { 0xd5 });
        gbc.writeMem(0xd4fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd4fd);
        EXPECT(gbc.pc(), 0x4d30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fd), 0xb4);
        EXPECT(gbc.readMem(0xd4fe), 0xc4);
        // D5 0181
        gbc.setState(0xbded, 0xfd4e, 0xd6e0, 0x9584, 0x35ef, 0x700, 0x0, 0x1);
        gbc.writeMem(0xbded, { 0xd5 });
        gbc.writeMem(0xfd4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfd4c);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbded), 0xd5);
        EXPECT(gbc.readMem(0xfd4c), 0xef);
        EXPECT(gbc.readMem(0xfd4d), 0x35);
        // D5 0182
        gbc.setState(0x7e0b, 0x84ec, 0x6d10, 0xe2e0, 0xa95c, 0xe6b5, 0x0, 0x0);
        gbc.writeMem(0x7e0b, { 0xd5 });
        gbc.writeMem(0x84ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x84ea);
        EXPECT(gbc.pc(), 0x7e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ea), 0x5c);
        EXPECT(gbc.readMem(0x84eb), 0xa9);
        // D5 0183
        gbc.setState(0x459c, 0x814e, 0xd2b0, 0xe9f, 0x19a1, 0x9be6, 0x0, 0x0);
        gbc.writeMem(0x459c, { 0xd5 });
        gbc.writeMem(0x814c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814c), 0xa1);
        EXPECT(gbc.readMem(0x814d), 0x19);
        // D5 0184
        gbc.setState(0xa4f0, 0x97d8, 0xd620, 0x19da, 0x2fcf, 0xf17f, 0x0, 0x0);
        gbc.writeMem(0x97d6, { 0x0, 0x0 });
        gbc.writeMem(0xa4f0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x97d6);
        EXPECT(gbc.pc(), 0xa4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d6), 0xcf);
        EXPECT(gbc.readMem(0x97d7), 0x2f);
        EXPECT(gbc.readMem(0xa4f0), 0xd5);
        // D5 0187
        gbc.setState(0x3045, 0xea78, 0x3d30, 0x3afd, 0x5937, 0x5f9b, 0x0, 0x0);
        gbc.writeMem(0x3045, { 0xd5 });
        gbc.writeMem(0xea76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xea76);
        EXPECT(gbc.pc(), 0x3046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea76), 0x37);
        EXPECT(gbc.readMem(0xea77), 0x59);
        // D5 018A
        gbc.setState(0x8cf8, 0xf72a, 0x8810, 0xa863, 0xc9c1, 0x20f1, 0x0, 0x0);
        gbc.writeMem(0x8cf8, { 0xd5 });
        gbc.writeMem(0xf728, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf728);
        EXPECT(gbc.pc(), 0x8cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf8), 0xd5);
        EXPECT(gbc.readMem(0xf728), 0xc1);
        EXPECT(gbc.readMem(0xf729), 0xc9);
        // D5 018E
        gbc.setState(0xa6b1, 0xbdaf, 0x4620, 0x7f32, 0x6a0a, 0x4ac0, 0x1, 0x0);
        gbc.writeMem(0xa6b1, { 0xd5 });
        gbc.writeMem(0xbdad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbdad);
        EXPECT(gbc.pc(), 0xa6b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b1), 0xd5);
        EXPECT(gbc.readMem(0xbdad), 0xa);
        EXPECT(gbc.readMem(0xbdae), 0x6a);
        // D5 018F
        gbc.setState(0x78ff, 0x8420, 0x40c0, 0x4bd2, 0x3db1, 0x2cd, 0x1, 0x0);
        gbc.writeMem(0x78ff, { 0xd5 });
        gbc.writeMem(0x841e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x841e);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841e), 0xb1);
        EXPECT(gbc.readMem(0x841f), 0x3d);
        // D5 0195
        gbc.setState(0xcaeb, 0xcee4, 0x8160, 0xfb65, 0xac33, 0xb166, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xd5 });
        gbc.writeMem(0xcee2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcee2);
        EXPECT(gbc.pc(), 0xcaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaeb), 0xd5);
        EXPECT(gbc.readMem(0xcee2), 0x33);
        EXPECT(gbc.readMem(0xcee3), 0xac);
        // D5 0196
        gbc.setState(0x4b5d, 0xc6f9, 0x2cb0, 0xf491, 0xd28d, 0xfe48, 0x0, 0x1);
        gbc.writeMem(0x4b5d, { 0xd5 });
        gbc.writeMem(0xc6f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0x4b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f7), 0x8d);
        EXPECT(gbc.readMem(0xc6f8), 0xd2);
        // D5 0197
        gbc.setState(0x182a, 0x82c6, 0xc50, 0x1877, 0x9ca, 0x9b17, 0x0, 0x1);
        gbc.writeMem(0x182a, { 0xd5 });
        gbc.writeMem(0x82c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x82c4);
        EXPECT(gbc.pc(), 0x182b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c4), 0xca);
        EXPECT(gbc.readMem(0x82c5), 0x9);
        // D5 019C
        gbc.setState(0x9d32, 0xd86b, 0x57c0, 0x81b1, 0xf61e, 0x327a, 0x1, 0x0);
        gbc.writeMem(0x9d32, { 0xd5 });
        gbc.writeMem(0xd869, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0x9d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d32), 0xd5);
        EXPECT(gbc.readMem(0xd869), 0x1e);
        EXPECT(gbc.readMem(0xd86a), 0xf6);
        // D5 019D
        gbc.setState(0xa7b4, 0xab9f, 0x8a30, 0x39e3, 0xb3b0, 0x7a0b, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0xd5 });
        gbc.writeMem(0xab9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xab9d);
        EXPECT(gbc.pc(), 0xa7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b4), 0xd5);
        EXPECT(gbc.readMem(0xab9d), 0xb0);
        EXPECT(gbc.readMem(0xab9e), 0xb3);
        // D5 019F
        gbc.setState(0x673f, 0xc08b, 0x3e70, 0x975b, 0xe094, 0xe37f, 0x1, 0x0);
        gbc.writeMem(0x673f, { 0xd5 });
        gbc.writeMem(0xc089, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc089);
        EXPECT(gbc.pc(), 0x6740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc089), 0x94);
        EXPECT(gbc.readMem(0xc08a), 0xe0);
        // D5 01A6
        gbc.setState(0x5e9f, 0xda2a, 0xe9b0, 0x4699, 0xefb3, 0x99ca, 0x1, 0x1);
        gbc.writeMem(0x5e9f, { 0xd5 });
        gbc.writeMem(0xda28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xda28);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda28), 0xb3);
        EXPECT(gbc.readMem(0xda29), 0xef);
        // D5 01A8
        gbc.setState(0xbc15, 0xafd9, 0xbcc0, 0x7ade, 0x96ab, 0x7203, 0x1, 0x0);
        gbc.writeMem(0xafd7, { 0x0, 0x0 });
        gbc.writeMem(0xbc15, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xafd7);
        EXPECT(gbc.pc(), 0xbc16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd7), 0xab);
        EXPECT(gbc.readMem(0xafd8), 0x96);
        EXPECT(gbc.readMem(0xbc15), 0xd5);
        // D5 01AA
        gbc.setState(0x99b1, 0xca62, 0xe3d0, 0x6418, 0x71d0, 0x7527, 0x0, 0x1);
        gbc.writeMem(0x99b1, { 0xd5 });
        gbc.writeMem(0xca60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xca60);
        EXPECT(gbc.pc(), 0x99b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b1), 0xd5);
        EXPECT(gbc.readMem(0xca60), 0xd0);
        EXPECT(gbc.readMem(0xca61), 0x71);
        // D5 01AD
        gbc.setState(0x4604, 0xc311, 0x7f90, 0xe9a8, 0x225, 0xad36, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0xd5 });
        gbc.writeMem(0xc30f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc30f);
        EXPECT(gbc.pc(), 0x4605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30f), 0x25);
        EXPECT(gbc.readMem(0xc310), 0x2);
        // D5 01AE
        gbc.setState(0x5988, 0xd9d7, 0x9fe0, 0x54d7, 0x1d2a, 0xfecc, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xd5 });
        gbc.writeMem(0xd9d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd9d5);
        EXPECT(gbc.pc(), 0x5989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d5), 0x2a);
        EXPECT(gbc.readMem(0xd9d6), 0x1d);
        // D5 01B2
        gbc.setState(0x92e4, 0xd67c, 0x5ac0, 0x223e, 0x4bab, 0x1f85, 0x0, 0x0);
        gbc.writeMem(0x92e4, { 0xd5 });
        gbc.writeMem(0xd67a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd67a);
        EXPECT(gbc.pc(), 0x92e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e4), 0xd5);
        EXPECT(gbc.readMem(0xd67a), 0xab);
        EXPECT(gbc.readMem(0xd67b), 0x4b);
        // D5 01B6
        gbc.setState(0x86e0, 0xb89e, 0xbb00, 0xb52d, 0xea9e, 0x52e2, 0x1, 0x0);
        gbc.writeMem(0x86e0, { 0xd5 });
        gbc.writeMem(0xb89c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb89c);
        EXPECT(gbc.pc(), 0x86e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e0), 0xd5);
        EXPECT(gbc.readMem(0xb89c), 0x9e);
        EXPECT(gbc.readMem(0xb89d), 0xea);
        // D5 01B7
        gbc.setState(0x82fb, 0xbcac, 0x9890, 0xe8f2, 0x5a31, 0xab86, 0x1, 0x0);
        gbc.writeMem(0x82fb, { 0xd5 });
        gbc.writeMem(0xbcaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbcaa);
        EXPECT(gbc.pc(), 0x82fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fb), 0xd5);
        EXPECT(gbc.readMem(0xbcaa), 0x31);
        EXPECT(gbc.readMem(0xbcab), 0x5a);
        // D5 01B9
        gbc.setState(0x7cd6, 0x82d5, 0x8550, 0xd6b0, 0x4764, 0x1c36, 0x1, 0x0);
        gbc.writeMem(0x7cd6, { 0xd5 });
        gbc.writeMem(0x82d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0x7cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d3), 0x64);
        EXPECT(gbc.readMem(0x82d4), 0x47);
        // D5 01BB
        gbc.setState(0xa14d, 0x8648, 0xc0, 0xf4d1, 0xf0dd, 0x88f7, 0x0, 0x0);
        gbc.writeMem(0x8646, { 0x0, 0x0 });
        gbc.writeMem(0xa14d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8646);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8646), 0xdd);
        EXPECT(gbc.readMem(0x8647), 0xf0);
        EXPECT(gbc.readMem(0xa14d), 0xd5);
        // D5 01BE
        gbc.setState(0x4638, 0x948e, 0x200, 0x5643, 0xd2b0, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0x4638, { 0xd5 });
        gbc.writeMem(0x948c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x948c);
        EXPECT(gbc.pc(), 0x4639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948c), 0xb0);
        EXPECT(gbc.readMem(0x948d), 0xd2);
        // D5 01C3
        gbc.setState(0x4608, 0x8a46, 0x9800, 0xd6ea, 0x526e, 0xd30e, 0x0, 0x0);
        gbc.writeMem(0x4608, { 0xd5 });
        gbc.writeMem(0x8a44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8a44);
        EXPECT(gbc.pc(), 0x4609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a44), 0x6e);
        EXPECT(gbc.readMem(0x8a45), 0x52);
        // D5 01C4
        gbc.setState(0x8bf3, 0xb33c, 0xef90, 0x313a, 0x7b46, 0x3e0e, 0x0, 0x0);
        gbc.writeMem(0x8bf3, { 0xd5 });
        gbc.writeMem(0xb33a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb33a);
        EXPECT(gbc.pc(), 0x8bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf3), 0xd5);
        EXPECT(gbc.readMem(0xb33a), 0x46);
        EXPECT(gbc.readMem(0xb33b), 0x7b);
        // D5 01C5
        gbc.setState(0x3602, 0xefa4, 0x2c60, 0xf965, 0x4415, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0x3602, { 0xd5 });
        gbc.writeMem(0xefa2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xefa2);
        EXPECT(gbc.pc(), 0x3603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa2), 0x15);
        EXPECT(gbc.readMem(0xefa3), 0x44);
        // D5 01C6
        gbc.setState(0x587e, 0xc939, 0x1d00, 0xdf3e, 0x5777, 0x285a, 0x0, 0x0);
        gbc.writeMem(0x587e, { 0xd5 });
        gbc.writeMem(0xc937, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc937);
        EXPECT(gbc.pc(), 0x587f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc937), 0x77);
        EXPECT(gbc.readMem(0xc938), 0x57);
        // D5 01C7
        gbc.setState(0x7eb1, 0x957b, 0xacd0, 0x9b57, 0x143a, 0x4402, 0x0, 0x1);
        gbc.writeMem(0x7eb1, { 0xd5 });
        gbc.writeMem(0x9579, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9579);
        EXPECT(gbc.pc(), 0x7eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9579), 0x3a);
        EXPECT(gbc.readMem(0x957a), 0x14);
        // D5 01C9
        gbc.setState(0x96bf, 0x9d7c, 0x7fa0, 0x12ba, 0x13c2, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0x96bf, { 0xd5 });
        gbc.writeMem(0x9d7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9d7a);
        EXPECT(gbc.pc(), 0x96c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96bf), 0xd5);
        EXPECT(gbc.readMem(0x9d7a), 0xc2);
        EXPECT(gbc.readMem(0x9d7b), 0x13);
        // D5 01CA
        gbc.setState(0x6a0e, 0x9184, 0x3f0, 0xdbef, 0x1015, 0x2e34, 0x1, 0x1);
        gbc.writeMem(0x6a0e, { 0xd5 });
        gbc.writeMem(0x9182, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9182);
        EXPECT(gbc.pc(), 0x6a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9182), 0x15);
        EXPECT(gbc.readMem(0x9183), 0x10);
        // D5 01D1
        gbc.setState(0xe159, 0xeec7, 0x6680, 0x8e37, 0xbd8f, 0x1774, 0x0, 0x1);
        gbc.writeMem(0xe159, { 0xd5 });
        gbc.writeMem(0xeec5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xeec5);
        EXPECT(gbc.pc(), 0xe15a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe159), 0xd5);
        EXPECT(gbc.readMem(0xeec5), 0x8f);
        EXPECT(gbc.readMem(0xeec6), 0xbd);
        // D5 01D5
        gbc.setState(0x6a61, 0xd577, 0x7390, 0xf077, 0x88d1, 0xcd0, 0x0, 0x1);
        gbc.writeMem(0x6a61, { 0xd5 });
        gbc.writeMem(0xd575, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd575);
        EXPECT(gbc.pc(), 0x6a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd575), 0xd1);
        EXPECT(gbc.readMem(0xd576), 0x88);
        // D5 01D6
        gbc.setState(0x6ed1, 0xebf1, 0x6230, 0x2d12, 0x857b, 0x7964, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xd5 });
        gbc.writeMem(0xebef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xebef);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebef), 0x7b);
        EXPECT(gbc.readMem(0xebf0), 0x85);
        // D5 01D9
        gbc.setState(0x444d, 0xb354, 0xae30, 0x546f, 0x2c98, 0xb8fe, 0x0, 0x1);
        gbc.writeMem(0x444d, { 0xd5 });
        gbc.writeMem(0xb352, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb352);
        EXPECT(gbc.pc(), 0x444e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb352), 0x98);
        EXPECT(gbc.readMem(0xb353), 0x2c);
        // D5 01DA
        gbc.setState(0x2f90, 0xd0fc, 0xe150, 0x3b9a, 0x287a, 0xaafe, 0x0, 0x0);
        gbc.writeMem(0x2f90, { 0xd5 });
        gbc.writeMem(0xd0fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd0fa);
        EXPECT(gbc.pc(), 0x2f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fa), 0x7a);
        EXPECT(gbc.readMem(0xd0fb), 0x28);
        // D5 01DC
        gbc.setState(0x2a16, 0xe7ec, 0x8bf0, 0x12e3, 0x6736, 0x9c97, 0x0, 0x1);
        gbc.writeMem(0x2a16, { 0xd5 });
        gbc.writeMem(0xe7ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe7ea);
        EXPECT(gbc.pc(), 0x2a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ea), 0x36);
        EXPECT(gbc.readMem(0xe7eb), 0x67);
        // D5 01DE
        gbc.setState(0x57f1, 0xd979, 0x6db0, 0x8eed, 0xa9d1, 0xad28, 0x1, 0x1);
        gbc.writeMem(0x57f1, { 0xd5 });
        gbc.writeMem(0xd977, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd977);
        EXPECT(gbc.pc(), 0x57f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd977), 0xd1);
        EXPECT(gbc.readMem(0xd978), 0xa9);
        // D5 01E4
        gbc.setState(0x2ca1, 0x8eaf, 0xd760, 0x12ad, 0x3b43, 0x889f, 0x1, 0x1);
        gbc.writeMem(0x2ca1, { 0xd5 });
        gbc.writeMem(0x8ead, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8ead);
        EXPECT(gbc.pc(), 0x2ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ead), 0x43);
        EXPECT(gbc.readMem(0x8eae), 0x3b);
        // D5 01E7
        gbc.setState(0x4790, 0xbed3, 0xd670, 0xa508, 0x47fb, 0xa09e, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0xd5 });
        gbc.writeMem(0xbed1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbed1);
        EXPECT(gbc.pc(), 0x4791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed1), 0xfb);
        EXPECT(gbc.readMem(0xbed2), 0x47);
        // D5 01E9
        gbc.setState(0xa18f, 0xec63, 0x7aa0, 0xc6af, 0xbefa, 0x989e, 0x0, 0x0);
        gbc.writeMem(0xa18f, { 0xd5 });
        gbc.writeMem(0xec61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xec61);
        EXPECT(gbc.pc(), 0xa190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18f), 0xd5);
        EXPECT(gbc.readMem(0xec61), 0xfa);
        EXPECT(gbc.readMem(0xec62), 0xbe);
        // D5 01EA
        gbc.setState(0x4cad, 0xb7fc, 0xeca0, 0x632b, 0xf7fb, 0x191d, 0x0, 0x1);
        gbc.writeMem(0x4cad, { 0xd5 });
        gbc.writeMem(0xb7fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb7fa);
        EXPECT(gbc.pc(), 0x4cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fa), 0xfb);
        EXPECT(gbc.readMem(0xb7fb), 0xf7);
        // D5 01EB
        gbc.setState(0xe7bf, 0xd8f5, 0x3590, 0x4a5b, 0xef5f, 0x1f8c, 0x0, 0x1);
        gbc.writeMem(0xd8f3, { 0x0, 0x0 });
        gbc.writeMem(0xe7bf, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd8f3);
        EXPECT(gbc.pc(), 0xe7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f3), 0x5f);
        EXPECT(gbc.readMem(0xd8f4), 0xef);
        EXPECT(gbc.readMem(0xe7bf), 0xd5);
        // D5 01EF
        gbc.setState(0x5dda, 0xbfe0, 0x3650, 0xa433, 0xdce8, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0x5dda, { 0xd5 });
        gbc.writeMem(0xbfde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbfde);
        EXPECT(gbc.pc(), 0x5ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0xe8);
        EXPECT(gbc.readMem(0xbfdf), 0xdc);
        // D5 01F1
        gbc.setState(0x89e0, 0x9152, 0x6660, 0xc1e1, 0x3f7c, 0xd4e6, 0x0, 0x1);
        gbc.writeMem(0x89e0, { 0xd5 });
        gbc.writeMem(0x9150, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9150);
        EXPECT(gbc.pc(), 0x89e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e0), 0xd5);
        EXPECT(gbc.readMem(0x9150), 0x7c);
        EXPECT(gbc.readMem(0x9151), 0x3f);
        // D5 01F4
        gbc.setState(0x349e, 0xc8a9, 0xce50, 0x9a1c, 0x5018, 0xea94, 0x0, 0x1);
        gbc.writeMem(0x349e, { 0xd5 });
        gbc.writeMem(0xc8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc8a7);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a7), 0x18);
        EXPECT(gbc.readMem(0xc8a8), 0x50);
        // D5 01F5
        gbc.setState(0x38b6, 0xd118, 0x570, 0xcd2e, 0xd030, 0x4e28, 0x0, 0x1);
        gbc.writeMem(0x38b6, { 0xd5 });
        gbc.writeMem(0xd116, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd116);
        EXPECT(gbc.pc(), 0x38b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd116), 0x30);
        EXPECT(gbc.readMem(0xd117), 0xd0);
        // D5 01F7
        gbc.setState(0x4906, 0xb3fe, 0x9da0, 0x586, 0x82bf, 0x559d, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0xd5 });
        gbc.writeMem(0xb3fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb3fc);
        EXPECT(gbc.pc(), 0x4907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fc), 0xbf);
        EXPECT(gbc.readMem(0xb3fd), 0x82);
        // D5 01F8
        gbc.setState(0x3dc7, 0x8b95, 0xa040, 0x7601, 0x15da, 0xd338, 0x0, 0x1);
        gbc.writeMem(0x3dc7, { 0xd5 });
        gbc.writeMem(0x8b93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8b93);
        EXPECT(gbc.pc(), 0x3dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b93), 0xda);
        EXPECT(gbc.readMem(0x8b94), 0x15);
        // D5 01FC
        gbc.setState(0xb64, 0xd396, 0x4e30, 0x8c73, 0xbd16, 0x5043, 0x0, 0x0);
        gbc.writeMem(0xb64, { 0xd5 });
        gbc.writeMem(0xd394, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd394);
        EXPECT(gbc.pc(), 0xb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd394), 0x16);
        EXPECT(gbc.readMem(0xd395), 0xbd);
        // D5 01FD
        gbc.setState(0xafa8, 0xc2c0, 0x6a0, 0xab79, 0xc081, 0xbd22, 0x0, 0x0);
        gbc.writeMem(0xafa8, { 0xd5 });
        gbc.writeMem(0xc2be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc2be);
        EXPECT(gbc.pc(), 0xafa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa8), 0xd5);
        EXPECT(gbc.readMem(0xc2be), 0x81);
        EXPECT(gbc.readMem(0xc2bf), 0xc0);
        // D5 0200
        gbc.setState(0x218f, 0x9bf3, 0xedd0, 0xec5b, 0xf45f, 0x26f4, 0x0, 0x1);
        gbc.writeMem(0x218f, { 0xd5 });
        gbc.writeMem(0x9bf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf1), 0x5f);
        EXPECT(gbc.readMem(0x9bf2), 0xf4);
        // D5 0202
        gbc.setState(0x4cbb, 0xf7b3, 0x16e0, 0x372f, 0x68c5, 0xcaaf, 0x1, 0x0);
        gbc.writeMem(0x4cbb, { 0xd5 });
        gbc.writeMem(0xf7b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf7b1);
        EXPECT(gbc.pc(), 0x4cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7b1), 0xc5);
        EXPECT(gbc.readMem(0xf7b2), 0x68);
        // D5 0205
        gbc.setState(0x4a72, 0xda75, 0x86d0, 0xa0b2, 0xa28b, 0x5a31, 0x0, 0x0);
        gbc.writeMem(0x4a72, { 0xd5 });
        gbc.writeMem(0xda73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xda73);
        EXPECT(gbc.pc(), 0x4a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda73), 0x8b);
        EXPECT(gbc.readMem(0xda74), 0xa2);
        // D5 0206
        gbc.setState(0x179e, 0x8cfb, 0xfce0, 0x95b2, 0x9820, 0x3cb0, 0x1, 0x0);
        gbc.writeMem(0x179e, { 0xd5 });
        gbc.writeMem(0x8cf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0x179f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf9), 0x20);
        EXPECT(gbc.readMem(0x8cfa), 0x98);
        // D5 0207
        gbc.setState(0xacc8, 0x9f37, 0x7e60, 0x60e1, 0xc025, 0x662d, 0x0, 0x1);
        gbc.writeMem(0x9f35, { 0x0, 0x0 });
        gbc.writeMem(0xacc8, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0xacc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f35), 0x25);
        EXPECT(gbc.readMem(0x9f36), 0xc0);
        EXPECT(gbc.readMem(0xacc8), 0xd5);
        // D5 020A
        gbc.setState(0x40b, 0x9678, 0xf220, 0x42c2, 0x1701, 0x700e, 0x0, 0x1);
        gbc.writeMem(0x40b, { 0xd5 });
        gbc.writeMem(0x9676, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9676);
        EXPECT(gbc.pc(), 0x40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0x1);
        EXPECT(gbc.readMem(0x9677), 0x17);
        // D5 020B
        gbc.setState(0x3f58, 0x917f, 0x19a0, 0xe703, 0xa67a, 0xc68, 0x1, 0x0);
        gbc.writeMem(0x3f58, { 0xd5 });
        gbc.writeMem(0x917d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x917d);
        EXPECT(gbc.pc(), 0x3f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917d), 0x7a);
        EXPECT(gbc.readMem(0x917e), 0xa6);
        // D5 020D
        gbc.setState(0x696c, 0xb88a, 0xb640, 0xd1f1, 0x1bda, 0x849f, 0x1, 0x0);
        gbc.writeMem(0x696c, { 0xd5 });
        gbc.writeMem(0xb888, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb888);
        EXPECT(gbc.pc(), 0x696d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb888), 0xda);
        EXPECT(gbc.readMem(0xb889), 0x1b);
        // D5 020F
        gbc.setState(0x915e, 0xf551, 0x3620, 0x447f, 0xd164, 0x950c, 0x0, 0x1);
        gbc.writeMem(0x915e, { 0xd5 });
        gbc.writeMem(0xf54f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf54f);
        EXPECT(gbc.pc(), 0x915f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915e), 0xd5);
        EXPECT(gbc.readMem(0xf54f), 0x64);
        EXPECT(gbc.readMem(0xf550), 0xd1);
        // D5 0210
        gbc.setState(0x38bf, 0xfe5c, 0xeec0, 0xb8a4, 0xdc4a, 0xd22d, 0x0, 0x1);
        gbc.writeMem(0x38bf, { 0xd5 });
        gbc.writeMem(0xfe5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfe5a);
        EXPECT(gbc.pc(), 0x38c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe5a), 0x4a);
        EXPECT(gbc.readMem(0xfe5b), 0xdc);
        // D5 0215
        gbc.setState(0x7723, 0xf403, 0xae50, 0xabb5, 0x9d03, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x7723, { 0xd5 });
        gbc.writeMem(0xf401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0x7724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf401), 0x3);
        EXPECT(gbc.readMem(0xf402), 0x9d);
        // D5 0217
        gbc.setState(0x2aa9, 0xee25, 0xa8b0, 0x6f2, 0x9d2a, 0xfa8a, 0x0, 0x1);
        gbc.writeMem(0x2aa9, { 0xd5 });
        gbc.writeMem(0xee23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xee23);
        EXPECT(gbc.pc(), 0x2aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee23), 0x2a);
        EXPECT(gbc.readMem(0xee24), 0x9d);
        // D5 0218
        gbc.setState(0xb1a0, 0x8b23, 0xb360, 0xeded, 0xf7ac, 0x3b8f, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0x0, 0x0 });
        gbc.writeMem(0xb1a0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0xb1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b21), 0xac);
        EXPECT(gbc.readMem(0x8b22), 0xf7);
        EXPECT(gbc.readMem(0xb1a0), 0xd5);
        // D5 0219
        gbc.setState(0xda3c, 0xbf90, 0x28a0, 0x83a, 0x4407, 0xc075, 0x1, 0x1);
        gbc.writeMem(0xbf8e, { 0x0, 0x0 });
        gbc.writeMem(0xda3c, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbf8e);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8e), 0x7);
        EXPECT(gbc.readMem(0xbf8f), 0x44);
        EXPECT(gbc.readMem(0xda3c), 0xd5);
        // D5 021A
        gbc.setState(0xa2b9, 0x9b02, 0x1770, 0x510e, 0x20d, 0x2230, 0x1, 0x1);
        gbc.writeMem(0x9b00, { 0x0, 0x0 });
        gbc.writeMem(0xa2b9, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0xa2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b00), 0xd);
        EXPECT(gbc.readMem(0x9b01), 0x2);
        EXPECT(gbc.readMem(0xa2b9), 0xd5);
        // D5 021D
        gbc.setState(0xe6, 0x8009, 0x72d0, 0x3da6, 0xd955, 0x888a, 0x0, 0x0);
        gbc.writeMem(0xe6, { 0xd5 });
        gbc.writeMem(0x8007, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8007);
        EXPECT(gbc.pc(), 0xe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8007), 0x55);
        EXPECT(gbc.readMem(0x8008), 0xd9);
        // D5 021E
        gbc.setState(0x6e75, 0x9915, 0x6b50, 0xf940, 0xaf1c, 0xe882, 0x0, 0x1);
        gbc.writeMem(0x6e75, { 0xd5 });
        gbc.writeMem(0x9913, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9913);
        EXPECT(gbc.pc(), 0x6e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9913), 0x1c);
        EXPECT(gbc.readMem(0x9914), 0xaf);
        // D5 021F
        gbc.setState(0x7edb, 0xf331, 0x4240, 0xed0e, 0x3225, 0x498a, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xd5 });
        gbc.writeMem(0xf32f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf32f);
        EXPECT(gbc.pc(), 0x7edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf32f), 0x25);
        EXPECT(gbc.readMem(0xf330), 0x32);
        // D5 0220
        gbc.setState(0x3e2e, 0xf014, 0x5450, 0x14d8, 0xe07f, 0x5834, 0x1, 0x1);
        gbc.writeMem(0x3e2e, { 0xd5 });
        gbc.writeMem(0xf012, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf012);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf012), 0x7f);
        EXPECT(gbc.readMem(0xf013), 0xe0);
        // D5 0222
        gbc.setState(0xc749, 0x9317, 0x49a0, 0x6ab8, 0x8eab, 0x21e0, 0x1, 0x1);
        gbc.writeMem(0x9315, { 0x0, 0x0 });
        gbc.writeMem(0xc749, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9315);
        EXPECT(gbc.pc(), 0xc74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9315), 0xab);
        EXPECT(gbc.readMem(0x9316), 0x8e);
        EXPECT(gbc.readMem(0xc749), 0xd5);
        // D5 0223
        gbc.setState(0x3a07, 0xf586, 0xd680, 0xece3, 0xb372, 0xeeae, 0x0, 0x1);
        gbc.writeMem(0x3a07, { 0xd5 });
        gbc.writeMem(0xf584, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf584);
        EXPECT(gbc.pc(), 0x3a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf584), 0x72);
        EXPECT(gbc.readMem(0xf585), 0xb3);
        // D5 0224
        gbc.setState(0x45e2, 0xf17c, 0xe3e0, 0xf77c, 0xb5a2, 0xd999, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0xd5 });
        gbc.writeMem(0xf17a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0x45e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf17a), 0xa2);
        EXPECT(gbc.readMem(0xf17b), 0xb5);
        // D5 0227
        gbc.setState(0x98be, 0xceb8, 0xa300, 0xe71e, 0x3cd5, 0x4a05, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xd5 });
        gbc.writeMem(0xceb6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xceb6);
        EXPECT(gbc.pc(), 0x98bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xd5);
        EXPECT(gbc.readMem(0xceb6), 0xd5);
        EXPECT(gbc.readMem(0xceb7), 0x3c);
        // D5 022B
        gbc.setState(0xb1ee, 0xb242, 0x9300, 0x4bf8, 0x29c5, 0x19de, 0x1, 0x1);
        gbc.writeMem(0xb1ee, { 0xd5 });
        gbc.writeMem(0xb240, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb240);
        EXPECT(gbc.pc(), 0xb1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ee), 0xd5);
        EXPECT(gbc.readMem(0xb240), 0xc5);
        EXPECT(gbc.readMem(0xb241), 0x29);
        // D5 022D
        gbc.setState(0x170, 0xff6f, 0x38b0, 0xde05, 0x4ce3, 0x798c, 0x1, 0x1);
        gbc.writeMem(0x170, { 0xd5 });
        gbc.writeMem(0xff6d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xff6d);
        EXPECT(gbc.pc(), 0x171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff6d), 0xe3);
        EXPECT(gbc.readMem(0xff6e), 0x4c);
        // D5 0230
        gbc.setState(0xa0d9, 0xa8a9, 0x4fb0, 0x80e2, 0xfb2, 0xfb7f, 0x0, 0x1);
        gbc.writeMem(0xa0d9, { 0xd5 });
        gbc.writeMem(0xa8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa8a7);
        EXPECT(gbc.pc(), 0xa0da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d9), 0xd5);
        EXPECT(gbc.readMem(0xa8a7), 0xb2);
        EXPECT(gbc.readMem(0xa8a8), 0xf);
        // D5 0231
        gbc.setState(0xb722, 0xab4e, 0xa690, 0x521f, 0x51e5, 0x591d, 0x1, 0x1);
        gbc.writeMem(0xab4c, { 0x0, 0x0 });
        gbc.writeMem(0xb722, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xab4c);
        EXPECT(gbc.pc(), 0xb723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4c), 0xe5);
        EXPECT(gbc.readMem(0xab4d), 0x51);
        EXPECT(gbc.readMem(0xb722), 0xd5);
        // D5 0232
        gbc.setState(0x79e2, 0x858a, 0x6970, 0x46e8, 0x4ea9, 0xa39f, 0x1, 0x0);
        gbc.writeMem(0x79e2, { 0xd5 });
        gbc.writeMem(0x8588, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8588);
        EXPECT(gbc.pc(), 0x79e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8588), 0xa9);
        EXPECT(gbc.readMem(0x8589), 0x4e);
        // D5 0233
        gbc.setState(0xceaa, 0xe5ff, 0xeee0, 0x2de, 0xfa51, 0x567e, 0x1, 0x0);
        gbc.writeMem(0xceaa, { 0xd5 });
        gbc.writeMem(0xe5fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0xceab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xd5);
        EXPECT(gbc.readMem(0xe5fd), 0x51);
        EXPECT(gbc.readMem(0xe5fe), 0xfa);
        // D5 0234
        gbc.setState(0xe2ae, 0x84bb, 0xfe20, 0xb25a, 0x1466, 0xc41f, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0x0, 0x0 });
        gbc.writeMem(0xe2ae, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x84b9);
        EXPECT(gbc.pc(), 0xe2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b9), 0x66);
        EXPECT(gbc.readMem(0x84ba), 0x14);
        EXPECT(gbc.readMem(0xe2ae), 0xd5);
        // D5 0235
        gbc.setState(0xcb65, 0xb027, 0x23f0, 0x668f, 0xca86, 0xaf1, 0x0, 0x1);
        gbc.writeMem(0xb025, { 0x0, 0x0 });
        gbc.writeMem(0xcb65, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb025);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb025), 0x86);
        EXPECT(gbc.readMem(0xb026), 0xca);
        EXPECT(gbc.readMem(0xcb65), 0xd5);
        // D5 0236
        gbc.setState(0x341d, 0xd21c, 0x8a70, 0x2bc1, 0x1a61, 0xda01, 0x0, 0x1);
        gbc.writeMem(0x341d, { 0xd5 });
        gbc.writeMem(0xd21a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd21a);
        EXPECT(gbc.pc(), 0x341e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21a), 0x61);
        EXPECT(gbc.readMem(0xd21b), 0x1a);
        // D5 0238
        gbc.setState(0xaec4, 0xab13, 0xcae0, 0x36df, 0x20ea, 0x9e90, 0x0, 0x0);
        gbc.writeMem(0xab11, { 0x0, 0x0 });
        gbc.writeMem(0xaec4, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xab11);
        EXPECT(gbc.pc(), 0xaec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab11), 0xea);
        EXPECT(gbc.readMem(0xab12), 0x20);
        EXPECT(gbc.readMem(0xaec4), 0xd5);
        // D5 023B
        gbc.setState(0x560b, 0x9332, 0xc950, 0x77a7, 0x18dc, 0xf907, 0x1, 0x1);
        gbc.writeMem(0x560b, { 0xd5 });
        gbc.writeMem(0x9330, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0x560c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9330), 0xdc);
        EXPECT(gbc.readMem(0x9331), 0x18);
        // D5 023C
        gbc.setState(0x95d4, 0x88d4, 0xe3c0, 0xfa20, 0x8863, 0x6a41, 0x1, 0x1);
        gbc.writeMem(0x88d2, { 0x0, 0x0 });
        gbc.writeMem(0x95d4, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x88d2);
        EXPECT(gbc.pc(), 0x95d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d2), 0x63);
        EXPECT(gbc.readMem(0x88d3), 0x88);
        EXPECT(gbc.readMem(0x95d4), 0xd5);
        // D5 023E
        gbc.setState(0x1b7a, 0xdd92, 0x6b20, 0x899f, 0x61c4, 0x66e2, 0x0, 0x1);
        gbc.writeMem(0x1b7a, { 0xd5 });
        gbc.writeMem(0xdd90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x1b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd90), 0xc4);
        EXPECT(gbc.readMem(0xdd91), 0x61);
        // D5 0241
        gbc.setState(0xd32f, 0xbe54, 0xfb50, 0x5816, 0x31ba, 0x77f2, 0x1, 0x1);
        gbc.writeMem(0xbe52, { 0x0, 0x0 });
        gbc.writeMem(0xd32f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbe52);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe52), 0xba);
        EXPECT(gbc.readMem(0xbe53), 0x31);
        EXPECT(gbc.readMem(0xd32f), 0xd5);
        // D5 0242
        gbc.setState(0xc16d, 0xae12, 0x9480, 0x48e7, 0xac07, 0xb92b, 0x0, 0x0);
        gbc.writeMem(0xae10, { 0x0, 0x0 });
        gbc.writeMem(0xc16d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xae10);
        EXPECT(gbc.pc(), 0xc16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae10), 0x7);
        EXPECT(gbc.readMem(0xae11), 0xac);
        EXPECT(gbc.readMem(0xc16d), 0xd5);
        // D5 0243
        gbc.setState(0xc401, 0xf7c9, 0x4250, 0x5288, 0x8989, 0x59eb, 0x0, 0x1);
        gbc.writeMem(0xc401, { 0xd5 });
        gbc.writeMem(0xf7c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf7c7);
        EXPECT(gbc.pc(), 0xc402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc401), 0xd5);
        EXPECT(gbc.readMem(0xf7c7), 0x89);
        EXPECT(gbc.readMem(0xf7c8), 0x89);
        // D5 0244
        gbc.setState(0x2b30, 0x8379, 0xb200, 0x71ac, 0x6805, 0x5102, 0x1, 0x0);
        gbc.writeMem(0x2b30, { 0xd5 });
        gbc.writeMem(0x8377, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8377);
        EXPECT(gbc.pc(), 0x2b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8377), 0x5);
        EXPECT(gbc.readMem(0x8378), 0x68);
        // D5 0245
        gbc.setState(0xa23c, 0xf923, 0x8f00, 0x2437, 0x5b68, 0x8d08, 0x0, 0x0);
        gbc.writeMem(0xa23c, { 0xd5 });
        gbc.writeMem(0xf921, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf921);
        EXPECT(gbc.pc(), 0xa23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa23c), 0xd5);
        EXPECT(gbc.readMem(0xf921), 0x68);
        EXPECT(gbc.readMem(0xf922), 0x5b);
        // D5 0246
        gbc.setState(0x65c, 0xcbbf, 0x4b80, 0x162, 0x30b9, 0xffff, 0x1, 0x1);
        gbc.writeMem(0x65c, { 0xd5 });
        gbc.writeMem(0xcbbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcbbd);
        EXPECT(gbc.pc(), 0x65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbbd), 0xb9);
        EXPECT(gbc.readMem(0xcbbe), 0x30);
        // D5 0248
        gbc.setState(0x5137, 0xd27f, 0xb280, 0x915b, 0x2ff5, 0x8243, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xd5 });
        gbc.writeMem(0xd27d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0x5138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27d), 0xf5);
        EXPECT(gbc.readMem(0xd27e), 0x2f);
        // D5 024A
        gbc.setState(0xc7ff, 0xa874, 0x8090, 0x465f, 0xd8d9, 0xff28, 0x0, 0x1);
        gbc.writeMem(0xa872, { 0x0, 0x0 });
        gbc.writeMem(0xc7ff, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa872);
        EXPECT(gbc.pc(), 0xc800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa872), 0xd9);
        EXPECT(gbc.readMem(0xa873), 0xd8);
        EXPECT(gbc.readMem(0xc7ff), 0xd5);
        // D5 024B
        gbc.setState(0x1e14, 0xc25c, 0x19d0, 0xd60e, 0x44ea, 0xb896, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xd5 });
        gbc.writeMem(0xc25a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc25a);
        EXPECT(gbc.pc(), 0x1e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25a), 0xea);
        EXPECT(gbc.readMem(0xc25b), 0x44);
        // D5 024D
        gbc.setState(0x868c, 0xfc0a, 0x70a0, 0x3be8, 0x381f, 0xf6fb, 0x0, 0x1);
        gbc.writeMem(0x868c, { 0xd5 });
        gbc.writeMem(0xfc08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfc08);
        EXPECT(gbc.pc(), 0x868d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0xd5);
        EXPECT(gbc.readMem(0xfc08), 0x1f);
        EXPECT(gbc.readMem(0xfc09), 0x38);
        // D5 024E
        gbc.setState(0x5a5b, 0xe271, 0xd260, 0xd78d, 0xc7b9, 0xc7a1, 0x1, 0x1);
        gbc.writeMem(0x5a5b, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe26f);
        EXPECT(gbc.pc(), 0x5a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26f), 0xb9);
        EXPECT(gbc.readMem(0xe270), 0xc7);
        // D5 024F
        gbc.setState(0x58e5, 0xe7f2, 0xc4e0, 0x7ed5, 0x8ad7, 0x48a2, 0x1, 0x1);
        gbc.writeMem(0x58e5, { 0xd5 });
        gbc.writeMem(0xe7f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe7f0);
        EXPECT(gbc.pc(), 0x58e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f0), 0xd7);
        EXPECT(gbc.readMem(0xe7f1), 0x8a);
        // D5 0251
        gbc.setState(0xe36a, 0xb2b3, 0xbd30, 0x5da4, 0x2692, 0xa186, 0x0, 0x1);
        gbc.writeMem(0xb2b1, { 0x0, 0x0 });
        gbc.writeMem(0xe36a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb2b1);
        EXPECT(gbc.pc(), 0xe36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b1), 0x92);
        EXPECT(gbc.readMem(0xb2b2), 0x26);
        EXPECT(gbc.readMem(0xe36a), 0xd5);
        // D5 0253
        gbc.setState(0xee3a, 0xe58e, 0x76a0, 0x9459, 0xaa17, 0xb148, 0x0, 0x0);
        gbc.writeMem(0xe58c, { 0x0, 0x0 });
        gbc.writeMem(0xee3a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe58c);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58c), 0x17);
        EXPECT(gbc.readMem(0xe58d), 0xaa);
        EXPECT(gbc.readMem(0xee3a), 0xd5);
        // D5 0254
        gbc.setState(0x9bc3, 0x9cbd, 0xed0, 0x39e2, 0x6c95, 0x1037, 0x0, 0x1);
        gbc.writeMem(0x9bc3, { 0xd5 });
        gbc.writeMem(0x9cbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9cbb);
        EXPECT(gbc.pc(), 0x9bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc3), 0xd5);
        EXPECT(gbc.readMem(0x9cbb), 0x95);
        EXPECT(gbc.readMem(0x9cbc), 0x6c);
        // D5 0257
        gbc.setState(0xa9c7, 0xa8c8, 0xe350, 0xb878, 0xd24d, 0x9eda, 0x0, 0x0);
        gbc.writeMem(0xa8c6, { 0x0, 0x0 });
        gbc.writeMem(0xa9c7, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa8c6);
        EXPECT(gbc.pc(), 0xa9c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c6), 0x4d);
        EXPECT(gbc.readMem(0xa8c7), 0xd2);
        EXPECT(gbc.readMem(0xa9c7), 0xd5);
        // D5 0258
        gbc.setState(0x4385, 0xbaea, 0x6fc0, 0xc082, 0x4358, 0x605a, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xd5 });
        gbc.writeMem(0xbae8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbae8);
        EXPECT(gbc.pc(), 0x4386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae8), 0x58);
        EXPECT(gbc.readMem(0xbae9), 0x43);
        // D5 0259
        gbc.setState(0xed39, 0x9834, 0xc400, 0xb58f, 0x8e3, 0xcd4, 0x0, 0x1);
        gbc.writeMem(0x9832, { 0x0, 0x0 });
        gbc.writeMem(0xed39, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9832);
        EXPECT(gbc.pc(), 0xed3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9832), 0xe3);
        EXPECT(gbc.readMem(0x9833), 0x8);
        EXPECT(gbc.readMem(0xed39), 0xd5);
        // D5 025C
        gbc.setState(0xc5ca, 0xb28a, 0x740, 0xd801, 0xe55d, 0x564, 0x0, 0x0);
        gbc.writeMem(0xb288, { 0x0, 0x0 });
        gbc.writeMem(0xc5ca, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb288);
        EXPECT(gbc.pc(), 0xc5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb288), 0x5d);
        EXPECT(gbc.readMem(0xb289), 0xe5);
        EXPECT(gbc.readMem(0xc5ca), 0xd5);
        // D5 0263
        gbc.setState(0x2bbd, 0x8148, 0x5a80, 0x4300, 0x75f0, 0x4d6, 0x1, 0x1);
        gbc.writeMem(0x2bbd, { 0xd5 });
        gbc.writeMem(0x8146, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8146);
        EXPECT(gbc.pc(), 0x2bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8146), 0xf0);
        EXPECT(gbc.readMem(0x8147), 0x75);
        // D5 0264
        gbc.setState(0x13f2, 0x9eba, 0x5120, 0x25cb, 0x5f9e, 0x1cd, 0x0, 0x0);
        gbc.writeMem(0x13f2, { 0xd5 });
        gbc.writeMem(0x9eb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9eb8);
        EXPECT(gbc.pc(), 0x13f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb8), 0x9e);
        EXPECT(gbc.readMem(0x9eb9), 0x5f);
        // D5 0266
        gbc.setState(0x5e69, 0xcf6a, 0xdd30, 0xf97, 0xb315, 0x5f1c, 0x0, 0x0);
        gbc.writeMem(0x5e69, { 0xd5 });
        gbc.writeMem(0xcf68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcf68);
        EXPECT(gbc.pc(), 0x5e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf68), 0x15);
        EXPECT(gbc.readMem(0xcf69), 0xb3);
        // D5 0268
        gbc.setState(0x14df, 0xd0a8, 0xc7a0, 0x49bc, 0x967c, 0x2a8c, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xd5 });
        gbc.writeMem(0xd0a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd0a6);
        EXPECT(gbc.pc(), 0x14e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a6), 0x7c);
        EXPECT(gbc.readMem(0xd0a7), 0x96);
        // D5 0269
        gbc.setState(0x1b82, 0xcff7, 0x1590, 0x166c, 0x2524, 0xa898, 0x1, 0x0);
        gbc.writeMem(0x1b82, { 0xd5 });
        gbc.writeMem(0xcff5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcff5);
        EXPECT(gbc.pc(), 0x1b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff5), 0x24);
        EXPECT(gbc.readMem(0xcff6), 0x25);
        // D5 026D
        gbc.setState(0xa575, 0xd0b2, 0xc800, 0xd4c6, 0x7a7c, 0xa04c, 0x0, 0x1);
        gbc.writeMem(0xa575, { 0xd5 });
        gbc.writeMem(0xd0b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd0b0);
        EXPECT(gbc.pc(), 0xa576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa575), 0xd5);
        EXPECT(gbc.readMem(0xd0b0), 0x7c);
        EXPECT(gbc.readMem(0xd0b1), 0x7a);
        // D5 026E
        gbc.setState(0xbdd9, 0xd447, 0x6e70, 0x5e66, 0x9007, 0x6e06, 0x1, 0x1);
        gbc.writeMem(0xbdd9, { 0xd5 });
        gbc.writeMem(0xd445, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0xbdda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd9), 0xd5);
        EXPECT(gbc.readMem(0xd445), 0x7);
        EXPECT(gbc.readMem(0xd446), 0x90);
        // D5 026F
        gbc.setState(0x1fc7, 0xf77c, 0x6020, 0xb864, 0x8748, 0x53fb, 0x0, 0x1);
        gbc.writeMem(0x1fc7, { 0xd5 });
        gbc.writeMem(0xf77a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf77a);
        EXPECT(gbc.pc(), 0x1fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf77a), 0x48);
        EXPECT(gbc.readMem(0xf77b), 0x87);
        // D5 0270
        gbc.setState(0x9631, 0xd653, 0x2860, 0x7b4b, 0x3bd2, 0xbd7b, 0x1, 0x1);
        gbc.writeMem(0x9631, { 0xd5 });
        gbc.writeMem(0xd651, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd651);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9631), 0xd5);
        EXPECT(gbc.readMem(0xd651), 0xd2);
        EXPECT(gbc.readMem(0xd652), 0x3b);
        // D5 0273
        gbc.setState(0x3f64, 0xf61f, 0x8200, 0xa853, 0x163f, 0xf613, 0x1, 0x0);
        gbc.writeMem(0x3f64, { 0xd5 });
        gbc.writeMem(0xf61d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf61d);
        EXPECT(gbc.pc(), 0x3f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf61d), 0x3f);
        EXPECT(gbc.readMem(0xf61e), 0x16);
        // D5 0277
        gbc.setState(0x6688, 0xd763, 0xabd0, 0x6743, 0x17fc, 0x748e, 0x0, 0x1);
        gbc.writeMem(0x6688, { 0xd5 });
        gbc.writeMem(0xd761, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd761);
        EXPECT(gbc.pc(), 0x6689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd761), 0xfc);
        EXPECT(gbc.readMem(0xd762), 0x17);
        // D5 0279
        gbc.setState(0x849f, 0x9fb4, 0xc480, 0x55f8, 0x9b27, 0xf8d3, 0x0, 0x0);
        gbc.writeMem(0x849f, { 0xd5 });
        gbc.writeMem(0x9fb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9fb2);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849f), 0xd5);
        EXPECT(gbc.readMem(0x9fb2), 0x27);
        EXPECT(gbc.readMem(0x9fb3), 0x9b);
        // D5 027B
        gbc.setState(0x48f3, 0xd646, 0xa060, 0x1455, 0xa340, 0x4615, 0x0, 0x1);
        gbc.writeMem(0x48f3, { 0xd5 });
        gbc.writeMem(0xd644, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd644);
        EXPECT(gbc.pc(), 0x48f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd644), 0x40);
        EXPECT(gbc.readMem(0xd645), 0xa3);
        // D5 027C
        gbc.setState(0x38d0, 0xa051, 0xd6a0, 0x91c2, 0xbd9a, 0x2a55, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0xd5 });
        gbc.writeMem(0xa04f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa04f);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04f), 0x9a);
        EXPECT(gbc.readMem(0xa050), 0xbd);
        // D5 027F
        gbc.setState(0xd22a, 0xcacf, 0xe090, 0xb3e3, 0x2d42, 0x2121, 0x0, 0x0);
        gbc.writeMem(0xcacd, { 0x0, 0x0 });
        gbc.writeMem(0xd22a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcacd);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcacd), 0x42);
        EXPECT(gbc.readMem(0xcace), 0x2d);
        EXPECT(gbc.readMem(0xd22a), 0xd5);
        // D5 0282
        gbc.setState(0x860a, 0xbbca, 0x11b0, 0x51d8, 0x876, 0xd415, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0xd5 });
        gbc.writeMem(0xbbc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbbc8);
        EXPECT(gbc.pc(), 0x860b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860a), 0xd5);
        EXPECT(gbc.readMem(0xbbc8), 0x76);
        EXPECT(gbc.readMem(0xbbc9), 0x8);
        // D5 0283
        gbc.setState(0x6e2c, 0xc1c8, 0xb610, 0xfb3b, 0xe147, 0x2b12, 0x0, 0x0);
        gbc.writeMem(0x6e2c, { 0xd5 });
        gbc.writeMem(0xc1c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc1c6);
        EXPECT(gbc.pc(), 0x6e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c6), 0x47);
        EXPECT(gbc.readMem(0xc1c7), 0xe1);
        // D5 0286
        gbc.setState(0x4dde, 0x93e3, 0x7400, 0x5cdc, 0x875b, 0x3ea5, 0x0, 0x1);
        gbc.writeMem(0x4dde, { 0xd5 });
        gbc.writeMem(0x93e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x93e1);
        EXPECT(gbc.pc(), 0x4ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e1), 0x5b);
        EXPECT(gbc.readMem(0x93e2), 0x87);
        // D5 0289
        gbc.setState(0xd2a, 0xb242, 0x5540, 0xc617, 0x2126, 0x3ac1, 0x1, 0x1);
        gbc.writeMem(0xd2a, { 0xd5 });
        gbc.writeMem(0xb240, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb240);
        EXPECT(gbc.pc(), 0xd2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0x26);
        EXPECT(gbc.readMem(0xb241), 0x21);
        // D5 028A
        gbc.setState(0x21ca, 0xbd8d, 0xcb20, 0xe6e2, 0x3bae, 0x1dc1, 0x1, 0x0);
        gbc.writeMem(0x21ca, { 0xd5 });
        gbc.writeMem(0xbd8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbd8b);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8b), 0xae);
        EXPECT(gbc.readMem(0xbd8c), 0x3b);
        // D5 028C
        gbc.setState(0x5cdf, 0x915b, 0xa0b0, 0x3d9c, 0x859d, 0x31cb, 0x0, 0x0);
        gbc.writeMem(0x5cdf, { 0xd5 });
        gbc.writeMem(0x9159, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9159);
        EXPECT(gbc.pc(), 0x5ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9159), 0x9d);
        EXPECT(gbc.readMem(0x915a), 0x85);
        // D5 028E
        gbc.setState(0x9244, 0xcdea, 0xad10, 0x54a0, 0x4243, 0x9481, 0x1, 0x0);
        gbc.writeMem(0x9244, { 0xd5 });
        gbc.writeMem(0xcde8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcde8);
        EXPECT(gbc.pc(), 0x9245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9244), 0xd5);
        EXPECT(gbc.readMem(0xcde8), 0x43);
        EXPECT(gbc.readMem(0xcde9), 0x42);
        // D5 0290
        gbc.setState(0x96b2, 0xfb08, 0xb080, 0x1f2b, 0xea03, 0xdc60, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xd5 });
        gbc.writeMem(0xfb06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfb06);
        EXPECT(gbc.pc(), 0x96b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b2), 0xd5);
        EXPECT(gbc.readMem(0xfb06), 0x3);
        EXPECT(gbc.readMem(0xfb07), 0xea);
        // D5 0292
        gbc.setState(0x119b, 0xcbf0, 0xd3d0, 0xdc, 0x7107, 0x1769, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xd5 });
        gbc.writeMem(0xcbee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcbee);
        EXPECT(gbc.pc(), 0x119c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbee), 0x7);
        EXPECT(gbc.readMem(0xcbef), 0x71);
        // D5 0293
        gbc.setState(0x693e, 0x9da2, 0x5160, 0xd6, 0xd3f4, 0x4b7a, 0x1, 0x1);
        gbc.writeMem(0x693e, { 0xd5 });
        gbc.writeMem(0x9da0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9da0);
        EXPECT(gbc.pc(), 0x693f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da0), 0xf4);
        EXPECT(gbc.readMem(0x9da1), 0xd3);
        // D5 0294
        gbc.setState(0x5609, 0xba8d, 0x3520, 0x9e96, 0x4de8, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x5609, { 0xd5 });
        gbc.writeMem(0xba8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0x560a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8b), 0xe8);
        EXPECT(gbc.readMem(0xba8c), 0x4d);
        // D5 0295
        gbc.setState(0xa2f4, 0x8dbf, 0xb660, 0xa4d4, 0x2097, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x8dbd, { 0x0, 0x0 });
        gbc.writeMem(0xa2f4, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8dbd);
        EXPECT(gbc.pc(), 0xa2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbd), 0x97);
        EXPECT(gbc.readMem(0x8dbe), 0x20);
        EXPECT(gbc.readMem(0xa2f4), 0xd5);
        // D5 0296
        gbc.setState(0xac16, 0xea8a, 0xc9c0, 0x1359, 0x9de, 0x9204, 0x1, 0x1);
        gbc.writeMem(0xac16, { 0xd5 });
        gbc.writeMem(0xea88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xea88);
        EXPECT(gbc.pc(), 0xac17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac16), 0xd5);
        EXPECT(gbc.readMem(0xea88), 0xde);
        EXPECT(gbc.readMem(0xea89), 0x9);
        // D5 0299
        gbc.setState(0x80e2, 0x94e8, 0x9890, 0xb19, 0x7b2, 0x3660, 0x1, 0x0);
        gbc.writeMem(0x80e2, { 0xd5 });
        gbc.writeMem(0x94e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x94e6);
        EXPECT(gbc.pc(), 0x80e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e2), 0xd5);
        EXPECT(gbc.readMem(0x94e6), 0xb2);
        EXPECT(gbc.readMem(0x94e7), 0x7);
        // D5 029B
        gbc.setState(0xe0e1, 0xe3a3, 0x46c0, 0xf609, 0x19d1, 0x214b, 0x1, 0x0);
        gbc.writeMem(0xe0e1, { 0xd5 });
        gbc.writeMem(0xe3a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe3a1);
        EXPECT(gbc.pc(), 0xe0e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e1), 0xd5);
        EXPECT(gbc.readMem(0xe3a1), 0xd1);
        EXPECT(gbc.readMem(0xe3a2), 0x19);
        // D5 029C
        gbc.setState(0x5e35, 0x877a, 0x9980, 0xf636, 0xbe79, 0xb8a9, 0x1, 0x1);
        gbc.writeMem(0x5e35, { 0xd5 });
        gbc.writeMem(0x8778, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8778);
        EXPECT(gbc.pc(), 0x5e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8778), 0x79);
        EXPECT(gbc.readMem(0x8779), 0xbe);
        // D5 029D
        gbc.setState(0xcb72, 0xc55a, 0xd4b0, 0x1a3c, 0x977c, 0x75a8, 0x1, 0x1);
        gbc.writeMem(0xc558, { 0x0, 0x0 });
        gbc.writeMem(0xcb72, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc558);
        EXPECT(gbc.pc(), 0xcb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc558), 0x7c);
        EXPECT(gbc.readMem(0xc559), 0x97);
        EXPECT(gbc.readMem(0xcb72), 0xd5);
        // D5 02A3
        gbc.setState(0x9882, 0x9a07, 0xac30, 0x27a3, 0x5505, 0x52c4, 0x1, 0x0);
        gbc.writeMem(0x9882, { 0xd5 });
        gbc.writeMem(0x9a05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9a05);
        EXPECT(gbc.pc(), 0x9883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9882), 0xd5);
        EXPECT(gbc.readMem(0x9a05), 0x5);
        EXPECT(gbc.readMem(0x9a06), 0x55);
        // D5 02A4
        gbc.setState(0xc91b, 0x8c80, 0xf520, 0xc068, 0xc738, 0x1d21, 0x1, 0x0);
        gbc.writeMem(0x8c7e, { 0x0, 0x0 });
        gbc.writeMem(0xc91b, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8c7e);
        EXPECT(gbc.pc(), 0xc91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7e), 0x38);
        EXPECT(gbc.readMem(0x8c7f), 0xc7);
        EXPECT(gbc.readMem(0xc91b), 0xd5);
        // D5 02A5
        gbc.setState(0xbc42, 0xd4c2, 0xab70, 0xa87e, 0x9c96, 0xaeb9, 0x0, 0x0);
        gbc.writeMem(0xbc42, { 0xd5 });
        gbc.writeMem(0xd4c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0xbc43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc42), 0xd5);
        EXPECT(gbc.readMem(0xd4c0), 0x96);
        EXPECT(gbc.readMem(0xd4c1), 0x9c);
        // D5 02A9
        gbc.setState(0x2cab, 0xc3c1, 0x7930, 0x4e05, 0xd3ac, 0xa43, 0x1, 0x1);
        gbc.writeMem(0x2cab, { 0xd5 });
        gbc.writeMem(0xc3bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc3bf);
        EXPECT(gbc.pc(), 0x2cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3bf), 0xac);
        EXPECT(gbc.readMem(0xc3c0), 0xd3);
        // D5 02AB
        gbc.setState(0x1d6, 0xf39b, 0x52d0, 0xb481, 0x8c2d, 0xb0b4, 0x1, 0x0);
        gbc.writeMem(0x1d6, { 0xd5 });
        gbc.writeMem(0xf399, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf399);
        EXPECT(gbc.pc(), 0x1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf399), 0x2d);
        EXPECT(gbc.readMem(0xf39a), 0x8c);
        // D5 02AE
        gbc.setState(0xfb5, 0x9067, 0xbfe0, 0x9325, 0xe056, 0x8823, 0x1, 0x0);
        gbc.writeMem(0xfb5, { 0xd5 });
        gbc.writeMem(0x9065, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9065);
        EXPECT(gbc.pc(), 0xfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9065), 0x56);
        EXPECT(gbc.readMem(0x9066), 0xe0);
        // D5 02AF
        gbc.setState(0xbcef, 0xac33, 0x2860, 0xed4a, 0x6ebe, 0x3ad3, 0x1, 0x1);
        gbc.writeMem(0xac31, { 0x0, 0x0 });
        gbc.writeMem(0xbcef, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xac31);
        EXPECT(gbc.pc(), 0xbcf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac31), 0xbe);
        EXPECT(gbc.readMem(0xac32), 0x6e);
        EXPECT(gbc.readMem(0xbcef), 0xd5);
        // D5 02B2
        gbc.setState(0x8620, 0xece9, 0x6070, 0xe9aa, 0xa667, 0xf4dd, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xd5 });
        gbc.writeMem(0xece7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xece7);
        EXPECT(gbc.pc(), 0x8621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8620), 0xd5);
        EXPECT(gbc.readMem(0xece7), 0x67);
        EXPECT(gbc.readMem(0xece8), 0xa6);
        // D5 02B3
        gbc.setState(0xcdcc, 0xe536, 0x9f40, 0x7a4b, 0x654d, 0xdc3f, 0x0, 0x0);
        gbc.writeMem(0xcdcc, { 0xd5 });
        gbc.writeMem(0xe534, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0xcdcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcc), 0xd5);
        EXPECT(gbc.readMem(0xe534), 0x4d);
        EXPECT(gbc.readMem(0xe535), 0x65);
        // D5 02B4
        gbc.setState(0xd381, 0xa832, 0x250, 0xf408, 0x92ad, 0x37f7, 0x0, 0x0);
        gbc.writeMem(0xa830, { 0x0, 0x0 });
        gbc.writeMem(0xd381, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa830);
        EXPECT(gbc.pc(), 0xd382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa830), 0xad);
        EXPECT(gbc.readMem(0xa831), 0x92);
        EXPECT(gbc.readMem(0xd381), 0xd5);
        // D5 02B5
        gbc.setState(0x7488, 0xee8b, 0x28f0, 0x1180, 0xfa09, 0xfaf, 0x0, 0x1);
        gbc.writeMem(0x7488, { 0xd5 });
        gbc.writeMem(0xee89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xee89);
        EXPECT(gbc.pc(), 0x7489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee89), 0x9);
        EXPECT(gbc.readMem(0xee8a), 0xfa);
        // D5 02B6
        gbc.setState(0x8000, 0xfac0, 0xb090, 0x9f98, 0xd461, 0xdf04, 0x1, 0x0);
        gbc.writeMem(0x8000, { 0xd5 });
        gbc.writeMem(0xfabe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfabe);
        EXPECT(gbc.pc(), 0x8001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8000), 0xd5);
        EXPECT(gbc.readMem(0xfabe), 0x61);
        EXPECT(gbc.readMem(0xfabf), 0xd4);
        // D5 02B7
        gbc.setState(0xd1bd, 0xda25, 0xb500, 0x322b, 0x6b00, 0x72c, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xd5 });
        gbc.writeMem(0xda23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xda23);
        EXPECT(gbc.pc(), 0xd1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bd), 0xd5);
        EXPECT(gbc.readMem(0xda23), 0x0);
        EXPECT(gbc.readMem(0xda24), 0x6b);
        // D5 02BB
        gbc.setState(0x82f4, 0xa12b, 0x6570, 0x3ae7, 0x926f, 0x43c8, 0x0, 0x0);
        gbc.writeMem(0x82f4, { 0xd5 });
        gbc.writeMem(0xa129, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa129);
        EXPECT(gbc.pc(), 0x82f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f4), 0xd5);
        EXPECT(gbc.readMem(0xa129), 0x6f);
        EXPECT(gbc.readMem(0xa12a), 0x92);
        // D5 02BC
        gbc.setState(0x644, 0xdc00, 0x2e0, 0xd037, 0xb86e, 0xa34, 0x0, 0x1);
        gbc.writeMem(0x644, { 0xd5 });
        gbc.writeMem(0xdbfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0x645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfe), 0x6e);
        EXPECT(gbc.readMem(0xdbff), 0xb8);
        // D5 02BE
        gbc.setState(0x6645, 0xc8ac, 0xf6c0, 0xc264, 0x7b4c, 0x31eb, 0x1, 0x0);
        gbc.writeMem(0x6645, { 0xd5 });
        gbc.writeMem(0xc8aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc8aa);
        EXPECT(gbc.pc(), 0x6646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8aa), 0x4c);
        EXPECT(gbc.readMem(0xc8ab), 0x7b);
        // D5 02C1
        gbc.setState(0x926c, 0xe19b, 0x2990, 0x103f, 0xb82e, 0x4f7a, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xd5 });
        gbc.writeMem(0xe199, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe199);
        EXPECT(gbc.pc(), 0x926d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926c), 0xd5);
        EXPECT(gbc.readMem(0xe199), 0x2e);
        EXPECT(gbc.readMem(0xe19a), 0xb8);
        // D5 02C3
        gbc.setState(0x38ee, 0xaedb, 0x6d60, 0x2c72, 0xb13, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x38ee, { 0xd5 });
        gbc.writeMem(0xaed9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x38ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed9), 0x13);
        EXPECT(gbc.readMem(0xaeda), 0xb);
        // D5 02C9
        gbc.setState(0x57d, 0xf7a9, 0xe20, 0xb468, 0x8bcb, 0x6b78, 0x0, 0x0);
        gbc.writeMem(0x57d, { 0xd5 });
        gbc.writeMem(0xf7a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf7a7);
        EXPECT(gbc.pc(), 0x57e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7a7), 0xcb);
        EXPECT(gbc.readMem(0xf7a8), 0x8b);
        // D5 02CC
        gbc.setState(0xb744, 0xe49b, 0x2e40, 0xdff1, 0xd4f7, 0xcf77, 0x0, 0x0);
        gbc.writeMem(0xb744, { 0xd5 });
        gbc.writeMem(0xe499, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe499);
        EXPECT(gbc.pc(), 0xb745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb744), 0xd5);
        EXPECT(gbc.readMem(0xe499), 0xf7);
        EXPECT(gbc.readMem(0xe49a), 0xd4);
        // D5 02CD
        gbc.setState(0x5553, 0x8196, 0x5690, 0x6904, 0xcb6a, 0x9ff3, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0xd5 });
        gbc.writeMem(0x8194, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8194);
        EXPECT(gbc.pc(), 0x5554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8194), 0x6a);
        EXPECT(gbc.readMem(0x8195), 0xcb);
        // D5 02D0
        gbc.setState(0x2656, 0x9f64, 0x8af0, 0xd7d4, 0xa92a, 0x73f4, 0x1, 0x0);
        gbc.writeMem(0x2656, { 0xd5 });
        gbc.writeMem(0x9f62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9f62);
        EXPECT(gbc.pc(), 0x2657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f62), 0x2a);
        EXPECT(gbc.readMem(0x9f63), 0xa9);
        // D5 02D2
        gbc.setState(0xdd71, 0x9280, 0x6470, 0xa22b, 0xd6f6, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x927e, { 0x0, 0x0 });
        gbc.writeMem(0xdd71, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x927e);
        EXPECT(gbc.pc(), 0xdd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927e), 0xf6);
        EXPECT(gbc.readMem(0x927f), 0xd6);
        EXPECT(gbc.readMem(0xdd71), 0xd5);
        // D5 02D5
        gbc.setState(0x28f7, 0xe271, 0xb370, 0xb9fe, 0x99f1, 0xe253, 0x1, 0x0);
        gbc.writeMem(0x28f7, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe26f);
        EXPECT(gbc.pc(), 0x28f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26f), 0xf1);
        EXPECT(gbc.readMem(0xe270), 0x99);
        // D5 02D8
        gbc.setState(0xcc6d, 0xcdf6, 0x4d50, 0x1b2e, 0xc2d9, 0xc653, 0x1, 0x0);
        gbc.writeMem(0xcc6d, { 0xd5 });
        gbc.writeMem(0xcdf4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcdf4);
        EXPECT(gbc.pc(), 0xcc6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6d), 0xd5);
        EXPECT(gbc.readMem(0xcdf4), 0xd9);
        EXPECT(gbc.readMem(0xcdf5), 0xc2);
        // D5 02DA
        gbc.setState(0xd7c4, 0xe9fc, 0x18c0, 0xe131, 0x1ade, 0x3a5, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0xd5 });
        gbc.writeMem(0xe9fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe9fa);
        EXPECT(gbc.pc(), 0xd7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c4), 0xd5);
        EXPECT(gbc.readMem(0xe9fa), 0xde);
        EXPECT(gbc.readMem(0xe9fb), 0x1a);
        // D5 02DC
        gbc.setState(0x1df9, 0xc16d, 0x98c0, 0xde7f, 0xfbc6, 0xb241, 0x0, 0x0);
        gbc.writeMem(0x1df9, { 0xd5 });
        gbc.writeMem(0xc16b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc16b);
        EXPECT(gbc.pc(), 0x1dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16b), 0xc6);
        EXPECT(gbc.readMem(0xc16c), 0xfb);
        // D5 02DD
        gbc.setState(0x74af, 0x80d9, 0x5ed0, 0xcd59, 0xbc44, 0x7a97, 0x1, 0x1);
        gbc.writeMem(0x74af, { 0xd5 });
        gbc.writeMem(0x80d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x80d7);
        EXPECT(gbc.pc(), 0x74b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d7), 0x44);
        EXPECT(gbc.readMem(0x80d8), 0xbc);
        // D5 02DF
        gbc.setState(0xa279, 0xa12e, 0xbec0, 0x8841, 0xc57a, 0x28a6, 0x1, 0x1);
        gbc.writeMem(0xa12c, { 0x0, 0x0 });
        gbc.writeMem(0xa279, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0xa27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12c), 0x7a);
        EXPECT(gbc.readMem(0xa12d), 0xc5);
        EXPECT(gbc.readMem(0xa279), 0xd5);
        // D5 02E1
        gbc.setState(0x1085, 0xc69d, 0x6430, 0x36a2, 0xe197, 0x86c4, 0x1, 0x1);
        gbc.writeMem(0x1085, { 0xd5 });
        gbc.writeMem(0xc69b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc69b);
        EXPECT(gbc.pc(), 0x1086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69b), 0x97);
        EXPECT(gbc.readMem(0xc69c), 0xe1);
        // D5 02E3
        gbc.setState(0x5292, 0x8391, 0x36f0, 0xaa97, 0xa987, 0xc0b9, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0xd5 });
        gbc.writeMem(0x838f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0x5293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838f), 0x87);
        EXPECT(gbc.readMem(0x8390), 0xa9);
        // D5 02E6
        gbc.setState(0x7c09, 0xeb81, 0xe730, 0x34c4, 0x6816, 0x453a, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0xd5 });
        gbc.writeMem(0xeb7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xeb7f);
        EXPECT(gbc.pc(), 0x7c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7f), 0x16);
        EXPECT(gbc.readMem(0xeb80), 0x68);
        // D5 02EA
        gbc.setState(0x3591, 0xb33e, 0xc6e0, 0xa436, 0xf49b, 0x44db, 0x0, 0x0);
        gbc.writeMem(0x3591, { 0xd5 });
        gbc.writeMem(0xb33c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb33c);
        EXPECT(gbc.pc(), 0x3592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33c), 0x9b);
        EXPECT(gbc.readMem(0xb33d), 0xf4);
        // D5 02EC
        gbc.setState(0xc45f, 0xc222, 0xaf90, 0x3d8b, 0x14f6, 0xff33, 0x0, 0x1);
        gbc.writeMem(0xc220, { 0x0, 0x0 });
        gbc.writeMem(0xc45f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc220), 0xf6);
        EXPECT(gbc.readMem(0xc221), 0x14);
        EXPECT(gbc.readMem(0xc45f), 0xd5);
        // D5 02ED
        gbc.setState(0xd2c2, 0x9a50, 0x11d0, 0x1b5c, 0xa96f, 0xb060, 0x0, 0x0);
        gbc.writeMem(0x9a4e, { 0x0, 0x0 });
        gbc.writeMem(0xd2c2, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9a4e);
        EXPECT(gbc.pc(), 0xd2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4e), 0x6f);
        EXPECT(gbc.readMem(0x9a4f), 0xa9);
        EXPECT(gbc.readMem(0xd2c2), 0xd5);
        // D5 02F1
        gbc.setState(0x3c2a, 0xd28d, 0x5020, 0xdc1f, 0x8f18, 0x6838, 0x1, 0x1);
        gbc.writeMem(0x3c2a, { 0xd5 });
        gbc.writeMem(0xd28b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd28b);
        EXPECT(gbc.pc(), 0x3c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28b), 0x18);
        EXPECT(gbc.readMem(0xd28c), 0x8f);
        // D5 02F2
        gbc.setState(0x3e87, 0xf408, 0x1520, 0x9b4a, 0x6a4, 0x9408, 0x0, 0x0);
        gbc.writeMem(0x3e87, { 0xd5 });
        gbc.writeMem(0xf406, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf406);
        EXPECT(gbc.pc(), 0x3e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf406), 0xa4);
        EXPECT(gbc.readMem(0xf407), 0x6);
        // D5 02F3
        gbc.setState(0x4e39, 0x98f6, 0x7e60, 0x4ed8, 0x16d9, 0xb80, 0x1, 0x1);
        gbc.writeMem(0x4e39, { 0xd5 });
        gbc.writeMem(0x98f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x98f4);
        EXPECT(gbc.pc(), 0x4e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f4), 0xd9);
        EXPECT(gbc.readMem(0x98f5), 0x16);
        // D5 02F5
        gbc.setState(0x96d3, 0xf18f, 0x5570, 0x9453, 0xf446, 0x5eda, 0x0, 0x0);
        gbc.writeMem(0x96d3, { 0xd5 });
        gbc.writeMem(0xf18d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf18d);
        EXPECT(gbc.pc(), 0x96d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d3), 0xd5);
        EXPECT(gbc.readMem(0xf18d), 0x46);
        EXPECT(gbc.readMem(0xf18e), 0xf4);
        // D5 02F6
        gbc.setState(0x538d, 0xdf79, 0x5a30, 0x1a20, 0x2969, 0xcd6a, 0x1, 0x1);
        gbc.writeMem(0x538d, { 0xd5 });
        gbc.writeMem(0xdf77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdf77);
        EXPECT(gbc.pc(), 0x538e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf77), 0x69);
        EXPECT(gbc.readMem(0xdf78), 0x29);
        // D5 02F9
        gbc.setState(0x2a59, 0x9a07, 0xc110, 0x9f42, 0x67da, 0xa28c, 0x0, 0x1);
        gbc.writeMem(0x2a59, { 0xd5 });
        gbc.writeMem(0x9a05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9a05);
        EXPECT(gbc.pc(), 0x2a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a05), 0xda);
        EXPECT(gbc.readMem(0x9a06), 0x67);
        // D5 02FB
        gbc.setState(0xdb2f, 0x8638, 0x87a0, 0x3ba8, 0xa66f, 0xb143, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0x0, 0x0 });
        gbc.writeMem(0xdb2f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8636);
        EXPECT(gbc.pc(), 0xdb30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8636), 0x6f);
        EXPECT(gbc.readMem(0x8637), 0xa6);
        EXPECT(gbc.readMem(0xdb2f), 0xd5);
        // D5 02FD
        gbc.setState(0x1730, 0xc201, 0x99a0, 0x2bdb, 0xf39f, 0xf93a, 0x1, 0x1);
        gbc.writeMem(0x1730, { 0xd5 });
        gbc.writeMem(0xc1ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc1ff);
        EXPECT(gbc.pc(), 0x1731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ff), 0x9f);
        EXPECT(gbc.readMem(0xc200), 0xf3);
        // D5 02FE
        gbc.setState(0xe4bc, 0xd58f, 0x8910, 0x127, 0x3161, 0xb193, 0x1, 0x0);
        gbc.writeMem(0xd58d, { 0x0, 0x0 });
        gbc.writeMem(0xe4bc, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd58d);
        EXPECT(gbc.pc(), 0xe4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58d), 0x61);
        EXPECT(gbc.readMem(0xd58e), 0x31);
        EXPECT(gbc.readMem(0xe4bc), 0xd5);
        // D5 02FF
        gbc.setState(0xdb5e, 0xc66e, 0xe990, 0xfab8, 0xb730, 0x660b, 0x0, 0x0);
        gbc.writeMem(0xc66c, { 0x0, 0x0 });
        gbc.writeMem(0xdb5e, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc66c);
        EXPECT(gbc.pc(), 0xdb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66c), 0x30);
        EXPECT(gbc.readMem(0xc66d), 0xb7);
        EXPECT(gbc.readMem(0xdb5e), 0xd5);
        // D5 0302
        gbc.setState(0xd2af, 0xb642, 0x84b0, 0xdda3, 0x148d, 0x7236, 0x0, 0x0);
        gbc.writeMem(0xb640, { 0x0, 0x0 });
        gbc.writeMem(0xd2af, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb640);
        EXPECT(gbc.pc(), 0xd2b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb640), 0x8d);
        EXPECT(gbc.readMem(0xb641), 0x14);
        EXPECT(gbc.readMem(0xd2af), 0xd5);
        // D5 0304
        gbc.setState(0x8190, 0x96d4, 0xb390, 0x1784, 0xc736, 0xe0f5, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xd5 });
        gbc.writeMem(0x96d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x96d2);
        EXPECT(gbc.pc(), 0x8191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8190), 0xd5);
        EXPECT(gbc.readMem(0x96d2), 0x36);
        EXPECT(gbc.readMem(0x96d3), 0xc7);
        // D5 0307
        gbc.setState(0xd84d, 0xa5d9, 0xb5a0, 0xd64b, 0x67f, 0x3231, 0x1, 0x0);
        gbc.writeMem(0xa5d7, { 0x0, 0x0 });
        gbc.writeMem(0xd84d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa5d7);
        EXPECT(gbc.pc(), 0xd84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d7), 0x7f);
        EXPECT(gbc.readMem(0xa5d8), 0x6);
        EXPECT(gbc.readMem(0xd84d), 0xd5);
        // D5 0308
        gbc.setState(0x541e, 0xcc32, 0x960, 0xcc96, 0x8c1f, 0xfdfb, 0x1, 0x1);
        gbc.writeMem(0x541e, { 0xd5 });
        gbc.writeMem(0xcc30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcc30);
        EXPECT(gbc.pc(), 0x541f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc30), 0x1f);
        EXPECT(gbc.readMem(0xcc31), 0x8c);
        // D5 0309
        gbc.setState(0xccca, 0xe831, 0x25d0, 0x831d, 0xafb, 0xa589, 0x0, 0x0);
        gbc.writeMem(0xccca, { 0xd5 });
        gbc.writeMem(0xe82f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe82f);
        EXPECT(gbc.pc(), 0xcccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccca), 0xd5);
        EXPECT(gbc.readMem(0xe82f), 0xfb);
        EXPECT(gbc.readMem(0xe830), 0xa);
        // D5 030A
        gbc.setState(0x7453, 0xc6e5, 0x9810, 0x2bcc, 0xed87, 0x3a24, 0x1, 0x1);
        gbc.writeMem(0x7453, { 0xd5 });
        gbc.writeMem(0xc6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc6e3);
        EXPECT(gbc.pc(), 0x7454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e3), 0x87);
        EXPECT(gbc.readMem(0xc6e4), 0xed);
        // D5 0310
        gbc.setState(0x95c3, 0xe0c9, 0x1c10, 0xb2ce, 0xbe7b, 0xb75b, 0x1, 0x1);
        gbc.writeMem(0x95c3, { 0xd5 });
        gbc.writeMem(0xe0c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe0c7);
        EXPECT(gbc.pc(), 0x95c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c3), 0xd5);
        EXPECT(gbc.readMem(0xe0c7), 0x7b);
        EXPECT(gbc.readMem(0xe0c8), 0xbe);
        // D5 0312
        gbc.setState(0x7ddb, 0xa167, 0x3b70, 0x94d6, 0x5c29, 0xfc3b, 0x1, 0x0);
        gbc.writeMem(0x7ddb, { 0xd5 });
        gbc.writeMem(0xa165, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa165);
        EXPECT(gbc.pc(), 0x7ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa165), 0x29);
        EXPECT(gbc.readMem(0xa166), 0x5c);
        // D5 0316
        gbc.setState(0xa4e3, 0xaf89, 0xd310, 0x28c1, 0x87df, 0x2d2f, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0xd5 });
        gbc.writeMem(0xaf87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0xa4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e3), 0xd5);
        EXPECT(gbc.readMem(0xaf87), 0xdf);
        EXPECT(gbc.readMem(0xaf88), 0x87);
        // D5 0317
        gbc.setState(0x1b5f, 0xa7ef, 0xf400, 0x875d, 0x1a43, 0x885a, 0x0, 0x1);
        gbc.writeMem(0x1b5f, { 0xd5 });
        gbc.writeMem(0xa7ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa7ed);
        EXPECT(gbc.pc(), 0x1b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ed), 0x43);
        EXPECT(gbc.readMem(0xa7ee), 0x1a);
        // D5 031A
        gbc.setState(0x1f87, 0xf73b, 0x3cd0, 0xf914, 0x5b6b, 0x98bf, 0x0, 0x0);
        gbc.writeMem(0x1f87, { 0xd5 });
        gbc.writeMem(0xf739, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf739);
        EXPECT(gbc.pc(), 0x1f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf739), 0x6b);
        EXPECT(gbc.readMem(0xf73a), 0x5b);
        // D5 031C
        gbc.setState(0x62f7, 0x96a2, 0x8340, 0xaf0, 0xaa60, 0xb670, 0x1, 0x1);
        gbc.writeMem(0x62f7, { 0xd5 });
        gbc.writeMem(0x96a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x96a0);
        EXPECT(gbc.pc(), 0x62f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a0), 0x60);
        EXPECT(gbc.readMem(0x96a1), 0xaa);
        // D5 0320
        gbc.setState(0xd740, 0xeb00, 0x2260, 0x9807, 0xdea0, 0x47bf, 0x0, 0x0);
        gbc.writeMem(0xd740, { 0xd5 });
        gbc.writeMem(0xeafe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xeafe);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd740), 0xd5);
        EXPECT(gbc.readMem(0xeafe), 0xa0);
        EXPECT(gbc.readMem(0xeaff), 0xde);
        // D5 0325
        gbc.setState(0x2e5e, 0xab93, 0x19c0, 0x4d1e, 0xb7b0, 0x2ae9, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0xd5 });
        gbc.writeMem(0xab91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xab91);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab91), 0xb0);
        EXPECT(gbc.readMem(0xab92), 0xb7);
        // D5 0326
        gbc.setState(0xbfc8, 0x985b, 0xcf70, 0xe49, 0xb3ed, 0x9d0c, 0x1, 0x0);
        gbc.writeMem(0x9859, { 0x0, 0x0 });
        gbc.writeMem(0xbfc8, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9859);
        EXPECT(gbc.pc(), 0xbfc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9859), 0xed);
        EXPECT(gbc.readMem(0x985a), 0xb3);
        EXPECT(gbc.readMem(0xbfc8), 0xd5);
        // D5 0329
        gbc.setState(0x5008, 0xbeed, 0x5b60, 0x2c8f, 0x17f4, 0x9770, 0x0, 0x1);
        gbc.writeMem(0x5008, { 0xd5 });
        gbc.writeMem(0xbeeb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbeeb);
        EXPECT(gbc.pc(), 0x5009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeeb), 0xf4);
        EXPECT(gbc.readMem(0xbeec), 0x17);
        // D5 032A
        gbc.setState(0x5e2f, 0xcdf9, 0xf1c0, 0x9bae, 0x7222, 0xe2a0, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xd5 });
        gbc.writeMem(0xcdf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcdf7);
        EXPECT(gbc.pc(), 0x5e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf7), 0x22);
        EXPECT(gbc.readMem(0xcdf8), 0x72);
        // D5 032C
        gbc.setState(0x1716, 0xb6f4, 0x3270, 0x2dbb, 0x322, 0x93e6, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0xd5 });
        gbc.writeMem(0xb6f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb6f2);
        EXPECT(gbc.pc(), 0x1717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f2), 0x22);
        EXPECT(gbc.readMem(0xb6f3), 0x3);
        // D5 032E
        gbc.setState(0xeb0, 0xd9c2, 0xaad0, 0xb80a, 0x3e2d, 0xddf3, 0x1, 0x1);
        gbc.writeMem(0xeb0, { 0xd5 });
        gbc.writeMem(0xd9c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0xeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c0), 0x2d);
        EXPECT(gbc.readMem(0xd9c1), 0x3e);
        // D5 032F
        gbc.setState(0xc7d4, 0xd799, 0x3770, 0xae71, 0x271e, 0xc5a2, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xd5 });
        gbc.writeMem(0xd797, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd797);
        EXPECT(gbc.pc(), 0xc7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d4), 0xd5);
        EXPECT(gbc.readMem(0xd797), 0x1e);
        EXPECT(gbc.readMem(0xd798), 0x27);
        // D5 0330
        gbc.setState(0x5629, 0xaf75, 0xab80, 0xcd59, 0x8893, 0x23ce, 0x0, 0x1);
        gbc.writeMem(0x5629, { 0xd5 });
        gbc.writeMem(0xaf73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaf73);
        EXPECT(gbc.pc(), 0x562a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf73), 0x93);
        EXPECT(gbc.readMem(0xaf74), 0x88);
        // D5 0331
        gbc.setState(0x245d, 0xfef7, 0x5310, 0xb76d, 0x41aa, 0x38c7, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xd5 });
        gbc.writeMem(0xfef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfef5);
        EXPECT(gbc.pc(), 0x245e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfef5), 0xaa);
        EXPECT(gbc.readMem(0xfef6), 0x41);
        // D5 0334
        gbc.setState(0x7e39, 0x82a7, 0x3130, 0x59fe, 0x861a, 0xaad0, 0x1, 0x0);
        gbc.writeMem(0x7e39, { 0xd5 });
        gbc.writeMem(0x82a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x82a5);
        EXPECT(gbc.pc(), 0x7e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a5), 0x1a);
        EXPECT(gbc.readMem(0x82a6), 0x86);
        // D5 0335
        gbc.setState(0x9d2b, 0xbd76, 0x30c0, 0xe416, 0x2000, 0xbc0e, 0x1, 0x0);
        gbc.writeMem(0x9d2b, { 0xd5 });
        gbc.writeMem(0xbd74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbd74);
        EXPECT(gbc.pc(), 0x9d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2b), 0xd5);
        EXPECT(gbc.readMem(0xbd74), 0x0);
        EXPECT(gbc.readMem(0xbd75), 0x20);
        // D5 0336
        gbc.setState(0xc027, 0xf075, 0x8190, 0xd1f, 0x2543, 0xead7, 0x0, 0x0);
        gbc.writeMem(0xc027, { 0xd5 });
        gbc.writeMem(0xf073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf073);
        EXPECT(gbc.pc(), 0xc028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc027), 0xd5);
        EXPECT(gbc.readMem(0xf073), 0x43);
        EXPECT(gbc.readMem(0xf074), 0x25);
        // D5 033A
        gbc.setState(0x7c26, 0x80bf, 0x9600, 0xa359, 0x9105, 0x3ec4, 0x0, 0x0);
        gbc.writeMem(0x7c26, { 0xd5 });
        gbc.writeMem(0x80bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x80bd);
        EXPECT(gbc.pc(), 0x7c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bd), 0x5);
        EXPECT(gbc.readMem(0x80be), 0x91);
        // D5 033D
        gbc.setState(0xc0e8, 0xd90e, 0xf110, 0xca7b, 0xbe64, 0x66a8, 0x0, 0x0);
        gbc.writeMem(0xc0e8, { 0xd5 });
        gbc.writeMem(0xd90c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0xc0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e8), 0xd5);
        EXPECT(gbc.readMem(0xd90c), 0x64);
        EXPECT(gbc.readMem(0xd90d), 0xbe);
        // D5 033E
        gbc.setState(0x1bf3, 0xa6e6, 0xf0c0, 0x2f29, 0xa0e6, 0x8f81, 0x1, 0x0);
        gbc.writeMem(0x1bf3, { 0xd5 });
        gbc.writeMem(0xa6e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa6e4);
        EXPECT(gbc.pc(), 0x1bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e4), 0xe6);
        EXPECT(gbc.readMem(0xa6e5), 0xa0);
        // D5 0341
        gbc.setState(0x368, 0xd13d, 0x7e80, 0x27da, 0x73e1, 0xe899, 0x0, 0x1);
        gbc.writeMem(0x368, { 0xd5 });
        gbc.writeMem(0xd13b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd13b);
        EXPECT(gbc.pc(), 0x369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13b), 0xe1);
        EXPECT(gbc.readMem(0xd13c), 0x73);
        // D5 0342
        gbc.setState(0xec82, 0xd204, 0xc400, 0x57cc, 0x2780, 0x1212, 0x0, 0x1);
        gbc.writeMem(0xd202, { 0x0, 0x0 });
        gbc.writeMem(0xec82, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd202);
        EXPECT(gbc.pc(), 0xec83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd202), 0x80);
        EXPECT(gbc.readMem(0xd203), 0x27);
        EXPECT(gbc.readMem(0xec82), 0xd5);
        // D5 0344
        gbc.setState(0xa50b, 0xa3dc, 0xad70, 0x1b3d, 0x67eb, 0x52f2, 0x0, 0x1);
        gbc.writeMem(0xa3da, { 0x0, 0x0 });
        gbc.writeMem(0xa50b, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa3da);
        EXPECT(gbc.pc(), 0xa50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3da), 0xeb);
        EXPECT(gbc.readMem(0xa3db), 0x67);
        EXPECT(gbc.readMem(0xa50b), 0xd5);
        // D5 0345
        gbc.setState(0xe2c0, 0x870f, 0x6880, 0x96c4, 0x3a3, 0x91cb, 0x0, 0x1);
        gbc.writeMem(0x870d, { 0x0, 0x0 });
        gbc.writeMem(0xe2c0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x870d);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870d), 0xa3);
        EXPECT(gbc.readMem(0x870e), 0x3);
        EXPECT(gbc.readMem(0xe2c0), 0xd5);
        // D5 0349
        gbc.setState(0x3c9e, 0xf86f, 0x3ce0, 0x111, 0x8a85, 0x80f9, 0x1, 0x1);
        gbc.writeMem(0x3c9e, { 0xd5 });
        gbc.writeMem(0xf86d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf86d);
        EXPECT(gbc.pc(), 0x3c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf86d), 0x85);
        EXPECT(gbc.readMem(0xf86e), 0x8a);
        // D5 034A
        gbc.setState(0x44af, 0x9e08, 0x1070, 0x7261, 0xb732, 0x9c74, 0x0, 0x1);
        gbc.writeMem(0x44af, { 0xd5 });
        gbc.writeMem(0x9e06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9e06);
        EXPECT(gbc.pc(), 0x44b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e06), 0x32);
        EXPECT(gbc.readMem(0x9e07), 0xb7);
        // D5 034E
        gbc.setState(0x87d9, 0xa14a, 0x1380, 0xac8c, 0x1309, 0x6bc8, 0x0, 0x1);
        gbc.writeMem(0x87d9, { 0xd5 });
        gbc.writeMem(0xa148, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa148);
        EXPECT(gbc.pc(), 0x87da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d9), 0xd5);
        EXPECT(gbc.readMem(0xa148), 0x9);
        EXPECT(gbc.readMem(0xa149), 0x13);
        // D5 034F
        gbc.setState(0x16e5, 0xe271, 0x6ef0, 0x425a, 0x9b7a, 0xbb57, 0x1, 0x1);
        gbc.writeMem(0x16e5, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe26f);
        EXPECT(gbc.pc(), 0x16e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26f), 0x7a);
        EXPECT(gbc.readMem(0xe270), 0x9b);
        // D5 0350
        gbc.setState(0x5d68, 0x8fee, 0xeb40, 0x55c0, 0x949b, 0x2340, 0x1, 0x1);
        gbc.writeMem(0x5d68, { 0xd5 });
        gbc.writeMem(0x8fec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8fec);
        EXPECT(gbc.pc(), 0x5d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fec), 0x9b);
        EXPECT(gbc.readMem(0x8fed), 0x94);
        // D5 0357
        gbc.setState(0x8b54, 0xed0c, 0xa7f0, 0x89d4, 0x7b77, 0x5364, 0x1, 0x1);
        gbc.writeMem(0x8b54, { 0xd5 });
        gbc.writeMem(0xed0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x8b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b54), 0xd5);
        EXPECT(gbc.readMem(0xed0a), 0x77);
        EXPECT(gbc.readMem(0xed0b), 0x7b);
        // D5 035B
        gbc.setState(0x437a, 0xe964, 0x6f40, 0x775, 0xfaae, 0x9103, 0x0, 0x1);
        gbc.writeMem(0x437a, { 0xd5 });
        gbc.writeMem(0xe962, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe962);
        EXPECT(gbc.pc(), 0x437b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe962), 0xae);
        EXPECT(gbc.readMem(0xe963), 0xfa);
        // D5 035D
        gbc.setState(0x528, 0xbcb0, 0x56f0, 0x5d1e, 0x8835, 0x6c1e, 0x1, 0x0);
        gbc.writeMem(0x528, { 0xd5 });
        gbc.writeMem(0xbcae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbcae);
        EXPECT(gbc.pc(), 0x529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcae), 0x35);
        EXPECT(gbc.readMem(0xbcaf), 0x88);
        // D5 035E
        gbc.setState(0x701d, 0x9ea2, 0x50, 0xf8e4, 0x8b92, 0xa41d, 0x0, 0x0);
        gbc.writeMem(0x701d, { 0xd5 });
        gbc.writeMem(0x9ea0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9ea0);
        EXPECT(gbc.pc(), 0x701e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea0), 0x92);
        EXPECT(gbc.readMem(0x9ea1), 0x8b);
        // D5 035F
        gbc.setState(0xa695, 0xc6f7, 0x9110, 0x8ae8, 0xc52f, 0x358a, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0xd5 });
        gbc.writeMem(0xc6f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc6f5);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa695), 0xd5);
        EXPECT(gbc.readMem(0xc6f5), 0x2f);
        EXPECT(gbc.readMem(0xc6f6), 0xc5);
        // D5 0363
        gbc.setState(0x82b, 0xc9ee, 0x5df0, 0xfec8, 0x44e0, 0x1607, 0x0, 0x1);
        gbc.writeMem(0x82b, { 0xd5 });
        gbc.writeMem(0xc9ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc9ec);
        EXPECT(gbc.pc(), 0x82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ec), 0xe0);
        EXPECT(gbc.readMem(0xc9ed), 0x44);
        // D5 0364
        gbc.setState(0x929, 0xafe7, 0xd730, 0x897f, 0x3627, 0x6be, 0x1, 0x1);
        gbc.writeMem(0x929, { 0xd5 });
        gbc.writeMem(0xafe5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xafe5);
        EXPECT(gbc.pc(), 0x92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe5), 0x27);
        EXPECT(gbc.readMem(0xafe6), 0x36);
        // D5 0367
        gbc.setState(0x55e4, 0xfc97, 0xf840, 0xa153, 0x5653, 0x7085, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0xd5 });
        gbc.writeMem(0xfc95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfc95);
        EXPECT(gbc.pc(), 0x55e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc95), 0x53);
        EXPECT(gbc.readMem(0xfc96), 0x56);
        // D5 0368
        gbc.setState(0x342f, 0x822d, 0xeda0, 0xd0b4, 0x385, 0x6fba, 0x1, 0x1);
        gbc.writeMem(0x342f, { 0xd5 });
        gbc.writeMem(0x822b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x822b);
        EXPECT(gbc.pc(), 0x3430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822b), 0x85);
        EXPECT(gbc.readMem(0x822c), 0x3);
        // D5 036F
        gbc.setState(0x48d9, 0xb64e, 0xb150, 0x5e8, 0x96aa, 0x735c, 0x0, 0x1);
        gbc.writeMem(0x48d9, { 0xd5 });
        gbc.writeMem(0xb64c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0x48da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64c), 0xaa);
        EXPECT(gbc.readMem(0xb64d), 0x96);
        // D5 0371
        gbc.setState(0x269f, 0xb879, 0xc910, 0xb250, 0x29, 0xbe60, 0x1, 0x0);
        gbc.writeMem(0x269f, { 0xd5 });
        gbc.writeMem(0xb877, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb877);
        EXPECT(gbc.pc(), 0x26a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb877), 0x29);
        EXPECT(gbc.readMem(0xb878), 0x0);
        // D5 0375
        gbc.setState(0x68d8, 0xbc80, 0xe970, 0x2e60, 0xbdc5, 0x5454, 0x1, 0x1);
        gbc.writeMem(0x68d8, { 0xd5 });
        gbc.writeMem(0xbc7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbc7e);
        EXPECT(gbc.pc(), 0x68d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7e), 0xc5);
        EXPECT(gbc.readMem(0xbc7f), 0xbd);
        // D5 037A
        gbc.setState(0xa927, 0xe5ef, 0xae40, 0xb4b3, 0x4eab, 0xa8db, 0x0, 0x0);
        gbc.writeMem(0xa927, { 0xd5 });
        gbc.writeMem(0xe5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe5ed);
        EXPECT(gbc.pc(), 0xa928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa927), 0xd5);
        EXPECT(gbc.readMem(0xe5ed), 0xab);
        EXPECT(gbc.readMem(0xe5ee), 0x4e);
        // D5 0384
        gbc.setState(0xb5de, 0xcec2, 0x33a0, 0xb3b6, 0xda95, 0xb74e, 0x1, 0x1);
        gbc.writeMem(0xb5de, { 0xd5 });
        gbc.writeMem(0xcec0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcec0);
        EXPECT(gbc.pc(), 0xb5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5de), 0xd5);
        EXPECT(gbc.readMem(0xcec0), 0x95);
        EXPECT(gbc.readMem(0xcec1), 0xda);
        // D5 038A
        gbc.setState(0xc006, 0xbe21, 0xe630, 0x7171, 0xdbe, 0xe756, 0x0, 0x1);
        gbc.writeMem(0xbe1f, { 0x0, 0x0 });
        gbc.writeMem(0xc006, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbe1f);
        EXPECT(gbc.pc(), 0xc007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1f), 0xbe);
        EXPECT(gbc.readMem(0xbe20), 0xd);
        EXPECT(gbc.readMem(0xc006), 0xd5);
        // D5 038B
        gbc.setState(0x79bc, 0xa8bf, 0xe770, 0x5b74, 0x49c8, 0x36ec, 0x1, 0x1);
        gbc.writeMem(0x79bc, { 0xd5 });
        gbc.writeMem(0xa8bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa8bd);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bd), 0xc8);
        EXPECT(gbc.readMem(0xa8be), 0x49);
        // D5 038C
        gbc.setState(0x4ac8, 0x901d, 0x7cc0, 0x68c2, 0x8667, 0x8e5b, 0x1, 0x0);
        gbc.writeMem(0x4ac8, { 0xd5 });
        gbc.writeMem(0x901b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x901b);
        EXPECT(gbc.pc(), 0x4ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901b), 0x67);
        EXPECT(gbc.readMem(0x901c), 0x86);
        // D5 038D
        gbc.setState(0xaf2f, 0x8928, 0xece0, 0xb04b, 0x41fa, 0x876a, 0x0, 0x0);
        gbc.writeMem(0x8926, { 0x0, 0x0 });
        gbc.writeMem(0xaf2f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8926);
        EXPECT(gbc.pc(), 0xaf30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8926), 0xfa);
        EXPECT(gbc.readMem(0x8927), 0x41);
        EXPECT(gbc.readMem(0xaf2f), 0xd5);
        // D5 0391
        gbc.setState(0xbb94, 0x87be, 0x37b0, 0xa305, 0x5afc, 0xff40, 0x1, 0x1);
        gbc.writeMem(0x87bc, { 0x0, 0x0 });
        gbc.writeMem(0xbb94, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x87bc);
        EXPECT(gbc.pc(), 0xbb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87bc), 0xfc);
        EXPECT(gbc.readMem(0x87bd), 0x5a);
        EXPECT(gbc.readMem(0xbb94), 0xd5);
        // D5 0392
        gbc.setState(0x5d54, 0xb01c, 0xead0, 0x139, 0x16ee, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0x5d54, { 0xd5 });
        gbc.writeMem(0xb01a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb01a);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01a), 0xee);
        EXPECT(gbc.readMem(0xb01b), 0x16);
        // D5 0393
        gbc.setState(0xb6ef, 0x979e, 0xf130, 0xb0c3, 0x4703, 0xf3b0, 0x0, 0x1);
        gbc.writeMem(0x979c, { 0x0, 0x0 });
        gbc.writeMem(0xb6ef, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x979c);
        EXPECT(gbc.pc(), 0xb6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979c), 0x3);
        EXPECT(gbc.readMem(0x979d), 0x47);
        EXPECT(gbc.readMem(0xb6ef), 0xd5);
        // D5 039A
        gbc.setState(0x35, 0xecd2, 0x9e10, 0xe921, 0x88f4, 0xdfcf, 0x0, 0x1);
        gbc.writeMem(0x35, { 0xd5 });
        gbc.writeMem(0xecd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xecd0);
        EXPECT(gbc.pc(), 0x36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd0), 0xf4);
        EXPECT(gbc.readMem(0xecd1), 0x88);
        // D5 039F
        gbc.setState(0x4cff, 0xc496, 0xbdd0, 0x83db, 0xa669, 0xbb0e, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xd5 });
        gbc.writeMem(0xc494, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc494);
        EXPECT(gbc.pc(), 0x4d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc494), 0x69);
        EXPECT(gbc.readMem(0xc495), 0xa6);
        // D5 03A1
        gbc.setState(0xd7b5, 0xd215, 0x7e50, 0xba10, 0xe98c, 0x4ca9, 0x0, 0x0);
        gbc.writeMem(0xd213, { 0x0, 0x0 });
        gbc.writeMem(0xd7b5, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd213);
        EXPECT(gbc.pc(), 0xd7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd213), 0x8c);
        EXPECT(gbc.readMem(0xd214), 0xe9);
        EXPECT(gbc.readMem(0xd7b5), 0xd5);
        // D5 03A3
        gbc.setState(0xc2a9, 0x8cca, 0x2990, 0x9311, 0x86c9, 0x2657, 0x1, 0x1);
        gbc.writeMem(0x8cc8, { 0x0, 0x0 });
        gbc.writeMem(0xc2a9, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8cc8);
        EXPECT(gbc.pc(), 0xc2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc8), 0xc9);
        EXPECT(gbc.readMem(0x8cc9), 0x86);
        EXPECT(gbc.readMem(0xc2a9), 0xd5);
        // D5 03A5
        gbc.setState(0x5c30, 0xe2c5, 0x1730, 0xba8e, 0xa01a, 0x1a0f, 0x1, 0x1);
        gbc.writeMem(0x5c30, { 0xd5 });
        gbc.writeMem(0xe2c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe2c3);
        EXPECT(gbc.pc(), 0x5c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c3), 0x1a);
        EXPECT(gbc.readMem(0xe2c4), 0xa0);
        // D5 03AA
        gbc.setState(0x3467, 0xc416, 0x7f60, 0xde1e, 0xce06, 0x2108, 0x1, 0x1);
        gbc.writeMem(0x3467, { 0xd5 });
        gbc.writeMem(0xc414, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc414);
        EXPECT(gbc.pc(), 0x3468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc414), 0x6);
        EXPECT(gbc.readMem(0xc415), 0xce);
        // D5 03AC
        gbc.setState(0xe47, 0xa893, 0x77e0, 0xc0df, 0x52f2, 0xc4e5, 0x1, 0x0);
        gbc.writeMem(0xe47, { 0xd5 });
        gbc.writeMem(0xa891, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa891);
        EXPECT(gbc.pc(), 0xe48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa891), 0xf2);
        EXPECT(gbc.readMem(0xa892), 0x52);
        // D5 03AD
        gbc.setState(0xa6d8, 0xc931, 0xbb70, 0x5831, 0xd833, 0x969f, 0x1, 0x0);
        gbc.writeMem(0xa6d8, { 0xd5 });
        gbc.writeMem(0xc92f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc92f);
        EXPECT(gbc.pc(), 0xa6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d8), 0xd5);
        EXPECT(gbc.readMem(0xc92f), 0x33);
        EXPECT(gbc.readMem(0xc930), 0xd8);
        // D5 03AE
        gbc.setState(0xabc1, 0xf493, 0x9df0, 0x77dd, 0x5d10, 0x9022, 0x0, 0x1);
        gbc.writeMem(0xabc1, { 0xd5 });
        gbc.writeMem(0xf491, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf491);
        EXPECT(gbc.pc(), 0xabc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc1), 0xd5);
        EXPECT(gbc.readMem(0xf491), 0x10);
        EXPECT(gbc.readMem(0xf492), 0x5d);
        // D5 03B4
        gbc.setState(0x11f9, 0x95a7, 0x7860, 0x9f88, 0x7c43, 0x6b0, 0x1, 0x1);
        gbc.writeMem(0x11f9, { 0xd5 });
        gbc.writeMem(0x95a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x95a5);
        EXPECT(gbc.pc(), 0x11fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a5), 0x43);
        EXPECT(gbc.readMem(0x95a6), 0x7c);
        // D5 03B7
        gbc.setState(0x7800, 0xf4be, 0xd200, 0x115, 0x3573, 0x1623, 0x0, 0x1);
        gbc.writeMem(0x7800, { 0xd5 });
        gbc.writeMem(0xf4bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0x7801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4bc), 0x73);
        EXPECT(gbc.readMem(0xf4bd), 0x35);
        // D5 03B8
        gbc.setState(0x2b1e, 0xc421, 0x6d80, 0x8824, 0x99cc, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0x2b1e, { 0xd5 });
        gbc.writeMem(0xc41f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc41f);
        EXPECT(gbc.pc(), 0x2b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41f), 0xcc);
        EXPECT(gbc.readMem(0xc420), 0x99);
        // D5 03B9
        gbc.setState(0xd64c, 0x8b23, 0x6df0, 0x96fa, 0x80f8, 0x66cb, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0x0, 0x0 });
        gbc.writeMem(0xd64c, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0xd64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b21), 0xf8);
        EXPECT(gbc.readMem(0x8b22), 0x80);
        EXPECT(gbc.readMem(0xd64c), 0xd5);
        // D5 03BA
        gbc.setState(0x71ea, 0xf3ae, 0x7f60, 0x6192, 0x441d, 0x3d03, 0x1, 0x0);
        gbc.writeMem(0x71ea, { 0xd5 });
        gbc.writeMem(0xf3ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf3ac);
        EXPECT(gbc.pc(), 0x71eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3ac), 0x1d);
        EXPECT(gbc.readMem(0xf3ad), 0x44);
        // D5 03BB
        gbc.setState(0xe1ce, 0x90bd, 0x1d60, 0x26cb, 0x948d, 0xb2ca, 0x0, 0x1);
        gbc.writeMem(0x90bb, { 0x0, 0x0 });
        gbc.writeMem(0xe1ce, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0xe1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90bb), 0x8d);
        EXPECT(gbc.readMem(0x90bc), 0x94);
        EXPECT(gbc.readMem(0xe1ce), 0xd5);
        // D5 03BF
        gbc.setState(0xe367, 0x8088, 0xa030, 0x6264, 0xe6c5, 0x7f89, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0x0, 0x0 });
        gbc.writeMem(0xe367, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8086);
        EXPECT(gbc.pc(), 0xe368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8086), 0xc5);
        EXPECT(gbc.readMem(0x8087), 0xe6);
        EXPECT(gbc.readMem(0xe367), 0xd5);
        // D5 03C2
        gbc.setState(0x9d7a, 0xcfd0, 0x130, 0x8a60, 0x9bd0, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0x9d7a, { 0xd5 });
        gbc.writeMem(0xcfce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcfce);
        EXPECT(gbc.pc(), 0x9d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7a), 0xd5);
        EXPECT(gbc.readMem(0xcfce), 0xd0);
        EXPECT(gbc.readMem(0xcfcf), 0x9b);
        // D5 03C4
        gbc.setState(0xa0f, 0xb04f, 0xb940, 0x7880, 0xeb9, 0xd7a1, 0x1, 0x0);
        gbc.writeMem(0xa0f, { 0xd5 });
        gbc.writeMem(0xb04d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb04d);
        EXPECT(gbc.pc(), 0xa10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04d), 0xb9);
        EXPECT(gbc.readMem(0xb04e), 0xe);
        // D5 03C5
        gbc.setState(0x6de8, 0xa18a, 0x1c40, 0x698b, 0x7e34, 0x4651, 0x0, 0x0);
        gbc.writeMem(0x6de8, { 0xd5 });
        gbc.writeMem(0xa188, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa188);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa188), 0x34);
        EXPECT(gbc.readMem(0xa189), 0x7e);
        // D5 03C7
        gbc.setState(0x622, 0xfb30, 0xede0, 0x2fd0, 0x25d9, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0x622, { 0xd5 });
        gbc.writeMem(0xfb2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xfb2e);
        EXPECT(gbc.pc(), 0x623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb2e), 0xd9);
        EXPECT(gbc.readMem(0xfb2f), 0x25);
        // D5 03CA
        gbc.setState(0xb55e, 0xb7fe, 0x5050, 0xa161, 0xc41c, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0xb55e, { 0xd5 });
        gbc.writeMem(0xb7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb7fc);
        EXPECT(gbc.pc(), 0xb55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55e), 0xd5);
        EXPECT(gbc.readMem(0xb7fc), 0x1c);
        EXPECT(gbc.readMem(0xb7fd), 0xc4);
        // D5 03D0
        gbc.setState(0xa2cf, 0xf5a3, 0xcae0, 0xa67e, 0x7194, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xd5 });
        gbc.writeMem(0xf5a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf5a1);
        EXPECT(gbc.pc(), 0xa2d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2cf), 0xd5);
        EXPECT(gbc.readMem(0xf5a1), 0x94);
        EXPECT(gbc.readMem(0xf5a2), 0x71);
        // D5 03D2
        gbc.setState(0x790b, 0xa0fd, 0x61c0, 0x7679, 0xd77e, 0x9264, 0x1, 0x0);
        gbc.writeMem(0x790b, { 0xd5 });
        gbc.writeMem(0xa0fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa0fb);
        EXPECT(gbc.pc(), 0x790c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fb), 0x7e);
        EXPECT(gbc.readMem(0xa0fc), 0xd7);
        // D5 03D4
        gbc.setState(0x278e, 0xb8b1, 0x9c00, 0x4759, 0xf19d, 0x333a, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xd5 });
        gbc.writeMem(0xb8af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb8af);
        EXPECT(gbc.pc(), 0x278f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8af), 0x9d);
        EXPECT(gbc.readMem(0xb8b0), 0xf1);
        // D5 03D6
        gbc.setState(0xd6a9, 0xe984, 0xfc20, 0x9cf5, 0xae5d, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0xd6a9, { 0xd5 });
        gbc.writeMem(0xe982, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe982);
        EXPECT(gbc.pc(), 0xd6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a9), 0xd5);
        EXPECT(gbc.readMem(0xe982), 0x5d);
        EXPECT(gbc.readMem(0xe983), 0xae);
        // D5 03D7
        gbc.setState(0x1a25, 0xce2d, 0xd320, 0x3b7c, 0x6e6a, 0xdc94, 0x1, 0x0);
        gbc.writeMem(0x1a25, { 0xd5 });
        gbc.writeMem(0xce2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xce2b);
        EXPECT(gbc.pc(), 0x1a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2b), 0x6a);
        EXPECT(gbc.readMem(0xce2c), 0x6e);
        // D5 03D8
        gbc.setState(0xe7fb, 0xc87a, 0x1510, 0xc6ce, 0xa002, 0x472f, 0x0, 0x0);
        gbc.writeMem(0xc878, { 0x0, 0x0 });
        gbc.writeMem(0xe7fb, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc878);
        EXPECT(gbc.pc(), 0xe7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc878), 0x2);
        EXPECT(gbc.readMem(0xc879), 0xa0);
        EXPECT(gbc.readMem(0xe7fb), 0xd5);
        // D5 03DC
        gbc.setState(0x4903, 0xb056, 0xf4e0, 0x8f0f, 0xdf27, 0xfa6c, 0x1, 0x1);
        gbc.writeMem(0x4903, { 0xd5 });
        gbc.writeMem(0xb054, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb054);
        EXPECT(gbc.pc(), 0x4904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb054), 0x27);
        EXPECT(gbc.readMem(0xb055), 0xdf);
        // D5 03DE
        gbc.setState(0x5336, 0x9a3d, 0xdb20, 0x7287, 0xc970, 0xa192, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xd5 });
        gbc.writeMem(0x9a3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9a3b);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3b), 0x70);
        EXPECT(gbc.readMem(0x9a3c), 0xc9);
        // D5 03DF
        gbc.setState(0x2864, 0x8aff, 0x5430, 0xb7b8, 0x3cea, 0x42c1, 0x1, 0x0);
        gbc.writeMem(0x2864, { 0xd5 });
        gbc.writeMem(0x8afd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8afd);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afd), 0xea);
        EXPECT(gbc.readMem(0x8afe), 0x3c);
        // D5 03E2
        gbc.setState(0x665e, 0x9066, 0xc450, 0x18e8, 0xf04, 0x6a27, 0x0, 0x1);
        gbc.writeMem(0x665e, { 0xd5 });
        gbc.writeMem(0x9064, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9064);
        EXPECT(gbc.pc(), 0x665f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9064), 0x4);
        EXPECT(gbc.readMem(0x9065), 0xf);
        // D5 03E7
        gbc.setState(0x40d7, 0x8123, 0x1a20, 0xb108, 0xa0ee, 0x8591, 0x1, 0x1);
        gbc.writeMem(0x40d7, { 0xd5 });
        gbc.writeMem(0x8121, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0x40d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8121), 0xee);
        EXPECT(gbc.readMem(0x8122), 0xa0);
    }
}
#endif
