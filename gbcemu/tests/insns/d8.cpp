#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_d8)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_d8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D8 0000
        gbc.setState(0xde1e, 0xcfeb, 0x99b0, 0x4e45, 0x632b, 0xdee4, 0x0, 0x1);
        gbc.writeMem(0xcfeb, { 0x30, 0x80 });
        gbc.writeMem(0xde1e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcfed);
        EXPECT(gbc.pc(), 0x8030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfeb), 0x30);
        EXPECT(gbc.readMem(0xcfec), 0x80);
        EXPECT(gbc.readMem(0xde1e), 0xd8);
        // D8 0001
        gbc.setState(0x313d, 0x6022, 0x540, 0x768c, 0xccc0, 0x3338, 0x0, 0x0);
        gbc.writeMem(0x313d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6022);
        EXPECT(gbc.pc(), 0x313e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0002
        gbc.setState(0xc829, 0xb660, 0x1220, 0x7865, 0x3890, 0x4847, 0x1, 0x0);
        gbc.writeMem(0xc829, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb660);
        EXPECT(gbc.pc(), 0xc82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc829), 0xd8);
        // D8 0003
        gbc.setState(0xe9fc, 0x9658, 0x3c60, 0x4aa5, 0x8989, 0x3df5, 0x0, 0x1);
        gbc.writeMem(0xe9fc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9658);
        EXPECT(gbc.pc(), 0xe9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9fc), 0xd8);
        // D8 0004
        gbc.setState(0x6dc0, 0xcc98, 0x8550, 0x3011, 0x7fad, 0x8373, 0x0, 0x1);
        gbc.writeMem(0x6dc0, { 0xd8 });
        gbc.writeMem(0xcc98, { 0xe3, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcc9a);
        EXPECT(gbc.pc(), 0x84e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc98), 0xe3);
        EXPECT(gbc.readMem(0xcc99), 0x84);
        // D8 0005
        gbc.setState(0xaca3, 0xe281, 0x1f60, 0x704a, 0x7658, 0xd99d, 0x0, 0x1);
        gbc.writeMem(0xaca3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe281);
        EXPECT(gbc.pc(), 0xaca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca3), 0xd8);
        // D8 0006
        gbc.setState(0x9a25, 0xf06d, 0xfd90, 0x83f4, 0x680b, 0xde30, 0x1, 0x0);
        gbc.writeMem(0x9a25, { 0xd8 });
        gbc.writeMem(0xf06d, { 0x9a, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf06f);
        EXPECT(gbc.pc(), 0x7f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a25), 0xd8);
        EXPECT(gbc.readMem(0xf06d), 0x9a);
        EXPECT(gbc.readMem(0xf06e), 0x7f);
        // D8 0007
        gbc.setState(0x3037, 0x9de2, 0x9800, 0xd3c9, 0xe045, 0x3bd7, 0x1, 0x0);
        gbc.writeMem(0x3037, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0x3038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0008
        gbc.setState(0x1664, 0xf236, 0x6d10, 0x5e4b, 0x38d, 0x9299, 0x0, 0x1);
        gbc.writeMem(0x1664, { 0xd8 });
        gbc.writeMem(0xf236, { 0x21, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf238);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf236), 0x21);
        EXPECT(gbc.readMem(0xf237), 0x15);
        // D8 0009
        gbc.setState(0x9ea5, 0xaed7, 0x8310, 0xf6da, 0x124c, 0xa3c5, 0x0, 0x1);
        gbc.writeMem(0x9ea5, { 0xd8 });
        gbc.writeMem(0xaed7, { 0xe4, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0xf7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea5), 0xd8);
        EXPECT(gbc.readMem(0xaed7), 0xe4);
        EXPECT(gbc.readMem(0xaed8), 0xf7);
        // D8 000A
        gbc.setState(0xdcd5, 0xe95, 0xce60, 0x594, 0x4071, 0x1b6c, 0x0, 0x0);
        gbc.writeMem(0xdcd5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe95);
        EXPECT(gbc.pc(), 0xdcd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd5), 0xd8);
        // D8 000B
        gbc.setState(0x2843, 0xe9fe, 0x5410, 0x212e, 0x964, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0x2843, { 0xd8 });
        gbc.writeMem(0xe9fe, { 0xbb, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xea00);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fe), 0xbb);
        EXPECT(gbc.readMem(0xe9ff), 0x78);
        // D8 000C
        gbc.setState(0xdfb3, 0xc52, 0xd740, 0xcfb7, 0x627f, 0x9c14, 0x0, 0x1);
        gbc.writeMem(0xdfb3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc52);
        EXPECT(gbc.pc(), 0xdfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb3), 0xd8);
        // D8 000D
        gbc.setState(0x4c48, 0x62fd, 0xf2c0, 0x1b, 0xf622, 0x92d7, 0x1, 0x1);
        gbc.writeMem(0x4c48, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x62fd);
        EXPECT(gbc.pc(), 0x4c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 000E
        gbc.setState(0x353a, 0x8186, 0x3220, 0xb9d8, 0x9dd3, 0xc8a9, 0x1, 0x0);
        gbc.writeMem(0x353a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8186);
        EXPECT(gbc.pc(), 0x353b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 000F
        gbc.setState(0x17a2, 0x1dc4, 0x3fd0, 0xe8c6, 0xc84, 0xeb2, 0x1, 0x0);
        gbc.writeMem(0x17a2, { 0xd8 });
        gbc.writeMem(0x1dc4, { 0x2, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1dc6);
        EXPECT(gbc.pc(), 0x8402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0010
        gbc.setState(0x9df7, 0xd6ba, 0xd780, 0xf1bf, 0x1e3f, 0x42c2, 0x0, 0x0);
        gbc.writeMem(0x9df7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd6ba);
        EXPECT(gbc.pc(), 0x9df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df7), 0xd8);
        // D8 0012
        gbc.setState(0xebfa, 0x4912, 0x4640, 0xc75b, 0x3e51, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0xebfa, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4912);
        EXPECT(gbc.pc(), 0xebfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfa), 0xd8);
        // D8 0013
        gbc.setState(0x3aa2, 0xc9ae, 0xbb60, 0x949c, 0xa8ae, 0xa208, 0x0, 0x0);
        gbc.writeMem(0x3aa2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc9ae);
        EXPECT(gbc.pc(), 0x3aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0014
        gbc.setState(0xef60, 0x774, 0xf70, 0xb69a, 0x10f9, 0xa1e4, 0x0, 0x0);
        gbc.writeMem(0x774, { 0xf1, 0x2f });
        gbc.writeMem(0xef60, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x776);
        EXPECT(gbc.pc(), 0x2ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef60), 0xd8);
        // D8 0015
        gbc.setState(0x8835, 0x7060, 0xd8c0, 0x742f, 0x4e95, 0x5826, 0x1, 0x0);
        gbc.writeMem(0x8835, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7060);
        EXPECT(gbc.pc(), 0x8836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8835), 0xd8);
        // D8 0016
        gbc.setState(0x2d, 0x5a81, 0xe970, 0x36a1, 0x1e7, 0xf126, 0x1, 0x1);
        gbc.writeMem(0x2d, { 0xd8 });
        gbc.writeMem(0x5a81, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5a83);
        EXPECT(gbc.pc(), 0xb0d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0017
        gbc.setState(0x7ed7, 0x4f18, 0xc5a0, 0x8ad2, 0xb3fa, 0x3996, 0x0, 0x1);
        gbc.writeMem(0x7ed7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4f18);
        EXPECT(gbc.pc(), 0x7ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0018
        gbc.setState(0x3cf1, 0xe0c6, 0x3670, 0x47e, 0x79b0, 0x67b3, 0x0, 0x0);
        gbc.writeMem(0x3cf1, { 0xd8 });
        gbc.writeMem(0xe0c6, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe0c8);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c6), 0xe);
        EXPECT(gbc.readMem(0xe0c7), 0xa4);
        // D8 0019
        gbc.setState(0x3c6c, 0x731b, 0xf2f0, 0xb09d, 0x5680, 0x8c16, 0x1, 0x1);
        gbc.writeMem(0x3c6c, { 0xd8 });
        gbc.writeMem(0x731b, { 0x81, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x731d);
        EXPECT(gbc.pc(), 0x6281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 001A
        gbc.setState(0x1289, 0x5f06, 0xc150, 0xe1c, 0x4745, 0xcf0d, 0x1, 0x1);
        gbc.writeMem(0x1289, { 0xd8 });
        gbc.writeMem(0x5f06, { 0x4c, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5f08);
        EXPECT(gbc.pc(), 0x1f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 001B
        gbc.setState(0x73f3, 0x5198, 0xd970, 0x6d54, 0xa2bd, 0xc817, 0x0, 0x0);
        gbc.writeMem(0x5198, { 0xad, 0x10 });
        gbc.writeMem(0x73f3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x519a);
        EXPECT(gbc.pc(), 0x10ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 001C
        gbc.setState(0xc28e, 0x3c4, 0x7060, 0x9908, 0x19, 0x4957, 0x0, 0x1);
        gbc.writeMem(0xc28e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3c4);
        EXPECT(gbc.pc(), 0xc28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28e), 0xd8);
        // D8 001E
        gbc.setState(0xab5e, 0x4870, 0x61c0, 0xc66e, 0x2bca, 0xdd57, 0x0, 0x0);
        gbc.writeMem(0xab5e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4870);
        EXPECT(gbc.pc(), 0xab5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5e), 0xd8);
        // D8 001F
        gbc.setState(0x76a4, 0x6e7b, 0xcb00, 0x818c, 0x291f, 0xe493, 0x0, 0x1);
        gbc.writeMem(0x76a4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6e7b);
        EXPECT(gbc.pc(), 0x76a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0020
        gbc.setState(0xcb93, 0x9d2f, 0xe320, 0x2ffb, 0x778f, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0xcb93, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0xcb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb93), 0xd8);
        // D8 0021
        gbc.setState(0x6ab2, 0xddf5, 0x2d40, 0xfa30, 0x6ce5, 0x559, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xddf5);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0022
        gbc.setState(0xd38c, 0xa4e6, 0x5f60, 0x23cb, 0xab3, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0xd38c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa4e6);
        EXPECT(gbc.pc(), 0xd38d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38c), 0xd8);
        // D8 0023
        gbc.setState(0xc135, 0x7a33, 0xae40, 0x6eac, 0x47fe, 0x15f4, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7a33);
        EXPECT(gbc.pc(), 0xc136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc135), 0xd8);
        // D8 0024
        gbc.setState(0x9d7d, 0xb0be, 0x2220, 0xa083, 0x27dc, 0x4dae, 0x0, 0x1);
        gbc.writeMem(0x9d7d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0x9d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7d), 0xd8);
        // D8 0025
        gbc.setState(0x575, 0x3d5f, 0x9eb0, 0x9bcd, 0xbdf8, 0x9afd, 0x1, 0x1);
        gbc.writeMem(0x575, { 0xd8 });
        gbc.writeMem(0x3d5f, { 0xc7, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3d61);
        EXPECT(gbc.pc(), 0x49c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0027
        gbc.setState(0x1075, 0x143a, 0x5250, 0xc71e, 0x1b0c, 0x5556, 0x0, 0x1);
        gbc.writeMem(0x1075, { 0xd8 });
        gbc.writeMem(0x143a, { 0x46, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x143c);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0028
        gbc.setState(0xc0b4, 0xbea6, 0x92c0, 0x6b0b, 0xbb63, 0x3dd1, 0x1, 0x1);
        gbc.writeMem(0xc0b4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbea6);
        EXPECT(gbc.pc(), 0xc0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b4), 0xd8);
        // D8 0029
        gbc.setState(0xecc2, 0xd126, 0x40d0, 0x6aa2, 0xe9d2, 0xb596, 0x0, 0x1);
        gbc.writeMem(0xd126, { 0x5, 0x4a });
        gbc.writeMem(0xecc2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd128);
        EXPECT(gbc.pc(), 0x4a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd126), 0x5);
        EXPECT(gbc.readMem(0xd127), 0x4a);
        EXPECT(gbc.readMem(0xecc2), 0xd8);
        // D8 002A
        gbc.setState(0x6697, 0xbf0, 0x39d0, 0x9b34, 0x85a2, 0xc356, 0x0, 0x0);
        gbc.writeMem(0xbf0, { 0xf, 0x9a });
        gbc.writeMem(0x6697, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbf2);
        EXPECT(gbc.pc(), 0x9a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 002B
        gbc.setState(0x7271, 0xda8e, 0xf380, 0x579a, 0xf0a8, 0xbba2, 0x0, 0x1);
        gbc.writeMem(0x7271, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xda8e);
        EXPECT(gbc.pc(), 0x7272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 002C
        gbc.setState(0x711a, 0x12f6, 0x8c40, 0xcb1b, 0x5fc7, 0x3353, 0x0, 0x1);
        gbc.writeMem(0x711a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x12f6);
        EXPECT(gbc.pc(), 0x711b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 002D
        gbc.setState(0x4dbf, 0x277d, 0xf010, 0x15f8, 0xcd92, 0x57f2, 0x0, 0x1);
        gbc.writeMem(0x277d, { 0xd, 0xc5 });
        gbc.writeMem(0x4dbf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 002E
        gbc.setState(0xccfd, 0x2250, 0x2880, 0x7513, 0xa81f, 0x2bf6, 0x1, 0x0);
        gbc.writeMem(0xccfd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2250);
        EXPECT(gbc.pc(), 0xccfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfd), 0xd8);
        // D8 002F
        gbc.setState(0x8a0f, 0xdeb8, 0xbdf0, 0x58a0, 0xb0c2, 0xb00a, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xd8 });
        gbc.writeMem(0xdeb8, { 0x34, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdeba);
        EXPECT(gbc.pc(), 0xae34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0f), 0xd8);
        EXPECT(gbc.readMem(0xdeb8), 0x34);
        EXPECT(gbc.readMem(0xdeb9), 0xae);
        // D8 0030
        gbc.setState(0xb93b, 0xaeed, 0x7740, 0xc792, 0x8d18, 0x675f, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaeed);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93b), 0xd8);
        // D8 0031
        gbc.setState(0xb8bd, 0x1038, 0xf850, 0xecce, 0x2484, 0xd176, 0x1, 0x1);
        gbc.writeMem(0x1038, { 0xd9, 0x1e });
        gbc.writeMem(0xb8bd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x103a);
        EXPECT(gbc.pc(), 0x1ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8bd), 0xd8);
        // D8 0032
        gbc.setState(0x81ce, 0x2bfe, 0x7980, 0xb6c1, 0xc134, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0x81ce, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0x81cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ce), 0xd8);
        // D8 0033
        gbc.setState(0x6aa5, 0x3567, 0xa1d0, 0x4183, 0xa134, 0xe0f3, 0x0, 0x0);
        gbc.writeMem(0x3567, { 0x61, 0xff });
        gbc.writeMem(0x6aa5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3569);
        EXPECT(gbc.pc(), 0xff61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0034
        gbc.setState(0x5dbd, 0x10f5, 0xc080, 0xc9eb, 0x90e8, 0xefd4, 0x0, 0x1);
        gbc.writeMem(0x5dbd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x10f5);
        EXPECT(gbc.pc(), 0x5dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0035
        gbc.setState(0x97bc, 0xe40b, 0xe430, 0x4636, 0xfbff, 0xc214, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0xd8 });
        gbc.writeMem(0xe40b, { 0x4d, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe40d);
        EXPECT(gbc.pc(), 0x3b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bc), 0xd8);
        EXPECT(gbc.readMem(0xe40b), 0x4d);
        EXPECT(gbc.readMem(0xe40c), 0x3b);
        // D8 0036
        gbc.setState(0xb409, 0x9595, 0xa420, 0x2890, 0xfa7e, 0xbbc9, 0x0, 0x0);
        gbc.writeMem(0xb409, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb409), 0xd8);
        // D8 0037
        gbc.setState(0xb14b, 0xe009, 0xd960, 0x3afa, 0x850f, 0x7569, 0x1, 0x0);
        gbc.writeMem(0xb14b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe009);
        EXPECT(gbc.pc(), 0xb14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb14b), 0xd8);
        // D8 0038
        gbc.setState(0xb53c, 0x938, 0x8810, 0x1df7, 0x8d2, 0x4eda, 0x1, 0x0);
        gbc.writeMem(0x938, { 0xbd, 0x2a });
        gbc.writeMem(0xb53c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x93a);
        EXPECT(gbc.pc(), 0x2abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53c), 0xd8);
        // D8 0039
        gbc.setState(0x813, 0xbd51, 0x4c90, 0x3dbf, 0x28e1, 0x3e07, 0x0, 0x0);
        gbc.writeMem(0x813, { 0xd8 });
        gbc.writeMem(0xbd51, { 0xeb, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbd53);
        EXPECT(gbc.pc(), 0xa5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd51), 0xeb);
        EXPECT(gbc.readMem(0xbd52), 0xa5);
        // D8 003A
        gbc.setState(0xef6e, 0xbdf1, 0x3ab0, 0xaf80, 0xc1b5, 0xd7ae, 0x1, 0x0);
        gbc.writeMem(0xbdf1, { 0xc2, 0xe3 });
        gbc.writeMem(0xef6e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbdf3);
        EXPECT(gbc.pc(), 0xe3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf1), 0xc2);
        EXPECT(gbc.readMem(0xbdf2), 0xe3);
        EXPECT(gbc.readMem(0xef6e), 0xd8);
        // D8 003B
        gbc.setState(0xc66c, 0x4145, 0x66c0, 0xb87a, 0x9d47, 0x1e38, 0x0, 0x0);
        gbc.writeMem(0xc66c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4145);
        EXPECT(gbc.pc(), 0xc66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66c), 0xd8);
        // D8 003C
        gbc.setState(0xc98, 0xa4c4, 0x22f0, 0x4caa, 0x58af, 0x6def, 0x1, 0x1);
        gbc.writeMem(0xc98, { 0xd8 });
        gbc.writeMem(0xa4c4, { 0x26, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa4c6);
        EXPECT(gbc.pc(), 0xdd26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c4), 0x26);
        EXPECT(gbc.readMem(0xa4c5), 0xdd);
        // D8 003D
        gbc.setState(0xeb25, 0xea91, 0x6ab0, 0xae50, 0xc5ba, 0x632c, 0x0, 0x0);
        gbc.writeMem(0xea91, { 0x61, 0xdb });
        gbc.writeMem(0xeb25, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xea93);
        EXPECT(gbc.pc(), 0xdb61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea91), 0x61);
        EXPECT(gbc.readMem(0xea92), 0xdb);
        EXPECT(gbc.readMem(0xeb25), 0xd8);
        // D8 003E
        gbc.setState(0x33c4, 0xa5af, 0xc580, 0x2501, 0x2738, 0xfd46, 0x1, 0x0);
        gbc.writeMem(0x33c4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa5af);
        EXPECT(gbc.pc(), 0x33c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 003F
        gbc.setState(0x27e4, 0xba, 0x4670, 0x7822, 0x7d0f, 0x6543, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xbc, 0x27 });
        gbc.writeMem(0x27e4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbc);
        EXPECT(gbc.pc(), 0x27bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0040
        gbc.setState(0xb13, 0xb19f, 0x80d0, 0x3a5, 0x20f8, 0x573d, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xd8 });
        gbc.writeMem(0xb19f, { 0xb1, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb1a1);
        EXPECT(gbc.pc(), 0x77b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19f), 0xb1);
        EXPECT(gbc.readMem(0xb1a0), 0x77);
        // D8 0041
        gbc.setState(0x6d9, 0xa210, 0x8860, 0xb2ce, 0x4991, 0x47f7, 0x1, 0x1);
        gbc.writeMem(0x6d9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa210);
        EXPECT(gbc.pc(), 0x6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0042
        gbc.setState(0x7341, 0x9bb5, 0xb890, 0x1bc, 0x6f0c, 0x6082, 0x0, 0x1);
        gbc.writeMem(0x7341, { 0xd8 });
        gbc.writeMem(0x9bb5, { 0x8f, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9bb7);
        EXPECT(gbc.pc(), 0xd28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb5), 0x8f);
        EXPECT(gbc.readMem(0x9bb6), 0xd2);
        // D8 0043
        gbc.setState(0xa49a, 0x4a64, 0x8750, 0xa315, 0x2c9d, 0x63c, 0x0, 0x1);
        gbc.writeMem(0x4a64, { 0x49, 0x29 });
        gbc.writeMem(0xa49a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4a66);
        EXPECT(gbc.pc(), 0x2949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49a), 0xd8);
        // D8 0044
        gbc.setState(0x6daf, 0xfb54, 0xec70, 0xcf48, 0x9ccc, 0x5243, 0x1, 0x1);
        gbc.writeMem(0x6daf, { 0xd8 });
        gbc.writeMem(0xfb54, { 0x82, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfb56);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb54), 0x82);
        EXPECT(gbc.readMem(0xfb55), 0x59);
        // D8 0045
        gbc.setState(0xc13e, 0x4f68, 0xd0d0, 0x8a2b, 0x4851, 0xcabb, 0x0, 0x0);
        gbc.writeMem(0x4f68, { 0x41, 0x8f });
        gbc.writeMem(0xc13e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4f6a);
        EXPECT(gbc.pc(), 0x8f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13e), 0xd8);
        // D8 0046
        gbc.setState(0xce87, 0x1a3d, 0x7560, 0x5b7f, 0xad5d, 0xcea6, 0x0, 0x1);
        gbc.writeMem(0xce87, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1a3d);
        EXPECT(gbc.pc(), 0xce88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce87), 0xd8);
        // D8 0047
        gbc.setState(0x96ad, 0x5222, 0x68c0, 0x90, 0x82b9, 0x835, 0x0, 0x1);
        gbc.writeMem(0x96ad, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5222);
        EXPECT(gbc.pc(), 0x96ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ad), 0xd8);
        // D8 0049
        gbc.setState(0x2a54, 0x1460, 0x2e30, 0x8571, 0xad1c, 0xe81c, 0x1, 0x0);
        gbc.writeMem(0x1460, { 0x34, 0xc1 });
        gbc.writeMem(0x2a54, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1462);
        EXPECT(gbc.pc(), 0xc134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 004A
        gbc.setState(0x7711, 0xdb08, 0x33d0, 0xe921, 0xe813, 0xcd32, 0x0, 0x1);
        gbc.writeMem(0x7711, { 0xd8 });
        gbc.writeMem(0xdb08, { 0xbb, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdb0a);
        EXPECT(gbc.pc(), 0x4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb08), 0xbb);
        EXPECT(gbc.readMem(0xdb09), 0x4);
        // D8 004B
        gbc.setState(0x495, 0xcb71, 0x8a40, 0x792b, 0x8267, 0xaed4, 0x1, 0x0);
        gbc.writeMem(0x495, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcb71);
        EXPECT(gbc.pc(), 0x496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 004C
        gbc.setState(0xbe3c, 0x5aa8, 0x1040, 0xbe30, 0x99a0, 0xa328, 0x1, 0x0);
        gbc.writeMem(0xbe3c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5aa8);
        EXPECT(gbc.pc(), 0xbe3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3c), 0xd8);
        // D8 004D
        gbc.setState(0x4091, 0xfd46, 0x5ce0, 0xc361, 0x9730, 0xca5c, 0x0, 0x1);
        gbc.writeMem(0x4091, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfd46);
        EXPECT(gbc.pc(), 0x4092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 004E
        gbc.setState(0xd21b, 0x9917, 0x5900, 0x2610, 0x200, 0x5d55, 0x0, 0x1);
        gbc.writeMem(0xd21b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9917);
        EXPECT(gbc.pc(), 0xd21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21b), 0xd8);
        // D8 004F
        gbc.setState(0x5975, 0xce7d, 0xa310, 0x1b01, 0x3d0e, 0x1524, 0x0, 0x1);
        gbc.writeMem(0x5975, { 0xd8 });
        gbc.writeMem(0xce7d, { 0x35, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xce7f);
        EXPECT(gbc.pc(), 0x735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce7d), 0x35);
        EXPECT(gbc.readMem(0xce7e), 0x7);
        // D8 0050
        gbc.setState(0xe8e7, 0x7cd6, 0x6520, 0x6019, 0xf1f8, 0x600f, 0x0, 0x1);
        gbc.writeMem(0xe8e7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7cd6);
        EXPECT(gbc.pc(), 0xe8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e7), 0xd8);
        // D8 0051
        gbc.setState(0xa841, 0x2945, 0x80d0, 0xdb1c, 0xa2fa, 0xa014, 0x1, 0x0);
        gbc.writeMem(0x2945, { 0x55, 0xc2 });
        gbc.writeMem(0xa841, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2947);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa841), 0xd8);
        // D8 0052
        gbc.setState(0x4765, 0x8415, 0xc310, 0x13a2, 0xfbd4, 0xe8eb, 0x0, 0x0);
        gbc.writeMem(0x4765, { 0xd8 });
        gbc.writeMem(0x8415, { 0xf3, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8417);
        EXPECT(gbc.pc(), 0x63f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8415), 0xf3);
        EXPECT(gbc.readMem(0x8416), 0x63);
        // D8 0053
        gbc.setState(0x5af1, 0x145a, 0x11b0, 0x14b6, 0x1fb4, 0x11d0, 0x1, 0x0);
        gbc.writeMem(0x145a, { 0x1a, 0xf7 });
        gbc.writeMem(0x5af1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x145c);
        EXPECT(gbc.pc(), 0xf71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0054
        gbc.setState(0x84ab, 0x5bf9, 0x38e0, 0x1d04, 0x2e95, 0x619, 0x0, 0x0);
        gbc.writeMem(0x84ab, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5bf9);
        EXPECT(gbc.pc(), 0x84ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ab), 0xd8);
        // D8 0055
        gbc.setState(0xc173, 0x473c, 0xc610, 0x4d9a, 0x6e49, 0x2c84, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0x61, 0x3d });
        gbc.writeMem(0xc173, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x473e);
        EXPECT(gbc.pc(), 0x3d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc173), 0xd8);
        // D8 0056
        gbc.setState(0x1f19, 0x7f53, 0xbe50, 0x8ef6, 0x2d5f, 0xcc40, 0x0, 0x1);
        gbc.writeMem(0x1f19, { 0xd8 });
        gbc.writeMem(0x7f53, { 0x48, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7f55);
        EXPECT(gbc.pc(), 0xf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0057
        gbc.setState(0x6732, 0x8d9b, 0x3c60, 0xc052, 0x7ce3, 0x40e1, 0x0, 0x1);
        gbc.writeMem(0x6732, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8d9b);
        EXPECT(gbc.pc(), 0x6733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0058
        gbc.setState(0x59fb, 0xf0cd, 0xa5b0, 0x9f00, 0xd97e, 0x9ea0, 0x0, 0x1);
        gbc.writeMem(0x59fb, { 0xd8 });
        gbc.writeMem(0xf0cd, { 0x95, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf0cf);
        EXPECT(gbc.pc(), 0x7a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0cd), 0x95);
        EXPECT(gbc.readMem(0xf0ce), 0x7a);
        // D8 0059
        gbc.setState(0x3fde, 0x30cb, 0x3040, 0x4907, 0xe760, 0xa0c3, 0x0, 0x1);
        gbc.writeMem(0x3fde, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x30cb);
        EXPECT(gbc.pc(), 0x3fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 005A
        gbc.setState(0xc337, 0x1eb2, 0xff40, 0x3aaf, 0xdd1b, 0x7aaa, 0x0, 0x0);
        gbc.writeMem(0xc337, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1eb2);
        EXPECT(gbc.pc(), 0xc338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc337), 0xd8);
        // D8 005B
        gbc.setState(0xe1a5, 0x4be9, 0xeca0, 0x39b, 0x22e4, 0x4c25, 0x1, 0x1);
        gbc.writeMem(0xe1a5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4be9);
        EXPECT(gbc.pc(), 0xe1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a5), 0xd8);
        // D8 005C
        gbc.setState(0x48f9, 0x1154, 0xe2f0, 0xc564, 0x9e5e, 0x8e46, 0x1, 0x0);
        gbc.writeMem(0x1154, { 0x28, 0x84 });
        gbc.writeMem(0x48f9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1156);
        EXPECT(gbc.pc(), 0x8428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 005D
        gbc.setState(0xbd40, 0xc095, 0x72a0, 0xffdf, 0x3f6b, 0xb976, 0x1, 0x0);
        gbc.writeMem(0xbd40, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc095);
        EXPECT(gbc.pc(), 0xbd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd40), 0xd8);
        // D8 005E
        gbc.setState(0x80db, 0x677e, 0x3fd0, 0x9270, 0xf978, 0xaf50, 0x0, 0x0);
        gbc.writeMem(0x677e, { 0xbb, 0xbd });
        gbc.writeMem(0x80db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6780);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80db), 0xd8);
        // D8 005F
        gbc.setState(0x9db8, 0xd13c, 0xa940, 0x1e1f, 0x3140, 0xd35d, 0x1, 0x0);
        gbc.writeMem(0x9db8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd13c);
        EXPECT(gbc.pc(), 0x9db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db8), 0xd8);
        // D8 0060
        gbc.setState(0xd27e, 0xe461, 0xadc0, 0x6b7, 0x8975, 0xca05, 0x1, 0x1);
        gbc.writeMem(0xd27e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe461);
        EXPECT(gbc.pc(), 0xd27f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0xd8);
        // D8 0061
        gbc.setState(0xddc5, 0x8385, 0x9f00, 0x43cd, 0xbb99, 0x6714, 0x0, 0x0);
        gbc.writeMem(0xddc5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8385);
        EXPECT(gbc.pc(), 0xddc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc5), 0xd8);
        // D8 0062
        gbc.setState(0x1cbd, 0x1004, 0xe8d0, 0xe4ab, 0x500c, 0xaa9e, 0x1, 0x0);
        gbc.writeMem(0x1004, { 0x2d, 0x6 });
        gbc.writeMem(0x1cbd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1006);
        EXPECT(gbc.pc(), 0x62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0063
        gbc.setState(0x58d, 0x297b, 0x69e0, 0x7dd0, 0xb479, 0x76e2, 0x0, 0x0);
        gbc.writeMem(0x58d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0x58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0064
        gbc.setState(0x1913, 0x3e34, 0xf9f0, 0x726a, 0x3043, 0xbf20, 0x0, 0x1);
        gbc.writeMem(0x1913, { 0xd8 });
        gbc.writeMem(0x3e34, { 0x22, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3e36);
        EXPECT(gbc.pc(), 0xd422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0065
        gbc.setState(0x4ff8, 0x816e, 0xf4e0, 0x70b5, 0x1f5b, 0xcfbf, 0x0, 0x0);
        gbc.writeMem(0x4ff8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x816e);
        EXPECT(gbc.pc(), 0x4ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0066
        gbc.setState(0x49d4, 0xd6b8, 0xd3c0, 0x98bc, 0xf6a1, 0x2cf9, 0x1, 0x1);
        gbc.writeMem(0x49d4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd6b8);
        EXPECT(gbc.pc(), 0x49d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0067
        gbc.setState(0x2818, 0xa7e4, 0x4640, 0xa390, 0xd73b, 0xf02e, 0x0, 0x1);
        gbc.writeMem(0x2818, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa7e4);
        EXPECT(gbc.pc(), 0x2819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0068
        gbc.setState(0x7152, 0xbbb0, 0x4f20, 0xef25, 0x5a7, 0x6f7, 0x0, 0x1);
        gbc.writeMem(0x7152, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbbb0);
        EXPECT(gbc.pc(), 0x7153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0069
        gbc.setState(0xd9ca, 0x465f, 0xf300, 0xcb14, 0xe107, 0xaba2, 0x1, 0x0);
        gbc.writeMem(0xd9ca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x465f);
        EXPECT(gbc.pc(), 0xd9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ca), 0xd8);
        // D8 006A
        gbc.setState(0x15dc, 0x88f, 0xd150, 0xa712, 0x7f44, 0x20db, 0x1, 0x0);
        gbc.writeMem(0x88f, { 0xdc, 0x42 });
        gbc.writeMem(0x15dc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x891);
        EXPECT(gbc.pc(), 0x42dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 006B
        gbc.setState(0xc912, 0x93fc, 0x2f00, 0xc115, 0xe677, 0x1420, 0x1, 0x1);
        gbc.writeMem(0xc912, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x93fc);
        EXPECT(gbc.pc(), 0xc913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc912), 0xd8);
        // D8 006C
        gbc.setState(0x2350, 0xa363, 0x9860, 0x6e2d, 0xc387, 0xc3f3, 0x1, 0x1);
        gbc.writeMem(0x2350, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa363);
        EXPECT(gbc.pc(), 0x2351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 006D
        gbc.setState(0x74e, 0x85da, 0x9c20, 0xeec2, 0x32f3, 0x42b8, 0x0, 0x1);
        gbc.writeMem(0x74e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x85da);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 006E
        gbc.setState(0xb742, 0xf833, 0x27e0, 0x425f, 0x2a05, 0x369a, 0x0, 0x1);
        gbc.writeMem(0xb742, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf833);
        EXPECT(gbc.pc(), 0xb743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb742), 0xd8);
        // D8 006F
        gbc.setState(0x239b, 0x3594, 0xdd30, 0x6075, 0x5c, 0xfcb7, 0x0, 0x0);
        gbc.writeMem(0x239b, { 0xd8 });
        gbc.writeMem(0x3594, { 0x2b, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3596);
        EXPECT(gbc.pc(), 0xfe2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0071
        gbc.setState(0x3f51, 0xc5a9, 0x8820, 0xc765, 0xf28, 0x7388, 0x0, 0x1);
        gbc.writeMem(0x3f51, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc5a9);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0072
        gbc.setState(0xa3bd, 0x2c6f, 0x86c0, 0x7548, 0x1d6b, 0xe0ee, 0x1, 0x1);
        gbc.writeMem(0xa3bd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2c6f);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bd), 0xd8);
        // D8 0073
        gbc.setState(0x9ec6, 0x727e, 0x31a0, 0x4e67, 0x2d5c, 0x28fd, 0x1, 0x0);
        gbc.writeMem(0x9ec6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x727e);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0xd8);
        // D8 0074
        gbc.setState(0xcda4, 0xffd9, 0xc910, 0x76bb, 0x5105, 0x5de, 0x0, 0x0);
        gbc.writeMem(0xcda4, { 0xd8 });
        gbc.writeMem(0xffd9, { 0xa3, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xffdb);
        EXPECT(gbc.pc(), 0x7a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda4), 0xd8);
        EXPECT(gbc.readMem(0xffd9), 0xa3);
        EXPECT(gbc.readMem(0xffda), 0x7);
        // D8 0075
        gbc.setState(0xaa64, 0x13ed, 0x6cc0, 0xce7d, 0x255d, 0xb88d, 0x1, 0x1);
        gbc.writeMem(0xaa64, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x13ed);
        EXPECT(gbc.pc(), 0xaa65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa64), 0xd8);
        // D8 0076
        gbc.setState(0xab5e, 0x9d5b, 0x7e70, 0x938a, 0x178f, 0x8494, 0x0, 0x1);
        gbc.writeMem(0x9d5b, { 0xee, 0x85 });
        gbc.writeMem(0xab5e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9d5d);
        EXPECT(gbc.pc(), 0x85ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5b), 0xee);
        EXPECT(gbc.readMem(0x9d5c), 0x85);
        EXPECT(gbc.readMem(0xab5e), 0xd8);
        // D8 0077
        gbc.setState(0xa85e, 0xcc0c, 0xafd0, 0xfd38, 0xb353, 0xe351, 0x1, 0x0);
        gbc.writeMem(0xa85e, { 0xd8 });
        gbc.writeMem(0xcc0c, { 0xe0, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcc0e);
        EXPECT(gbc.pc(), 0x29e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85e), 0xd8);
        EXPECT(gbc.readMem(0xcc0c), 0xe0);
        EXPECT(gbc.readMem(0xcc0d), 0x29);
        // D8 0078
        gbc.setState(0x58e6, 0x6f99, 0x8c40, 0x7806, 0xbb60, 0x2c7, 0x0, 0x0);
        gbc.writeMem(0x58e6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6f99);
        EXPECT(gbc.pc(), 0x58e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0079
        gbc.setState(0xd216, 0x12f6, 0x7000, 0xd654, 0x870, 0xcf51, 0x0, 0x1);
        gbc.writeMem(0xd216, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x12f6);
        EXPECT(gbc.pc(), 0xd217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd216), 0xd8);
        // D8 007A
        gbc.setState(0x9cf3, 0xa591, 0x4ca0, 0x20c1, 0xa231, 0x8322, 0x0, 0x0);
        gbc.writeMem(0x9cf3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa591);
        EXPECT(gbc.pc(), 0x9cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf3), 0xd8);
        // D8 007C
        gbc.setState(0xe16c, 0x5027, 0x3330, 0xd338, 0x3e42, 0x827, 0x0, 0x1);
        gbc.writeMem(0x5027, { 0x38, 0xea });
        gbc.writeMem(0xe16c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5029);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe16c), 0xd8);
        // D8 007D
        gbc.setState(0xa24d, 0x84c, 0x3c60, 0x37df, 0xb15e, 0x3e8a, 0x1, 0x1);
        gbc.writeMem(0xa24d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x84c);
        EXPECT(gbc.pc(), 0xa24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24d), 0xd8);
        // D8 007F
        gbc.setState(0x77b9, 0x7762, 0xf570, 0xf5f5, 0x9f43, 0xd932, 0x0, 0x1);
        gbc.writeMem(0x7762, { 0x60, 0x46 });
        gbc.writeMem(0x77b9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0x4660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0080
        gbc.setState(0x79dc, 0xbdd9, 0x66f0, 0x1dd6, 0x128b, 0x425d, 0x1, 0x0);
        gbc.writeMem(0x79dc, { 0xd8 });
        gbc.writeMem(0xbdd9, { 0xf6, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbddb);
        EXPECT(gbc.pc(), 0xa6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd9), 0xf6);
        EXPECT(gbc.readMem(0xbdda), 0xa6);
        // D8 0081
        gbc.setState(0x516a, 0xb2ea, 0xf910, 0xdc5c, 0x568d, 0xf131, 0x0, 0x1);
        gbc.writeMem(0x516a, { 0xd8 });
        gbc.writeMem(0xb2ea, { 0x6f, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0xa96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ea), 0x6f);
        EXPECT(gbc.readMem(0xb2eb), 0xa9);
        // D8 0082
        gbc.setState(0xeec0, 0xc233, 0xbb0, 0xba2c, 0xca46, 0x5ba9, 0x1, 0x0);
        gbc.writeMem(0xc233, { 0x7f, 0x18 });
        gbc.writeMem(0xeec0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc235);
        EXPECT(gbc.pc(), 0x187f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc233), 0x7f);
        EXPECT(gbc.readMem(0xc234), 0x18);
        EXPECT(gbc.readMem(0xeec0), 0xd8);
        // D8 0083
        gbc.setState(0x1d92, 0xfff, 0xbbd0, 0x9743, 0x43a6, 0x579, 0x0, 0x0);
        gbc.writeMem(0xfff, { 0x72, 0xfe });
        gbc.writeMem(0x1d92, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1001);
        EXPECT(gbc.pc(), 0xfe72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0084
        gbc.setState(0x2712, 0x99f4, 0x4d40, 0x2624, 0xa8e8, 0xfe72, 0x1, 0x1);
        gbc.writeMem(0x2712, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x99f4);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0086
        gbc.setState(0x347c, 0x665e, 0x69b0, 0x7943, 0x6fa1, 0xe86a, 0x0, 0x0);
        gbc.writeMem(0x347c, { 0xd8 });
        gbc.writeMem(0x665e, { 0xc7, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6660);
        EXPECT(gbc.pc(), 0x79c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0087
        gbc.setState(0xcfe, 0xf34e, 0x2a50, 0xaff9, 0xbe46, 0x3101, 0x1, 0x1);
        gbc.writeMem(0xcfe, { 0xd8 });
        gbc.writeMem(0xf34e, { 0x86, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf350);
        EXPECT(gbc.pc(), 0x3b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf34e), 0x86);
        EXPECT(gbc.readMem(0xf34f), 0x3b);
        // D8 0088
        gbc.setState(0xb033, 0x11aa, 0xdda0, 0x145d, 0x8989, 0x36ac, 0x1, 0x0);
        gbc.writeMem(0xb033, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x11aa);
        EXPECT(gbc.pc(), 0xb034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb033), 0xd8);
        // D8 0089
        gbc.setState(0x2a5f, 0xdf8f, 0x9110, 0x55c8, 0x2be8, 0xa799, 0x1, 0x1);
        gbc.writeMem(0x2a5f, { 0xd8 });
        gbc.writeMem(0xdf8f, { 0xab, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdf91);
        EXPECT(gbc.pc(), 0x55ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8f), 0xab);
        EXPECT(gbc.readMem(0xdf90), 0x55);
        // D8 008A
        gbc.setState(0x80f4, 0x2b6, 0x6670, 0xda95, 0xc5b3, 0x9280, 0x0, 0x0);
        gbc.writeMem(0x2b6, { 0x7f, 0xa8 });
        gbc.writeMem(0x80f4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0xa87f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f4), 0xd8);
        // D8 008B
        gbc.setState(0x9c2, 0x7333, 0x6050, 0xbeab, 0xfe38, 0x5fa7, 0x0, 0x1);
        gbc.writeMem(0x9c2, { 0xd8 });
        gbc.writeMem(0x7333, { 0x69, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7335);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 008C
        gbc.setState(0x1d24, 0x60d1, 0x3690, 0x2958, 0xe8d2, 0x4467, 0x0, 0x0);
        gbc.writeMem(0x1d24, { 0xd8 });
        gbc.writeMem(0x60d1, { 0xc5, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x10c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 008D
        gbc.setState(0x8516, 0xe702, 0x8a70, 0x5de6, 0x2d2d, 0x7b04, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0xd8 });
        gbc.writeMem(0xe702, { 0x49, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe704);
        EXPECT(gbc.pc(), 0xbd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8516), 0xd8);
        EXPECT(gbc.readMem(0xe702), 0x49);
        EXPECT(gbc.readMem(0xe703), 0xbd);
        // D8 008F
        gbc.setState(0x69bd, 0xf18, 0x5470, 0xe5fb, 0x86ef, 0xbe52, 0x0, 0x1);
        gbc.writeMem(0xf18, { 0x99, 0x3d });
        gbc.writeMem(0x69bd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf1a);
        EXPECT(gbc.pc(), 0x3d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0090
        gbc.setState(0x6a1c, 0x9393, 0x1a00, 0x515e, 0x417a, 0x6f0, 0x0, 0x1);
        gbc.writeMem(0x6a1c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9393);
        EXPECT(gbc.pc(), 0x6a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0091
        gbc.setState(0x3fe1, 0xc7b5, 0xfa00, 0xe215, 0x1a5e, 0x3799, 0x0, 0x1);
        gbc.writeMem(0x3fe1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0092
        gbc.setState(0x8443, 0x4fa5, 0xa910, 0x7018, 0xffb9, 0xbf1e, 0x0, 0x1);
        gbc.writeMem(0x4fa5, { 0x62, 0xfa });
        gbc.writeMem(0x8443, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4fa7);
        EXPECT(gbc.pc(), 0xfa62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8443), 0xd8);
        // D8 0093
        gbc.setState(0xb8e7, 0xe3c5, 0x6750, 0x5d9a, 0xde03, 0xb26d, 0x1, 0x1);
        gbc.writeMem(0xb8e7, { 0xd8 });
        gbc.writeMem(0xe3c5, { 0xc9, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe3c7);
        EXPECT(gbc.pc(), 0x73c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e7), 0xd8);
        EXPECT(gbc.readMem(0xe3c5), 0xc9);
        EXPECT(gbc.readMem(0xe3c6), 0x73);
        // D8 0094
        gbc.setState(0x1454, 0x9543, 0xb4d0, 0x186, 0xf0d9, 0xeb11, 0x0, 0x0);
        gbc.writeMem(0x1454, { 0xd8 });
        gbc.writeMem(0x9543, { 0xed, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9545);
        EXPECT(gbc.pc(), 0x64ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9543), 0xed);
        EXPECT(gbc.readMem(0x9544), 0x64);
        // D8 0095
        gbc.setState(0x98e9, 0xf2e, 0x2680, 0x8d7c, 0xdea6, 0x8f4e, 0x1, 0x0);
        gbc.writeMem(0x98e9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0x98ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e9), 0xd8);
        // D8 0096
        gbc.setState(0x2f9f, 0x74aa, 0x1530, 0xd7fb, 0xdfea, 0x2828, 0x1, 0x0);
        gbc.writeMem(0x2f9f, { 0xd8 });
        gbc.writeMem(0x74aa, { 0xdf, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x74ac);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0097
        gbc.setState(0x9684, 0x1fa3, 0x900, 0x5cd4, 0xb051, 0x9f86, 0x1, 0x1);
        gbc.writeMem(0x9684, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1fa3);
        EXPECT(gbc.pc(), 0x9685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9684), 0xd8);
        // D8 0098
        gbc.setState(0xab04, 0x2550, 0xea10, 0x7979, 0xbd77, 0x7302, 0x0, 0x1);
        gbc.writeMem(0x2550, { 0x6a, 0x44 });
        gbc.writeMem(0xab04, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0x446a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab04), 0xd8);
        // D8 0099
        gbc.setState(0x153e, 0xec58, 0xd9b0, 0xdf3c, 0xd056, 0x912e, 0x1, 0x1);
        gbc.writeMem(0x153e, { 0xd8 });
        gbc.writeMem(0xec58, { 0x2a, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xec5a);
        EXPECT(gbc.pc(), 0x2d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec58), 0x2a);
        EXPECT(gbc.readMem(0xec59), 0x2d);
        // D8 009A
        gbc.setState(0x9ecf, 0x6fb3, 0x5210, 0x18a4, 0x8c3a, 0xe8ee, 0x1, 0x1);
        gbc.writeMem(0x6fb3, { 0xf0, 0x4c });
        gbc.writeMem(0x9ecf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6fb5);
        EXPECT(gbc.pc(), 0x4cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ecf), 0xd8);
        // D8 009B
        gbc.setState(0x208c, 0x3bdc, 0x78e0, 0xaaed, 0x9c07, 0x9999, 0x1, 0x1);
        gbc.writeMem(0x208c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3bdc);
        EXPECT(gbc.pc(), 0x208d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 009C
        gbc.setState(0x8d3, 0x225c, 0xcca0, 0x47be, 0x1d26, 0x1a89, 0x1, 0x0);
        gbc.writeMem(0x8d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0x8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 009D
        gbc.setState(0x4868, 0xc220, 0x2180, 0x54ec, 0x5848, 0x6879, 0x0, 0x0);
        gbc.writeMem(0x4868, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0x4869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 009E
        gbc.setState(0x3eb5, 0xea4d, 0xee80, 0xd30d, 0xa53e, 0x1592, 0x1, 0x0);
        gbc.writeMem(0x3eb5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xea4d);
        EXPECT(gbc.pc(), 0x3eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 009F
        gbc.setState(0x47b0, 0xdfb7, 0x84a0, 0x3af2, 0xfe93, 0x46d, 0x1, 0x0);
        gbc.writeMem(0x47b0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdfb7);
        EXPECT(gbc.pc(), 0x47b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00A0
        gbc.setState(0x4765, 0x3777, 0x3bd0, 0x1669, 0xb61d, 0x6824, 0x1, 0x1);
        gbc.writeMem(0x3777, { 0x3, 0x33 });
        gbc.writeMem(0x4765, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0x3303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 00A1
        gbc.setState(0x6187, 0x4873, 0xa060, 0x44e5, 0xbda3, 0xcb3e, 0x1, 0x1);
        gbc.writeMem(0x6187, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4873);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00A2
        gbc.setState(0x68df, 0x4c94, 0xd700, 0xbce9, 0x59aa, 0x9b69, 0x1, 0x0);
        gbc.writeMem(0x68df, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4c94);
        EXPECT(gbc.pc(), 0x68e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00A3
        gbc.setState(0xdcc7, 0xbd11, 0x6a40, 0x4ef3, 0xc258, 0x87ef, 0x0, 0x0);
        gbc.writeMem(0xdcc7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0xdcc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc7), 0xd8);
        // D8 00A4
        gbc.setState(0xe507, 0xe5af, 0xb5f0, 0x406e, 0x36f, 0x7325, 0x1, 0x1);
        gbc.writeMem(0xe507, { 0xd8 });
        gbc.writeMem(0xe5af, { 0xfc, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe5b1);
        EXPECT(gbc.pc(), 0x7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe507), 0xd8);
        EXPECT(gbc.readMem(0xe5af), 0xfc);
        EXPECT(gbc.readMem(0xe5b0), 0x7);
        // D8 00A5
        gbc.setState(0xb3d4, 0x1e8f, 0x91a0, 0xd2c, 0x35ea, 0x73ee, 0x1, 0x1);
        gbc.writeMem(0xb3d4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1e8f);
        EXPECT(gbc.pc(), 0xb3d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d4), 0xd8);
        // D8 00A6
        gbc.setState(0x76db, 0x7403, 0x7e20, 0x6bc2, 0xbffd, 0xb452, 0x1, 0x1);
        gbc.writeMem(0x76db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7403);
        EXPECT(gbc.pc(), 0x76dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00A7
        gbc.setState(0x7119, 0x5dd5, 0xfe0, 0x2b19, 0x9014, 0x8993, 0x0, 0x0);
        gbc.writeMem(0x7119, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5dd5);
        EXPECT(gbc.pc(), 0x711a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00A8
        gbc.setState(0x110c, 0x3dc5, 0x3c00, 0xa41a, 0x70f8, 0x9e86, 0x1, 0x1);
        gbc.writeMem(0x110c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3dc5);
        EXPECT(gbc.pc(), 0x110d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00A9
        gbc.setState(0x567, 0x17f5, 0xfd80, 0xa1e4, 0x387, 0x81cc, 0x0, 0x1);
        gbc.writeMem(0x567, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x17f5);
        EXPECT(gbc.pc(), 0x568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00AA
        gbc.setState(0x7e87, 0xe61e, 0x6eb0, 0x8d23, 0x8f8e, 0x3524, 0x1, 0x1);
        gbc.writeMem(0x7e87, { 0xd8 });
        gbc.writeMem(0xe61e, { 0x76, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe620);
        EXPECT(gbc.pc(), 0xf376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61e), 0x76);
        EXPECT(gbc.readMem(0xe61f), 0xf3);
        // D8 00AB
        gbc.setState(0x89c, 0x4289, 0x5350, 0x2eb2, 0x7235, 0xc518, 0x1, 0x0);
        gbc.writeMem(0x89c, { 0xd8 });
        gbc.writeMem(0x4289, { 0x57, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x428b);
        EXPECT(gbc.pc(), 0xd557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 00AC
        gbc.setState(0xa7a8, 0x2c81, 0x8010, 0x31df, 0x4774, 0xcc43, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0x4d, 0xc2 });
        gbc.writeMem(0xa7a8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2c83);
        EXPECT(gbc.pc(), 0xc24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a8), 0xd8);
        // D8 00AD
        gbc.setState(0x5c43, 0x1c16, 0x50a0, 0xfad, 0xcf96, 0x9ec0, 0x0, 0x1);
        gbc.writeMem(0x5c43, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1c16);
        EXPECT(gbc.pc(), 0x5c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00AE
        gbc.setState(0x6261, 0x51a, 0xcf40, 0xb777, 0xf5b7, 0x1bdc, 0x1, 0x0);
        gbc.writeMem(0x6261, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x51a);
        EXPECT(gbc.pc(), 0x6262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00AF
        gbc.setState(0xa781, 0xc938, 0x8d20, 0xf29a, 0x41ee, 0xdd06, 0x0, 0x0);
        gbc.writeMem(0xa781, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc938);
        EXPECT(gbc.pc(), 0xa782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa781), 0xd8);
        // D8 00B0
        gbc.setState(0xa452, 0x4d5b, 0xff40, 0x20ef, 0xfb83, 0x13aa, 0x1, 0x0);
        gbc.writeMem(0xa452, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4d5b);
        EXPECT(gbc.pc(), 0xa453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa452), 0xd8);
        // D8 00B1
        gbc.setState(0x40e3, 0x99c7, 0x3a30, 0x5f96, 0xe916, 0xe071, 0x0, 0x1);
        gbc.writeMem(0x40e3, { 0xd8 });
        gbc.writeMem(0x99c7, { 0x64, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x99c9);
        EXPECT(gbc.pc(), 0x3364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c7), 0x64);
        EXPECT(gbc.readMem(0x99c8), 0x33);
        // D8 00B2
        gbc.setState(0xae5f, 0xe92a, 0xce30, 0xc7c1, 0x5f70, 0xdacd, 0x0, 0x1);
        gbc.writeMem(0xae5f, { 0xd8 });
        gbc.writeMem(0xe92a, { 0x65, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe92c);
        EXPECT(gbc.pc(), 0x1f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5f), 0xd8);
        EXPECT(gbc.readMem(0xe92a), 0x65);
        EXPECT(gbc.readMem(0xe92b), 0x1f);
        // D8 00B3
        gbc.setState(0x7064, 0x11a7, 0x6a10, 0x7ada, 0x3fdf, 0x245e, 0x0, 0x0);
        gbc.writeMem(0x11a7, { 0xcf, 0xb6 });
        gbc.writeMem(0x7064, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x11a9);
        EXPECT(gbc.pc(), 0xb6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 00B4
        gbc.setState(0x8ab7, 0x2ea3, 0xd480, 0xaf99, 0x2383, 0x6d21, 0x1, 0x0);
        gbc.writeMem(0x8ab7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2ea3);
        EXPECT(gbc.pc(), 0x8ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab7), 0xd8);
        // D8 00B5
        gbc.setState(0x6536, 0x8676, 0x4de0, 0x53ac, 0xc058, 0x4ad, 0x1, 0x1);
        gbc.writeMem(0x6536, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8676);
        EXPECT(gbc.pc(), 0x6537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00B6
        gbc.setState(0xc3ac, 0x9fb1, 0x7a0, 0x7e3c, 0x9897, 0xf22d, 0x1, 0x1);
        gbc.writeMem(0xc3ac, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9fb1);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ac), 0xd8);
        // D8 00B7
        gbc.setState(0x7650, 0xeb9d, 0xb60, 0xdd64, 0xe442, 0x8b0f, 0x1, 0x1);
        gbc.writeMem(0x7650, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xeb9d);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00B8
        gbc.setState(0x914, 0x2fd7, 0xdd20, 0xa4c9, 0x9cbe, 0xf75e, 0x1, 0x0);
        gbc.writeMem(0x914, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2fd7);
        EXPECT(gbc.pc(), 0x915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00BA
        gbc.setState(0xcdd9, 0x9653, 0x6a10, 0xa1d7, 0xbf83, 0xadaa, 0x1, 0x1);
        gbc.writeMem(0x9653, { 0xa6, 0x10 });
        gbc.writeMem(0xcdd9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9655);
        EXPECT(gbc.pc(), 0x10a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9653), 0xa6);
        EXPECT(gbc.readMem(0x9654), 0x10);
        EXPECT(gbc.readMem(0xcdd9), 0xd8);
        // D8 00BB
        gbc.setState(0x8e3c, 0xd06a, 0x3a50, 0xd91d, 0x70, 0x3528, 0x1, 0x1);
        gbc.writeMem(0x8e3c, { 0xd8 });
        gbc.writeMem(0xd06a, { 0xc8, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd06c);
        EXPECT(gbc.pc(), 0x7ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3c), 0xd8);
        EXPECT(gbc.readMem(0xd06a), 0xc8);
        EXPECT(gbc.readMem(0xd06b), 0x7e);
        // D8 00BC
        gbc.setState(0x6e56, 0xff87, 0x78f0, 0xbf53, 0x5766, 0x5850, 0x0, 0x0);
        gbc.writeMem(0x6e56, { 0xd8 });
        gbc.writeMem(0xff87, { 0xb1, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xff89);
        EXPECT(gbc.pc(), 0x49b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff87), 0xb1);
        EXPECT(gbc.readMem(0xff88), 0x49);
        // D8 00BD
        gbc.setState(0x3094, 0x64a2, 0xb1a0, 0xc292, 0x7249, 0x5ffb, 0x1, 0x0);
        gbc.writeMem(0x3094, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x64a2);
        EXPECT(gbc.pc(), 0x3095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00BE
        gbc.setState(0xaf06, 0x1c6d, 0xe170, 0xde12, 0x8a6f, 0x13d0, 0x0, 0x0);
        gbc.writeMem(0x1c6d, { 0xb1, 0xce });
        gbc.writeMem(0xaf06, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1c6f);
        EXPECT(gbc.pc(), 0xceb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf06), 0xd8);
        // D8 00BF
        gbc.setState(0x29f, 0xf1a3, 0xdfa0, 0xca18, 0x273e, 0xd363, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf1a3);
        EXPECT(gbc.pc(), 0x2a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00C0
        gbc.setState(0xd1dc, 0xc90b, 0xdc70, 0x8b7f, 0xdf5e, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0xc90b, { 0x36, 0xef });
        gbc.writeMem(0xd1dc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc90d);
        EXPECT(gbc.pc(), 0xef36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90b), 0x36);
        EXPECT(gbc.readMem(0xc90c), 0xef);
        EXPECT(gbc.readMem(0xd1dc), 0xd8);
        // D8 00C1
        gbc.setState(0x7a03, 0x5835, 0xad80, 0xb119, 0x3da0, 0xaadc, 0x1, 0x0);
        gbc.writeMem(0x7a03, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x7a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00C2
        gbc.setState(0xae31, 0xa208, 0x7370, 0x7023, 0x6fac, 0xf26b, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0x82, 0x8e });
        gbc.writeMem(0xae31, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa20a);
        EXPECT(gbc.pc(), 0x8e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa208), 0x82);
        EXPECT(gbc.readMem(0xa209), 0x8e);
        EXPECT(gbc.readMem(0xae31), 0xd8);
        // D8 00C3
        gbc.setState(0xa7cc, 0x40b2, 0xd220, 0x16d4, 0xf5e4, 0xfba, 0x0, 0x1);
        gbc.writeMem(0xa7cc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x40b2);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cc), 0xd8);
        // D8 00C4
        gbc.setState(0xae5f, 0x35f1, 0x83d0, 0x69e6, 0x66f4, 0x760, 0x0, 0x1);
        gbc.writeMem(0x35f1, { 0x98, 0x19 });
        gbc.writeMem(0xae5f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x35f3);
        EXPECT(gbc.pc(), 0x1998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5f), 0xd8);
        // D8 00C6
        gbc.setState(0x80c4, 0xefab, 0xf620, 0x9abd, 0x54d5, 0x63b9, 0x0, 0x1);
        gbc.writeMem(0x80c4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xefab);
        EXPECT(gbc.pc(), 0x80c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c4), 0xd8);
        // D8 00C7
        gbc.setState(0x275d, 0x824, 0x94d0, 0xf770, 0x1706, 0x7aa3, 0x0, 0x0);
        gbc.writeMem(0x824, { 0x26, 0x37 });
        gbc.writeMem(0x275d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x826);
        EXPECT(gbc.pc(), 0x3726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 00C8
        gbc.setState(0xde1d, 0x9181, 0x25e0, 0xc7e9, 0xf5fb, 0x7e10, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9181);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1d), 0xd8);
        // D8 00C9
        gbc.setState(0x91da, 0xce36, 0x2300, 0x46a9, 0xf80, 0xeabd, 0x1, 0x1);
        gbc.writeMem(0x91da, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xce36);
        EXPECT(gbc.pc(), 0x91db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91da), 0xd8);
        // D8 00CA
        gbc.setState(0xbd13, 0x4d5c, 0x10e0, 0xc5c5, 0x6510, 0x8718, 0x0, 0x1);
        gbc.writeMem(0xbd13, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4d5c);
        EXPECT(gbc.pc(), 0xbd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd13), 0xd8);
        // D8 00CB
        gbc.setState(0xf4c, 0x651b, 0xcda0, 0x9199, 0x23af, 0x741a, 0x0, 0x1);
        gbc.writeMem(0xf4c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0xf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00CC
        gbc.setState(0x91ce, 0x4b90, 0x8ca0, 0xb90b, 0xb168, 0xc3c1, 0x1, 0x0);
        gbc.writeMem(0x91ce, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4b90);
        EXPECT(gbc.pc(), 0x91cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ce), 0xd8);
        // D8 00CD
        gbc.setState(0x830d, 0xc551, 0xa320, 0x57d, 0x63f6, 0x709a, 0x1, 0x0);
        gbc.writeMem(0x830d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc551);
        EXPECT(gbc.pc(), 0x830e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830d), 0xd8);
        // D8 00CE
        gbc.setState(0x2b2a, 0x1b37, 0xefe0, 0xf380, 0x331a, 0x7208, 0x0, 0x1);
        gbc.writeMem(0x2b2a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1b37);
        EXPECT(gbc.pc(), 0x2b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00CF
        gbc.setState(0x458f, 0x20bf, 0xb770, 0xfadb, 0xa685, 0xd334, 0x1, 0x0);
        gbc.writeMem(0x20bf, { 0x55, 0x11 });
        gbc.writeMem(0x458f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x20c1);
        EXPECT(gbc.pc(), 0x1155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 00D0
        gbc.setState(0x3abb, 0x7051, 0x7b80, 0x2793, 0x4608, 0x2036, 0x0, 0x0);
        gbc.writeMem(0x3abb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7051);
        EXPECT(gbc.pc(), 0x3abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00D2
        gbc.setState(0x8a09, 0xa11e, 0x6470, 0x5715, 0x78b9, 0xb1b9, 0x1, 0x1);
        gbc.writeMem(0x8a09, { 0xd8 });
        gbc.writeMem(0xa11e, { 0xa9, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa120);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a09), 0xd8);
        EXPECT(gbc.readMem(0xa11e), 0xa9);
        EXPECT(gbc.readMem(0xa11f), 0x33);
        // D8 00D4
        gbc.setState(0x8db2, 0xba67, 0xb6b0, 0xcf19, 0x70be, 0xd069, 0x1, 0x0);
        gbc.writeMem(0x8db2, { 0xd8 });
        gbc.writeMem(0xba67, { 0xc8, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xba69);
        EXPECT(gbc.pc(), 0xd6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db2), 0xd8);
        EXPECT(gbc.readMem(0xba67), 0xc8);
        EXPECT(gbc.readMem(0xba68), 0xd6);
        // D8 00D6
        gbc.setState(0x4840, 0x18ae, 0xf270, 0x6d4, 0x5090, 0x180e, 0x0, 0x0);
        gbc.writeMem(0x18ae, { 0x8f, 0x48 });
        gbc.writeMem(0x4840, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x18b0);
        EXPECT(gbc.pc(), 0x488f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 00D7
        gbc.setState(0x5c7e, 0xe5f6, 0x18c0, 0xe712, 0x624f, 0xe276, 0x0, 0x0);
        gbc.writeMem(0x5c7e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe5f6);
        EXPECT(gbc.pc(), 0x5c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00D8
        gbc.setState(0x488a, 0x378f, 0xfa40, 0xdd06, 0x5543, 0x9021, 0x1, 0x0);
        gbc.writeMem(0x488a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x378f);
        EXPECT(gbc.pc(), 0x488b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00D9
        gbc.setState(0x310f, 0xe9a6, 0xb980, 0xd0dd, 0xb6b4, 0x698, 0x1, 0x0);
        gbc.writeMem(0x310f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe9a6);
        EXPECT(gbc.pc(), 0x3110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00DA
        gbc.setState(0xeee4, 0x110a, 0x4f70, 0xf194, 0x9dc1, 0x4f48, 0x0, 0x1);
        gbc.writeMem(0x110a, { 0xad, 0x1b });
        gbc.writeMem(0xeee4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x110c);
        EXPECT(gbc.pc(), 0x1bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee4), 0xd8);
        // D8 00DB
        gbc.setState(0x8433, 0x5566, 0xf9d0, 0xe583, 0xa42, 0x9623, 0x1, 0x1);
        gbc.writeMem(0x5566, { 0xbd, 0xaa });
        gbc.writeMem(0x8433, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5568);
        EXPECT(gbc.pc(), 0xaabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8433), 0xd8);
        // D8 00DC
        gbc.setState(0x1b56, 0x4fb1, 0x30e0, 0x715a, 0x5852, 0xc3c9, 0x1, 0x1);
        gbc.writeMem(0x1b56, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4fb1);
        EXPECT(gbc.pc(), 0x1b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00DD
        gbc.setState(0x6f44, 0x1cb5, 0xdb00, 0x3ff6, 0xe7aa, 0x69cb, 0x1, 0x0);
        gbc.writeMem(0x6f44, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1cb5);
        EXPECT(gbc.pc(), 0x6f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00DE
        gbc.setState(0xc52c, 0x6bb6, 0x36b0, 0xecfb, 0x208e, 0xd12b, 0x0, 0x0);
        gbc.writeMem(0x6bb6, { 0x57, 0xdc });
        gbc.writeMem(0xc52c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6bb8);
        EXPECT(gbc.pc(), 0xdc57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52c), 0xd8);
        // D8 00DF
        gbc.setState(0xc783, 0xdbc5, 0xb6c0, 0x7cd0, 0xbb5c, 0x521a, 0x0, 0x1);
        gbc.writeMem(0xc783, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdbc5);
        EXPECT(gbc.pc(), 0xc784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc783), 0xd8);
        // D8 00E0
        gbc.setState(0x58b1, 0xd900, 0xa1e0, 0xefa7, 0xcb0c, 0x7527, 0x1, 0x0);
        gbc.writeMem(0x58b1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd900);
        EXPECT(gbc.pc(), 0x58b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00E1
        gbc.setState(0x2c96, 0x9427, 0x4fe0, 0x16b, 0xac5f, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0x2c96, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x2c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00E2
        gbc.setState(0x2e03, 0x13a9, 0xb040, 0xb535, 0x2015, 0x52db, 0x0, 0x1);
        gbc.writeMem(0x2e03, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x13a9);
        EXPECT(gbc.pc(), 0x2e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00E4
        gbc.setState(0xb344, 0x94cf, 0xae40, 0x1f25, 0xd228, 0x4d39, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x94cf);
        EXPECT(gbc.pc(), 0xb345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb344), 0xd8);
        // D8 00E5
        gbc.setState(0xbc8f, 0xf2af, 0x87d0, 0xfd39, 0x7039, 0x9337, 0x0, 0x1);
        gbc.writeMem(0xbc8f, { 0xd8 });
        gbc.writeMem(0xf2af, { 0xfe, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf2b1);
        EXPECT(gbc.pc(), 0xa8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8f), 0xd8);
        EXPECT(gbc.readMem(0xf2af), 0xfe);
        EXPECT(gbc.readMem(0xf2b0), 0xa8);
        // D8 00E6
        gbc.setState(0x2082, 0xb049, 0x4610, 0xe83, 0x94b2, 0x44e1, 0x1, 0x0);
        gbc.writeMem(0x2082, { 0xd8 });
        gbc.writeMem(0xb049, { 0x36, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb04b);
        EXPECT(gbc.pc(), 0xc636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb049), 0x36);
        EXPECT(gbc.readMem(0xb04a), 0xc6);
        // D8 00E7
        gbc.setState(0xb5d4, 0x890a, 0xbc90, 0xf131, 0x9df4, 0xe5a8, 0x0, 0x1);
        gbc.writeMem(0x890a, { 0x83, 0x90 });
        gbc.writeMem(0xb5d4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0x9083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890a), 0x83);
        EXPECT(gbc.readMem(0x890b), 0x90);
        EXPECT(gbc.readMem(0xb5d4), 0xd8);
        // D8 00E8
        gbc.setState(0x23b4, 0x9c1e, 0xe080, 0x7cff, 0xd907, 0xe699, 0x0, 0x1);
        gbc.writeMem(0x23b4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9c1e);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00E9
        gbc.setState(0xbaa3, 0xdd5b, 0x7bc0, 0x1df8, 0x76ad, 0x164e, 0x1, 0x0);
        gbc.writeMem(0xbaa3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdd5b);
        EXPECT(gbc.pc(), 0xbaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa3), 0xd8);
        // D8 00EA
        gbc.setState(0x1364, 0x6120, 0x67a0, 0x2e1c, 0x6c, 0x8cd3, 0x1, 0x1);
        gbc.writeMem(0x1364, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0x1365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00EB
        gbc.setState(0x5171, 0x39bc, 0x9cb0, 0xf394, 0xd9a0, 0xe121, 0x0, 0x1);
        gbc.writeMem(0x39bc, { 0x3c, 0x9e });
        gbc.writeMem(0x5171, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x39be);
        EXPECT(gbc.pc(), 0x9e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 00EC
        gbc.setState(0x3085, 0xee75, 0x36b0, 0xf13d, 0xea3, 0xa202, 0x1, 0x1);
        gbc.writeMem(0x3085, { 0xd8 });
        gbc.writeMem(0xee75, { 0xab, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xee77);
        EXPECT(gbc.pc(), 0x30ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee75), 0xab);
        EXPECT(gbc.readMem(0xee76), 0x30);
        // D8 00ED
        gbc.setState(0x8d58, 0xc799, 0x2200, 0xfaa9, 0x361e, 0x53d5, 0x1, 0x0);
        gbc.writeMem(0x8d58, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc799);
        EXPECT(gbc.pc(), 0x8d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d58), 0xd8);
        // D8 00EE
        gbc.setState(0xd9c, 0x8d4d, 0x41c0, 0x7b1e, 0x5f59, 0xcc29, 0x1, 0x1);
        gbc.writeMem(0xd9c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8d4d);
        EXPECT(gbc.pc(), 0xd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00EF
        gbc.setState(0x98fe, 0x2224, 0x1020, 0x6757, 0xfc8b, 0x382d, 0x1, 0x0);
        gbc.writeMem(0x98fe, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0x98ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fe), 0xd8);
        // D8 00F1
        gbc.setState(0x61e2, 0x840a, 0x90a0, 0x75df, 0x9c0c, 0x939d, 0x0, 0x1);
        gbc.writeMem(0x61e2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x840a);
        EXPECT(gbc.pc(), 0x61e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00F2
        gbc.setState(0x1b11, 0x7fcc, 0x0, 0x3667, 0x15ca, 0xca27, 0x1, 0x0);
        gbc.writeMem(0x1b11, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7fcc);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00F3
        gbc.setState(0x6293, 0xee9b, 0xa240, 0x42a4, 0xcd06, 0x9761, 0x0, 0x1);
        gbc.writeMem(0x6293, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xee9b);
        EXPECT(gbc.pc(), 0x6294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00F4
        gbc.setState(0xe3ad, 0x2d14, 0x2ce0, 0xd4eb, 0x7faa, 0x8a5e, 0x0, 0x1);
        gbc.writeMem(0xe3ad, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d14);
        EXPECT(gbc.pc(), 0xe3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ad), 0xd8);
        // D8 00F5
        gbc.setState(0x8651, 0x8555, 0x45d0, 0x5c5b, 0x743d, 0xb5aa, 0x1, 0x0);
        gbc.writeMem(0x8555, { 0x29, 0x22 });
        gbc.writeMem(0x8651, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8557);
        EXPECT(gbc.pc(), 0x2229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8555), 0x29);
        EXPECT(gbc.readMem(0x8556), 0x22);
        EXPECT(gbc.readMem(0x8651), 0xd8);
        // D8 00F6
        gbc.setState(0xea72, 0x5ec2, 0x6900, 0x4854, 0xb5ed, 0x236d, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5ec2);
        EXPECT(gbc.pc(), 0xea73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea72), 0xd8);
        // D8 00F7
        gbc.setState(0xd0e7, 0xb18f, 0x26a0, 0x931b, 0xb1d3, 0xe784, 0x1, 0x1);
        gbc.writeMem(0xd0e7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e7), 0xd8);
        // D8 00F8
        gbc.setState(0x6f41, 0xb059, 0xc130, 0xb168, 0xaac7, 0x156c, 0x1, 0x1);
        gbc.writeMem(0x6f41, { 0xd8 });
        gbc.writeMem(0xb059, { 0x5d, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0x695d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb059), 0x5d);
        EXPECT(gbc.readMem(0xb05a), 0x69);
        // D8 00F9
        gbc.setState(0x304e, 0x902a, 0x4a20, 0x6e70, 0xb9cc, 0xda07, 0x1, 0x1);
        gbc.writeMem(0x304e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x902a);
        EXPECT(gbc.pc(), 0x304f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00FB
        gbc.setState(0xb761, 0x6586, 0xf3e0, 0x5b18, 0xcbc7, 0x2333, 0x0, 0x0);
        gbc.writeMem(0xb761, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6586);
        EXPECT(gbc.pc(), 0xb762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb761), 0xd8);
        // D8 00FC
        gbc.setState(0xcd7f, 0x20de, 0xbde0, 0xf4e4, 0x182, 0x31f8, 0x0, 0x1);
        gbc.writeMem(0xcd7f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x20de);
        EXPECT(gbc.pc(), 0xcd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7f), 0xd8);
        // D8 00FD
        gbc.setState(0x665, 0x5940, 0x4300, 0x3b87, 0xbf29, 0xc232, 0x1, 0x0);
        gbc.writeMem(0x665, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5940);
        EXPECT(gbc.pc(), 0x666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 00FE
        gbc.setState(0xc8e, 0xef0a, 0xd420, 0x4462, 0x5dae, 0x6e95, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xef0a);
        EXPECT(gbc.pc(), 0xc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 00FF
        gbc.setState(0x677, 0x4ff4, 0x7680, 0x36aa, 0x7d77, 0xa831, 0x1, 0x1);
        gbc.writeMem(0x677, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4ff4);
        EXPECT(gbc.pc(), 0x678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0100
        gbc.setState(0xc9a8, 0x812d, 0xee90, 0x64f, 0x19e2, 0x90fa, 0x1, 0x1);
        gbc.writeMem(0x812d, { 0x5, 0xd });
        gbc.writeMem(0xc9a8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x812f);
        EXPECT(gbc.pc(), 0xd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812d), 0x5);
        EXPECT(gbc.readMem(0x812e), 0xd);
        EXPECT(gbc.readMem(0xc9a8), 0xd8);
        // D8 0101
        gbc.setState(0x5c5c, 0x7f0a, 0x920, 0x4649, 0x5acf, 0xdf9b, 0x1, 0x0);
        gbc.writeMem(0x5c5c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7f0a);
        EXPECT(gbc.pc(), 0x5c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0102
        gbc.setState(0x2db4, 0x24d6, 0x8880, 0x3ccd, 0xaf1b, 0x8add, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x24d6);
        EXPECT(gbc.pc(), 0x2db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0103
        gbc.setState(0xa8e0, 0xe865, 0x15a0, 0x527c, 0x7a8e, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0xa8e0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe865);
        EXPECT(gbc.pc(), 0xa8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e0), 0xd8);
        // D8 0104
        gbc.setState(0x51da, 0x5ce9, 0xb9b0, 0x91fc, 0x5f0b, 0x6e87, 0x1, 0x1);
        gbc.writeMem(0x51da, { 0xd8 });
        gbc.writeMem(0x5ce9, { 0xa5, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5ceb);
        EXPECT(gbc.pc(), 0xdaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0105
        gbc.setState(0xde54, 0x4192, 0x6220, 0xde8d, 0x3392, 0xfb75, 0x1, 0x1);
        gbc.writeMem(0xde54, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4192);
        EXPECT(gbc.pc(), 0xde55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde54), 0xd8);
        // D8 0106
        gbc.setState(0xe0d4, 0xb6b0, 0x770, 0xa827, 0x4b21, 0xbdea, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0xb4, 0x27 });
        gbc.writeMem(0xe0d4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb6b2);
        EXPECT(gbc.pc(), 0x27b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b0), 0xb4);
        EXPECT(gbc.readMem(0xb6b1), 0x27);
        EXPECT(gbc.readMem(0xe0d4), 0xd8);
        // D8 0107
        gbc.setState(0x5b7c, 0x2703, 0xef00, 0xe1c7, 0xbb51, 0x21ea, 0x1, 0x1);
        gbc.writeMem(0x5b7c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2703);
        EXPECT(gbc.pc(), 0x5b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0108
        gbc.setState(0x9c61, 0xcb2a, 0x8130, 0x8583, 0xa3e6, 0x15e, 0x1, 0x0);
        gbc.writeMem(0x9c61, { 0xd8 });
        gbc.writeMem(0xcb2a, { 0xa7, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcb2c);
        EXPECT(gbc.pc(), 0xda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c61), 0xd8);
        EXPECT(gbc.readMem(0xcb2a), 0xa7);
        EXPECT(gbc.readMem(0xcb2b), 0xd);
        // D8 0109
        gbc.setState(0x98a4, 0x32b2, 0x4ce0, 0xd8fa, 0xfc93, 0x84ba, 0x1, 0x1);
        gbc.writeMem(0x98a4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0x98a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a4), 0xd8);
        // D8 010A
        gbc.setState(0x1de2, 0x4998, 0xe670, 0xf343, 0xdec7, 0x1557, 0x0, 0x1);
        gbc.writeMem(0x1de2, { 0xd8 });
        gbc.writeMem(0x4998, { 0xac, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x499a);
        EXPECT(gbc.pc(), 0x40ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 010B
        gbc.setState(0xb1f7, 0x4005, 0xd1f0, 0xfc15, 0xd80e, 0x6394, 0x0, 0x1);
        gbc.writeMem(0x4005, { 0xbe, 0xad });
        gbc.writeMem(0xb1f7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4007);
        EXPECT(gbc.pc(), 0xadbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f7), 0xd8);
        // D8 010C
        gbc.setState(0x6e59, 0x7935, 0x6460, 0xb897, 0xc2a4, 0xbbdf, 0x0, 0x1);
        gbc.writeMem(0x6e59, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7935);
        EXPECT(gbc.pc(), 0x6e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 010D
        gbc.setState(0x60c6, 0xb14b, 0xe920, 0xb2ff, 0x5d9e, 0x4cc, 0x0, 0x0);
        gbc.writeMem(0x60c6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb14b);
        EXPECT(gbc.pc(), 0x60c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 010E
        gbc.setState(0x86c2, 0xb5a6, 0xff30, 0xad0b, 0x784a, 0xa9e9, 0x1, 0x1);
        gbc.writeMem(0x86c2, { 0xd8 });
        gbc.writeMem(0xb5a6, { 0x33, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0xc733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c2), 0xd8);
        EXPECT(gbc.readMem(0xb5a6), 0x33);
        EXPECT(gbc.readMem(0xb5a7), 0xc7);
        // D8 010F
        gbc.setState(0x8d67, 0x51a5, 0x4750, 0x7802, 0xd702, 0x2c20, 0x1, 0x0);
        gbc.writeMem(0x51a5, { 0x32, 0x5b });
        gbc.writeMem(0x8d67, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d67), 0xd8);
        // D8 0110
        gbc.setState(0x6ecb, 0x4cd6, 0x6b60, 0x5d4a, 0xb159, 0x270d, 0x0, 0x0);
        gbc.writeMem(0x6ecb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4cd6);
        EXPECT(gbc.pc(), 0x6ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0111
        gbc.setState(0x88b5, 0xa7c9, 0x210, 0x13ce, 0xa1a, 0x523b, 0x1, 0x0);
        gbc.writeMem(0x88b5, { 0xd8 });
        gbc.writeMem(0xa7c9, { 0xe2, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0x46e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b5), 0xd8);
        EXPECT(gbc.readMem(0xa7c9), 0xe2);
        EXPECT(gbc.readMem(0xa7ca), 0x46);
        // D8 0112
        gbc.setState(0x71f4, 0xb31e, 0x8d30, 0xb654, 0x180e, 0xf927, 0x0, 0x0);
        gbc.writeMem(0x71f4, { 0xd8 });
        gbc.writeMem(0xb31e, { 0xda, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb320);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31e), 0xda);
        EXPECT(gbc.readMem(0xb31f), 0xab);
        // D8 0113
        gbc.setState(0x4955, 0xa96f, 0x4f0, 0x22c5, 0x4f94, 0x5aef, 0x0, 0x0);
        gbc.writeMem(0x4955, { 0xd8 });
        gbc.writeMem(0xa96f, { 0x1d, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa971);
        EXPECT(gbc.pc(), 0x261d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96f), 0x1d);
        EXPECT(gbc.readMem(0xa970), 0x26);
        // D8 0114
        gbc.setState(0x8021, 0x1bd8, 0xd010, 0xcb76, 0x7be3, 0x73d9, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0x82, 0x7a });
        gbc.writeMem(0x8021, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1bda);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8021), 0xd8);
        // D8 0115
        gbc.setState(0x58dc, 0x429, 0x5ae0, 0xf0f, 0x26a0, 0x3465, 0x0, 0x1);
        gbc.writeMem(0x58dc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x429);
        EXPECT(gbc.pc(), 0x58dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0116
        gbc.setState(0x41eb, 0xfb3b, 0x9310, 0xbba0, 0x9879, 0x824c, 0x0, 0x0);
        gbc.writeMem(0x41eb, { 0xd8 });
        gbc.writeMem(0xfb3b, { 0x3a, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x153a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb3b), 0x3a);
        EXPECT(gbc.readMem(0xfb3c), 0x15);
        // D8 0117
        gbc.setState(0xd9db, 0xbebc, 0x5720, 0x3083, 0x2a7b, 0x1ab9, 0x1, 0x1);
        gbc.writeMem(0xd9db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbebc);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9db), 0xd8);
        // D8 0118
        gbc.setState(0xbfe3, 0xc4af, 0x4f0, 0x2ffb, 0xce5a, 0x1b9, 0x0, 0x1);
        gbc.writeMem(0xbfe3, { 0xd8 });
        gbc.writeMem(0xc4af, { 0x1, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc4b1);
        EXPECT(gbc.pc(), 0xa601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe3), 0xd8);
        EXPECT(gbc.readMem(0xc4af), 0x1);
        EXPECT(gbc.readMem(0xc4b0), 0xa6);
        // D8 0119
        gbc.setState(0x11e0, 0x8322, 0xd960, 0x33d5, 0x9605, 0x357e, 0x0, 0x1);
        gbc.writeMem(0x11e0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8322);
        EXPECT(gbc.pc(), 0x11e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 011A
        gbc.setState(0xa7e9, 0x54a, 0x5440, 0xec6e, 0x7552, 0x5c6f, 0x1, 0x1);
        gbc.writeMem(0xa7e9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x54a);
        EXPECT(gbc.pc(), 0xa7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e9), 0xd8);
        // D8 011B
        gbc.setState(0xd57b, 0x5cae, 0x3460, 0x575e, 0xa89b, 0xc237, 0x1, 0x0);
        gbc.writeMem(0xd57b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5cae);
        EXPECT(gbc.pc(), 0xd57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57b), 0xd8);
        // D8 011C
        gbc.setState(0x3f51, 0xd44a, 0x84e0, 0xc67e, 0x6deb, 0x412f, 0x0, 0x1);
        gbc.writeMem(0x3f51, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd44a);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 011D
        gbc.setState(0x6901, 0x1fd9, 0x5180, 0xf759, 0x6a24, 0xde1b, 0x0, 0x1);
        gbc.writeMem(0x6901, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0x6902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 011E
        gbc.setState(0x7b2, 0xca0c, 0x68d0, 0x5090, 0x3627, 0xad2, 0x1, 0x0);
        gbc.writeMem(0x7b2, { 0xd8 });
        gbc.writeMem(0xca0c, { 0xda, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xca0e);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0c), 0xda);
        EXPECT(gbc.readMem(0xca0d), 0xab);
        // D8 011F
        gbc.setState(0xd8a4, 0x8e03, 0x7f30, 0x8882, 0x2217, 0x52fd, 0x0, 0x1);
        gbc.writeMem(0x8e03, { 0x1d, 0x74 });
        gbc.writeMem(0xd8a4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8e05);
        EXPECT(gbc.pc(), 0x741d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e03), 0x1d);
        EXPECT(gbc.readMem(0x8e04), 0x74);
        EXPECT(gbc.readMem(0xd8a4), 0xd8);
        // D8 0120
        gbc.setState(0x9b8e, 0x92e3, 0x55e0, 0x3e81, 0x32f1, 0x7e30, 0x1, 0x1);
        gbc.writeMem(0x9b8e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0x9b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8e), 0xd8);
        // D8 0121
        gbc.setState(0x84a2, 0xd112, 0x3b0, 0xfe5, 0x7f8, 0x50c5, 0x1, 0x0);
        gbc.writeMem(0x84a2, { 0xd8 });
        gbc.writeMem(0xd112, { 0xd1, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0x4ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a2), 0xd8);
        EXPECT(gbc.readMem(0xd112), 0xd1);
        EXPECT(gbc.readMem(0xd113), 0x4e);
        // D8 0122
        gbc.setState(0xbc7a, 0x659c, 0xb7b0, 0x2627, 0x9c61, 0xd2b6, 0x1, 0x1);
        gbc.writeMem(0x659c, { 0x94, 0x17 });
        gbc.writeMem(0xbc7a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x659e);
        EXPECT(gbc.pc(), 0x1794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7a), 0xd8);
        // D8 0123
        gbc.setState(0x3091, 0xb13, 0x4930, 0xa964, 0xe8ee, 0xde8e, 0x0, 0x1);
        gbc.writeMem(0xb13, { 0x78, 0x34 });
        gbc.writeMem(0x3091, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb15);
        EXPECT(gbc.pc(), 0x3478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0124
        gbc.setState(0x7aad, 0x95ec, 0x8910, 0xf8e6, 0xb1e9, 0xd10d, 0x1, 0x0);
        gbc.writeMem(0x7aad, { 0xd8 });
        gbc.writeMem(0x95ec, { 0xf, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x95ee);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ec), 0xf);
        EXPECT(gbc.readMem(0x95ed), 0x30);
        // D8 0125
        gbc.setState(0x8f25, 0x63a0, 0xbd60, 0x624a, 0x31fc, 0xdc25, 0x0, 0x1);
        gbc.writeMem(0x8f25, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x63a0);
        EXPECT(gbc.pc(), 0x8f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f25), 0xd8);
        // D8 0126
        gbc.setState(0x4677, 0x25f, 0x4710, 0x5365, 0xb8fc, 0xd3b5, 0x1, 0x0);
        gbc.writeMem(0x25f, { 0xbe, 0xf9 });
        gbc.writeMem(0x4677, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x261);
        EXPECT(gbc.pc(), 0xf9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0127
        gbc.setState(0xa306, 0xf263, 0xf830, 0xd491, 0xb7d, 0xeb0c, 0x0, 0x0);
        gbc.writeMem(0xa306, { 0xd8 });
        gbc.writeMem(0xf263, { 0x1f, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf265);
        EXPECT(gbc.pc(), 0x71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa306), 0xd8);
        EXPECT(gbc.readMem(0xf263), 0x1f);
        EXPECT(gbc.readMem(0xf264), 0x7);
        // D8 0128
        gbc.setState(0xd38b, 0xc580, 0x9990, 0xa238, 0x5af7, 0xe3a5, 0x1, 0x0);
        gbc.writeMem(0xc580, { 0xe0, 0xa5 });
        gbc.writeMem(0xd38b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc582);
        EXPECT(gbc.pc(), 0xa5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc580), 0xe0);
        EXPECT(gbc.readMem(0xc581), 0xa5);
        EXPECT(gbc.readMem(0xd38b), 0xd8);
        // D8 0129
        gbc.setState(0xcd5d, 0xa527, 0xf960, 0x5d62, 0x662f, 0x4127, 0x0, 0x0);
        gbc.writeMem(0xcd5d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa527);
        EXPECT(gbc.pc(), 0xcd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5d), 0xd8);
        // D8 012B
        gbc.setState(0xad, 0x9c3, 0xe900, 0x6785, 0x3c67, 0xae82, 0x0, 0x1);
        gbc.writeMem(0xad, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9c3);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 012D
        gbc.setState(0x94c9, 0xc16c, 0x9300, 0x13a4, 0xa967, 0x41e2, 0x0, 0x1);
        gbc.writeMem(0x94c9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc16c);
        EXPECT(gbc.pc(), 0x94ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c9), 0xd8);
        // D8 012E
        gbc.setState(0x1075, 0x10d, 0x4ce0, 0x4a0d, 0xa11b, 0x35c5, 0x1, 0x1);
        gbc.writeMem(0x1075, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x10d);
        EXPECT(gbc.pc(), 0x1076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 012F
        gbc.setState(0x7ee2, 0xa5d8, 0x6cc0, 0xf7b2, 0x20a5, 0xa9e7, 0x0, 0x1);
        gbc.writeMem(0x7ee2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0x7ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0130
        gbc.setState(0x48f8, 0x8eed, 0x8e40, 0x7d61, 0x8ec6, 0x1152, 0x0, 0x1);
        gbc.writeMem(0x48f8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8eed);
        EXPECT(gbc.pc(), 0x48f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0131
        gbc.setState(0x2a47, 0xaaaa, 0x440, 0x96c8, 0x4052, 0x5b9e, 0x0, 0x1);
        gbc.writeMem(0x2a47, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0x2a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0132
        gbc.setState(0xdb69, 0x96f1, 0xfef0, 0xfd6d, 0xf2df, 0xcb8d, 0x0, 0x0);
        gbc.writeMem(0x96f1, { 0x3e, 0xc5 });
        gbc.writeMem(0xdb69, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x96f3);
        EXPECT(gbc.pc(), 0xc53e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f1), 0x3e);
        EXPECT(gbc.readMem(0x96f2), 0xc5);
        EXPECT(gbc.readMem(0xdb69), 0xd8);
        // D8 0133
        gbc.setState(0x3936, 0xd79b, 0x63d0, 0xe14f, 0x211f, 0x562b, 0x1, 0x0);
        gbc.writeMem(0x3936, { 0xd8 });
        gbc.writeMem(0xd79b, { 0xa1, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd79d);
        EXPECT(gbc.pc(), 0x1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd79b), 0xa1);
        EXPECT(gbc.readMem(0xd79c), 0x1);
        // D8 0134
        gbc.setState(0x86e8, 0x5b6e, 0x5420, 0xe48d, 0x21bb, 0x20b1, 0x1, 0x0);
        gbc.writeMem(0x86e8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5b6e);
        EXPECT(gbc.pc(), 0x86e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e8), 0xd8);
        // D8 0135
        gbc.setState(0xb6ec, 0xccf5, 0xfb10, 0x526b, 0x27fb, 0xc6d7, 0x1, 0x0);
        gbc.writeMem(0xb6ec, { 0xd8 });
        gbc.writeMem(0xccf5, { 0xdb, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xccf7);
        EXPECT(gbc.pc(), 0x36db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ec), 0xd8);
        EXPECT(gbc.readMem(0xccf5), 0xdb);
        EXPECT(gbc.readMem(0xccf6), 0x36);
        // D8 0136
        gbc.setState(0xa986, 0xf1f8, 0xaae0, 0xb81d, 0xfe1a, 0x4ab0, 0x1, 0x0);
        gbc.writeMem(0xa986, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf1f8);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa986), 0xd8);
        // D8 0137
        gbc.setState(0xbe25, 0xb1fb, 0xee80, 0x3f3, 0xc306, 0x4c4d, 0x0, 0x0);
        gbc.writeMem(0xbe25, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb1fb);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe25), 0xd8);
        // D8 0138
        gbc.setState(0x9b67, 0x657d, 0xfee0, 0xf3d9, 0xff0a, 0x794f, 0x0, 0x0);
        gbc.writeMem(0x9b67, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x657d);
        EXPECT(gbc.pc(), 0x9b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b67), 0xd8);
        // D8 0139
        gbc.setState(0x1f80, 0xc841, 0x5ca0, 0x2268, 0x1fdf, 0x82b2, 0x1, 0x1);
        gbc.writeMem(0x1f80, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc841);
        EXPECT(gbc.pc(), 0x1f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 013A
        gbc.setState(0x1f77, 0x84cc, 0xfc90, 0x62da, 0x94ce, 0x7c82, 0x1, 0x1);
        gbc.writeMem(0x1f77, { 0xd8 });
        gbc.writeMem(0x84cc, { 0xc5, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x84ce);
        EXPECT(gbc.pc(), 0x73c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cc), 0xc5);
        EXPECT(gbc.readMem(0x84cd), 0x73);
        // D8 013B
        gbc.setState(0x1c11, 0x9246, 0xdf60, 0xcba4, 0x6fcf, 0x195d, 0x1, 0x1);
        gbc.writeMem(0x1c11, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9246);
        EXPECT(gbc.pc(), 0x1c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 013C
        gbc.setState(0x46bf, 0xa4c4, 0x8a90, 0x843a, 0xe891, 0xcad3, 0x1, 0x0);
        gbc.writeMem(0x46bf, { 0xd8 });
        gbc.writeMem(0xa4c4, { 0x26, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa4c6);
        EXPECT(gbc.pc(), 0xdd26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c4), 0x26);
        EXPECT(gbc.readMem(0xa4c5), 0xdd);
        // D8 013D
        gbc.setState(0x84a1, 0xfa8e, 0x4c70, 0xf58a, 0xe85a, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0x84a1, { 0xd8 });
        gbc.writeMem(0xfa8e, { 0xb8, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfa90);
        EXPECT(gbc.pc(), 0x6fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a1), 0xd8);
        EXPECT(gbc.readMem(0xfa8e), 0xb8);
        EXPECT(gbc.readMem(0xfa8f), 0x6f);
        // D8 013E
        gbc.setState(0xb6bd, 0x11e1, 0xa510, 0x983b, 0xb5, 0xe34b, 0x1, 0x0);
        gbc.writeMem(0x11e1, { 0x6d, 0xe8 });
        gbc.writeMem(0xb6bd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x11e3);
        EXPECT(gbc.pc(), 0xe86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bd), 0xd8);
        // D8 013F
        gbc.setState(0x71cc, 0x7c16, 0x21e0, 0xf08a, 0xb058, 0xe233, 0x0, 0x0);
        gbc.writeMem(0x71cc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7c16);
        EXPECT(gbc.pc(), 0x71cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0140
        gbc.setState(0xa1e3, 0xa49, 0x65a0, 0xef79, 0x2c7, 0xf5a1, 0x1, 0x0);
        gbc.writeMem(0xa1e3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa49);
        EXPECT(gbc.pc(), 0xa1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e3), 0xd8);
        // D8 0141
        gbc.setState(0xa856, 0x628c, 0xfad0, 0xe6bb, 0xd68b, 0xcdb7, 0x0, 0x0);
        gbc.writeMem(0x628c, { 0xc0, 0x7b });
        gbc.writeMem(0xa856, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x628e);
        EXPECT(gbc.pc(), 0x7bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa856), 0xd8);
        // D8 0142
        gbc.setState(0x971a, 0x864b, 0xb880, 0xe4e8, 0xc27c, 0x9858, 0x1, 0x0);
        gbc.writeMem(0x971a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x864b);
        EXPECT(gbc.pc(), 0x971b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971a), 0xd8);
        // D8 0143
        gbc.setState(0xcbf7, 0xaf9b, 0x2e20, 0xfeae, 0x3db6, 0x9925, 0x1, 0x1);
        gbc.writeMem(0xcbf7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xaf9b);
        EXPECT(gbc.pc(), 0xcbf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf7), 0xd8);
        // D8 0144
        gbc.setState(0x8dc8, 0xe61b, 0xbce0, 0x64a4, 0x258a, 0x92c, 0x1, 0x1);
        gbc.writeMem(0x8dc8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe61b);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc8), 0xd8);
        // D8 0145
        gbc.setState(0x2697, 0xab17, 0xf610, 0x491, 0xc840, 0x2bed, 0x1, 0x0);
        gbc.writeMem(0x2697, { 0xd8 });
        gbc.writeMem(0xab17, { 0x4c, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0x9a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab17), 0x4c);
        EXPECT(gbc.readMem(0xab18), 0x9a);
        // D8 0146
        gbc.setState(0x323a, 0x65ab, 0x3ae0, 0x95fa, 0xdcd0, 0x2e19, 0x0, 0x1);
        gbc.writeMem(0x323a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x65ab);
        EXPECT(gbc.pc(), 0x323b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0147
        gbc.setState(0xbead, 0xbf4d, 0x8fa0, 0xd4a1, 0x8c90, 0xf918, 0x0, 0x1);
        gbc.writeMem(0xbead, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbead), 0xd8);
        // D8 0148
        gbc.setState(0x500d, 0xb131, 0x94c0, 0x9a02, 0x17e6, 0x2e6d, 0x0, 0x1);
        gbc.writeMem(0x500d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0149
        gbc.setState(0xda0c, 0x1135, 0x2ff0, 0x7189, 0x5e2a, 0x4f5c, 0x1, 0x0);
        gbc.writeMem(0x1135, { 0xc0, 0xaa });
        gbc.writeMem(0xda0c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1137);
        EXPECT(gbc.pc(), 0xaac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0c), 0xd8);
        // D8 014A
        gbc.setState(0xd990, 0x5834, 0x3230, 0xb22a, 0xaaad, 0x5c53, 0x0, 0x1);
        gbc.writeMem(0x5834, { 0x6e, 0xe6 });
        gbc.writeMem(0xd990, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5836);
        EXPECT(gbc.pc(), 0xe66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd990), 0xd8);
        // D8 014B
        gbc.setState(0x5608, 0x3c33, 0x1210, 0xb55f, 0xb1f8, 0x7aaa, 0x0, 0x0);
        gbc.writeMem(0x3c33, { 0xfc, 0x94 });
        gbc.writeMem(0x5608, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3c35);
        EXPECT(gbc.pc(), 0x94fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 014C
        gbc.setState(0xe446, 0xb1bd, 0xed40, 0x5b17, 0xab4a, 0x3db, 0x1, 0x1);
        gbc.writeMem(0xe446, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb1bd);
        EXPECT(gbc.pc(), 0xe447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe446), 0xd8);
        // D8 014D
        gbc.setState(0x9929, 0xc8ac, 0x3740, 0x6f7b, 0x4871, 0x8630, 0x1, 0x1);
        gbc.writeMem(0x9929, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc8ac);
        EXPECT(gbc.pc(), 0x992a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9929), 0xd8);
        // D8 014E
        gbc.setState(0xb0c5, 0xa2d8, 0x3250, 0xb7a4, 0xc945, 0x9513, 0x1, 0x0);
        gbc.writeMem(0xa2d8, { 0x27, 0x6f });
        gbc.writeMem(0xb0c5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0x6f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d8), 0x27);
        EXPECT(gbc.readMem(0xa2d9), 0x6f);
        EXPECT(gbc.readMem(0xb0c5), 0xd8);
        // D8 014F
        gbc.setState(0xd66d, 0x6148, 0x92f0, 0x1d57, 0x779c, 0x2e7a, 0x1, 0x0);
        gbc.writeMem(0x6148, { 0x23, 0x94 });
        gbc.writeMem(0xd66d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x614a);
        EXPECT(gbc.pc(), 0x9423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66d), 0xd8);
        // D8 0150
        gbc.setState(0x97a0, 0xc9df, 0xf9f0, 0xf245, 0x80d1, 0x80db, 0x0, 0x1);
        gbc.writeMem(0x97a0, { 0xd8 });
        gbc.writeMem(0xc9df, { 0xbf, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc9e1);
        EXPECT(gbc.pc(), 0x90bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a0), 0xd8);
        EXPECT(gbc.readMem(0xc9df), 0xbf);
        EXPECT(gbc.readMem(0xc9e0), 0x90);
        // D8 0151
        gbc.setState(0x7988, 0xab79, 0xc370, 0x4af7, 0xc007, 0x38cc, 0x1, 0x0);
        gbc.writeMem(0x7988, { 0xd8 });
        gbc.writeMem(0xab79, { 0x14, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xab7b);
        EXPECT(gbc.pc(), 0x8d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab79), 0x14);
        EXPECT(gbc.readMem(0xab7a), 0x8d);
        // D8 0152
        gbc.setState(0x97ae, 0x1bba, 0x4100, 0xcabd, 0xcea4, 0x1599, 0x1, 0x0);
        gbc.writeMem(0x97ae, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1bba);
        EXPECT(gbc.pc(), 0x97af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ae), 0xd8);
        // D8 0153
        gbc.setState(0x244e, 0x3208, 0xc740, 0x11c9, 0x77fd, 0xa593, 0x1, 0x1);
        gbc.writeMem(0x244e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3208);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0154
        gbc.setState(0x7261, 0x7bb1, 0x4910, 0xd179, 0x548a, 0x9581, 0x1, 0x0);
        gbc.writeMem(0x7261, { 0xd8 });
        gbc.writeMem(0x7bb1, { 0x79, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7bb3);
        EXPECT(gbc.pc(), 0xc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0155
        gbc.setState(0x318, 0xba5f, 0x47e0, 0xd47, 0xe940, 0x6af5, 0x0, 0x0);
        gbc.writeMem(0x318, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xba5f);
        EXPECT(gbc.pc(), 0x319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0156
        gbc.setState(0xd4c8, 0xd993, 0xa920, 0xe847, 0xc4ca, 0xaec, 0x0, 0x1);
        gbc.writeMem(0xd4c8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd993);
        EXPECT(gbc.pc(), 0xd4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c8), 0xd8);
        // D8 0157
        gbc.setState(0xb062, 0x11e9, 0xa2e0, 0xdb6f, 0x49e0, 0xb348, 0x0, 0x0);
        gbc.writeMem(0xb062, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x11e9);
        EXPECT(gbc.pc(), 0xb063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb062), 0xd8);
        // D8 0158
        gbc.setState(0x9d23, 0x9a0, 0x2f50, 0xba27, 0xdf1f, 0x6a0a, 0x0, 0x0);
        gbc.writeMem(0x9a0, { 0x7, 0x47 });
        gbc.writeMem(0x9d23, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9a2);
        EXPECT(gbc.pc(), 0x4707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d23), 0xd8);
        // D8 0159
        gbc.setState(0x629a, 0x5b5c, 0x4b60, 0x9ce8, 0x1b5, 0x6096, 0x1, 0x0);
        gbc.writeMem(0x629a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5b5c);
        EXPECT(gbc.pc(), 0x629b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 015A
        gbc.setState(0x380, 0x1d40, 0x8eb0, 0xb87f, 0x893d, 0xdf6f, 0x0, 0x1);
        gbc.writeMem(0x380, { 0xd8 });
        gbc.writeMem(0x1d40, { 0x86, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1d42);
        EXPECT(gbc.pc(), 0x8486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 015B
        gbc.setState(0x6aad, 0xf408, 0xcd70, 0xa4e9, 0x1c0b, 0xfc1e, 0x0, 0x0);
        gbc.writeMem(0x6aad, { 0xd8 });
        gbc.writeMem(0xf408, { 0xd4, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf40a);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf408), 0xd4);
        EXPECT(gbc.readMem(0xf409), 0x75);
        // D8 015C
        gbc.setState(0xd4d8, 0xac5, 0xa220, 0xf251, 0x9431, 0xcbb3, 0x0, 0x1);
        gbc.writeMem(0xd4d8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xac5);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d8), 0xd8);
        // D8 015D
        gbc.setState(0x5ebf, 0xbe45, 0x8cb0, 0xb490, 0xfc65, 0x2110, 0x1, 0x1);
        gbc.writeMem(0x5ebf, { 0xd8 });
        gbc.writeMem(0xbe45, { 0x79, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0xf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe45), 0x79);
        EXPECT(gbc.readMem(0xbe46), 0xf);
        // D8 015E
        gbc.setState(0xe35a, 0x202, 0xf0d0, 0x4144, 0xddff, 0x29ee, 0x0, 0x0);
        gbc.writeMem(0x202, { 0x88, 0x43 });
        gbc.writeMem(0xe35a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x4388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35a), 0xd8);
        // D8 015F
        gbc.setState(0xdb1f, 0x6040, 0x52c0, 0x826c, 0xbb6, 0x9034, 0x0, 0x1);
        gbc.writeMem(0xdb1f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6040);
        EXPECT(gbc.pc(), 0xdb20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb1f), 0xd8);
        // D8 0160
        gbc.setState(0x53af, 0xdac4, 0x50b0, 0xa69f, 0x27b5, 0xd3a7, 0x0, 0x1);
        gbc.writeMem(0x53af, { 0xd8 });
        gbc.writeMem(0xdac4, { 0x9a, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdac6);
        EXPECT(gbc.pc(), 0x6d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac4), 0x9a);
        EXPECT(gbc.readMem(0xdac5), 0x6d);
        // D8 0161
        gbc.setState(0xbd6d, 0x640b, 0x8fa0, 0x3b80, 0xaf43, 0x5c60, 0x1, 0x1);
        gbc.writeMem(0xbd6d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x640b);
        EXPECT(gbc.pc(), 0xbd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6d), 0xd8);
        // D8 0162
        gbc.setState(0x861f, 0x20bb, 0x7220, 0x427, 0x3a4f, 0x389d, 0x1, 0x0);
        gbc.writeMem(0x861f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x20bb);
        EXPECT(gbc.pc(), 0x8620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861f), 0xd8);
        // D8 0164
        gbc.setState(0x254f, 0xacbf, 0x6cc0, 0xc71b, 0x38a1, 0xeeba, 0x1, 0x0);
        gbc.writeMem(0x254f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xacbf);
        EXPECT(gbc.pc(), 0x2550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0165
        gbc.setState(0x7da3, 0xddc4, 0xc020, 0xefeb, 0xd4e7, 0x24fe, 0x1, 0x1);
        gbc.writeMem(0x7da3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xddc4);
        EXPECT(gbc.pc(), 0x7da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0166
        gbc.setState(0x67e5, 0xe8ea, 0x8fa0, 0xcccf, 0x4bd6, 0x8aa4, 0x0, 0x1);
        gbc.writeMem(0x67e5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe8ea);
        EXPECT(gbc.pc(), 0x67e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0167
        gbc.setState(0x9bdc, 0x59df, 0x3890, 0xb6c8, 0xa4b7, 0x8d6, 0x0, 0x1);
        gbc.writeMem(0x59df, { 0xb3, 0xaf });
        gbc.writeMem(0x9bdc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0xafb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bdc), 0xd8);
        // D8 0168
        gbc.setState(0xac0, 0x973a, 0x6100, 0x1b09, 0x2ef5, 0xec3e, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x973a);
        EXPECT(gbc.pc(), 0xac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0169
        gbc.setState(0x6e6d, 0xb2d0, 0x3c60, 0x25bb, 0xeb82, 0x16fd, 0x1, 0x0);
        gbc.writeMem(0x6e6d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb2d0);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 016A
        gbc.setState(0xb77b, 0x39ca, 0xefe0, 0x5eef, 0x84c3, 0xd021, 0x0, 0x1);
        gbc.writeMem(0xb77b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x39ca);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77b), 0xd8);
        // D8 016B
        gbc.setState(0x798b, 0x26a, 0x8380, 0x2a68, 0x93a6, 0x4a2c, 0x0, 0x1);
        gbc.writeMem(0x798b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x26a);
        EXPECT(gbc.pc(), 0x798c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 016C
        gbc.setState(0x22a3, 0x73da, 0xbc70, 0xb594, 0xe316, 0x7c78, 0x1, 0x1);
        gbc.writeMem(0x22a3, { 0xd8 });
        gbc.writeMem(0x73da, { 0x84, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x73dc);
        EXPECT(gbc.pc(), 0x9284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 016D
        gbc.setState(0x33d5, 0x2d0d, 0x1270, 0xaa34, 0x1c5d, 0x6697, 0x0, 0x0);
        gbc.writeMem(0x2d0d, { 0x18, 0xcd });
        gbc.writeMem(0x33d5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2d0f);
        EXPECT(gbc.pc(), 0xcd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 016E
        gbc.setState(0x43cf, 0xc5ea, 0x410, 0xf16, 0x12cf, 0xd2ad, 0x0, 0x1);
        gbc.writeMem(0x43cf, { 0xd8 });
        gbc.writeMem(0xc5ea, { 0xae, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x14ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ea), 0xae);
        EXPECT(gbc.readMem(0xc5eb), 0x14);
        // D8 016F
        gbc.setState(0x5f54, 0xef34, 0xc500, 0x6d6a, 0x7042, 0x7e77, 0x1, 0x0);
        gbc.writeMem(0x5f54, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xef34);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0170
        gbc.setState(0x422, 0xa14b, 0x34c0, 0x6681, 0x2f4f, 0xf3dd, 0x0, 0x0);
        gbc.writeMem(0x422, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa14b);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0171
        gbc.setState(0x8b74, 0x4701, 0xf080, 0xe67c, 0x72b, 0x8f15, 0x0, 0x1);
        gbc.writeMem(0x8b74, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4701);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b74), 0xd8);
        // D8 0172
        gbc.setState(0x5197, 0x9fc0, 0xea40, 0x91d6, 0x332d, 0xa2ea, 0x0, 0x0);
        gbc.writeMem(0x5197, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9fc0);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0173
        gbc.setState(0xedd7, 0x1a33, 0x8660, 0xd338, 0x2606, 0xcfe7, 0x0, 0x0);
        gbc.writeMem(0xedd7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1a33);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd7), 0xd8);
        // D8 0174
        gbc.setState(0xeafd, 0x283e, 0x2a80, 0xcd7c, 0xcfdb, 0x6841, 0x1, 0x1);
        gbc.writeMem(0xeafd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x283e);
        EXPECT(gbc.pc(), 0xeafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeafd), 0xd8);
        // D8 0175
        gbc.setState(0x13d3, 0x2c8f, 0x6510, 0x5b3, 0x2ca7, 0x6a5e, 0x1, 0x0);
        gbc.writeMem(0x13d3, { 0xd8 });
        gbc.writeMem(0x2c8f, { 0x42, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2c91);
        EXPECT(gbc.pc(), 0xe842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0176
        gbc.setState(0x4312, 0x6fbd, 0x210, 0x6815, 0x7a88, 0x6032, 0x1, 0x1);
        gbc.writeMem(0x4312, { 0xd8 });
        gbc.writeMem(0x6fbd, { 0x38, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6fbf);
        EXPECT(gbc.pc(), 0xee38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0177
        gbc.setState(0xea62, 0x2f6c, 0x1eb0, 0x7b8b, 0x59b3, 0x3029, 0x1, 0x0);
        gbc.writeMem(0x2f6c, { 0xd2, 0x43 });
        gbc.writeMem(0xea62, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2f6e);
        EXPECT(gbc.pc(), 0x43d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea62), 0xd8);
        // D8 0178
        gbc.setState(0x7178, 0xd48, 0x21a0, 0x2c7e, 0x24f7, 0xe346, 0x1, 0x1);
        gbc.writeMem(0x7178, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd48);
        EXPECT(gbc.pc(), 0x7179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0179
        gbc.setState(0x9ee0, 0x5789, 0x2e70, 0x8012, 0x723f, 0x6257, 0x0, 0x0);
        gbc.writeMem(0x5789, { 0x11, 0xf8 });
        gbc.writeMem(0x9ee0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x578b);
        EXPECT(gbc.pc(), 0xf811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee0), 0xd8);
        // D8 017A
        gbc.setState(0xd3cf, 0x6097, 0x6080, 0x5e39, 0xb57a, 0x6f9e, 0x1, 0x0);
        gbc.writeMem(0xd3cf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6097);
        EXPECT(gbc.pc(), 0xd3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cf), 0xd8);
        // D8 017B
        gbc.setState(0xe65a, 0xac9c, 0x8610, 0x5346, 0xa8a1, 0x564c, 0x0, 0x1);
        gbc.writeMem(0xac9c, { 0xed, 0x1f });
        gbc.writeMem(0xe65a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xac9e);
        EXPECT(gbc.pc(), 0x1fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9c), 0xed);
        EXPECT(gbc.readMem(0xac9d), 0x1f);
        EXPECT(gbc.readMem(0xe65a), 0xd8);
        // D8 017C
        gbc.setState(0x99f3, 0xfbe7, 0x3410, 0x4144, 0xb52a, 0x989f, 0x1, 0x1);
        gbc.writeMem(0x99f3, { 0xd8 });
        gbc.writeMem(0xfbe7, { 0xa5, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0x37a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f3), 0xd8);
        EXPECT(gbc.readMem(0xfbe7), 0xa5);
        EXPECT(gbc.readMem(0xfbe8), 0x37);
        // D8 017D
        gbc.setState(0x7574, 0x476a, 0x7d50, 0x2408, 0xa24c, 0x8a67, 0x1, 0x0);
        gbc.writeMem(0x476a, { 0xe2, 0x30 });
        gbc.writeMem(0x7574, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x476c);
        EXPECT(gbc.pc(), 0x30e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 017E
        gbc.setState(0xbe0a, 0x172a, 0x4e10, 0xca45, 0xeef4, 0x7824, 0x0, 0x1);
        gbc.writeMem(0x172a, { 0x22, 0xa });
        gbc.writeMem(0xbe0a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x172c);
        EXPECT(gbc.pc(), 0xa22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0a), 0xd8);
        // D8 017F
        gbc.setState(0x5e3b, 0xb862, 0xaa30, 0x8b28, 0xed86, 0x71d3, 0x0, 0x1);
        gbc.writeMem(0x5e3b, { 0xd8 });
        gbc.writeMem(0xb862, { 0xc, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb864);
        EXPECT(gbc.pc(), 0xc40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb862), 0xc);
        EXPECT(gbc.readMem(0xb863), 0xc4);
        // D8 0180
        gbc.setState(0x1e3f, 0x4334, 0xa860, 0xb26, 0xaeaf, 0xff4d, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4334);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0181
        gbc.setState(0xdcf1, 0x2fd5, 0x2df0, 0x431, 0x8664, 0x3f26, 0x1, 0x1);
        gbc.writeMem(0x2fd5, { 0x1d, 0x38 });
        gbc.writeMem(0xdcf1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2fd7);
        EXPECT(gbc.pc(), 0x381d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf1), 0xd8);
        // D8 0183
        gbc.setState(0x9503, 0x81c6, 0x9950, 0xa53b, 0x2bba, 0x5885, 0x0, 0x0);
        gbc.writeMem(0x81c6, { 0x3a, 0xf3 });
        gbc.writeMem(0x9503, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x81c8);
        EXPECT(gbc.pc(), 0xf33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c6), 0x3a);
        EXPECT(gbc.readMem(0x81c7), 0xf3);
        EXPECT(gbc.readMem(0x9503), 0xd8);
        // D8 0184
        gbc.setState(0xde81, 0x60bb, 0x5cb0, 0x4204, 0x5fba, 0xd9f1, 0x1, 0x1);
        gbc.writeMem(0x60bb, { 0xd3, 0x2f });
        gbc.writeMem(0xde81, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x60bd);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde81), 0xd8);
        // D8 0185
        gbc.setState(0xaaac, 0xa72d, 0xe550, 0x5a16, 0xd8d5, 0x108f, 0x1, 0x0);
        gbc.writeMem(0xa72d, { 0xed, 0xbe });
        gbc.writeMem(0xaaac, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa72f);
        EXPECT(gbc.pc(), 0xbeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72d), 0xed);
        EXPECT(gbc.readMem(0xa72e), 0xbe);
        EXPECT(gbc.readMem(0xaaac), 0xd8);
        // D8 0186
        gbc.setState(0x7d20, 0x1b68, 0x41b0, 0x7d2f, 0x9804, 0x3eda, 0x0, 0x0);
        gbc.writeMem(0x1b68, { 0x53, 0x91 });
        gbc.writeMem(0x7d20, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1b6a);
        EXPECT(gbc.pc(), 0x9153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0187
        gbc.setState(0x4211, 0x7dc, 0xce90, 0xcfd4, 0xf73c, 0xfb54, 0x0, 0x0);
        gbc.writeMem(0x7dc, { 0x73, 0x33 });
        gbc.writeMem(0x4211, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7de);
        EXPECT(gbc.pc(), 0x3373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0188
        gbc.setState(0xee34, 0xa59e, 0x9610, 0xffa1, 0x4172, 0x9ca8, 0x1, 0x1);
        gbc.writeMem(0xa59e, { 0x71, 0xc9 });
        gbc.writeMem(0xee34, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa5a0);
        EXPECT(gbc.pc(), 0xc971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa59e), 0x71);
        EXPECT(gbc.readMem(0xa59f), 0xc9);
        EXPECT(gbc.readMem(0xee34), 0xd8);
        // D8 0189
        gbc.setState(0xc558, 0x57be, 0x60d0, 0x9a0c, 0xd9f5, 0x9998, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0xde, 0xf5 });
        gbc.writeMem(0xc558, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0xf5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc558), 0xd8);
        // D8 018A
        gbc.setState(0x9acc, 0xeabe, 0x6930, 0xa25e, 0xb62b, 0xf59a, 0x1, 0x0);
        gbc.writeMem(0x9acc, { 0xd8 });
        gbc.writeMem(0xeabe, { 0x85, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xeac0);
        EXPECT(gbc.pc(), 0x5e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acc), 0xd8);
        EXPECT(gbc.readMem(0xeabe), 0x85);
        EXPECT(gbc.readMem(0xeabf), 0x5e);
        // D8 018B
        gbc.setState(0x324, 0xa87a, 0x1c40, 0xf3a8, 0xeda6, 0x8e19, 0x1, 0x0);
        gbc.writeMem(0x324, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa87a);
        EXPECT(gbc.pc(), 0x325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 018C
        gbc.setState(0x8da2, 0xb6bd, 0xc550, 0x69d1, 0x291b, 0xb95f, 0x1, 0x0);
        gbc.writeMem(0x8da2, { 0xd8 });
        gbc.writeMem(0xb6bd, { 0x8b, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb6bf);
        EXPECT(gbc.pc(), 0xfb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da2), 0xd8);
        EXPECT(gbc.readMem(0xb6bd), 0x8b);
        EXPECT(gbc.readMem(0xb6be), 0xfb);
        // D8 018D
        gbc.setState(0xe078, 0xc42a, 0x8f20, 0x8bdf, 0x9fed, 0x3df9, 0x0, 0x1);
        gbc.writeMem(0xe078, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc42a);
        EXPECT(gbc.pc(), 0xe079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe078), 0xd8);
        // D8 018E
        gbc.setState(0x40cc, 0x37b, 0xe290, 0x4e09, 0xe015, 0x8c95, 0x1, 0x0);
        gbc.writeMem(0x37b, { 0x16, 0xa0 });
        gbc.writeMem(0x40cc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x37d);
        EXPECT(gbc.pc(), 0xa016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 018F
        gbc.setState(0x9bd7, 0x3e41, 0x6630, 0x9e8e, 0x8568, 0x52a3, 0x0, 0x1);
        gbc.writeMem(0x3e41, { 0x1a, 0xca });
        gbc.writeMem(0x9bd7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3e43);
        EXPECT(gbc.pc(), 0xca1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd7), 0xd8);
        // D8 0190
        gbc.setState(0x7a57, 0xffbf, 0x2640, 0x510b, 0x2605, 0x6d8c, 0x1, 0x0);
        gbc.writeMem(0x7a57, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xffbf);
        EXPECT(gbc.pc(), 0x7a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0191
        gbc.setState(0x529e, 0x7f5d, 0xb3d0, 0x5f5a, 0x73b3, 0x2a24, 0x1, 0x1);
        gbc.writeMem(0x529e, { 0xd8 });
        gbc.writeMem(0x7f5d, { 0xf, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7f5f);
        EXPECT(gbc.pc(), 0x60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0192
        gbc.setState(0xdb5c, 0xea4d, 0x3ba0, 0x8e0b, 0xec9c, 0xda5, 0x0, 0x0);
        gbc.writeMem(0xdb5c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xea4d);
        EXPECT(gbc.pc(), 0xdb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5c), 0xd8);
        // D8 0193
        gbc.setState(0xbd52, 0xb93, 0xa270, 0xf036, 0xe1cd, 0x168e, 0x1, 0x0);
        gbc.writeMem(0xb93, { 0xc2, 0x25 });
        gbc.writeMem(0xbd52, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb95);
        EXPECT(gbc.pc(), 0x25c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd52), 0xd8);
        // D8 0194
        gbc.setState(0x989a, 0xd3f5, 0x1b70, 0xc782, 0x7735, 0xdf07, 0x0, 0x1);
        gbc.writeMem(0x989a, { 0xd8 });
        gbc.writeMem(0xd3f5, { 0x4, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd3f7);
        EXPECT(gbc.pc(), 0xc304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989a), 0xd8);
        EXPECT(gbc.readMem(0xd3f5), 0x4);
        EXPECT(gbc.readMem(0xd3f6), 0xc3);
        // D8 0195
        gbc.setState(0x192d, 0x6c65, 0x7a80, 0x9ddd, 0x5a6d, 0x1ad8, 0x1, 0x1);
        gbc.writeMem(0x192d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6c65);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0196
        gbc.setState(0xa237, 0x3f13, 0xea30, 0xc9ef, 0xc0a7, 0x4fa4, 0x1, 0x1);
        gbc.writeMem(0x3f13, { 0xe5, 0x53 });
        gbc.writeMem(0xa237, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3f15);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa237), 0xd8);
        // D8 0199
        gbc.setState(0xc39b, 0x2ab9, 0xc7d0, 0x5ecd, 0xd65d, 0x4d71, 0x1, 0x1);
        gbc.writeMem(0x2ab9, { 0x2, 0x4d });
        gbc.writeMem(0xc39b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2abb);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39b), 0xd8);
        // D8 019B
        gbc.setState(0x745b, 0xf466, 0xa130, 0xf513, 0x6596, 0x6a7, 0x1, 0x0);
        gbc.writeMem(0x745b, { 0xd8 });
        gbc.writeMem(0xf466, { 0x27, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf468);
        EXPECT(gbc.pc(), 0x5a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf466), 0x27);
        EXPECT(gbc.readMem(0xf467), 0x5a);
        // D8 019C
        gbc.setState(0x852c, 0x23bb, 0x2ea0, 0x111c, 0xb0a8, 0xd4ce, 0x1, 0x0);
        gbc.writeMem(0x852c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0x852d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852c), 0xd8);
        // D8 019D
        gbc.setState(0xae13, 0x3409, 0x4c0, 0x336d, 0x9d5, 0x55c1, 0x0, 0x1);
        gbc.writeMem(0xae13, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3409);
        EXPECT(gbc.pc(), 0xae14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae13), 0xd8);
        // D8 019E
        gbc.setState(0xa8c1, 0x845d, 0x1ef0, 0x1cc4, 0x1c6c, 0x652, 0x0, 0x1);
        gbc.writeMem(0x845d, { 0x59, 0x39 });
        gbc.writeMem(0xa8c1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x845f);
        EXPECT(gbc.pc(), 0x3959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845d), 0x59);
        EXPECT(gbc.readMem(0x845e), 0x39);
        EXPECT(gbc.readMem(0xa8c1), 0xd8);
        // D8 019F
        gbc.setState(0xbfca, 0x7a15, 0x8160, 0x369a, 0xb247, 0x7300, 0x1, 0x0);
        gbc.writeMem(0xbfca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0xbfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfca), 0xd8);
        // D8 01A0
        gbc.setState(0x3fc6, 0xd85f, 0x9530, 0xccbb, 0x4900, 0x2b73, 0x1, 0x0);
        gbc.writeMem(0x3fc6, { 0xd8 });
        gbc.writeMem(0xd85f, { 0xb9, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd861);
        EXPECT(gbc.pc(), 0xbbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85f), 0xb9);
        EXPECT(gbc.readMem(0xd860), 0xbb);
        // D8 01A1
        gbc.setState(0x7ea5, 0xc881, 0x5e60, 0x3922, 0x5b6c, 0xfdd0, 0x1, 0x0);
        gbc.writeMem(0x7ea5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc881);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01A2
        gbc.setState(0x8eb0, 0x8fc7, 0xbff0, 0x8625, 0x130, 0x77b2, 0x1, 0x1);
        gbc.writeMem(0x8eb0, { 0xd8 });
        gbc.writeMem(0x8fc7, { 0x2c, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0xfe2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb0), 0xd8);
        EXPECT(gbc.readMem(0x8fc7), 0x2c);
        EXPECT(gbc.readMem(0x8fc8), 0xfe);
        // D8 01A4
        gbc.setState(0x75e3, 0x17ea, 0xc3f0, 0x1b69, 0x4bb6, 0x5d17, 0x1, 0x0);
        gbc.writeMem(0x17ea, { 0xd4, 0xbd });
        gbc.writeMem(0x75e3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x17ec);
        EXPECT(gbc.pc(), 0xbdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01A5
        gbc.setState(0xbbd, 0xa093, 0x3150, 0x32e5, 0x5a44, 0xa815, 0x0, 0x0);
        gbc.writeMem(0xbbd, { 0xd8 });
        gbc.writeMem(0xa093, { 0x1, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa095);
        EXPECT(gbc.pc(), 0x2901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa093), 0x1);
        EXPECT(gbc.readMem(0xa094), 0x29);
        // D8 01A6
        gbc.setState(0x4d57, 0x1656, 0xea40, 0x2e5e, 0x3c90, 0x9c61, 0x0, 0x1);
        gbc.writeMem(0x4d57, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1656);
        EXPECT(gbc.pc(), 0x4d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01A7
        gbc.setState(0x84be, 0x9bdb, 0x98b0, 0x9101, 0x6a8b, 0x5bee, 0x1, 0x1);
        gbc.writeMem(0x84be, { 0xd8 });
        gbc.writeMem(0x9bdb, { 0x80, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9bdd);
        EXPECT(gbc.pc(), 0x4380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84be), 0xd8);
        EXPECT(gbc.readMem(0x9bdb), 0x80);
        EXPECT(gbc.readMem(0x9bdc), 0x43);
        // D8 01A8
        gbc.setState(0x357e, 0x81a6, 0x4b90, 0xad70, 0xfa9c, 0x4d2f, 0x1, 0x1);
        gbc.writeMem(0x357e, { 0xd8 });
        gbc.writeMem(0x81a6, { 0xdf, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x81a8);
        EXPECT(gbc.pc(), 0xe9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a6), 0xdf);
        EXPECT(gbc.readMem(0x81a7), 0xe9);
        // D8 01A9
        gbc.setState(0xad, 0x8015, 0xab0, 0xd481, 0x3109, 0x687b, 0x1, 0x0);
        gbc.writeMem(0xad, { 0xd8 });
        gbc.writeMem(0x8015, { 0x83, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8017);
        EXPECT(gbc.pc(), 0x3983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8015), 0x83);
        EXPECT(gbc.readMem(0x8016), 0x39);
        // D8 01AA
        gbc.setState(0x2203, 0xb31, 0x35a0, 0x640, 0x2259, 0x9431, 0x0, 0x0);
        gbc.writeMem(0x2203, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb31);
        EXPECT(gbc.pc(), 0x2204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01AB
        gbc.setState(0x2265, 0x25d6, 0x6b50, 0xc8b1, 0x2cfe, 0x8276, 0x1, 0x0);
        gbc.writeMem(0x2265, { 0xd8 });
        gbc.writeMem(0x25d6, { 0xb9, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x25d8);
        EXPECT(gbc.pc(), 0xd3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 01AC
        gbc.setState(0x75f5, 0x1db9, 0x7ba0, 0x3729, 0xeac8, 0xd2dc, 0x1, 0x1);
        gbc.writeMem(0x75f5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1db9);
        EXPECT(gbc.pc(), 0x75f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01AD
        gbc.setState(0xc7b5, 0xee6b, 0xb150, 0xd395, 0x43ea, 0x603a, 0x1, 0x1);
        gbc.writeMem(0xc7b5, { 0xd8 });
        gbc.writeMem(0xee6b, { 0xc0, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xee6d);
        EXPECT(gbc.pc(), 0xd4c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b5), 0xd8);
        EXPECT(gbc.readMem(0xee6b), 0xc0);
        EXPECT(gbc.readMem(0xee6c), 0xd4);
        // D8 01AE
        gbc.setState(0xb191, 0x8cdd, 0xc640, 0x8dec, 0x6b10, 0x2059, 0x0, 0x1);
        gbc.writeMem(0xb191, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8cdd);
        EXPECT(gbc.pc(), 0xb192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb191), 0xd8);
        // D8 01AF
        gbc.setState(0x34c4, 0xfc8f, 0x32a0, 0x31d1, 0x4338, 0x6849, 0x0, 0x1);
        gbc.writeMem(0x34c4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfc8f);
        EXPECT(gbc.pc(), 0x34c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01B0
        gbc.setState(0x9e5, 0x339b, 0xe630, 0x5132, 0x50b7, 0x6928, 0x0, 0x0);
        gbc.writeMem(0x9e5, { 0xd8 });
        gbc.writeMem(0x339b, { 0x42, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x339d);
        EXPECT(gbc.pc(), 0xc042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01B1
        gbc.setState(0x9cb3, 0xb085, 0xc710, 0x5f6c, 0x2e29, 0x473d, 0x0, 0x0);
        gbc.writeMem(0x9cb3, { 0xd8 });
        gbc.writeMem(0xb085, { 0x95, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb087);
        EXPECT(gbc.pc(), 0x1e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb3), 0xd8);
        EXPECT(gbc.readMem(0xb085), 0x95);
        EXPECT(gbc.readMem(0xb086), 0x1e);
        // D8 01B2
        gbc.setState(0xef00, 0xacf0, 0x7ba0, 0xefdb, 0x83f1, 0x610b, 0x1, 0x0);
        gbc.writeMem(0xef00, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xacf0);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef00), 0xd8);
        // D8 01B3
        gbc.setState(0x6d85, 0xb62b, 0xcb20, 0xceb6, 0xaba4, 0x5e72, 0x1, 0x1);
        gbc.writeMem(0x6d85, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb62b);
        EXPECT(gbc.pc(), 0x6d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01B4
        gbc.setState(0xb70a, 0x9d41, 0xc850, 0xd213, 0x5069, 0xfe41, 0x1, 0x1);
        gbc.writeMem(0x9d41, { 0xa, 0x35 });
        gbc.writeMem(0xb70a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d43);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d41), 0xa);
        EXPECT(gbc.readMem(0x9d42), 0x35);
        EXPECT(gbc.readMem(0xb70a), 0xd8);
        // D8 01B5
        gbc.setState(0x6ba6, 0x1bce, 0x3b70, 0x7d0a, 0xafd6, 0x42a5, 0x1, 0x1);
        gbc.writeMem(0x1bce, { 0x22, 0x22 });
        gbc.writeMem(0x6ba6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1bd0);
        EXPECT(gbc.pc(), 0x2222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01B6
        gbc.setState(0xaeed, 0xbaa7, 0x38a0, 0xa7b9, 0xe7, 0x8ef7, 0x1, 0x0);
        gbc.writeMem(0xaeed, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbaa7);
        EXPECT(gbc.pc(), 0xaeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeed), 0xd8);
        // D8 01B7
        gbc.setState(0x57f8, 0x54c4, 0xd000, 0x68e4, 0x746d, 0xa390, 0x1, 0x0);
        gbc.writeMem(0x57f8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x57f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01B8
        gbc.setState(0xccd6, 0xde5e, 0x54e0, 0xd60f, 0x16c0, 0x1594, 0x1, 0x1);
        gbc.writeMem(0xccd6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0xccd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd6), 0xd8);
        // D8 01B9
        gbc.setState(0xb82e, 0x3837, 0xa310, 0x17d7, 0x650f, 0x293f, 0x0, 0x1);
        gbc.writeMem(0x3837, { 0x4d, 0x47 });
        gbc.writeMem(0xb82e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3839);
        EXPECT(gbc.pc(), 0x474d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82e), 0xd8);
        // D8 01BA
        gbc.setState(0xa91e, 0x76f1, 0xc3d0, 0x8a0f, 0x3390, 0x3c76, 0x1, 0x1);
        gbc.writeMem(0x76f1, { 0x94, 0x5f });
        gbc.writeMem(0xa91e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x76f3);
        EXPECT(gbc.pc(), 0x5f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91e), 0xd8);
        // D8 01BB
        gbc.setState(0xc07e, 0xf142, 0x8a30, 0x3527, 0x7fcc, 0xbcf1, 0x1, 0x1);
        gbc.writeMem(0xc07e, { 0xd8 });
        gbc.writeMem(0xf142, { 0x5c, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x195c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07e), 0xd8);
        EXPECT(gbc.readMem(0xf142), 0x5c);
        EXPECT(gbc.readMem(0xf143), 0x19);
        // D8 01BC
        gbc.setState(0xd8d8, 0xd72b, 0xe2e0, 0xd7ab, 0x616, 0x1bb9, 0x1, 0x0);
        gbc.writeMem(0xd8d8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd72b);
        EXPECT(gbc.pc(), 0xd8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d8), 0xd8);
        // D8 01BD
        gbc.setState(0x68cb, 0xea59, 0xa8f0, 0xb33b, 0x7783, 0x3aa2, 0x0, 0x0);
        gbc.writeMem(0x68cb, { 0xd8 });
        gbc.writeMem(0xea59, { 0xe7, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xea5b);
        EXPECT(gbc.pc(), 0x2ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea59), 0xe7);
        EXPECT(gbc.readMem(0xea5a), 0x2c);
        // D8 01BE
        gbc.setState(0x6a69, 0xf3c2, 0x6810, 0x7b37, 0xaa8f, 0x9326, 0x1, 0x1);
        gbc.writeMem(0x6a69, { 0xd8 });
        gbc.writeMem(0xf3c2, { 0x2d, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf3c4);
        EXPECT(gbc.pc(), 0xa2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3c2), 0x2d);
        EXPECT(gbc.readMem(0xf3c3), 0xa);
        // D8 01C0
        gbc.setState(0x126c, 0x249, 0x13a0, 0x1542, 0x6458, 0xe620, 0x0, 0x0);
        gbc.writeMem(0x126c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x249);
        EXPECT(gbc.pc(), 0x126d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01C1
        gbc.setState(0x64db, 0x51a0, 0x2320, 0xd6f5, 0xccc3, 0xb993, 0x0, 0x1);
        gbc.writeMem(0x64db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0x64dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01C2
        gbc.setState(0x99c, 0x3816, 0xa4d0, 0x8c19, 0x667d, 0xe8c1, 0x1, 0x1);
        gbc.writeMem(0x99c, { 0xd8 });
        gbc.writeMem(0x3816, { 0x55, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3818);
        EXPECT(gbc.pc(), 0x5455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 01C3
        gbc.setState(0xb8a, 0x4dd9, 0x5bf0, 0xa9c8, 0xf0c, 0x6ba2, 0x1, 0x1);
        gbc.writeMem(0xb8a, { 0xd8 });
        gbc.writeMem(0x4dd9, { 0x1d, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01C4
        gbc.setState(0xe2d9, 0xb823, 0xc0f0, 0x8b5d, 0x1037, 0xb752, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0x38, 0x18 });
        gbc.writeMem(0xe2d9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb825);
        EXPECT(gbc.pc(), 0x1838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb823), 0x38);
        EXPECT(gbc.readMem(0xb824), 0x18);
        EXPECT(gbc.readMem(0xe2d9), 0xd8);
        // D8 01C5
        gbc.setState(0xddd, 0x55a6, 0x5b10, 0x5508, 0x39a8, 0x8ebe, 0x1, 0x0);
        gbc.writeMem(0xddd, { 0xd8 });
        gbc.writeMem(0x55a6, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x55a8);
        EXPECT(gbc.pc(), 0x421e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 01C6
        gbc.setState(0xe890, 0x6c1a, 0xbb30, 0xfb8f, 0x567, 0x302c, 0x1, 0x1);
        gbc.writeMem(0x6c1a, { 0x5, 0xda });
        gbc.writeMem(0xe890, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6c1c);
        EXPECT(gbc.pc(), 0xda05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe890), 0xd8);
        // D8 01C7
        gbc.setState(0xd5fe, 0x1b46, 0xbe00, 0xf570, 0xd484, 0xfd57, 0x1, 0x0);
        gbc.writeMem(0xd5fe, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1b46);
        EXPECT(gbc.pc(), 0xd5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fe), 0xd8);
        // D8 01C8
        gbc.setState(0x1526, 0xa80, 0x3900, 0x63cc, 0x656f, 0x4f92, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa80);
        EXPECT(gbc.pc(), 0x1527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01C9
        gbc.setState(0x30de, 0x3100, 0xb640, 0x5aa6, 0x2ad0, 0x5147, 0x1, 0x1);
        gbc.writeMem(0x30de, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0x30df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01CA
        gbc.setState(0x843, 0xd11e, 0x5620, 0xd25, 0x2c8f, 0x2a0c, 0x1, 0x1);
        gbc.writeMem(0x843, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd11e);
        EXPECT(gbc.pc(), 0x844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01CB
        gbc.setState(0xd8db, 0x8ef6, 0xc980, 0x7a88, 0xfd21, 0x3aca, 0x0, 0x0);
        gbc.writeMem(0xd8db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8ef6);
        EXPECT(gbc.pc(), 0xd8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8db), 0xd8);
        // D8 01CC
        gbc.setState(0x81af, 0xf19c, 0xf070, 0x5bf, 0xd65e, 0x3914, 0x1, 0x0);
        gbc.writeMem(0x81af, { 0xd8 });
        gbc.writeMem(0xf19c, { 0x93, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf19e);
        EXPECT(gbc.pc(), 0x2593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81af), 0xd8);
        EXPECT(gbc.readMem(0xf19c), 0x93);
        EXPECT(gbc.readMem(0xf19d), 0x25);
        // D8 01CD
        gbc.setState(0x789b, 0xbceb, 0xa530, 0xbc98, 0x3c42, 0x4b5e, 0x1, 0x1);
        gbc.writeMem(0x789b, { 0xd8 });
        gbc.writeMem(0xbceb, { 0xd2, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbced);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbceb), 0xd2);
        EXPECT(gbc.readMem(0xbcec), 0xa2);
        // D8 01CE
        gbc.setState(0xbf27, 0x591d, 0x97d0, 0x1cab, 0xb41e, 0xd270, 0x0, 0x0);
        gbc.writeMem(0x591d, { 0x82, 0x5d });
        gbc.writeMem(0xbf27, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x591f);
        EXPECT(gbc.pc(), 0x5d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf27), 0xd8);
        // D8 01CF
        gbc.setState(0x421, 0x26cc, 0xa000, 0x9be6, 0x2aa, 0xe720, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x26cc);
        EXPECT(gbc.pc(), 0x422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01D0
        gbc.setState(0x39cc, 0xb3c4, 0xaa30, 0xb2ec, 0x2296, 0x4e3a, 0x1, 0x0);
        gbc.writeMem(0x39cc, { 0xd8 });
        gbc.writeMem(0xb3c4, { 0x36, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0xcd36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0x36);
        EXPECT(gbc.readMem(0xb3c5), 0xcd);
        // D8 01D1
        gbc.setState(0x101e, 0x832b, 0x9330, 0xab9b, 0xf67, 0x66bb, 0x1, 0x0);
        gbc.writeMem(0x101e, { 0xd8 });
        gbc.writeMem(0x832b, { 0x5f, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x832d);
        EXPECT(gbc.pc(), 0x7a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832b), 0x5f);
        EXPECT(gbc.readMem(0x832c), 0x7a);
        // D8 01D2
        gbc.setState(0x180d, 0xd5d7, 0x59b0, 0x8e89, 0x5e42, 0x9749, 0x1, 0x0);
        gbc.writeMem(0x180d, { 0xd8 });
        gbc.writeMem(0xd5d7, { 0x43, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd5d9);
        EXPECT(gbc.pc(), 0x3a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d7), 0x43);
        EXPECT(gbc.readMem(0xd5d8), 0x3a);
        // D8 01D3
        gbc.setState(0x4f5, 0x76be, 0x6410, 0x6548, 0x61e2, 0x643, 0x1, 0x0);
        gbc.writeMem(0x4f5, { 0xd8 });
        gbc.writeMem(0x76be, { 0xd4, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x76c0);
        EXPECT(gbc.pc(), 0xf3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 01D5
        gbc.setState(0xdb19, 0xc9b9, 0xce0, 0xbb6a, 0xd9f2, 0xf508, 0x0, 0x1);
        gbc.writeMem(0xdb19, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc9b9);
        EXPECT(gbc.pc(), 0xdb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb19), 0xd8);
        // D8 01D6
        gbc.setState(0xa3e2, 0x2954, 0x24b0, 0xe5d5, 0x3fc8, 0x8b29, 0x0, 0x1);
        gbc.writeMem(0x2954, { 0xad, 0x6d });
        gbc.writeMem(0xa3e2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2956);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e2), 0xd8);
        // D8 01D7
        gbc.setState(0xa638, 0x7b8e, 0xa740, 0x3356, 0x6410, 0x89b3, 0x1, 0x0);
        gbc.writeMem(0xa638, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7b8e);
        EXPECT(gbc.pc(), 0xa639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa638), 0xd8);
        // D8 01D8
        gbc.setState(0xe1cc, 0x8ca, 0x2010, 0xc63b, 0x86f1, 0xfcc8, 0x1, 0x1);
        gbc.writeMem(0x8ca, { 0x3d, 0x1 });
        gbc.writeMem(0xe1cc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8cc);
        EXPECT(gbc.pc(), 0x13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cc), 0xd8);
        // D8 01D9
        gbc.setState(0x4261, 0x5e3c, 0x79b0, 0x2643, 0x3b60, 0x32b8, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xd8 });
        gbc.writeMem(0x5e3c, { 0x95, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0xb595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01DA
        gbc.setState(0xa251, 0x2450, 0x6b60, 0xc60e, 0x2bf1, 0xc053, 0x0, 0x1);
        gbc.writeMem(0xa251, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2450);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa251), 0xd8);
        // D8 01DB
        gbc.setState(0xc61d, 0x1ca0, 0xb330, 0x6417, 0xc34f, 0x96a3, 0x1, 0x0);
        gbc.writeMem(0x1ca0, { 0x75, 0x68 });
        gbc.writeMem(0xc61d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1ca2);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61d), 0xd8);
        // D8 01DC
        gbc.setState(0x9b60, 0x94d1, 0xb330, 0x6c31, 0xa845, 0xf5a5, 0x1, 0x1);
        gbc.writeMem(0x94d1, { 0xc9, 0xd0 });
        gbc.writeMem(0x9b60, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x94d3);
        EXPECT(gbc.pc(), 0xd0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d1), 0xc9);
        EXPECT(gbc.readMem(0x94d2), 0xd0);
        EXPECT(gbc.readMem(0x9b60), 0xd8);
        // D8 01DD
        gbc.setState(0x8ce0, 0x64df, 0x5bc0, 0xea43, 0x2b8c, 0xffd4, 0x1, 0x0);
        gbc.writeMem(0x8ce0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x64df);
        EXPECT(gbc.pc(), 0x8ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce0), 0xd8);
        // D8 01DE
        gbc.setState(0xafd6, 0x3b5, 0x2c80, 0x329, 0x2376, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0xafd6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3b5);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd6), 0xd8);
        // D8 01DF
        gbc.setState(0x1e2b, 0x56cf, 0xa520, 0x70e4, 0xf0f1, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x1e2b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x56cf);
        EXPECT(gbc.pc(), 0x1e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01E0
        gbc.setState(0x2345, 0x3f58, 0xa3f0, 0x35e6, 0xb649, 0xfd4, 0x1, 0x1);
        gbc.writeMem(0x2345, { 0xd8 });
        gbc.writeMem(0x3f58, { 0x1f, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3f5a);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01E1
        gbc.setState(0x940a, 0xf422, 0xc5c0, 0x42cb, 0x763a, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0x940a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf422);
        EXPECT(gbc.pc(), 0x940b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940a), 0xd8);
        // D8 01E2
        gbc.setState(0x94b2, 0xa063, 0x1220, 0x6f39, 0x3e7c, 0x5217, 0x0, 0x1);
        gbc.writeMem(0x94b2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa063);
        EXPECT(gbc.pc(), 0x94b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b2), 0xd8);
        // D8 01E3
        gbc.setState(0xb2f3, 0x6ca9, 0x8e70, 0xe504, 0x19c6, 0x8bbb, 0x1, 0x0);
        gbc.writeMem(0x6ca9, { 0x88, 0x46 });
        gbc.writeMem(0xb2f3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6cab);
        EXPECT(gbc.pc(), 0x4688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f3), 0xd8);
        // D8 01E4
        gbc.setState(0x5904, 0x72d9, 0x9a80, 0xe05d, 0x1655, 0x28d1, 0x1, 0x0);
        gbc.writeMem(0x5904, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x72d9);
        EXPECT(gbc.pc(), 0x5905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01E5
        gbc.setState(0xb2f7, 0xdf5, 0x9a40, 0xe80e, 0x76fd, 0xd2f9, 0x0, 0x1);
        gbc.writeMem(0xb2f7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdf5);
        EXPECT(gbc.pc(), 0xb2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f7), 0xd8);
        // D8 01E6
        gbc.setState(0xb686, 0xa7d, 0x8d20, 0x6d52, 0x84e6, 0x6e5f, 0x0, 0x1);
        gbc.writeMem(0xb686, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa7d);
        EXPECT(gbc.pc(), 0xb687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb686), 0xd8);
        // D8 01E7
        gbc.setState(0xb753, 0x40d7, 0x7710, 0xc420, 0xe944, 0x654d, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0x2e, 0x7f });
        gbc.writeMem(0xb753, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x40d9);
        EXPECT(gbc.pc(), 0x7f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb753), 0xd8);
        // D8 01E9
        gbc.setState(0xa2d, 0x3012, 0x1d80, 0xf522, 0xe66f, 0x2760, 0x1, 0x0);
        gbc.writeMem(0xa2d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3012);
        EXPECT(gbc.pc(), 0xa2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01EA
        gbc.setState(0xef93, 0xfea2, 0xdac0, 0x5cbc, 0xf87, 0x1396, 0x1, 0x0);
        gbc.writeMem(0xef93, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfea2);
        EXPECT(gbc.pc(), 0xef94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef93), 0xd8);
        // D8 01EB
        gbc.setState(0x347f, 0xee34, 0x6020, 0x7aaa, 0xc83d, 0xe281, 0x1, 0x1);
        gbc.writeMem(0x347f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xee34);
        EXPECT(gbc.pc(), 0x3480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01EC
        gbc.setState(0x7b21, 0x16de, 0xa900, 0x6ec7, 0x45c9, 0x2a05, 0x1, 0x1);
        gbc.writeMem(0x7b21, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x16de);
        EXPECT(gbc.pc(), 0x7b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01ED
        gbc.setState(0x3488, 0xccae, 0xf710, 0x13dc, 0xba52, 0xf0c3, 0x1, 0x0);
        gbc.writeMem(0x3488, { 0xd8 });
        gbc.writeMem(0xccae, { 0x8e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xccb0);
        EXPECT(gbc.pc(), 0x268e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0x8e);
        EXPECT(gbc.readMem(0xccaf), 0x26);
        // D8 01EE
        gbc.setState(0x82db, 0x5abf, 0x2a70, 0xaf8b, 0x8f6c, 0xcc49, 0x1, 0x1);
        gbc.writeMem(0x5abf, { 0xc, 0x5b });
        gbc.writeMem(0x82db, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5ac1);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82db), 0xd8);
        // D8 01EF
        gbc.setState(0x3e9a, 0xef66, 0x6d00, 0x7695, 0x3c40, 0x2d0c, 0x0, 0x1);
        gbc.writeMem(0x3e9a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xef66);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01F0
        gbc.setState(0xa15c, 0xb378, 0xcc60, 0xa302, 0x8b9, 0x769e, 0x1, 0x1);
        gbc.writeMem(0xa15c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb378);
        EXPECT(gbc.pc(), 0xa15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15c), 0xd8);
        // D8 01F1
        gbc.setState(0x4a55, 0x784b, 0x6f0, 0x7183, 0x6030, 0x8db0, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xd8 });
        gbc.writeMem(0x784b, { 0xe8, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x784d);
        EXPECT(gbc.pc(), 0xdbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01F2
        gbc.setState(0x197f, 0xfe53, 0xf810, 0x1a43, 0x18da, 0x4df8, 0x0, 0x0);
        gbc.writeMem(0x197f, { 0xd8 });
        gbc.writeMem(0xfe53, { 0xef, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0x8fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe53), 0xef);
        EXPECT(gbc.readMem(0xfe54), 0x8f);
        // D8 01F3
        gbc.setState(0x3201, 0x31ae, 0xa3e0, 0xc892, 0x3a29, 0xbe9b, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x3202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01F4
        gbc.setState(0x4909, 0x4a08, 0xcba0, 0xf089, 0xe8be, 0x56e8, 0x0, 0x1);
        gbc.writeMem(0x4909, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4a08);
        EXPECT(gbc.pc(), 0x490a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 01F5
        gbc.setState(0xcb3b, 0xeae9, 0x3dc0, 0x2489, 0xe54c, 0x15b5, 0x0, 0x0);
        gbc.writeMem(0xcb3b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeae9);
        EXPECT(gbc.pc(), 0xcb3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3b), 0xd8);
        // D8 01F6
        gbc.setState(0x910d, 0x43d4, 0xcdc0, 0x19ce, 0xd5a7, 0x4b50, 0x1, 0x0);
        gbc.writeMem(0x910d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0x910e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x910d), 0xd8);
        // D8 01F7
        gbc.setState(0x3250, 0x13a7, 0x7a80, 0x2a74, 0x5e9d, 0xc666, 0x0, 0x0);
        gbc.writeMem(0x3250, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x13a7);
        EXPECT(gbc.pc(), 0x3251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01F8
        gbc.setState(0xacff, 0x9252, 0x75f0, 0x52e8, 0xab0e, 0xbc14, 0x0, 0x1);
        gbc.writeMem(0x9252, { 0xba, 0x8c });
        gbc.writeMem(0xacff, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9254);
        EXPECT(gbc.pc(), 0x8cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9252), 0xba);
        EXPECT(gbc.readMem(0x9253), 0x8c);
        EXPECT(gbc.readMem(0xacff), 0xd8);
        // D8 01F9
        gbc.setState(0x7fd5, 0xd1d, 0xfab0, 0x41e6, 0xcd0d, 0x42ed, 0x0, 0x1);
        gbc.writeMem(0xd1d, { 0xf2, 0xf8 });
        gbc.writeMem(0x7fd5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd1f);
        EXPECT(gbc.pc(), 0xf8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 01FA
        gbc.setState(0x5ecb, 0x7798, 0x6ac0, 0x41, 0x3f9e, 0xd427, 0x0, 0x1);
        gbc.writeMem(0x5ecb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7798);
        EXPECT(gbc.pc(), 0x5ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01FB
        gbc.setState(0xe34, 0xf105, 0xdeb0, 0xca09, 0x36fb, 0xc9b9, 0x0, 0x0);
        gbc.writeMem(0xe34, { 0xd8 });
        gbc.writeMem(0xf105, { 0x59, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0xfb59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf105), 0x59);
        EXPECT(gbc.readMem(0xf106), 0xfb);
        // D8 01FD
        gbc.setState(0xce82, 0xb472, 0x62e0, 0xdfcd, 0x6b33, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xce82, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb472);
        EXPECT(gbc.pc(), 0xce83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce82), 0xd8);
        // D8 01FE
        gbc.setState(0x349f, 0x74c7, 0xefc0, 0x4b4f, 0x1db6, 0x67fc, 0x0, 0x1);
        gbc.writeMem(0x349f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x74c7);
        EXPECT(gbc.pc(), 0x34a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 01FF
        gbc.setState(0xb7d3, 0x2e6c, 0x2190, 0xe14a, 0x9f5e, 0xb69a, 0x0, 0x0);
        gbc.writeMem(0x2e6c, { 0x2d, 0x22 });
        gbc.writeMem(0xb7d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2e6e);
        EXPECT(gbc.pc(), 0x222d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d3), 0xd8);
        // D8 0200
        gbc.setState(0x1506, 0x8aba, 0xb8d0, 0x3460, 0x9418, 0x263e, 0x0, 0x0);
        gbc.writeMem(0x1506, { 0xd8 });
        gbc.writeMem(0x8aba, { 0xf8, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8abc);
        EXPECT(gbc.pc(), 0xf9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aba), 0xf8);
        EXPECT(gbc.readMem(0x8abb), 0xf9);
        // D8 0201
        gbc.setState(0xbbba, 0x4983, 0x9f50, 0x5d2e, 0xa05b, 0x8d7e, 0x0, 0x0);
        gbc.writeMem(0x4983, { 0x50, 0xf9 });
        gbc.writeMem(0xbbba, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4985);
        EXPECT(gbc.pc(), 0xf950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbba), 0xd8);
        // D8 0202
        gbc.setState(0xa333, 0x4c8, 0xfad0, 0x4386, 0xf482, 0x57e3, 0x1, 0x0);
        gbc.writeMem(0x4c8, { 0xb1, 0x95 });
        gbc.writeMem(0xa333, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4ca);
        EXPECT(gbc.pc(), 0x95b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa333), 0xd8);
        // D8 0203
        gbc.setState(0xbb40, 0xa1a6, 0x5060, 0xc944, 0xb4e, 0xae71, 0x1, 0x1);
        gbc.writeMem(0xbb40, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0xbb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb40), 0xd8);
        // D8 0204
        gbc.setState(0xa5b2, 0x6def, 0xfaf0, 0x26ce, 0x607e, 0x6b07, 0x0, 0x0);
        gbc.writeMem(0x6def, { 0x79, 0x53 });
        gbc.writeMem(0xa5b2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6df1);
        EXPECT(gbc.pc(), 0x5379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b2), 0xd8);
        // D8 0205
        gbc.setState(0xb1ef, 0x6ef5, 0x66d0, 0x9e6f, 0x4c4b, 0x2d89, 0x1, 0x0);
        gbc.writeMem(0x6ef5, { 0xb0, 0xa6 });
        gbc.writeMem(0xb1ef, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6ef7);
        EXPECT(gbc.pc(), 0xa6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ef), 0xd8);
        // D8 0206
        gbc.setState(0xc065, 0xf7dc, 0x1b60, 0x9360, 0x11a2, 0x6643, 0x1, 0x1);
        gbc.writeMem(0xc065, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf7dc);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0xd8);
        // D8 0207
        gbc.setState(0x6e9d, 0x2ae4, 0x8a00, 0x8c21, 0xd963, 0x65ac, 0x1, 0x0);
        gbc.writeMem(0x6e9d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2ae4);
        EXPECT(gbc.pc(), 0x6e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0208
        gbc.setState(0x8829, 0x2d6a, 0xf3a0, 0x643a, 0xdc27, 0xb4ff, 0x0, 0x1);
        gbc.writeMem(0x8829, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2d6a);
        EXPECT(gbc.pc(), 0x882a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8829), 0xd8);
        // D8 0209
        gbc.setState(0x784c, 0xc9a9, 0x8080, 0x627c, 0x273c, 0xc608, 0x0, 0x0);
        gbc.writeMem(0x784c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 020A
        gbc.setState(0x6ff6, 0xf6e7, 0x5aa0, 0x67de, 0xa76f, 0x3a97, 0x0, 0x1);
        gbc.writeMem(0x6ff6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf6e7);
        EXPECT(gbc.pc(), 0x6ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 020B
        gbc.setState(0x9711, 0xf211, 0x7890, 0xcd31, 0xba53, 0xb1a, 0x0, 0x1);
        gbc.writeMem(0x9711, { 0xd8 });
        gbc.writeMem(0xf211, { 0xd3, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf213);
        EXPECT(gbc.pc(), 0xb1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9711), 0xd8);
        EXPECT(gbc.readMem(0xf211), 0xd3);
        EXPECT(gbc.readMem(0xf212), 0xb1);
        // D8 020C
        gbc.setState(0xc848, 0xebdb, 0x6670, 0xe25a, 0xaf24, 0x7e3c, 0x1, 0x0);
        gbc.writeMem(0xc848, { 0xd8 });
        gbc.writeMem(0xebdb, { 0x87, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xebdd);
        EXPECT(gbc.pc(), 0xdc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc848), 0xd8);
        EXPECT(gbc.readMem(0xebdb), 0x87);
        EXPECT(gbc.readMem(0xebdc), 0xdc);
        // D8 020D
        gbc.setState(0x2342, 0x8452, 0x6b60, 0xf617, 0x4f4e, 0xe7d8, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8452);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 020E
        gbc.setState(0x7689, 0x54e9, 0x1110, 0x94c9, 0xf580, 0x9123, 0x1, 0x0);
        gbc.writeMem(0x54e9, { 0x7c, 0xf4 });
        gbc.writeMem(0x7689, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x54eb);
        EXPECT(gbc.pc(), 0xf47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 020F
        gbc.setState(0x1284, 0x8f9a, 0x4d80, 0xfc94, 0xcb28, 0x27ea, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8f9a);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0210
        gbc.setState(0xe9a8, 0x5e39, 0x87b0, 0x9f2b, 0x808c, 0xd4e7, 0x0, 0x1);
        gbc.writeMem(0x5e39, { 0x8f, 0x20 });
        gbc.writeMem(0xe9a8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5e3b);
        EXPECT(gbc.pc(), 0x208f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a8), 0xd8);
        // D8 0211
        gbc.setState(0xa6f2, 0x5003, 0xd220, 0x4bc9, 0xbc38, 0x88a0, 0x0, 0x1);
        gbc.writeMem(0xa6f2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5003);
        EXPECT(gbc.pc(), 0xa6f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0xd8);
        // D8 0212
        gbc.setState(0xa7ca, 0x98ff, 0x5e40, 0x7ff8, 0x3f2c, 0xa4e0, 0x1, 0x1);
        gbc.writeMem(0xa7ca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x98ff);
        EXPECT(gbc.pc(), 0xa7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ca), 0xd8);
        // D8 0213
        gbc.setState(0xcb6a, 0x4d3b, 0x7ad0, 0xda17, 0x1357, 0xb8f9, 0x1, 0x1);
        gbc.writeMem(0x4d3b, { 0xfa, 0xdf });
        gbc.writeMem(0xcb6a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4d3d);
        EXPECT(gbc.pc(), 0xdffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6a), 0xd8);
        // D8 0214
        gbc.setState(0xd519, 0xd20, 0x98a0, 0x5700, 0x162c, 0xa829, 0x0, 0x1);
        gbc.writeMem(0xd519, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd20);
        EXPECT(gbc.pc(), 0xd51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd519), 0xd8);
        // D8 0215
        gbc.setState(0x1fa0, 0x5051, 0xa9b0, 0x2be1, 0x5b68, 0x5e3e, 0x1, 0x1);
        gbc.writeMem(0x1fa0, { 0xd8 });
        gbc.writeMem(0x5051, { 0xe0, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5053);
        EXPECT(gbc.pc(), 0x14e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0216
        gbc.setState(0x35e2, 0x91fa, 0x33c0, 0xe04f, 0x789d, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x35e2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x91fa);
        EXPECT(gbc.pc(), 0x35e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0217
        gbc.setState(0xa9d, 0x88d6, 0xe8c0, 0x5059, 0x9819, 0xe579, 0x0, 0x1);
        gbc.writeMem(0xa9d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x88d6);
        EXPECT(gbc.pc(), 0xa9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0218
        gbc.setState(0xea7f, 0x3019, 0x21b0, 0xb337, 0xc2ae, 0x620a, 0x0, 0x0);
        gbc.writeMem(0x3019, { 0x59, 0x53 });
        gbc.writeMem(0xea7f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x301b);
        EXPECT(gbc.pc(), 0x5359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7f), 0xd8);
        // D8 0219
        gbc.setState(0x864, 0xb27d, 0x5c20, 0xbe14, 0x6c05, 0x306a, 0x1, 0x1);
        gbc.writeMem(0x864, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb27d);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 021A
        gbc.setState(0xc0c0, 0xc1b, 0xf460, 0x94e4, 0xf3b5, 0x789c, 0x0, 0x1);
        gbc.writeMem(0xc0c0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc1b);
        EXPECT(gbc.pc(), 0xc0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c0), 0xd8);
        // D8 021B
        gbc.setState(0xbe90, 0xfb9, 0x3d40, 0x7175, 0xb76b, 0x6ba7, 0x1, 0x1);
        gbc.writeMem(0xbe90, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfb9);
        EXPECT(gbc.pc(), 0xbe91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe90), 0xd8);
        // D8 021C
        gbc.setState(0x87e0, 0x24a2, 0x5440, 0xefd9, 0x3747, 0x3533, 0x1, 0x1);
        gbc.writeMem(0x87e0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x24a2);
        EXPECT(gbc.pc(), 0x87e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e0), 0xd8);
        // D8 021D
        gbc.setState(0xcfec, 0x2c0f, 0x8600, 0xb467, 0x1197, 0x5145, 0x0, 0x0);
        gbc.writeMem(0xcfec, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c0f);
        EXPECT(gbc.pc(), 0xcfed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfec), 0xd8);
        // D8 021E
        gbc.setState(0x4ea5, 0xe5b0, 0xbc50, 0x4f93, 0x1323, 0x1ccc, 0x0, 0x0);
        gbc.writeMem(0x4ea5, { 0xd8 });
        gbc.writeMem(0xe5b0, { 0x7, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe5b2);
        EXPECT(gbc.pc(), 0x9907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b0), 0x7);
        EXPECT(gbc.readMem(0xe5b1), 0x99);
        // D8 021F
        gbc.setState(0x5150, 0x5f9f, 0x6d60, 0x510b, 0x2fdc, 0xb5d5, 0x0, 0x0);
        gbc.writeMem(0x5150, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5f9f);
        EXPECT(gbc.pc(), 0x5151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0221
        gbc.setState(0x54cc, 0x55e9, 0x5790, 0xe59, 0x1fc7, 0x8da, 0x1, 0x1);
        gbc.writeMem(0x54cc, { 0xd8 });
        gbc.writeMem(0x55e9, { 0x9c, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x55eb);
        EXPECT(gbc.pc(), 0xfa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0222
        gbc.setState(0x4b82, 0xe191, 0xe800, 0x81f2, 0x73c2, 0x8025, 0x1, 0x1);
        gbc.writeMem(0x4b82, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe191);
        EXPECT(gbc.pc(), 0x4b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0223
        gbc.setState(0xe602, 0x6254, 0x7300, 0xd2cd, 0x3c1f, 0x2ba6, 0x0, 0x0);
        gbc.writeMem(0xe602, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6254);
        EXPECT(gbc.pc(), 0xe603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe602), 0xd8);
        // D8 0224
        gbc.setState(0xd615, 0x706, 0xaa70, 0x5bce, 0x1762, 0xa23d, 0x0, 0x1);
        gbc.writeMem(0x706, { 0xf, 0x5f });
        gbc.writeMem(0xd615, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x708);
        EXPECT(gbc.pc(), 0x5f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd615), 0xd8);
        // D8 0225
        gbc.setState(0x7c6f, 0xcefe, 0x8890, 0x5941, 0xa941, 0xe9cf, 0x1, 0x1);
        gbc.writeMem(0x7c6f, { 0xd8 });
        gbc.writeMem(0xcefe, { 0x4f, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcf00);
        EXPECT(gbc.pc(), 0xe74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcefe), 0x4f);
        EXPECT(gbc.readMem(0xceff), 0xe7);
        // D8 0226
        gbc.setState(0x5ca3, 0x60b0, 0x77b0, 0x7669, 0x79e8, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xd8 });
        gbc.writeMem(0x60b0, { 0xb0, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x60b2);
        EXPECT(gbc.pc(), 0xb2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0227
        gbc.setState(0xc699, 0x79e2, 0xe9f0, 0x3481, 0x830, 0xee5f, 0x1, 0x0);
        gbc.writeMem(0x79e2, { 0x9b, 0x7c });
        gbc.writeMem(0xc699, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x79e4);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc699), 0xd8);
        // D8 0228
        gbc.setState(0x1722, 0x9fb3, 0x76e0, 0x94ef, 0x9205, 0xa39a, 0x1, 0x1);
        gbc.writeMem(0x1722, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9fb3);
        EXPECT(gbc.pc(), 0x1723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0229
        gbc.setState(0x43aa, 0xc841, 0x1ee0, 0xe457, 0x9d02, 0x2618, 0x1, 0x0);
        gbc.writeMem(0x43aa, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc841);
        EXPECT(gbc.pc(), 0x43ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 022A
        gbc.setState(0x6cc3, 0x9953, 0xb4e0, 0xdc55, 0xae02, 0xac33, 0x1, 0x0);
        gbc.writeMem(0x6cc3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9953);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 022B
        gbc.setState(0x39bf, 0x278f, 0x6720, 0x893, 0x2435, 0xedbf, 0x0, 0x1);
        gbc.writeMem(0x39bf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x278f);
        EXPECT(gbc.pc(), 0x39c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 022C
        gbc.setState(0x8813, 0x16d7, 0xc0, 0x83f4, 0xf328, 0x8ff8, 0x1, 0x1);
        gbc.writeMem(0x8813, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x16d7);
        EXPECT(gbc.pc(), 0x8814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8813), 0xd8);
        // D8 022D
        gbc.setState(0x4533, 0x4b92, 0x9cb0, 0x4a4f, 0x8cdf, 0x6231, 0x0, 0x0);
        gbc.writeMem(0x4533, { 0xd8 });
        gbc.writeMem(0x4b92, { 0x19, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4b94);
        EXPECT(gbc.pc(), 0x3419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 022E
        gbc.setState(0xdb33, 0xd9d8, 0x6390, 0x36bc, 0xefbd, 0xeed9, 0x1, 0x1);
        gbc.writeMem(0xd9d8, { 0xd7, 0x97 });
        gbc.writeMem(0xdb33, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd9da);
        EXPECT(gbc.pc(), 0x97d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d8), 0xd7);
        EXPECT(gbc.readMem(0xd9d9), 0x97);
        EXPECT(gbc.readMem(0xdb33), 0xd8);
        // D8 022F
        gbc.setState(0x5e17, 0x4608, 0xc7e0, 0xa086, 0xa03e, 0x9f1f, 0x1, 0x0);
        gbc.writeMem(0x5e17, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4608);
        EXPECT(gbc.pc(), 0x5e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0230
        gbc.setState(0x916c, 0xafed, 0xf0d0, 0xb36e, 0xad14, 0xbb95, 0x1, 0x0);
        gbc.writeMem(0x916c, { 0xd8 });
        gbc.writeMem(0xafed, { 0xa7, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xafef);
        EXPECT(gbc.pc(), 0x81a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916c), 0xd8);
        EXPECT(gbc.readMem(0xafed), 0xa7);
        EXPECT(gbc.readMem(0xafee), 0x81);
        // D8 0231
        gbc.setState(0x64d2, 0x5a58, 0x2ca0, 0xe111, 0xd1ea, 0xceb, 0x1, 0x0);
        gbc.writeMem(0x64d2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5a58);
        EXPECT(gbc.pc(), 0x64d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0232
        gbc.setState(0xb364, 0x395c, 0x3c90, 0xc4d0, 0x155d, 0xc734, 0x1, 0x0);
        gbc.writeMem(0x395c, { 0x9c, 0xc8 });
        gbc.writeMem(0xb364, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x395e);
        EXPECT(gbc.pc(), 0xc89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb364), 0xd8);
        // D8 0233
        gbc.setState(0x87ad, 0x2fc1, 0x7e90, 0xd0ad, 0x1cef, 0x4a0c, 0x0, 0x1);
        gbc.writeMem(0x2fc1, { 0x65, 0xb1 });
        gbc.writeMem(0x87ad, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2fc3);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ad), 0xd8);
        // D8 0234
        gbc.setState(0xe735, 0xfa3b, 0xe960, 0xd36f, 0xa5bd, 0xd6f6, 0x1, 0x1);
        gbc.writeMem(0xe735, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfa3b);
        EXPECT(gbc.pc(), 0xe736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe735), 0xd8);
        // D8 0235
        gbc.setState(0xbc74, 0x3abc, 0x11e0, 0x2e10, 0xc10d, 0xb458, 0x0, 0x1);
        gbc.writeMem(0xbc74, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3abc);
        EXPECT(gbc.pc(), 0xbc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc74), 0xd8);
        // D8 0236
        gbc.setState(0x5335, 0xd29e, 0x5680, 0x18ac, 0x49d4, 0x13bc, 0x1, 0x0);
        gbc.writeMem(0x5335, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd29e);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0237
        gbc.setState(0x3689, 0x6db1, 0xb610, 0xc71c, 0xf589, 0x999f, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0xd8 });
        gbc.writeMem(0x6db1, { 0x43, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6db3);
        EXPECT(gbc.pc(), 0x243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0238
        gbc.setState(0x8adf, 0xd162, 0x4a10, 0x5530, 0xd3ba, 0x3ee0, 0x1, 0x1);
        gbc.writeMem(0x8adf, { 0xd8 });
        gbc.writeMem(0xd162, { 0xdd, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd164);
        EXPECT(gbc.pc(), 0x9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8adf), 0xd8);
        EXPECT(gbc.readMem(0xd162), 0xdd);
        EXPECT(gbc.readMem(0xd163), 0x9);
        // D8 0239
        gbc.setState(0xd77e, 0x67b3, 0x3800, 0x1ff0, 0xdaf0, 0x1f72, 0x0, 0x0);
        gbc.writeMem(0xd77e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x67b3);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77e), 0xd8);
        // D8 023A
        gbc.setState(0xefe6, 0x17e8, 0xba80, 0x3a2, 0x101b, 0xa4e3, 0x1, 0x1);
        gbc.writeMem(0xefe6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x17e8);
        EXPECT(gbc.pc(), 0xefe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe6), 0xd8);
        // D8 023B
        gbc.setState(0x2102, 0x5c95, 0x1900, 0x9e1d, 0x942e, 0x13d0, 0x1, 0x0);
        gbc.writeMem(0x2102, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5c95);
        EXPECT(gbc.pc(), 0x2103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 023C
        gbc.setState(0x201f, 0xc80b, 0x72a0, 0xcc79, 0x1367, 0x16eb, 0x0, 0x0);
        gbc.writeMem(0x201f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc80b);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 023D
        gbc.setState(0xbda8, 0xe66, 0x2260, 0x81de, 0xbb5c, 0xa184, 0x0, 0x1);
        gbc.writeMem(0xbda8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe66);
        EXPECT(gbc.pc(), 0xbda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda8), 0xd8);
        // D8 023F
        gbc.setState(0x93e7, 0xb144, 0x8a50, 0xbd9, 0x5afc, 0xc39c, 0x0, 0x1);
        gbc.writeMem(0x93e7, { 0xd8 });
        gbc.writeMem(0xb144, { 0x90, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb146);
        EXPECT(gbc.pc(), 0xb290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e7), 0xd8);
        EXPECT(gbc.readMem(0xb144), 0x90);
        EXPECT(gbc.readMem(0xb145), 0xb2);
        // D8 0240
        gbc.setState(0x7950, 0x1113, 0x29a0, 0x71c9, 0x4043, 0x846c, 0x0, 0x1);
        gbc.writeMem(0x7950, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1113);
        EXPECT(gbc.pc(), 0x7951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0241
        gbc.setState(0x4ea4, 0x4e77, 0xe590, 0xbb02, 0x6a65, 0xf021, 0x0, 0x1);
        gbc.writeMem(0x4e77, { 0xa9, 0x48 });
        gbc.writeMem(0x4ea4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4e79);
        EXPECT(gbc.pc(), 0x48a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0242
        gbc.setState(0x4cd0, 0x9c24, 0x1ac0, 0x557f, 0x50cc, 0x35a5, 0x0, 0x1);
        gbc.writeMem(0x4cd0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x4cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0243
        gbc.setState(0x39d0, 0x52df, 0x77a0, 0xb98b, 0x9cf6, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0x39d0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x52df);
        EXPECT(gbc.pc(), 0x39d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0244
        gbc.setState(0xb1d6, 0xe9ef, 0xe8b0, 0x185c, 0xc1e2, 0x1693, 0x1, 0x1);
        gbc.writeMem(0xb1d6, { 0xd8 });
        gbc.writeMem(0xe9ef, { 0xb2, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe9f1);
        EXPECT(gbc.pc(), 0x89b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d6), 0xd8);
        EXPECT(gbc.readMem(0xe9ef), 0xb2);
        EXPECT(gbc.readMem(0xe9f0), 0x89);
        // D8 0245
        gbc.setState(0x9519, 0xd8a0, 0x5f00, 0x177f, 0x26b6, 0xcfd, 0x0, 0x1);
        gbc.writeMem(0x9519, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd8a0);
        EXPECT(gbc.pc(), 0x951a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9519), 0xd8);
        // D8 0246
        gbc.setState(0x34b0, 0x2382, 0xf010, 0x669b, 0x56bc, 0x2035, 0x0, 0x1);
        gbc.writeMem(0x2382, { 0x43, 0x5d });
        gbc.writeMem(0x34b0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2384);
        EXPECT(gbc.pc(), 0x5d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0247
        gbc.setState(0x31ba, 0x6d4c, 0x64e0, 0x5f58, 0x49fb, 0x6b61, 0x0, 0x0);
        gbc.writeMem(0x31ba, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6d4c);
        EXPECT(gbc.pc(), 0x31bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0248
        gbc.setState(0x8253, 0xc4d5, 0x17a0, 0x1a44, 0x41a3, 0x84ad, 0x1, 0x1);
        gbc.writeMem(0x8253, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc4d5);
        EXPECT(gbc.pc(), 0x8254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8253), 0xd8);
        // D8 0249
        gbc.setState(0xef57, 0x8e00, 0xbc90, 0x4870, 0x3cd5, 0x3960, 0x1, 0x1);
        gbc.writeMem(0x8e00, { 0xcd, 0xc1 });
        gbc.writeMem(0xef57, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8e02);
        EXPECT(gbc.pc(), 0xc1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e00), 0xcd);
        EXPECT(gbc.readMem(0x8e01), 0xc1);
        EXPECT(gbc.readMem(0xef57), 0xd8);
        // D8 024A
        gbc.setState(0xd30, 0xfe2f, 0x9da0, 0x5a42, 0xc4e7, 0xebe3, 0x1, 0x1);
        gbc.writeMem(0xd30, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0xd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 024B
        gbc.setState(0x5193, 0x9cb1, 0x3350, 0x646e, 0x8861, 0xb998, 0x0, 0x1);
        gbc.writeMem(0x5193, { 0xd8 });
        gbc.writeMem(0x9cb1, { 0x31, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9cb3);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb1), 0x31);
        EXPECT(gbc.readMem(0x9cb2), 0x5e);
        // D8 024C
        gbc.setState(0x9125, 0xc262, 0x11e0, 0x2edb, 0x9261, 0xc200, 0x0, 0x0);
        gbc.writeMem(0x9125, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc262);
        EXPECT(gbc.pc(), 0x9126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9125), 0xd8);
        // D8 024F
        gbc.setState(0x2260, 0x1385, 0x8670, 0x4d7d, 0xbb66, 0x892, 0x0, 0x1);
        gbc.writeMem(0x1385, { 0x98, 0x70 });
        gbc.writeMem(0x2260, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1387);
        EXPECT(gbc.pc(), 0x7098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0250
        gbc.setState(0x16d4, 0x316a, 0xe4e0, 0x403a, 0x565e, 0x5db1, 0x1, 0x0);
        gbc.writeMem(0x16d4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x316a);
        EXPECT(gbc.pc(), 0x16d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0251
        gbc.setState(0x17ec, 0xa746, 0x77c0, 0x8c92, 0x587a, 0xa1fd, 0x1, 0x1);
        gbc.writeMem(0x17ec, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa746);
        EXPECT(gbc.pc(), 0x17ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0252
        gbc.setState(0x25e2, 0xcf42, 0x620, 0xa363, 0x403a, 0x15e9, 0x1, 0x1);
        gbc.writeMem(0x25e2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcf42);
        EXPECT(gbc.pc(), 0x25e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0253
        gbc.setState(0x12be, 0x12d1, 0xf8f0, 0x534d, 0xf155, 0x57d3, 0x1, 0x1);
        gbc.writeMem(0x12be, { 0xd8 });
        gbc.writeMem(0x12d1, { 0xd7, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x12d3);
        EXPECT(gbc.pc(), 0x2ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0254
        gbc.setState(0xc528, 0xfd48, 0x82a0, 0xc55a, 0x8ad0, 0xebe5, 0x0, 0x1);
        gbc.writeMem(0xc528, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd48);
        EXPECT(gbc.pc(), 0xc529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc528), 0xd8);
        // D8 0255
        gbc.setState(0xcb8a, 0x36c5, 0x28a0, 0xb9cc, 0x2bf9, 0x83b7, 0x0, 0x0);
        gbc.writeMem(0xcb8a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x36c5);
        EXPECT(gbc.pc(), 0xcb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8a), 0xd8);
        // D8 0256
        gbc.setState(0xd200, 0xe52e, 0x6250, 0x31fb, 0xb62e, 0x58b0, 0x1, 0x0);
        gbc.writeMem(0xd200, { 0xd8 });
        gbc.writeMem(0xe52e, { 0x47, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe530);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd200), 0xd8);
        EXPECT(gbc.readMem(0xe52e), 0x47);
        EXPECT(gbc.readMem(0xe52f), 0x22);
        // D8 0257
        gbc.setState(0x30c3, 0x94f1, 0x1920, 0x7f3c, 0x92d0, 0xffcd, 0x0, 0x0);
        gbc.writeMem(0x30c3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x94f1);
        EXPECT(gbc.pc(), 0x30c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0258
        gbc.setState(0x6d47, 0xa441, 0x71f0, 0xfebd, 0xc8e3, 0x624d, 0x1, 0x0);
        gbc.writeMem(0x6d47, { 0xd8 });
        gbc.writeMem(0xa441, { 0xc8, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa443);
        EXPECT(gbc.pc(), 0x68c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa441), 0xc8);
        EXPECT(gbc.readMem(0xa442), 0x68);
        // D8 0259
        gbc.setState(0x83f5, 0x82c8, 0x9a60, 0xdf27, 0x8c29, 0xe496, 0x1, 0x0);
        gbc.writeMem(0x83f5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x82c8);
        EXPECT(gbc.pc(), 0x83f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f5), 0xd8);
        // D8 025A
        gbc.setState(0xaa50, 0xf9a0, 0xd60, 0x3cf6, 0x3a91, 0xdb5b, 0x1, 0x1);
        gbc.writeMem(0xaa50, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf9a0);
        EXPECT(gbc.pc(), 0xaa51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa50), 0xd8);
        // D8 025B
        gbc.setState(0x51a7, 0xcf0b, 0x3e10, 0x809d, 0x712f, 0x6aa5, 0x0, 0x1);
        gbc.writeMem(0x51a7, { 0xd8 });
        gbc.writeMem(0xcf0b, { 0x9c, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcf0d);
        EXPECT(gbc.pc(), 0x2b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0b), 0x9c);
        EXPECT(gbc.readMem(0xcf0c), 0x2b);
        // D8 025C
        gbc.setState(0x7eb7, 0x52c9, 0xad10, 0x6445, 0x81c1, 0xba13, 0x0, 0x0);
        gbc.writeMem(0x52c9, { 0x8, 0x8b });
        gbc.writeMem(0x7eb7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x52cb);
        EXPECT(gbc.pc(), 0x8b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 025D
        gbc.setState(0x42c7, 0x3d31, 0x2b60, 0xb024, 0x17c2, 0x3a84, 0x1, 0x1);
        gbc.writeMem(0x42c7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3d31);
        EXPECT(gbc.pc(), 0x42c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 025E
        gbc.setState(0xdddf, 0x461e, 0x2f80, 0x8c4f, 0xf87a, 0x3435, 0x0, 0x1);
        gbc.writeMem(0xdddf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x461e);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddf), 0xd8);
        // D8 025F
        gbc.setState(0xdc56, 0x4478, 0x5770, 0xaae0, 0xf613, 0x4143, 0x0, 0x0);
        gbc.writeMem(0x4478, { 0x64, 0xf6 });
        gbc.writeMem(0xdc56, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x447a);
        EXPECT(gbc.pc(), 0xf664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc56), 0xd8);
        // D8 0260
        gbc.setState(0xc636, 0x4ac7, 0x9780, 0x4c04, 0xa038, 0x7b1e, 0x1, 0x1);
        gbc.writeMem(0xc636, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4ac7);
        EXPECT(gbc.pc(), 0xc637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc636), 0xd8);
        // D8 0261
        gbc.setState(0x64f4, 0x657, 0x1720, 0xfb07, 0x4e3d, 0x31f2, 0x1, 0x1);
        gbc.writeMem(0x64f4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x657);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0262
        gbc.setState(0x611c, 0xc717, 0xbf70, 0x4734, 0x9db1, 0xf70f, 0x1, 0x0);
        gbc.writeMem(0x611c, { 0xd8 });
        gbc.writeMem(0xc717, { 0xe0, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc719);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc717), 0xe0);
        EXPECT(gbc.readMem(0xc718), 0xdd);
        // D8 0263
        gbc.setState(0x99e7, 0x1fc1, 0x9a0, 0x7db1, 0x72a7, 0x3f96, 0x0, 0x1);
        gbc.writeMem(0x99e7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1fc1);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e7), 0xd8);
        // D8 0264
        gbc.setState(0x73fb, 0x4bf3, 0x5ae0, 0x46ea, 0x6c49, 0x7c2f, 0x0, 0x1);
        gbc.writeMem(0x73fb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4bf3);
        EXPECT(gbc.pc(), 0x73fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0265
        gbc.setState(0x39e7, 0xed36, 0x6380, 0xfdcf, 0x13d, 0x9b9, 0x0, 0x0);
        gbc.writeMem(0x39e7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xed36);
        EXPECT(gbc.pc(), 0x39e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0266
        gbc.setState(0x933a, 0xea27, 0x23a0, 0x708e, 0x85ca, 0x7433, 0x1, 0x1);
        gbc.writeMem(0x933a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xea27);
        EXPECT(gbc.pc(), 0x933b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933a), 0xd8);
        // D8 0267
        gbc.setState(0x3e9b, 0x3f31, 0x4400, 0x2579, 0xe88, 0x197, 0x0, 0x1);
        gbc.writeMem(0x3e9b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3f31);
        EXPECT(gbc.pc(), 0x3e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0268
        gbc.setState(0xae3d, 0x6c2e, 0xa4b0, 0xe844, 0x6bc1, 0x3095, 0x1, 0x1);
        gbc.writeMem(0x6c2e, { 0x95, 0xf3 });
        gbc.writeMem(0xae3d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6c30);
        EXPECT(gbc.pc(), 0xf395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3d), 0xd8);
        // D8 0269
        gbc.setState(0x162c, 0xd9fa, 0x8b70, 0xc876, 0x76db, 0x585, 0x0, 0x1);
        gbc.writeMem(0x162c, { 0xd8 });
        gbc.writeMem(0xd9fa, { 0x44, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd9fc);
        EXPECT(gbc.pc(), 0xf244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fa), 0x44);
        EXPECT(gbc.readMem(0xd9fb), 0xf2);
        // D8 026B
        gbc.setState(0x4f5b, 0xd26b, 0x2bb0, 0x6a9b, 0xdeba, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0x4f5b, { 0xd8 });
        gbc.writeMem(0xd26b, { 0xca, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd26d);
        EXPECT(gbc.pc(), 0xd0ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26b), 0xca);
        EXPECT(gbc.readMem(0xd26c), 0xd0);
        // D8 026C
        gbc.setState(0x3f33, 0x3190, 0x8600, 0xf6f1, 0xfc16, 0xb51e, 0x0, 0x1);
        gbc.writeMem(0x3f33, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3190);
        EXPECT(gbc.pc(), 0x3f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 026D
        gbc.setState(0xc564, 0x8a31, 0x5310, 0x6dfe, 0x58c9, 0xf48, 0x1, 0x0);
        gbc.writeMem(0x8a31, { 0xe6, 0x24 });
        gbc.writeMem(0xc564, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8a33);
        EXPECT(gbc.pc(), 0x24e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a31), 0xe6);
        EXPECT(gbc.readMem(0x8a32), 0x24);
        EXPECT(gbc.readMem(0xc564), 0xd8);
        // D8 026E
        gbc.setState(0x414d, 0x602e, 0x8870, 0x8249, 0x2534, 0xe37d, 0x0, 0x0);
        gbc.writeMem(0x414d, { 0xd8 });
        gbc.writeMem(0x602e, { 0xba, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6030);
        EXPECT(gbc.pc(), 0xc0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 026F
        gbc.setState(0xa842, 0x5998, 0xae60, 0x15ec, 0xa1d4, 0x2a53, 0x1, 0x0);
        gbc.writeMem(0xa842, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa842), 0xd8);
        // D8 0270
        gbc.setState(0x4c6c, 0xb03c, 0xf040, 0x7f9, 0xd948, 0xfb45, 0x0, 0x1);
        gbc.writeMem(0x4c6c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb03c);
        EXPECT(gbc.pc(), 0x4c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0271
        gbc.setState(0x8666, 0xc33c, 0x79f0, 0xd481, 0x9e0c, 0x231a, 0x0, 0x0);
        gbc.writeMem(0x8666, { 0xd8 });
        gbc.writeMem(0xc33c, { 0xf2, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc33e);
        EXPECT(gbc.pc(), 0x7bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8666), 0xd8);
        EXPECT(gbc.readMem(0xc33c), 0xf2);
        EXPECT(gbc.readMem(0xc33d), 0x7b);
        // D8 0272
        gbc.setState(0xb7f4, 0xb13a, 0xe4f0, 0x3c58, 0xf99a, 0xafd0, 0x0, 0x0);
        gbc.writeMem(0xb13a, { 0x96, 0xa2 });
        gbc.writeMem(0xb7f4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb13c);
        EXPECT(gbc.pc(), 0xa296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13a), 0x96);
        EXPECT(gbc.readMem(0xb13b), 0xa2);
        EXPECT(gbc.readMem(0xb7f4), 0xd8);
        // D8 0273
        gbc.setState(0x1487, 0xc672, 0x56b0, 0xbf85, 0x9ed1, 0x456d, 0x0, 0x0);
        gbc.writeMem(0x1487, { 0xd8 });
        gbc.writeMem(0xc672, { 0x81, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc674);
        EXPECT(gbc.pc(), 0x1181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc672), 0x81);
        EXPECT(gbc.readMem(0xc673), 0x11);
        // D8 0274
        gbc.setState(0x61ff, 0xb2d5, 0x2450, 0x9283, 0x7ec2, 0xcea8, 0x0, 0x1);
        gbc.writeMem(0x61ff, { 0xd8 });
        gbc.writeMem(0xb2d5, { 0xe2, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb2d7);
        EXPECT(gbc.pc(), 0xc0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d5), 0xe2);
        EXPECT(gbc.readMem(0xb2d6), 0xc0);
        // D8 0275
        gbc.setState(0xd875, 0x791a, 0x6d90, 0x3d93, 0x3a5f, 0x87e, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0xfd, 0x3e });
        gbc.writeMem(0xd875, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x791c);
        EXPECT(gbc.pc(), 0x3efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd875), 0xd8);
        // D8 0276
        gbc.setState(0x265, 0x18d5, 0x34c0, 0x3a09, 0x9d3a, 0x767f, 0x0, 0x0);
        gbc.writeMem(0x265, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x18d5);
        EXPECT(gbc.pc(), 0x266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0277
        gbc.setState(0xa4b3, 0xd3, 0x27e0, 0x4673, 0xcdf5, 0xb1f9, 0x0, 0x0);
        gbc.writeMem(0xa4b3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd3);
        EXPECT(gbc.pc(), 0xa4b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b3), 0xd8);
        // D8 0278
        gbc.setState(0x9b60, 0x64ae, 0x5a20, 0xed3d, 0x8df1, 0x3362, 0x1, 0x0);
        gbc.writeMem(0x9b60, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x64ae);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b60), 0xd8);
        // D8 0279
        gbc.setState(0xd945, 0x98f4, 0x7cd0, 0x3b90, 0xd307, 0x501, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0xa3, 0x5c });
        gbc.writeMem(0xd945, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x98f6);
        EXPECT(gbc.pc(), 0x5ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f4), 0xa3);
        EXPECT(gbc.readMem(0x98f5), 0x5c);
        EXPECT(gbc.readMem(0xd945), 0xd8);
        // D8 027A
        gbc.setState(0x61d3, 0xb412, 0x7dc0, 0x16ad, 0x17f4, 0x4ac6, 0x1, 0x1);
        gbc.writeMem(0x61d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb412);
        EXPECT(gbc.pc(), 0x61d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 027C
        gbc.setState(0x72a5, 0x542c, 0xf940, 0x1619, 0xa2ee, 0xbaf7, 0x0, 0x0);
        gbc.writeMem(0x72a5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x542c);
        EXPECT(gbc.pc(), 0x72a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 027D
        gbc.setState(0x1fa1, 0x9ae, 0x3d30, 0x3f25, 0x68a7, 0x1a5f, 0x0, 0x0);
        gbc.writeMem(0x9ae, { 0xc9, 0xe7 });
        gbc.writeMem(0x1fa1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9b0);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 027E
        gbc.setState(0xbf39, 0xdee6, 0x8da0, 0xadcd, 0x5cf0, 0xfb21, 0x0, 0x0);
        gbc.writeMem(0xbf39, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0xbf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf39), 0xd8);
        // D8 027F
        gbc.setState(0x9e26, 0x79ff, 0x9960, 0x80cd, 0xd3ab, 0xe398, 0x1, 0x0);
        gbc.writeMem(0x9e26, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x79ff);
        EXPECT(gbc.pc(), 0x9e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e26), 0xd8);
        // D8 0280
        gbc.setState(0x799a, 0x5565, 0x4230, 0xcade, 0xd9ba, 0x5ac0, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0xe9, 0xbd });
        gbc.writeMem(0x799a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5567);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0281
        gbc.setState(0xa709, 0xa2c8, 0xa380, 0xe434, 0x63ba, 0xf908, 0x1, 0x1);
        gbc.writeMem(0xa709, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0xa70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa709), 0xd8);
        // D8 0282
        gbc.setState(0x1644, 0xf404, 0x15c0, 0xb8b1, 0xbfbb, 0xebcb, 0x0, 0x0);
        gbc.writeMem(0x1644, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf404);
        EXPECT(gbc.pc(), 0x1645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0283
        gbc.setState(0x5033, 0xefdf, 0xba40, 0x5a98, 0x3ebe, 0x3b9f, 0x0, 0x1);
        gbc.writeMem(0x5033, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xefdf);
        EXPECT(gbc.pc(), 0x5034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0284
        gbc.setState(0xeb07, 0xe541, 0x5140, 0x21ab, 0xf41, 0x3387, 0x1, 0x0);
        gbc.writeMem(0xeb07, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe541);
        EXPECT(gbc.pc(), 0xeb08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb07), 0xd8);
        // D8 0285
        gbc.setState(0x403a, 0x50b0, 0x1110, 0x83c0, 0xc20d, 0x1147, 0x0, 0x1);
        gbc.writeMem(0x403a, { 0xd8 });
        gbc.writeMem(0x50b0, { 0xfa, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x50b2);
        EXPECT(gbc.pc(), 0xecfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0286
        gbc.setState(0x98c1, 0x7396, 0x6640, 0x6d3e, 0x7f1f, 0x6b4a, 0x0, 0x1);
        gbc.writeMem(0x98c1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7396);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c1), 0xd8);
        // D8 0287
        gbc.setState(0x3fa2, 0xa4f7, 0x2980, 0xd308, 0x7804, 0xc17, 0x0, 0x1);
        gbc.writeMem(0x3fa2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa4f7);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0289
        gbc.setState(0x8c5b, 0x31a7, 0x8fb0, 0x2b14, 0xa11a, 0x7c87, 0x0, 0x1);
        gbc.writeMem(0x31a7, { 0x7, 0x19 });
        gbc.writeMem(0x8c5b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x31a9);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5b), 0xd8);
        // D8 028A
        gbc.setState(0x7e89, 0x936b, 0x3370, 0x307, 0x6fed, 0x565c, 0x1, 0x1);
        gbc.writeMem(0x7e89, { 0xd8 });
        gbc.writeMem(0x936b, { 0xfd, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x936d);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936b), 0xfd);
        EXPECT(gbc.readMem(0x936c), 0x9d);
        // D8 028B
        gbc.setState(0x438c, 0x1291, 0xa2d0, 0x7fae, 0x51f2, 0xf272, 0x0, 0x0);
        gbc.writeMem(0x1291, { 0x2e, 0xd7 });
        gbc.writeMem(0x438c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1293);
        EXPECT(gbc.pc(), 0xd72e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 028C
        gbc.setState(0xb019, 0x150f, 0xc350, 0xf5a7, 0x82e6, 0x13ae, 0x1, 0x1);
        gbc.writeMem(0x150f, { 0x59, 0x5 });
        gbc.writeMem(0xb019, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1511);
        EXPECT(gbc.pc(), 0x559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb019), 0xd8);
        // D8 028D
        gbc.setState(0x5854, 0xc183, 0xc50, 0x3d1a, 0x492c, 0x40a1, 0x1, 0x1);
        gbc.writeMem(0x5854, { 0xd8 });
        gbc.writeMem(0xc183, { 0xeb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc185);
        EXPECT(gbc.pc(), 0xe2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc183), 0xeb);
        EXPECT(gbc.readMem(0xc184), 0xe2);
        // D8 028F
        gbc.setState(0xe81d, 0xc7d4, 0x6160, 0x712e, 0x34fc, 0x42e9, 0x1, 0x1);
        gbc.writeMem(0xe81d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc7d4);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81d), 0xd8);
        // D8 0290
        gbc.setState(0x2208, 0x4aa1, 0x2ae0, 0x5b0d, 0x792f, 0x6186, 0x0, 0x1);
        gbc.writeMem(0x2208, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4aa1);
        EXPECT(gbc.pc(), 0x2209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0291
        gbc.setState(0xb45a, 0x6768, 0xea50, 0xdb1a, 0xb063, 0x84be, 0x0, 0x0);
        gbc.writeMem(0x6768, { 0x59, 0x5b });
        gbc.writeMem(0xb45a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x676a);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45a), 0xd8);
        // D8 0292
        gbc.setState(0xa78a, 0x35ce, 0x93b0, 0xbe6e, 0xad72, 0xf91c, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0x3, 0x2 });
        gbc.writeMem(0xa78a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x35d0);
        EXPECT(gbc.pc(), 0x203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78a), 0xd8);
        // D8 0293
        gbc.setState(0xee9e, 0xd060, 0xc440, 0xccfc, 0x5ac0, 0xf6e1, 0x1, 0x0);
        gbc.writeMem(0xee9e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0xee9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9e), 0xd8);
        // D8 0294
        gbc.setState(0xe458, 0xe76c, 0xb0, 0x7592, 0x1d2d, 0xa810, 0x1, 0x1);
        gbc.writeMem(0xe458, { 0xd8 });
        gbc.writeMem(0xe76c, { 0x11, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe76e);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe458), 0xd8);
        EXPECT(gbc.readMem(0xe76c), 0x11);
        EXPECT(gbc.readMem(0xe76d), 0x87);
        // D8 0295
        gbc.setState(0x4229, 0xbd8d, 0x4710, 0xf3d9, 0xe86d, 0x7117, 0x1, 0x1);
        gbc.writeMem(0x4229, { 0xd8 });
        gbc.writeMem(0xbd8d, { 0x13, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0x8313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8d), 0x13);
        EXPECT(gbc.readMem(0xbd8e), 0x83);
        // D8 0296
        gbc.setState(0x877e, 0x80f8, 0x3d50, 0x935e, 0xc07, 0xf3a7, 0x1, 0x0);
        gbc.writeMem(0x80f8, { 0x90, 0x58 });
        gbc.writeMem(0x877e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x80fa);
        EXPECT(gbc.pc(), 0x5890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f8), 0x90);
        EXPECT(gbc.readMem(0x80f9), 0x58);
        EXPECT(gbc.readMem(0x877e), 0xd8);
        // D8 0297
        gbc.setState(0x5fef, 0x9811, 0x2330, 0xe02, 0xfa33, 0xb147, 0x1, 0x1);
        gbc.writeMem(0x5fef, { 0xd8 });
        gbc.writeMem(0x9811, { 0x13, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9813);
        EXPECT(gbc.pc(), 0xf513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9811), 0x13);
        EXPECT(gbc.readMem(0x9812), 0xf5);
        // D8 0299
        gbc.setState(0xbeef, 0x8b14, 0x2070, 0xf8ee, 0x4f4d, 0x82b, 0x0, 0x1);
        gbc.writeMem(0x8b14, { 0x2a, 0x25 });
        gbc.writeMem(0xbeef, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b16);
        EXPECT(gbc.pc(), 0x252a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b14), 0x2a);
        EXPECT(gbc.readMem(0x8b15), 0x25);
        EXPECT(gbc.readMem(0xbeef), 0xd8);
        // D8 029A
        gbc.setState(0x8e93, 0xea8f, 0x5020, 0x52a7, 0x13aa, 0x4c1, 0x0, 0x1);
        gbc.writeMem(0x8e93, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xea8f);
        EXPECT(gbc.pc(), 0x8e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e93), 0xd8);
        // D8 029B
        gbc.setState(0xa569, 0x3bae, 0xfd20, 0x34b7, 0xb0ec, 0xe0e3, 0x0, 0x1);
        gbc.writeMem(0xa569, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3bae);
        EXPECT(gbc.pc(), 0xa56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa569), 0xd8);
        // D8 029C
        gbc.setState(0xdff3, 0xf7c7, 0xfe50, 0xa171, 0x47fd, 0x9522, 0x1, 0x0);
        gbc.writeMem(0xdff3, { 0xd8 });
        gbc.writeMem(0xf7c7, { 0x83, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0x5b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff3), 0xd8);
        EXPECT(gbc.readMem(0xf7c7), 0x83);
        EXPECT(gbc.readMem(0xf7c8), 0x5b);
        // D8 029D
        gbc.setState(0x6f3a, 0x8f4a, 0x5d00, 0xff6e, 0x823e, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0x6f3a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8f4a);
        EXPECT(gbc.pc(), 0x6f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 029E
        gbc.setState(0xcbd4, 0x6a10, 0xbbb0, 0xa63c, 0x6193, 0x23b0, 0x1, 0x0);
        gbc.writeMem(0x6a10, { 0x30, 0xc });
        gbc.writeMem(0xcbd4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6a12);
        EXPECT(gbc.pc(), 0xc30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd4), 0xd8);
        // D8 029F
        gbc.setState(0xe301, 0xea09, 0x820, 0xbab7, 0xd578, 0x2aaa, 0x0, 0x0);
        gbc.writeMem(0xe301, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xea09);
        EXPECT(gbc.pc(), 0xe302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe301), 0xd8);
        // D8 02A0
        gbc.setState(0xee9, 0x1c99, 0x10b0, 0x7a61, 0x36b3, 0xd7b5, 0x1, 0x1);
        gbc.writeMem(0xee9, { 0xd8 });
        gbc.writeMem(0x1c99, { 0x47, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1c9b);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02A1
        gbc.setState(0xb298, 0x312f, 0xcdf0, 0x806c, 0x7fa7, 0x2697, 0x1, 0x1);
        gbc.writeMem(0x312f, { 0x2b, 0xef });
        gbc.writeMem(0xb298, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3131);
        EXPECT(gbc.pc(), 0xef2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb298), 0xd8);
        // D8 02A2
        gbc.setState(0x2cd2, 0x5fe8, 0xc350, 0x15fc, 0xb67e, 0xbe11, 0x0, 0x0);
        gbc.writeMem(0x2cd2, { 0xd8 });
        gbc.writeMem(0x5fe8, { 0xc6, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5fea);
        EXPECT(gbc.pc(), 0x93c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02A4
        gbc.setState(0x5cef, 0x2006, 0xf160, 0xcee7, 0x9d79, 0x6361, 0x1, 0x1);
        gbc.writeMem(0x5cef, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2006);
        EXPECT(gbc.pc(), 0x5cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02A5
        gbc.setState(0xeb13, 0x7ddc, 0xcab0, 0x4d9a, 0x1733, 0xca02, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0x3e, 0x80 });
        gbc.writeMem(0xeb13, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7dde);
        EXPECT(gbc.pc(), 0x803e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb13), 0xd8);
        // D8 02A6
        gbc.setState(0x6fa7, 0x2c53, 0x6a40, 0xa1b1, 0x77e4, 0xedb7, 0x0, 0x1);
        gbc.writeMem(0x6fa7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2c53);
        EXPECT(gbc.pc(), 0x6fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02A7
        gbc.setState(0xfa7, 0x2afa, 0xa7f0, 0x84e4, 0x34b5, 0x8ed9, 0x0, 0x0);
        gbc.writeMem(0xfa7, { 0xd8 });
        gbc.writeMem(0x2afa, { 0x9, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2afc);
        EXPECT(gbc.pc(), 0x4209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02A8
        gbc.setState(0x52f9, 0x245e, 0xb460, 0x9b4e, 0x122f, 0xebc2, 0x0, 0x1);
        gbc.writeMem(0x52f9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x245e);
        EXPECT(gbc.pc(), 0x52fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02A9
        gbc.setState(0xd2d1, 0xacae, 0xb810, 0xda0b, 0xbaaa, 0x8d98, 0x1, 0x1);
        gbc.writeMem(0xacae, { 0x7a, 0x1c });
        gbc.writeMem(0xd2d1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xacb0);
        EXPECT(gbc.pc(), 0x1c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacae), 0x7a);
        EXPECT(gbc.readMem(0xacaf), 0x1c);
        EXPECT(gbc.readMem(0xd2d1), 0xd8);
        // D8 02AC
        gbc.setState(0x251b, 0xf3f, 0xb720, 0x631e, 0x2a24, 0x8435, 0x0, 0x0);
        gbc.writeMem(0x251b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf3f);
        EXPECT(gbc.pc(), 0x251c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02AD
        gbc.setState(0xe169, 0x1db1, 0xa90, 0xe267, 0xc73c, 0x5b82, 0x1, 0x0);
        gbc.writeMem(0x1db1, { 0x6f, 0x83 });
        gbc.writeMem(0xe169, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1db3);
        EXPECT(gbc.pc(), 0x836f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe169), 0xd8);
        // D8 02AE
        gbc.setState(0x1510, 0x916f, 0xaf60, 0x5d7a, 0xc3d9, 0x373e, 0x0, 0x0);
        gbc.writeMem(0x1510, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x916f);
        EXPECT(gbc.pc(), 0x1511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02AF
        gbc.setState(0x5f79, 0x922b, 0x6d50, 0xcfc1, 0xf113, 0xfe02, 0x0, 0x0);
        gbc.writeMem(0x5f79, { 0xd8 });
        gbc.writeMem(0x922b, { 0xab, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x922d);
        EXPECT(gbc.pc(), 0x71ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922b), 0xab);
        EXPECT(gbc.readMem(0x922c), 0x71);
        // D8 02B0
        gbc.setState(0x26b5, 0xc61, 0xc4c0, 0xdcd1, 0xec8f, 0xfd58, 0x1, 0x0);
        gbc.writeMem(0x26b5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc61);
        EXPECT(gbc.pc(), 0x26b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02B2
        gbc.setState(0x7c96, 0xbbd6, 0xbd40, 0x586d, 0x115c, 0xb315, 0x1, 0x1);
        gbc.writeMem(0x7c96, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbbd6);
        EXPECT(gbc.pc(), 0x7c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02B3
        gbc.setState(0x16c9, 0xd221, 0x3150, 0xdeb8, 0x1182, 0xa080, 0x1, 0x0);
        gbc.writeMem(0x16c9, { 0xd8 });
        gbc.writeMem(0xd221, { 0x7c, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd223);
        EXPECT(gbc.pc(), 0x897c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd221), 0x7c);
        EXPECT(gbc.readMem(0xd222), 0x89);
        // D8 02B4
        gbc.setState(0x5632, 0x727f, 0x2ba0, 0x3c4c, 0xa080, 0xdf62, 0x1, 0x0);
        gbc.writeMem(0x5632, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x727f);
        EXPECT(gbc.pc(), 0x5633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02B5
        gbc.setState(0xb0e3, 0x9ab4, 0x8f50, 0x271d, 0x2d91, 0x2793, 0x0, 0x1);
        gbc.writeMem(0x9ab4, { 0x80, 0x22 });
        gbc.writeMem(0xb0e3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9ab6);
        EXPECT(gbc.pc(), 0x2280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab4), 0x80);
        EXPECT(gbc.readMem(0x9ab5), 0x22);
        EXPECT(gbc.readMem(0xb0e3), 0xd8);
        // D8 02B6
        gbc.setState(0xd4d5, 0x6450, 0x590, 0x8991, 0x65b2, 0x9c4f, 0x0, 0x1);
        gbc.writeMem(0x6450, { 0xc9, 0x22 });
        gbc.writeMem(0xd4d5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6452);
        EXPECT(gbc.pc(), 0x22c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d5), 0xd8);
        // D8 02B8
        gbc.setState(0x7e2c, 0xb674, 0xa790, 0x2a76, 0x1faf, 0x2b36, 0x1, 0x0);
        gbc.writeMem(0x7e2c, { 0xd8 });
        gbc.writeMem(0xb674, { 0xed, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb676);
        EXPECT(gbc.pc(), 0x70ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb674), 0xed);
        EXPECT(gbc.readMem(0xb675), 0x70);
        // D8 02B9
        gbc.setState(0x8298, 0xd9fe, 0x5760, 0xd2c5, 0xe6aa, 0x2ffb, 0x1, 0x0);
        gbc.writeMem(0x8298, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd9fe);
        EXPECT(gbc.pc(), 0x8299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8298), 0xd8);
        // D8 02BA
        gbc.setState(0x1e1e, 0x1075, 0x4a90, 0x5c6c, 0x7092, 0x9c9f, 0x1, 0x0);
        gbc.writeMem(0x1075, { 0xa, 0x20 });
        gbc.writeMem(0x1e1e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0x200a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02BB
        gbc.setState(0xc262, 0x6771, 0xa830, 0xa7a7, 0xffec, 0x8f90, 0x1, 0x0);
        gbc.writeMem(0x6771, { 0xa5, 0xa });
        gbc.writeMem(0xc262, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6773);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc262), 0xd8);
        // D8 02BC
        gbc.setState(0x885, 0xea66, 0x3900, 0x7abc, 0xea26, 0x36a8, 0x1, 0x0);
        gbc.writeMem(0x885, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xea66);
        EXPECT(gbc.pc(), 0x886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02BD
        gbc.setState(0x1ab1, 0xdf0a, 0x2a30, 0xf51a, 0x873d, 0x3171, 0x1, 0x0);
        gbc.writeMem(0x1ab1, { 0xd8 });
        gbc.writeMem(0xdf0a, { 0x79, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0a), 0x79);
        EXPECT(gbc.readMem(0xdf0b), 0x8d);
        // D8 02BE
        gbc.setState(0xbe42, 0x92e8, 0xc140, 0x1b5c, 0x2dbd, 0xa058, 0x1, 0x0);
        gbc.writeMem(0xbe42, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x92e8);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe42), 0xd8);
        // D8 02BF
        gbc.setState(0x4e2e, 0xbfed, 0x92a0, 0x36d1, 0x4a0b, 0x603, 0x1, 0x1);
        gbc.writeMem(0x4e2e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbfed);
        EXPECT(gbc.pc(), 0x4e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02C0
        gbc.setState(0x5694, 0xfc0b, 0x6b50, 0xbf73, 0x739f, 0xb6c5, 0x1, 0x1);
        gbc.writeMem(0x5694, { 0xd8 });
        gbc.writeMem(0xfc0b, { 0xa0, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfc0d);
        EXPECT(gbc.pc(), 0xf0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc0b), 0xa0);
        EXPECT(gbc.readMem(0xfc0c), 0xf0);
        // D8 02C1
        gbc.setState(0x2f34, 0x672a, 0xbc70, 0xa4b1, 0x5a5f, 0x6f26, 0x1, 0x1);
        gbc.writeMem(0x2f34, { 0xd8 });
        gbc.writeMem(0x672a, { 0x10, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x672c);
        EXPECT(gbc.pc(), 0xb010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02C2
        gbc.setState(0x2ca4, 0xabb0, 0x5b60, 0x3b84, 0xfa35, 0x998d, 0x0, 0x0);
        gbc.writeMem(0x2ca4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xabb0);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02C3
        gbc.setState(0x4a6c, 0x7126, 0xef90, 0x7ac2, 0x2b3b, 0xdeb8, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0xd8 });
        gbc.writeMem(0x7126, { 0x1a, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7128);
        EXPECT(gbc.pc(), 0x6d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02C4
        gbc.setState(0x8012, 0xdfdf, 0x830, 0x3756, 0xf92f, 0xa3b3, 0x0, 0x1);
        gbc.writeMem(0x8012, { 0xd8 });
        gbc.writeMem(0xdfdf, { 0x2d, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdfe1);
        EXPECT(gbc.pc(), 0xf22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8012), 0xd8);
        EXPECT(gbc.readMem(0xdfdf), 0x2d);
        EXPECT(gbc.readMem(0xdfe0), 0xf2);
        // D8 02C5
        gbc.setState(0xe2e1, 0x9aa2, 0x5a10, 0x7073, 0xf66d, 0x45e6, 0x0, 0x1);
        gbc.writeMem(0x9aa2, { 0x91, 0x45 });
        gbc.writeMem(0xe2e1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9aa4);
        EXPECT(gbc.pc(), 0x4591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa2), 0x91);
        EXPECT(gbc.readMem(0x9aa3), 0x45);
        EXPECT(gbc.readMem(0xe2e1), 0xd8);
        // D8 02C6
        gbc.setState(0xb2f9, 0x9a71, 0xf370, 0x790e, 0x2ef4, 0xaea7, 0x1, 0x1);
        gbc.writeMem(0x9a71, { 0x8b, 0x9e });
        gbc.writeMem(0xb2f9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9a73);
        EXPECT(gbc.pc(), 0x9e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a71), 0x8b);
        EXPECT(gbc.readMem(0x9a72), 0x9e);
        EXPECT(gbc.readMem(0xb2f9), 0xd8);
        // D8 02C7
        gbc.setState(0x47a4, 0x831a, 0x1db0, 0x130a, 0xbb86, 0xfb4e, 0x0, 0x1);
        gbc.writeMem(0x47a4, { 0xd8 });
        gbc.writeMem(0x831a, { 0x99, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x831c);
        EXPECT(gbc.pc(), 0x1e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831a), 0x99);
        EXPECT(gbc.readMem(0x831b), 0x1e);
        // D8 02C9
        gbc.setState(0x34cc, 0x64b8, 0x6a70, 0xc9db, 0xaf3c, 0xa1c9, 0x1, 0x1);
        gbc.writeMem(0x34cc, { 0xd8 });
        gbc.writeMem(0x64b8, { 0xad, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x64ba);
        EXPECT(gbc.pc(), 0x95ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02CA
        gbc.setState(0x3275, 0x14c3, 0x2e40, 0xc430, 0x144, 0x5073, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x14c3);
        EXPECT(gbc.pc(), 0x3276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02CB
        gbc.setState(0x6072, 0xa809, 0xc4a0, 0xfb63, 0x3e36, 0x1de6, 0x1, 0x0);
        gbc.writeMem(0x6072, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa809);
        EXPECT(gbc.pc(), 0x6073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02CC
        gbc.setState(0xec9f, 0x40c5, 0x3dd0, 0x4c66, 0xf70f, 0x2538, 0x1, 0x1);
        gbc.writeMem(0x40c5, { 0xf8, 0x4c });
        gbc.writeMem(0xec9f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x40c7);
        EXPECT(gbc.pc(), 0x4cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec9f), 0xd8);
        // D8 02CD
        gbc.setState(0x250a, 0xd7b2, 0xdf30, 0x2526, 0x96b6, 0x5e38, 0x0, 0x1);
        gbc.writeMem(0x250a, { 0xd8 });
        gbc.writeMem(0xd7b2, { 0x77, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd7b4);
        EXPECT(gbc.pc(), 0xcd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b2), 0x77);
        EXPECT(gbc.readMem(0xd7b3), 0xcd);
        // D8 02CE
        gbc.setState(0x8d68, 0x2220, 0xc3e0, 0xa6dc, 0x2032, 0xbe47, 0x0, 0x0);
        gbc.writeMem(0x8d68, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2220);
        EXPECT(gbc.pc(), 0x8d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d68), 0xd8);
        // D8 02CF
        gbc.setState(0x1971, 0x5b52, 0x4e50, 0xe897, 0x41e4, 0xd63d, 0x0, 0x0);
        gbc.writeMem(0x1971, { 0xd8 });
        gbc.writeMem(0x5b52, { 0xa5, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0x33a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02D0
        gbc.setState(0x51e9, 0x3304, 0xa0d0, 0x500c, 0xcf59, 0xb7a4, 0x1, 0x1);
        gbc.writeMem(0x3304, { 0xa0, 0xd0 });
        gbc.writeMem(0x51e9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3306);
        EXPECT(gbc.pc(), 0xd0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02D1
        gbc.setState(0xe0cb, 0x62dc, 0xa880, 0x95d2, 0x8117, 0xf27, 0x1, 0x1);
        gbc.writeMem(0xe0cb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0xe0cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0cb), 0xd8);
        // D8 02D2
        gbc.setState(0xc056, 0xe691, 0x4a0, 0xfa0b, 0x74dc, 0x6e1d, 0x1, 0x0);
        gbc.writeMem(0xc056, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe691);
        EXPECT(gbc.pc(), 0xc057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc056), 0xd8);
        // D8 02D3
        gbc.setState(0x80d2, 0xe50b, 0x9c10, 0xd6ad, 0xd500, 0xa1e9, 0x1, 0x0);
        gbc.writeMem(0x80d2, { 0xd8 });
        gbc.writeMem(0xe50b, { 0x34, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0x7734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d2), 0xd8);
        EXPECT(gbc.readMem(0xe50b), 0x34);
        EXPECT(gbc.readMem(0xe50c), 0x77);
        // D8 02D4
        gbc.setState(0xceeb, 0xa811, 0x3da0, 0xa7d8, 0xfb8f, 0x7dd9, 0x0, 0x1);
        gbc.writeMem(0xceeb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa811);
        EXPECT(gbc.pc(), 0xceec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceeb), 0xd8);
        // D8 02D5
        gbc.setState(0xcd34, 0xd3b8, 0xaa10, 0x87a6, 0xdba2, 0xd054, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0xd8 });
        gbc.writeMem(0xd3b8, { 0x67, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd3ba);
        EXPECT(gbc.pc(), 0xbf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd34), 0xd8);
        EXPECT(gbc.readMem(0xd3b8), 0x67);
        EXPECT(gbc.readMem(0xd3b9), 0xbf);
        // D8 02D6
        gbc.setState(0x13b0, 0xf467, 0xbc0, 0x3d30, 0xe6ec, 0xa9e4, 0x1, 0x0);
        gbc.writeMem(0x13b0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf467);
        EXPECT(gbc.pc(), 0x13b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02D7
        gbc.setState(0x70b5, 0x5c7c, 0x1c0, 0x8788, 0xc172, 0x4585, 0x0, 0x1);
        gbc.writeMem(0x70b5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0x70b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02D8
        gbc.setState(0x3e64, 0x1466, 0x4e50, 0x758f, 0xdeaa, 0xe5f1, 0x1, 0x0);
        gbc.writeMem(0x1466, { 0x4d, 0x2d });
        gbc.writeMem(0x3e64, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1468);
        EXPECT(gbc.pc(), 0x2d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02DB
        gbc.setState(0xbdc3, 0x3fe6, 0x1b20, 0x3a5c, 0xc02b, 0xd251, 0x1, 0x0);
        gbc.writeMem(0xbdc3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3fe6);
        EXPECT(gbc.pc(), 0xbdc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc3), 0xd8);
        // D8 02DC
        gbc.setState(0xcef0, 0xe27a, 0x6340, 0x2b55, 0x3c15, 0x7a70, 0x0, 0x1);
        gbc.writeMem(0xcef0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe27a);
        EXPECT(gbc.pc(), 0xcef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef0), 0xd8);
        // D8 02DD
        gbc.setState(0xb8a1, 0x85b6, 0xc590, 0xd687, 0xc634, 0x82a7, 0x0, 0x1);
        gbc.writeMem(0x85b6, { 0x64, 0x7e });
        gbc.writeMem(0xb8a1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x85b8);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b6), 0x64);
        EXPECT(gbc.readMem(0x85b7), 0x7e);
        EXPECT(gbc.readMem(0xb8a1), 0xd8);
        // D8 02DE
        gbc.setState(0x73d6, 0xd9dc, 0xed0, 0xd0dc, 0x37a3, 0xbf8d, 0x1, 0x1);
        gbc.writeMem(0x73d6, { 0xd8 });
        gbc.writeMem(0xd9dc, { 0x32, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd9de);
        EXPECT(gbc.pc(), 0x3c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9dc), 0x32);
        EXPECT(gbc.readMem(0xd9dd), 0x3c);
        // D8 02DF
        gbc.setState(0xda2e, 0x3a4, 0x8550, 0x51d, 0x2c16, 0x2209, 0x0, 0x1);
        gbc.writeMem(0x3a4, { 0x13, 0xd });
        gbc.writeMem(0xda2e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3a6);
        EXPECT(gbc.pc(), 0xd13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2e), 0xd8);
        // D8 02E0
        gbc.setState(0x78af, 0x1a9d, 0x6260, 0x2949, 0xc669, 0x9eb2, 0x0, 0x0);
        gbc.writeMem(0x78af, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1a9d);
        EXPECT(gbc.pc(), 0x78b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02E1
        gbc.setState(0x4915, 0x2c73, 0x7c70, 0x5359, 0xcf05, 0x8f93, 0x1, 0x0);
        gbc.writeMem(0x2c73, { 0xe8, 0x75 });
        gbc.writeMem(0x4915, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2c75);
        EXPECT(gbc.pc(), 0x75e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02E2
        gbc.setState(0x85e, 0xe5a7, 0xe550, 0x7870, 0x4674, 0xfa9f, 0x0, 0x1);
        gbc.writeMem(0x85e, { 0xd8 });
        gbc.writeMem(0xe5a7, { 0xfd, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe5a9);
        EXPECT(gbc.pc(), 0x92fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a7), 0xfd);
        EXPECT(gbc.readMem(0xe5a8), 0x92);
        // D8 02E3
        gbc.setState(0x589a, 0x71a1, 0x3c50, 0x3d22, 0x65, 0x1692, 0x1, 0x0);
        gbc.writeMem(0x589a, { 0xd8 });
        gbc.writeMem(0x71a1, { 0x17, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x71a3);
        EXPECT(gbc.pc(), 0xe117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02E4
        gbc.setState(0x7297, 0xb548, 0x6f80, 0x8934, 0xa00c, 0x3997, 0x1, 0x0);
        gbc.writeMem(0x7297, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb548);
        EXPECT(gbc.pc(), 0x7298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02E5
        gbc.setState(0xb475, 0xe10, 0xf650, 0x8fe4, 0x688d, 0xd957, 0x1, 0x1);
        gbc.writeMem(0xe10, { 0x69, 0x39 });
        gbc.writeMem(0xb475, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe12);
        EXPECT(gbc.pc(), 0x3969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb475), 0xd8);
        // D8 02E6
        gbc.setState(0xd4b3, 0x1f54, 0x8980, 0x8448, 0xde5a, 0x272e, 0x1, 0x0);
        gbc.writeMem(0xd4b3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f54);
        EXPECT(gbc.pc(), 0xd4b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b3), 0xd8);
        // D8 02E7
        gbc.setState(0x8ad3, 0x8e2d, 0xe7c0, 0x542b, 0xd5b1, 0x3b51, 0x1, 0x1);
        gbc.writeMem(0x8ad3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8e2d);
        EXPECT(gbc.pc(), 0x8ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad3), 0xd8);
        // D8 02E8
        gbc.setState(0xdcb0, 0x207d, 0x6f30, 0xcf85, 0xc678, 0x48e4, 0x1, 0x0);
        gbc.writeMem(0x207d, { 0x10, 0xbc });
        gbc.writeMem(0xdcb0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x207f);
        EXPECT(gbc.pc(), 0xbc10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb0), 0xd8);
        // D8 02E9
        gbc.setState(0x66cd, 0xfdf7, 0xb60, 0x8d4, 0x1fd3, 0xffae, 0x0, 0x0);
        gbc.writeMem(0x66cd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfdf7);
        EXPECT(gbc.pc(), 0x66ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02EA
        gbc.setState(0x9c22, 0x91e5, 0xa4a0, 0x3705, 0xeb39, 0xf39, 0x1, 0x0);
        gbc.writeMem(0x9c22, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x91e5);
        EXPECT(gbc.pc(), 0x9c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c22), 0xd8);
        // D8 02EB
        gbc.setState(0x45c3, 0xdf9, 0xb4f0, 0x95f9, 0x1be, 0x7c1b, 0x0, 0x0);
        gbc.writeMem(0xdf9, { 0x15, 0xd2 });
        gbc.writeMem(0x45c3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdfb);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02EC
        gbc.setState(0x7d38, 0x9cbe, 0xf5b0, 0xb6ce, 0x20a, 0x36ba, 0x1, 0x1);
        gbc.writeMem(0x7d38, { 0xd8 });
        gbc.writeMem(0x9cbe, { 0xa0, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9cc0);
        EXPECT(gbc.pc(), 0xdba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbe), 0xa0);
        EXPECT(gbc.readMem(0x9cbf), 0xdb);
        // D8 02ED
        gbc.setState(0xd70, 0xba5f, 0x2e10, 0xd4a9, 0xb3d1, 0xcd3d, 0x0, 0x0);
        gbc.writeMem(0xd70, { 0xd8 });
        gbc.writeMem(0xba5f, { 0xba, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xba61);
        EXPECT(gbc.pc(), 0xb4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5f), 0xba);
        EXPECT(gbc.readMem(0xba60), 0xb4);
        // D8 02EE
        gbc.setState(0x1485, 0x25b3, 0x8dc0, 0xf9f6, 0xa301, 0xc058, 0x0, 0x0);
        gbc.writeMem(0x1485, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x25b3);
        EXPECT(gbc.pc(), 0x1486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02EF
        gbc.setState(0xbf80, 0x7f4, 0x6290, 0x6d00, 0x5123, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0x7f4, { 0xec, 0x55 });
        gbc.writeMem(0xbf80, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7f6);
        EXPECT(gbc.pc(), 0x55ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf80), 0xd8);
        // D8 02F1
        gbc.setState(0xdfad, 0x6163, 0xffe0, 0x3195, 0xc39e, 0xff86, 0x1, 0x1);
        gbc.writeMem(0xdfad, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0xdfae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfad), 0xd8);
        // D8 02F2
        gbc.setState(0x6c2c, 0xc182, 0xf8b0, 0x1d4d, 0xcaa0, 0xc91f, 0x0, 0x0);
        gbc.writeMem(0x6c2c, { 0xd8 });
        gbc.writeMem(0xc182, { 0xe4, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0xebe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc182), 0xe4);
        EXPECT(gbc.readMem(0xc183), 0xeb);
        // D8 02F3
        gbc.setState(0x2212, 0xd656, 0xc900, 0x4653, 0xdf1, 0x58d5, 0x1, 0x1);
        gbc.writeMem(0x2212, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd656);
        EXPECT(gbc.pc(), 0x2213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02F4
        gbc.setState(0x872b, 0xbc94, 0xf810, 0xd70c, 0x1beb, 0x830d, 0x0, 0x0);
        gbc.writeMem(0x872b, { 0xd8 });
        gbc.writeMem(0xbc94, { 0xb0, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbc96);
        EXPECT(gbc.pc(), 0x77b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872b), 0xd8);
        EXPECT(gbc.readMem(0xbc94), 0xb0);
        EXPECT(gbc.readMem(0xbc95), 0x77);
        // D8 02F5
        gbc.setState(0x36dd, 0xdabd, 0x2880, 0x6757, 0x58d7, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x36dd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdabd);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02F6
        gbc.setState(0xac43, 0x68c6, 0x8d60, 0xf2ef, 0xa858, 0xbc, 0x0, 0x1);
        gbc.writeMem(0xac43, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x68c6);
        EXPECT(gbc.pc(), 0xac44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac43), 0xd8);
        // D8 02F7
        gbc.setState(0x3067, 0xd1de, 0x820, 0x7c2b, 0x647, 0x4cc9, 0x0, 0x0);
        gbc.writeMem(0x3067, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd1de);
        EXPECT(gbc.pc(), 0x3068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 02F8
        gbc.setState(0x90d9, 0x90c1, 0x1830, 0xa890, 0x362f, 0x7c82, 0x1, 0x0);
        gbc.writeMem(0x90c1, { 0x17, 0xce });
        gbc.writeMem(0x90d9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x90c3);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c1), 0x17);
        EXPECT(gbc.readMem(0x90c2), 0xce);
        EXPECT(gbc.readMem(0x90d9), 0xd8);
        // D8 02F9
        gbc.setState(0x468e, 0xdb1b, 0x7ec0, 0xf427, 0x66bc, 0x9686, 0x1, 0x1);
        gbc.writeMem(0x468e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdb1b);
        EXPECT(gbc.pc(), 0x468f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 02FA
        gbc.setState(0x49fa, 0x5a31, 0x76d0, 0xa832, 0x7c07, 0x3d48, 0x0, 0x1);
        gbc.writeMem(0x49fa, { 0xd8 });
        gbc.writeMem(0x5a31, { 0x8d, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5a33);
        EXPECT(gbc.pc(), 0x508d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02FB
        gbc.setState(0xea06, 0x31fe, 0xc420, 0xd03e, 0x16b4, 0x880c, 0x0, 0x0);
        gbc.writeMem(0xea06, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x31fe);
        EXPECT(gbc.pc(), 0xea07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea06), 0xd8);
        // D8 02FC
        gbc.setState(0xcde8, 0x83d, 0x2360, 0xaabf, 0xb15c, 0xcd7, 0x0, 0x1);
        gbc.writeMem(0xcde8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x83d);
        EXPECT(gbc.pc(), 0xcde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde8), 0xd8);
        // D8 02FD
        gbc.setState(0x9ce, 0xa22, 0x69d0, 0xbde1, 0x2412, 0xde59, 0x0, 0x0);
        gbc.writeMem(0x9ce, { 0xd8 });
        gbc.writeMem(0xa22, { 0xdb, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0x4fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 02FE
        gbc.setState(0x4250, 0x13f, 0x1530, 0xb629, 0xd79f, 0x642d, 0x1, 0x1);
        gbc.writeMem(0x13f, { 0xf3, 0x17 });
        gbc.writeMem(0x4250, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x141);
        EXPECT(gbc.pc(), 0x17f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 02FF
        gbc.setState(0x8d99, 0xd48b, 0x7ac0, 0x6aee, 0xde90, 0xa7b8, 0x0, 0x0);
        gbc.writeMem(0x8d99, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd48b);
        EXPECT(gbc.pc(), 0x8d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d99), 0xd8);
        // D8 0300
        gbc.setState(0xd4a8, 0x48ed, 0xd420, 0xe8fa, 0x18a3, 0x7f2, 0x0, 0x1);
        gbc.writeMem(0xd4a8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x48ed);
        EXPECT(gbc.pc(), 0xd4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a8), 0xd8);
        // D8 0301
        gbc.setState(0x539b, 0x6e71, 0x9a70, 0x8856, 0x3ff3, 0x9e1d, 0x1, 0x0);
        gbc.writeMem(0x539b, { 0xd8 });
        gbc.writeMem(0x6e71, { 0x3f, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6e73);
        EXPECT(gbc.pc(), 0xab3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0302
        gbc.setState(0xe300, 0xa5, 0xa750, 0x543c, 0xc387, 0xfcfa, 0x1, 0x1);
        gbc.writeMem(0xa5, { 0xde, 0x4f });
        gbc.writeMem(0xe300, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa7);
        EXPECT(gbc.pc(), 0x4fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0xd8);
        // D8 0303
        gbc.setState(0xda2f, 0x70e8, 0xa3b0, 0x4ae7, 0xdb42, 0x9edd, 0x0, 0x1);
        gbc.writeMem(0x70e8, { 0x5e, 0x2c });
        gbc.writeMem(0xda2f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x70ea);
        EXPECT(gbc.pc(), 0x2c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2f), 0xd8);
        // D8 0304
        gbc.setState(0x18d9, 0x80d1, 0xd470, 0xa112, 0x82c3, 0x8819, 0x1, 0x1);
        gbc.writeMem(0x18d9, { 0xd8 });
        gbc.writeMem(0x80d1, { 0xe2, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x80d3);
        EXPECT(gbc.pc(), 0x90e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d1), 0xe2);
        EXPECT(gbc.readMem(0x80d2), 0x90);
        // D8 0305
        gbc.setState(0xd8bd, 0xe20f, 0x4000, 0xc889, 0xf4e6, 0xe217, 0x0, 0x0);
        gbc.writeMem(0xd8bd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe20f);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bd), 0xd8);
        // D8 0306
        gbc.setState(0xd77c, 0x9376, 0x5f50, 0x76c1, 0x4d0, 0x8f8e, 0x0, 0x1);
        gbc.writeMem(0x9376, { 0xd5, 0xed });
        gbc.writeMem(0xd77c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9378);
        EXPECT(gbc.pc(), 0xedd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9376), 0xd5);
        EXPECT(gbc.readMem(0x9377), 0xed);
        EXPECT(gbc.readMem(0xd77c), 0xd8);
        // D8 0307
        gbc.setState(0xd3c9, 0xe97d, 0xc820, 0xead8, 0x4dcb, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0xd3c9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe97d);
        EXPECT(gbc.pc(), 0xd3ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c9), 0xd8);
        // D8 0308
        gbc.setState(0xc1e8, 0x572a, 0x8610, 0x88c0, 0xb734, 0x441f, 0x0, 0x0);
        gbc.writeMem(0x572a, { 0xb4, 0x8e });
        gbc.writeMem(0xc1e8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x572c);
        EXPECT(gbc.pc(), 0x8eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e8), 0xd8);
        // D8 0309
        gbc.setState(0xe26c, 0x2e65, 0x56c0, 0x9380, 0x60aa, 0xfd6c, 0x1, 0x1);
        gbc.writeMem(0xe26c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2e65);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26c), 0xd8);
        // D8 030A
        gbc.setState(0x3ba9, 0x75a7, 0xd840, 0x80aa, 0xcd7b, 0xd6d8, 0x1, 0x0);
        gbc.writeMem(0x3ba9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x75a7);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 030B
        gbc.setState(0x1202, 0xa2fe, 0x4280, 0x6ca9, 0xf30a, 0x742, 0x1, 0x0);
        gbc.writeMem(0x1202, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa2fe);
        EXPECT(gbc.pc(), 0x1203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 030C
        gbc.setState(0x6676, 0x224c, 0x6c10, 0x5178, 0x72dc, 0x72f4, 0x0, 0x0);
        gbc.writeMem(0x224c, { 0x87, 0x7a });
        gbc.writeMem(0x6676, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x224e);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 030D
        gbc.setState(0xdb97, 0x6f13, 0x25a0, 0x2a41, 0x366a, 0x51d6, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6f13);
        EXPECT(gbc.pc(), 0xdb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb97), 0xd8);
        // D8 030E
        gbc.setState(0xc84, 0xd96f, 0xc0d0, 0x241, 0x18de, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0xc84, { 0xd8 });
        gbc.writeMem(0xd96f, { 0x40, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd971);
        EXPECT(gbc.pc(), 0x6c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96f), 0x40);
        EXPECT(gbc.readMem(0xd970), 0x6c);
        // D8 0310
        gbc.setState(0xcbc6, 0xd889, 0xdb00, 0x4894, 0xce4a, 0x1934, 0x1, 0x1);
        gbc.writeMem(0xcbc6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd889);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc6), 0xd8);
        // D8 0311
        gbc.setState(0xc362, 0xa07a, 0x1150, 0x48fb, 0x445b, 0x7b9b, 0x1, 0x1);
        gbc.writeMem(0xa07a, { 0xa7, 0xc1 });
        gbc.writeMem(0xc362, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0xc1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07a), 0xa7);
        EXPECT(gbc.readMem(0xa07b), 0xc1);
        EXPECT(gbc.readMem(0xc362), 0xd8);
        // D8 0312
        gbc.setState(0xc0dc, 0x312e, 0x2630, 0xbce8, 0x3027, 0x7370, 0x1, 0x1);
        gbc.writeMem(0x312e, { 0xed, 0x2b });
        gbc.writeMem(0xc0dc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3130);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0dc), 0xd8);
        // D8 0313
        gbc.setState(0x177, 0x4590, 0x1190, 0x8697, 0x5777, 0x32b5, 0x0, 0x0);
        gbc.writeMem(0x177, { 0xd8 });
        gbc.writeMem(0x4590, { 0x77, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4592);
        EXPECT(gbc.pc(), 0x9177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0314
        gbc.setState(0x7662, 0xa9bb, 0x91a0, 0x5373, 0xd1b9, 0xb405, 0x1, 0x1);
        gbc.writeMem(0x7662, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa9bb);
        EXPECT(gbc.pc(), 0x7663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0316
        gbc.setState(0xeaa7, 0x17f5, 0x10, 0xec68, 0x2475, 0xc90d, 0x0, 0x0);
        gbc.writeMem(0x17f5, { 0xd4, 0x6c });
        gbc.writeMem(0xeaa7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x6cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa7), 0xd8);
        // D8 0317
        gbc.setState(0x836c, 0xf95c, 0x120, 0xd3c, 0x764, 0x1c3c, 0x0, 0x1);
        gbc.writeMem(0x836c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf95c);
        EXPECT(gbc.pc(), 0x836d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836c), 0xd8);
        // D8 0318
        gbc.setState(0x2d4a, 0x5ad1, 0xcad0, 0xb133, 0xa760, 0x4453, 0x1, 0x0);
        gbc.writeMem(0x2d4a, { 0xd8 });
        gbc.writeMem(0x5ad1, { 0x59, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5ad3);
        EXPECT(gbc.pc(), 0xbd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 031A
        gbc.setState(0x9875, 0xd08, 0xde90, 0xaf74, 0x76ed, 0xd360, 0x0, 0x1);
        gbc.writeMem(0xd08, { 0x3c, 0x5d });
        gbc.writeMem(0x9875, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd0a);
        EXPECT(gbc.pc(), 0x5d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9875), 0xd8);
        // D8 031B
        gbc.setState(0x2bfa, 0x785, 0xf9b0, 0x3781, 0x77e1, 0xe816, 0x1, 0x0);
        gbc.writeMem(0x785, { 0xd5, 0xb3 });
        gbc.writeMem(0x2bfa, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x787);
        EXPECT(gbc.pc(), 0xb3d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 031C
        gbc.setState(0xd1a9, 0x9cab, 0xb280, 0x68b9, 0x52c7, 0x3f72, 0x1, 0x0);
        gbc.writeMem(0xd1a9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9cab);
        EXPECT(gbc.pc(), 0xd1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a9), 0xd8);
        // D8 031D
        gbc.setState(0xb3a3, 0x9ea1, 0x1690, 0x2381, 0x31b8, 0xe067, 0x1, 0x0);
        gbc.writeMem(0x9ea1, { 0xcb, 0xf0 });
        gbc.writeMem(0xb3a3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9ea3);
        EXPECT(gbc.pc(), 0xf0cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea1), 0xcb);
        EXPECT(gbc.readMem(0x9ea2), 0xf0);
        EXPECT(gbc.readMem(0xb3a3), 0xd8);
        // D8 031E
        gbc.setState(0x50b1, 0x3e03, 0xfc60, 0xecd0, 0x1786, 0xe656, 0x0, 0x1);
        gbc.writeMem(0x50b1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3e03);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 031F
        gbc.setState(0x32c1, 0xef6, 0x4600, 0x48b5, 0x1a0f, 0xe4e2, 0x0, 0x0);
        gbc.writeMem(0x32c1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xef6);
        EXPECT(gbc.pc(), 0x32c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0320
        gbc.setState(0x459a, 0x38bf, 0x5300, 0x9415, 0xfe15, 0x50e1, 0x0, 0x0);
        gbc.writeMem(0x459a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x38bf);
        EXPECT(gbc.pc(), 0x459b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0321
        gbc.setState(0x7a4b, 0xfea4, 0xa5e0, 0xfac4, 0x929e, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x7a4b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfea4);
        EXPECT(gbc.pc(), 0x7a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0322
        gbc.setState(0x4efb, 0x95a0, 0x6610, 0x64ad, 0xfbd9, 0x9735, 0x1, 0x0);
        gbc.writeMem(0x4efb, { 0xd8 });
        gbc.writeMem(0x95a0, { 0x4f, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x95a2);
        EXPECT(gbc.pc(), 0xa04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a0), 0x4f);
        EXPECT(gbc.readMem(0x95a1), 0xa0);
        // D8 0324
        gbc.setState(0x4fc1, 0x72da, 0x6140, 0x8cc3, 0x9765, 0x838d, 0x1, 0x1);
        gbc.writeMem(0x4fc1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x72da);
        EXPECT(gbc.pc(), 0x4fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0326
        gbc.setState(0xdb3c, 0x3353, 0x8890, 0x4088, 0x2fb9, 0xd4d7, 0x0, 0x1);
        gbc.writeMem(0x3353, { 0x36, 0xbd });
        gbc.writeMem(0xdb3c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3355);
        EXPECT(gbc.pc(), 0xbd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3c), 0xd8);
        // D8 0327
        gbc.setState(0x4362, 0x6f5c, 0x5b90, 0x37f, 0xfabb, 0x3cc1, 0x0, 0x1);
        gbc.writeMem(0x4362, { 0xd8 });
        gbc.writeMem(0x6f5c, { 0x25, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f5e);
        EXPECT(gbc.pc(), 0xbb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0328
        gbc.setState(0x59ca, 0x2405, 0xafe0, 0x4639, 0xf706, 0x3c0d, 0x0, 0x0);
        gbc.writeMem(0x59ca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2405);
        EXPECT(gbc.pc(), 0x59cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0329
        gbc.setState(0x4b86, 0x8f0a, 0xc7b0, 0xe512, 0x3a00, 0xadcf, 0x0, 0x0);
        gbc.writeMem(0x4b86, { 0xd8 });
        gbc.writeMem(0x8f0a, { 0x69, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8f0c);
        EXPECT(gbc.pc(), 0xa869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0a), 0x69);
        EXPECT(gbc.readMem(0x8f0b), 0xa8);
        // D8 032A
        gbc.setState(0x6622, 0x2cea, 0x34a0, 0xae79, 0xcc3e, 0xab61, 0x1, 0x0);
        gbc.writeMem(0x6622, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2cea);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 032B
        gbc.setState(0x8f92, 0x31b3, 0x5740, 0x9461, 0x2249, 0x4814, 0x0, 0x0);
        gbc.writeMem(0x8f92, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x31b3);
        EXPECT(gbc.pc(), 0x8f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f92), 0xd8);
        // D8 032C
        gbc.setState(0xd80e, 0x1ed6, 0x75c0, 0xc216, 0xa1f1, 0x329a, 0x1, 0x0);
        gbc.writeMem(0xd80e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0xd80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80e), 0xd8);
        // D8 032D
        gbc.setState(0x1538, 0x89da, 0x6150, 0xb8b8, 0x79c6, 0xa8c3, 0x0, 0x0);
        gbc.writeMem(0x1538, { 0xd8 });
        gbc.writeMem(0x89da, { 0x8d, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x89dc);
        EXPECT(gbc.pc(), 0xc78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89da), 0x8d);
        EXPECT(gbc.readMem(0x89db), 0xc7);
        // D8 032E
        gbc.setState(0x12fd, 0x4cfb, 0x9d20, 0xe996, 0xbfbd, 0xc3d0, 0x0, 0x0);
        gbc.writeMem(0x12fd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4cfb);
        EXPECT(gbc.pc(), 0x12fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 032F
        gbc.setState(0xbcc2, 0xa18c, 0x6790, 0xb7c9, 0x4667, 0x764a, 0x0, 0x0);
        gbc.writeMem(0xa18c, { 0x68, 0xbb });
        gbc.writeMem(0xbcc2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa18e);
        EXPECT(gbc.pc(), 0xbb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18c), 0x68);
        EXPECT(gbc.readMem(0xa18d), 0xbb);
        EXPECT(gbc.readMem(0xbcc2), 0xd8);
        // D8 0330
        gbc.setState(0xa5ac, 0x7dc2, 0x6350, 0x6d1a, 0x76f3, 0xf83f, 0x1, 0x1);
        gbc.writeMem(0x7dc2, { 0x4e, 0x26 });
        gbc.writeMem(0xa5ac, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7dc4);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ac), 0xd8);
        // D8 0331
        gbc.setState(0xa965, 0xcb42, 0x4cb0, 0xc117, 0x418e, 0xe15c, 0x1, 0x0);
        gbc.writeMem(0xa965, { 0xd8 });
        gbc.writeMem(0xcb42, { 0x86, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcb44);
        EXPECT(gbc.pc(), 0xee86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa965), 0xd8);
        EXPECT(gbc.readMem(0xcb42), 0x86);
        EXPECT(gbc.readMem(0xcb43), 0xee);
        // D8 0332
        gbc.setState(0x8bad, 0x91bc, 0xc8f0, 0xc985, 0x7dd6, 0x3134, 0x1, 0x0);
        gbc.writeMem(0x8bad, { 0xd8 });
        gbc.writeMem(0x91bc, { 0x9, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x91be);
        EXPECT(gbc.pc(), 0x9109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bad), 0xd8);
        EXPECT(gbc.readMem(0x91bc), 0x9);
        EXPECT(gbc.readMem(0x91bd), 0x91);
        // D8 0334
        gbc.setState(0x688c, 0x6260, 0x52f0, 0xb95d, 0x13f8, 0xb0a7, 0x1, 0x0);
        gbc.writeMem(0x6260, { 0xdf, 0xda });
        gbc.writeMem(0x688c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6262);
        EXPECT(gbc.pc(), 0xdadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0335
        gbc.setState(0xdd84, 0xe329, 0x5c20, 0x758f, 0x99af, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0xdd84, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe329);
        EXPECT(gbc.pc(), 0xdd85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd84), 0xd8);
        // D8 0336
        gbc.setState(0x7e95, 0xb500, 0x1a30, 0xc1bd, 0xcbc3, 0x158b, 0x1, 0x1);
        gbc.writeMem(0x7e95, { 0xd8 });
        gbc.writeMem(0xb500, { 0x9, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb502);
        EXPECT(gbc.pc(), 0x4309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb500), 0x9);
        EXPECT(gbc.readMem(0xb501), 0x43);
        // D8 0337
        gbc.setState(0x5578, 0xa710, 0xf9c0, 0x60e5, 0x7c96, 0x9eb2, 0x1, 0x1);
        gbc.writeMem(0x5578, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa710);
        EXPECT(gbc.pc(), 0x5579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0338
        gbc.setState(0x867c, 0xb1d2, 0xe870, 0x5c72, 0x4656, 0x65f5, 0x0, 0x0);
        gbc.writeMem(0x867c, { 0xd8 });
        gbc.writeMem(0xb1d2, { 0x70, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb1d4);
        EXPECT(gbc.pc(), 0x5670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867c), 0xd8);
        EXPECT(gbc.readMem(0xb1d2), 0x70);
        EXPECT(gbc.readMem(0xb1d3), 0x56);
        // D8 0339
        gbc.setState(0x847b, 0x2027, 0x1780, 0x76a2, 0x51e9, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0x847b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2027);
        EXPECT(gbc.pc(), 0x847c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847b), 0xd8);
        // D8 033A
        gbc.setState(0x831, 0x12eb, 0x3890, 0xf06f, 0x748a, 0x4925, 0x1, 0x1);
        gbc.writeMem(0x831, { 0xd8 });
        gbc.writeMem(0x12eb, { 0x6e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x12ed);
        EXPECT(gbc.pc(), 0x576e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 033B
        gbc.setState(0x2a07, 0xad43, 0x4050, 0x4d5e, 0xa129, 0x512d, 0x0, 0x1);
        gbc.writeMem(0x2a07, { 0xd8 });
        gbc.writeMem(0xad43, { 0xf9, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xad45);
        EXPECT(gbc.pc(), 0xb8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad43), 0xf9);
        EXPECT(gbc.readMem(0xad44), 0xb8);
        // D8 033C
        gbc.setState(0x56d6, 0x3f5a, 0xb890, 0x5ad5, 0x6fa7, 0xc839, 0x1, 0x1);
        gbc.writeMem(0x3f5a, { 0x39, 0xf9 });
        gbc.writeMem(0x56d6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3f5c);
        EXPECT(gbc.pc(), 0xf939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 033D
        gbc.setState(0x8d4f, 0x267b, 0x20f0, 0xed36, 0x1e1b, 0x99b0, 0x0, 0x1);
        gbc.writeMem(0x267b, { 0x2f, 0xb6 });
        gbc.writeMem(0x8d4f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x267d);
        EXPECT(gbc.pc(), 0xb62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4f), 0xd8);
        // D8 033E
        gbc.setState(0x95de, 0x418c, 0x8680, 0xa4ee, 0x587b, 0xc058, 0x1, 0x1);
        gbc.writeMem(0x95de, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x418c);
        EXPECT(gbc.pc(), 0x95df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95de), 0xd8);
        // D8 0340
        gbc.setState(0x5aa0, 0xb4f5, 0xe190, 0x563f, 0x100, 0xeb75, 0x1, 0x0);
        gbc.writeMem(0x5aa0, { 0xd8 });
        gbc.writeMem(0xb4f5, { 0xb2, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb4f7);
        EXPECT(gbc.pc(), 0x51b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f5), 0xb2);
        EXPECT(gbc.readMem(0xb4f6), 0x51);
        // D8 0341
        gbc.setState(0x1239, 0x9f3f, 0xae30, 0x7c74, 0x4baa, 0x3080, 0x1, 0x1);
        gbc.writeMem(0x1239, { 0xd8 });
        gbc.writeMem(0x9f3f, { 0x2b, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9f41);
        EXPECT(gbc.pc(), 0xab2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3f), 0x2b);
        EXPECT(gbc.readMem(0x9f40), 0xab);
        // D8 0342
        gbc.setState(0xdfc8, 0x8784, 0xe490, 0xd859, 0xf707, 0x95f0, 0x1, 0x0);
        gbc.writeMem(0x8784, { 0x5, 0x42 });
        gbc.writeMem(0xdfc8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8786);
        EXPECT(gbc.pc(), 0x4205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8784), 0x5);
        EXPECT(gbc.readMem(0x8785), 0x42);
        EXPECT(gbc.readMem(0xdfc8), 0xd8);
        // D8 0343
        gbc.setState(0x4993, 0x6d11, 0xbe40, 0x1f2, 0xbbcc, 0xffaa, 0x0, 0x0);
        gbc.writeMem(0x4993, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6d11);
        EXPECT(gbc.pc(), 0x4994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0344
        gbc.setState(0x221d, 0xe85e, 0xa4b0, 0x7f05, 0xbf6c, 0x3408, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0xd8 });
        gbc.writeMem(0xe85e, { 0x59, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe860);
        EXPECT(gbc.pc(), 0xfd59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85e), 0x59);
        EXPECT(gbc.readMem(0xe85f), 0xfd);
        // D8 0346
        gbc.setState(0xde44, 0xc188, 0x1280, 0x630, 0x19e, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0xde44, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc188);
        EXPECT(gbc.pc(), 0xde45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde44), 0xd8);
        // D8 0347
        gbc.setState(0x9aa7, 0xc154, 0x9db0, 0xb8f8, 0xfa29, 0xcb9e, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0xd8 });
        gbc.writeMem(0xc154, { 0xc2, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc156);
        EXPECT(gbc.pc(), 0x3fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa7), 0xd8);
        EXPECT(gbc.readMem(0xc154), 0xc2);
        EXPECT(gbc.readMem(0xc155), 0x3f);
        // D8 0348
        gbc.setState(0x79cb, 0x5ae7, 0x9a40, 0xdce0, 0xd419, 0x2ee, 0x0, 0x1);
        gbc.writeMem(0x79cb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5ae7);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0349
        gbc.setState(0x2ec9, 0x1800, 0xde60, 0x5ae7, 0xa70b, 0xd2c2, 0x1, 0x1);
        gbc.writeMem(0x2ec9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1800);
        EXPECT(gbc.pc(), 0x2eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 034A
        gbc.setState(0x398a, 0x8550, 0x3a10, 0xb054, 0xa2f9, 0x9bea, 0x0, 0x0);
        gbc.writeMem(0x398a, { 0xd8 });
        gbc.writeMem(0x8550, { 0x8d, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8552);
        EXPECT(gbc.pc(), 0xa68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8550), 0x8d);
        EXPECT(gbc.readMem(0x8551), 0xa6);
        // D8 034B
        gbc.setState(0x3d7, 0x520, 0x7aa0, 0xd51c, 0x2236, 0x7924, 0x1, 0x0);
        gbc.writeMem(0x3d7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x520);
        EXPECT(gbc.pc(), 0x3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 034C
        gbc.setState(0x6c7a, 0x602f, 0xbbd0, 0x535c, 0xca73, 0x3870, 0x0, 0x1);
        gbc.writeMem(0x602f, { 0xc0, 0xed });
        gbc.writeMem(0x6c7a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6031);
        EXPECT(gbc.pc(), 0xedc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 034D
        gbc.setState(0xc9b3, 0xac25, 0xf130, 0x7071, 0xb0d6, 0xe20c, 0x1, 0x1);
        gbc.writeMem(0xac25, { 0xdf, 0xdc });
        gbc.writeMem(0xc9b3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xac27);
        EXPECT(gbc.pc(), 0xdcdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac25), 0xdf);
        EXPECT(gbc.readMem(0xac26), 0xdc);
        EXPECT(gbc.readMem(0xc9b3), 0xd8);
        // D8 034E
        gbc.setState(0xd1fd, 0xc6d1, 0x42a0, 0xadc0, 0x8d44, 0xf27e, 0x0, 0x0);
        gbc.writeMem(0xd1fd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc6d1);
        EXPECT(gbc.pc(), 0xd1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1fd), 0xd8);
        // D8 034F
        gbc.setState(0x5702, 0x1768, 0x8580, 0xd434, 0x6c0f, 0xd326, 0x1, 0x1);
        gbc.writeMem(0x5702, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1768);
        EXPECT(gbc.pc(), 0x5703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0350
        gbc.setState(0x40d, 0xeadd, 0x9fe0, 0x5621, 0xf2e0, 0xbf86, 0x1, 0x1);
        gbc.writeMem(0x40d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xeadd);
        EXPECT(gbc.pc(), 0x40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0351
        gbc.setState(0x9ec8, 0x7dcd, 0x4ef0, 0x2d2c, 0xbbfc, 0xf481, 0x1, 0x1);
        gbc.writeMem(0x7dcd, { 0x51, 0xce });
        gbc.writeMem(0x9ec8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7dcf);
        EXPECT(gbc.pc(), 0xce51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec8), 0xd8);
        // D8 0352
        gbc.setState(0x40a0, 0x9acc, 0xdfa0, 0x7c3e, 0xaad9, 0x94e8, 0x1, 0x0);
        gbc.writeMem(0x40a0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9acc);
        EXPECT(gbc.pc(), 0x40a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0353
        gbc.setState(0xd4d8, 0x8b06, 0xc490, 0x9115, 0xaecc, 0xe5c5, 0x0, 0x0);
        gbc.writeMem(0x8b06, { 0x32, 0x9b });
        gbc.writeMem(0xd4d8, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8b08);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b06), 0x32);
        EXPECT(gbc.readMem(0x8b07), 0x9b);
        EXPECT(gbc.readMem(0xd4d8), 0xd8);
        // D8 0354
        gbc.setState(0x5bb7, 0xf4bb, 0x5f70, 0x69d7, 0x62c5, 0x9623, 0x1, 0x0);
        gbc.writeMem(0x5bb7, { 0xd8 });
        gbc.writeMem(0xf4bb, { 0x18, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf4bd);
        EXPECT(gbc.pc(), 0x7418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4bb), 0x18);
        EXPECT(gbc.readMem(0xf4bc), 0x74);
        // D8 0355
        gbc.setState(0x6f5f, 0xdb6, 0xaf10, 0x68d8, 0xdb66, 0xb2a8, 0x1, 0x1);
        gbc.writeMem(0xdb6, { 0xa2, 0x3a });
        gbc.writeMem(0x6f5f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdb8);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0356
        gbc.setState(0xb0c7, 0x42d9, 0xfbb0, 0x4f8d, 0x3c66, 0x18b5, 0x0, 0x1);
        gbc.writeMem(0x42d9, { 0x95, 0x4a });
        gbc.writeMem(0xb0c7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x42db);
        EXPECT(gbc.pc(), 0x4a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c7), 0xd8);
        // D8 0357
        gbc.setState(0xa7d6, 0xdcb1, 0xd910, 0xb0c, 0x62fe, 0x5c12, 0x0, 0x1);
        gbc.writeMem(0xa7d6, { 0xd8 });
        gbc.writeMem(0xdcb1, { 0xe8, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdcb3);
        EXPECT(gbc.pc(), 0x4fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d6), 0xd8);
        EXPECT(gbc.readMem(0xdcb1), 0xe8);
        EXPECT(gbc.readMem(0xdcb2), 0x4f);
        // D8 0358
        gbc.setState(0x410c, 0x5544, 0xa0d0, 0xfe16, 0xde3f, 0xc7c5, 0x1, 0x0);
        gbc.writeMem(0x410c, { 0xd8 });
        gbc.writeMem(0x5544, { 0x3f, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5546);
        EXPECT(gbc.pc(), 0x993f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0359
        gbc.setState(0xbcd6, 0xb36, 0x48b0, 0x358a, 0x8eb7, 0xea0f, 0x1, 0x0);
        gbc.writeMem(0xb36, { 0xe6, 0x93 });
        gbc.writeMem(0xbcd6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb38);
        EXPECT(gbc.pc(), 0x93e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd6), 0xd8);
        // D8 035A
        gbc.setState(0xe92b, 0x4be3, 0x62c0, 0x5b56, 0xeca9, 0xe431, 0x1, 0x1);
        gbc.writeMem(0xe92b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4be3);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92b), 0xd8);
        // D8 035C
        gbc.setState(0x6ef9, 0xf800, 0x7580, 0x63c, 0x214f, 0xf92b, 0x0, 0x1);
        gbc.writeMem(0x6ef9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf800);
        EXPECT(gbc.pc(), 0x6efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 035D
        gbc.setState(0x5d30, 0x1581, 0xb5a0, 0x5d79, 0xab82, 0xfc07, 0x0, 0x0);
        gbc.writeMem(0x5d30, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1581);
        EXPECT(gbc.pc(), 0x5d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 035E
        gbc.setState(0x5fb7, 0xfba6, 0xfc80, 0x2875, 0x52a1, 0xa376, 0x0, 0x0);
        gbc.writeMem(0x5fb7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfba6);
        EXPECT(gbc.pc(), 0x5fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 035F
        gbc.setState(0x65d0, 0x214f, 0x4cc0, 0xf63c, 0xeb1f, 0xf394, 0x0, 0x1);
        gbc.writeMem(0x65d0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0x65d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0360
        gbc.setState(0x799a, 0x7f2c, 0x16b0, 0x59b0, 0xd5d2, 0xeafd, 0x0, 0x1);
        gbc.writeMem(0x799a, { 0xd8 });
        gbc.writeMem(0x7f2c, { 0x99, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7f2e);
        EXPECT(gbc.pc(), 0x3699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0361
        gbc.setState(0x95d3, 0x3ed0, 0xf3f0, 0xa451, 0xee04, 0x2b1f, 0x0, 0x0);
        gbc.writeMem(0x3ed0, { 0xae, 0x78 });
        gbc.writeMem(0x95d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3ed2);
        EXPECT(gbc.pc(), 0x78ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d3), 0xd8);
        // D8 0362
        gbc.setState(0xc29a, 0x478e, 0xf0c0, 0x801f, 0x668e, 0x6048, 0x1, 0x1);
        gbc.writeMem(0xc29a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x478e);
        EXPECT(gbc.pc(), 0xc29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29a), 0xd8);
        // D8 0363
        gbc.setState(0x88cc, 0xec2c, 0x3370, 0xc87, 0x3653, 0xc24d, 0x1, 0x0);
        gbc.writeMem(0x88cc, { 0xd8 });
        gbc.writeMem(0xec2c, { 0xd0, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xec2e);
        EXPECT(gbc.pc(), 0x17d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cc), 0xd8);
        EXPECT(gbc.readMem(0xec2c), 0xd0);
        EXPECT(gbc.readMem(0xec2d), 0x17);
        // D8 0364
        gbc.setState(0x8363, 0x44f, 0xc6e0, 0x39f7, 0x72d5, 0x70d, 0x0, 0x0);
        gbc.writeMem(0x8363, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x44f);
        EXPECT(gbc.pc(), 0x8364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8363), 0xd8);
        // D8 0365
        gbc.setState(0x76a6, 0xd54f, 0xcb70, 0x6559, 0xe3e, 0x3727, 0x1, 0x0);
        gbc.writeMem(0x76a6, { 0xd8 });
        gbc.writeMem(0xd54f, { 0xb8, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd551);
        EXPECT(gbc.pc(), 0x8ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54f), 0xb8);
        EXPECT(gbc.readMem(0xd550), 0x8a);
        // D8 0366
        gbc.setState(0x14be, 0x81f, 0x330, 0xc624, 0xb50c, 0x3a04, 0x0, 0x1);
        gbc.writeMem(0x81f, { 0x7e, 0x9e });
        gbc.writeMem(0x14be, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x821);
        EXPECT(gbc.pc(), 0x9e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0367
        gbc.setState(0xabb4, 0xa18b, 0xc9c0, 0xe44c, 0x6a18, 0xe3b, 0x1, 0x0);
        gbc.writeMem(0xabb4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa18b);
        EXPECT(gbc.pc(), 0xabb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb4), 0xd8);
        // D8 0369
        gbc.setState(0x554e, 0x8e7b, 0x1530, 0x68e4, 0xe93e, 0x68ca, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0xd8 });
        gbc.writeMem(0x8e7b, { 0x94, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8e7d);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7b), 0x94);
        EXPECT(gbc.readMem(0x8e7c), 0xc6);
        // D8 036A
        gbc.setState(0x94d3, 0x3bb6, 0x4430, 0xc0e2, 0x6697, 0x5f9c, 0x1, 0x1);
        gbc.writeMem(0x3bb6, { 0xde, 0xd7 });
        gbc.writeMem(0x94d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3bb8);
        EXPECT(gbc.pc(), 0xd7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d3), 0xd8);
        // D8 036B
        gbc.setState(0x7d29, 0x35cf, 0x7a20, 0x531a, 0xffe1, 0xcaa3, 0x0, 0x1);
        gbc.writeMem(0x7d29, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x35cf);
        EXPECT(gbc.pc(), 0x7d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 036D
        gbc.setState(0x440b, 0x8918, 0x1dc0, 0x2f40, 0x84dd, 0x24cf, 0x0, 0x1);
        gbc.writeMem(0x440b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8918);
        EXPECT(gbc.pc(), 0x440c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 036E
        gbc.setState(0xc6ee, 0xb077, 0x3460, 0x35c4, 0xca63, 0xf65e, 0x1, 0x0);
        gbc.writeMem(0xc6ee, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0xc6ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ee), 0xd8);
        // D8 036F
        gbc.setState(0x7baf, 0xc089, 0x7dc0, 0x88f7, 0x7e52, 0x55cf, 0x1, 0x0);
        gbc.writeMem(0x7baf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc089);
        EXPECT(gbc.pc(), 0x7bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0370
        gbc.setState(0x135f, 0x2a29, 0xfde0, 0xe250, 0x400, 0x2f14, 0x1, 0x0);
        gbc.writeMem(0x135f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2a29);
        EXPECT(gbc.pc(), 0x1360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0371
        gbc.setState(0xe9b2, 0x2d05, 0x78e0, 0xca34, 0xb18e, 0xb782, 0x0, 0x0);
        gbc.writeMem(0xe9b2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2d05);
        EXPECT(gbc.pc(), 0xe9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b2), 0xd8);
        // D8 0372
        gbc.setState(0x3de1, 0xa490, 0x78e0, 0x6611, 0xbb94, 0xf258, 0x1, 0x0);
        gbc.writeMem(0x3de1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa490);
        EXPECT(gbc.pc(), 0x3de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0373
        gbc.setState(0xb644, 0x4980, 0x3f60, 0xac52, 0xb3e4, 0xfdb2, 0x0, 0x1);
        gbc.writeMem(0xb644, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4980);
        EXPECT(gbc.pc(), 0xb645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb644), 0xd8);
        // D8 0374
        gbc.setState(0x2d76, 0x37f2, 0x5310, 0x8914, 0xd201, 0x9b6e, 0x1, 0x0);
        gbc.writeMem(0x2d76, { 0xd8 });
        gbc.writeMem(0x37f2, { 0xe0, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x37f4);
        EXPECT(gbc.pc(), 0x65e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0376
        gbc.setState(0xd04, 0xc881, 0x53b0, 0x1726, 0x81e8, 0xadf0, 0x0, 0x0);
        gbc.writeMem(0xd04, { 0xd8 });
        gbc.writeMem(0xc881, { 0x1f, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc883);
        EXPECT(gbc.pc(), 0x981f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc881), 0x1f);
        EXPECT(gbc.readMem(0xc882), 0x98);
        // D8 0377
        gbc.setState(0x2e0a, 0x70eb, 0x7bb0, 0x150c, 0x593a, 0x834d, 0x1, 0x0);
        gbc.writeMem(0x2e0a, { 0xd8 });
        gbc.writeMem(0x70eb, { 0x64, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x70ed);
        EXPECT(gbc.pc(), 0x5d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0378
        gbc.setState(0x6eae, 0xbc52, 0x9010, 0x8636, 0x4971, 0xe057, 0x1, 0x1);
        gbc.writeMem(0x6eae, { 0xd8 });
        gbc.writeMem(0xbc52, { 0x11, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbc54);
        EXPECT(gbc.pc(), 0x3311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc52), 0x11);
        EXPECT(gbc.readMem(0xbc53), 0x33);
        // D8 0379
        gbc.setState(0xd10, 0x8bb1, 0x4e30, 0xa2f1, 0xecc0, 0x5f7a, 0x1, 0x0);
        gbc.writeMem(0xd10, { 0xd8 });
        gbc.writeMem(0x8bb1, { 0x5e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8bb3);
        EXPECT(gbc.pc(), 0x575e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb1), 0x5e);
        EXPECT(gbc.readMem(0x8bb2), 0x57);
        // D8 037A
        gbc.setState(0x7fa4, 0xb9e9, 0xea60, 0xebb1, 0x1bca, 0x301, 0x0, 0x1);
        gbc.writeMem(0x7fa4, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb9e9);
        EXPECT(gbc.pc(), 0x7fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 037B
        gbc.setState(0x3ef6, 0x7c19, 0xf280, 0x9261, 0x2172, 0x8d22, 0x0, 0x1);
        gbc.writeMem(0x3ef6, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7c19);
        EXPECT(gbc.pc(), 0x3ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 037C
        gbc.setState(0x304a, 0x14b1, 0xbad0, 0x9abc, 0xb422, 0xbc5b, 0x1, 0x0);
        gbc.writeMem(0x14b1, { 0x57, 0xec });
        gbc.writeMem(0x304a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x14b3);
        EXPECT(gbc.pc(), 0xec57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 037D
        gbc.setState(0x6361, 0x9dc7, 0x2850, 0x30b4, 0xc31b, 0x38d6, 0x1, 0x1);
        gbc.writeMem(0x6361, { 0xd8 });
        gbc.writeMem(0x9dc7, { 0x5e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9dc9);
        EXPECT(gbc.pc(), 0xaa5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc7), 0x5e);
        EXPECT(gbc.readMem(0x9dc8), 0xaa);
        // D8 037E
        gbc.setState(0x1547, 0xa228, 0x82b0, 0x2ba7, 0x2b1e, 0x5fab, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xd8 });
        gbc.writeMem(0xa228, { 0x4e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa22a);
        EXPECT(gbc.pc(), 0xac4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa228), 0x4e);
        EXPECT(gbc.readMem(0xa229), 0xac);
        // D8 037F
        gbc.setState(0x36cc, 0xe51, 0x6af0, 0xcdd5, 0x4491, 0x4f6f, 0x1, 0x0);
        gbc.writeMem(0xe51, { 0x11, 0x2 });
        gbc.writeMem(0x36cc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe53);
        EXPECT(gbc.pc(), 0x211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 0380
        gbc.setState(0x9ee9, 0xcec3, 0x6120, 0x2a9c, 0x8441, 0x4685, 0x1, 0x0);
        gbc.writeMem(0x9ee9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcec3);
        EXPECT(gbc.pc(), 0x9eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee9), 0xd8);
        // D8 0381
        gbc.setState(0xe2c7, 0xc55b, 0xdd70, 0x18f6, 0x4eae, 0x1e07, 0x1, 0x1);
        gbc.writeMem(0xc55b, { 0x29, 0x28 });
        gbc.writeMem(0xe2c7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc55d);
        EXPECT(gbc.pc(), 0x2829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55b), 0x29);
        EXPECT(gbc.readMem(0xc55c), 0x28);
        EXPECT(gbc.readMem(0xe2c7), 0xd8);
        // D8 0382
        gbc.setState(0xbe97, 0xcca0, 0xa970, 0x3651, 0x7e9c, 0x94f5, 0x1, 0x0);
        gbc.writeMem(0xbe97, { 0xd8 });
        gbc.writeMem(0xcca0, { 0x56, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcca2);
        EXPECT(gbc.pc(), 0xd056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe97), 0xd8);
        EXPECT(gbc.readMem(0xcca0), 0x56);
        EXPECT(gbc.readMem(0xcca1), 0xd0);
        // D8 0383
        gbc.setState(0xcdbc, 0x8e8b, 0xec70, 0x6fc3, 0xc23e, 0xf72e, 0x1, 0x1);
        gbc.writeMem(0x8e8b, { 0xf, 0x24 });
        gbc.writeMem(0xcdbc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8e8d);
        EXPECT(gbc.pc(), 0x240f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e8b), 0xf);
        EXPECT(gbc.readMem(0x8e8c), 0x24);
        EXPECT(gbc.readMem(0xcdbc), 0xd8);
        // D8 0384
        gbc.setState(0x76, 0x1f8e, 0x1b20, 0x5fd9, 0xdc69, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x76, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1f8e);
        EXPECT(gbc.pc(), 0x77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0385
        gbc.setState(0x8a1b, 0x3335, 0x4cd0, 0x7d6d, 0xc9d6, 0xcb89, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xbd, 0x85 });
        gbc.writeMem(0x8a1b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3337);
        EXPECT(gbc.pc(), 0x85bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1b), 0xd8);
        // D8 0386
        gbc.setState(0x17eb, 0x65b3, 0x190, 0x82a1, 0x4ebc, 0x3434, 0x0, 0x1);
        gbc.writeMem(0x17eb, { 0xd8 });
        gbc.writeMem(0x65b3, { 0xf5, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x65b5);
        EXPECT(gbc.pc(), 0x7bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0387
        gbc.setState(0x198f, 0x10b9, 0x5c20, 0xa406, 0x5f5b, 0x4047, 0x1, 0x1);
        gbc.writeMem(0x198f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x10b9);
        EXPECT(gbc.pc(), 0x1990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0388
        gbc.setState(0xc797, 0x58da, 0x57c0, 0x9380, 0x461e, 0x7a19, 0x0, 0x0);
        gbc.writeMem(0xc797, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x58da);
        EXPECT(gbc.pc(), 0xc798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc797), 0xd8);
        // D8 0389
        gbc.setState(0x482b, 0x41a5, 0x9c30, 0x99cd, 0x59c9, 0xb4cb, 0x1, 0x1);
        gbc.writeMem(0x41a5, { 0xc3, 0xa6 });
        gbc.writeMem(0x482b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x41a7);
        EXPECT(gbc.pc(), 0xa6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 038A
        gbc.setState(0x19f8, 0xd150, 0xadd0, 0x8fd4, 0x7a6e, 0xd271, 0x0, 0x1);
        gbc.writeMem(0x19f8, { 0xd8 });
        gbc.writeMem(0xd150, { 0xee, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd152);
        EXPECT(gbc.pc(), 0x6bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd150), 0xee);
        EXPECT(gbc.readMem(0xd151), 0x6b);
        // D8 038B
        gbc.setState(0x26e4, 0x4294, 0x93f0, 0xd004, 0x8023, 0xd11a, 0x1, 0x0);
        gbc.writeMem(0x26e4, { 0xd8 });
        gbc.writeMem(0x4294, { 0x4e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4296);
        EXPECT(gbc.pc(), 0x414e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 038C
        gbc.setState(0x7244, 0x4746, 0xcd20, 0x48f7, 0x35a7, 0xbd1, 0x0, 0x0);
        gbc.writeMem(0x7244, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4746);
        EXPECT(gbc.pc(), 0x7245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 038D
        gbc.setState(0x14e4, 0x7b8f, 0xc2d0, 0x6c5d, 0x7ff7, 0xebc1, 0x1, 0x1);
        gbc.writeMem(0x14e4, { 0xd8 });
        gbc.writeMem(0x7b8f, { 0x2a, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7b91);
        EXPECT(gbc.pc(), 0x672a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 038E
        gbc.setState(0x59e0, 0x12f2, 0x45a0, 0x445, 0xb435, 0x4fd, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x12f2);
        EXPECT(gbc.pc(), 0x59e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 038F
        gbc.setState(0xc2cf, 0x2ba9, 0xf230, 0xf502, 0xd56c, 0x9cd2, 0x1, 0x0);
        gbc.writeMem(0x2ba9, { 0x52, 0x2a });
        gbc.writeMem(0xc2cf, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2bab);
        EXPECT(gbc.pc(), 0x2a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2cf), 0xd8);
        // D8 0390
        gbc.setState(0x5cce, 0x1c73, 0xd240, 0xe6c5, 0xb2bd, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x5cce, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1c73);
        EXPECT(gbc.pc(), 0x5ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0391
        gbc.setState(0x1576, 0xca97, 0x94e0, 0x6ffe, 0xe258, 0x7db5, 0x0, 0x0);
        gbc.writeMem(0x1576, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xca97);
        EXPECT(gbc.pc(), 0x1577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0392
        gbc.setState(0x8069, 0x5e92, 0x5e0, 0x6c97, 0x9827, 0x1b31, 0x0, 0x0);
        gbc.writeMem(0x8069, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5e92);
        EXPECT(gbc.pc(), 0x806a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8069), 0xd8);
        // D8 0393
        gbc.setState(0x2d3, 0xce69, 0xddb0, 0x8dff, 0x223a, 0xea0c, 0x1, 0x1);
        gbc.writeMem(0x2d3, { 0xd8 });
        gbc.writeMem(0xce69, { 0xdb, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce6b);
        EXPECT(gbc.pc(), 0x4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce69), 0xdb);
        EXPECT(gbc.readMem(0xce6a), 0x4);
        // D8 0394
        gbc.setState(0xe1c, 0xe638, 0x37a0, 0xd7f4, 0xdff8, 0xad0e, 0x1, 0x0);
        gbc.writeMem(0xe1c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe638);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 0395
        gbc.setState(0x110a, 0x3398, 0x3180, 0x49eb, 0xe083, 0xa1f9, 0x0, 0x1);
        gbc.writeMem(0x110a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3398);
        EXPECT(gbc.pc(), 0x110b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 0396
        gbc.setState(0x34bb, 0x1fce, 0xe350, 0xff2c, 0x7dc7, 0x996, 0x1, 0x0);
        gbc.writeMem(0x1fce, { 0xa4, 0xd1 });
        gbc.writeMem(0x34bb, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1fd0);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 0397
        gbc.setState(0xa20e, 0x6d47, 0x47e0, 0x879f, 0x5f01, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0xa20e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6d47);
        EXPECT(gbc.pc(), 0xa20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20e), 0xd8);
        // D8 0398
        gbc.setState(0xfd5, 0x84cb, 0x3670, 0x8c33, 0x9e2b, 0xfc99, 0x1, 0x1);
        gbc.writeMem(0xfd5, { 0xd8 });
        gbc.writeMem(0x84cb, { 0x35, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x84cd);
        EXPECT(gbc.pc(), 0xc535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cb), 0x35);
        EXPECT(gbc.readMem(0x84cc), 0xc5);
        // D8 039A
        gbc.setState(0x97b7, 0xbc90, 0x7c20, 0xeeb, 0xfa50, 0xbae7, 0x1, 0x1);
        gbc.writeMem(0x97b7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbc90);
        EXPECT(gbc.pc(), 0x97b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b7), 0xd8);
        // D8 039B
        gbc.setState(0x926f, 0x79c8, 0x9a0, 0x8ab5, 0xff0b, 0x5702, 0x0, 0x0);
        gbc.writeMem(0x926f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x79c8);
        EXPECT(gbc.pc(), 0x9270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926f), 0xd8);
        // D8 039C
        gbc.setState(0xc341, 0x2d2b, 0xaa80, 0xf004, 0x3748, 0x8e5e, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2d2b);
        EXPECT(gbc.pc(), 0xc342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc341), 0xd8);
        // D8 039D
        gbc.setState(0xd4a, 0x9a52, 0xd420, 0xae53, 0xc744, 0xcd8f, 0x1, 0x1);
        gbc.writeMem(0xd4a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9a52);
        EXPECT(gbc.pc(), 0xd4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 039E
        gbc.setState(0x791, 0xa95e, 0x5520, 0xedfb, 0x61df, 0xed73, 0x0, 0x1);
        gbc.writeMem(0x791, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0x792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03A0
        gbc.setState(0xb5a7, 0x6e1d, 0xc1b0, 0xa2d6, 0x96df, 0x7761, 0x0, 0x0);
        gbc.writeMem(0x6e1d, { 0x7a, 0xa });
        gbc.writeMem(0xb5a7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6e1f);
        EXPECT(gbc.pc(), 0xa7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a7), 0xd8);
        // D8 03A1
        gbc.setState(0x39de, 0x9141, 0x33d0, 0x6253, 0x9307, 0x7580, 0x1, 0x1);
        gbc.writeMem(0x39de, { 0xd8 });
        gbc.writeMem(0x9141, { 0xf6, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9143);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9141), 0xf6);
        EXPECT(gbc.readMem(0x9142), 0xc3);
        // D8 03A2
        gbc.setState(0xa82a, 0x5a41, 0x7cc0, 0x6ab1, 0x118, 0x4e87, 0x1, 0x0);
        gbc.writeMem(0xa82a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5a41);
        EXPECT(gbc.pc(), 0xa82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82a), 0xd8);
        // D8 03A3
        gbc.setState(0x9e61, 0x19d5, 0xf8e0, 0xfc33, 0x89d, 0xeac9, 0x0, 0x0);
        gbc.writeMem(0x9e61, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x19d5);
        EXPECT(gbc.pc(), 0x9e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e61), 0xd8);
        // D8 03A4
        gbc.setState(0xcfdc, 0xa9cd, 0x55d0, 0x3205, 0xfda6, 0x9719, 0x1, 0x1);
        gbc.writeMem(0xa9cd, { 0x15, 0xa4 });
        gbc.writeMem(0xcfdc, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa9cf);
        EXPECT(gbc.pc(), 0xa415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        EXPECT(gbc.readMem(0xa9ce), 0xa4);
        EXPECT(gbc.readMem(0xcfdc), 0xd8);
        // D8 03A5
        gbc.setState(0x4e42, 0x13b, 0x7be0, 0x314a, 0xa3af, 0x85c7, 0x1, 0x1);
        gbc.writeMem(0x4e42, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x13b);
        EXPECT(gbc.pc(), 0x4e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03A6
        gbc.setState(0x2605, 0xf29e, 0x1270, 0x623e, 0xfaba, 0xab88, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0xd8 });
        gbc.writeMem(0xf29e, { 0x77, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf2a0);
        EXPECT(gbc.pc(), 0x5c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf29e), 0x77);
        EXPECT(gbc.readMem(0xf29f), 0x5c);
        // D8 03A7
        gbc.setState(0xc5e7, 0xcec4, 0x4670, 0xd1c3, 0xea89, 0x9bb3, 0x1, 0x1);
        gbc.writeMem(0xc5e7, { 0xd8 });
        gbc.writeMem(0xcec4, { 0x46, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcec6);
        EXPECT(gbc.pc(), 0xa446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e7), 0xd8);
        EXPECT(gbc.readMem(0xcec4), 0x46);
        EXPECT(gbc.readMem(0xcec5), 0xa4);
        // D8 03A8
        gbc.setState(0x9147, 0x5900, 0xf700, 0xfd5c, 0x6f00, 0x2e90, 0x1, 0x0);
        gbc.writeMem(0x9147, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5900);
        EXPECT(gbc.pc(), 0x9148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9147), 0xd8);
        // D8 03A9
        gbc.setState(0xd4ce, 0x8789, 0x4010, 0x3d5d, 0xba1a, 0xf282, 0x1, 0x0);
        gbc.writeMem(0x8789, { 0xce, 0xcd });
        gbc.writeMem(0xd4ce, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x878b);
        EXPECT(gbc.pc(), 0xcdce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8789), 0xce);
        EXPECT(gbc.readMem(0x878a), 0xcd);
        EXPECT(gbc.readMem(0xd4ce), 0xd8);
        // D8 03AA
        gbc.setState(0xd7e7, 0xf4a7, 0x2560, 0x2d72, 0xd86c, 0x1429, 0x0, 0x1);
        gbc.writeMem(0xd7e7, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf4a7);
        EXPECT(gbc.pc(), 0xd7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e7), 0xd8);
        // D8 03AB
        gbc.setState(0x706f, 0x38b9, 0x8360, 0xe19b, 0xa888, 0xf5a7, 0x1, 0x0);
        gbc.writeMem(0x706f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x38b9);
        EXPECT(gbc.pc(), 0x7070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03AC
        gbc.setState(0xd65e, 0x7def, 0x85a0, 0x659a, 0xbac0, 0x3929, 0x1, 0x0);
        gbc.writeMem(0xd65e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7def);
        EXPECT(gbc.pc(), 0xd65f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65e), 0xd8);
        // D8 03AD
        gbc.setState(0x70cd, 0x1fac, 0x9b10, 0xbec7, 0x280, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x1fac, { 0xb5, 0x64 });
        gbc.writeMem(0x70cd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1fae);
        EXPECT(gbc.pc(), 0x64b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 03AE
        gbc.setState(0x1025, 0x82e7, 0x3070, 0x5b8b, 0xc5e7, 0xd3c6, 0x0, 0x0);
        gbc.writeMem(0x1025, { 0xd8 });
        gbc.writeMem(0x82e7, { 0x39, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x82e9);
        EXPECT(gbc.pc(), 0x7439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e7), 0x39);
        EXPECT(gbc.readMem(0x82e8), 0x74);
        // D8 03AF
        gbc.setState(0x3c35, 0x4036, 0xe5c0, 0x8a09, 0xb758, 0xfa7a, 0x0, 0x0);
        gbc.writeMem(0x3c35, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4036);
        EXPECT(gbc.pc(), 0x3c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03B0
        gbc.setState(0x947f, 0xb4f3, 0x8f00, 0x82c, 0xa282, 0x2eb8, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb4f3);
        EXPECT(gbc.pc(), 0x9480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947f), 0xd8);
        // D8 03B1
        gbc.setState(0xa540, 0x7f26, 0x5280, 0x31ed, 0xa1e, 0x471d, 0x1, 0x0);
        gbc.writeMem(0xa540, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7f26);
        EXPECT(gbc.pc(), 0xa541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa540), 0xd8);
        // D8 03B2
        gbc.setState(0x365, 0xf456, 0xe200, 0xeb9a, 0xde99, 0x471f, 0x1, 0x0);
        gbc.writeMem(0x365, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf456);
        EXPECT(gbc.pc(), 0x366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03B3
        gbc.setState(0x6bf1, 0x9b5b, 0x6530, 0x7d0a, 0xcda5, 0x4692, 0x0, 0x1);
        gbc.writeMem(0x6bf1, { 0xd8 });
        gbc.writeMem(0x9b5b, { 0xc1, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9b5d);
        EXPECT(gbc.pc(), 0xd8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5b), 0xc1);
        EXPECT(gbc.readMem(0x9b5c), 0xd8);
        // D8 03B4
        gbc.setState(0xc48f, 0xac, 0x7100, 0xa120, 0x726b, 0x9384, 0x0, 0x1);
        gbc.writeMem(0xc48f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xac);
        EXPECT(gbc.pc(), 0xc490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48f), 0xd8);
        // D8 03B5
        gbc.setState(0xa6e3, 0x5e41, 0x5b80, 0x69cb, 0x22d5, 0xc085, 0x1, 0x0);
        gbc.writeMem(0xa6e3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e3), 0xd8);
        // D8 03B6
        gbc.setState(0x6cc5, 0x535f, 0xc590, 0x8cc3, 0xccc3, 0x2e4b, 0x0, 0x1);
        gbc.writeMem(0x535f, { 0x5b, 0x85 });
        gbc.writeMem(0x6cc5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5361);
        EXPECT(gbc.pc(), 0x855b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 03B7
        gbc.setState(0x294b, 0x1029, 0x71e0, 0x4c59, 0xde17, 0x4ae0, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1029);
        EXPECT(gbc.pc(), 0x294c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03B8
        gbc.setState(0x5076, 0xc6fe, 0x2280, 0xbe10, 0x555b, 0x300c, 0x1, 0x0);
        gbc.writeMem(0x5076, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc6fe);
        EXPECT(gbc.pc(), 0x5077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03B9
        gbc.setState(0xa224, 0xf79c, 0xcd00, 0x9268, 0x60b6, 0xfddb, 0x1, 0x0);
        gbc.writeMem(0xa224, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf79c);
        EXPECT(gbc.pc(), 0xa225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa224), 0xd8);
        // D8 03BA
        gbc.setState(0x27ea, 0x72e3, 0x2610, 0xa5de, 0x7aaf, 0xcf12, 0x1, 0x0);
        gbc.writeMem(0x27ea, { 0xd8 });
        gbc.writeMem(0x72e3, { 0x25, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x72e5);
        EXPECT(gbc.pc(), 0x525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 03BB
        gbc.setState(0x292f, 0xafbd, 0xf7c0, 0x645c, 0x9f6a, 0xbd24, 0x1, 0x0);
        gbc.writeMem(0x292f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xafbd);
        EXPECT(gbc.pc(), 0x2930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03BC
        gbc.setState(0x8a2e, 0xd233, 0xde20, 0x2a61, 0x8e72, 0x2efd, 0x0, 0x1);
        gbc.writeMem(0x8a2e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd233);
        EXPECT(gbc.pc(), 0x8a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2e), 0xd8);
        // D8 03BD
        gbc.setState(0x6ac1, 0x8151, 0x5120, 0x9b6e, 0x3e72, 0x5d6c, 0x1, 0x1);
        gbc.writeMem(0x6ac1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8151);
        EXPECT(gbc.pc(), 0x6ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03BE
        gbc.setState(0x3b29, 0xcb55, 0x4fd0, 0xaeb8, 0xf17b, 0xa035, 0x0, 0x0);
        gbc.writeMem(0x3b29, { 0xd8 });
        gbc.writeMem(0xcb55, { 0x7b, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcb57);
        EXPECT(gbc.pc(), 0x327b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb55), 0x7b);
        EXPECT(gbc.readMem(0xcb56), 0x32);
        // D8 03BF
        gbc.setState(0xbddd, 0x61d5, 0xfbc0, 0x1767, 0x99fb, 0xecb7, 0x1, 0x0);
        gbc.writeMem(0xbddd, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x61d5);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddd), 0xd8);
        // D8 03C1
        gbc.setState(0xd9ce, 0x246e, 0x4700, 0xa155, 0xd276, 0x5b4f, 0x0, 0x1);
        gbc.writeMem(0xd9ce, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x246e);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ce), 0xd8);
        // D8 03C2
        gbc.setState(0x732e, 0x3730, 0xe520, 0x4e36, 0xf13a, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x732e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3730);
        EXPECT(gbc.pc(), 0x732f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03C4
        gbc.setState(0x585a, 0xa3f7, 0x5830, 0x4597, 0x69bb, 0x3f9f, 0x1, 0x1);
        gbc.writeMem(0x585a, { 0xd8 });
        gbc.writeMem(0xa3f7, { 0xea, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0x3bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f7), 0xea);
        EXPECT(gbc.readMem(0xa3f8), 0x3b);
        // D8 03C5
        gbc.setState(0x5bab, 0x5a90, 0x6970, 0xb1, 0xe7f6, 0x995f, 0x0, 0x1);
        gbc.writeMem(0x5a90, { 0xfb, 0x90 });
        gbc.writeMem(0x5bab, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5a92);
        EXPECT(gbc.pc(), 0x90fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03C6
        gbc.setState(0xa692, 0xf851, 0x4ac0, 0x575d, 0x312e, 0x3b49, 0x1, 0x0);
        gbc.writeMem(0xa692, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf851);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0xd8);
        // D8 03C7
        gbc.setState(0x76e9, 0x2a49, 0xaff0, 0xfd39, 0xb8f0, 0x2b79, 0x0, 0x1);
        gbc.writeMem(0x2a49, { 0xd6, 0xda });
        gbc.writeMem(0x76e9, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2a4b);
        EXPECT(gbc.pc(), 0xdad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03C8
        gbc.setState(0x2b31, 0x1ab8, 0x7bf0, 0xd3c, 0xd629, 0x51f4, 0x1, 0x1);
        gbc.writeMem(0x1ab8, { 0x18, 0x32 });
        gbc.writeMem(0x2b31, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1aba);
        EXPECT(gbc.pc(), 0x3218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03CA
        gbc.setState(0x761c, 0x8c0c, 0x1200, 0xb998, 0x70ec, 0x16db, 0x1, 0x1);
        gbc.writeMem(0x761c, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8c0c);
        EXPECT(gbc.pc(), 0x761d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03CB
        gbc.setState(0x3d55, 0x45b0, 0xc740, 0xd2ae, 0xcd74, 0x2f31, 0x0, 0x1);
        gbc.writeMem(0x3d55, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x45b0);
        EXPECT(gbc.pc(), 0x3d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03CC
        gbc.setState(0xc8c4, 0xce6d, 0xe550, 0x1748, 0x30a8, 0x89f9, 0x0, 0x1);
        gbc.writeMem(0xc8c4, { 0xd8 });
        gbc.writeMem(0xce6d, { 0x7f, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xce6f);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c4), 0xd8);
        EXPECT(gbc.readMem(0xce6d), 0x7f);
        EXPECT(gbc.readMem(0xce6e), 0x66);
        // D8 03CD
        gbc.setState(0xb3df, 0x84da, 0xf490, 0x413f, 0xdc18, 0x3504, 0x1, 0x0);
        gbc.writeMem(0x84da, { 0x7c, 0x9 });
        gbc.writeMem(0xb3df, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x84dc);
        EXPECT(gbc.pc(), 0x97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84da), 0x7c);
        EXPECT(gbc.readMem(0x84db), 0x9);
        EXPECT(gbc.readMem(0xb3df), 0xd8);
        // D8 03CE
        gbc.setState(0x2f0f, 0xbef8, 0xd9f0, 0x1b7c, 0xc774, 0x822b, 0x1, 0x1);
        gbc.writeMem(0x2f0f, { 0xd8 });
        gbc.writeMem(0xbef8, { 0x58, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbefa);
        EXPECT(gbc.pc(), 0xfe58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef8), 0x58);
        EXPECT(gbc.readMem(0xbef9), 0xfe);
        // D8 03CF
        gbc.setState(0x5407, 0x2d78, 0x9640, 0xb5f5, 0x39be, 0x3084, 0x1, 0x0);
        gbc.writeMem(0x5407, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03D0
        gbc.setState(0xd25e, 0x158a, 0x79a0, 0xe0ec, 0xcb2e, 0x9752, 0x0, 0x1);
        gbc.writeMem(0xd25e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x158a);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25e), 0xd8);
        // D8 03D2
        gbc.setState(0x8332, 0x95c5, 0x3e10, 0x22c1, 0xd583, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0x8332, { 0xd8 });
        gbc.writeMem(0x95c5, { 0x96, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x95c7);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8332), 0xd8);
        EXPECT(gbc.readMem(0x95c5), 0x96);
        EXPECT(gbc.readMem(0x95c6), 0xcd);
        // D8 03D3
        gbc.setState(0x8367, 0x4c95, 0x7750, 0x1b56, 0xb2e1, 0xcc93, 0x1, 0x0);
        gbc.writeMem(0x4c95, { 0xe1, 0xd3 });
        gbc.writeMem(0x8367, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4c97);
        EXPECT(gbc.pc(), 0xd3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8367), 0xd8);
        // D8 03D4
        gbc.setState(0xe370, 0xf684, 0x8ce0, 0xced6, 0x7e00, 0xa1e6, 0x1, 0x0);
        gbc.writeMem(0xe370, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf684);
        EXPECT(gbc.pc(), 0xe371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe370), 0xd8);
        // D8 03D5
        gbc.setState(0x1bf5, 0x6a7c, 0x3530, 0x121c, 0x8f7b, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0x1bf5, { 0xd8 });
        gbc.writeMem(0x6a7c, { 0x34, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6a7e);
        EXPECT(gbc.pc(), 0xaa34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03D6
        gbc.setState(0x52a1, 0x4101, 0x44f0, 0x7106, 0xab2f, 0xf118, 0x1, 0x1);
        gbc.writeMem(0x4101, { 0xa7, 0xdb });
        gbc.writeMem(0x52a1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4103);
        EXPECT(gbc.pc(), 0xdba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03D8
        gbc.setState(0xeae2, 0x41fc, 0x61a0, 0xb0f8, 0xd424, 0x4b22, 0x0, 0x0);
        gbc.writeMem(0xeae2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x41fc);
        EXPECT(gbc.pc(), 0xeae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae2), 0xd8);
        // D8 03D9
        gbc.setState(0xd950, 0xb0cc, 0xda0, 0x8a5b, 0xa62d, 0x9d45, 0x1, 0x0);
        gbc.writeMem(0xd950, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0xd951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd950), 0xd8);
        // D8 03DA
        gbc.setState(0x630a, 0x693b, 0xf770, 0x4da9, 0x1fe0, 0x96b7, 0x0, 0x0);
        gbc.writeMem(0x630a, { 0xd8 });
        gbc.writeMem(0x693b, { 0xa2, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x693d);
        EXPECT(gbc.pc(), 0x7fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03DB
        gbc.setState(0x3e6d, 0x2d92, 0x84c0, 0x4fc7, 0xa7e3, 0x169e, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2d92);
        EXPECT(gbc.pc(), 0x3e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D8 03DC
        gbc.setState(0xc6b1, 0x2471, 0x6130, 0xa5b, 0x208e, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0x2471, { 0xdb, 0x32 });
        gbc.writeMem(0xc6b1, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x32db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b1), 0xd8);
        // D8 03DD
        gbc.setState(0xe8e5, 0xc387, 0xefe0, 0xbe9c, 0xee3a, 0x7b9e, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc387);
        EXPECT(gbc.pc(), 0xe8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e5), 0xd8);
        // D8 03DE
        gbc.setState(0x46d3, 0x4db7, 0x39d0, 0x45c5, 0x4f44, 0x380f, 0x0, 0x1);
        gbc.writeMem(0x46d3, { 0xd8 });
        gbc.writeMem(0x4db7, { 0xd1, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4db9);
        EXPECT(gbc.pc(), 0x6d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D8 03DF
        gbc.setState(0xbc43, 0x788f, 0xa510, 0xff16, 0x968e, 0xc117, 0x1, 0x0);
        gbc.writeMem(0x788f, { 0xef, 0x41 });
        gbc.writeMem(0xbc43, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0x41ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc43), 0xd8);
        // D8 03E0
        gbc.setState(0x6452, 0xa963, 0x8690, 0x8d10, 0x9323, 0x2bd0, 0x1, 0x1);
        gbc.writeMem(0x6452, { 0xd8 });
        gbc.writeMem(0xa963, { 0xed, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa965);
        EXPECT(gbc.pc(), 0xffed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa963), 0xed);
        EXPECT(gbc.readMem(0xa964), 0xff);
        // D8 03E1
        gbc.setState(0x8983, 0x98c2, 0xdca0, 0x4b7c, 0xddf5, 0x4652, 0x1, 0x1);
        gbc.writeMem(0x8983, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x98c2);
        EXPECT(gbc.pc(), 0x8984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8983), 0xd8);
        // D8 03E2
        gbc.setState(0x8dda, 0x27ea, 0xc320, 0x7974, 0x19e0, 0x99cf, 0x1, 0x0);
        gbc.writeMem(0x8dda, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x27ea);
        EXPECT(gbc.pc(), 0x8ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dda), 0xd8);
        // D8 03E3
        gbc.setState(0x5d65, 0xdcf7, 0x3820, 0x66e, 0xfdbb, 0x16b, 0x1, 0x1);
        gbc.writeMem(0x5d65, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0x5d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D8 03E4
        gbc.setState(0xbcd, 0xe1ed, 0xe6d0, 0xf43, 0x323c, 0xc2d0, 0x1, 0x1);
        gbc.writeMem(0xbcd, { 0xd8 });
        gbc.writeMem(0xe1ed, { 0x64, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe1ef);
        EXPECT(gbc.pc(), 0xb564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ed), 0x64);
        EXPECT(gbc.readMem(0xe1ee), 0xb5);
        // D8 03E5
        gbc.setState(0x281c, 0x61dd, 0x2f70, 0x5a67, 0x5726, 0xe988, 0x1, 0x0);
        gbc.writeMem(0x281c, { 0xd8 });
        gbc.writeMem(0x61dd, { 0xe8, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x61df);
        EXPECT(gbc.pc(), 0x10e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03E6
        gbc.setState(0x6c15, 0x4885, 0x7070, 0x2d83, 0xf0c1, 0xc501, 0x1, 0x1);
        gbc.writeMem(0x4885, { 0xde, 0xb7 });
        gbc.writeMem(0x6c15, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0xb7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D8 03E7
        gbc.setState(0x28d5, 0x6634, 0x5530, 0x353b, 0xe526, 0x3878, 0x1, 0x1);
        gbc.writeMem(0x28d5, { 0xd8 });
        gbc.writeMem(0x6634, { 0x6d, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6636);
        EXPECT(gbc.pc(), 0x2c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
