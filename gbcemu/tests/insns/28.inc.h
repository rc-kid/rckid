    TEST(gbcemu, opcode_28) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 28 0000
        gbc.setState(0x21d8, 0x2ec8, 0xc080, 0xadcb, 0xc3c, 0x520d, 0x0, 0x1);
        gbc.writeMem(0x21d8, { 0x28, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2ec8);
        EXPECT(gbc.pc(), 0x21b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0001
        gbc.setState(0x556f, 0xf61b, 0xeba0, 0xd633, 0xc459, 0x48c2, 0x1, 0x1);
        gbc.writeMem(0x556f, { 0x28, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf61b);
        EXPECT(gbc.pc(), 0x5532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0002
        gbc.setState(0x704d, 0xcf69, 0xd110, 0xa658, 0xcae9, 0x96bb, 0x0, 0x1);
        gbc.writeMem(0x704d, { 0x28, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcf69);
        EXPECT(gbc.pc(), 0x704f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0003
        gbc.setState(0x30d2, 0xb697, 0x9d20, 0xca74, 0x9bda, 0x8f35, 0x1, 0x0);
        gbc.writeMem(0x30d2, { 0x28, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb697);
        EXPECT(gbc.pc(), 0x30d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0004
        gbc.setState(0x63f8, 0xcbab, 0xb040, 0x1bab, 0x673a, 0x90a7, 0x1, 0x0);
        gbc.writeMem(0x63f8, { 0x28, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcbab);
        EXPECT(gbc.pc(), 0x63fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0006
        gbc.setState(0x7cf7, 0x165c, 0x51e0, 0xf1f9, 0x7685, 0x41b, 0x1, 0x0);
        gbc.writeMem(0x7cf7, { 0x28, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x165c);
        EXPECT(gbc.pc(), 0x7cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0007
        gbc.setState(0x819a, 0x8ce7, 0x84b0, 0x809, 0x4d59, 0x55d3, 0x1, 0x0);
        gbc.writeMem(0x819a, { 0x28, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8ce7);
        EXPECT(gbc.pc(), 0x81cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819a), 0x28);
        EXPECT(gbc.readMem(0x819b), 0x2f);
        // 28 0008
        gbc.setState(0xde2e, 0x5f60, 0xc460, 0xb6b9, 0x153b, 0x6dc7, 0x1, 0x0);
        gbc.writeMem(0xde2e, { 0x28, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5f60);
        EXPECT(gbc.pc(), 0xde30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2e), 0x28);
        EXPECT(gbc.readMem(0xde2f), 0x23);
        // 28 0009
        gbc.setState(0x4b1c, 0xe845, 0x9f80, 0xc32c, 0xde9c, 0x26ab, 0x0, 0x0);
        gbc.writeMem(0x4b1c, { 0x28, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe845);
        EXPECT(gbc.pc(), 0x4aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 000A
        gbc.setState(0xa2de, 0xb9fc, 0xc3c0, 0xd8f4, 0xdd16, 0x3197, 0x1, 0x0);
        gbc.writeMem(0xa2de, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb9fc);
        EXPECT(gbc.pc(), 0xa338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2de), 0x28);
        EXPECT(gbc.readMem(0xa2df), 0x58);
        // 28 000B
        gbc.setState(0x4176, 0x648b, 0x2dc0, 0x462, 0xdda4, 0x7e54, 0x0, 0x0);
        gbc.writeMem(0x4176, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x648b);
        EXPECT(gbc.pc(), 0x41a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 000C
        gbc.setState(0x8485, 0x30a1, 0xa4d0, 0x92da, 0x6df8, 0xb97b, 0x0, 0x1);
        gbc.writeMem(0x8485, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x30a1);
        EXPECT(gbc.pc(), 0x8485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8485), 0x28);
        EXPECT(gbc.readMem(0x8486), 0xfe);
        // 28 000D
        gbc.setState(0x58e0, 0x7180, 0x1930, 0x8ed4, 0x7050, 0x16d6, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7180);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 000E
        gbc.setState(0x956b, 0x54d2, 0x7160, 0x456b, 0x21b8, 0xed7a, 0x0, 0x1);
        gbc.writeMem(0x956b, { 0x28, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x54d2);
        EXPECT(gbc.pc(), 0x956d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956b), 0x28);
        EXPECT(gbc.readMem(0x956c), 0xc1);
        // 28 000F
        gbc.setState(0x8777, 0xe022, 0xb980, 0x6fa2, 0x9a87, 0xf38, 0x0, 0x0);
        gbc.writeMem(0x8777, { 0x28, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe022);
        EXPECT(gbc.pc(), 0x871b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8777), 0x28);
        EXPECT(gbc.readMem(0x8778), 0xa2);
        // 28 0010
        gbc.setState(0x9c63, 0x2daf, 0xff60, 0x8060, 0xd3c, 0xddd7, 0x0, 0x0);
        gbc.writeMem(0x9c63, { 0x28, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2daf);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0x28);
        EXPECT(gbc.readMem(0x9c64), 0x71);
        // 28 0011
        gbc.setState(0x52a1, 0x7724, 0x9d10, 0xd10d, 0xa302, 0xe8cb, 0x0, 0x1);
        gbc.writeMem(0x52a1, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7724);
        EXPECT(gbc.pc(), 0x52a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0012
        gbc.setState(0x4e65, 0xd8e2, 0x6120, 0xe020, 0xdecb, 0xf0f2, 0x1, 0x1);
        gbc.writeMem(0x4e65, { 0x28, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd8e2);
        EXPECT(gbc.pc(), 0x4e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0013
        gbc.setState(0xc13, 0xa8b, 0x3e10, 0x4f62, 0xbada, 0x191b, 0x1, 0x1);
        gbc.writeMem(0xc13, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa8b);
        EXPECT(gbc.pc(), 0xc15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0014
        gbc.setState(0xb081, 0xafbb, 0xfc90, 0x91ab, 0x7511, 0xe90f, 0x0, 0x1);
        gbc.writeMem(0xb081, { 0x28, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xafbb);
        EXPECT(gbc.pc(), 0xb0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb081), 0x28);
        EXPECT(gbc.readMem(0xb082), 0x31);
        // 28 0015
        gbc.setState(0x918e, 0x2bba, 0xe1e0, 0x476b, 0xfd0b, 0x8522, 0x1, 0x1);
        gbc.writeMem(0x918e, { 0x28, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2bba);
        EXPECT(gbc.pc(), 0x9190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918e), 0x28);
        EXPECT(gbc.readMem(0x918f), 0x0);
        // 28 0016
        gbc.setState(0xb202, 0x4447, 0x55f0, 0x2a0d, 0x79b8, 0xe853, 0x0, 0x1);
        gbc.writeMem(0xb202, { 0x28, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4447);
        EXPECT(gbc.pc(), 0xb1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb202), 0x28);
        EXPECT(gbc.readMem(0xb203), 0xdd);
        // 28 0017
        gbc.setState(0x28e8, 0x1e08, 0x9500, 0x8eab, 0xcc6f, 0x7a36, 0x1, 0x0);
        gbc.writeMem(0x28e8, { 0x28, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1e08);
        EXPECT(gbc.pc(), 0x28ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0018
        gbc.setState(0x9d2c, 0x5c61, 0xa030, 0x73dd, 0xf326, 0xe4c4, 0x1, 0x0);
        gbc.writeMem(0x9d2c, { 0x28, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5c61);
        EXPECT(gbc.pc(), 0x9d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2c), 0x28);
        EXPECT(gbc.readMem(0x9d2d), 0xf4);
        // 28 0019
        gbc.setState(0x7fde, 0x6746, 0x1e70, 0x8473, 0xca4a, 0x30d8, 0x1, 0x0);
        gbc.writeMem(0x7fde, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6746);
        EXPECT(gbc.pc(), 0x7fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 001A
        gbc.setState(0x4840, 0x3fd4, 0x2350, 0x1917, 0xa292, 0xbfed, 0x1, 0x0);
        gbc.writeMem(0x4840, { 0x28, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3fd4);
        EXPECT(gbc.pc(), 0x4842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 001B
        gbc.setState(0x9418, 0x1c72, 0xf270, 0x81f2, 0x9015, 0x7cd3, 0x1, 0x0);
        gbc.writeMem(0x9418, { 0x28, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1c72);
        EXPECT(gbc.pc(), 0x941a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9418), 0x28);
        EXPECT(gbc.readMem(0x9419), 0x1c);
        // 28 001C
        gbc.setState(0xdc43, 0x4ccd, 0xc010, 0x343e, 0xd3b7, 0x5a43, 0x1, 0x1);
        gbc.writeMem(0xdc43, { 0x28, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4ccd);
        EXPECT(gbc.pc(), 0xdc45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc43), 0x28);
        EXPECT(gbc.readMem(0xdc44), 0xc2);
        // 28 001D
        gbc.setState(0x372a, 0x611, 0xb990, 0xb6b5, 0x4229, 0xb7f3, 0x1, 0x1);
        gbc.writeMem(0x372a, { 0x28, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x611);
        EXPECT(gbc.pc(), 0x3712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 001E
        gbc.setState(0xc675, 0x6194, 0xf5c0, 0x8622, 0x7c93, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0xc675, { 0x28, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6194);
        EXPECT(gbc.pc(), 0xc648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc675), 0x28);
        EXPECT(gbc.readMem(0xc676), 0xd1);
        // 28 001F
        gbc.setState(0x675c, 0x20b1, 0x18b0, 0xb910, 0x2a06, 0xc2c, 0x0, 0x1);
        gbc.writeMem(0x675c, { 0x28, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x20b1);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0021
        gbc.setState(0xe19f, 0x351, 0x31f0, 0x1e7e, 0xae4d, 0x40f8, 0x1, 0x1);
        gbc.writeMem(0xe19f, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0xe149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19f), 0x28);
        EXPECT(gbc.readMem(0xe1a0), 0xa8);
        // 28 0022
        gbc.setState(0xa342, 0xda01, 0x77b0, 0x2988, 0x2062, 0xd3d4, 0x0, 0x1);
        gbc.writeMem(0xa342, { 0x28, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xda01);
        EXPECT(gbc.pc(), 0xa351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa342), 0x28);
        EXPECT(gbc.readMem(0xa343), 0xd);
        // 28 0023
        gbc.setState(0x2453, 0xa4fb, 0xf930, 0x7b7a, 0x6b73, 0x590e, 0x0, 0x1);
        gbc.writeMem(0x2453, { 0x28, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa4fb);
        EXPECT(gbc.pc(), 0x2455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0024
        gbc.setState(0xeba5, 0xb783, 0xa9e0, 0xd32c, 0x4f64, 0x2a84, 0x1, 0x1);
        gbc.writeMem(0xeba5, { 0x28, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0xeb36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba5), 0x28);
        EXPECT(gbc.readMem(0xeba6), 0x8f);
        // 28 0025
        gbc.setState(0x92c6, 0xcf97, 0x4980, 0x9ed9, 0xb767, 0xdeab, 0x0, 0x1);
        gbc.writeMem(0x92c6, { 0x28, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcf97);
        EXPECT(gbc.pc(), 0x9343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c6), 0x28);
        EXPECT(gbc.readMem(0x92c7), 0x7b);
        // 28 0026
        gbc.setState(0x8ce, 0x1a07, 0xdc20, 0xcfb, 0x17d4, 0x1c40, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0x28, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1a07);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0027
        gbc.setState(0xa32b, 0xdc75, 0xe7e0, 0x9ccc, 0xbdab, 0xdbc5, 0x0, 0x0);
        gbc.writeMem(0xa32b, { 0x28, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdc75);
        EXPECT(gbc.pc(), 0xa39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32b), 0x28);
        EXPECT(gbc.readMem(0xa32c), 0x6d);
        // 28 0028
        gbc.setState(0x8c94, 0x8068, 0xc300, 0x1978, 0xf6a7, 0x6e08, 0x0, 0x0);
        gbc.writeMem(0x8c94, { 0x28, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8068);
        EXPECT(gbc.pc(), 0x8c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c94), 0x28);
        EXPECT(gbc.readMem(0x8c95), 0x1d);
        // 28 0029
        gbc.setState(0x73e1, 0x4090, 0xe2e0, 0x331e, 0x43da, 0x7803, 0x1, 0x0);
        gbc.writeMem(0x73e1, { 0x28, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4090);
        EXPECT(gbc.pc(), 0x7436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 002A
        gbc.setState(0x2507, 0xbd4f, 0x7050, 0x913f, 0x7fd8, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0x2507, { 0x28, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0x2509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 002B
        gbc.setState(0x4c7, 0x424d, 0xf1e0, 0xe30c, 0xcfc5, 0xa24d, 0x0, 0x1);
        gbc.writeMem(0x4c7, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x424d);
        EXPECT(gbc.pc(), 0x47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 002D
        gbc.setState(0x4cc7, 0xbc54, 0xe510, 0x932a, 0xea1c, 0x331b, 0x0, 0x0);
        gbc.writeMem(0x4cc7, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbc54);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 002E
        gbc.setState(0x1465, 0xd401, 0x26a0, 0x96d6, 0xf152, 0xfb24, 0x0, 0x1);
        gbc.writeMem(0x1465, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd401);
        EXPECT(gbc.pc(), 0x14b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 002F
        gbc.setState(0x62d8, 0x7606, 0x8600, 0x49a3, 0x7b0b, 0x7fe6, 0x1, 0x0);
        gbc.writeMem(0x62d8, { 0x28, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7606);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0030
        gbc.setState(0xb454, 0xe7ff, 0xb680, 0x3a86, 0x5913, 0xd0c9, 0x1, 0x1);
        gbc.writeMem(0xb454, { 0x28, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0xb4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb454), 0x28);
        EXPECT(gbc.readMem(0xb455), 0x69);
        // 28 0031
        gbc.setState(0x615e, 0x2586, 0xa1c0, 0xb17b, 0x31e0, 0x458d, 0x0, 0x1);
        gbc.writeMem(0x615e, { 0x28, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2586);
        EXPECT(gbc.pc(), 0x610a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0032
        gbc.setState(0x643a, 0x8f93, 0xc2c0, 0x5dea, 0x8fa7, 0x13eb, 0x0, 0x1);
        gbc.writeMem(0x643a, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8f93);
        EXPECT(gbc.pc(), 0x6411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0033
        gbc.setState(0xcc47, 0x2951, 0xea70, 0x254c, 0x48ab, 0x7bd9, 0x1, 0x0);
        gbc.writeMem(0xcc47, { 0x28, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2951);
        EXPECT(gbc.pc(), 0xcc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc47), 0x28);
        EXPECT(gbc.readMem(0xcc48), 0xd);
        // 28 0034
        gbc.setState(0x62e0, 0xdbea, 0xc650, 0xd7bd, 0xa11d, 0x5b1d, 0x1, 0x1);
        gbc.writeMem(0x62e0, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdbea);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0035
        gbc.setState(0x5e6d, 0xc0f8, 0xe160, 0xed15, 0xe70f, 0x778d, 0x1, 0x1);
        gbc.writeMem(0x5e6d, { 0x28, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc0f8);
        EXPECT(gbc.pc(), 0x5e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0036
        gbc.setState(0x3a65, 0xacf4, 0x37c0, 0x9e12, 0x64f3, 0xc712, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0x28, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xacf4);
        EXPECT(gbc.pc(), 0x3a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0037
        gbc.setState(0x322c, 0x4a87, 0xa650, 0x11d9, 0x2f16, 0x2f54, 0x0, 0x1);
        gbc.writeMem(0x322c, { 0x28, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4a87);
        EXPECT(gbc.pc(), 0x322e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0038
        gbc.setState(0x17df, 0x4206, 0x4740, 0xe0c1, 0x1ff4, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0x17df, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4206);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0039
        gbc.setState(0xa518, 0x4dbb, 0xbb30, 0x808, 0x6282, 0xe371, 0x1, 0x1);
        gbc.writeMem(0xa518, { 0x28, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4dbb);
        EXPECT(gbc.pc(), 0xa51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa518), 0x28);
        EXPECT(gbc.readMem(0xa519), 0xdd);
        // 28 003A
        gbc.setState(0x4e09, 0xaa16, 0x7660, 0x3b21, 0x6788, 0x120, 0x1, 0x1);
        gbc.writeMem(0x4e09, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaa16);
        EXPECT(gbc.pc(), 0x4e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 003B
        gbc.setState(0xedce, 0x4057, 0x9a40, 0xe564, 0x8d9f, 0xd2a0, 0x0, 0x1);
        gbc.writeMem(0xedce, { 0x28, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4057);
        EXPECT(gbc.pc(), 0xedd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedce), 0x28);
        EXPECT(gbc.readMem(0xedcf), 0xbc);
        // 28 003C
        gbc.setState(0x3463, 0xe9dc, 0x380, 0xb1a1, 0xa7fd, 0x36d3, 0x1, 0x0);
        gbc.writeMem(0x3463, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe9dc);
        EXPECT(gbc.pc(), 0x33ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 003D
        gbc.setState(0x7d1c, 0x3142, 0x2c40, 0x3a0f, 0xbcc7, 0x54b5, 0x1, 0x0);
        gbc.writeMem(0x7d1c, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3142);
        EXPECT(gbc.pc(), 0x7d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 003E
        gbc.setState(0xee34, 0xe663, 0xf490, 0xd993, 0x601d, 0x366e, 0x0, 0x1);
        gbc.writeMem(0xee34, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe663);
        EXPECT(gbc.pc(), 0xedd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee34), 0x28);
        EXPECT(gbc.readMem(0xee35), 0x9a);
        // 28 003F
        gbc.setState(0x4c08, 0x34cd, 0x12e0, 0x7388, 0x5baf, 0xcb13, 0x1, 0x1);
        gbc.writeMem(0x4c08, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x34cd);
        EXPECT(gbc.pc(), 0x4c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0040
        gbc.setState(0xb903, 0xee2a, 0xfa60, 0x6c0a, 0x18d2, 0x7d48, 0x0, 0x1);
        gbc.writeMem(0xb903, { 0x28, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xee2a);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0x28);
        EXPECT(gbc.readMem(0xb904), 0xf);
        // 28 0041
        gbc.setState(0xa3f6, 0x3b76, 0xc720, 0x301f, 0xc597, 0xd147, 0x1, 0x1);
        gbc.writeMem(0xa3f6, { 0x28, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3b76);
        EXPECT(gbc.pc(), 0xa3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f6), 0x28);
        EXPECT(gbc.readMem(0xa3f7), 0xea);
        // 28 0042
        gbc.setState(0x5a52, 0x743b, 0xdc30, 0x68cb, 0x8ddd, 0x6e2b, 0x1, 0x0);
        gbc.writeMem(0x5a52, { 0x28, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0x5a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0043
        gbc.setState(0x89, 0x7460, 0xf530, 0x9365, 0x93d2, 0x6266, 0x1, 0x1);
        gbc.writeMem(0x89, { 0x28, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7460);
        EXPECT(gbc.pc(), 0x8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0044
        gbc.setState(0x45cb, 0x9eda, 0xbfb0, 0xc738, 0x1231, 0x2c08, 0x0, 0x0);
        gbc.writeMem(0x45cb, { 0x28, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0x4558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0045
        gbc.setState(0x6baf, 0xecf3, 0xf270, 0xe28b, 0x6188, 0xfd92, 0x1, 0x0);
        gbc.writeMem(0x6baf, { 0x28, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xecf3);
        EXPECT(gbc.pc(), 0x6bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0046
        gbc.setState(0x2d9c, 0xd145, 0x3ff0, 0xde71, 0xbd24, 0xd256, 0x1, 0x1);
        gbc.writeMem(0x2d9c, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd145);
        EXPECT(gbc.pc(), 0x2d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0047
        gbc.setState(0x81d0, 0x22de, 0x5eb0, 0xede5, 0x569a, 0xef4c, 0x1, 0x1);
        gbc.writeMem(0x81d0, { 0x28, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x22de);
        EXPECT(gbc.pc(), 0x8215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d0), 0x28);
        EXPECT(gbc.readMem(0x81d1), 0x43);
        // 28 0048
        gbc.setState(0xd9cf, 0x9cfc, 0x5a50, 0x2c6e, 0x3d85, 0x4c2d, 0x0, 0x1);
        gbc.writeMem(0xd9cf, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9cfc);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cf), 0x28);
        EXPECT(gbc.readMem(0xd9d0), 0xe9);
        // 28 0049
        gbc.setState(0xecde, 0xd0b3, 0x2ae0, 0x8bc3, 0x96c0, 0xc1e7, 0x1, 0x0);
        gbc.writeMem(0xecde, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd0b3);
        EXPECT(gbc.pc(), 0xec64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecde), 0x28);
        EXPECT(gbc.readMem(0xecdf), 0x84);
        // 28 004A
        gbc.setState(0x97ba, 0xbdf, 0x8730, 0xca7, 0xb3a2, 0xb60f, 0x1, 0x1);
        gbc.writeMem(0x97ba, { 0x28, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbdf);
        EXPECT(gbc.pc(), 0x97bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ba), 0x28);
        EXPECT(gbc.readMem(0x97bb), 0x3c);
        // 28 004B
        gbc.setState(0x737c, 0xd116, 0x5690, 0xb5d2, 0x30fa, 0xe0b8, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd116);
        EXPECT(gbc.pc(), 0x737c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 004C
        gbc.setState(0x98e7, 0xc9d, 0xe2e0, 0x6d93, 0x5cb3, 0x7f2c, 0x0, 0x1);
        gbc.writeMem(0x98e7, { 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc9d);
        EXPECT(gbc.pc(), 0x98f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e7), 0x28);
        EXPECT(gbc.readMem(0x98e8), 0xb);
        // 28 004D
        gbc.setState(0xd1f0, 0x2df0, 0xb6e0, 0x72c0, 0x48e7, 0xce33, 0x0, 0x1);
        gbc.writeMem(0xd1f0, { 0x28, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2df0);
        EXPECT(gbc.pc(), 0xd1ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f0), 0x28);
        EXPECT(gbc.readMem(0xd1f1), 0xdc);
        // 28 004E
        gbc.setState(0x2460, 0xd9ca, 0xff30, 0x2f65, 0xc9fc, 0x2836, 0x1, 0x0);
        gbc.writeMem(0x2460, { 0x28, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0x2462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 004F
        gbc.setState(0x9da0, 0xe094, 0xcb90, 0xb55e, 0xa04e, 0x254f, 0x0, 0x0);
        gbc.writeMem(0x9da0, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe094);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da0), 0x28);
        EXPECT(gbc.readMem(0x9da1), 0x57);
        // 28 0050
        gbc.setState(0x9781, 0xbee7, 0xb930, 0x93f4, 0x94eb, 0xb7dd, 0x0, 0x1);
        gbc.writeMem(0x9781, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0x9783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9781), 0x28);
        EXPECT(gbc.readMem(0x9782), 0x98);
        // 28 0051
        gbc.setState(0xe75a, 0x197f, 0x9de0, 0xb510, 0x26fc, 0x1c8a, 0x0, 0x0);
        gbc.writeMem(0xe75a, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x197f);
        EXPECT(gbc.pc(), 0xe728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75a), 0x28);
        EXPECT(gbc.readMem(0xe75b), 0xcc);
        // 28 0052
        gbc.setState(0xe654, 0x86a5, 0x2de0, 0xa2a6, 0xa474, 0x1f8c, 0x1, 0x0);
        gbc.writeMem(0xe654, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x86a5);
        EXPECT(gbc.pc(), 0xe6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe654), 0x28);
        EXPECT(gbc.readMem(0xe655), 0x4b);
        // 28 0053
        gbc.setState(0x440d, 0x463c, 0xefa0, 0x3f80, 0xdb9, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0x440d, { 0x28, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x463c);
        EXPECT(gbc.pc(), 0x4483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0054
        gbc.setState(0x93c6, 0x6cda, 0x4460, 0x5d97, 0x13de, 0xfdde, 0x1, 0x0);
        gbc.writeMem(0x93c6, { 0x28, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6cda);
        EXPECT(gbc.pc(), 0x93c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c6), 0x28);
        EXPECT(gbc.readMem(0x93c7), 0xd3);
        // 28 0056
        gbc.setState(0xca55, 0xbf0e, 0x2e50, 0xc902, 0xcf26, 0x126b, 0x0, 0x1);
        gbc.writeMem(0xca55, { 0x28, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbf0e);
        EXPECT(gbc.pc(), 0xca57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca55), 0x28);
        EXPECT(gbc.readMem(0xca56), 0x52);
        // 28 0058
        gbc.setState(0xde51, 0xeb9f, 0x9ab0, 0xf46e, 0x1986, 0x1c84, 0x1, 0x1);
        gbc.writeMem(0xde51, { 0x28, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xeb9f);
        EXPECT(gbc.pc(), 0xddff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde51), 0x28);
        EXPECT(gbc.readMem(0xde52), 0xac);
        // 28 0059
        gbc.setState(0xc14, 0x24f2, 0xad40, 0x81d2, 0x82b0, 0x1a14, 0x0, 0x1);
        gbc.writeMem(0xc14, { 0x28, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x24f2);
        EXPECT(gbc.pc(), 0xc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 005A
        gbc.setState(0x818a, 0x9c5a, 0x56e0, 0x723b, 0xadfb, 0xfdc0, 0x1, 0x0);
        gbc.writeMem(0x818a, { 0x28, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9c5a);
        EXPECT(gbc.pc(), 0x814a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818a), 0x28);
        EXPECT(gbc.readMem(0x818b), 0xbe);
        // 28 005B
        gbc.setState(0x8fc7, 0x4de, 0xdc0, 0x33ac, 0x43d4, 0xe3eb, 0x1, 0x1);
        gbc.writeMem(0x8fc7, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4de);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc7), 0x28);
        EXPECT(gbc.readMem(0x8fc8), 0xfe);
        // 28 005C
        gbc.setState(0x77a7, 0xb105, 0x66c0, 0xabe5, 0x7516, 0x22bd, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb105);
        EXPECT(gbc.pc(), 0x772e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 005D
        gbc.setState(0x1109, 0xef5, 0x4230, 0x162e, 0x9457, 0xbfb0, 0x0, 0x0);
        gbc.writeMem(0x1109, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xef5);
        EXPECT(gbc.pc(), 0x110b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 005E
        gbc.setState(0x6fc, 0x2665, 0x16d0, 0x42ad, 0xf0f5, 0xfeb0, 0x0, 0x0);
        gbc.writeMem(0x6fc, { 0x28, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2665);
        EXPECT(gbc.pc(), 0x712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 005F
        gbc.setState(0x1848, 0x6e06, 0x9520, 0xf1c2, 0xeb74, 0xc29a, 0x1, 0x0);
        gbc.writeMem(0x1848, { 0x28, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6e06);
        EXPECT(gbc.pc(), 0x184a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0060
        gbc.setState(0x451f, 0xaf6b, 0xb650, 0xe4da, 0xf621, 0xd913, 0x0, 0x1);
        gbc.writeMem(0x451f, { 0x28, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaf6b);
        EXPECT(gbc.pc(), 0x4521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0061
        gbc.setState(0xc254, 0x3ee7, 0x5620, 0x7369, 0x35, 0xe7a5, 0x0, 0x1);
        gbc.writeMem(0xc254, { 0x28, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3ee7);
        EXPECT(gbc.pc(), 0xc256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc254), 0x28);
        EXPECT(gbc.readMem(0xc255), 0xc0);
        // 28 0062
        gbc.setState(0x49fe, 0x5882, 0xcfc0, 0xf9c, 0x401d, 0x5eaa, 0x0, 0x1);
        gbc.writeMem(0x49fe, { 0x28, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5882);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0063
        gbc.setState(0x5ad2, 0xc9fd, 0x8380, 0x86fe, 0xdd92, 0xee37, 0x0, 0x0);
        gbc.writeMem(0x5ad2, { 0x28, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc9fd);
        EXPECT(gbc.pc(), 0x5b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0064
        gbc.setState(0x67c, 0xb8f8, 0x370, 0xcb9d, 0xe36a, 0x2672, 0x0, 0x1);
        gbc.writeMem(0x67c, { 0x28, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb8f8);
        EXPECT(gbc.pc(), 0x67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0065
        gbc.setState(0xb233, 0xc0a5, 0x7680, 0x7aff, 0xd1a7, 0xf694, 0x0, 0x0);
        gbc.writeMem(0xb233, { 0x28, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc0a5);
        EXPECT(gbc.pc(), 0xb217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb233), 0x28);
        EXPECT(gbc.readMem(0xb234), 0xe2);
        // 28 0066
        gbc.setState(0x87b9, 0x165e, 0x8e20, 0x86a7, 0xa073, 0xc3de, 0x1, 0x0);
        gbc.writeMem(0x87b9, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x165e);
        EXPECT(gbc.pc(), 0x87bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b9), 0x28);
        EXPECT(gbc.readMem(0x87ba), 0x9a);
        // 28 0067
        gbc.setState(0x56e2, 0x9172, 0x9910, 0x416a, 0xc0aa, 0xa704, 0x0, 0x0);
        gbc.writeMem(0x56e2, { 0x28, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9172);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0068
        gbc.setState(0x27b8, 0x679d, 0x24b0, 0x6cb6, 0x6ee, 0x838f, 0x0, 0x1);
        gbc.writeMem(0x27b8, { 0x28, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x679d);
        EXPECT(gbc.pc(), 0x2748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0069
        gbc.setState(0x459a, 0x3c8c, 0x5e40, 0xb885, 0x5cae, 0x74a, 0x1, 0x1);
        gbc.writeMem(0x459a, { 0x28, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3c8c);
        EXPECT(gbc.pc(), 0x459c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 006A
        gbc.setState(0xc596, 0xf201, 0x8a90, 0xc51f, 0xcddb, 0x65d8, 0x0, 0x1);
        gbc.writeMem(0xc596, { 0x28, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf201);
        EXPECT(gbc.pc(), 0xc5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc596), 0x28);
        EXPECT(gbc.readMem(0xc597), 0x47);
        // 28 006B
        gbc.setState(0x2ad1, 0x10c5, 0x7250, 0x70d0, 0x88fa, 0x9f69, 0x0, 0x1);
        gbc.writeMem(0x2ad1, { 0x28, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x10c5);
        EXPECT(gbc.pc(), 0x2ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 006C
        gbc.setState(0xae10, 0x7f2b, 0x8390, 0x261f, 0x1c3c, 0x8757, 0x0, 0x1);
        gbc.writeMem(0xae10, { 0x28, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7f2b);
        EXPECT(gbc.pc(), 0xadd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae10), 0x28);
        EXPECT(gbc.readMem(0xae11), 0xc7);
        // 28 006D
        gbc.setState(0xe9b2, 0x3cf0, 0xb630, 0x5480, 0x4d6f, 0xcfa1, 0x0, 0x0);
        gbc.writeMem(0xe9b2, { 0x28, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3cf0);
        EXPECT(gbc.pc(), 0xe9b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b2), 0x28);
        EXPECT(gbc.readMem(0xe9b3), 0x23);
        // 28 006E
        gbc.setState(0x973b, 0xf8d7, 0x4410, 0x511d, 0x4be6, 0x25b5, 0x0, 0x1);
        gbc.writeMem(0x973b, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf8d7);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973b), 0x28);
        EXPECT(gbc.readMem(0x973c), 0xcc);
        // 28 006F
        gbc.setState(0x254e, 0x18f9, 0x1a20, 0x88bc, 0x91b, 0xd34f, 0x1, 0x0);
        gbc.writeMem(0x254e, { 0x28, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x18f9);
        EXPECT(gbc.pc(), 0x2550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0070
        gbc.setState(0xe091, 0xf755, 0x30b0, 0xc873, 0x8ae, 0x9acc, 0x0, 0x0);
        gbc.writeMem(0xe091, { 0x28, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf755);
        EXPECT(gbc.pc(), 0xe0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe091), 0x28);
        EXPECT(gbc.readMem(0xe092), 0x51);
        // 28 0071
        gbc.setState(0x34cb, 0x6d70, 0xe030, 0xfb45, 0xea57, 0x3c00, 0x1, 0x1);
        gbc.writeMem(0x34cb, { 0x28, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6d70);
        EXPECT(gbc.pc(), 0x34cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0072
        gbc.setState(0xae73, 0xed3d, 0xa850, 0xd6b3, 0x2447, 0x7b75, 0x0, 0x1);
        gbc.writeMem(0xae73, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xed3d);
        EXPECT(gbc.pc(), 0xae75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae73), 0x28);
        EXPECT(gbc.readMem(0xae74), 0x4b);
        // 28 0073
        gbc.setState(0x1331, 0x7321, 0xd070, 0xb1af, 0x3059, 0x3319, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0x28, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7321);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0074
        gbc.setState(0x2992, 0x75e0, 0xfbe0, 0xbe21, 0x215f, 0x4adb, 0x0, 0x1);
        gbc.writeMem(0x2992, { 0x28, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x75e0);
        EXPECT(gbc.pc(), 0x29a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0075
        gbc.setState(0x3a76, 0xd72a, 0x8160, 0x699d, 0x25c0, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x3a76, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd72a);
        EXPECT(gbc.pc(), 0x3a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0076
        gbc.setState(0x7866, 0xbb5e, 0x3690, 0xfd79, 0x90c2, 0xd8a0, 0x1, 0x1);
        gbc.writeMem(0x7866, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbb5e);
        EXPECT(gbc.pc(), 0x78cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0077
        gbc.setState(0xd3e7, 0x548c, 0x73b0, 0x7628, 0xff3, 0x6a82, 0x1, 0x0);
        gbc.writeMem(0xd3e7, { 0x28, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0xd3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e7), 0x28);
        EXPECT(gbc.readMem(0xd3e8), 0xe5);
        // 28 0078
        gbc.setState(0x34c9, 0xdce5, 0x42e0, 0xf864, 0x71ff, 0xc881, 0x0, 0x1);
        gbc.writeMem(0x34c9, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdce5);
        EXPECT(gbc.pc(), 0x3465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0079
        gbc.setState(0x4d35, 0x214f, 0xe8e0, 0x9069, 0xa151, 0x5cc6, 0x1, 0x0);
        gbc.writeMem(0x4d35, { 0x28, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x214f);
        EXPECT(gbc.pc(), 0x4da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 007A
        gbc.setState(0x34e7, 0x1bb6, 0xbe30, 0x1900, 0x910b, 0x5f38, 0x0, 0x1);
        gbc.writeMem(0x34e7, { 0x28, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1bb6);
        EXPECT(gbc.pc(), 0x34e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 007B
        gbc.setState(0xf7e, 0x35df, 0xa660, 0x4d47, 0x2b6b, 0x3efd, 0x1, 0x0);
        gbc.writeMem(0xf7e, { 0x28, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x35df);
        EXPECT(gbc.pc(), 0xf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 007C
        gbc.setState(0x1984, 0x4937, 0xd8e0, 0x93a0, 0x1101, 0xb9d, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4937);
        EXPECT(gbc.pc(), 0x1933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 007D
        gbc.setState(0xc07c, 0x1f0, 0x8b50, 0x9a58, 0xb59d, 0x1110, 0x1, 0x1);
        gbc.writeMem(0xc07c, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1f0);
        EXPECT(gbc.pc(), 0xc07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07c), 0x28);
        EXPECT(gbc.readMem(0xc07d), 0x19);
        // 28 007E
        gbc.setState(0xda45, 0x2994, 0x66d0, 0xc8a, 0x566a, 0xe30a, 0x0, 0x1);
        gbc.writeMem(0xda45, { 0x28, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2994);
        EXPECT(gbc.pc(), 0xda14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda45), 0x28);
        EXPECT(gbc.readMem(0xda46), 0xcd);
        // 28 007F
        gbc.setState(0xd00f, 0x7093, 0xe040, 0xfed6, 0x5dce, 0x87eb, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0x28, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7093);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00f), 0x28);
        EXPECT(gbc.readMem(0xd010), 0x45);
        // 28 0080
        gbc.setState(0xd63b, 0x7cfe, 0x3dc0, 0x8717, 0xbd68, 0xca58, 0x1, 0x1);
        gbc.writeMem(0xd63b, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7cfe);
        EXPECT(gbc.pc(), 0xd5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63b), 0x28);
        EXPECT(gbc.readMem(0xd63c), 0x9a);
        // 28 0081
        gbc.setState(0x9d83, 0x7767, 0x9f30, 0x3e5d, 0x2e67, 0x1fa, 0x0, 0x1);
        gbc.writeMem(0x9d83, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7767);
        EXPECT(gbc.pc(), 0x9d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d83), 0x28);
        EXPECT(gbc.readMem(0x9d84), 0x4b);
        // 28 0082
        gbc.setState(0xe8f5, 0x233f, 0xd240, 0x6468, 0xe50e, 0xc45f, 0x1, 0x1);
        gbc.writeMem(0xe8f5, { 0x28, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x233f);
        EXPECT(gbc.pc(), 0xe8f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f5), 0x28);
        EXPECT(gbc.readMem(0xe8f6), 0x3b);
        // 28 0083
        gbc.setState(0xd67d, 0x2561, 0xe5d0, 0x583f, 0xdcb0, 0xc06e, 0x1, 0x1);
        gbc.writeMem(0xd67d, { 0x28, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2561);
        EXPECT(gbc.pc(), 0xd6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67d), 0x28);
        EXPECT(gbc.readMem(0xd67e), 0x2a);
        // 28 0084
        gbc.setState(0x184d, 0xd88b, 0xb7e0, 0x6210, 0x2f93, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0x28, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd88b);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0085
        gbc.setState(0x84a6, 0x3159, 0xffb0, 0x2710, 0xb98a, 0x5fd5, 0x0, 0x1);
        gbc.writeMem(0x84a6, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3159);
        EXPECT(gbc.pc(), 0x84f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a6), 0x28);
        EXPECT(gbc.readMem(0x84a7), 0x4d);
        // 28 0086
        gbc.setState(0x20b2, 0x1c3, 0x6130, 0xcddf, 0xb05d, 0xf094, 0x0, 0x0);
        gbc.writeMem(0x20b2, { 0x28, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1c3);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0087
        gbc.setState(0x8518, 0x5741, 0x73b0, 0xd81b, 0x564, 0xee06, 0x1, 0x1);
        gbc.writeMem(0x8518, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5741);
        EXPECT(gbc.pc(), 0x8507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8518), 0x28);
        EXPECT(gbc.readMem(0x8519), 0xed);
        // 28 0088
        gbc.setState(0x19fc, 0xf24, 0x2a50, 0x7bb, 0x20b1, 0xf332, 0x1, 0x0);
        gbc.writeMem(0x19fc, { 0x28, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf24);
        EXPECT(gbc.pc(), 0x19fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0089
        gbc.setState(0xc697, 0xebea, 0x3a20, 0x4f5c, 0x3490, 0xf24, 0x1, 0x1);
        gbc.writeMem(0xc697, { 0x28, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xebea);
        EXPECT(gbc.pc(), 0xc699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc697), 0x28);
        EXPECT(gbc.readMem(0xc698), 0x8d);
        // 28 008A
        gbc.setState(0x6afb, 0x84f1, 0x5dd0, 0x7dd0, 0xfd82, 0xfb0, 0x0, 0x0);
        gbc.writeMem(0x6afb, { 0x28, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x84f1);
        EXPECT(gbc.pc(), 0x6b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 008B
        gbc.setState(0xdc34, 0xdd84, 0x6b30, 0xe59d, 0xdfca, 0x8728, 0x0, 0x0);
        gbc.writeMem(0xdc34, { 0x28, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdd84);
        EXPECT(gbc.pc(), 0xdc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc34), 0x28);
        EXPECT(gbc.readMem(0xdc35), 0xf7);
        // 28 008C
        gbc.setState(0x21e3, 0xc4c0, 0xc1f0, 0x6235, 0x729e, 0xa57c, 0x1, 0x1);
        gbc.writeMem(0x21e3, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc4c0);
        EXPECT(gbc.pc(), 0x2264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 008D
        gbc.setState(0x907a, 0x1173, 0x6e40, 0x3173, 0xa5f4, 0x71d7, 0x0, 0x0);
        gbc.writeMem(0x907a, { 0x28, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1173);
        EXPECT(gbc.pc(), 0x907c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907a), 0x28);
        EXPECT(gbc.readMem(0x907b), 0xe1);
        // 28 008E
        gbc.setState(0xd1d6, 0x8ac3, 0xfc10, 0x4928, 0xdb63, 0xb19a, 0x1, 0x0);
        gbc.writeMem(0xd1d6, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8ac3);
        EXPECT(gbc.pc(), 0xd1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d6), 0x28);
        EXPECT(gbc.readMem(0xd1d7), 0x7f);
        // 28 008F
        gbc.setState(0x1d4c, 0x2827, 0x7ec0, 0xdb44, 0x168b, 0x7fe9, 0x1, 0x1);
        gbc.writeMem(0x1d4c, { 0x28, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2827);
        EXPECT(gbc.pc(), 0x1d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0090
        gbc.setState(0x77d1, 0xb287, 0xa740, 0xdcc1, 0x8c9e, 0x94c7, 0x0, 0x0);
        gbc.writeMem(0x77d1, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb287);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0091
        gbc.setState(0x8d7d, 0x4a2b, 0x7d0, 0x3ce1, 0x893f, 0xf561, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x28, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4a2b);
        EXPECT(gbc.pc(), 0x8d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7d), 0x28);
        EXPECT(gbc.readMem(0x8d7e), 0xc2);
        // 28 0092
        gbc.setState(0xbbd8, 0x8c18, 0xadc0, 0xa379, 0x7d89, 0x1271, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0x28, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8c18);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd8), 0x28);
        EXPECT(gbc.readMem(0xbbd9), 0x34);
        // 28 0093
        gbc.setState(0x2eec, 0x552, 0xb20, 0xc3f0, 0xdb61, 0xafd6, 0x0, 0x1);
        gbc.writeMem(0x2eec, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x552);
        EXPECT(gbc.pc(), 0x2eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0094
        gbc.setState(0x9e3e, 0xf3ec, 0xc530, 0xe06b, 0x1d6, 0xbbc, 0x1, 0x1);
        gbc.writeMem(0x9e3e, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x9e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e3e), 0x28);
        EXPECT(gbc.readMem(0x9e3f), 0x56);
        // 28 0095
        gbc.setState(0x60e8, 0xb6c5, 0xbed0, 0xf659, 0x874a, 0x1f1e, 0x1, 0x0);
        gbc.writeMem(0x60e8, { 0x28, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb6c5);
        EXPECT(gbc.pc(), 0x611e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0096
        gbc.setState(0x6cd3, 0x1e9a, 0x80d0, 0x3dac, 0x7429, 0x1c97, 0x1, 0x1);
        gbc.writeMem(0x6cd3, { 0x28, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1e9a);
        EXPECT(gbc.pc(), 0x6ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0097
        gbc.setState(0xbff4, 0x5b54, 0x78a0, 0x3ee1, 0x45d3, 0xb672, 0x1, 0x0);
        gbc.writeMem(0xbff4, { 0x28, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5b54);
        EXPECT(gbc.pc(), 0xc029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff4), 0x28);
        EXPECT(gbc.readMem(0xbff5), 0x33);
        // 28 0098
        gbc.setState(0x33ce, 0x7ac8, 0x1c50, 0xb6f5, 0xc9f4, 0xffcb, 0x1, 0x0);
        gbc.writeMem(0x33ce, { 0x28, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0x33d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0099
        gbc.setState(0x24f8, 0xd3e8, 0xec40, 0xb6aa, 0x4df2, 0x5ba1, 0x1, 0x0);
        gbc.writeMem(0x24f8, { 0x28, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd3e8);
        EXPECT(gbc.pc(), 0x24fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 009A
        gbc.setState(0x65f, 0xba65, 0x1b40, 0x18a4, 0x9ce8, 0x9776, 0x0, 0x0);
        gbc.writeMem(0x65f, { 0x28, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xba65);
        EXPECT(gbc.pc(), 0x661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 009B
        gbc.setState(0x21c9, 0x437f, 0xa350, 0xe10c, 0x7b26, 0x5ac0, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x28, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 009C
        gbc.setState(0x6a37, 0x5010, 0x4b60, 0xa589, 0xa727, 0xf020, 0x1, 0x0);
        gbc.writeMem(0x6a37, { 0x28, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5010);
        EXPECT(gbc.pc(), 0x6a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 009E
        gbc.setState(0x8758, 0x36ef, 0xffa0, 0xa774, 0xf52, 0x23a0, 0x1, 0x1);
        gbc.writeMem(0x8758, { 0x28, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x36ef);
        EXPECT(gbc.pc(), 0x873c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8758), 0x28);
        EXPECT(gbc.readMem(0x8759), 0xe2);
        // 28 009F
        gbc.setState(0x9623, 0xb403, 0x55c0, 0x7cb7, 0x4fe2, 0xeeb5, 0x0, 0x0);
        gbc.writeMem(0x9623, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb403);
        EXPECT(gbc.pc(), 0x95c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9623), 0x28);
        EXPECT(gbc.readMem(0x9624), 0x9e);
        // 28 00A0
        gbc.setState(0x1213, 0x64c2, 0x8da0, 0x2982, 0xf297, 0xd722, 0x1, 0x0);
        gbc.writeMem(0x1213, { 0x28, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x64c2);
        EXPECT(gbc.pc(), 0x11d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00A1
        gbc.setState(0x42b3, 0x2fc8, 0xb8d0, 0x4f0e, 0xd2ed, 0x7580, 0x1, 0x1);
        gbc.writeMem(0x42b3, { 0x28, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2fc8);
        EXPECT(gbc.pc(), 0x423d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00A2
        gbc.setState(0xeb51, 0x6b67, 0xcd00, 0xebd9, 0x5ca2, 0x31bd, 0x0, 0x1);
        gbc.writeMem(0xeb51, { 0x28, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6b67);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb51), 0x28);
        EXPECT(gbc.readMem(0xeb52), 0x36);
        // 28 00A3
        gbc.setState(0xda7f, 0xc601, 0x1960, 0x9de5, 0xfe7e, 0x40e2, 0x1, 0x1);
        gbc.writeMem(0xda7f, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0xda81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7f), 0x28);
        EXPECT(gbc.readMem(0xda80), 0x56);
        // 28 00A4
        gbc.setState(0xb52b, 0xbc05, 0xa80, 0xc144, 0x90e7, 0xff27, 0x0, 0x1);
        gbc.writeMem(0xb52b, { 0x28, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbc05);
        EXPECT(gbc.pc(), 0xb550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb52b), 0x28);
        EXPECT(gbc.readMem(0xb52c), 0x23);
        // 28 00A5
        gbc.setState(0x1675, 0xf548, 0x2420, 0xae36, 0xbb65, 0x83e1, 0x0, 0x0);
        gbc.writeMem(0x1675, { 0x28, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf548);
        EXPECT(gbc.pc(), 0x1677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00A6
        gbc.setState(0xb9e6, 0xcafe, 0x6190, 0x7d99, 0x5668, 0xabca, 0x1, 0x0);
        gbc.writeMem(0xb9e6, { 0x28, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcafe);
        EXPECT(gbc.pc(), 0xb99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e6), 0x28);
        EXPECT(gbc.readMem(0xb9e7), 0xb6);
        // 28 00A7
        gbc.setState(0x1524, 0x8278, 0x91a0, 0xc4c2, 0x81fd, 0x4f31, 0x0, 0x1);
        gbc.writeMem(0x1524, { 0x28, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8278);
        EXPECT(gbc.pc(), 0x152d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00A8
        gbc.setState(0x13c9, 0x272e, 0x390, 0x8631, 0x6012, 0x1abf, 0x1, 0x1);
        gbc.writeMem(0x13c9, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x272e);
        EXPECT(gbc.pc(), 0x1408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00A9
        gbc.setState(0x780f, 0x7679, 0x85d0, 0x161a, 0xef46, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x780f, { 0x28, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7679);
        EXPECT(gbc.pc(), 0x77ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00AA
        gbc.setState(0x56e7, 0x7b22, 0x7870, 0x85d2, 0x6519, 0x7185, 0x0, 0x1);
        gbc.writeMem(0x56e7, { 0x28, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7b22);
        EXPECT(gbc.pc(), 0x56e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00AB
        gbc.setState(0x40c6, 0xf6d4, 0xf370, 0x95d1, 0x3bb9, 0xad15, 0x0, 0x1);
        gbc.writeMem(0x40c6, { 0x28, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0x40c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00AC
        gbc.setState(0x7514, 0x7d37, 0x3e30, 0x3ab5, 0xda3a, 0x70b0, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0x28, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7d37);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00AD
        gbc.setState(0x4216, 0x36b1, 0x20a0, 0xc36, 0x16dd, 0x3b63, 0x0, 0x0);
        gbc.writeMem(0x4216, { 0x28, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x36b1);
        EXPECT(gbc.pc(), 0x4282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00AE
        gbc.setState(0x5a8d, 0xa960, 0x6400, 0x18bd, 0x973f, 0xee70, 0x0, 0x1);
        gbc.writeMem(0x5a8d, { 0x28, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa960);
        EXPECT(gbc.pc(), 0x5a8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00AF
        gbc.setState(0xd6f9, 0xbad3, 0x4be0, 0x9a8d, 0x4cf9, 0xfb9, 0x0, 0x0);
        gbc.writeMem(0xd6f9, { 0x28, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbad3);
        EXPECT(gbc.pc(), 0xd701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f9), 0x28);
        EXPECT(gbc.readMem(0xd6fa), 0x6);
        // 28 00B0
        gbc.setState(0x4cf4, 0x7a5b, 0xa080, 0x8c6d, 0xe17e, 0x898, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7a5b);
        EXPECT(gbc.pc(), 0x4cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00B1
        gbc.setState(0x7ef1, 0xae9, 0x8f60, 0x3307, 0xc43d, 0xaef2, 0x1, 0x0);
        gbc.writeMem(0x7ef1, { 0x28, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xae9);
        EXPECT(gbc.pc(), 0x7ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00B2
        gbc.setState(0x5eaf, 0x55c5, 0x53a0, 0xc0c7, 0xddd9, 0x84e2, 0x1, 0x1);
        gbc.writeMem(0x5eaf, { 0x28, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x55c5);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00B3
        gbc.setState(0x3124, 0xfb00, 0xee90, 0x2d3b, 0xd0eb, 0x51bc, 0x1, 0x0);
        gbc.writeMem(0x3124, { 0x28, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfb00);
        EXPECT(gbc.pc(), 0x3145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00B4
        gbc.setState(0x6f3f, 0x4512, 0xc70, 0x4b5a, 0x669c, 0x10c6, 0x1, 0x1);
        gbc.writeMem(0x6f3f, { 0x28, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4512);
        EXPECT(gbc.pc(), 0x6f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00B6
        gbc.setState(0x223d, 0x7717, 0xc6a0, 0x53e7, 0x5273, 0xcef3, 0x1, 0x0);
        gbc.writeMem(0x223d, { 0x28, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7717);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00B7
        gbc.setState(0xb4ae, 0x936e, 0x8680, 0x5061, 0x3557, 0x9ec, 0x0, 0x0);
        gbc.writeMem(0xb4ae, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x936e);
        EXPECT(gbc.pc(), 0xb4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ae), 0x28);
        EXPECT(gbc.readMem(0xb4af), 0x19);
        // 28 00B8
        gbc.setState(0xa172, 0x346e, 0xc170, 0xd68e, 0xbbfa, 0xa56, 0x1, 0x0);
        gbc.writeMem(0xa172, { 0x28, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x346e);
        EXPECT(gbc.pc(), 0xa174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa172), 0x28);
        EXPECT(gbc.readMem(0xa173), 0x92);
        // 28 00B9
        gbc.setState(0x9e24, 0xa398, 0x93c0, 0x745a, 0xba20, 0x709f, 0x0, 0x0);
        gbc.writeMem(0x9e24, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa398);
        EXPECT(gbc.pc(), 0x9e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e24), 0x28);
        EXPECT(gbc.readMem(0x9e25), 0x4b);
        // 28 00BA
        gbc.setState(0xb531, 0x3a4f, 0xa850, 0x40b1, 0x6da, 0x5694, 0x0, 0x1);
        gbc.writeMem(0xb531, { 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a4f);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb531), 0x28);
        EXPECT(gbc.readMem(0xb532), 0xb);
        // 28 00BB
        gbc.setState(0x8bf7, 0x64d1, 0x56a0, 0x2278, 0xabd0, 0xe70e, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0x28, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0x8b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf7), 0x28);
        EXPECT(gbc.readMem(0x8bf8), 0x8b);
        // 28 00BC
        gbc.setState(0x7591, 0x4647, 0x2900, 0x6651, 0x4962, 0x4bf, 0x1, 0x1);
        gbc.writeMem(0x7591, { 0x28, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4647);
        EXPECT(gbc.pc(), 0x7593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00BD
        gbc.setState(0x6509, 0xca6f, 0x4100, 0xfa58, 0x90ff, 0xc72b, 0x0, 0x0);
        gbc.writeMem(0x6509, { 0x28, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xca6f);
        EXPECT(gbc.pc(), 0x650b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00BE
        gbc.setState(0xb2e7, 0x679, 0x9fc0, 0x5be8, 0xc92c, 0x5217, 0x1, 0x1);
        gbc.writeMem(0xb2e7, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x679);
        EXPECT(gbc.pc(), 0xb30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e7), 0x28);
        EXPECT(gbc.readMem(0xb2e8), 0x26);
        // 28 00C1
        gbc.setState(0xb8ad, 0x4a86, 0xda80, 0x9285, 0xe3db, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0xb8ad, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4a86);
        EXPECT(gbc.pc(), 0xb8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ad), 0x28);
        EXPECT(gbc.readMem(0xb8ae), 0x2);
        // 28 00C2
        gbc.setState(0x4be4, 0xa66c, 0x20f0, 0x1ba2, 0x684c, 0xce3e, 0x0, 0x1);
        gbc.writeMem(0x4be4, { 0x28, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa66c);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00C3
        gbc.setState(0x7742, 0x3811, 0x1690, 0xa728, 0x3584, 0xd250, 0x0, 0x1);
        gbc.writeMem(0x7742, { 0x28, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3811);
        EXPECT(gbc.pc(), 0x7745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00C4
        gbc.setState(0x3234, 0x1fae, 0x6cc0, 0xb5ee, 0xfbb, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0x3234, { 0x28, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1fae);
        EXPECT(gbc.pc(), 0x3231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00C5
        gbc.setState(0xdeac, 0x4e34, 0x3b40, 0x5fc6, 0xaf5b, 0xf7e9, 0x0, 0x0);
        gbc.writeMem(0xdeac, { 0x28, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4e34);
        EXPECT(gbc.pc(), 0xdeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeac), 0x28);
        EXPECT(gbc.readMem(0xdead), 0xfb);
        // 28 00C6
        gbc.setState(0xd56d, 0xea5a, 0x2c20, 0x598a, 0x1535, 0x5b76, 0x1, 0x1);
        gbc.writeMem(0xd56d, { 0x28, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xea5a);
        EXPECT(gbc.pc(), 0xd56f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56d), 0x28);
        EXPECT(gbc.readMem(0xd56e), 0x5b);
        // 28 00C7
        gbc.setState(0x1894, 0xef4f, 0xa320, 0xb37d, 0x9457, 0xf5f, 0x1, 0x1);
        gbc.writeMem(0x1894, { 0x28, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xef4f);
        EXPECT(gbc.pc(), 0x1896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00C8
        gbc.setState(0xa98b, 0xd1ba, 0x9f30, 0x5070, 0x18d2, 0x1748, 0x1, 0x1);
        gbc.writeMem(0xa98b, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd1ba);
        EXPECT(gbc.pc(), 0xa98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98b), 0x28);
        EXPECT(gbc.readMem(0xa98c), 0x54);
        // 28 00C9
        gbc.setState(0x35a2, 0xe322, 0x69a0, 0x3c28, 0x6cc0, 0xd158, 0x0, 0x1);
        gbc.writeMem(0x35a2, { 0x28, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0x35d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00CA
        gbc.setState(0xa3ac, 0xff36, 0xd440, 0x5ce8, 0x9710, 0x529b, 0x1, 0x0);
        gbc.writeMem(0xa3ac, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0xa3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ac), 0x28);
        EXPECT(gbc.readMem(0xa3ad), 0x19);
        // 28 00CB
        gbc.setState(0xe0e7, 0xc884, 0x1770, 0x933d, 0x893e, 0x1014, 0x1, 0x1);
        gbc.writeMem(0xe0e7, { 0x28, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc884);
        EXPECT(gbc.pc(), 0xe0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e7), 0x28);
        EXPECT(gbc.readMem(0xe0e8), 0xf6);
        // 28 00CC
        gbc.setState(0xaa2c, 0xd3da, 0x5f90, 0xc905, 0x1d22, 0xdb49, 0x1, 0x0);
        gbc.writeMem(0xaa2c, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd3da);
        EXPECT(gbc.pc(), 0xaa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2c), 0x28);
        EXPECT(gbc.readMem(0xaa2d), 0x20);
        // 28 00CD
        gbc.setState(0x3ac9, 0x2d00, 0x8b30, 0x2ebb, 0xc6dd, 0x3f14, 0x0, 0x0);
        gbc.writeMem(0x3ac9, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2d00);
        EXPECT(gbc.pc(), 0x3acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00CE
        gbc.setState(0x7b15, 0x85c8, 0x2a90, 0x13f0, 0x585b, 0xcfef, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0x28, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x85c8);
        EXPECT(gbc.pc(), 0x7b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00CF
        gbc.setState(0x2aad, 0x4633, 0x50f0, 0x46d5, 0x539f, 0x293b, 0x1, 0x1);
        gbc.writeMem(0x2aad, { 0x28, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4633);
        EXPECT(gbc.pc(), 0x2b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00D0
        gbc.setState(0x2067, 0xd50e, 0x1640, 0x4885, 0x1aae, 0x3a44, 0x1, 0x0);
        gbc.writeMem(0x2067, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd50e);
        EXPECT(gbc.pc(), 0x2069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00D1
        gbc.setState(0xe074, 0x2be6, 0x3ed0, 0x8033, 0x796a, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0xe074, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2be6);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe074), 0x28);
        EXPECT(gbc.readMem(0xe075), 0x2);
        // 28 00D2
        gbc.setState(0x2c3d, 0x80bd, 0x3920, 0x500a, 0xa9f8, 0xd04, 0x0, 0x1);
        gbc.writeMem(0x2c3d, { 0x28, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x80bd);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00D3
        gbc.setState(0xeedc, 0x8b43, 0x70, 0xd9b2, 0x15a0, 0xdefe, 0x1, 0x1);
        gbc.writeMem(0xeedc, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8b43);
        EXPECT(gbc.pc(), 0xeede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeedc), 0x28);
        EXPECT(gbc.readMem(0xeedd), 0xb5);
        // 28 00D4
        gbc.setState(0x52d, 0xe9db, 0xcc10, 0x3741, 0x2bc5, 0x9744, 0x1, 0x1);
        gbc.writeMem(0x52d, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe9db);
        EXPECT(gbc.pc(), 0x52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00D5
        gbc.setState(0x3105, 0xde1c, 0x1530, 0x7be2, 0xe80, 0x9ce5, 0x1, 0x1);
        gbc.writeMem(0x3105, { 0x28, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xde1c);
        EXPECT(gbc.pc(), 0x3107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00D6
        gbc.setState(0x1b6, 0xa91e, 0xa590, 0x4755, 0x210d, 0x9def, 0x1, 0x1);
        gbc.writeMem(0x1b6, { 0x28, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa91e);
        EXPECT(gbc.pc(), 0x168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00D7
        gbc.setState(0xa116, 0x5748, 0xdd40, 0xde98, 0xff0e, 0xf76, 0x0, 0x1);
        gbc.writeMem(0xa116, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5748);
        EXPECT(gbc.pc(), 0xa118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa116), 0x28);
        EXPECT(gbc.readMem(0xa117), 0xd5);
        // 28 00D9
        gbc.setState(0x61d9, 0xe40f, 0x9f60, 0x1244, 0x8039, 0x512d, 0x1, 0x0);
        gbc.writeMem(0x61d9, { 0x28, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe40f);
        EXPECT(gbc.pc(), 0x61db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00DA
        gbc.setState(0x59d3, 0x916f, 0x4b40, 0x356a, 0x97cd, 0x69, 0x1, 0x0);
        gbc.writeMem(0x59d3, { 0x28, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x916f);
        EXPECT(gbc.pc(), 0x59d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00DB
        gbc.setState(0xc97d, 0x77e7, 0x4220, 0x9674, 0x1589, 0x549a, 0x0, 0x1);
        gbc.writeMem(0xc97d, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x77e7);
        EXPECT(gbc.pc(), 0xc97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97d), 0x28);
        EXPECT(gbc.readMem(0xc97e), 0x7f);
        // 28 00DC
        gbc.setState(0xd7d5, 0x3a3f, 0xdd60, 0x167f, 0x2de, 0xa045, 0x1, 0x0);
        gbc.writeMem(0xd7d5, { 0x28, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3a3f);
        EXPECT(gbc.pc(), 0xd7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d5), 0x28);
        EXPECT(gbc.readMem(0xd7d6), 0xdc);
        // 28 00DD
        gbc.setState(0x6064, 0xb404, 0x3360, 0xe060, 0x2554, 0x437c, 0x0, 0x0);
        gbc.writeMem(0x6064, { 0x28, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb404);
        EXPECT(gbc.pc(), 0x6066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00DE
        gbc.setState(0xcc10, 0xe6e3, 0xc8e0, 0x7514, 0x7c51, 0xdabe, 0x1, 0x0);
        gbc.writeMem(0xcc10, { 0x28, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe6e3);
        EXPECT(gbc.pc(), 0xcbd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc10), 0x28);
        EXPECT(gbc.readMem(0xcc11), 0xc2);
        // 28 00DF
        gbc.setState(0x51fd, 0x8100, 0x450, 0xf5a9, 0x7cc0, 0x694d, 0x0, 0x0);
        gbc.writeMem(0x51fd, { 0x28, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8100);
        EXPECT(gbc.pc(), 0x51ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00E0
        gbc.setState(0xcc0, 0x79bf, 0x3600, 0x8a53, 0x88f7, 0xe9ad, 0x0, 0x0);
        gbc.writeMem(0xcc0, { 0x28, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x79bf);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00E1
        gbc.setState(0xd3b, 0xf014, 0x7690, 0x2fca, 0xc245, 0x3e48, 0x1, 0x0);
        gbc.writeMem(0xd3b, { 0x28, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf014);
        EXPECT(gbc.pc(), 0xd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00E2
        gbc.setState(0xaa15, 0xa515, 0x3bf0, 0x9087, 0x34f2, 0xf7b3, 0x0, 0x1);
        gbc.writeMem(0xaa15, { 0x28, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa515);
        EXPECT(gbc.pc(), 0xaa8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa15), 0x28);
        EXPECT(gbc.readMem(0xaa16), 0x78);
        // 28 00E3
        gbc.setState(0xd461, 0xca, 0xbb80, 0x7771, 0xebee, 0x65b9, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0x28, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xca);
        EXPECT(gbc.pc(), 0xd463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd461), 0x28);
        EXPECT(gbc.readMem(0xd462), 0x0);
        // 28 00E4
        gbc.setState(0x437c, 0x5816, 0x9450, 0x251b, 0x5660, 0x3c97, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0x28, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5816);
        EXPECT(gbc.pc(), 0x437e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00E5
        gbc.setState(0xb2e6, 0x1c92, 0x1820, 0xfe75, 0x39fb, 0x53fc, 0x1, 0x1);
        gbc.writeMem(0xb2e6, { 0x28, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1c92);
        EXPECT(gbc.pc(), 0xb2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e6), 0x28);
        EXPECT(gbc.readMem(0xb2e7), 0x94);
        // 28 00E6
        gbc.setState(0x5052, 0x5818, 0x8570, 0x2fa1, 0x5c9b, 0xdbee, 0x0, 0x1);
        gbc.writeMem(0x5052, { 0x28, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5818);
        EXPECT(gbc.pc(), 0x5054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00E7
        gbc.setState(0x5c00, 0xf68e, 0x40e0, 0x7a56, 0xcbd2, 0x4f95, 0x0, 0x1);
        gbc.writeMem(0x5c00, { 0x28, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf68e);
        EXPECT(gbc.pc(), 0x5bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00E8
        gbc.setState(0xc9d8, 0x5450, 0xe210, 0xe1f4, 0x7399, 0x571a, 0x1, 0x1);
        gbc.writeMem(0xc9d8, { 0x28, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5450);
        EXPECT(gbc.pc(), 0xc9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d8), 0x28);
        EXPECT(gbc.readMem(0xc9d9), 0xdb);
        // 28 00E9
        gbc.setState(0x6dcd, 0x588b, 0xa080, 0x6d5a, 0x4a1d, 0xcc8d, 0x0, 0x1);
        gbc.writeMem(0x6dcd, { 0x28, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x588b);
        EXPECT(gbc.pc(), 0x6d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00EA
        gbc.setState(0x67c, 0xaec2, 0xab60, 0x8448, 0x582b, 0xa95e, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0x28, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xaec2);
        EXPECT(gbc.pc(), 0x67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00EB
        gbc.setState(0xdf01, 0xc87d, 0xea40, 0xc359, 0x361e, 0xb89a, 0x1, 0x0);
        gbc.writeMem(0xdf01, { 0x28, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc87d);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf01), 0x28);
        EXPECT(gbc.readMem(0xdf02), 0x48);
        // 28 00EC
        gbc.setState(0x699f, 0x76bc, 0xa780, 0x6994, 0x5e7b, 0x4101, 0x0, 0x1);
        gbc.writeMem(0x699f, { 0x28, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x76bc);
        EXPECT(gbc.pc(), 0x6974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00ED
        gbc.setState(0x1455, 0x88c, 0xf5d0, 0x6c67, 0x9c90, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0x1455, { 0x28, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x88c);
        EXPECT(gbc.pc(), 0x1450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00EE
        gbc.setState(0x6957, 0xa5fd, 0x1830, 0x576b, 0xe294, 0x57, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0x28, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa5fd);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 00EF
        gbc.setState(0xc645, 0x6d3d, 0x85f0, 0x96d, 0x6a9a, 0xe7b0, 0x1, 0x1);
        gbc.writeMem(0xc645, { 0x28, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6d3d);
        EXPECT(gbc.pc(), 0xc69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc645), 0x28);
        EXPECT(gbc.readMem(0xc646), 0x55);
        // 28 00F0
        gbc.setState(0x1b8, 0x62df, 0x9660, 0x26e8, 0x3d2d, 0x2d3d, 0x1, 0x0);
        gbc.writeMem(0x1b8, { 0x28, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x62df);
        EXPECT(gbc.pc(), 0x1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00F1
        gbc.setState(0xc984, 0x1d20, 0x2540, 0x6d5d, 0x6cf0, 0xad5c, 0x1, 0x0);
        gbc.writeMem(0xc984, { 0x28, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1d20);
        EXPECT(gbc.pc(), 0xc986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc984), 0x28);
        EXPECT(gbc.readMem(0xc985), 0xca);
        // 28 00F2
        gbc.setState(0x2c80, 0xab6, 0x500, 0xf80, 0xa99d, 0x211f, 0x0, 0x1);
        gbc.writeMem(0x2c80, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xab6);
        EXPECT(gbc.pc(), 0x2c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00F3
        gbc.setState(0x62e0, 0xcc05, 0xe4a0, 0x2f32, 0x2382, 0x1a6f, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcc05);
        EXPECT(gbc.pc(), 0x6302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00F4
        gbc.setState(0xb3d4, 0xa063, 0x7ff0, 0xf805, 0xbef7, 0xfc6e, 0x1, 0x1);
        gbc.writeMem(0xb3d4, { 0x28, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa063);
        EXPECT(gbc.pc(), 0xb3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d4), 0x28);
        EXPECT(gbc.readMem(0xb3d5), 0xe6);
        // 28 00F5
        gbc.setState(0xca3d, 0x55d5, 0xf190, 0xbea0, 0xc734, 0xb3e9, 0x0, 0x1);
        gbc.writeMem(0xca3d, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x55d5);
        EXPECT(gbc.pc(), 0xc9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca3d), 0x28);
        EXPECT(gbc.readMem(0xca3e), 0xb4);
        // 28 00F6
        gbc.setState(0xb5fd, 0xda5b, 0x18a0, 0xd1b6, 0x91c6, 0xe980, 0x1, 0x0);
        gbc.writeMem(0xb5fd, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xda5b);
        EXPECT(gbc.pc(), 0xb63c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fd), 0x28);
        EXPECT(gbc.readMem(0xb5fe), 0x3d);
        // 28 00F8
        gbc.setState(0x8d0c, 0xda7, 0x10e0, 0x348, 0x9321, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0x8d0c, { 0x28, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xda7);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0c), 0x28);
        EXPECT(gbc.readMem(0x8d0d), 0xc);
        // 28 00F9
        gbc.setState(0x75c1, 0x9d6, 0xd3c0, 0x769d, 0x9ef0, 0xfe4a, 0x0, 0x0);
        gbc.writeMem(0x75c1, { 0x28, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9d6);
        EXPECT(gbc.pc(), 0x763e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00FA
        gbc.setState(0x7438, 0x3a4f, 0x6140, 0x9b5f, 0x485f, 0x526a, 0x0, 0x1);
        gbc.writeMem(0x7438, { 0x28, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3a4f);
        EXPECT(gbc.pc(), 0x743a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 00FB
        gbc.setState(0x9984, 0x3b89, 0xec10, 0xed92, 0x8ab6, 0x2102, 0x0, 0x0);
        gbc.writeMem(0x9984, { 0x28, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3b89);
        EXPECT(gbc.pc(), 0x9986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9984), 0x28);
        EXPECT(gbc.readMem(0x9985), 0x3c);
        // 28 00FC
        gbc.setState(0x9fc3, 0x2e09, 0xde00, 0x263d, 0xeec0, 0x5fdc, 0x0, 0x0);
        gbc.writeMem(0x9fc3, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2e09);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc3), 0x28);
        EXPECT(gbc.readMem(0x9fc4), 0x7f);
        // 28 00FD
        gbc.setState(0x866, 0x558, 0x3810, 0x474d, 0x2f01, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x866, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x558);
        EXPECT(gbc.pc(), 0x868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 00FE
        gbc.setState(0x6b25, 0xa85a, 0x3a0, 0x4ed8, 0xa48c, 0x5630, 0x1, 0x0);
        gbc.writeMem(0x6b25, { 0x28, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa85a);
        EXPECT(gbc.pc(), 0x6b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 00FF
        gbc.setState(0x69d0, 0x69a5, 0x1790, 0x5ad0, 0x7bf3, 0xe8ee, 0x1, 0x1);
        gbc.writeMem(0x69d0, { 0x28, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x69a5);
        EXPECT(gbc.pc(), 0x699f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0100
        gbc.setState(0x554e, 0xd973, 0xc760, 0xe491, 0xc30d, 0x1ed, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x28, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd973);
        EXPECT(gbc.pc(), 0x5550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0101
        gbc.setState(0xa446, 0xd8be, 0x1700, 0x4d8e, 0x5d24, 0xc02b, 0x1, 0x1);
        gbc.writeMem(0xa446, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd8be);
        EXPECT(gbc.pc(), 0xa448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa446), 0x28);
        EXPECT(gbc.readMem(0xa447), 0xfe);
        // 28 0102
        gbc.setState(0xad3d, 0x34bf, 0x6440, 0xe642, 0xcb2, 0xd58c, 0x0, 0x1);
        gbc.writeMem(0xad3d, { 0x28, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x34bf);
        EXPECT(gbc.pc(), 0xad3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3d), 0x28);
        EXPECT(gbc.readMem(0xad3e), 0x5a);
        // 28 0103
        gbc.setState(0xde41, 0x5746, 0x48f0, 0x619e, 0x1b83, 0x9cbb, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0x28, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5746);
        EXPECT(gbc.pc(), 0xddcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde41), 0x28);
        EXPECT(gbc.readMem(0xde42), 0x8a);
        // 28 0104
        gbc.setState(0x2b37, 0xa92c, 0xeb90, 0x6172, 0x54ef, 0x5011, 0x1, 0x1);
        gbc.writeMem(0x2b37, { 0x28, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0105
        gbc.setState(0x3ebe, 0x8ef3, 0x18b0, 0x56d4, 0x1728, 0x75e1, 0x1, 0x1);
        gbc.writeMem(0x3ebe, { 0x28, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8ef3);
        EXPECT(gbc.pc(), 0x3ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0106
        gbc.setState(0x78d8, 0xff3a, 0xc170, 0xf1e5, 0x501e, 0xc314, 0x0, 0x0);
        gbc.writeMem(0x78d8, { 0x28, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xff3a);
        EXPECT(gbc.pc(), 0x78da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0107
        gbc.setState(0xaa1, 0xd43b, 0x4eb0, 0x9077, 0x5338, 0xb56, 0x0, 0x0);
        gbc.writeMem(0xaa1, { 0x28, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd43b);
        EXPECT(gbc.pc(), 0xa6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0108
        gbc.setState(0xa120, 0x8b16, 0xb990, 0xddbd, 0xba61, 0x435c, 0x1, 0x1);
        gbc.writeMem(0xa120, { 0x28, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8b16);
        EXPECT(gbc.pc(), 0xa100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa120), 0x28);
        EXPECT(gbc.readMem(0xa121), 0xde);
        // 28 0109
        gbc.setState(0x7405, 0x5ecd, 0x63a0, 0x493d, 0x68a9, 0x1d37, 0x0, 0x0);
        gbc.writeMem(0x7405, { 0x28, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5ecd);
        EXPECT(gbc.pc(), 0x73ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 010A
        gbc.setState(0x7cd8, 0xb191, 0xda40, 0x916, 0x653b, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x7cd8, { 0x28, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb191);
        EXPECT(gbc.pc(), 0x7cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 010B
        gbc.setState(0xd797, 0x5683, 0xff90, 0x3a0e, 0x566c, 0xa0f1, 0x0, 0x0);
        gbc.writeMem(0xd797, { 0x28, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5683);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd797), 0x28);
        EXPECT(gbc.readMem(0xd798), 0x6a);
        // 28 010C
        gbc.setState(0xb7ec, 0x115, 0xa320, 0xa1e2, 0xd6c8, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0xb7ec, { 0x28, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x115);
        EXPECT(gbc.pc(), 0xb7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ec), 0x28);
        EXPECT(gbc.readMem(0xb7ed), 0xaf);
        // 28 010D
        gbc.setState(0xd76b, 0xe3b5, 0x4240, 0xc16, 0x2786, 0x5f5c, 0x1, 0x1);
        gbc.writeMem(0xd76b, { 0x28, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe3b5);
        EXPECT(gbc.pc(), 0xd76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76b), 0x28);
        EXPECT(gbc.readMem(0xd76c), 0xc8);
        // 28 010E
        gbc.setState(0x2197, 0x65f4, 0x6e30, 0xcb41, 0x647f, 0x8aee, 0x1, 0x1);
        gbc.writeMem(0x2197, { 0x28, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x65f4);
        EXPECT(gbc.pc(), 0x2199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 010F
        gbc.setState(0xd92a, 0x2ebd, 0x9980, 0x78af, 0xf385, 0x1167, 0x0, 0x1);
        gbc.writeMem(0xd92a, { 0x28, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2ebd);
        EXPECT(gbc.pc(), 0xd944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92a), 0x28);
        EXPECT(gbc.readMem(0xd92b), 0x18);
        // 28 0110
        gbc.setState(0x5e0f, 0x9763, 0xcc30, 0x28df, 0xbab4, 0xf9, 0x0, 0x0);
        gbc.writeMem(0x5e0f, { 0x28, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9763);
        EXPECT(gbc.pc(), 0x5e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0111
        gbc.setState(0x99f9, 0x376b, 0xe390, 0x661c, 0xf293, 0x397e, 0x0, 0x1);
        gbc.writeMem(0x99f9, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x376b);
        EXPECT(gbc.pc(), 0x99af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f9), 0x28);
        EXPECT(gbc.readMem(0x99fa), 0xb4);
        // 28 0112
        gbc.setState(0x2bf, 0x6bb0, 0x5350, 0xa9ae, 0xef3c, 0x552d, 0x1, 0x1);
        gbc.writeMem(0x2bf, { 0x28, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6bb0);
        EXPECT(gbc.pc(), 0x2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0114
        gbc.setState(0x8e6e, 0x41c, 0x1a90, 0xd4cf, 0x4ff9, 0x3f93, 0x0, 0x0);
        gbc.writeMem(0x8e6e, { 0x28, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x41c);
        EXPECT(gbc.pc(), 0x8e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6e), 0x28);
        EXPECT(gbc.readMem(0x8e6f), 0x2e);
        // 28 0115
        gbc.setState(0xbb60, 0xe939, 0x2470, 0x32de, 0x7518, 0x5ef8, 0x1, 0x0);
        gbc.writeMem(0xbb60, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0xbb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb60), 0x28);
        EXPECT(gbc.readMem(0xbb61), 0x9e);
        // 28 0116
        gbc.setState(0xe5bb, 0xc3da, 0xda00, 0xd86f, 0x4a7c, 0xa0b0, 0x1, 0x0);
        gbc.writeMem(0xe5bb, { 0x28, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc3da);
        EXPECT(gbc.pc(), 0xe5bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5bb), 0x28);
        EXPECT(gbc.readMem(0xe5bc), 0x30);
        // 28 0117
        gbc.setState(0x9170, 0xe46f, 0x5230, 0x2c2b, 0xff18, 0xb5bb, 0x0, 0x0);
        gbc.writeMem(0x9170, { 0x28, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe46f);
        EXPECT(gbc.pc(), 0x9172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9170), 0x28);
        EXPECT(gbc.readMem(0x9171), 0xd6);
        // 28 0118
        gbc.setState(0x8ca2, 0xe327, 0xb720, 0xbd6d, 0x627, 0xfa5b, 0x1, 0x0);
        gbc.writeMem(0x8ca2, { 0x28, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe327);
        EXPECT(gbc.pc(), 0x8ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca2), 0x28);
        EXPECT(gbc.readMem(0x8ca3), 0x10);
        // 28 0119
        gbc.setState(0x8a66, 0x828b, 0x20b0, 0xca05, 0xe090, 0x14c8, 0x1, 0x0);
        gbc.writeMem(0x8a66, { 0x28, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x828b);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a66), 0x28);
        EXPECT(gbc.readMem(0x8a67), 0x36);
        // 28 011A
        gbc.setState(0xc0b3, 0xf126, 0xc560, 0xf81a, 0x597, 0x9caf, 0x0, 0x0);
        gbc.writeMem(0xc0b3, { 0x28, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf126);
        EXPECT(gbc.pc(), 0xc0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b3), 0x28);
        EXPECT(gbc.readMem(0xc0b4), 0xf8);
        // 28 011B
        gbc.setState(0xdb6, 0x6b50, 0x78f0, 0xcf54, 0x9cf1, 0x4710, 0x0, 0x1);
        gbc.writeMem(0xdb6, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6b50);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 011C
        gbc.setState(0xa72, 0xcbf, 0xc940, 0xffd2, 0x77b3, 0x425, 0x0, 0x0);
        gbc.writeMem(0xa72, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcbf);
        EXPECT(gbc.pc(), 0xa74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 011D
        gbc.setState(0x438, 0x8c08, 0xc820, 0xdf22, 0x3aa1, 0xbc93, 0x0, 0x0);
        gbc.writeMem(0x438, { 0x28, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8c08);
        EXPECT(gbc.pc(), 0x43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 011E
        gbc.setState(0x1f2f, 0xd28e, 0xb8f0, 0x35da, 0x6c9f, 0xd1f8, 0x0, 0x0);
        gbc.writeMem(0x1f2f, { 0x28, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd28e);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 011F
        gbc.setState(0x271d, 0xc6b9, 0xb2e0, 0x1073, 0xf130, 0x376a, 0x1, 0x0);
        gbc.writeMem(0x271d, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc6b9);
        EXPECT(gbc.pc(), 0x2780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0120
        gbc.setState(0xc849, 0xd4b, 0x4190, 0x209b, 0x5bcb, 0xa256, 0x1, 0x1);
        gbc.writeMem(0xc849, { 0x28, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd4b);
        EXPECT(gbc.pc(), 0xc7d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc849), 0x28);
        EXPECT(gbc.readMem(0xc84a), 0x8e);
        // 28 0121
        gbc.setState(0x96fc, 0xef54, 0x6e70, 0x9ae6, 0x9685, 0xf3a8, 0x1, 0x1);
        gbc.writeMem(0x96fc, { 0x28, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x96fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fc), 0x28);
        EXPECT(gbc.readMem(0x96fd), 0x91);
        // 28 0122
        gbc.setState(0x158c, 0x823b, 0xdc30, 0xde9b, 0xb651, 0xed5e, 0x0, 0x0);
        gbc.writeMem(0x158c, { 0x28, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x823b);
        EXPECT(gbc.pc(), 0x158e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0123
        gbc.setState(0x7961, 0x56d8, 0x8e40, 0x3835, 0x45ff, 0x7323, 0x1, 0x0);
        gbc.writeMem(0x7961, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x56d8);
        EXPECT(gbc.pc(), 0x7963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0124
        gbc.setState(0x4a88, 0x223d, 0xd70, 0xe178, 0x487b, 0xf170, 0x0, 0x1);
        gbc.writeMem(0x4a88, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x223d);
        EXPECT(gbc.pc(), 0x4a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0125
        gbc.setState(0x9a0d, 0xa472, 0xd1b0, 0x2073, 0xb331, 0x999a, 0x0, 0x1);
        gbc.writeMem(0x9a0d, { 0x28, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa472);
        EXPECT(gbc.pc(), 0x9a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0d), 0x28);
        EXPECT(gbc.readMem(0x9a0e), 0x40);
        // 28 0126
        gbc.setState(0x6143, 0xe919, 0xad40, 0x159b, 0x3210, 0x9a31, 0x0, 0x0);
        gbc.writeMem(0x6143, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe919);
        EXPECT(gbc.pc(), 0x6145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0127
        gbc.setState(0x88c1, 0x85b3, 0x52f0, 0x7cbb, 0x14a0, 0x9565, 0x0, 0x0);
        gbc.writeMem(0x88c1, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x85b3);
        EXPECT(gbc.pc(), 0x88ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0x28);
        EXPECT(gbc.readMem(0x88c2), 0xe9);
        // 28 0128
        gbc.setState(0xee3, 0x8667, 0x7070, 0xff72, 0xadcb, 0xd001, 0x1, 0x1);
        gbc.writeMem(0xee3, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0xee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0129
        gbc.setState(0xe63, 0xf92, 0xc9c0, 0x185e, 0x29f1, 0x2fd3, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0x28, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf92);
        EXPECT(gbc.pc(), 0xeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 012B
        gbc.setState(0xc96e, 0x3c23, 0x99d0, 0xb059, 0x481, 0x3bc, 0x0, 0x0);
        gbc.writeMem(0xc96e, { 0x28, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3c23);
        EXPECT(gbc.pc(), 0xc9d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96e), 0x28);
        EXPECT(gbc.readMem(0xc96f), 0x66);
        // 28 012C
        gbc.setState(0xd12a, 0x535a, 0x86f0, 0xf79f, 0x3b2, 0x73f1, 0x0, 0x1);
        gbc.writeMem(0xd12a, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x535a);
        EXPECT(gbc.pc(), 0xd182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12a), 0x28);
        EXPECT(gbc.readMem(0xd12b), 0x56);
        // 28 012D
        gbc.setState(0xd672, 0x54a6, 0xd910, 0x31eb, 0x9d5c, 0x5321, 0x1, 0x1);
        gbc.writeMem(0xd672, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x54a6);
        EXPECT(gbc.pc(), 0xd674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd672), 0x28);
        EXPECT(gbc.readMem(0xd673), 0xd7);
        // 28 012E
        gbc.setState(0x302c, 0x709e, 0xa20, 0xaf3, 0x768, 0xc0, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x709e);
        EXPECT(gbc.pc(), 0x302e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 012F
        gbc.setState(0xe35, 0x20ed, 0x6d80, 0x2525, 0xbe13, 0xaafa, 0x1, 0x1);
        gbc.writeMem(0xe35, { 0x28, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20ed);
        EXPECT(gbc.pc(), 0xe94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0130
        gbc.setState(0x6484, 0x93d9, 0x9d20, 0xc5e5, 0xfab, 0xbe4f, 0x1, 0x0);
        gbc.writeMem(0x6484, { 0x28, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x93d9);
        EXPECT(gbc.pc(), 0x6486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0131
        gbc.setState(0xb7db, 0x6fb3, 0x4490, 0xd6de, 0xd01c, 0x531d, 0x1, 0x0);
        gbc.writeMem(0xb7db, { 0x28, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6fb3);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7db), 0x28);
        EXPECT(gbc.readMem(0xb7dc), 0x6f);
        // 28 0132
        gbc.setState(0xade7, 0xe17a, 0x1410, 0x9327, 0x4f6f, 0xee61, 0x1, 0x1);
        gbc.writeMem(0xade7, { 0x28, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe17a);
        EXPECT(gbc.pc(), 0xade9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade7), 0x28);
        EXPECT(gbc.readMem(0xade8), 0xd6);
        // 28 0133
        gbc.setState(0xe279, 0xbc88, 0x22f0, 0x5f84, 0x60e9, 0xda5e, 0x1, 0x0);
        gbc.writeMem(0xe279, { 0x28, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbc88);
        EXPECT(gbc.pc(), 0xe2e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe279), 0x28);
        EXPECT(gbc.readMem(0xe27a), 0x6b);
        // 28 0134
        gbc.setState(0xc996, 0xf022, 0xe30, 0xb640, 0x57d9, 0x4beb, 0x0, 0x0);
        gbc.writeMem(0xc996, { 0x28, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf022);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc996), 0x28);
        EXPECT(gbc.readMem(0xc997), 0x5b);
        // 28 0135
        gbc.setState(0x9574, 0x1b71, 0x6810, 0xe059, 0x96c7, 0x8a8b, 0x1, 0x0);
        gbc.writeMem(0x9574, { 0x28, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0x9576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9574), 0x28);
        EXPECT(gbc.readMem(0x9575), 0x1a);
        // 28 0136
        gbc.setState(0x4d36, 0x3f1c, 0xbbc0, 0xb096, 0x731f, 0x51d, 0x1, 0x1);
        gbc.writeMem(0x4d36, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3f1c);
        EXPECT(gbc.pc(), 0x4cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0138
        gbc.setState(0x256b, 0xe077, 0x57c0, 0x5096, 0x443e, 0x1bfa, 0x0, 0x1);
        gbc.writeMem(0x256b, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe077);
        EXPECT(gbc.pc(), 0x25a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0139
        gbc.setState(0x961e, 0x5e27, 0x3c30, 0xc41, 0x1306, 0xbdf8, 0x1, 0x1);
        gbc.writeMem(0x961e, { 0x28, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5e27);
        EXPECT(gbc.pc(), 0x9620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961e), 0x28);
        EXPECT(gbc.readMem(0x961f), 0x78);
        // 28 013A
        gbc.setState(0x10c5, 0xd1e2, 0xc7d0, 0x45c3, 0xa39c, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x10c5, { 0x28, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd1e2);
        EXPECT(gbc.pc(), 0x1070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 013B
        gbc.setState(0xd8a6, 0xed01, 0x9b0, 0x2577, 0xd22, 0xfe1b, 0x0, 0x0);
        gbc.writeMem(0xd8a6, { 0x28, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0xd8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a6), 0x28);
        EXPECT(gbc.readMem(0xd8a7), 0x16);
        // 28 013C
        gbc.setState(0x6d36, 0xb643, 0xe9f0, 0xed75, 0x6ab9, 0x1793, 0x0, 0x0);
        gbc.writeMem(0x6d36, { 0x28, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb643);
        EXPECT(gbc.pc(), 0x6d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 013D
        gbc.setState(0x7bc4, 0x7923, 0x5e80, 0x4697, 0xf79, 0x955, 0x0, 0x1);
        gbc.writeMem(0x7bc4, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7923);
        EXPECT(gbc.pc(), 0x7b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 013E
        gbc.setState(0xd991, 0x8a0b, 0x5d80, 0x6bbb, 0x7e39, 0xd1cb, 0x0, 0x1);
        gbc.writeMem(0xd991, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8a0b);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd991), 0x28);
        EXPECT(gbc.readMem(0xd992), 0x62);
        // 28 013F
        gbc.setState(0x3a48, 0xfbc, 0x7120, 0xed45, 0x497d, 0xdeb0, 0x0, 0x1);
        gbc.writeMem(0x3a48, { 0x28, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfbc);
        EXPECT(gbc.pc(), 0x3a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0140
        gbc.setState(0x3689, 0xd86d, 0xa80, 0xf8ad, 0xf4b9, 0x3f18, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0x28, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd86d);
        EXPECT(gbc.pc(), 0x3681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0141
        gbc.setState(0xb588, 0xd35b, 0xf1c0, 0x74b0, 0x4e3a, 0x43b3, 0x1, 0x1);
        gbc.writeMem(0xb588, { 0x28, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd35b);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb588), 0x28);
        EXPECT(gbc.readMem(0xb589), 0x7c);
        // 28 0142
        gbc.setState(0x585f, 0xf7ea, 0xd230, 0xbc3d, 0x4f9c, 0x8491, 0x0, 0x0);
        gbc.writeMem(0x585f, { 0x28, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf7ea);
        EXPECT(gbc.pc(), 0x5861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0143
        gbc.setState(0x8cb9, 0xcf76, 0xa770, 0x21dc, 0xf7fe, 0x8c1f, 0x0, 0x1);
        gbc.writeMem(0x8cb9, { 0x28, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf76);
        EXPECT(gbc.pc(), 0x8cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb9), 0x28);
        EXPECT(gbc.readMem(0x8cba), 0x1);
        // 28 0144
        gbc.setState(0xbde7, 0xba7f, 0x9d90, 0xfecf, 0x7f6a, 0xcf12, 0x1, 0x0);
        gbc.writeMem(0xbde7, { 0x28, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xba7f);
        EXPECT(gbc.pc(), 0xbe1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde7), 0x28);
        EXPECT(gbc.readMem(0xbde8), 0x33);
        // 28 0145
        gbc.setState(0x46b6, 0x4e22, 0x4d30, 0xefa1, 0x2afa, 0x5eef, 0x0, 0x0);
        gbc.writeMem(0x46b6, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4e22);
        EXPECT(gbc.pc(), 0x46b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0146
        gbc.setState(0x98f, 0x154d, 0x4da0, 0x8da4, 0x24b5, 0xa1bf, 0x1, 0x1);
        gbc.writeMem(0x98f, { 0x28, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x154d);
        EXPECT(gbc.pc(), 0x91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0147
        gbc.setState(0x16fa, 0x1422, 0x9830, 0xdffc, 0xc187, 0x5cd6, 0x1, 0x1);
        gbc.writeMem(0x16fa, { 0x28, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1422);
        EXPECT(gbc.pc(), 0x16fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0148
        gbc.setState(0x5820, 0xfd2b, 0x1390, 0x4068, 0xd9a9, 0xae08, 0x0, 0x0);
        gbc.writeMem(0x5820, { 0x28, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0x589e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0149
        gbc.setState(0x4c00, 0xdf4b, 0x6f70, 0x75df, 0x2d9c, 0x36b5, 0x1, 0x0);
        gbc.writeMem(0x4c00, { 0x28, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdf4b);
        EXPECT(gbc.pc(), 0x4c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 014A
        gbc.setState(0xe9d2, 0x9c59, 0x3950, 0xe788, 0xc514, 0x9c65, 0x0, 0x1);
        gbc.writeMem(0xe9d2, { 0x28, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9c59);
        EXPECT(gbc.pc(), 0xe9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d2), 0x28);
        EXPECT(gbc.readMem(0xe9d3), 0x5d);
        // 28 014B
        gbc.setState(0xb2f5, 0x5992, 0x72b0, 0xa110, 0x9496, 0xc47d, 0x1, 0x0);
        gbc.writeMem(0xb2f5, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5992);
        EXPECT(gbc.pc(), 0xb331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f5), 0x28);
        EXPECT(gbc.readMem(0xb2f6), 0x3a);
        // 28 014C
        gbc.setState(0x4f60, 0xc858, 0x8600, 0x2c7c, 0xeda2, 0x947c, 0x0, 0x1);
        gbc.writeMem(0x4f60, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc858);
        EXPECT(gbc.pc(), 0x4f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 014D
        gbc.setState(0x6662, 0x491, 0xc560, 0x3feb, 0x6513, 0x8395, 0x1, 0x0);
        gbc.writeMem(0x6662, { 0x28, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x491);
        EXPECT(gbc.pc(), 0x6664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 014E
        gbc.setState(0x694e, 0x8722, 0x2620, 0xfbe6, 0xc98c, 0xc308, 0x1, 0x0);
        gbc.writeMem(0x694e, { 0x28, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8722);
        EXPECT(gbc.pc(), 0x6950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 014F
        gbc.setState(0x7dd, 0xd566, 0x640, 0x66ec, 0x16b0, 0xa71f, 0x0, 0x1);
        gbc.writeMem(0x7dd, { 0x28, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd566);
        EXPECT(gbc.pc(), 0x7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0150
        gbc.setState(0xafc, 0xe1e0, 0x730, 0xbd7f, 0xf47d, 0xbdd1, 0x1, 0x1);
        gbc.writeMem(0xafc, { 0x28, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe1e0);
        EXPECT(gbc.pc(), 0xafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0151
        gbc.setState(0x5ba, 0xb03d, 0x8880, 0xeb95, 0x73c4, 0xb3, 0x1, 0x0);
        gbc.writeMem(0x5ba, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb03d);
        EXPECT(gbc.pc(), 0x61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0152
        gbc.setState(0xc154, 0xe00f, 0x8440, 0x113d, 0x4eb4, 0x4489, 0x0, 0x0);
        gbc.writeMem(0xc154, { 0x28, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe00f);
        EXPECT(gbc.pc(), 0xc156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc154), 0x28);
        EXPECT(gbc.readMem(0xc155), 0x3f);
        // 28 0153
        gbc.setState(0xdf06, 0xcef, 0x320, 0xf55, 0xb856, 0xd62, 0x1, 0x1);
        gbc.writeMem(0xdf06, { 0x28, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcef);
        EXPECT(gbc.pc(), 0xdf08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf06), 0x28);
        EXPECT(gbc.readMem(0xdf07), 0xe8);
        // 28 0154
        gbc.setState(0x18f3, 0x376f, 0xbc40, 0x9ac1, 0x74f2, 0x5ccc, 0x1, 0x0);
        gbc.writeMem(0x18f3, { 0x28, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x376f);
        EXPECT(gbc.pc(), 0x18f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0155
        gbc.setState(0x211f, 0x686c, 0x6f40, 0xb6ed, 0x4fe1, 0x46cd, 0x1, 0x1);
        gbc.writeMem(0x211f, { 0x28, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x686c);
        EXPECT(gbc.pc(), 0x2121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0156
        gbc.setState(0xeed1, 0x77c5, 0xc950, 0x6846, 0x84bd, 0x47ce, 0x0, 0x1);
        gbc.writeMem(0xeed1, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x77c5);
        EXPECT(gbc.pc(), 0xeed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed1), 0x28);
        EXPECT(gbc.readMem(0xeed2), 0xe7);
        // 28 0157
        gbc.setState(0x88b1, 0xa1f0, 0x3550, 0xa87b, 0x1cb0, 0x2b0f, 0x0, 0x1);
        gbc.writeMem(0x88b1, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa1f0);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b1), 0x28);
        EXPECT(gbc.readMem(0x88b2), 0xc3);
        // 28 0158
        gbc.setState(0xd760, 0x4254, 0xd250, 0x44a9, 0xc0dc, 0xaba8, 0x1, 0x1);
        gbc.writeMem(0xd760, { 0x28, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4254);
        EXPECT(gbc.pc(), 0xd762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd760), 0x28);
        EXPECT(gbc.readMem(0xd761), 0x45);
        // 28 0159
        gbc.setState(0xe4a5, 0x9154, 0x8da0, 0x2566, 0xb4cc, 0x3760, 0x1, 0x0);
        gbc.writeMem(0xe4a5, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9154);
        EXPECT(gbc.pc(), 0xe50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a5), 0x28);
        EXPECT(gbc.readMem(0xe4a6), 0x67);
        // 28 015A
        gbc.setState(0xa940, 0xf1c0, 0xb1e0, 0xe6bc, 0x696d, 0x3567, 0x1, 0x0);
        gbc.writeMem(0xa940, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0xa8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa940), 0x28);
        EXPECT(gbc.readMem(0xa941), 0xa8);
        // 28 015B
        gbc.setState(0x5d5, 0x1a81, 0xfbd0, 0x3acb, 0xdb1e, 0x573e, 0x1, 0x0);
        gbc.writeMem(0x5d5, { 0x28, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1a81);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 015C
        gbc.setState(0x4d5, 0x33b6, 0x2d30, 0xecd4, 0x580, 0xcaed, 0x0, 0x1);
        gbc.writeMem(0x4d5, { 0x28, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x33b6);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 015D
        gbc.setState(0x9ff8, 0x6417, 0x8240, 0xa4c9, 0xdb5d, 0x458b, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0x28, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6417);
        EXPECT(gbc.pc(), 0x9ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff8), 0x28);
        EXPECT(gbc.readMem(0x9ff9), 0x2c);
        // 28 015E
        gbc.setState(0xbd91, 0x84a4, 0x7460, 0xccf5, 0x3586, 0x3cbf, 0x0, 0x0);
        gbc.writeMem(0xbd91, { 0x28, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x84a4);
        EXPECT(gbc.pc(), 0xbd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd91), 0x28);
        EXPECT(gbc.readMem(0xbd92), 0xa4);
        // 28 0160
        gbc.setState(0x8087, 0xfbb6, 0x8220, 0xdf3e, 0x5f82, 0x252c, 0x0, 0x0);
        gbc.writeMem(0x8087, { 0x28, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfbb6);
        EXPECT(gbc.pc(), 0x8089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8087), 0x28);
        EXPECT(gbc.readMem(0x8088), 0x64);
        // 28 0161
        gbc.setState(0x549f, 0x36c0, 0x1250, 0xdf69, 0xf126, 0xb9c8, 0x0, 0x1);
        gbc.writeMem(0x549f, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x36c0);
        EXPECT(gbc.pc(), 0x54a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0162
        gbc.setState(0xb8a5, 0x95ce, 0x19f0, 0xa937, 0x8760, 0xa4b0, 0x1, 0x0);
        gbc.writeMem(0xb8a5, { 0x28, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x95ce);
        EXPECT(gbc.pc(), 0xb844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a5), 0x28);
        EXPECT(gbc.readMem(0xb8a6), 0x9d);
        // 28 0163
        gbc.setState(0x385f, 0x1b51, 0xc650, 0x156c, 0x8d23, 0x5a54, 0x0, 0x1);
        gbc.writeMem(0x385f, { 0x28, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1b51);
        EXPECT(gbc.pc(), 0x3861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0164
        gbc.setState(0xe5aa, 0x3fb6, 0xadb0, 0x7b3c, 0x32b4, 0xda75, 0x1, 0x0);
        gbc.writeMem(0xe5aa, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0xe60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5aa), 0x28);
        EXPECT(gbc.readMem(0xe5ab), 0x62);
        // 28 0165
        gbc.setState(0x6589, 0xd158, 0x3630, 0x30fc, 0x2c77, 0x8204, 0x0, 0x0);
        gbc.writeMem(0x6589, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd158);
        EXPECT(gbc.pc(), 0x658b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0166
        gbc.setState(0x53ab, 0xa3b, 0xde20, 0x7f91, 0x102f, 0x2278, 0x0, 0x1);
        gbc.writeMem(0x53ab, { 0x28, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa3b);
        EXPECT(gbc.pc(), 0x53ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0167
        gbc.setState(0xa0b1, 0x55d9, 0x8240, 0xbfab, 0xfb55, 0x8b69, 0x1, 0x0);
        gbc.writeMem(0xa0b1, { 0x28, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x55d9);
        EXPECT(gbc.pc(), 0xa0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b1), 0x28);
        EXPECT(gbc.readMem(0xa0b2), 0x80);
        // 28 0168
        gbc.setState(0x3d83, 0xb361, 0x6440, 0xe961, 0xb792, 0x87b5, 0x0, 0x1);
        gbc.writeMem(0x3d83, { 0x28, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb361);
        EXPECT(gbc.pc(), 0x3d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 016A
        gbc.setState(0x28fa, 0xf0c6, 0x750, 0x1b, 0x8815, 0x3191, 0x1, 0x1);
        gbc.writeMem(0x28fa, { 0x28, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf0c6);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 016B
        gbc.setState(0x9f21, 0x3eb5, 0x6760, 0x642a, 0x9330, 0xeaff, 0x1, 0x0);
        gbc.writeMem(0x9f21, { 0x28, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3eb5);
        EXPECT(gbc.pc(), 0x9f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f21), 0x28);
        EXPECT(gbc.readMem(0x9f22), 0x5f);
        // 28 016C
        gbc.setState(0x4d52, 0x7725, 0x74e0, 0x7564, 0xdce9, 0xf6c2, 0x1, 0x1);
        gbc.writeMem(0x4d52, { 0x28, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7725);
        EXPECT(gbc.pc(), 0x4ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 016D
        gbc.setState(0x76d1, 0x9310, 0x6120, 0x9457, 0xf69d, 0x6600, 0x1, 0x1);
        gbc.writeMem(0x76d1, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9310);
        EXPECT(gbc.pc(), 0x76d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 016E
        gbc.setState(0x45fe, 0x3003, 0x8360, 0x9182, 0x78ab, 0x3b29, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0x28, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3003);
        EXPECT(gbc.pc(), 0x4600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 016F
        gbc.setState(0x52e3, 0xbfc6, 0x5900, 0xffb5, 0x10dd, 0x5d64, 0x1, 0x0);
        gbc.writeMem(0x52e3, { 0x28, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbfc6);
        EXPECT(gbc.pc(), 0x52e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0170
        gbc.setState(0x83af, 0x66fa, 0x3940, 0x90ee, 0x33dc, 0x972c, 0x1, 0x0);
        gbc.writeMem(0x83af, { 0x28, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x66fa);
        EXPECT(gbc.pc(), 0x83b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83af), 0x28);
        EXPECT(gbc.readMem(0x83b0), 0x74);
        // 28 0171
        gbc.setState(0xcee4, 0x68e, 0xafe0, 0x8edb, 0x8396, 0x471c, 0x1, 0x1);
        gbc.writeMem(0xcee4, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x68e);
        EXPECT(gbc.pc(), 0xce97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee4), 0x28);
        EXPECT(gbc.readMem(0xcee5), 0xb1);
        // 28 0172
        gbc.setState(0xac9e, 0xf780, 0x780, 0x1db0, 0xc29a, 0xa41a, 0x0, 0x0);
        gbc.writeMem(0xac9e, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf780);
        EXPECT(gbc.pc(), 0xac55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9e), 0x28);
        EXPECT(gbc.readMem(0xac9f), 0xb5);
        // 28 0173
        gbc.setState(0x709f, 0x4fb7, 0xa490, 0x234, 0x7308, 0x31d8, 0x0, 0x1);
        gbc.writeMem(0x709f, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0x70f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0174
        gbc.setState(0x8116, 0xc150, 0xee90, 0x584c, 0xb745, 0xd847, 0x0, 0x1);
        gbc.writeMem(0x8116, { 0x28, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc150);
        EXPECT(gbc.pc(), 0x8134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8116), 0x28);
        EXPECT(gbc.readMem(0x8117), 0x1c);
        // 28 0175
        gbc.setState(0xe12a, 0xd3c4, 0x9190, 0x4c51, 0x6c52, 0x4eeb, 0x0, 0x0);
        gbc.writeMem(0xe12a, { 0x28, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd3c4);
        EXPECT(gbc.pc(), 0xe0d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe12a), 0x28);
        EXPECT(gbc.readMem(0xe12b), 0xa4);
        // 28 0176
        gbc.setState(0x9c91, 0x659b, 0xca10, 0x28ea, 0x2f5f, 0xaae, 0x1, 0x1);
        gbc.writeMem(0x9c91, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x659b);
        EXPECT(gbc.pc(), 0x9c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c91), 0x28);
        EXPECT(gbc.readMem(0x9c92), 0x60);
        // 28 0177
        gbc.setState(0x4a2, 0xeba, 0x9330, 0x1ad9, 0x931a, 0xa2ff, 0x1, 0x0);
        gbc.writeMem(0x4a2, { 0x28, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xeba);
        EXPECT(gbc.pc(), 0x4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0178
        gbc.setState(0x8dad, 0xa508, 0x9780, 0x2f9, 0x463, 0xe2e7, 0x0, 0x1);
        gbc.writeMem(0x8dad, { 0x28, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa508);
        EXPECT(gbc.pc(), 0x8d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dad), 0x28);
        EXPECT(gbc.readMem(0x8dae), 0x8f);
        // 28 0179
        gbc.setState(0x8294, 0xbc44, 0xcea0, 0x34e2, 0x7f8d, 0x4cef, 0x0, 0x0);
        gbc.writeMem(0x8294, { 0x28, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbc44);
        EXPECT(gbc.pc(), 0x826f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8294), 0x28);
        EXPECT(gbc.readMem(0x8295), 0xd9);
        // 28 017A
        gbc.setState(0x9d6a, 0xb847, 0xcb40, 0xd505, 0x484e, 0xc775, 0x0, 0x1);
        gbc.writeMem(0x9d6a, { 0x28, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb847);
        EXPECT(gbc.pc(), 0x9d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6a), 0x28);
        EXPECT(gbc.readMem(0x9d6b), 0x9d);
        // 28 017B
        gbc.setState(0x5d90, 0xd71c, 0x5c00, 0xb64c, 0xb795, 0x465a, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0x28, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd71c);
        EXPECT(gbc.pc(), 0x5d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 017C
        gbc.setState(0x5679, 0x614f, 0x7d0, 0xecce, 0xf37c, 0x1370, 0x0, 0x0);
        gbc.writeMem(0x5679, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x614f);
        EXPECT(gbc.pc(), 0x56b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 017D
        gbc.setState(0xb4e6, 0x1e86, 0x1d20, 0x77ee, 0x8057, 0x8c3e, 0x0, 0x1);
        gbc.writeMem(0xb4e6, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1e86);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e6), 0x28);
        EXPECT(gbc.readMem(0xb4e7), 0xfe);
        // 28 017E
        gbc.setState(0xc997, 0xa487, 0xb330, 0x103f, 0x269c, 0x1a4a, 0x1, 0x0);
        gbc.writeMem(0xc997, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa487);
        EXPECT(gbc.pc(), 0xc999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc997), 0x28);
        EXPECT(gbc.readMem(0xc998), 0xa5);
        // 28 017F
        gbc.setState(0x83b7, 0xf43f, 0xe430, 0x7063, 0x2374, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x83b7, { 0x28, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf43f);
        EXPECT(gbc.pc(), 0x83b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b7), 0x28);
        EXPECT(gbc.readMem(0x83b8), 0x3);
        // 28 0180
        gbc.setState(0xcf00, 0x7233, 0xc560, 0x159e, 0x1102, 0x5c5f, 0x0, 0x0);
        gbc.writeMem(0xcf00, { 0x28, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7233);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf00), 0x28);
        EXPECT(gbc.readMem(0xcf01), 0xb0);
        // 28 0181
        gbc.setState(0x16b5, 0x7ef9, 0x2ba0, 0x397d, 0xdd85, 0x7137, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7ef9);
        EXPECT(gbc.pc(), 0x1736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0182
        gbc.setState(0x6d85, 0x1023, 0x100, 0x52ce, 0x13f, 0xe03c, 0x0, 0x1);
        gbc.writeMem(0x6d85, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1023);
        EXPECT(gbc.pc(), 0x6d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0183
        gbc.setState(0xcdac, 0x5426, 0x53e0, 0x2aff, 0x6601, 0xa9a4, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0x28, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5426);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdac), 0x28);
        EXPECT(gbc.readMem(0xcdad), 0x4c);
        // 28 0184
        gbc.setState(0x72f8, 0x2cbd, 0x7ee0, 0x9b9a, 0xb3fb, 0xb3aa, 0x1, 0x0);
        gbc.writeMem(0x72f8, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2cbd);
        EXPECT(gbc.pc(), 0x72e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0185
        gbc.setState(0xd917, 0xb9ab, 0x3e50, 0x15fc, 0x7179, 0xa298, 0x1, 0x0);
        gbc.writeMem(0xd917, { 0x28, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb9ab);
        EXPECT(gbc.pc(), 0xd919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd917), 0x28);
        EXPECT(gbc.readMem(0xd918), 0x5e);
        // 28 0186
        gbc.setState(0x1c49, 0x11c9, 0x3b60, 0x544f, 0x4dc1, 0x5443, 0x0, 0x0);
        gbc.writeMem(0x1c49, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x11c9);
        EXPECT(gbc.pc(), 0x1c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0187
        gbc.setState(0x19f9, 0xf3b4, 0x6b0, 0x930b, 0xecb0, 0xed46, 0x1, 0x1);
        gbc.writeMem(0x19f9, { 0x28, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf3b4);
        EXPECT(gbc.pc(), 0x19bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0188
        gbc.setState(0x8d8c, 0x7b7f, 0x2c70, 0x7f74, 0x4b36, 0x5764, 0x0, 0x0);
        gbc.writeMem(0x8d8c, { 0x28, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7b7f);
        EXPECT(gbc.pc(), 0x8d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8c), 0x28);
        EXPECT(gbc.readMem(0x8d8d), 0xdd);
        // 28 0189
        gbc.setState(0xeda3, 0x12e5, 0x9c30, 0xa5c4, 0xb46f, 0xd143, 0x1, 0x1);
        gbc.writeMem(0xeda3, { 0x28, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x12e5);
        EXPECT(gbc.pc(), 0xeda5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda3), 0x28);
        EXPECT(gbc.readMem(0xeda4), 0x6f);
        // 28 018A
        gbc.setState(0xfbf, 0x3dd0, 0xd6c0, 0x9e62, 0x8dbf, 0xd020, 0x0, 0x1);
        gbc.writeMem(0xfbf, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3dd0);
        EXPECT(gbc.pc(), 0x1021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 018B
        gbc.setState(0x800, 0x260b, 0x3ea0, 0x784a, 0x12d2, 0xe806, 0x1, 0x0);
        gbc.writeMem(0x800, { 0x28, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x260b);
        EXPECT(gbc.pc(), 0x7ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 018C
        gbc.setState(0x85a4, 0x4b06, 0x5540, 0xdc71, 0x29fa, 0x27f8, 0x1, 0x0);
        gbc.writeMem(0x85a4, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0x85a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a4), 0x28);
        EXPECT(gbc.readMem(0x85a5), 0xf5);
        // 28 018D
        gbc.setState(0x9d98, 0x1d1e, 0xc630, 0xff0, 0x8915, 0x16f9, 0x1, 0x0);
        gbc.writeMem(0x9d98, { 0x28, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1d1e);
        EXPECT(gbc.pc(), 0x9d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d98), 0x28);
        EXPECT(gbc.readMem(0x9d99), 0x40);
        // 28 018E
        gbc.setState(0x3708, 0xabc1, 0x5df0, 0xf963, 0xc324, 0x8c99, 0x0, 0x1);
        gbc.writeMem(0x3708, { 0x28, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xabc1);
        EXPECT(gbc.pc(), 0x3772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 018F
        gbc.setState(0x82a1, 0x2fc2, 0x48b0, 0x9ea3, 0xad0, 0x9ba, 0x1, 0x1);
        gbc.writeMem(0x82a1, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2fc2);
        EXPECT(gbc.pc(), 0x828a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a1), 0x28);
        EXPECT(gbc.readMem(0x82a2), 0xe7);
        // 28 0190
        gbc.setState(0x2024, 0x7da0, 0x48f0, 0x56da, 0xed6f, 0xa137, 0x1, 0x0);
        gbc.writeMem(0x2024, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7da0);
        EXPECT(gbc.pc(), 0x204c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0191
        gbc.setState(0x2da2, 0xe545, 0xdff0, 0xf54d, 0x86e8, 0xdebe, 0x0, 0x1);
        gbc.writeMem(0x2da2, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0x2d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0192
        gbc.setState(0xb344, 0x5d2f, 0xac70, 0xa74d, 0xf3b3, 0x517e, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5d2f);
        EXPECT(gbc.pc(), 0xb346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb344), 0x28);
        EXPECT(gbc.readMem(0xb345), 0x20);
        // 28 0193
        gbc.setState(0x31bc, 0x64b8, 0x8d10, 0xa8f8, 0x74c6, 0xbe36, 0x0, 0x1);
        gbc.writeMem(0x31bc, { 0x28, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x64b8);
        EXPECT(gbc.pc(), 0x31be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0194
        gbc.setState(0xbfeb, 0xd135, 0xdc10, 0xc5aa, 0xfe8, 0x1653, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd135);
        EXPECT(gbc.pc(), 0xbfed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfeb), 0x28);
        EXPECT(gbc.readMem(0xbfec), 0xc3);
        // 28 0195
        gbc.setState(0xa82e, 0xa77a, 0xf320, 0xa6dd, 0xb73e, 0xa78a, 0x1, 0x1);
        gbc.writeMem(0xa82e, { 0x28, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa77a);
        EXPECT(gbc.pc(), 0xa830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82e), 0x28);
        EXPECT(gbc.readMem(0xa82f), 0xe2);
        // 28 0196
        gbc.setState(0x2ac3, 0x7794, 0x2440, 0xd839, 0x4eae, 0x6fc3, 0x0, 0x0);
        gbc.writeMem(0x2ac3, { 0x28, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7794);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0197
        gbc.setState(0x7e05, 0xa2d4, 0x9220, 0xfc56, 0x2145, 0x21fa, 0x1, 0x0);
        gbc.writeMem(0x7e05, { 0x28, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa2d4);
        EXPECT(gbc.pc(), 0x7e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0198
        gbc.setState(0x4420, 0x9636, 0x57c0, 0xbc6d, 0xa3fe, 0x69d5, 0x1, 0x1);
        gbc.writeMem(0x4420, { 0x28, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9636);
        EXPECT(gbc.pc(), 0x43c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0199
        gbc.setState(0x842f, 0xd107, 0x16b0, 0x3740, 0xf822, 0x2012, 0x1, 0x0);
        gbc.writeMem(0x842f, { 0x28, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd107);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842f), 0x28);
        EXPECT(gbc.readMem(0x8430), 0x3f);
        // 28 019A
        gbc.setState(0xfb2, 0xdb4d, 0x8020, 0xe0f4, 0xf522, 0xb67a, 0x0, 0x0);
        gbc.writeMem(0xfb2, { 0x28, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdb4d);
        EXPECT(gbc.pc(), 0xfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 019B
        gbc.setState(0x6060, 0x8399, 0x5d90, 0xeee3, 0x81d3, 0x205d, 0x1, 0x0);
        gbc.writeMem(0x6060, { 0x28, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8399);
        EXPECT(gbc.pc(), 0x5fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 019C
        gbc.setState(0xa2f, 0x6ec2, 0xa040, 0x9b4c, 0x6008, 0x9d28, 0x0, 0x1);
        gbc.writeMem(0xa2f, { 0x28, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6ec2);
        EXPECT(gbc.pc(), 0xa31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 019D
        gbc.setState(0x17ed, 0x84f3, 0x1ca0, 0x27a6, 0xa72f, 0xbf46, 0x1, 0x0);
        gbc.writeMem(0x17ed, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x84f3);
        EXPECT(gbc.pc(), 0x179c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 019E
        gbc.setState(0x1ec6, 0x143f, 0x5910, 0xac1d, 0x6989, 0x7566, 0x1, 0x0);
        gbc.writeMem(0x1ec6, { 0x28, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0x1ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 019F
        gbc.setState(0x41e5, 0x8115, 0xe2e0, 0xd6c6, 0xec12, 0xecf, 0x1, 0x1);
        gbc.writeMem(0x41e5, { 0x28, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8115);
        EXPECT(gbc.pc(), 0x416a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01A0
        gbc.setState(0xa6ef, 0x5a7e, 0xe150, 0xf1c5, 0xeb20, 0xf9dc, 0x1, 0x0);
        gbc.writeMem(0xa6ef, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a7e);
        EXPECT(gbc.pc(), 0xa6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ef), 0x28);
        EXPECT(gbc.readMem(0xa6f0), 0x3d);
        // 28 01A2
        gbc.setState(0xe99a, 0x2288, 0x1a20, 0x98e8, 0x6596, 0xe3a5, 0x1, 0x0);
        gbc.writeMem(0xe99a, { 0x28, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2288);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe99a), 0x28);
        EXPECT(gbc.readMem(0xe99b), 0x9d);
        // 28 01A3
        gbc.setState(0x8a5a, 0xecb9, 0xc3e0, 0x5130, 0xaf2b, 0x34b9, 0x0, 0x0);
        gbc.writeMem(0x8a5a, { 0x28, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xecb9);
        EXPECT(gbc.pc(), 0x8a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5a), 0x28);
        EXPECT(gbc.readMem(0x8a5b), 0xfa);
        // 28 01A4
        gbc.setState(0x3bc7, 0xf53, 0xb6c0, 0xa0df, 0xe6d8, 0x9a99, 0x0, 0x0);
        gbc.writeMem(0x3bc7, { 0x28, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf53);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01A5
        gbc.setState(0x4f0b, 0xd0ab, 0x5b10, 0x7351, 0x6635, 0xe012, 0x0, 0x0);
        gbc.writeMem(0x4f0b, { 0x28, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd0ab);
        EXPECT(gbc.pc(), 0x4f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01A6
        gbc.setState(0x664b, 0x6d86, 0x74e0, 0x750c, 0x9454, 0xa93, 0x1, 0x0);
        gbc.writeMem(0x664b, { 0x28, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6d86);
        EXPECT(gbc.pc(), 0x65d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01A7
        gbc.setState(0x90f6, 0x2410, 0x1bb0, 0x9327, 0x29d7, 0x3938, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x28, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2410);
        EXPECT(gbc.pc(), 0x90b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f6), 0x28);
        EXPECT(gbc.readMem(0x90f7), 0xb9);
        // 28 01A8
        gbc.setState(0x5514, 0x37d7, 0x39c0, 0xe948, 0x1e75, 0xc94, 0x0, 0x1);
        gbc.writeMem(0x5514, { 0x28, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x37d7);
        EXPECT(gbc.pc(), 0x5575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01A9
        gbc.setState(0x2b16, 0xbcaf, 0x46d0, 0x690b, 0x16c3, 0xf02e, 0x1, 0x1);
        gbc.writeMem(0x2b16, { 0x28, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbcaf);
        EXPECT(gbc.pc(), 0x2ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01AA
        gbc.setState(0xde85, 0x98c3, 0x8e60, 0x88f3, 0x2daf, 0x704, 0x0, 0x1);
        gbc.writeMem(0xde85, { 0x28, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x98c3);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde85), 0x28);
        EXPECT(gbc.readMem(0xde86), 0x9f);
        // 28 01AB
        gbc.setState(0x9d26, 0x44e4, 0xd8e0, 0x2f2a, 0x44b0, 0x4575, 0x1, 0x1);
        gbc.writeMem(0x9d26, { 0x28, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x44e4);
        EXPECT(gbc.pc(), 0x9d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0x28);
        EXPECT(gbc.readMem(0x9d27), 0x72);
        // 28 01AC
        gbc.setState(0x7249, 0x4d03, 0xe20, 0xec04, 0x8d9e, 0x728a, 0x1, 0x1);
        gbc.writeMem(0x7249, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x724b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01AD
        gbc.setState(0xe465, 0x3684, 0xfc10, 0x751c, 0xd282, 0xf3db, 0x0, 0x0);
        gbc.writeMem(0xe465, { 0x28, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3684);
        EXPECT(gbc.pc(), 0xe467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe465), 0x28);
        EXPECT(gbc.readMem(0xe466), 0x7a);
        // 28 01AE
        gbc.setState(0x33cb, 0xd3df, 0xf4d0, 0x6bb6, 0x2905, 0x2480, 0x1, 0x0);
        gbc.writeMem(0x33cb, { 0x28, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd3df);
        EXPECT(gbc.pc(), 0x3429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01AF
        gbc.setState(0x3dde, 0x87c2, 0x4980, 0x1ccf, 0x38e6, 0x73e, 0x1, 0x1);
        gbc.writeMem(0x3dde, { 0x28, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x87c2);
        EXPECT(gbc.pc(), 0x3df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01B0
        gbc.setState(0x971d, 0x9963, 0x9b60, 0x13aa, 0x2eae, 0xfd66, 0x0, 0x0);
        gbc.writeMem(0x971d, { 0x28, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9963);
        EXPECT(gbc.pc(), 0x971f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971d), 0x28);
        EXPECT(gbc.readMem(0x971e), 0x28);
        // 28 01B1
        gbc.setState(0x9781, 0x47a5, 0x3760, 0xc834, 0xe522, 0xc61c, 0x1, 0x1);
        gbc.writeMem(0x9781, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x47a5);
        EXPECT(gbc.pc(), 0x9783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9781), 0x28);
        EXPECT(gbc.readMem(0x9782), 0x98);
        // 28 01B2
        gbc.setState(0x5a55, 0x8415, 0x6910, 0x42c5, 0xf8f8, 0x311b, 0x0, 0x1);
        gbc.writeMem(0x5a55, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0x5a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01B3
        gbc.setState(0x23d3, 0x7e8a, 0xfc20, 0x21a8, 0x7149, 0x1618, 0x1, 0x0);
        gbc.writeMem(0x23d3, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7e8a);
        EXPECT(gbc.pc(), 0x23d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01B4
        gbc.setState(0x1be6, 0x445c, 0xcef0, 0x315a, 0x2d78, 0xe8a6, 0x1, 0x1);
        gbc.writeMem(0x1be6, { 0x28, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x445c);
        EXPECT(gbc.pc(), 0x1c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01B5
        gbc.setState(0x4d7e, 0xe8fb, 0xa1c0, 0x57b7, 0x3b81, 0x3802, 0x0, 0x0);
        gbc.writeMem(0x4d7e, { 0x28, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe8fb);
        EXPECT(gbc.pc(), 0x4d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01B6
        gbc.setState(0x45f, 0x6ea1, 0x4f80, 0xb941, 0x87c6, 0x499e, 0x1, 0x0);
        gbc.writeMem(0x45f, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6ea1);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01B7
        gbc.setState(0xb7a9, 0x415f, 0x4140, 0x1b67, 0xad84, 0x9413, 0x0, 0x0);
        gbc.writeMem(0xb7a9, { 0x28, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a9), 0x28);
        EXPECT(gbc.readMem(0xb7aa), 0xdd);
        // 28 01B8
        gbc.setState(0x1966, 0x770e, 0x5ca0, 0x6a8c, 0x107f, 0x3915, 0x1, 0x0);
        gbc.writeMem(0x1966, { 0x28, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x770e);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01B9
        gbc.setState(0xba4c, 0xd98b, 0x8fd0, 0x2014, 0x4e25, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0xba4c, { 0x28, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd98b);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4c), 0x28);
        EXPECT(gbc.readMem(0xba4d), 0x21);
        // 28 01BA
        gbc.setState(0x8d67, 0x63d3, 0xeb10, 0xde54, 0x31c6, 0x3f32, 0x0, 0x1);
        gbc.writeMem(0x8d67, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0x8d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d67), 0x28);
        EXPECT(gbc.readMem(0x8d68), 0x98);
        // 28 01BB
        gbc.setState(0x2403, 0x9da0, 0x6cd0, 0xa82c, 0x65e0, 0xe536, 0x1, 0x1);
        gbc.writeMem(0x2403, { 0x28, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9da0);
        EXPECT(gbc.pc(), 0x245f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01BC
        gbc.setState(0x6984, 0xba30, 0x74e0, 0xe386, 0x82da, 0x1dc8, 0x0, 0x1);
        gbc.writeMem(0x6984, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xba30);
        EXPECT(gbc.pc(), 0x69da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01BD
        gbc.setState(0x17e3, 0x7dd4, 0xd9d0, 0x5a49, 0xa0fe, 0x453f, 0x1, 0x0);
        gbc.writeMem(0x17e3, { 0x28, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7dd4);
        EXPECT(gbc.pc(), 0x17f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01BF
        gbc.setState(0x69b9, 0xaeb4, 0x2890, 0x97f8, 0x6d26, 0xda68, 0x0, 0x0);
        gbc.writeMem(0x69b9, { 0x28, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xaeb4);
        EXPECT(gbc.pc(), 0x6993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01C1
        gbc.setState(0x3360, 0x2570, 0x4b50, 0x85f9, 0xaa73, 0xd794, 0x1, 0x1);
        gbc.writeMem(0x3360, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2570);
        EXPECT(gbc.pc(), 0x3362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01C3
        gbc.setState(0x41c3, 0x5fd9, 0xbd60, 0x4665, 0x1355, 0x74f2, 0x0, 0x0);
        gbc.writeMem(0x41c3, { 0x28, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5fd9);
        EXPECT(gbc.pc(), 0x41c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01C4
        gbc.setState(0x86cb, 0x83, 0xfbd0, 0x44fe, 0x7fd8, 0xc53a, 0x1, 0x0);
        gbc.writeMem(0x86cb, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x83);
        EXPECT(gbc.pc(), 0x86a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cb), 0x28);
        EXPECT(gbc.readMem(0x86cc), 0xd7);
        // 28 01C5
        gbc.setState(0xd5e, 0x9f39, 0x6290, 0x4c63, 0xcad8, 0x78f2, 0x0, 0x0);
        gbc.writeMem(0xd5e, { 0x28, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9f39);
        EXPECT(gbc.pc(), 0xdbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01C6
        gbc.setState(0x6134, 0x6214, 0x61f0, 0x7389, 0xde1f, 0xd2bb, 0x0, 0x0);
        gbc.writeMem(0x6134, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6214);
        EXPECT(gbc.pc(), 0x611d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01C7
        gbc.setState(0xc928, 0x2b8d, 0x6bf0, 0x614a, 0x51c5, 0x1010, 0x0, 0x1);
        gbc.writeMem(0xc928, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2b8d);
        EXPECT(gbc.pc(), 0xc8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc928), 0x28);
        EXPECT(gbc.readMem(0xc929), 0xd5);
        // 28 01C8
        gbc.setState(0xe560, 0xb64c, 0x14f0, 0x83b2, 0xce4, 0x1c6b, 0x0, 0x1);
        gbc.writeMem(0xe560, { 0x28, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0xe586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe560), 0x28);
        EXPECT(gbc.readMem(0xe561), 0x24);
        // 28 01C9
        gbc.setState(0xec, 0x64d7, 0xc710, 0xfa7f, 0xa848, 0x667e, 0x1, 0x0);
        gbc.writeMem(0xec, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x64d7);
        EXPECT(gbc.pc(), 0xee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01CA
        gbc.setState(0xe598, 0xbb33, 0x32b0, 0x4bc4, 0xcbae, 0xf806, 0x1, 0x1);
        gbc.writeMem(0xe598, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbb33);
        EXPECT(gbc.pc(), 0xe601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe598), 0x28);
        EXPECT(gbc.readMem(0xe599), 0x67);
        // 28 01CB
        gbc.setState(0x188c, 0x4e0e, 0xd1d0, 0x2368, 0x2ec8, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x188c, { 0x28, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4e0e);
        EXPECT(gbc.pc(), 0x18a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01CD
        gbc.setState(0x3f86, 0xe153, 0xa40, 0xfaac, 0x119d, 0xecc3, 0x1, 0x0);
        gbc.writeMem(0x3f86, { 0x28, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe153);
        EXPECT(gbc.pc(), 0x3f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01CE
        gbc.setState(0x5a74, 0x3254, 0x9aa0, 0xa7de, 0xa147, 0x6613, 0x1, 0x1);
        gbc.writeMem(0x5a74, { 0x28, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3254);
        EXPECT(gbc.pc(), 0x5a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01CF
        gbc.setState(0xb5ba, 0x37d9, 0x8eb0, 0x2fbe, 0x14ed, 0x7df2, 0x0, 0x0);
        gbc.writeMem(0xb5ba, { 0x28, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x37d9);
        EXPECT(gbc.pc(), 0xb5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ba), 0x28);
        EXPECT(gbc.readMem(0xb5bb), 0x2e);
        // 28 01D0
        gbc.setState(0xded8, 0x252e, 0xc650, 0xc3ad, 0x4a0d, 0x3994, 0x1, 0x1);
        gbc.writeMem(0xded8, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x252e);
        EXPECT(gbc.pc(), 0xdeda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded8), 0x28);
        EXPECT(gbc.readMem(0xded9), 0xef);
        // 28 01D1
        gbc.setState(0x9779, 0x14ed, 0x600, 0x8f41, 0x75fb, 0x3821, 0x0, 0x0);
        gbc.writeMem(0x9779, { 0x28, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x14ed);
        EXPECT(gbc.pc(), 0x977b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9779), 0x28);
        EXPECT(gbc.readMem(0x977a), 0x24);
        // 28 01D2
        gbc.setState(0xddff, 0x5e6f, 0xb2f0, 0x297f, 0x39ba, 0xcd05, 0x0, 0x0);
        gbc.writeMem(0xddff, { 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5e6f);
        EXPECT(gbc.pc(), 0xde0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddff), 0x28);
        EXPECT(gbc.readMem(0xde00), 0xb);
        // 28 01D3
        gbc.setState(0xba75, 0x7788, 0xf580, 0xeb17, 0x826, 0x130b, 0x1, 0x0);
        gbc.writeMem(0xba75, { 0x28, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7788);
        EXPECT(gbc.pc(), 0xba92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba75), 0x28);
        EXPECT(gbc.readMem(0xba76), 0x1b);
        // 28 01D5
        gbc.setState(0x18a, 0x5c86, 0x82c0, 0xa7d6, 0xc8f7, 0xdff0, 0x1, 0x0);
        gbc.writeMem(0x18a, { 0x28, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5c86);
        EXPECT(gbc.pc(), 0x11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01D8
        gbc.setState(0x4c2c, 0x1814, 0xc3c0, 0xf4c3, 0x19dd, 0x8ba6, 0x0, 0x0);
        gbc.writeMem(0x4c2c, { 0x28, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1814);
        EXPECT(gbc.pc(), 0x4c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01D9
        gbc.setState(0x2de4, 0xfca9, 0xdfb0, 0x526b, 0xde62, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x2de4, { 0x28, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfca9);
        EXPECT(gbc.pc(), 0x2dfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01DA
        gbc.setState(0x44ff, 0x95fc, 0x3f40, 0xdf9a, 0xaf04, 0x65c2, 0x1, 0x1);
        gbc.writeMem(0x44ff, { 0x28, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x95fc);
        EXPECT(gbc.pc(), 0x4501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01DB
        gbc.setState(0x58d1, 0xb94c, 0xbe80, 0x7f4f, 0x8292, 0xcadf, 0x1, 0x0);
        gbc.writeMem(0x58d1, { 0x28, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb94c);
        EXPECT(gbc.pc(), 0x58fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01DC
        gbc.setState(0x2cb0, 0xef54, 0x7bd0, 0xdd89, 0x2cf3, 0xa58d, 0x1, 0x1);
        gbc.writeMem(0x2cb0, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x2ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01DE
        gbc.setState(0x64c2, 0xe04d, 0x3a70, 0x61b3, 0x963d, 0xae5d, 0x1, 0x1);
        gbc.writeMem(0x64c2, { 0x28, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe04d);
        EXPECT(gbc.pc(), 0x64c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01DF
        gbc.setState(0x9006, 0x67ff, 0xde10, 0x64f6, 0x685e, 0x900, 0x0, 0x0);
        gbc.writeMem(0x9006, { 0x28, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x67ff);
        EXPECT(gbc.pc(), 0x9008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9006), 0x28);
        EXPECT(gbc.readMem(0x9007), 0xc0);
        // 28 01E0
        gbc.setState(0x1c9b, 0x6c74, 0xc990, 0x286f, 0xa015, 0x794d, 0x0, 0x0);
        gbc.writeMem(0x1c9b, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6c74);
        EXPECT(gbc.pc(), 0x1c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01E1
        gbc.setState(0xcd47, 0xece8, 0x5470, 0x5e20, 0xa36, 0x290d, 0x1, 0x0);
        gbc.writeMem(0xcd47, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xece8);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd47), 0x28);
        EXPECT(gbc.readMem(0xcd48), 0xb1);
        // 28 01E2
        gbc.setState(0x5c6e, 0x2d40, 0x7cd0, 0x3377, 0xcbb9, 0x38a3, 0x0, 0x0);
        gbc.writeMem(0x5c6e, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2d40);
        EXPECT(gbc.pc(), 0x5c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01E3
        gbc.setState(0x246, 0xcac5, 0xc950, 0x8006, 0x9195, 0x591, 0x1, 0x0);
        gbc.writeMem(0x246, { 0x28, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcac5);
        EXPECT(gbc.pc(), 0x248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01E4
        gbc.setState(0x38c, 0xeb9, 0xd9b0, 0x58e5, 0xb56b, 0xc8d9, 0x0, 0x1);
        gbc.writeMem(0x38c, { 0x28, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xeb9);
        EXPECT(gbc.pc(), 0x34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01E5
        gbc.setState(0xd296, 0x10ca, 0xc3d0, 0xa683, 0x2ad9, 0x2dbe, 0x1, 0x0);
        gbc.writeMem(0xd296, { 0x28, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x10ca);
        EXPECT(gbc.pc(), 0xd2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd296), 0x28);
        EXPECT(gbc.readMem(0xd297), 0xf);
        // 28 01E6
        gbc.setState(0xc714, 0xb721, 0xf9d0, 0x5acf, 0x6c4b, 0xb94b, 0x1, 0x1);
        gbc.writeMem(0xc714, { 0x28, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb721);
        EXPECT(gbc.pc(), 0xc6dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc714), 0x28);
        EXPECT(gbc.readMem(0xc715), 0xc7);
        // 28 01E7
        gbc.setState(0xea4, 0xbd5a, 0x1530, 0x7df0, 0xbff3, 0xd1fe, 0x1, 0x0);
        gbc.writeMem(0xea4, { 0x28, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0xea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01E8
        gbc.setState(0xd3ba, 0x1050, 0xac50, 0x6ae1, 0x3216, 0xf6f, 0x0, 0x0);
        gbc.writeMem(0xd3ba, { 0x28, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1050);
        EXPECT(gbc.pc(), 0xd3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ba), 0x28);
        EXPECT(gbc.readMem(0xd3bb), 0xe1);
        // 28 01E9
        gbc.setState(0x8870, 0xf7f9, 0x8c30, 0x30cf, 0x3d36, 0x732c, 0x1, 0x0);
        gbc.writeMem(0x8870, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf7f9);
        EXPECT(gbc.pc(), 0x8872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8870), 0x28);
        EXPECT(gbc.readMem(0x8871), 0xd5);
        // 28 01EA
        gbc.setState(0xbd0f, 0xd9f9, 0x9040, 0xf237, 0xec76, 0xf3e8, 0x0, 0x0);
        gbc.writeMem(0xbd0f, { 0x28, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd9f9);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0f), 0x28);
        EXPECT(gbc.readMem(0xbd10), 0x8a);
        // 28 01EB
        gbc.setState(0x571e, 0xd608, 0x270, 0x394a, 0x8ac5, 0xa1ac, 0x0, 0x1);
        gbc.writeMem(0x571e, { 0x28, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd608);
        EXPECT(gbc.pc(), 0x5720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01EC
        gbc.setState(0x5767, 0x5aea, 0x86b0, 0x2865, 0x993c, 0x6def, 0x1, 0x1);
        gbc.writeMem(0x5767, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5aea);
        EXPECT(gbc.pc(), 0x5735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01ED
        gbc.setState(0x4c66, 0x6a23, 0x64d0, 0x1035, 0x3df8, 0x66f1, 0x0, 0x0);
        gbc.writeMem(0x4c66, { 0x28, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6a23);
        EXPECT(gbc.pc(), 0x4ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 01EE
        gbc.setState(0xcf57, 0xb40c, 0xd080, 0x6977, 0x2e77, 0xdf9d, 0x1, 0x1);
        gbc.writeMem(0xcf57, { 0x28, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb40c);
        EXPECT(gbc.pc(), 0xcefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0x28);
        EXPECT(gbc.readMem(0xcf58), 0xa1);
        // 28 01EF
        gbc.setState(0x896e, 0x4e8, 0xd580, 0x45c1, 0x1321, 0x483, 0x0, 0x0);
        gbc.writeMem(0x896e, { 0x28, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4e8);
        EXPECT(gbc.pc(), 0x89b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896e), 0x28);
        EXPECT(gbc.readMem(0x896f), 0x44);
        // 28 01F0
        gbc.setState(0x9372, 0x4eb8, 0xde50, 0xac1a, 0x88d7, 0xe489, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0x28, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4eb8);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0x28);
        EXPECT(gbc.readMem(0x9373), 0xc0);
        // 28 01F1
        gbc.setState(0x4385, 0xc3e, 0x84b0, 0xd47c, 0x8f82, 0x9867, 0x0, 0x1);
        gbc.writeMem(0x4385, { 0x28, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc3e);
        EXPECT(gbc.pc(), 0x43af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01F2
        gbc.setState(0x693e, 0x8192, 0xfc0, 0x6dde, 0x5896, 0xeb78, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8192);
        EXPECT(gbc.pc(), 0x6972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01F3
        gbc.setState(0x796d, 0x6f87, 0xb840, 0x1208, 0xaf54, 0xd944, 0x0, 0x0);
        gbc.writeMem(0x796d, { 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6f87);
        EXPECT(gbc.pc(), 0x796f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 01F4
        gbc.setState(0xc5d1, 0x5745, 0x7290, 0x14fb, 0x2b74, 0xe012, 0x0, 0x1);
        gbc.writeMem(0xc5d1, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5745);
        EXPECT(gbc.pc(), 0xc56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d1), 0x28);
        EXPECT(gbc.readMem(0xc5d2), 0x98);
        // 28 01F6
        gbc.setState(0xece4, 0xece5, 0xf100, 0xfb18, 0x3cb0, 0x1bd5, 0x0, 0x0);
        gbc.writeMem(0xece4, { 0x28, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xece5);
        EXPECT(gbc.pc(), 0xece6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0x28);
        EXPECT(gbc.readMem(0xece5), 0x31);
        // 28 01F7
        gbc.setState(0xa86b, 0x885b, 0x7e00, 0x654b, 0x9f36, 0x60d6, 0x1, 0x1);
        gbc.writeMem(0xa86b, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x885b);
        EXPECT(gbc.pc(), 0xa86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86b), 0x28);
        EXPECT(gbc.readMem(0xa86c), 0x60);
        // 28 01F8
        gbc.setState(0x24ec, 0xfdbe, 0x13b0, 0x6aa, 0x130b, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x24ec, { 0x28, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfdbe);
        EXPECT(gbc.pc(), 0x2516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 01F9
        gbc.setState(0xaacd, 0xe2fd, 0xfcf0, 0x97ad, 0xeab7, 0x1d6e, 0x1, 0x0);
        gbc.writeMem(0xaacd, { 0x28, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe2fd);
        EXPECT(gbc.pc(), 0xaacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaacd), 0x28);
        EXPECT(gbc.readMem(0xaace), 0xfc);
        // 28 01FA
        gbc.setState(0xc59e, 0xc455, 0x14d0, 0xf8a5, 0x4c27, 0xccdd, 0x0, 0x1);
        gbc.writeMem(0xc59e, { 0x28, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc455);
        EXPECT(gbc.pc(), 0xc56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59e), 0x28);
        EXPECT(gbc.readMem(0xc59f), 0xce);
        // 28 01FB
        gbc.setState(0xafc4, 0x69cf, 0xb360, 0x51ee, 0x3d76, 0xa387, 0x0, 0x1);
        gbc.writeMem(0xafc4, { 0x28, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x69cf);
        EXPECT(gbc.pc(), 0xafc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc4), 0x28);
        EXPECT(gbc.readMem(0xafc5), 0x9b);
        // 28 01FC
        gbc.setState(0xc663, 0x7a46, 0xbb0, 0x29da, 0xb5ff, 0x75e9, 0x1, 0x0);
        gbc.writeMem(0xc663, { 0x28, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7a46);
        EXPECT(gbc.pc(), 0xc645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc663), 0x28);
        EXPECT(gbc.readMem(0xc664), 0xe0);
        // 28 01FD
        gbc.setState(0xab25, 0x8c2f, 0xa660, 0xf1ad, 0xb001, 0x728b, 0x1, 0x1);
        gbc.writeMem(0xab25, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8c2f);
        EXPECT(gbc.pc(), 0xab27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab25), 0x28);
        EXPECT(gbc.readMem(0xab26), 0x57);
        // 28 01FE
        gbc.setState(0x5a4f, 0xde07, 0xa2a0, 0x7cb0, 0x8db5, 0x2272, 0x0, 0x1);
        gbc.writeMem(0x5a4f, { 0x28, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xde07);
        EXPECT(gbc.pc(), 0x5a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 01FF
        gbc.setState(0xeaba, 0x1af8, 0x1060, 0xeb90, 0xfb2c, 0x1bcb, 0x1, 0x1);
        gbc.writeMem(0xeaba, { 0x28, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0xeabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaba), 0x28);
        EXPECT(gbc.readMem(0xeabb), 0xca);
        // 28 0200
        gbc.setState(0x363f, 0x4aba, 0x24e0, 0x93b7, 0x7a17, 0x2ec9, 0x0, 0x1);
        gbc.writeMem(0x363f, { 0x28, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0x35ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0201
        gbc.setState(0x418f, 0x60ab, 0x3ec0, 0x4549, 0x289e, 0x5deb, 0x1, 0x1);
        gbc.writeMem(0x418f, { 0x28, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x60ab);
        EXPECT(gbc.pc(), 0x413b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0202
        gbc.setState(0xc776, 0xccda, 0x3020, 0x1c5b, 0xe8db, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0xc776, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xccda);
        EXPECT(gbc.pc(), 0xc778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc776), 0x28);
        EXPECT(gbc.readMem(0xc777), 0x3d);
        // 28 0203
        gbc.setState(0x3991, 0xc17f, 0x9f10, 0xbe67, 0x5906, 0x9714, 0x1, 0x1);
        gbc.writeMem(0x3991, { 0x28, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc17f);
        EXPECT(gbc.pc(), 0x3993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0204
        gbc.setState(0x77bf, 0x152e, 0x4d90, 0xb37, 0x17ff, 0x6213, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0x28, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0x77f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0205
        gbc.setState(0xb20d, 0x4f0b, 0x4ae0, 0x1152, 0xe3eb, 0xaa6d, 0x0, 0x1);
        gbc.writeMem(0xb20d, { 0x28, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0xb1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20d), 0x28);
        EXPECT(gbc.readMem(0xb20e), 0xb9);
        // 28 0206
        gbc.setState(0xedfc, 0xfdbc, 0x4c30, 0xd897, 0x5f7f, 0xe7b4, 0x0, 0x0);
        gbc.writeMem(0xedfc, { 0x28, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfdbc);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfc), 0x28);
        EXPECT(gbc.readMem(0xedfd), 0x33);
        // 28 0207
        gbc.setState(0x6157, 0x224c, 0x6020, 0x20da, 0x65a, 0xf682, 0x0, 0x0);
        gbc.writeMem(0x6157, { 0x28, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x224c);
        EXPECT(gbc.pc(), 0x6159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0208
        gbc.setState(0xae91, 0xacc9, 0xe150, 0x6e69, 0xbaf5, 0x85af, 0x1, 0x1);
        gbc.writeMem(0xae91, { 0x28, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xacc9);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae91), 0x28);
        EXPECT(gbc.readMem(0xae92), 0x7);
        // 28 0209
        gbc.setState(0x2aa7, 0x1278, 0x14f0, 0x339c, 0x2d57, 0x6407, 0x1, 0x1);
        gbc.writeMem(0x2aa7, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1278);
        EXPECT(gbc.pc(), 0x2a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 020A
        gbc.setState(0x4c30, 0x346f, 0xb170, 0x4fbd, 0x61a4, 0xc1, 0x0, 0x0);
        gbc.writeMem(0x4c30, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x346f);
        EXPECT(gbc.pc(), 0x4c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 020B
        gbc.setState(0xe18e, 0x4fb8, 0x3270, 0xd67, 0x4a9f, 0x6c10, 0x0, 0x1);
        gbc.writeMem(0xe18e, { 0x28, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4fb8);
        EXPECT(gbc.pc(), 0xe190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18e), 0x28);
        EXPECT(gbc.readMem(0xe18f), 0x4f);
        // 28 020C
        gbc.setState(0x99cc, 0xa229, 0xed90, 0xe0d2, 0x387b, 0x5a21, 0x1, 0x1);
        gbc.writeMem(0x99cc, { 0x28, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa229);
        EXPECT(gbc.pc(), 0x99d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99cc), 0x28);
        EXPECT(gbc.readMem(0x99cd), 0xa);
        // 28 020D
        gbc.setState(0x93a1, 0x9550, 0xab80, 0x2472, 0xd60, 0x4b9d, 0x0, 0x1);
        gbc.writeMem(0x93a1, { 0x28, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9550);
        EXPECT(gbc.pc(), 0x93be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a1), 0x28);
        EXPECT(gbc.readMem(0x93a2), 0x1b);
        // 28 020E
        gbc.setState(0x523d, 0xcd4e, 0xb910, 0x5b9d, 0xbc33, 0x8958, 0x1, 0x0);
        gbc.writeMem(0x523d, { 0x28, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcd4e);
        EXPECT(gbc.pc(), 0x523f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 020F
        gbc.setState(0x8e25, 0x5ba8, 0x76d0, 0x815f, 0x252, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x8e25, { 0x28, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5ba8);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e25), 0x28);
        EXPECT(gbc.readMem(0x8e26), 0xc4);
        // 28 0211
        gbc.setState(0xe93e, 0xc426, 0x5fb0, 0x802c, 0x2c3e, 0xc6d2, 0x0, 0x0);
        gbc.writeMem(0xe93e, { 0x28, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc426);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93e), 0x28);
        EXPECT(gbc.readMem(0xe93f), 0xec);
        // 28 0212
        gbc.setState(0x2c51, 0xf8f6, 0x2950, 0xfbb5, 0x927e, 0xeb31, 0x0, 0x1);
        gbc.writeMem(0x2c51, { 0x28, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf8f6);
        EXPECT(gbc.pc(), 0x2c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0213
        gbc.setState(0xde74, 0x6ddc, 0x8850, 0xdbf0, 0x7af9, 0x5814, 0x1, 0x1);
        gbc.writeMem(0xde74, { 0x28, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6ddc);
        EXPECT(gbc.pc(), 0xde76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde74), 0x28);
        EXPECT(gbc.readMem(0xde75), 0x42);
        // 28 0214
        gbc.setState(0xb330, 0x22f2, 0x6530, 0xb2c8, 0x3761, 0x4723, 0x0, 0x1);
        gbc.writeMem(0xb330, { 0x28, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x22f2);
        EXPECT(gbc.pc(), 0xb332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb330), 0x28);
        EXPECT(gbc.readMem(0xb331), 0x9c);
        // 28 0215
        gbc.setState(0x20d1, 0xbab3, 0xded0, 0x6a27, 0xeaf9, 0x3c8e, 0x0, 0x0);
        gbc.writeMem(0x20d1, { 0x28, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbab3);
        EXPECT(gbc.pc(), 0x2111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0216
        gbc.setState(0x56ad, 0xaeae, 0x8cd0, 0x2058, 0x4835, 0x4ddb, 0x0, 0x0);
        gbc.writeMem(0x56ad, { 0x28, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaeae);
        EXPECT(gbc.pc(), 0x56ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0217
        gbc.setState(0x4ac, 0xeca1, 0x62f0, 0xf67e, 0xe1c1, 0x4d2e, 0x0, 0x1);
        gbc.writeMem(0x4ac, { 0x28, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xeca1);
        EXPECT(gbc.pc(), 0x434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0218
        gbc.setState(0x8a8c, 0x766e, 0x8600, 0x20a7, 0xa897, 0x43ce, 0x1, 0x1);
        gbc.writeMem(0x8a8c, { 0x28, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x766e);
        EXPECT(gbc.pc(), 0x8a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8c), 0x28);
        EXPECT(gbc.readMem(0x8a8d), 0x90);
        // 28 0219
        gbc.setState(0xa78f, 0x6bfa, 0x2190, 0xa99a, 0x74e3, 0xe00, 0x1, 0x1);
        gbc.writeMem(0xa78f, { 0x28, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6bfa);
        EXPECT(gbc.pc(), 0xa78b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78f), 0x28);
        EXPECT(gbc.readMem(0xa790), 0xfa);
        // 28 021A
        gbc.setState(0x8d70, 0x5b6d, 0xb7b0, 0x8723, 0x835b, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x8d70, { 0x28, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5b6d);
        EXPECT(gbc.pc(), 0x8d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d70), 0x28);
        EXPECT(gbc.readMem(0x8d71), 0xba);
        // 28 021B
        gbc.setState(0x4023, 0x6fcd, 0x5c70, 0x459c, 0xd9ad, 0x35ae, 0x0, 0x0);
        gbc.writeMem(0x4023, { 0x28, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6fcd);
        EXPECT(gbc.pc(), 0x4025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 021C
        gbc.setState(0x249f, 0xd68a, 0xce60, 0x4cbc, 0x3c24, 0xdb4f, 0x0, 0x1);
        gbc.writeMem(0x249f, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd68a);
        EXPECT(gbc.pc(), 0x24a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 021D
        gbc.setState(0x1642, 0x82ab, 0x3220, 0xd3fe, 0x9063, 0xe2fd, 0x0, 0x0);
        gbc.writeMem(0x1642, { 0x28, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x82ab);
        EXPECT(gbc.pc(), 0x1644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 021E
        gbc.setState(0x840a, 0x957e, 0x6060, 0xb765, 0x7ae3, 0x2961, 0x0, 0x0);
        gbc.writeMem(0x840a, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x957e);
        EXPECT(gbc.pc(), 0x840c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840a), 0x28);
        EXPECT(gbc.readMem(0x840b), 0x84);
        // 28 0220
        gbc.setState(0x8974, 0x415d, 0xc6c0, 0x6d3b, 0x9031, 0x9d6c, 0x1, 0x1);
        gbc.writeMem(0x8974, { 0x28, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x415d);
        EXPECT(gbc.pc(), 0x893f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8974), 0x28);
        EXPECT(gbc.readMem(0x8975), 0xc9);
        // 28 0221
        gbc.setState(0x18c3, 0x9502, 0x92e0, 0x71f, 0x1f58, 0x332d, 0x1, 0x0);
        gbc.writeMem(0x18c3, { 0x28, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9502);
        EXPECT(gbc.pc(), 0x191f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0222
        gbc.setState(0xda3, 0xa69, 0xc5b0, 0xd35f, 0x8496, 0x436f, 0x1, 0x0);
        gbc.writeMem(0xda3, { 0x28, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa69);
        EXPECT(gbc.pc(), 0xd77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0223
        gbc.setState(0x3a37, 0x5077, 0xba20, 0x581d, 0x89af, 0x59b5, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5077);
        EXPECT(gbc.pc(), 0x3a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0224
        gbc.setState(0x9cee, 0x9392, 0xc6e0, 0xe9e, 0xb195, 0x9a0f, 0x1, 0x0);
        gbc.writeMem(0x9cee, { 0x28, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9392);
        EXPECT(gbc.pc(), 0x9c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cee), 0x28);
        EXPECT(gbc.readMem(0x9cef), 0x91);
        // 28 0225
        gbc.setState(0xcc4f, 0xe61a, 0x5e80, 0x4289, 0x1851, 0x421f, 0x0, 0x0);
        gbc.writeMem(0xcc4f, { 0x28, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe61a);
        EXPECT(gbc.pc(), 0xccbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4f), 0x28);
        EXPECT(gbc.readMem(0xcc50), 0x6e);
        // 28 0227
        gbc.setState(0x829a, 0xdaf0, 0x8ab0, 0xfd3d, 0x38f5, 0x8bb9, 0x1, 0x1);
        gbc.writeMem(0x829a, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdaf0);
        EXPECT(gbc.pc(), 0x82f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829a), 0x28);
        EXPECT(gbc.readMem(0x829b), 0x58);
        // 28 0228
        gbc.setState(0x15a1, 0x53fa, 0x2da0, 0xf4ea, 0xb8e, 0xac3e, 0x1, 0x1);
        gbc.writeMem(0x15a1, { 0x28, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0x15a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0229
        gbc.setState(0x3b82, 0xfac2, 0xb8b0, 0x5113, 0x1ad4, 0x9c0c, 0x0, 0x1);
        gbc.writeMem(0x3b82, { 0x28, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0x3bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 022A
        gbc.setState(0xe968, 0x66d, 0x1fb0, 0x5f62, 0xfae, 0x254f, 0x0, 0x0);
        gbc.writeMem(0xe968, { 0x28, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x66d);
        EXPECT(gbc.pc(), 0xe9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe968), 0x28);
        EXPECT(gbc.readMem(0xe969), 0x51);
        // 28 022B
        gbc.setState(0xd041, 0x806b, 0x54a0, 0xa318, 0xd4b3, 0x5b91, 0x0, 0x0);
        gbc.writeMem(0xd041, { 0x28, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x806b);
        EXPECT(gbc.pc(), 0xd077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd041), 0x28);
        EXPECT(gbc.readMem(0xd042), 0x34);
        // 28 022C
        gbc.setState(0x86e2, 0xba28, 0x7630, 0xac34, 0xa1ff, 0xafa0, 0x1, 0x0);
        gbc.writeMem(0x86e2, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xba28);
        EXPECT(gbc.pc(), 0x86e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e2), 0x28);
        EXPECT(gbc.readMem(0x86e3), 0xef);
        // 28 022E
        gbc.setState(0x9589, 0xffd0, 0xd720, 0x12d5, 0xb103, 0x2c0b, 0x1, 0x1);
        gbc.writeMem(0x9589, { 0x28, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x958b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9589), 0x28);
        EXPECT(gbc.readMem(0x958a), 0x8e);
        // 28 0230
        gbc.setState(0xad4b, 0xea4f, 0xe60, 0x860b, 0x5f7b, 0x2a4b, 0x0, 0x0);
        gbc.writeMem(0xad4b, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xea4f);
        EXPECT(gbc.pc(), 0xad4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4b), 0x28);
        EXPECT(gbc.readMem(0xad4c), 0xad);
        // 28 0231
        gbc.setState(0x7d1e, 0x38da, 0xf660, 0x4384, 0xa082, 0xc0c4, 0x1, 0x1);
        gbc.writeMem(0x7d1e, { 0x28, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x38da);
        EXPECT(gbc.pc(), 0x7d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0232
        gbc.setState(0x7e7c, 0x9e9e, 0x2180, 0x7bc4, 0x5e8a, 0xbf57, 0x1, 0x0);
        gbc.writeMem(0x7e7c, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9e9e);
        EXPECT(gbc.pc(), 0x7eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0233
        gbc.setState(0x5cdf, 0x33aa, 0xab50, 0xc10, 0x12d0, 0x3be4, 0x0, 0x0);
        gbc.writeMem(0x5cdf, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x33aa);
        EXPECT(gbc.pc(), 0x5ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0234
        gbc.setState(0x4751, 0xab5e, 0x18d0, 0x7ab8, 0xf9d4, 0xaa43, 0x0, 0x0);
        gbc.writeMem(0x4751, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xab5e);
        EXPECT(gbc.pc(), 0x47ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0235
        gbc.setState(0x4ff9, 0x360d, 0x9670, 0xa12a, 0xa0d1, 0xfccd, 0x0, 0x1);
        gbc.writeMem(0x4ff9, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x360d);
        EXPECT(gbc.pc(), 0x4ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0237
        gbc.setState(0xa91c, 0x2c6d, 0x5f20, 0x6a81, 0xbba5, 0x9ebc, 0x0, 0x1);
        gbc.writeMem(0xa91c, { 0x28, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0xa91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91c), 0x28);
        EXPECT(gbc.readMem(0xa91d), 0x1a);
        // 28 0238
        gbc.setState(0x780b, 0x487f, 0x6750, 0x9477, 0x1085, 0xb671, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0x28, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0239
        gbc.setState(0x385e, 0x66b8, 0x6970, 0x97aa, 0xcd0e, 0xcbe6, 0x1, 0x1);
        gbc.writeMem(0x385e, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x66b8);
        EXPECT(gbc.pc(), 0x3860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 023A
        gbc.setState(0x1637, 0x830a, 0x3120, 0x5f4c, 0x607a, 0xbdcc, 0x1, 0x1);
        gbc.writeMem(0x1637, { 0x28, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x830a);
        EXPECT(gbc.pc(), 0x1639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 023B
        gbc.setState(0x281c, 0x1f35, 0x5c0, 0xe41c, 0x5d54, 0x7802, 0x1, 0x0);
        gbc.writeMem(0x281c, { 0x28, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1f35);
        EXPECT(gbc.pc(), 0x2858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 023C
        gbc.setState(0xcf15, 0x6025, 0x6870, 0x4f84, 0x5979, 0x65f7, 0x1, 0x0);
        gbc.writeMem(0xcf15, { 0x28, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6025);
        EXPECT(gbc.pc(), 0xcf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf15), 0x28);
        EXPECT(gbc.readMem(0xcf16), 0xd);
        // 28 023D
        gbc.setState(0x3dba, 0x1862, 0x2530, 0x37a2, 0xc1c2, 0x67e6, 0x0, 0x0);
        gbc.writeMem(0x3dba, { 0x28, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1862);
        EXPECT(gbc.pc(), 0x3dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 023E
        gbc.setState(0xb6b, 0x7ff4, 0xb7a0, 0xece0, 0xce90, 0x5327, 0x0, 0x0);
        gbc.writeMem(0xb6b, { 0x28, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7ff4);
        EXPECT(gbc.pc(), 0xb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 023F
        gbc.setState(0x1073, 0x9d13, 0x1780, 0x7c00, 0x101d, 0x1a1, 0x0, 0x0);
        gbc.writeMem(0x1073, { 0x28, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9d13);
        EXPECT(gbc.pc(), 0x10a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0240
        gbc.setState(0xbf4d, 0xef93, 0xae60, 0x494e, 0xcbc5, 0x4a06, 0x0, 0x1);
        gbc.writeMem(0xbf4d, { 0x28, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xef93);
        EXPECT(gbc.pc(), 0xbf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf4d), 0x28);
        EXPECT(gbc.readMem(0xbf4e), 0xf8);
        // 28 0241
        gbc.setState(0x14a3, 0x7901, 0x96b0, 0x4582, 0x148d, 0x7d54, 0x1, 0x0);
        gbc.writeMem(0x14a3, { 0x28, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7901);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0242
        gbc.setState(0xafcf, 0x1452, 0x46a0, 0xddb8, 0x5b22, 0xb03a, 0x1, 0x0);
        gbc.writeMem(0xafcf, { 0x28, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1452);
        EXPECT(gbc.pc(), 0xb00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcf), 0x28);
        EXPECT(gbc.readMem(0xafd0), 0x3b);
        // 28 0243
        gbc.setState(0xd85, 0x9235, 0x8120, 0x905a, 0x7f4, 0xbc51, 0x1, 0x0);
        gbc.writeMem(0xd85, { 0x28, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9235);
        EXPECT(gbc.pc(), 0xd87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0244
        gbc.setState(0xcf7f, 0xf3ed, 0xa9e0, 0xdbdb, 0x387a, 0xefe3, 0x0, 0x1);
        gbc.writeMem(0xcf7f, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf3ed);
        EXPECT(gbc.pc(), 0xcfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7f), 0x28);
        EXPECT(gbc.readMem(0xcf80), 0x54);
        // 28 0245
        gbc.setState(0xafa9, 0x3ac3, 0x3d70, 0x5125, 0xbc0b, 0x3751, 0x1, 0x0);
        gbc.writeMem(0xafa9, { 0x28, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3ac3);
        EXPECT(gbc.pc(), 0xafab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa9), 0x28);
        EXPECT(gbc.readMem(0xafaa), 0xa2);
        // 28 0246
        gbc.setState(0x9a73, 0x515e, 0x5640, 0xf427, 0x3d6e, 0x685, 0x1, 0x1);
        gbc.writeMem(0x9a73, { 0x28, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x515e);
        EXPECT(gbc.pc(), 0x9a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a73), 0x28);
        EXPECT(gbc.readMem(0x9a74), 0x16);
        // 28 0247
        gbc.setState(0xa1f2, 0x27f0, 0xbd50, 0xd877, 0x2095, 0x1692, 0x1, 0x0);
        gbc.writeMem(0xa1f2, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x27f0);
        EXPECT(gbc.pc(), 0xa1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f2), 0x28);
        EXPECT(gbc.readMem(0xa1f3), 0x56);
        // 28 0248
        gbc.setState(0xabd1, 0x48b0, 0xa1d0, 0xce9d, 0x20be, 0x6da1, 0x1, 0x0);
        gbc.writeMem(0xabd1, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x48b0);
        EXPECT(gbc.pc(), 0xab9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd1), 0x28);
        EXPECT(gbc.readMem(0xabd2), 0xcc);
        // 28 0249
        gbc.setState(0x1dbf, 0xd72e, 0x3fe0, 0xc0ec, 0x24cf, 0xceee, 0x0, 0x0);
        gbc.writeMem(0x1dbf, { 0x28, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd72e);
        EXPECT(gbc.pc(), 0x1d48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 024A
        gbc.setState(0x283c, 0x8ef5, 0x39a0, 0xbdd4, 0x70cf, 0x563, 0x0, 0x0);
        gbc.writeMem(0x283c, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8ef5);
        EXPECT(gbc.pc(), 0x2827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 024B
        gbc.setState(0x679f, 0xfe1d, 0x6210, 0xf346, 0x62a2, 0x3aae, 0x0, 0x0);
        gbc.writeMem(0x679f, { 0x28, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfe1d);
        EXPECT(gbc.pc(), 0x67a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 024C
        gbc.setState(0x8aed, 0x21c0, 0x640, 0x4355, 0x38c4, 0x354a, 0x1, 0x1);
        gbc.writeMem(0x8aed, { 0x28, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x21c0);
        EXPECT(gbc.pc(), 0x8aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aed), 0x28);
        EXPECT(gbc.readMem(0x8aee), 0x2d);
        // 28 024D
        gbc.setState(0x459f, 0x7908, 0xe230, 0x26f0, 0x16af, 0xc9be, 0x0, 0x0);
        gbc.writeMem(0x459f, { 0x28, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7908);
        EXPECT(gbc.pc(), 0x45a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 024E
        gbc.setState(0x9538, 0x6b00, 0x83e0, 0x60a5, 0xd318, 0x49f5, 0x1, 0x1);
        gbc.writeMem(0x9538, { 0x28, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6b00);
        EXPECT(gbc.pc(), 0x952b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9538), 0x28);
        EXPECT(gbc.readMem(0x9539), 0xf1);
        // 28 024F
        gbc.setState(0xd216, 0xccd, 0x11d0, 0x203c, 0xd089, 0xc976, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0x28, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xccd);
        EXPECT(gbc.pc(), 0xd1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd216), 0x28);
        EXPECT(gbc.readMem(0xd217), 0xcf);
        // 28 0250
        gbc.setState(0x20f1, 0xcc57, 0x5810, 0xff73, 0x8b0f, 0xe3de, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0x28, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcc57);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0251
        gbc.setState(0x53ac, 0x43d4, 0x27e0, 0xb31d, 0xf6e2, 0xdecd, 0x1, 0x1);
        gbc.writeMem(0x53ac, { 0x28, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0x53b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0252
        gbc.setState(0x879b, 0x82b5, 0x5e40, 0x41f0, 0x5275, 0x4932, 0x1, 0x0);
        gbc.writeMem(0x879b, { 0x28, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x82b5);
        EXPECT(gbc.pc(), 0x879d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879b), 0x28);
        EXPECT(gbc.readMem(0x879c), 0x5c);
        // 28 0253
        gbc.setState(0x5959, 0x82c2, 0x4100, 0xb149, 0x1b96, 0xee4e, 0x1, 0x1);
        gbc.writeMem(0x5959, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x82c2);
        EXPECT(gbc.pc(), 0x595b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0254
        gbc.setState(0x9d83, 0x47ac, 0x5c60, 0x3e6e, 0x4bfe, 0x7594, 0x1, 0x0);
        gbc.writeMem(0x9d83, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0x9d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d83), 0x28);
        EXPECT(gbc.readMem(0x9d84), 0x4b);
        // 28 0255
        gbc.setState(0x3377, 0xf88c, 0xfff0, 0xf1f2, 0x3b31, 0x1739, 0x1, 0x1);
        gbc.writeMem(0x3377, { 0x28, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf88c);
        EXPECT(gbc.pc(), 0x3324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0256
        gbc.setState(0x1dfb, 0xb77e, 0xce20, 0xb947, 0xcfc7, 0x91a6, 0x0, 0x0);
        gbc.writeMem(0x1dfb, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0x1dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0257
        gbc.setState(0x57c, 0x11b4, 0x7340, 0x9b5c, 0xe2d4, 0x3fa9, 0x0, 0x1);
        gbc.writeMem(0x57c, { 0x28, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x11b4);
        EXPECT(gbc.pc(), 0x57e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0258
        gbc.setState(0xe2e9, 0x9ac5, 0x2d0, 0xe757, 0x7a9, 0x32df, 0x0, 0x1);
        gbc.writeMem(0xe2e9, { 0x28, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9ac5);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e9), 0x28);
        EXPECT(gbc.readMem(0xe2ea), 0xf8);
        // 28 0259
        gbc.setState(0xb3b6, 0x3de4, 0x5830, 0x3437, 0x5e2e, 0xe106, 0x1, 0x1);
        gbc.writeMem(0xb3b6, { 0x28, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3de4);
        EXPECT(gbc.pc(), 0xb3b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b6), 0x28);
        EXPECT(gbc.readMem(0xb3b7), 0x1);
        // 28 025A
        gbc.setState(0x5eaa, 0x6228, 0x3d0, 0xf1a7, 0xe09, 0x5d52, 0x0, 0x0);
        gbc.writeMem(0x5eaa, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6228);
        EXPECT(gbc.pc(), 0x5ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 025B
        gbc.setState(0x6a1f, 0x8024, 0x30b0, 0x90cb, 0xa835, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0x6a1f, { 0x28, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8024);
        EXPECT(gbc.pc(), 0x6a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 025C
        gbc.setState(0x37e4, 0x161f, 0xc3d0, 0x548b, 0xc62c, 0x7d5b, 0x1, 0x0);
        gbc.writeMem(0x37e4, { 0x28, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x161f);
        EXPECT(gbc.pc(), 0x37da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 025D
        gbc.setState(0xa1ad, 0x9224, 0x9530, 0x537b, 0xc645, 0x7b3e, 0x0, 0x1);
        gbc.writeMem(0xa1ad, { 0x28, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9224);
        EXPECT(gbc.pc(), 0xa1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ad), 0x28);
        EXPECT(gbc.readMem(0xa1ae), 0xd1);
        // 28 025E
        gbc.setState(0x5df, 0xd856, 0x3920, 0x51f5, 0x2008, 0x69b1, 0x1, 0x0);
        gbc.writeMem(0x5df, { 0x28, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd856);
        EXPECT(gbc.pc(), 0x5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 025F
        gbc.setState(0xeac4, 0x5368, 0xa970, 0x680d, 0x5428, 0x1edd, 0x1, 0x1);
        gbc.writeMem(0xeac4, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5368);
        EXPECT(gbc.pc(), 0xeac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac4), 0x28);
        EXPECT(gbc.readMem(0xeac5), 0xb5);
        // 28 0260
        gbc.setState(0x4461, 0x479, 0x2840, 0x6c5f, 0x4d6e, 0x5672, 0x1, 0x1);
        gbc.writeMem(0x4461, { 0x28, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x479);
        EXPECT(gbc.pc(), 0x4463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0261
        gbc.setState(0xabfe, 0x4451, 0xa330, 0x87f7, 0xd13b, 0x2b2d, 0x0, 0x1);
        gbc.writeMem(0xabfe, { 0x28, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4451);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfe), 0x28);
        EXPECT(gbc.readMem(0xabff), 0x1c);
        // 28 0262
        gbc.setState(0x890d, 0x5e1e, 0x2890, 0xb49d, 0xdf74, 0x341a, 0x0, 0x1);
        gbc.writeMem(0x890d, { 0x28, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5e1e);
        EXPECT(gbc.pc(), 0x8951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890d), 0x28);
        EXPECT(gbc.readMem(0x890e), 0x42);
        // 28 0263
        gbc.setState(0x40d1, 0xc569, 0x4db0, 0x208d, 0xe92, 0x8010, 0x1, 0x0);
        gbc.writeMem(0x40d1, { 0x28, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc569);
        EXPECT(gbc.pc(), 0x414a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0264
        gbc.setState(0xce01, 0x17, 0xcbd0, 0xdaca, 0x2c63, 0x853e, 0x0, 0x0);
        gbc.writeMem(0xce01, { 0x28, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x17);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce01), 0x28);
        EXPECT(gbc.readMem(0xce02), 0x6b);
        // 28 0265
        gbc.setState(0x5420, 0xd7d, 0xfc80, 0xedea, 0x84ac, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0x5420, { 0x28, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd7d);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0266
        gbc.setState(0x8b65, 0x8620, 0x4e10, 0xc563, 0xa588, 0x6188, 0x0, 0x0);
        gbc.writeMem(0x8b65, { 0x28, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8620);
        EXPECT(gbc.pc(), 0x8b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b65), 0x28);
        EXPECT(gbc.readMem(0x8b66), 0xdb);
        // 28 0267
        gbc.setState(0x9214, 0x83d0, 0xd710, 0x65a5, 0x46b5, 0xaa6f, 0x0, 0x0);
        gbc.writeMem(0x9214, { 0x28, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x83d0);
        EXPECT(gbc.pc(), 0x9216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9214), 0x28);
        EXPECT(gbc.readMem(0x9215), 0x1b);
        // 28 0268
        gbc.setState(0x8810, 0x1886, 0x7db0, 0x361d, 0x3570, 0xc5d6, 0x1, 0x1);
        gbc.writeMem(0x8810, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1886);
        EXPECT(gbc.pc(), 0x8802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8810), 0x28);
        EXPECT(gbc.readMem(0x8811), 0xf0);
        // 28 0269
        gbc.setState(0x50ae, 0x3d73, 0x68a0, 0xe9d7, 0xee81, 0xb8ee, 0x1, 0x1);
        gbc.writeMem(0x50ae, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3d73);
        EXPECT(gbc.pc(), 0x50fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 026A
        gbc.setState(0x71ef, 0x52e9, 0x97a0, 0x404, 0x16c7, 0xcbee, 0x0, 0x1);
        gbc.writeMem(0x71ef, { 0x28, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x52e9);
        EXPECT(gbc.pc(), 0x722c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 026B
        gbc.setState(0x80b6, 0x1a86, 0xd380, 0x8d26, 0xae72, 0xf3aa, 0x1, 0x1);
        gbc.writeMem(0x80b6, { 0x28, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1a86);
        EXPECT(gbc.pc(), 0x803b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b6), 0x28);
        EXPECT(gbc.readMem(0x80b7), 0x83);
        // 28 026C
        gbc.setState(0x47b6, 0xfa69, 0x65f0, 0x985f, 0x56b5, 0xd2c6, 0x0, 0x0);
        gbc.writeMem(0x47b6, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfa69);
        EXPECT(gbc.pc(), 0x47ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 026D
        gbc.setState(0xd6cb, 0xebf, 0x7190, 0x8030, 0x8765, 0xe0c0, 0x1, 0x1);
        gbc.writeMem(0xd6cb, { 0x28, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xebf);
        EXPECT(gbc.pc(), 0xd67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cb), 0x28);
        EXPECT(gbc.readMem(0xd6cc), 0xb0);
        // 28 026F
        gbc.setState(0x96af, 0x6e0a, 0x4490, 0x2a21, 0x4998, 0x9419, 0x1, 0x1);
        gbc.writeMem(0x96af, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6e0a);
        EXPECT(gbc.pc(), 0x96b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96af), 0x28);
        EXPECT(gbc.readMem(0x96b0), 0x2);
        // 28 0270
        gbc.setState(0xbcfb, 0x4e91, 0xc1f0, 0x2ad9, 0x23f4, 0xbe9, 0x0, 0x0);
        gbc.writeMem(0xbcfb, { 0x28, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4e91);
        EXPECT(gbc.pc(), 0xbcca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfb), 0x28);
        EXPECT(gbc.readMem(0xbcfc), 0xcd);
        // 28 0271
        gbc.setState(0x99a0, 0x2f23, 0xb0a0, 0x28c5, 0x87bf, 0x8d66, 0x0, 0x1);
        gbc.writeMem(0x99a0, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2f23);
        EXPECT(gbc.pc(), 0x9976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a0), 0x28);
        EXPECT(gbc.readMem(0x99a1), 0xd4);
        // 28 0272
        gbc.setState(0xe140, 0x6542, 0x5a50, 0x2630, 0xb6bc, 0xa624, 0x0, 0x0);
        gbc.writeMem(0xe140, { 0x28, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6542);
        EXPECT(gbc.pc(), 0xe142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe140), 0x28);
        EXPECT(gbc.readMem(0xe141), 0xa3);
        // 28 0273
        gbc.setState(0x2629, 0x8276, 0x3810, 0x1bc6, 0x9f92, 0xe742, 0x0, 0x1);
        gbc.writeMem(0x2629, { 0x28, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8276);
        EXPECT(gbc.pc(), 0x262b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0274
        gbc.setState(0x760c, 0x4350, 0xd300, 0x9730, 0x65e0, 0xf505, 0x0, 0x1);
        gbc.writeMem(0x760c, { 0x28, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4350);
        EXPECT(gbc.pc(), 0x760e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0275
        gbc.setState(0x70cf, 0xdf6, 0x9990, 0x37c7, 0x4686, 0xe04e, 0x0, 0x0);
        gbc.writeMem(0x70cf, { 0x28, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdf6);
        EXPECT(gbc.pc(), 0x7066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0276
        gbc.setState(0x9f68, 0xc5bf, 0x64c0, 0x3248, 0xad18, 0x7ed8, 0x0, 0x1);
        gbc.writeMem(0x9f68, { 0x28, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5bf);
        EXPECT(gbc.pc(), 0x9f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f68), 0x28);
        EXPECT(gbc.readMem(0x9f69), 0xea);
        // 28 0277
        gbc.setState(0x8a1e, 0xdc2a, 0x8770, 0xeb36, 0x6aae, 0x1753, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdc2a);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0x28);
        EXPECT(gbc.readMem(0x8a1f), 0x58);
        // 28 0278
        gbc.setState(0xab25, 0x3a01, 0xfed0, 0xc4be, 0x32ca, 0xb3d6, 0x0, 0x0);
        gbc.writeMem(0xab25, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3a01);
        EXPECT(gbc.pc(), 0xab7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab25), 0x28);
        EXPECT(gbc.readMem(0xab26), 0x57);
        // 28 0279
        gbc.setState(0x3613, 0xc45b, 0xd2a0, 0x194b, 0x2112, 0x3b07, 0x0, 0x1);
        gbc.writeMem(0x3613, { 0x28, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc45b);
        EXPECT(gbc.pc(), 0x3638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 027A
        gbc.setState(0x1458, 0xb6f5, 0x3bc0, 0xb836, 0xe68c, 0x90fa, 0x1, 0x0);
        gbc.writeMem(0x1458, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb6f5);
        EXPECT(gbc.pc(), 0x13f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 027B
        gbc.setState(0x4590, 0x2b5d, 0xf030, 0x1686, 0x8462, 0xe15a, 0x1, 0x0);
        gbc.writeMem(0x4590, { 0x28, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2b5d);
        EXPECT(gbc.pc(), 0x4592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 027C
        gbc.setState(0xd00c, 0x1250, 0xe950, 0xc32e, 0x10e5, 0x711d, 0x1, 0x1);
        gbc.writeMem(0xd00c, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1250);
        EXPECT(gbc.pc(), 0xd00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00c), 0x28);
        EXPECT(gbc.readMem(0xd00d), 0xd7);
        // 28 027D
        gbc.setState(0x3ed5, 0xf92e, 0x9770, 0x27cf, 0x537, 0x2352, 0x0, 0x0);
        gbc.writeMem(0x3ed5, { 0x28, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf92e);
        EXPECT(gbc.pc(), 0x3ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 027E
        gbc.setState(0x3fa2, 0x5a69, 0xf710, 0x2ea2, 0x8c9a, 0x6c3e, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5a69);
        EXPECT(gbc.pc(), 0x3fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 027F
        gbc.setState(0xc977, 0xe4fd, 0x9090, 0x68c9, 0xe6ab, 0xea16, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe4fd);
        EXPECT(gbc.pc(), 0xc9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc977), 0x28);
        EXPECT(gbc.readMem(0xc978), 0x56);
        // 28 0280
        gbc.setState(0x2c00, 0xb8bb, 0x6bf0, 0x4ff9, 0x56ab, 0x7659, 0x1, 0x0);
        gbc.writeMem(0x2c00, { 0x28, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb8bb);
        EXPECT(gbc.pc(), 0x2c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0283
        gbc.setState(0x717f, 0x285a, 0xf3f0, 0x9545, 0x4e1e, 0x21e1, 0x1, 0x1);
        gbc.writeMem(0x717f, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x285a);
        EXPECT(gbc.pc(), 0x7132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0284
        gbc.setState(0x1663, 0x2af0, 0xb200, 0x61e6, 0x2c88, 0x6765, 0x1, 0x0);
        gbc.writeMem(0x1663, { 0x28, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2af0);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0285
        gbc.setState(0xdf08, 0x8d22, 0x1e20, 0xd486, 0x98ce, 0xd0f8, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0x28, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf08), 0x28);
        EXPECT(gbc.readMem(0xdf09), 0x6f);
        // 28 0286
        gbc.setState(0xb4f8, 0xc944, 0x3c10, 0xd9d, 0x6c44, 0xeb46, 0x0, 0x1);
        gbc.writeMem(0xb4f8, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc944);
        EXPECT(gbc.pc(), 0xb4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f8), 0x28);
        EXPECT(gbc.readMem(0xb4f9), 0xa8);
        // 28 0287
        gbc.setState(0x9608, 0xad61, 0x6950, 0x2e3a, 0x6326, 0xde69, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0x28, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xad61);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9608), 0x28);
        EXPECT(gbc.readMem(0x9609), 0xb8);
        // 28 0288
        gbc.setState(0xccf1, 0x7e9c, 0x4070, 0xeec1, 0xf861, 0x3c3f, 0x0, 0x0);
        gbc.writeMem(0xccf1, { 0x28, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7e9c);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf1), 0x28);
        EXPECT(gbc.readMem(0xccf2), 0xec);
        // 28 0289
        gbc.setState(0xa15a, 0x7469, 0xdd10, 0xa895, 0x7b04, 0xa01f, 0x0, 0x0);
        gbc.writeMem(0xa15a, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7469);
        EXPECT(gbc.pc(), 0xa15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15a), 0x28);
        EXPECT(gbc.readMem(0xa15b), 0x67);
        // 28 028A
        gbc.setState(0xb4a9, 0x345e, 0x44d0, 0xf2ad, 0x4671, 0xc656, 0x1, 0x0);
        gbc.writeMem(0xb4a9, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x345e);
        EXPECT(gbc.pc(), 0xb450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a9), 0x28);
        EXPECT(gbc.readMem(0xb4aa), 0xa5);
        // 28 028B
        gbc.setState(0x370c, 0x8224, 0xe480, 0x78dc, 0x6e75, 0x67ad, 0x1, 0x1);
        gbc.writeMem(0x370c, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8224);
        EXPECT(gbc.pc(), 0x3703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 028C
        gbc.setState(0xed48, 0x7bd8, 0x7920, 0x8d17, 0xee15, 0xd8c6, 0x0, 0x1);
        gbc.writeMem(0xed48, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7bd8);
        EXPECT(gbc.pc(), 0xed4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed48), 0x28);
        EXPECT(gbc.readMem(0xed49), 0x57);
        // 28 028D
        gbc.setState(0x58ea, 0x1251, 0x4610, 0x7c9b, 0x9c9f, 0xb2cd, 0x0, 0x0);
        gbc.writeMem(0x58ea, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1251);
        EXPECT(gbc.pc(), 0x58ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 028E
        gbc.setState(0x7393, 0x4fbe, 0xcfd0, 0xed82, 0x37f1, 0x303a, 0x1, 0x1);
        gbc.writeMem(0x7393, { 0x28, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4fbe);
        EXPECT(gbc.pc(), 0x73d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 028F
        gbc.setState(0x96c6, 0x5f1e, 0x46d0, 0x6923, 0xb2ba, 0x82d3, 0x0, 0x0);
        gbc.writeMem(0x96c6, { 0x28, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5f1e);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c6), 0x28);
        EXPECT(gbc.readMem(0x96c7), 0xfb);
        // 28 0290
        gbc.setState(0x93f5, 0x2876, 0xdb00, 0x6c8b, 0x991, 0xe107, 0x1, 0x0);
        gbc.writeMem(0x93f5, { 0x28, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2876);
        EXPECT(gbc.pc(), 0x93f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f5), 0x28);
        EXPECT(gbc.readMem(0x93f6), 0x66);
        // 28 0291
        gbc.setState(0x8acc, 0xe08, 0xa330, 0x52aa, 0xea27, 0x7733, 0x1, 0x1);
        gbc.writeMem(0x8acc, { 0x28, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe08);
        EXPECT(gbc.pc(), 0x8ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acc), 0x28);
        EXPECT(gbc.readMem(0x8acd), 0x17);
        // 28 0293
        gbc.setState(0xad4e, 0x503d, 0xc290, 0xfa6d, 0x96fe, 0xf2bb, 0x0, 0x0);
        gbc.writeMem(0xad4e, { 0x28, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x503d);
        EXPECT(gbc.pc(), 0xad2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4e), 0x28);
        EXPECT(gbc.readMem(0xad4f), 0xdb);
        // 28 0294
        gbc.setState(0xdae5, 0x61f4, 0xdd80, 0xa517, 0xdc6a, 0x9f13, 0x0, 0x0);
        gbc.writeMem(0xdae5, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x61f4);
        EXPECT(gbc.pc(), 0xdad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae5), 0x28);
        EXPECT(gbc.readMem(0xdae6), 0xef);
        // 28 0295
        gbc.setState(0xbb34, 0xa072, 0x7c00, 0x5001, 0xe3d5, 0x51b, 0x0, 0x1);
        gbc.writeMem(0xbb34, { 0x28, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa072);
        EXPECT(gbc.pc(), 0xbb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb34), 0x28);
        EXPECT(gbc.readMem(0xbb35), 0x81);
        // 28 0296
        gbc.setState(0xb49a, 0x5c70, 0x52b0, 0xb107, 0x9ead, 0x3f89, 0x1, 0x1);
        gbc.writeMem(0xb49a, { 0x28, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5c70);
        EXPECT(gbc.pc(), 0xb433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb49a), 0x28);
        EXPECT(gbc.readMem(0xb49b), 0x97);
        // 28 0297
        gbc.setState(0x5284, 0xdf89, 0x5bb0, 0x9a86, 0xe33c, 0x897, 0x1, 0x0);
        gbc.writeMem(0x5284, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdf89);
        EXPECT(gbc.pc(), 0x523a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0298
        gbc.setState(0x12b2, 0x8c77, 0xafe0, 0x7eaa, 0xb467, 0x1015, 0x0, 0x1);
        gbc.writeMem(0x12b2, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8c77);
        EXPECT(gbc.pc(), 0x1261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 029A
        gbc.setState(0xeb2b, 0x6fe7, 0xc930, 0x7479, 0x76c2, 0x71ff, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6fe7);
        EXPECT(gbc.pc(), 0xeb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2b), 0x28);
        EXPECT(gbc.readMem(0xeb2c), 0x32);
        // 28 029B
        gbc.setState(0x8ba8, 0xd344, 0xa5b0, 0x3eb6, 0x7a13, 0x17a, 0x1, 0x0);
        gbc.writeMem(0x8ba8, { 0x28, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd344);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba8), 0x28);
        EXPECT(gbc.readMem(0x8ba9), 0xc4);
        // 28 029C
        gbc.setState(0x2efd, 0x5344, 0xc30, 0xd96b, 0x4823, 0x9f61, 0x1, 0x1);
        gbc.writeMem(0x2efd, { 0x28, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5344);
        EXPECT(gbc.pc(), 0x2eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 029D
        gbc.setState(0x2dea, 0xd277, 0x12b0, 0xb194, 0x903f, 0x5e61, 0x0, 0x1);
        gbc.writeMem(0x2dea, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0x2e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 029E
        gbc.setState(0x21ea, 0x9224, 0xbb70, 0xa226, 0x2a03, 0xdfa1, 0x0, 0x1);
        gbc.writeMem(0x21ea, { 0x28, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9224);
        EXPECT(gbc.pc(), 0x21ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 029F
        gbc.setState(0x4859, 0x6304, 0x1650, 0xb63b, 0x2b9d, 0x35d1, 0x1, 0x0);
        gbc.writeMem(0x4859, { 0x28, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6304);
        EXPECT(gbc.pc(), 0x485b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02A0
        gbc.setState(0x4fc9, 0x36c, 0x1050, 0xc3a1, 0xd7f9, 0x2271, 0x0, 0x0);
        gbc.writeMem(0x4fc9, { 0x28, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x36c);
        EXPECT(gbc.pc(), 0x4fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02A1
        gbc.setState(0xd2a9, 0x655d, 0x8c60, 0xd162, 0xa581, 0xc966, 0x1, 0x1);
        gbc.writeMem(0xd2a9, { 0x28, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x655d);
        EXPECT(gbc.pc(), 0xd2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a9), 0x28);
        EXPECT(gbc.readMem(0xd2aa), 0x79);
        // 28 02A2
        gbc.setState(0x4914, 0x184d, 0xf220, 0x3fa2, 0xcc0, 0xe98, 0x0, 0x1);
        gbc.writeMem(0x4914, { 0x28, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x184d);
        EXPECT(gbc.pc(), 0x4916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02A3
        gbc.setState(0x543, 0x166b, 0x1080, 0x63e6, 0xa6f4, 0xed0, 0x0, 0x1);
        gbc.writeMem(0x543, { 0x28, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x166b);
        EXPECT(gbc.pc(), 0x561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02A4
        gbc.setState(0x648c, 0xc118, 0x1440, 0xcc8, 0x8fa3, 0xb27d, 0x1, 0x0);
        gbc.writeMem(0x648c, { 0x28, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc118);
        EXPECT(gbc.pc(), 0x648e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02A5
        gbc.setState(0x9de6, 0x81c6, 0x750, 0x2982, 0xbd82, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0x9de6, { 0x28, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x81c6);
        EXPECT(gbc.pc(), 0x9de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de6), 0x28);
        EXPECT(gbc.readMem(0x9de7), 0x41);
        // 28 02A6
        gbc.setState(0x1cd, 0xce78, 0x9ac0, 0xd2c2, 0xf05b, 0x3839, 0x0, 0x1);
        gbc.writeMem(0x1cd, { 0x28, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xce78);
        EXPECT(gbc.pc(), 0x20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02A7
        gbc.setState(0x7a7d, 0x7f6, 0xa7c0, 0xf811, 0xb24e, 0x83d3, 0x0, 0x0);
        gbc.writeMem(0x7a7d, { 0x28, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7f6);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02A8
        gbc.setState(0x65e4, 0x6838, 0xeee0, 0x10a3, 0xf423, 0x5718, 0x1, 0x1);
        gbc.writeMem(0x65e4, { 0x28, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6838);
        EXPECT(gbc.pc(), 0x65ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02AA
        gbc.setState(0xc9ed, 0x7845, 0x66d0, 0x7efe, 0x63eb, 0xe462, 0x1, 0x1);
        gbc.writeMem(0xc9ed, { 0x28, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7845);
        EXPECT(gbc.pc(), 0xca4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ed), 0x28);
        EXPECT(gbc.readMem(0xc9ee), 0x5b);
        // 28 02AB
        gbc.setState(0x53ad, 0xc9bc, 0x92c0, 0x61ef, 0xc352, 0xf25e, 0x0, 0x0);
        gbc.writeMem(0x53ad, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc9bc);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02AC
        gbc.setState(0x18a1, 0x640e, 0xf190, 0xf3b7, 0x69d8, 0x4258, 0x0, 0x1);
        gbc.writeMem(0x18a1, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x640e);
        EXPECT(gbc.pc(), 0x1857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02AD
        gbc.setState(0xa835, 0xc212, 0x6c70, 0x20c0, 0x7904, 0x5ec1, 0x0, 0x0);
        gbc.writeMem(0xa835, { 0x28, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc212);
        EXPECT(gbc.pc(), 0xa837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa835), 0x28);
        EXPECT(gbc.readMem(0xa836), 0xc3);
        // 28 02AE
        gbc.setState(0xccfe, 0x429d, 0x9a20, 0xa582, 0xe39e, 0x218d, 0x0, 0x1);
        gbc.writeMem(0xccfe, { 0x28, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0xcd00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfe), 0x28);
        EXPECT(gbc.readMem(0xccff), 0x4);
        // 28 02AF
        gbc.setState(0x4b1d, 0x4ca4, 0xf390, 0x4f32, 0xe806, 0xd495, 0x1, 0x1);
        gbc.writeMem(0x4b1d, { 0x28, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4ca4);
        EXPECT(gbc.pc(), 0x4b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02B0
        gbc.setState(0xaa07, 0x632b, 0xa800, 0x1edb, 0xa570, 0x36b9, 0x1, 0x1);
        gbc.writeMem(0xaa07, { 0x28, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x632b);
        EXPECT(gbc.pc(), 0xaa09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa07), 0x28);
        EXPECT(gbc.readMem(0xaa08), 0xa4);
        // 28 02B1
        gbc.setState(0x75f0, 0xc148, 0x6960, 0xd3e6, 0xe56c, 0x6795, 0x1, 0x0);
        gbc.writeMem(0x75f0, { 0x28, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc148);
        EXPECT(gbc.pc(), 0x75f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02B2
        gbc.setState(0x44e3, 0x21da, 0x6e0, 0x3016, 0xb188, 0xbe33, 0x0, 0x1);
        gbc.writeMem(0x44e3, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x21da);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02B3
        gbc.setState(0x7487, 0x7739, 0x2d80, 0xc4d6, 0x64cd, 0x7807, 0x1, 0x0);
        gbc.writeMem(0x7487, { 0x28, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7739);
        EXPECT(gbc.pc(), 0x746e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02B4
        gbc.setState(0x73bf, 0x4113, 0x16a0, 0x78c6, 0xaae, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0x73bf, { 0x28, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4113);
        EXPECT(gbc.pc(), 0x740b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02B5
        gbc.setState(0x9e9e, 0x197a, 0x3f90, 0xcd79, 0x69e4, 0x6c25, 0x0, 0x1);
        gbc.writeMem(0x9e9e, { 0x28, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x197a);
        EXPECT(gbc.pc(), 0x9e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9e), 0x28);
        EXPECT(gbc.readMem(0x9e9f), 0x9b);
        // 28 02B7
        gbc.setState(0x2956, 0xc7ba, 0xd640, 0x229a, 0x372, 0xa146, 0x0, 0x0);
        gbc.writeMem(0x2956, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc7ba);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02B8
        gbc.setState(0x101, 0xeb91, 0x9dd0, 0x87de, 0x4b89, 0x8711, 0x1, 0x1);
        gbc.writeMem(0x101, { 0x28, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xeb91);
        EXPECT(gbc.pc(), 0x177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02B9
        gbc.setState(0xc510, 0x2714, 0x4dc0, 0x41bc, 0x2753, 0x8189, 0x1, 0x1);
        gbc.writeMem(0xc510, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2714);
        EXPECT(gbc.pc(), 0xc4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc510), 0x28);
        EXPECT(gbc.readMem(0xc511), 0xad);
        // 28 02BB
        gbc.setState(0x8a0a, 0x6b41, 0xc170, 0x5112, 0xa3d8, 0xae0d, 0x1, 0x1);
        gbc.writeMem(0x8a0a, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6b41);
        EXPECT(gbc.pc(), 0x8a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0a), 0x28);
        EXPECT(gbc.readMem(0x8a0b), 0xf5);
        // 28 02BC
        gbc.setState(0xa738, 0x9a14, 0x1db0, 0xe61d, 0xafe4, 0x703f, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x28, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9a14);
        EXPECT(gbc.pc(), 0xa70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa738), 0x28);
        EXPECT(gbc.readMem(0xa739), 0xd1);
        // 28 02BD
        gbc.setState(0xc631, 0x1873, 0x24c0, 0xf6c9, 0xec4b, 0x709b, 0x1, 0x1);
        gbc.writeMem(0xc631, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1873);
        EXPECT(gbc.pc(), 0xc607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc631), 0x28);
        EXPECT(gbc.readMem(0xc632), 0xd4);
        // 28 02BE
        gbc.setState(0x691d, 0xd641, 0x9020, 0xe827, 0x2d90, 0x8923, 0x0, 0x1);
        gbc.writeMem(0x691d, { 0x28, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd641);
        EXPECT(gbc.pc(), 0x691f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02BF
        gbc.setState(0x5aa1, 0x1bb3, 0xed60, 0x76a8, 0x4b6, 0xf9fd, 0x1, 0x1);
        gbc.writeMem(0x5aa1, { 0x28, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1bb3);
        EXPECT(gbc.pc(), 0x5aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02C0
        gbc.setState(0xc1ba, 0x6128, 0x1550, 0xf062, 0x4792, 0xa292, 0x1, 0x0);
        gbc.writeMem(0xc1ba, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6128);
        EXPECT(gbc.pc(), 0xc1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ba), 0x28);
        EXPECT(gbc.readMem(0xc1bb), 0xf0);
        // 28 02C2
        gbc.setState(0x77df, 0xc331, 0xb9f0, 0xbd98, 0xd614, 0xde57, 0x1, 0x0);
        gbc.writeMem(0x77df, { 0x28, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc331);
        EXPECT(gbc.pc(), 0x783e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02C3
        gbc.setState(0x5ffa, 0x3e9b, 0x6c20, 0x52b4, 0xddb8, 0xe1ec, 0x0, 0x0);
        gbc.writeMem(0x5ffa, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3e9b);
        EXPECT(gbc.pc(), 0x5ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02C4
        gbc.setState(0x818b, 0xa420, 0x31a0, 0xe9e7, 0xf983, 0xa931, 0x1, 0x0);
        gbc.writeMem(0x818b, { 0x28, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa420);
        EXPECT(gbc.pc(), 0x8120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818b), 0x28);
        EXPECT(gbc.readMem(0x818c), 0x93);
        // 28 02C5
        gbc.setState(0x65cf, 0x923c, 0x7a60, 0x311c, 0xf44f, 0x3577, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0x28, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x923c);
        EXPECT(gbc.pc(), 0x65d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02C6
        gbc.setState(0x18cc, 0xbe71, 0xd330, 0xbf9d, 0xa988, 0x853f, 0x0, 0x1);
        gbc.writeMem(0x18cc, { 0x28, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbe71);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02C7
        gbc.setState(0x25ba, 0x2c28, 0xaac0, 0x2ad3, 0x96bc, 0x4b83, 0x1, 0x0);
        gbc.writeMem(0x25ba, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2c28);
        EXPECT(gbc.pc(), 0x25a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02C8
        gbc.setState(0x6119, 0xd776, 0xe820, 0xca2d, 0x533f, 0xaa94, 0x0, 0x1);
        gbc.writeMem(0x6119, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd776);
        EXPECT(gbc.pc(), 0x611b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02C9
        gbc.setState(0x457a, 0x8690, 0x2f00, 0x5ee2, 0xa2ff, 0x7b6, 0x0, 0x1);
        gbc.writeMem(0x457a, { 0x28, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8690);
        EXPECT(gbc.pc(), 0x457c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02CA
        gbc.setState(0x3a06, 0x887d, 0x2350, 0x2ab, 0x3695, 0x49c9, 0x1, 0x1);
        gbc.writeMem(0x3a06, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x887d);
        EXPECT(gbc.pc(), 0x3a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02CB
        gbc.setState(0xb78d, 0xfad9, 0xeb00, 0x51a2, 0xd92f, 0x96cd, 0x0, 0x0);
        gbc.writeMem(0xb78d, { 0x28, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfad9);
        EXPECT(gbc.pc(), 0xb78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78d), 0x28);
        EXPECT(gbc.readMem(0xb78e), 0xf);
        // 28 02CC
        gbc.setState(0x3944, 0x8c49, 0xf6c0, 0x3160, 0x7681, 0xee5d, 0x1, 0x0);
        gbc.writeMem(0x3944, { 0x28, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x38e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02CD
        gbc.setState(0xd432, 0x9e60, 0x1d10, 0xb3cf, 0x98cb, 0x7f83, 0x1, 0x0);
        gbc.writeMem(0xd432, { 0x28, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9e60);
        EXPECT(gbc.pc(), 0xd434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd432), 0x28);
        EXPECT(gbc.readMem(0xd433), 0xc1);
        // 28 02CE
        gbc.setState(0x3bbd, 0x3388, 0x7ce0, 0x9d85, 0x25e1, 0x61df, 0x1, 0x1);
        gbc.writeMem(0x3bbd, { 0x28, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3388);
        EXPECT(gbc.pc(), 0x3c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02CF
        gbc.setState(0xe2d9, 0x6c0f, 0x29c0, 0x1217, 0x1e60, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0xe2d9, { 0x28, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6c0f);
        EXPECT(gbc.pc(), 0xe29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d9), 0x28);
        EXPECT(gbc.readMem(0xe2da), 0xc0);
        // 28 02D0
        gbc.setState(0x24e4, 0xb94, 0x4410, 0x3883, 0x2e7c, 0x1f09, 0x0, 0x0);
        gbc.writeMem(0x24e4, { 0x28, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb94);
        EXPECT(gbc.pc(), 0x24e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02D2
        gbc.setState(0x7d81, 0x104a, 0x18c0, 0x673e, 0x41d7, 0x654d, 0x1, 0x0);
        gbc.writeMem(0x7d81, { 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x104a);
        EXPECT(gbc.pc(), 0x7d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02D3
        gbc.setState(0x1cee, 0xfd7e, 0x9970, 0x5916, 0xe86f, 0xd2f5, 0x1, 0x0);
        gbc.writeMem(0x1cee, { 0x28, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfd7e);
        EXPECT(gbc.pc(), 0x1cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02D4
        gbc.setState(0x13ad, 0x45ad, 0xdcb0, 0xefa2, 0x485d, 0x81c5, 0x1, 0x1);
        gbc.writeMem(0x13ad, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x45ad);
        EXPECT(gbc.pc(), 0x13ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02D5
        gbc.setState(0x169f, 0xe2a7, 0x12b0, 0x8e0e, 0x5371, 0xa22a, 0x0, 0x0);
        gbc.writeMem(0x169f, { 0x28, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe2a7);
        EXPECT(gbc.pc(), 0x165c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02D6
        gbc.setState(0x4b0, 0x7e6f, 0x6780, 0xd3ee, 0xcdb4, 0x88c9, 0x1, 0x1);
        gbc.writeMem(0x4b0, { 0x28, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7e6f);
        EXPECT(gbc.pc(), 0x4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02D7
        gbc.setState(0x2ac0, 0xb37e, 0x6e40, 0xa3c0, 0xf9e9, 0x669b, 0x0, 0x1);
        gbc.writeMem(0x2ac0, { 0x28, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb37e);
        EXPECT(gbc.pc(), 0x2ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02D8
        gbc.setState(0x1652, 0xacf9, 0x5da0, 0xc864, 0xf967, 0x6d8b, 0x1, 0x0);
        gbc.writeMem(0x1652, { 0x28, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xacf9);
        EXPECT(gbc.pc(), 0x1630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02D9
        gbc.setState(0x57f3, 0xbf91, 0xba90, 0x356a, 0x81b, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0x57f3, { 0x28, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbf91);
        EXPECT(gbc.pc(), 0x577b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02DA
        gbc.setState(0xc236, 0x6831, 0x40f0, 0x6389, 0xdf83, 0xaad3, 0x0, 0x0);
        gbc.writeMem(0xc236, { 0x28, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6831);
        EXPECT(gbc.pc(), 0xc1df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc236), 0x28);
        EXPECT(gbc.readMem(0xc237), 0xa7);
        // 28 02DB
        gbc.setState(0x99b7, 0xce9d, 0x6d30, 0x3a0c, 0x3297, 0x944b, 0x1, 0x1);
        gbc.writeMem(0x99b7, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xce9d);
        EXPECT(gbc.pc(), 0x99b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b7), 0x28);
        EXPECT(gbc.readMem(0x99b8), 0xd7);
        // 28 02DC
        gbc.setState(0xa3c6, 0x2038, 0xc9a0, 0x89a5, 0xe7f7, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0xa3c6, { 0x28, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2038);
        EXPECT(gbc.pc(), 0xa40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c6), 0x28);
        EXPECT(gbc.readMem(0xa3c7), 0x43);
        // 28 02DD
        gbc.setState(0xdc88, 0x4708, 0x2ab0, 0x5c9, 0x1747, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0xdc88, { 0x28, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0xdcb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc88), 0x28);
        EXPECT(gbc.readMem(0xdc89), 0x26);
        // 28 02DF
        gbc.setState(0x535f, 0xff5b, 0x3e80, 0x7c22, 0x2668, 0xccd9, 0x0, 0x1);
        gbc.writeMem(0x535f, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0x52e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02E0
        gbc.setState(0x39c6, 0x9d87, 0xced0, 0x374, 0xb521, 0x8029, 0x1, 0x1);
        gbc.writeMem(0x39c6, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9d87);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02E1
        gbc.setState(0xe5, 0x89c1, 0xccf0, 0x73f7, 0x4da, 0xaef2, 0x0, 0x0);
        gbc.writeMem(0xe5, { 0x28, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0x150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02E2
        gbc.setState(0xb3e9, 0x1f1d, 0x4750, 0xb05d, 0xfc58, 0xeff9, 0x1, 0x1);
        gbc.writeMem(0xb3e9, { 0x28, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1f1d);
        EXPECT(gbc.pc(), 0xb3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e9), 0x28);
        EXPECT(gbc.readMem(0xb3ea), 0xd);
        // 28 02E3
        gbc.setState(0xe744, 0xe15f, 0xb710, 0x69f3, 0xabe3, 0xeac1, 0x0, 0x0);
        gbc.writeMem(0xe744, { 0x28, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe15f);
        EXPECT(gbc.pc(), 0xe746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe744), 0x28);
        EXPECT(gbc.readMem(0xe745), 0x77);
        // 28 02E4
        gbc.setState(0xe709, 0xf8c5, 0x5130, 0x3a2e, 0xbc0f, 0x9123, 0x0, 0x1);
        gbc.writeMem(0xe709, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf8c5);
        EXPECT(gbc.pc(), 0xe70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe709), 0x28);
        EXPECT(gbc.readMem(0xe70a), 0x3d);
        // 28 02E5
        gbc.setState(0xe49d, 0x7626, 0xbaa0, 0x4c59, 0x583e, 0xed8b, 0x0, 0x1);
        gbc.writeMem(0xe49d, { 0x28, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7626);
        EXPECT(gbc.pc(), 0xe4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49d), 0x28);
        EXPECT(gbc.readMem(0xe49e), 0x7);
        // 28 02E6
        gbc.setState(0x8e9d, 0x912a, 0x4e00, 0x6557, 0x496c, 0x374a, 0x0, 0x1);
        gbc.writeMem(0x8e9d, { 0x28, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x912a);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0x28);
        EXPECT(gbc.readMem(0x8e9e), 0x6a);
        // 28 02E7
        gbc.setState(0x4f06, 0x70be, 0x5600, 0x6404, 0x980c, 0xa929, 0x0, 0x1);
        gbc.writeMem(0x4f06, { 0x28, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x70be);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02E8
        gbc.setState(0xcef6, 0x5ed5, 0xad40, 0x9bc1, 0x192a, 0x4db, 0x1, 0x0);
        gbc.writeMem(0xcef6, { 0x28, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5ed5);
        EXPECT(gbc.pc(), 0xcef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef6), 0x28);
        EXPECT(gbc.readMem(0xcef7), 0x7d);
        // 28 02E9
        gbc.setState(0x515f, 0xba6c, 0xd50, 0x3482, 0xb740, 0x75bc, 0x1, 0x1);
        gbc.writeMem(0x515f, { 0x28, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xba6c);
        EXPECT(gbc.pc(), 0x5161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02EA
        gbc.setState(0x18cb, 0x766b, 0x3780, 0x2e80, 0xba61, 0x7e0a, 0x0, 0x0);
        gbc.writeMem(0x18cb, { 0x28, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x766b);
        EXPECT(gbc.pc(), 0x1882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02EB
        gbc.setState(0xd663, 0x30e7, 0xa5a0, 0x318, 0x6283, 0x50cd, 0x1, 0x1);
        gbc.writeMem(0xd663, { 0x28, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x30e7);
        EXPECT(gbc.pc(), 0xd6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd663), 0x28);
        EXPECT(gbc.readMem(0xd664), 0x75);
        // 28 02EC
        gbc.setState(0xeeae, 0xe0b2, 0xb9d0, 0x61b3, 0xdbac, 0x2999, 0x1, 0x0);
        gbc.writeMem(0xeeae, { 0x28, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0xeef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeae), 0x28);
        EXPECT(gbc.readMem(0xeeaf), 0x46);
        // 28 02ED
        gbc.setState(0x1da3, 0x9f11, 0x560, 0xa761, 0xa312, 0xe1d1, 0x0, 0x1);
        gbc.writeMem(0x1da3, { 0x28, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9f11);
        EXPECT(gbc.pc(), 0x1da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02EE
        gbc.setState(0xdfea, 0x35a7, 0xbc00, 0xbd6c, 0x7e0d, 0xc6ff, 0x0, 0x1);
        gbc.writeMem(0xdfea, { 0x28, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x35a7);
        EXPECT(gbc.pc(), 0xdfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfea), 0x28);
        EXPECT(gbc.readMem(0xdfeb), 0x55);
        // 28 02EF
        gbc.setState(0x80d9, 0x8b1f, 0x2270, 0xcbfc, 0xcd79, 0x7257, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8b1f);
        EXPECT(gbc.pc(), 0x80db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d9), 0x28);
        EXPECT(gbc.readMem(0x80da), 0x19);
        // 28 02F0
        gbc.setState(0xc6e9, 0x3dde, 0xe910, 0xc4bf, 0xeeb2, 0x3a72, 0x1, 0x0);
        gbc.writeMem(0xc6e9, { 0x28, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3dde);
        EXPECT(gbc.pc(), 0xc6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e9), 0x28);
        EXPECT(gbc.readMem(0xc6ea), 0x1a);
        // 28 02F1
        gbc.setState(0xe093, 0x1b19, 0xf50, 0x26b1, 0x9c6d, 0xdadc, 0x0, 0x0);
        gbc.writeMem(0xe093, { 0x28, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1b19);
        EXPECT(gbc.pc(), 0xe095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe093), 0x28);
        EXPECT(gbc.readMem(0xe094), 0xd3);
        // 28 02F2
        gbc.setState(0x61bc, 0x265a, 0x1280, 0xbaa0, 0xd764, 0x8a4c, 0x1, 0x0);
        gbc.writeMem(0x61bc, { 0x28, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x265a);
        EXPECT(gbc.pc(), 0x6152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02F3
        gbc.setState(0x6fdc, 0xf35, 0x59e0, 0x7d83, 0x5295, 0xe1e2, 0x1, 0x0);
        gbc.writeMem(0x6fdc, { 0x28, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf35);
        EXPECT(gbc.pc(), 0x702f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02F4
        gbc.setState(0x2573, 0x9094, 0x9410, 0xbae0, 0xaf8c, 0xd78a, 0x1, 0x0);
        gbc.writeMem(0x2573, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9094);
        EXPECT(gbc.pc(), 0x2575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 02F5
        gbc.setState(0x4561, 0xad22, 0x2330, 0x165e, 0xb20, 0xb886, 0x0, 0x0);
        gbc.writeMem(0x4561, { 0x28, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xad22);
        EXPECT(gbc.pc(), 0x4563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02F6
        gbc.setState(0x7bdd, 0x6619, 0x9500, 0xbb03, 0x315a, 0x2f56, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0x28, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6619);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02F7
        gbc.setState(0xc77d, 0xb82c, 0x51e0, 0xcf13, 0x5b44, 0x51b6, 0x0, 0x1);
        gbc.writeMem(0xc77d, { 0x28, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb82c);
        EXPECT(gbc.pc(), 0xc7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77d), 0x28);
        EXPECT(gbc.readMem(0xc77e), 0x39);
        // 28 02F9
        gbc.setState(0xebfb, 0x1dcf, 0xbcd0, 0xc966, 0x5914, 0x8477, 0x0, 0x0);
        gbc.writeMem(0xebfb, { 0x28, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1dcf);
        EXPECT(gbc.pc(), 0xebb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfb), 0x28);
        EXPECT(gbc.readMem(0xebfc), 0xb7);
        // 28 02FA
        gbc.setState(0x728d, 0x6feb, 0xe170, 0x4355, 0x6606, 0x90a1, 0x1, 0x0);
        gbc.writeMem(0x728d, { 0x28, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6feb);
        EXPECT(gbc.pc(), 0x728f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 02FB
        gbc.setState(0x9df2, 0xa6cf, 0xe600, 0xc4a5, 0x2828, 0x9a27, 0x1, 0x0);
        gbc.writeMem(0x9df2, { 0x28, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa6cf);
        EXPECT(gbc.pc(), 0x9df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df2), 0x28);
        EXPECT(gbc.readMem(0x9df3), 0x7f);
        // 28 02FC
        gbc.setState(0x51de, 0xc81a, 0xa180, 0x25dd, 0x6658, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x51de, { 0x28, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc81a);
        EXPECT(gbc.pc(), 0x51ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 02FD
        gbc.setState(0xc1ad, 0x887e, 0xc1c0, 0xec48, 0x8c46, 0x293f, 0x0, 0x0);
        gbc.writeMem(0xc1ad, { 0x28, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x887e);
        EXPECT(gbc.pc(), 0xc1a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ad), 0x28);
        EXPECT(gbc.readMem(0xc1ae), 0xf7);
        // 28 02FE
        gbc.setState(0x940, 0xab5f, 0xc7a0, 0x9e3e, 0xfc74, 0x5058, 0x0, 0x0);
        gbc.writeMem(0x940, { 0x28, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xab5f);
        EXPECT(gbc.pc(), 0x99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 02FF
        gbc.setState(0x3624, 0x39d0, 0x9d40, 0x720d, 0xe235, 0x978c, 0x0, 0x1);
        gbc.writeMem(0x3624, { 0x28, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x39d0);
        EXPECT(gbc.pc(), 0x3626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0300
        gbc.setState(0x5b71, 0x61b4, 0x86d0, 0x7028, 0xc836, 0x9288, 0x0, 0x1);
        gbc.writeMem(0x5b71, { 0x28, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x61b4);
        EXPECT(gbc.pc(), 0x5b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0301
        gbc.setState(0x67a9, 0x10c5, 0x9d00, 0xc650, 0xb9f9, 0x246c, 0x0, 0x1);
        gbc.writeMem(0x67a9, { 0x28, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x10c5);
        EXPECT(gbc.pc(), 0x67ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0302
        gbc.setState(0x550f, 0xd36, 0xc8f0, 0xc4ff, 0x904d, 0x61ad, 0x1, 0x1);
        gbc.writeMem(0x550f, { 0x28, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd36);
        EXPECT(gbc.pc(), 0x552d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0303
        gbc.setState(0xcd54, 0x197e, 0xa30, 0xcf64, 0x9ed6, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0x28, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x197e);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd54), 0x28);
        EXPECT(gbc.readMem(0xcd55), 0x5d);
        // 28 0304
        gbc.setState(0xb70c, 0x5654, 0xbb40, 0xec93, 0x7c6c, 0x1710, 0x1, 0x0);
        gbc.writeMem(0xb70c, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5654);
        EXPECT(gbc.pc(), 0xb70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70c), 0x28);
        EXPECT(gbc.readMem(0xb70d), 0x29);
        // 28 0305
        gbc.setState(0x6772, 0xc867, 0xd200, 0x617, 0x67df, 0x4997, 0x1, 0x1);
        gbc.writeMem(0x6772, { 0x28, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc867);
        EXPECT(gbc.pc(), 0x6774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0306
        gbc.setState(0x5743, 0x8427, 0xd880, 0x7b2c, 0x7f70, 0x3a8b, 0x0, 0x0);
        gbc.writeMem(0x5743, { 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0x5765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0307
        gbc.setState(0x5aca, 0x530a, 0xee60, 0xc44c, 0xff2a, 0xc275, 0x1, 0x1);
        gbc.writeMem(0x5aca, { 0x28, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x530a);
        EXPECT(gbc.pc(), 0x5acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0308
        gbc.setState(0x2599, 0x3ba3, 0x9920, 0xcdf1, 0x8ad, 0x5cb6, 0x1, 0x0);
        gbc.writeMem(0x2599, { 0x28, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3ba3);
        EXPECT(gbc.pc(), 0x259b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0309
        gbc.setState(0x421, 0x49b0, 0xb050, 0x220c, 0x3024, 0x3dfc, 0x1, 0x1);
        gbc.writeMem(0x421, { 0x28, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x49b0);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 030B
        gbc.setState(0xbe0, 0xa9c5, 0x45f0, 0xabbe, 0x7b90, 0x76f6, 0x1, 0x0);
        gbc.writeMem(0xbe0, { 0x28, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0xbcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 030C
        gbc.setState(0x5ad0, 0x3f77, 0x140, 0x576e, 0xadec, 0x84f4, 0x1, 0x0);
        gbc.writeMem(0x5ad0, { 0x28, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0x5ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 030D
        gbc.setState(0x2ab8, 0xa45d, 0x6e40, 0xdd9a, 0x6ad2, 0xc4d4, 0x0, 0x1);
        gbc.writeMem(0x2ab8, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa45d);
        EXPECT(gbc.pc(), 0x2aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 030E
        gbc.setState(0x6265, 0xc680, 0xa590, 0x6c5d, 0xfcde, 0x257b, 0x1, 0x1);
        gbc.writeMem(0x6265, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc680);
        EXPECT(gbc.pc(), 0x6290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 030F
        gbc.setState(0x636f, 0xa691, 0xea50, 0xcd02, 0xa139, 0xba47, 0x1, 0x0);
        gbc.writeMem(0x636f, { 0x28, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa691);
        EXPECT(gbc.pc(), 0x6371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0310
        gbc.setState(0xedc1, 0x64f7, 0x2680, 0xf31d, 0xc9b3, 0xb73, 0x1, 0x1);
        gbc.writeMem(0xedc1, { 0x28, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x64f7);
        EXPECT(gbc.pc(), 0xee34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc1), 0x28);
        EXPECT(gbc.readMem(0xedc2), 0x71);
        // 28 0311
        gbc.setState(0x50c7, 0x497e, 0x51f0, 0x8d82, 0x34c, 0x4d43, 0x1, 0x0);
        gbc.writeMem(0x50c7, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x497e);
        EXPECT(gbc.pc(), 0x5101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0312
        gbc.setState(0x88, 0x6723, 0xad40, 0x9ded, 0x3847, 0x3f4, 0x1, 0x0);
        gbc.writeMem(0x88, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6723);
        EXPECT(gbc.pc(), 0x8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0313
        gbc.setState(0x3074, 0xb3d3, 0x8360, 0xe8c3, 0x1a73, 0x6a69, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0x28, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb3d3);
        EXPECT(gbc.pc(), 0x3076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0314
        gbc.setState(0x2b82, 0xa875, 0x1450, 0xa6cb, 0xcc6, 0xfb9d, 0x0, 0x1);
        gbc.writeMem(0x2b82, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa875);
        EXPECT(gbc.pc(), 0x2b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0315
        gbc.setState(0xc3c9, 0x2e6, 0xe60, 0x3b5a, 0x8296, 0xdc60, 0x0, 0x1);
        gbc.writeMem(0xc3c9, { 0x28, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2e6);
        EXPECT(gbc.pc(), 0xc3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c9), 0x28);
        EXPECT(gbc.readMem(0xc3ca), 0x34);
        // 28 0316
        gbc.setState(0x69f4, 0x6b70, 0xeb50, 0xa1ef, 0x17b3, 0x233d, 0x0, 0x0);
        gbc.writeMem(0x69f4, { 0x28, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6b70);
        EXPECT(gbc.pc(), 0x69f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0318
        gbc.setState(0x2e43, 0x17ed, 0x4ac0, 0xfee1, 0xc86f, 0x92fc, 0x0, 0x0);
        gbc.writeMem(0x2e43, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x17ed);
        EXPECT(gbc.pc(), 0x2e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0319
        gbc.setState(0xee34, 0x2be1, 0x93c0, 0xd01b, 0x1a, 0x42b1, 0x1, 0x1);
        gbc.writeMem(0xee34, { 0x28, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2be1);
        EXPECT(gbc.pc(), 0xedd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee34), 0x28);
        EXPECT(gbc.readMem(0xee35), 0x9a);
        // 28 031A
        gbc.setState(0x9d88, 0x9cf8, 0x65b0, 0x741c, 0xa576, 0x2ae5, 0x1, 0x1);
        gbc.writeMem(0x9d88, { 0x28, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9cf8);
        EXPECT(gbc.pc(), 0x9dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d88), 0x28);
        EXPECT(gbc.readMem(0x9d89), 0x24);
        // 28 031B
        gbc.setState(0xc18f, 0x896b, 0x8f60, 0x95c0, 0x5824, 0x5fda, 0x0, 0x0);
        gbc.writeMem(0xc18f, { 0x28, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x896b);
        EXPECT(gbc.pc(), 0xc191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc18f), 0x28);
        EXPECT(gbc.readMem(0xc190), 0x46);
        // 28 031C
        gbc.setState(0x577a, 0xd1fb, 0x8750, 0x15e0, 0x505d, 0xeedb, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd1fb);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 031D
        gbc.setState(0x8cfa, 0x360, 0x3640, 0xd370, 0xeb9b, 0x4a07, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0x8cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cfa), 0x28);
        EXPECT(gbc.readMem(0x8cfb), 0xef);
        // 28 031E
        gbc.setState(0x5fd0, 0xe8d9, 0x62a0, 0x9b7e, 0x1d3a, 0xe8f3, 0x0, 0x0);
        gbc.writeMem(0x5fd0, { 0x28, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe8d9);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0320
        gbc.setState(0x5322, 0x14d3, 0xcca0, 0x5ad0, 0x2a5e, 0xd2d6, 0x0, 0x0);
        gbc.writeMem(0x5322, { 0x28, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x14d3);
        EXPECT(gbc.pc(), 0x52a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0321
        gbc.setState(0x23eb, 0x811c, 0xabb0, 0xe9f4, 0x851, 0x6f00, 0x0, 0x1);
        gbc.writeMem(0x23eb, { 0x28, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0x2438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0322
        gbc.setState(0x2125, 0x4103, 0xfe30, 0x90c6, 0xcb8f, 0x8a35, 0x0, 0x1);
        gbc.writeMem(0x2125, { 0x28, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4103);
        EXPECT(gbc.pc(), 0x2127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0323
        gbc.setState(0x48ee, 0xf544, 0x5010, 0xb5e4, 0xdf30, 0x37c6, 0x1, 0x0);
        gbc.writeMem(0x48ee, { 0x28, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf544);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0324
        gbc.setState(0x404c, 0x6797, 0xa3f0, 0xf33f, 0xd1fc, 0x90e0, 0x1, 0x0);
        gbc.writeMem(0x404c, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6797);
        EXPECT(gbc.pc(), 0x4077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0325
        gbc.setState(0x998d, 0xa404, 0xbff0, 0xe54e, 0xfb79, 0x489f, 0x1, 0x1);
        gbc.writeMem(0x998d, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa404);
        EXPECT(gbc.pc(), 0x992d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998d), 0x28);
        EXPECT(gbc.readMem(0x998e), 0x9e);
        // 28 0326
        gbc.setState(0x5192, 0x9911, 0x4530, 0xc49c, 0xcabb, 0x29fc, 0x1, 0x0);
        gbc.writeMem(0x5192, { 0x28, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0x5194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0327
        gbc.setState(0x45fa, 0x38cc, 0xf9f0, 0x7746, 0x106a, 0x3b42, 0x1, 0x0);
        gbc.writeMem(0x45fa, { 0x28, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x38cc);
        EXPECT(gbc.pc(), 0x45bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0328
        gbc.setState(0xb204, 0x86ee, 0xfd80, 0xdc0c, 0x4acf, 0x2727, 0x1, 0x1);
        gbc.writeMem(0xb204, { 0x28, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x86ee);
        EXPECT(gbc.pc(), 0xb196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb204), 0x28);
        EXPECT(gbc.readMem(0xb205), 0x90);
        // 28 0329
        gbc.setState(0x9ca2, 0x1866, 0x3610, 0x41fc, 0xfef2, 0xa225, 0x1, 0x0);
        gbc.writeMem(0x9ca2, { 0x28, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1866);
        EXPECT(gbc.pc(), 0x9ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca2), 0x28);
        EXPECT(gbc.readMem(0x9ca3), 0xe9);
        // 28 032B
        gbc.setState(0xcc35, 0x51c6, 0xe180, 0x1287, 0x957b, 0x5538, 0x0, 0x0);
        gbc.writeMem(0xcc35, { 0x28, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x51c6);
        EXPECT(gbc.pc(), 0xcc76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc35), 0x28);
        EXPECT(gbc.readMem(0xcc36), 0x3f);
        // 28 032C
        gbc.setState(0x5302, 0xe2ce, 0xa430, 0x4867, 0x1e45, 0x1bf6, 0x0, 0x1);
        gbc.writeMem(0x5302, { 0x28, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe2ce);
        EXPECT(gbc.pc(), 0x5304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 032D
        gbc.setState(0xbf01, 0x2962, 0xdc70, 0x37b4, 0x8acc, 0x8ce8, 0x1, 0x0);
        gbc.writeMem(0xbf01, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2962);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0x28);
        EXPECT(gbc.readMem(0xbf02), 0x38);
        // 28 032E
        gbc.setState(0x1836, 0x78fe, 0x4310, 0x11b1, 0xd351, 0xce5a, 0x1, 0x1);
        gbc.writeMem(0x1836, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x78fe);
        EXPECT(gbc.pc(), 0x1838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 032F
        gbc.setState(0x32e8, 0x399b, 0x5370, 0x114f, 0x780e, 0xf2ce, 0x0, 0x1);
        gbc.writeMem(0x32e8, { 0x28, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x399b);
        EXPECT(gbc.pc(), 0x32ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0330
        gbc.setState(0xea65, 0x35f0, 0xf520, 0xcaea, 0xc9b0, 0x7915, 0x1, 0x1);
        gbc.writeMem(0xea65, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x35f0);
        EXPECT(gbc.pc(), 0xea67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea65), 0x28);
        EXPECT(gbc.readMem(0xea66), 0xa5);
        // 28 0331
        gbc.setState(0xb717, 0xc4fb, 0x3770, 0x1387, 0x46f6, 0x4ea7, 0x1, 0x0);
        gbc.writeMem(0xb717, { 0x28, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc4fb);
        EXPECT(gbc.pc(), 0xb719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb717), 0x28);
        EXPECT(gbc.readMem(0xb718), 0x92);
        // 28 0332
        gbc.setState(0x9d63, 0xd83e, 0xb060, 0x41ae, 0x3968, 0x609b, 0x0, 0x1);
        gbc.writeMem(0x9d63, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd83e);
        EXPECT(gbc.pc(), 0x9d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d63), 0x28);
        EXPECT(gbc.readMem(0x9d64), 0xb4);
        // 28 0333
        gbc.setState(0x5e54, 0x5616, 0x8700, 0xbf71, 0xdeb7, 0x1734, 0x1, 0x1);
        gbc.writeMem(0x5e54, { 0x28, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5616);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0334
        gbc.setState(0xeac7, 0xc4b2, 0xb500, 0x3ead, 0x8992, 0x85a2, 0x1, 0x1);
        gbc.writeMem(0xeac7, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc4b2);
        EXPECT(gbc.pc(), 0xeac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac7), 0x28);
        EXPECT(gbc.readMem(0xeac8), 0xef);
        // 28 0335
        gbc.setState(0x8976, 0x258f, 0x1730, 0xc3cb, 0xd181, 0x410b, 0x1, 0x1);
        gbc.writeMem(0x8976, { 0x28, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x258f);
        EXPECT(gbc.pc(), 0x8978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8976), 0x28);
        EXPECT(gbc.readMem(0x8977), 0x47);
        // 28 0336
        gbc.setState(0xb7cf, 0xba54, 0xa500, 0x8675, 0x8abb, 0xa03e, 0x0, 0x1);
        gbc.writeMem(0xb7cf, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xba54);
        EXPECT(gbc.pc(), 0xb7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7cf), 0x28);
        EXPECT(gbc.readMem(0xb7d0), 0x38);
        // 28 0337
        gbc.setState(0x6209, 0xc4e0, 0x1c0, 0xe256, 0x42e1, 0x4e08, 0x0, 0x1);
        gbc.writeMem(0x6209, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc4e0);
        EXPECT(gbc.pc(), 0x61fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0338
        gbc.setState(0x363a, 0xfc38, 0xd9f0, 0x284, 0xefb7, 0x6523, 0x1, 0x0);
        gbc.writeMem(0x363a, { 0x28, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfc38);
        EXPECT(gbc.pc(), 0x361e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0339
        gbc.setState(0xa57, 0xcc6d, 0xa410, 0x4e8, 0xbb8a, 0x44bb, 0x0, 0x1);
        gbc.writeMem(0xa57, { 0x28, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcc6d);
        EXPECT(gbc.pc(), 0xa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 033A
        gbc.setState(0xda77, 0x8e3, 0x49c0, 0xeb73, 0x52a3, 0x859d, 0x1, 0x1);
        gbc.writeMem(0xda77, { 0x28, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8e3);
        EXPECT(gbc.pc(), 0xda64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda77), 0x28);
        EXPECT(gbc.readMem(0xda78), 0xeb);
        // 28 033B
        gbc.setState(0xfb5, 0x11a, 0xb630, 0xb182, 0xd942, 0x719, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0x28, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x11a);
        EXPECT(gbc.pc(), 0xfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 033C
        gbc.setState(0x4e55, 0xac1a, 0x9fb0, 0xe0d1, 0xf58, 0xce68, 0x0, 0x0);
        gbc.writeMem(0x4e55, { 0x28, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xac1a);
        EXPECT(gbc.pc(), 0x4e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 033D
        gbc.setState(0x305f, 0x5e60, 0x9d10, 0x94fb, 0x6945, 0x622e, 0x1, 0x1);
        gbc.writeMem(0x305f, { 0x28, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5e60);
        EXPECT(gbc.pc(), 0x3061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 033E
        gbc.setState(0xb600, 0x18e6, 0xf350, 0x4b77, 0xde8, 0x43f8, 0x1, 0x0);
        gbc.writeMem(0xb600, { 0x28, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x18e6);
        EXPECT(gbc.pc(), 0xb602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb600), 0x28);
        EXPECT(gbc.readMem(0xb601), 0x52);
        // 28 033F
        gbc.setState(0x119d, 0x6523, 0xf9e0, 0xe01b, 0xf62, 0x35ce, 0x1, 0x0);
        gbc.writeMem(0x119d, { 0x28, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6523);
        EXPECT(gbc.pc(), 0x11a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0340
        gbc.setState(0x7ed3, 0x6ad4, 0xb020, 0xc41b, 0x17ff, 0xca69, 0x1, 0x0);
        gbc.writeMem(0x7ed3, { 0x28, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6ad4);
        EXPECT(gbc.pc(), 0x7ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0341
        gbc.setState(0x7bd8, 0x5e65, 0xa240, 0xae8d, 0xeddb, 0x4424, 0x1, 0x1);
        gbc.writeMem(0x7bd8, { 0x28, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5e65);
        EXPECT(gbc.pc(), 0x7bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0342
        gbc.setState(0x49d2, 0xa4fe, 0x3e90, 0x15d, 0xee8, 0x59ea, 0x1, 0x1);
        gbc.writeMem(0x49d2, { 0x28, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa4fe);
        EXPECT(gbc.pc(), 0x4a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0343
        gbc.setState(0x57b7, 0x61d1, 0x4cc0, 0x9118, 0xf044, 0x718c, 0x0, 0x1);
        gbc.writeMem(0x57b7, { 0x28, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x61d1);
        EXPECT(gbc.pc(), 0x5742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0344
        gbc.setState(0x9b05, 0xeda8, 0x95e0, 0x72fb, 0x6ae2, 0x5913, 0x1, 0x1);
        gbc.writeMem(0x9b05, { 0x28, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeda8);
        EXPECT(gbc.pc(), 0x9b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b05), 0x28);
        EXPECT(gbc.readMem(0x9b06), 0x21);
        // 28 0345
        gbc.setState(0xc5b7, 0xea9, 0x720, 0xd9bc, 0xed00, 0xb073, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0x28, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xea9);
        EXPECT(gbc.pc(), 0xc5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b7), 0x28);
        EXPECT(gbc.readMem(0xc5b8), 0xf3);
        // 28 0346
        gbc.setState(0x4866, 0x2b64, 0x6b0, 0x6934, 0xa85f, 0x5797, 0x1, 0x1);
        gbc.writeMem(0x4866, { 0x28, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2b64);
        EXPECT(gbc.pc(), 0x48d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0347
        gbc.setState(0x8a82, 0xa590, 0x6060, 0x9c79, 0x148b, 0x76cb, 0x0, 0x0);
        gbc.writeMem(0x8a82, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0x8a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a82), 0x28);
        EXPECT(gbc.readMem(0x8a83), 0x61);
        // 28 0348
        gbc.setState(0x5e18, 0x3e99, 0xa0, 0xa9d8, 0x3d54, 0xd407, 0x0, 0x0);
        gbc.writeMem(0x5e18, { 0x28, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3e99);
        EXPECT(gbc.pc(), 0x5e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0349
        gbc.setState(0x4c45, 0xef18, 0x8540, 0xc0cc, 0x923f, 0x8907, 0x1, 0x0);
        gbc.writeMem(0x4c45, { 0x28, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xef18);
        EXPECT(gbc.pc(), 0x4c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 034A
        gbc.setState(0xecae, 0x520d, 0x5910, 0x29df, 0xbd7a, 0xe2e4, 0x0, 0x1);
        gbc.writeMem(0xecae, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x520d);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecae), 0x28);
        EXPECT(gbc.readMem(0xecaf), 0x98);
        // 28 034B
        gbc.setState(0xa36a, 0x777e, 0xfa00, 0x9377, 0x3c46, 0x67f5, 0x1, 0x0);
        gbc.writeMem(0xa36a, { 0x28, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x777e);
        EXPECT(gbc.pc(), 0xa36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36a), 0x28);
        EXPECT(gbc.readMem(0xa36b), 0x3c);
        // 28 034C
        gbc.setState(0x9f7a, 0xe67d, 0xae30, 0xd7, 0xb3d2, 0x790, 0x1, 0x0);
        gbc.writeMem(0x9f7a, { 0x28, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe67d);
        EXPECT(gbc.pc(), 0x9f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7a), 0x28);
        EXPECT(gbc.readMem(0x9f7b), 0xc9);
        // 28 034D
        gbc.setState(0x949, 0x5a66, 0x7ea0, 0x6c19, 0xd86d, 0x4cef, 0x0, 0x1);
        gbc.writeMem(0x949, { 0x28, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5a66);
        EXPECT(gbc.pc(), 0x8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 034E
        gbc.setState(0xa434, 0x2ff4, 0x7ec0, 0xc15e, 0x7989, 0x4632, 0x1, 0x0);
        gbc.writeMem(0xa434, { 0x28, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2ff4);
        EXPECT(gbc.pc(), 0xa401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa434), 0x28);
        EXPECT(gbc.readMem(0xa435), 0xcb);
        // 28 034F
        gbc.setState(0x97a6, 0xcd72, 0x890, 0x91e9, 0x31b7, 0x26c7, 0x0, 0x1);
        gbc.writeMem(0x97a6, { 0x28, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcd72);
        EXPECT(gbc.pc(), 0x9738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a6), 0x28);
        EXPECT(gbc.readMem(0x97a7), 0x90);
        // 28 0350
        gbc.setState(0xc294, 0xa0c9, 0x1e90, 0x357, 0x68f8, 0x350f, 0x1, 0x0);
        gbc.writeMem(0xc294, { 0x28, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa0c9);
        EXPECT(gbc.pc(), 0xc2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc294), 0x28);
        EXPECT(gbc.readMem(0xc295), 0x32);
        // 28 0351
        gbc.setState(0xde2d, 0x1629, 0x3360, 0xcefd, 0xa6f5, 0x3791, 0x0, 0x0);
        gbc.writeMem(0xde2d, { 0x28, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1629);
        EXPECT(gbc.pc(), 0xde2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2d), 0x28);
        EXPECT(gbc.readMem(0xde2e), 0xf4);
        // 28 0352
        gbc.setState(0x63e5, 0x4286, 0x66a0, 0x397a, 0x3651, 0xe74a, 0x1, 0x0);
        gbc.writeMem(0x63e5, { 0x28, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4286);
        EXPECT(gbc.pc(), 0x63d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0353
        gbc.setState(0xa3d8, 0xbfea, 0xd920, 0x268b, 0x36c4, 0x65f9, 0x1, 0x1);
        gbc.writeMem(0xa3d8, { 0x28, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbfea);
        EXPECT(gbc.pc(), 0xa3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d8), 0x28);
        EXPECT(gbc.readMem(0xa3d9), 0xf9);
        // 28 0354
        gbc.setState(0xc26c, 0x324, 0xee0, 0x2f8c, 0xf901, 0x4718, 0x1, 0x0);
        gbc.writeMem(0xc26c, { 0x28, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x324);
        EXPECT(gbc.pc(), 0xc253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26c), 0x28);
        EXPECT(gbc.readMem(0xc26d), 0xe5);
        // 28 0355
        gbc.setState(0x159f, 0xdfba, 0xec40, 0x45e4, 0x9bfd, 0xf72f, 0x1, 0x1);
        gbc.writeMem(0x159f, { 0x28, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdfba);
        EXPECT(gbc.pc(), 0x15a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0356
        gbc.setState(0xbe67, 0x7b81, 0xad40, 0x1828, 0xf20c, 0xb7fc, 0x0, 0x1);
        gbc.writeMem(0xbe67, { 0x28, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7b81);
        EXPECT(gbc.pc(), 0xbe69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe67), 0x28);
        EXPECT(gbc.readMem(0xbe68), 0x67);
        // 28 0357
        gbc.setState(0xe6f6, 0xb7c8, 0x6720, 0x86a4, 0x7769, 0x5652, 0x1, 0x1);
        gbc.writeMem(0xe6f6, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb7c8);
        EXPECT(gbc.pc(), 0xe6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f6), 0x28);
        EXPECT(gbc.readMem(0xe6f7), 0x9e);
        // 28 0358
        gbc.setState(0xb67, 0xdb79, 0x8150, 0x3248, 0xb1c, 0xcfc2, 0x0, 0x0);
        gbc.writeMem(0xb67, { 0x28, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdb79);
        EXPECT(gbc.pc(), 0xb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0359
        gbc.setState(0x4103, 0xa726, 0x1e20, 0x54c6, 0x4224, 0xae82, 0x0, 0x1);
        gbc.writeMem(0x4103, { 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa726);
        EXPECT(gbc.pc(), 0x4105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 035A
        gbc.setState(0x6f3a, 0x1dd4, 0xe5d0, 0xcac7, 0xf484, 0xdba7, 0x1, 0x0);
        gbc.writeMem(0x6f3a, { 0x28, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1dd4);
        EXPECT(gbc.pc(), 0x6f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 035B
        gbc.setState(0x3123, 0x531f, 0x4a40, 0xa88b, 0xb314, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0x3123, { 0x28, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x531f);
        EXPECT(gbc.pc(), 0x3125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 035C
        gbc.setState(0x87a6, 0xa0e9, 0xc0e0, 0x628b, 0xa446, 0x35d6, 0x1, 0x0);
        gbc.writeMem(0x87a6, { 0x28, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa0e9);
        EXPECT(gbc.pc(), 0x8812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a6), 0x28);
        EXPECT(gbc.readMem(0x87a7), 0x6a);
        // 28 035D
        gbc.setState(0x2552, 0x8ea7, 0x8db0, 0x1cbb, 0xec48, 0x64d7, 0x1, 0x0);
        gbc.writeMem(0x2552, { 0x28, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8ea7);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 035E
        gbc.setState(0xd658, 0x248f, 0x8190, 0x132d, 0xbc71, 0xf5fc, 0x0, 0x1);
        gbc.writeMem(0xd658, { 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x248f);
        EXPECT(gbc.pc(), 0xd6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd658), 0x28);
        EXPECT(gbc.readMem(0xd659), 0x54);
        // 28 035F
        gbc.setState(0x695f, 0x5b7e, 0x5850, 0xac7d, 0x5abe, 0xfb96, 0x0, 0x1);
        gbc.writeMem(0x695f, { 0x28, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5b7e);
        EXPECT(gbc.pc(), 0x6961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0360
        gbc.setState(0x7695, 0xc043, 0x54a0, 0x10b0, 0xd091, 0x8b3d, 0x1, 0x1);
        gbc.writeMem(0x7695, { 0x28, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc043);
        EXPECT(gbc.pc(), 0x76e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0361
        gbc.setState(0x5992, 0x1baf, 0x8940, 0xf3dc, 0x7940, 0x3c3d, 0x0, 0x1);
        gbc.writeMem(0x5992, { 0x28, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1baf);
        EXPECT(gbc.pc(), 0x5994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0363
        gbc.setState(0x3b33, 0x1f07, 0x74b0, 0x41e5, 0xfbf0, 0x7626, 0x1, 0x0);
        gbc.writeMem(0x3b33, { 0x28, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1f07);
        EXPECT(gbc.pc(), 0x3b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0365
        gbc.setState(0x1415, 0x2e1a, 0xf730, 0x9177, 0x1c73, 0xd398, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0x28, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2e1a);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0366
        gbc.setState(0x4a5d, 0x8c11, 0xc4d0, 0x51f9, 0x6b6, 0xa38d, 0x1, 0x1);
        gbc.writeMem(0x4a5d, { 0x28, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8c11);
        EXPECT(gbc.pc(), 0x4a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0367
        gbc.setState(0xe44c, 0x5fb7, 0x9fe0, 0x3cb9, 0x859e, 0x3cfd, 0x0, 0x1);
        gbc.writeMem(0xe44c, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5fb7);
        EXPECT(gbc.pc(), 0xe477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44c), 0x28);
        EXPECT(gbc.readMem(0xe44d), 0x29);
        // 28 0369
        gbc.setState(0x967b, 0xe833, 0x4850, 0x634d, 0x1cf5, 0xc6e1, 0x1, 0x0);
        gbc.writeMem(0x967b, { 0x28, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe833);
        EXPECT(gbc.pc(), 0x967d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x967b), 0x28);
        EXPECT(gbc.readMem(0x967c), 0x5c);
        // 28 036A
        gbc.setState(0xc51c, 0x7870, 0xd9a0, 0xe0b9, 0xd3c7, 0x19e5, 0x0, 0x0);
        gbc.writeMem(0xc51c, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7870);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51c), 0x28);
        EXPECT(gbc.readMem(0xc51d), 0x58);
        // 28 036B
        gbc.setState(0x83ad, 0x7151, 0xe540, 0x2f0f, 0x7a23, 0x74, 0x1, 0x0);
        gbc.writeMem(0x83ad, { 0x28, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7151);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ad), 0x28);
        EXPECT(gbc.readMem(0x83ae), 0x8d);
        // 28 036C
        gbc.setState(0x8807, 0x6aad, 0x3f30, 0xe034, 0x275e, 0xf164, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0x28, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6aad);
        EXPECT(gbc.pc(), 0x8809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8807), 0x28);
        EXPECT(gbc.readMem(0x8808), 0x42);
        // 28 036D
        gbc.setState(0xaa90, 0xa14c, 0xbe90, 0x1891, 0x220c, 0x20cd, 0x1, 0x1);
        gbc.writeMem(0xaa90, { 0x28, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa14c);
        EXPECT(gbc.pc(), 0xaaf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa90), 0x28);
        EXPECT(gbc.readMem(0xaa91), 0x61);
        // 28 036E
        gbc.setState(0xdb07, 0xe34b, 0xed00, 0x973d, 0xe62f, 0x133d, 0x0, 0x1);
        gbc.writeMem(0xdb07, { 0x28, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe34b);
        EXPECT(gbc.pc(), 0xdb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb07), 0x28);
        EXPECT(gbc.readMem(0xdb08), 0xbb);
        // 28 036F
        gbc.setState(0x7f5a, 0x9f3a, 0x7b40, 0x7fad, 0x8c2e, 0xf70d, 0x0, 0x1);
        gbc.writeMem(0x7f5a, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9f3a);
        EXPECT(gbc.pc(), 0x7f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0370
        gbc.setState(0xce6a, 0xa767, 0xb730, 0x5f6, 0x441b, 0x6514, 0x1, 0x0);
        gbc.writeMem(0xce6a, { 0x28, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa767);
        EXPECT(gbc.pc(), 0xce6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6a), 0x28);
        EXPECT(gbc.readMem(0xce6b), 0xf2);
        // 28 0371
        gbc.setState(0xedaa, 0xace8, 0x7ec0, 0xfc8a, 0x53bd, 0xf0e0, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0x28, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xace8);
        EXPECT(gbc.pc(), 0xed7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedaa), 0x28);
        EXPECT(gbc.readMem(0xedab), 0xd3);
        // 28 0372
        gbc.setState(0xab3b, 0xbe7c, 0x9670, 0xb1b0, 0x4b75, 0x6bda, 0x0, 0x0);
        gbc.writeMem(0xab3b, { 0x28, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbe7c);
        EXPECT(gbc.pc(), 0xab3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3b), 0x28);
        EXPECT(gbc.readMem(0xab3c), 0xce);
        // 28 0373
        gbc.setState(0xeb05, 0x6d4b, 0xba30, 0x7aa8, 0x78db, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0xeb05, { 0x28, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6d4b);
        EXPECT(gbc.pc(), 0xeb07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb05), 0x28);
        EXPECT(gbc.readMem(0xeb06), 0x85);
        // 28 0374
        gbc.setState(0x8638, 0xbae8, 0xd90, 0x5e7, 0xa81, 0x553b, 0x0, 0x0);
        gbc.writeMem(0x8638, { 0x28, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbae8);
        EXPECT(gbc.pc(), 0x85c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8638), 0x28);
        EXPECT(gbc.readMem(0x8639), 0x87);
        // 28 0375
        gbc.setState(0x9e51, 0x47b3, 0x2b40, 0x214e, 0xb90d, 0xb5fb, 0x1, 0x1);
        gbc.writeMem(0x9e51, { 0x28, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0x9e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e51), 0x28);
        EXPECT(gbc.readMem(0x9e52), 0xdf);
        // 28 0376
        gbc.setState(0xb37b, 0xe800, 0xdb20, 0x20fc, 0xa714, 0x980f, 0x1, 0x0);
        gbc.writeMem(0xb37b, { 0x28, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe800);
        EXPECT(gbc.pc(), 0xb37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37b), 0x28);
        EXPECT(gbc.readMem(0xb37c), 0x81);
        // 28 0377
        gbc.setState(0x76c8, 0x6108, 0x850, 0xd7e3, 0x20b7, 0x95b, 0x0, 0x0);
        gbc.writeMem(0x76c8, { 0x28, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6108);
        EXPECT(gbc.pc(), 0x76ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0378
        gbc.setState(0x5a1d, 0x15dd, 0x530, 0xcd51, 0xd525, 0x54cd, 0x0, 0x1);
        gbc.writeMem(0x5a1d, { 0x28, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x15dd);
        EXPECT(gbc.pc(), 0x5a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0379
        gbc.setState(0x95ac, 0xd934, 0x1bf0, 0x3b8b, 0x446d, 0x2de2, 0x0, 0x0);
        gbc.writeMem(0x95ac, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd934);
        EXPECT(gbc.pc(), 0x959b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ac), 0x28);
        EXPECT(gbc.readMem(0x95ad), 0xed);
        // 28 037A
        gbc.setState(0x2544, 0xe12c, 0x4870, 0x6e02, 0x6ddd, 0xa0b1, 0x0, 0x1);
        gbc.writeMem(0x2544, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe12c);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 037B
        gbc.setState(0x3a36, 0x5f6a, 0xaba0, 0xb4eb, 0x8840, 0xe16b, 0x0, 0x1);
        gbc.writeMem(0x3a36, { 0x28, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5f6a);
        EXPECT(gbc.pc(), 0x3a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 037C
        gbc.setState(0xb2fe, 0xab3d, 0xda80, 0x4268, 0x8cc2, 0xb17d, 0x0, 0x1);
        gbc.writeMem(0xb2fe, { 0x28, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xab3d);
        EXPECT(gbc.pc(), 0xb2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fe), 0x28);
        EXPECT(gbc.readMem(0xb2ff), 0xce);
        // 28 037D
        gbc.setState(0x8e4, 0x1a93, 0xa190, 0x86b, 0x6c7d, 0x17d4, 0x1, 0x0);
        gbc.writeMem(0x8e4, { 0x28, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1a93);
        EXPECT(gbc.pc(), 0x8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 037E
        gbc.setState(0x8a5b, 0xdf0f, 0xa460, 0xa4e6, 0xa925, 0xd23b, 0x1, 0x0);
        gbc.writeMem(0x8a5b, { 0x28, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdf0f);
        EXPECT(gbc.pc(), 0x8a5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5b), 0x28);
        EXPECT(gbc.readMem(0x8a5c), 0x37);
        // 28 037F
        gbc.setState(0x8fcc, 0x7f18, 0xee80, 0x3ca, 0x3074, 0xa333, 0x1, 0x0);
        gbc.writeMem(0x8fcc, { 0x28, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0x8ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcc), 0x28);
        EXPECT(gbc.readMem(0x8fcd), 0x30);
        // 28 0380
        gbc.setState(0x3c7e, 0x6d62, 0x61f0, 0x9659, 0x2ec9, 0xc7d7, 0x1, 0x0);
        gbc.writeMem(0x3c7e, { 0x28, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6d62);
        EXPECT(gbc.pc(), 0x3c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0381
        gbc.setState(0x8917, 0x97bd, 0x3850, 0xbbdd, 0x404a, 0xce2c, 0x1, 0x1);
        gbc.writeMem(0x8917, { 0x28, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x97bd);
        EXPECT(gbc.pc(), 0x8919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8917), 0x28);
        EXPECT(gbc.readMem(0x8918), 0x13);
        // 28 0382
        gbc.setState(0x5057, 0x7865, 0xbff0, 0x7b6f, 0x6a9d, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0x5057, { 0x28, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7865);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0383
        gbc.setState(0x1059, 0x16c0, 0x1220, 0x8459, 0x6d1e, 0x4552, 0x1, 0x0);
        gbc.writeMem(0x1059, { 0x28, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x16c0);
        EXPECT(gbc.pc(), 0x105b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 0384
        gbc.setState(0x329b, 0x138d, 0x9540, 0xa06d, 0x43db, 0x1784, 0x0, 0x1);
        gbc.writeMem(0x329b, { 0x28, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x138d);
        EXPECT(gbc.pc(), 0x329d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 0385
        gbc.setState(0x4ed0, 0xcda6, 0x5f90, 0x81b6, 0x181d, 0x4d56, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0x28, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcda6);
        EXPECT(gbc.pc(), 0x4f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0386
        gbc.setState(0x8456, 0xdecb, 0x1fa0, 0x8473, 0x508a, 0x45ac, 0x1, 0x0);
        gbc.writeMem(0x8456, { 0x28, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdecb);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8456), 0x28);
        EXPECT(gbc.readMem(0x8457), 0xf);
        // 28 0387
        gbc.setState(0x166a, 0xe431, 0x18b0, 0xc1ee, 0x1212, 0x9181, 0x0, 0x1);
        gbc.writeMem(0x166a, { 0x28, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe431);
        EXPECT(gbc.pc(), 0x16a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 0388
        gbc.setState(0xc3f9, 0xfdfc, 0xcea0, 0x9221, 0x59c6, 0xc948, 0x1, 0x0);
        gbc.writeMem(0xc3f9, { 0x28, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfdfc);
        EXPECT(gbc.pc(), 0xc3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f9), 0x28);
        EXPECT(gbc.readMem(0xc3fa), 0xd7);
        // 28 0389
        gbc.setState(0xed3f, 0x66c1, 0x9c60, 0x7e0e, 0x4a9e, 0xb138, 0x0, 0x0);
        gbc.writeMem(0xed3f, { 0x28, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0xed41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3f), 0x28);
        EXPECT(gbc.readMem(0xed40), 0xc);
        // 28 038A
        gbc.setState(0x2fa, 0x9fcc, 0xdfc0, 0x85e9, 0xae21, 0xc011, 0x0, 0x0);
        gbc.writeMem(0x2fa, { 0x28, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9fcc);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 038B
        gbc.setState(0x5bd8, 0xeb32, 0x1200, 0xfda6, 0x2c98, 0x878a, 0x0, 0x0);
        gbc.writeMem(0x5bd8, { 0x28, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeb32);
        EXPECT(gbc.pc(), 0x5bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 038C
        gbc.setState(0x5336, 0xc01f, 0x2ba0, 0x1246, 0x509c, 0xf94f, 0x1, 0x0);
        gbc.writeMem(0x5336, { 0x28, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc01f);
        EXPECT(gbc.pc(), 0x53aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 038D
        gbc.setState(0xd3a0, 0xe2b1, 0x37c0, 0x4f44, 0xb24a, 0xb59f, 0x0, 0x0);
        gbc.writeMem(0xd3a0, { 0x28, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe2b1);
        EXPECT(gbc.pc(), 0xd3c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a0), 0x28);
        EXPECT(gbc.readMem(0xd3a1), 0x1f);
        // 28 038E
        gbc.setState(0x4046, 0xc618, 0x2150, 0xf274, 0x2e1c, 0x442d, 0x0, 0x0);
        gbc.writeMem(0x4046, { 0x28, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc618);
        EXPECT(gbc.pc(), 0x4048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 038F
        gbc.setState(0xd4d1, 0xcb2d, 0xf700, 0x6cb4, 0xa808, 0x1240, 0x1, 0x1);
        gbc.writeMem(0xd4d1, { 0x28, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcb2d);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d1), 0x28);
        EXPECT(gbc.readMem(0xd4d2), 0xc1);
        // 28 0390
        gbc.setState(0xded3, 0xca84, 0xd9b0, 0x99e7, 0x5f7d, 0x9330, 0x0, 0x0);
        gbc.writeMem(0xded3, { 0x28, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xca84);
        EXPECT(gbc.pc(), 0xdf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded3), 0x28);
        EXPECT(gbc.readMem(0xded4), 0x44);
        // 28 0391
        gbc.setState(0xd1ed, 0xa1eb, 0x6b30, 0xa66, 0x4211, 0x9fd3, 0x1, 0x0);
        gbc.writeMem(0xd1ed, { 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa1eb);
        EXPECT(gbc.pc(), 0xd1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ed), 0x28);
        EXPECT(gbc.readMem(0xd1ee), 0x58);
        // 28 0392
        gbc.setState(0xb4ef, 0x81cb, 0xdc30, 0x173a, 0x14a0, 0x864c, 0x0, 0x1);
        gbc.writeMem(0xb4ef, { 0x28, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x81cb);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0x28);
        EXPECT(gbc.readMem(0xb4f0), 0xb9);
        // 28 0393
        gbc.setState(0xcdb8, 0xd32, 0x2530, 0xd56e, 0x1867, 0x9db6, 0x0, 0x1);
        gbc.writeMem(0xcdb8, { 0x28, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd32);
        EXPECT(gbc.pc(), 0xcdba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb8), 0x28);
        EXPECT(gbc.readMem(0xcdb9), 0x18);
        // 28 0394
        gbc.setState(0xb14e, 0x87c4, 0xb2e0, 0xa14c, 0xf4c0, 0xfe5, 0x0, 0x1);
        gbc.writeMem(0xb14e, { 0x28, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x87c4);
        EXPECT(gbc.pc(), 0xb126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb14e), 0x28);
        EXPECT(gbc.readMem(0xb14f), 0xd6);
        // 28 0395
        gbc.setState(0xb986, 0xa52c, 0x9de0, 0x52ea, 0xc87f, 0x1fd2, 0x1, 0x1);
        gbc.writeMem(0xb986, { 0x28, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa52c);
        EXPECT(gbc.pc(), 0xb98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb986), 0x28);
        EXPECT(gbc.readMem(0xb987), 0x2);
        // 28 0396
        gbc.setState(0xc864, 0xaeb3, 0xb9c0, 0x2996, 0x2af5, 0x8e16, 0x1, 0x1);
        gbc.writeMem(0xc864, { 0x28, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0xc7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc864), 0x28);
        EXPECT(gbc.readMem(0xc865), 0x82);
        // 28 0398
        gbc.setState(0x4fed, 0xeabb, 0x8150, 0xc9a9, 0x5178, 0xcef2, 0x0, 0x1);
        gbc.writeMem(0x4fed, { 0x28, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xeabb);
        EXPECT(gbc.pc(), 0x4fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 0399
        gbc.setState(0x22cc, 0xeba5, 0x3610, 0xce64, 0x90c0, 0x1d71, 0x1, 0x1);
        gbc.writeMem(0x22cc, { 0x28, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeba5);
        EXPECT(gbc.pc(), 0x22ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 039A
        gbc.setState(0xdcf9, 0x1862, 0xc520, 0x4486, 0x2c36, 0xb098, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0x28, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1862);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf9), 0x28);
        EXPECT(gbc.readMem(0xdcfa), 0xf2);
        // 28 039B
        gbc.setState(0x3aa9, 0xa14c, 0x160, 0x8f58, 0xb80a, 0xba7c, 0x1, 0x1);
        gbc.writeMem(0x3aa9, { 0x28, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa14c);
        EXPECT(gbc.pc(), 0x3aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 039C
        gbc.setState(0x8910, 0x317b, 0xc3a0, 0x482a, 0xb375, 0x1a1c, 0x1, 0x1);
        gbc.writeMem(0x8910, { 0x28, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x317b);
        EXPECT(gbc.pc(), 0x8970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8910), 0x28);
        EXPECT(gbc.readMem(0x8911), 0x5e);
        // 28 039D
        gbc.setState(0x855d, 0x8667, 0xae20, 0x46e3, 0x38a0, 0x8dad, 0x1, 0x0);
        gbc.writeMem(0x855d, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x855f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855d), 0x28);
        EXPECT(gbc.readMem(0x855e), 0xd4);
        // 28 039E
        gbc.setState(0x32dd, 0x2b9a, 0x6070, 0x884e, 0x8bb3, 0x152c, 0x0, 0x1);
        gbc.writeMem(0x32dd, { 0x28, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2b9a);
        EXPECT(gbc.pc(), 0x32df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 039F
        gbc.setState(0x453f, 0xcfad, 0x3bb0, 0x2cdf, 0xfd37, 0x4c72, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcfad);
        EXPECT(gbc.pc(), 0x4598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03A0
        gbc.setState(0x1b25, 0x445e, 0xca70, 0x1281, 0x8e84, 0x4543, 0x0, 0x1);
        gbc.writeMem(0x1b25, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x445e);
        EXPECT(gbc.pc(), 0x1b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03A1
        gbc.setState(0xb6d9, 0x7e85, 0x7940, 0xd96c, 0x1754, 0x22c, 0x0, 0x0);
        gbc.writeMem(0xb6d9, { 0x28, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7e85);
        EXPECT(gbc.pc(), 0xb6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d9), 0x28);
        EXPECT(gbc.readMem(0xb6da), 0xa0);
        // 28 03A2
        gbc.setState(0xe783, 0x5416, 0x9fa0, 0x8ad6, 0x3c95, 0x9895, 0x0, 0x1);
        gbc.writeMem(0xe783, { 0x28, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0xe7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe783), 0x28);
        EXPECT(gbc.readMem(0xe784), 0x73);
        // 28 03A3
        gbc.setState(0x95c3, 0x3905, 0x81b0, 0x1d26, 0x5fba, 0xd822, 0x0, 0x0);
        gbc.writeMem(0x95c3, { 0x28, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3905);
        EXPECT(gbc.pc(), 0x961a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c3), 0x28);
        EXPECT(gbc.readMem(0x95c4), 0x55);
        // 28 03A4
        gbc.setState(0xe97c, 0xdb4c, 0x4f00, 0x2c29, 0x8edb, 0xe478, 0x0, 0x1);
        gbc.writeMem(0xe97c, { 0x28, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0xe97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97c), 0x28);
        EXPECT(gbc.readMem(0xe97d), 0x5a);
        // 28 03A5
        gbc.setState(0x1591, 0x8e7e, 0x21b0, 0x8e50, 0xabb3, 0x673d, 0x1, 0x0);
        gbc.writeMem(0x1591, { 0x28, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8e7e);
        EXPECT(gbc.pc(), 0x1536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03A6
        gbc.setState(0xdeab, 0x4f13, 0x8030, 0x418e, 0xafc3, 0xc589, 0x1, 0x1);
        gbc.writeMem(0xdeab, { 0x28, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4f13);
        EXPECT(gbc.pc(), 0xdead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeab), 0x28);
        EXPECT(gbc.readMem(0xdeac), 0x72);
        // 28 03A7
        gbc.setState(0xaf4, 0x445f, 0xde30, 0x70e8, 0xc460, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0xaf4, { 0x28, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x445f);
        EXPECT(gbc.pc(), 0xaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03A9
        gbc.setState(0x3ee5, 0x78d9, 0x9ef0, 0xf89e, 0xb301, 0x94d2, 0x0, 0x1);
        gbc.writeMem(0x3ee5, { 0x28, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x78d9);
        EXPECT(gbc.pc(), 0x3efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03AA
        gbc.setState(0x8dbf, 0x2860, 0xe2e0, 0xc2bc, 0x7b88, 0xaf96, 0x0, 0x0);
        gbc.writeMem(0x8dbf, { 0x28, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2860);
        EXPECT(gbc.pc(), 0x8dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbf), 0x28);
        EXPECT(gbc.readMem(0x8dc0), 0x1d);
        // 28 03AB
        gbc.setState(0xd4af, 0xb3b, 0x5e90, 0x5c48, 0x6f09, 0x298a, 0x1, 0x0);
        gbc.writeMem(0xd4af, { 0x28, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb3b);
        EXPECT(gbc.pc(), 0xd48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4af), 0x28);
        EXPECT(gbc.readMem(0xd4b0), 0xde);
        // 28 03AC
        gbc.setState(0x6b0f, 0x79e2, 0x4df0, 0x4a5e, 0x9d08, 0x5522, 0x1, 0x0);
        gbc.writeMem(0x6b0f, { 0x28, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x79e2);
        EXPECT(gbc.pc(), 0x6afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03AD
        gbc.setState(0x127b, 0xc0a6, 0xa9a0, 0x83d4, 0xb3fa, 0x5fee, 0x1, 0x0);
        gbc.writeMem(0x127b, { 0x28, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc0a6);
        EXPECT(gbc.pc(), 0x121e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 03AE
        gbc.setState(0x7329, 0x444, 0xc090, 0xdaf8, 0xa0d3, 0xc981, 0x1, 0x0);
        gbc.writeMem(0x7329, { 0x28, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x444);
        EXPECT(gbc.pc(), 0x72f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03AF
        gbc.setState(0x804f, 0xc0c6, 0xda30, 0xc42f, 0xfb6c, 0x5ab, 0x0, 0x1);
        gbc.writeMem(0x804f, { 0x28, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc0c6);
        EXPECT(gbc.pc(), 0x8051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804f), 0x28);
        EXPECT(gbc.readMem(0x8050), 0x89);
        // 28 03B0
        gbc.setState(0xa443, 0xe5ba, 0x26e0, 0x56df, 0x8447, 0xf8aa, 0x0, 0x0);
        gbc.writeMem(0xa443, { 0x28, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0xa43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa443), 0x28);
        EXPECT(gbc.readMem(0xa444), 0xf8);
        // 28 03B1
        gbc.setState(0x213, 0xa8ca, 0x46d0, 0xdbb7, 0xb89f, 0xd976, 0x0, 0x0);
        gbc.writeMem(0x213, { 0x28, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa8ca);
        EXPECT(gbc.pc(), 0x240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03B2
        gbc.setState(0xab6d, 0x96f5, 0x610, 0xf159, 0x8c16, 0x520e, 0x1, 0x0);
        gbc.writeMem(0xab6d, { 0x28, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0xab6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6d), 0x28);
        EXPECT(gbc.readMem(0xab6e), 0xff);
        // 28 03B3
        gbc.setState(0xeb37, 0x1e97, 0xbdb0, 0xf159, 0x48c9, 0xf79, 0x1, 0x0);
        gbc.writeMem(0xeb37, { 0x28, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1e97);
        EXPECT(gbc.pc(), 0xeb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb37), 0x28);
        EXPECT(gbc.readMem(0xeb38), 0x48);
        // 28 03B4
        gbc.setState(0xb2f1, 0xdf4b, 0x3ef0, 0xc706, 0x9c26, 0xe894, 0x1, 0x1);
        gbc.writeMem(0xb2f1, { 0x28, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdf4b);
        EXPECT(gbc.pc(), 0xb32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f1), 0x28);
        EXPECT(gbc.readMem(0xb2f2), 0x37);
        // 28 03B5
        gbc.setState(0xd303, 0x8388, 0x6080, 0x9799, 0x3517, 0xabbe, 0x0, 0x1);
        gbc.writeMem(0xd303, { 0x28, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8388);
        EXPECT(gbc.pc(), 0xd29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd303), 0x28);
        EXPECT(gbc.readMem(0xd304), 0x97);
        // 28 03B6
        gbc.setState(0xd3a5, 0xefb8, 0x14b0, 0x7de0, 0x414e, 0x7b88, 0x0, 0x0);
        gbc.writeMem(0xd3a5, { 0x28, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xefb8);
        EXPECT(gbc.pc(), 0xd39e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a5), 0x28);
        EXPECT(gbc.readMem(0xd3a6), 0xf7);
        // 28 03B7
        gbc.setState(0xd149, 0x2413, 0xd490, 0xd3df, 0x6731, 0xdac9, 0x0, 0x1);
        gbc.writeMem(0xd149, { 0x28, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2413);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd149), 0x28);
        EXPECT(gbc.readMem(0xd14a), 0xed);
        // 28 03B8
        gbc.setState(0xc65, 0xbec3, 0xb740, 0xb21f, 0x70f9, 0x9cf9, 0x1, 0x0);
        gbc.writeMem(0xc65, { 0x28, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbec3);
        EXPECT(gbc.pc(), 0xc67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03B9
        gbc.setState(0xc7ce, 0x1b2a, 0xa820, 0x7f19, 0x62f5, 0xaff3, 0x0, 0x1);
        gbc.writeMem(0xc7ce, { 0x28, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1b2a);
        EXPECT(gbc.pc(), 0xc7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ce), 0x28);
        EXPECT(gbc.readMem(0xc7cf), 0xb0);
        // 28 03BA
        gbc.setState(0xc1b1, 0x2138, 0x9e90, 0x32fe, 0x43b1, 0x735f, 0x0, 0x1);
        gbc.writeMem(0xc1b1, { 0x28, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0xc159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b1), 0x28);
        EXPECT(gbc.readMem(0xc1b2), 0xa6);
        // 28 03BB
        gbc.setState(0x6200, 0x202a, 0xdef0, 0x30d6, 0xbc3b, 0x8c04, 0x1, 0x0);
        gbc.writeMem(0x6200, { 0x28, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x202a);
        EXPECT(gbc.pc(), 0x61a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03BC
        gbc.setState(0xe0bb, 0xfb7, 0x9d60, 0x4c5a, 0xf506, 0x2600, 0x1, 0x1);
        gbc.writeMem(0xe0bb, { 0x28, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfb7);
        EXPECT(gbc.pc(), 0xe0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bb), 0x28);
        EXPECT(gbc.readMem(0xe0bc), 0x8f);
        // 28 03BD
        gbc.setState(0xd288, 0x720d, 0x8210, 0x6b2f, 0x1147, 0x9d3e, 0x1, 0x1);
        gbc.writeMem(0xd288, { 0x28, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0xd28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd288), 0x28);
        EXPECT(gbc.readMem(0xd289), 0x49);
        // 28 03BE
        gbc.setState(0xddf0, 0xd1d5, 0x5e0, 0x62b4, 0x56e4, 0x1999, 0x0, 0x1);
        gbc.writeMem(0xddf0, { 0x28, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd1d5);
        EXPECT(gbc.pc(), 0xddc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf0), 0x28);
        EXPECT(gbc.readMem(0xddf1), 0xd5);
        // 28 03BF
        gbc.setState(0xf6e, 0x744e, 0xb300, 0x77a0, 0x74, 0xafc2, 0x1, 0x1);
        gbc.writeMem(0xf6e, { 0x28, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x744e);
        EXPECT(gbc.pc(), 0xf70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03C0
        gbc.setState(0xd17f, 0xb3b9, 0xa250, 0x7ebe, 0x5d3e, 0xf85e, 0x1, 0x0);
        gbc.writeMem(0xd17f, { 0x28, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb3b9);
        EXPECT(gbc.pc(), 0xd181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17f), 0x28);
        EXPECT(gbc.readMem(0xd180), 0xb8);
        // 28 03C1
        gbc.setState(0x2146, 0xd56b, 0x73a0, 0xd953, 0x18a7, 0xa91d, 0x0, 0x1);
        gbc.writeMem(0x2146, { 0x28, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd56b);
        EXPECT(gbc.pc(), 0x2195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 03C2
        gbc.setState(0x9f5b, 0xf7b8, 0xd1a0, 0x65d5, 0x8977, 0xcda5, 0x0, 0x1);
        gbc.writeMem(0x9f5b, { 0x28, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf7b8);
        EXPECT(gbc.pc(), 0x9f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5b), 0x28);
        EXPECT(gbc.readMem(0x9f5c), 0xf6);
        // 28 03C3
        gbc.setState(0x7f47, 0x9276, 0xbad0, 0x55fa, 0xd128, 0x327, 0x1, 0x0);
        gbc.writeMem(0x7f47, { 0x28, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0x7f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03C4
        gbc.setState(0x8fec, 0x15d1, 0x9b50, 0x1eb5, 0x477, 0xb47, 0x1, 0x0);
        gbc.writeMem(0x8fec, { 0x28, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x15d1);
        EXPECT(gbc.pc(), 0x8fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fec), 0x28);
        EXPECT(gbc.readMem(0x8fed), 0xc1);
        // 28 03C6
        gbc.setState(0xe4a7, 0xd8ba, 0x250, 0x4277, 0xebb3, 0xc914, 0x0, 0x0);
        gbc.writeMem(0xe4a7, { 0x28, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd8ba);
        EXPECT(gbc.pc(), 0xe4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a7), 0x28);
        EXPECT(gbc.readMem(0xe4a8), 0x55);
        // 28 03C7
        gbc.setState(0x9561, 0xb359, 0x3050, 0x3a8a, 0xa47f, 0x3531, 0x0, 0x1);
        gbc.writeMem(0x9561, { 0x28, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x9563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9561), 0x28);
        EXPECT(gbc.readMem(0x9562), 0x9e);
        // 28 03C8
        gbc.setState(0x6f9a, 0x935b, 0x1730, 0x98c8, 0x32b2, 0xdf8d, 0x1, 0x0);
        gbc.writeMem(0x6f9a, { 0x28, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x935b);
        EXPECT(gbc.pc(), 0x6f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03C9
        gbc.setState(0x21cb, 0x453e, 0x4c50, 0x603d, 0x5633, 0x2e8c, 0x0, 0x1);
        gbc.writeMem(0x21cb, { 0x28, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03CA
        gbc.setState(0x7d4c, 0xa276, 0x4be0, 0x6737, 0xa727, 0xf30b, 0x0, 0x1);
        gbc.writeMem(0x7d4c, { 0x28, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0x7d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 28 03CB
        gbc.setState(0x2669, 0xebfc, 0x13b0, 0x2c15, 0x45b0, 0x58ab, 0x1, 0x1);
        gbc.writeMem(0x2669, { 0x28, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x2647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03CC
        gbc.setState(0x6d0a, 0x3865, 0x6930, 0x57a1, 0x275, 0x6ea0, 0x0, 0x0);
        gbc.writeMem(0x6d0a, { 0x28, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3865);
        EXPECT(gbc.pc(), 0x6d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03CD
        gbc.setState(0xb08c, 0xe05b, 0x5640, 0xd6bc, 0x8de2, 0xb3f6, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0x28, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe05b);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08c), 0x28);
        EXPECT(gbc.readMem(0xb08d), 0xab);
        // 28 03CE
        gbc.setState(0x87a3, 0x8a31, 0xf2c0, 0x2619, 0x49f4, 0xf47e, 0x0, 0x1);
        gbc.writeMem(0x87a3, { 0x28, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8a31);
        EXPECT(gbc.pc(), 0x872b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a3), 0x28);
        EXPECT(gbc.readMem(0x87a4), 0x86);
        // 28 03CF
        gbc.setState(0x16ed, 0xffa6, 0xe550, 0xf75d, 0x20e0, 0x36b6, 0x1, 0x1);
        gbc.writeMem(0x16ed, { 0x28, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xffa6);
        EXPECT(gbc.pc(), 0x16ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03D0
        gbc.setState(0x569f, 0x9f61, 0x52f0, 0x3276, 0x3855, 0x1e7, 0x0, 0x0);
        gbc.writeMem(0x569f, { 0x28, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9f61);
        EXPECT(gbc.pc(), 0x566d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03D1
        gbc.setState(0xc489, 0x7317, 0xa560, 0x4723, 0x3f50, 0x3b7b, 0x0, 0x0);
        gbc.writeMem(0xc489, { 0x28, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7317);
        EXPECT(gbc.pc(), 0xc48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc489), 0x28);
        EXPECT(gbc.readMem(0xc48a), 0xc5);
        // 28 03D2
        gbc.setState(0xb339, 0x8c93, 0x8390, 0x341e, 0xc3aa, 0xcf69, 0x0, 0x1);
        gbc.writeMem(0xb339, { 0x28, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8c93);
        EXPECT(gbc.pc(), 0xb349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb339), 0x28);
        EXPECT(gbc.readMem(0xb33a), 0xe);
        // 28 03D3
        gbc.setState(0x61e7, 0x7087, 0x7c00, 0x20e1, 0xec81, 0x3268, 0x1, 0x1);
        gbc.writeMem(0x61e7, { 0x28, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7087);
        EXPECT(gbc.pc(), 0x61e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03D4
        gbc.setState(0x9676, 0xedac, 0x2860, 0xfd42, 0xf30e, 0x1e86, 0x0, 0x0);
        gbc.writeMem(0x9676, { 0x28, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xedac);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0x28);
        EXPECT(gbc.readMem(0x9677), 0x57);
        // 28 03D5
        gbc.setState(0xc3d2, 0x31c4, 0x1030, 0xd407, 0x1771, 0x1522, 0x0, 0x1);
        gbc.writeMem(0xc3d2, { 0x28, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x31c4);
        EXPECT(gbc.pc(), 0xc3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d2), 0x28);
        EXPECT(gbc.readMem(0xc3d3), 0xb2);
        // 28 03D6
        gbc.setState(0x4d0b, 0xa5f6, 0x3e70, 0x50ba, 0x9489, 0xc142, 0x0, 0x1);
        gbc.writeMem(0x4d0b, { 0x28, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa5f6);
        EXPECT(gbc.pc(), 0x4d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03D7
        gbc.setState(0x38f, 0xd54, 0x9800, 0x4234, 0x5a23, 0xa2c, 0x1, 0x1);
        gbc.writeMem(0x38f, { 0x28, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd54);
        EXPECT(gbc.pc(), 0x391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03D8
        gbc.setState(0x80f7, 0x6859, 0x9bb0, 0x231e, 0x23ab, 0xfdc1, 0x1, 0x1);
        gbc.writeMem(0x80f7, { 0x28, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6859);
        EXPECT(gbc.pc(), 0x8089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f7), 0x28);
        EXPECT(gbc.readMem(0x80f8), 0x90);
        // 28 03D9
        gbc.setState(0x1c, 0xc843, 0xedf0, 0x861d, 0xbefc, 0x740d, 0x0, 0x0);
        gbc.writeMem(0x1c, { 0x28, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc843);
        EXPECT(gbc.pc(), 0xffaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03DA
        gbc.setState(0x7c8a, 0x6137, 0x5f00, 0x4a95, 0x3e4b, 0x2075, 0x0, 0x1);
        gbc.writeMem(0x7c8a, { 0x28, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6137);
        EXPECT(gbc.pc(), 0x7c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03DB
        gbc.setState(0xa950, 0x2126, 0x16d0, 0xa94c, 0xc3c, 0x61d8, 0x1, 0x1);
        gbc.writeMem(0xa950, { 0x28, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2126);
        EXPECT(gbc.pc(), 0xa97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa950), 0x28);
        EXPECT(gbc.readMem(0xa951), 0x29);
        // 28 03DC
        gbc.setState(0xf4a, 0xd4c8, 0xa090, 0x90e5, 0xa5d0, 0x1b77, 0x1, 0x0);
        gbc.writeMem(0xf4a, { 0x28, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd4c8);
        EXPECT(gbc.pc(), 0xf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03DD
        gbc.setState(0x6d33, 0xfd6d, 0xd910, 0xacf8, 0x45f5, 0x8cb0, 0x1, 0x0);
        gbc.writeMem(0x6d33, { 0x28, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfd6d);
        EXPECT(gbc.pc(), 0x6d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03DE
        gbc.setState(0xd4fa, 0x3ea6, 0x8210, 0x7c52, 0x3247, 0x8b2e, 0x1, 0x0);
        gbc.writeMem(0xd4fa, { 0x28, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3ea6);
        EXPECT(gbc.pc(), 0xd4fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fa), 0x28);
        EXPECT(gbc.readMem(0xd4fb), 0xd4);
        // 28 03DF
        gbc.setState(0x29e0, 0x57d6, 0x3450, 0xbf5d, 0x324c, 0xefa1, 0x1, 0x1);
        gbc.writeMem(0x29e0, { 0x28, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x57d6);
        EXPECT(gbc.pc(), 0x29e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 28 03E0
        gbc.setState(0x8876, 0xdcd6, 0x9f10, 0xe125, 0x44ed, 0x7b1e, 0x0, 0x0);
        gbc.writeMem(0x8876, { 0x28, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdcd6);
        EXPECT(gbc.pc(), 0x8878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8876), 0x28);
        EXPECT(gbc.readMem(0x8877), 0x19);
        // 28 03E1
        gbc.setState(0x14fe, 0x264f, 0x4340, 0xca94, 0xa99b, 0xbbc6, 0x1, 0x1);
        gbc.writeMem(0x14fe, { 0x28, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x264f);
        EXPECT(gbc.pc(), 0x1500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03E2
        gbc.setState(0x8d43, 0x85a4, 0x90c0, 0xe241, 0x8eb3, 0x2577, 0x1, 0x1);
        gbc.writeMem(0x8d43, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x85a4);
        EXPECT(gbc.pc(), 0x8d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d43), 0x28);
        EXPECT(gbc.readMem(0x8d44), 0x3d);
        // 28 03E3
        gbc.setState(0xf75, 0xbb5b, 0x6040, 0xa6a8, 0x9f5b, 0xea37, 0x0, 0x0);
        gbc.writeMem(0xf75, { 0x28, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbb5b);
        EXPECT(gbc.pc(), 0xf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 28 03E4
        gbc.setState(0xadd2, 0x239d, 0xfe60, 0x215, 0x7dd6, 0x1631, 0x1, 0x0);
        gbc.writeMem(0xadd2, { 0x28, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x239d);
        EXPECT(gbc.pc(), 0xadd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd2), 0x28);
        EXPECT(gbc.readMem(0xadd3), 0x4c);
        // 28 03E5
        gbc.setState(0x7573, 0xc2bf, 0x63b0, 0xe34e, 0xe2ee, 0xb77a, 0x1, 0x1);
        gbc.writeMem(0x7573, { 0x28, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc2bf);
        EXPECT(gbc.pc(), 0x75b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 28 03E6
        gbc.setState(0xbc40, 0x4821, 0x9720, 0x6206, 0x7c35, 0x2679, 0x0, 0x0);
        gbc.writeMem(0xbc40, { 0x28, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4821);
        EXPECT(gbc.pc(), 0xbc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc40), 0x28);
        EXPECT(gbc.readMem(0xbc41), 0x69);
        // 28 03E7
        gbc.setState(0x5a5, 0xa8da, 0x3f30, 0xcc27, 0xbde6, 0x6e18, 0x0, 0x1);
        gbc.writeMem(0x5a5, { 0x28, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa8da);
        EXPECT(gbc.pc(), 0x5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
