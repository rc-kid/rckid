    TEST(gbcemu, opcode_cb_18) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 18 0000
        gbc.setState(0xad53, 0xa383, 0x9420, 0xbb, 0x4d02, 0xa8f0, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa383, gbc.sp());
        EXPECT(0xad55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad53));
        EXPECT(0x18, gbc.readMem(0xad54));
        // CB 18 0002
        gbc.setState(0xa0c0, 0x5088, 0xc8d0, 0x869e, 0xfb8a, 0x771, 0x1, 0x1);
        gbc.writeMem(0xa0c0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5088, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c0));
        EXPECT(0x18, gbc.readMem(0xa0c1));
        // CB 18 0003
        gbc.setState(0xd467, 0x3ca9, 0x4010, 0x3841, 0x4095, 0x1f66, 0x1, 0x1);
        gbc.writeMem(0xd467, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3ca9, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd467));
        EXPECT(0x18, gbc.readMem(0xd468));
        // CB 18 0004
        gbc.setState(0xdfd8, 0xe09e, 0x5970, 0x4a80, 0xf3d1, 0xfda0, 0x1, 0x0);
        gbc.writeMem(0xdfd8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd8));
        EXPECT(0x18, gbc.readMem(0xdfd9));
        // CB 18 0005
        gbc.setState(0x7426, 0x1686, 0xf510, 0x2372, 0x1dd5, 0x216b, 0x0, 0x0);
        gbc.writeMem(0x7426, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1686, gbc.sp());
        EXPECT(0x7428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0006
        gbc.setState(0xb3a3, 0x2747, 0x6b10, 0x35f0, 0xfeeb, 0x972e, 0x0, 0x1);
        gbc.writeMem(0xb3a3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2747, gbc.sp());
        EXPECT(0xb3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a3));
        EXPECT(0x18, gbc.readMem(0xb3a4));
        // CB 18 0007
        gbc.setState(0xe42f, 0x270c, 0x6730, 0x8cd2, 0x6177, 0x3a89, 0x1, 0x0);
        gbc.writeMem(0xe42f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x270c, gbc.sp());
        EXPECT(0xe431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42f));
        EXPECT(0x18, gbc.readMem(0xe430));
        // CB 18 0008
        gbc.setState(0xc81d, 0xe7cd, 0xbdb0, 0x6816, 0x2163, 0x5359, 0x0, 0x1);
        gbc.writeMem(0xc81d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81d));
        EXPECT(0x18, gbc.readMem(0xc81e));
        // CB 18 0009
        gbc.setState(0xfa7, 0x638f, 0xe080, 0x2ff3, 0x6537, 0x24b7, 0x1, 0x1);
        gbc.writeMem(0xfa7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x638f, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 000A
        gbc.setState(0x3c7b, 0xd201, 0xd410, 0xe6f7, 0x33af, 0xa3d1, 0x0, 0x1);
        gbc.writeMem(0x3c7b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x3c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 000B
        gbc.setState(0xa7e5, 0xb127, 0x8b30, 0x4f57, 0x6655, 0x57ff, 0x0, 0x0);
        gbc.writeMem(0xa7e5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0xa7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e5));
        EXPECT(0x18, gbc.readMem(0xa7e6));
        // CB 18 000C
        gbc.setState(0xafae, 0x2f4, 0xc620, 0xebaf, 0xe236, 0x216a, 0x0, 0x1);
        gbc.writeMem(0xafae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2f4, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafae));
        EXPECT(0x18, gbc.readMem(0xafaf));
        // CB 18 000D
        gbc.setState(0x77be, 0x417a, 0x9500, 0x33c0, 0x494, 0x9ccb, 0x1, 0x1);
        gbc.writeMem(0x77be, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x417a, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 000E
        gbc.setState(0x465b, 0xf29d, 0x62e0, 0x7931, 0xe2b9, 0x1e20, 0x0, 0x1);
        gbc.writeMem(0x465b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0x465d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 000F
        gbc.setState(0x9265, 0xb58e, 0xaeb0, 0xb204, 0x72aa, 0xc5da, 0x0, 0x1);
        gbc.writeMem(0x9265, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0x9267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9265));
        EXPECT(0x18, gbc.readMem(0x9266));
        // CB 18 0010
        gbc.setState(0xe2c3, 0x36a6, 0xcfb0, 0x3e5, 0x62b1, 0x723d, 0x0, 0x1);
        gbc.writeMem(0xe2c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0x18, gbc.readMem(0xe2c4));
        // CB 18 0011
        gbc.setState(0x9805, 0x94f9, 0x9280, 0xbd56, 0x1008, 0xb4cb, 0x0, 0x0);
        gbc.writeMem(0x9805, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x94f9, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9805));
        EXPECT(0x18, gbc.readMem(0x9806));
        // CB 18 0012
        gbc.setState(0x1dc1, 0x99a, 0x5140, 0x9c2a, 0x807b, 0xf312, 0x1, 0x1);
        gbc.writeMem(0x1dc1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0x1dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0013
        gbc.setState(0xabe8, 0x546, 0x6dd0, 0x8d19, 0x8489, 0xf019, 0x0, 0x1);
        gbc.writeMem(0xabe8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe8));
        EXPECT(0x18, gbc.readMem(0xabe9));
        // CB 18 0014
        gbc.setState(0x46ea, 0xfd75, 0x57b0, 0x5e5a, 0x310, 0xe83b, 0x0, 0x1);
        gbc.writeMem(0x46ea, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfd75, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0015
        gbc.setState(0xa96d, 0xcea9, 0x7690, 0x65ab, 0xd33a, 0x4d21, 0x1, 0x0);
        gbc.writeMem(0xa96d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcea9, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96d));
        EXPECT(0x18, gbc.readMem(0xa96e));
        // CB 18 0016
        gbc.setState(0x2081, 0xf41, 0x52d0, 0x46fb, 0x9452, 0x9d30, 0x0, 0x0);
        gbc.writeMem(0x2081, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0017
        gbc.setState(0xf6e, 0xf2da, 0xab60, 0xdaf4, 0xee14, 0xf550, 0x1, 0x0);
        gbc.writeMem(0xf6e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0019
        gbc.setState(0x1be3, 0x4191, 0x5bf0, 0xa1c3, 0x1f6e, 0x8584, 0x1, 0x1);
        gbc.writeMem(0x1be3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4191, gbc.sp());
        EXPECT(0x1be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 001A
        gbc.setState(0x9854, 0xdcd6, 0x6850, 0x9c82, 0x2001, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0x9854, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdcd6, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9854));
        EXPECT(0x18, gbc.readMem(0x9855));
        // CB 18 001B
        gbc.setState(0x4a37, 0x84b1, 0x9c10, 0x9c67, 0x6246, 0xee7e, 0x1, 0x1);
        gbc.writeMem(0x4a37, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x4a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 001C
        gbc.setState(0x59d1, 0x4cd7, 0xb000, 0xa48e, 0xee33, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 001D
        gbc.setState(0xb9c, 0xf01f, 0x7ca0, 0x3f9c, 0x3792, 0x7d2a, 0x0, 0x0);
        gbc.writeMem(0xb9c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0xb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 001E
        gbc.setState(0x7a60, 0x81a, 0xbd0, 0x11f9, 0xacad, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0x7a60, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x81a, gbc.sp());
        EXPECT(0x7a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 001F
        gbc.setState(0xaf36, 0x3010, 0xd530, 0xed6b, 0x47e3, 0xec20, 0x1, 0x0);
        gbc.writeMem(0xaf36, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3010, gbc.sp());
        EXPECT(0xaf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf36));
        EXPECT(0x18, gbc.readMem(0xaf37));
        // CB 18 0020
        gbc.setState(0x1d7c, 0x14fa, 0x17c0, 0xbff4, 0xbea8, 0x7ee, 0x1, 0x0);
        gbc.writeMem(0x1d7c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x14fa, gbc.sp());
        EXPECT(0x1d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0021
        gbc.setState(0x1b3c, 0x9d1b, 0x8040, 0x628e, 0x9619, 0xf77f, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0022
        gbc.setState(0x8ce3, 0x5418, 0x7890, 0xc455, 0xa586, 0x9e29, 0x1, 0x1);
        gbc.writeMem(0x8ce3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce3));
        EXPECT(0x18, gbc.readMem(0x8ce4));
        // CB 18 0023
        gbc.setState(0x57ce, 0x5f95, 0xf340, 0x1548, 0xcba4, 0x6251, 0x0, 0x0);
        gbc.writeMem(0x57ce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5f95, gbc.sp());
        EXPECT(0x57d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0024
        gbc.setState(0x28f, 0x8efc, 0x7940, 0xaf65, 0x9a01, 0xfe43, 0x0, 0x0);
        gbc.writeMem(0x28f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0x291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0025
        gbc.setState(0xa114, 0x42e8, 0xddd0, 0xf712, 0x8487, 0x9a02, 0x1, 0x1);
        gbc.writeMem(0xa114, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x42e8, gbc.sp());
        EXPECT(0xa116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa114));
        EXPECT(0x18, gbc.readMem(0xa115));
        // CB 18 0026
        gbc.setState(0x7e32, 0x18ca, 0xacd0, 0x940d, 0xbade, 0x3a5f, 0x1, 0x0);
        gbc.writeMem(0x7e32, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x18ca, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0027
        gbc.setState(0xadd5, 0x407c, 0x2820, 0x6bc3, 0xd584, 0x846e, 0x0, 0x0);
        gbc.writeMem(0xadd5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd5));
        EXPECT(0x18, gbc.readMem(0xadd6));
        // CB 18 0028
        gbc.setState(0xde, 0xb733, 0x6140, 0xecf3, 0x4028, 0x93ba, 0x1, 0x0);
        gbc.writeMem(0xde, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb733, gbc.sp());
        EXPECT(0xe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0029
        gbc.setState(0x61d8, 0x92f8, 0x3930, 0xe766, 0x881c, 0xb247, 0x1, 0x1);
        gbc.writeMem(0x61d8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x92f8, gbc.sp());
        EXPECT(0x61da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 002A
        gbc.setState(0x5802, 0xd810, 0x1590, 0x9ad, 0x1c55, 0x8c9d, 0x0, 0x0);
        gbc.writeMem(0x5802, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd810, gbc.sp());
        EXPECT(0x5804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 002B
        gbc.setState(0xe422, 0x3863, 0xaea0, 0x74c, 0x8506, 0x238f, 0x0, 0x0);
        gbc.writeMem(0xe422, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3863, gbc.sp());
        EXPECT(0xe424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe422));
        EXPECT(0x18, gbc.readMem(0xe423));
        // CB 18 002D
        gbc.setState(0x4699, 0x602, 0x2d10, 0x1d36, 0x152f, 0x24c4, 0x1, 0x1);
        gbc.writeMem(0x4699, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x602, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 002E
        gbc.setState(0x5842, 0x1afb, 0xef00, 0xe918, 0x415d, 0x33a5, 0x0, 0x0);
        gbc.writeMem(0x5842, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1afb, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 002F
        gbc.setState(0xcc3d, 0x5b64, 0xaac0, 0x8a0a, 0x5dbd, 0x4577, 0x1, 0x1);
        gbc.writeMem(0xcc3d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5b64, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0x18, gbc.readMem(0xcc3e));
        // CB 18 0030
        gbc.setState(0xb094, 0x598f, 0xef40, 0x5fe, 0x563e, 0x1959, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0xb096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb094));
        EXPECT(0x18, gbc.readMem(0xb095));
        // CB 18 0031
        gbc.setState(0xaab4, 0x98b5, 0x77d0, 0xb12, 0x9833, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0xaab4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab4));
        EXPECT(0x18, gbc.readMem(0xaab5));
        // CB 18 0032
        gbc.setState(0x7852, 0xadd3, 0x320, 0x1040, 0xb58a, 0xffac, 0x1, 0x0);
        gbc.writeMem(0x7852, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0033
        gbc.setState(0x8a31, 0x4f8f, 0x4ba0, 0x459e, 0xa8f7, 0xc2b0, 0x1, 0x0);
        gbc.writeMem(0x8a31, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a31));
        EXPECT(0x18, gbc.readMem(0x8a32));
        // CB 18 0034
        gbc.setState(0xa235, 0x680a, 0xb290, 0xaac, 0x9f9c, 0xb7d8, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0xa237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa235));
        EXPECT(0x18, gbc.readMem(0xa236));
        // CB 18 0035
        gbc.setState(0xa2d5, 0x9f40, 0x54a0, 0x4cee, 0xe735, 0x1166, 0x0, 0x0);
        gbc.writeMem(0xa2d5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9f40, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d5));
        EXPECT(0x18, gbc.readMem(0xa2d6));
        // CB 18 0036
        gbc.setState(0xa794, 0x35a9, 0xbfe0, 0x9346, 0x2010, 0x39b6, 0x0, 0x1);
        gbc.writeMem(0xa794, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35a9, gbc.sp());
        EXPECT(0xa796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa794));
        EXPECT(0x18, gbc.readMem(0xa795));
        // CB 18 0037
        gbc.setState(0xd5ce, 0xa010, 0xaf00, 0xd528, 0x401e, 0x9c5e, 0x1, 0x1);
        gbc.writeMem(0xd5ce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa010, gbc.sp());
        EXPECT(0xd5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ce));
        EXPECT(0x18, gbc.readMem(0xd5cf));
        // CB 18 0038
        gbc.setState(0xdf9e, 0x7ac4, 0x5c20, 0xbf35, 0xf706, 0x199e, 0x0, 0x1);
        gbc.writeMem(0xdf9e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7ac4, gbc.sp());
        EXPECT(0xdfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9e));
        EXPECT(0x18, gbc.readMem(0xdf9f));
        // CB 18 0039
        gbc.setState(0x3eb5, 0xfe65, 0x4680, 0x9dd9, 0x8283, 0x8de2, 0x1, 0x0);
        gbc.writeMem(0x3eb5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 003B
        gbc.setState(0xe703, 0xcebf, 0xe10, 0xcb0a, 0xfd87, 0xdb99, 0x1, 0x0);
        gbc.writeMem(0xe703, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcebf, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe703));
        EXPECT(0x18, gbc.readMem(0xe704));
        // CB 18 003C
        gbc.setState(0x80d3, 0x8400, 0x7990, 0xfed3, 0xca4c, 0xe5ae, 0x1, 0x1);
        gbc.writeMem(0x80d3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8400, gbc.sp());
        EXPECT(0x80d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d3));
        EXPECT(0x18, gbc.readMem(0x80d4));
        // CB 18 003D
        gbc.setState(0xe34a, 0xfbe2, 0x2800, 0x394c, 0x7c4b, 0x4899, 0x1, 0x0);
        gbc.writeMem(0xe34a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0xe34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34a));
        EXPECT(0x18, gbc.readMem(0xe34b));
        // CB 18 003E
        gbc.setState(0xc6ce, 0x7b92, 0xdc90, 0xe995, 0xacdd, 0x9154, 0x1, 0x1);
        gbc.writeMem(0xc6ce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0xc6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ce));
        EXPECT(0x18, gbc.readMem(0xc6cf));
        // CB 18 0040
        gbc.setState(0xa38e, 0xdce3, 0x9220, 0x76d9, 0xd3c4, 0xc7af, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdce3, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x18, gbc.readMem(0xa38f));
        // CB 18 0041
        gbc.setState(0x74ce, 0xf38b, 0xbb30, 0x16bd, 0xe01c, 0x3c85, 0x1, 0x1);
        gbc.writeMem(0x74ce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf38b, gbc.sp());
        EXPECT(0x74d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0042
        gbc.setState(0x660c, 0x6445, 0x5af0, 0x4524, 0xfc5e, 0x73ec, 0x1, 0x0);
        gbc.writeMem(0x660c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6445, gbc.sp());
        EXPECT(0x660e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0044
        gbc.setState(0x5333, 0x3d0a, 0xb360, 0x30f8, 0xa91a, 0x8657, 0x1, 0x0);
        gbc.writeMem(0x5333, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0045
        gbc.setState(0x75ba, 0xcf57, 0x4590, 0x8d61, 0x34e, 0x45c4, 0x1, 0x1);
        gbc.writeMem(0x75ba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0x75bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0046
        gbc.setState(0x6ee2, 0x286a, 0x3df0, 0x4933, 0x99b, 0xaf0b, 0x0, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x286a, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0047
        gbc.setState(0xbcb9, 0x3da4, 0x7610, 0x3ced, 0x4a9e, 0xd208, 0x1, 0x0);
        gbc.writeMem(0xbcb9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb9));
        EXPECT(0x18, gbc.readMem(0xbcba));
        // CB 18 0048
        gbc.setState(0xa1ec, 0x7620, 0x1c50, 0x94fe, 0xfa51, 0xcdc3, 0x1, 0x1);
        gbc.writeMem(0xa1ec, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ec));
        EXPECT(0x18, gbc.readMem(0xa1ed));
        // CB 18 0049
        gbc.setState(0x4fc6, 0x4050, 0xcd90, 0x331b, 0x7e89, 0x7fe3, 0x1, 0x0);
        gbc.writeMem(0x4fc6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 004A
        gbc.setState(0xcff7, 0xdefe, 0x3f0, 0xaaf0, 0x8ccd, 0x8ef3, 0x1, 0x1);
        gbc.writeMem(0xcff7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0xcff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff7));
        EXPECT(0x18, gbc.readMem(0xcff8));
        // CB 18 004B
        gbc.setState(0xdf16, 0x63a, 0xe7c0, 0x71a9, 0x3843, 0xbc30, 0x0, 0x0);
        gbc.writeMem(0xdf16, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf16));
        EXPECT(0x18, gbc.readMem(0xdf17));
        // CB 18 004C
        gbc.setState(0x29cf, 0xe5f7, 0xaf90, 0xde13, 0xe268, 0x2dd1, 0x0, 0x1);
        gbc.writeMem(0x29cf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 004D
        gbc.setState(0x3fdd, 0xa3e5, 0x1eb0, 0x2671, 0x9281, 0xa492, 0x1, 0x1);
        gbc.writeMem(0x3fdd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 004E
        gbc.setState(0x29e8, 0x9908, 0xd980, 0xb37c, 0xc87d, 0x6546, 0x1, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 004F
        gbc.setState(0x2b0a, 0xe426, 0x12c0, 0x914e, 0x1ead, 0x10e, 0x1, 0x0);
        gbc.writeMem(0x2b0a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe426, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0050
        gbc.setState(0xbf9e, 0xe07e, 0x85a0, 0xc9ba, 0xc169, 0xbca0, 0x1, 0x0);
        gbc.writeMem(0xbf9e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0xbfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9e));
        EXPECT(0x18, gbc.readMem(0xbf9f));
        // CB 18 0051
        gbc.setState(0x2405, 0xbdfd, 0x67f0, 0xe778, 0x14bb, 0x6956, 0x0, 0x0);
        gbc.writeMem(0x2405, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0x2407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0052
        gbc.setState(0xbd55, 0xec88, 0x9550, 0x6c7f, 0x11be, 0xfb5e, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xec88, gbc.sp());
        EXPECT(0xbd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd55));
        EXPECT(0x18, gbc.readMem(0xbd56));
        // CB 18 0053
        gbc.setState(0xb8fc, 0x361a, 0xec30, 0x76c4, 0x8d72, 0x3e16, 0x0, 0x0);
        gbc.writeMem(0xb8fc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x361a, gbc.sp());
        EXPECT(0xb8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fc));
        EXPECT(0x18, gbc.readMem(0xb8fd));
        // CB 18 0054
        gbc.setState(0x547f, 0x8f0d, 0x6b60, 0xb466, 0x231a, 0xe842, 0x1, 0x1);
        gbc.writeMem(0x547f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8f0d, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0055
        gbc.setState(0xcfc2, 0xff65, 0x420, 0xf27a, 0xdb04, 0x81fd, 0x0, 0x0);
        gbc.writeMem(0xcfc2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xcfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc2));
        EXPECT(0x18, gbc.readMem(0xcfc3));
        // CB 18 0056
        gbc.setState(0xcc46, 0xfa8b, 0xa730, 0x8e5c, 0xc7c3, 0xd4d8, 0x1, 0x1);
        gbc.writeMem(0xcc46, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc46));
        EXPECT(0x18, gbc.readMem(0xcc47));
        // CB 18 0057
        gbc.setState(0x58f6, 0xe2ee, 0x39f0, 0x4d25, 0xa331, 0xf8b, 0x0, 0x0);
        gbc.writeMem(0x58f6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2ee, gbc.sp());
        EXPECT(0x58f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0058
        gbc.setState(0x2747, 0x16b5, 0x9a80, 0x77b2, 0xd7ba, 0x7ac, 0x0, 0x1);
        gbc.writeMem(0x2747, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x16b5, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0059
        gbc.setState(0xc125, 0x6557, 0xe620, 0xa0be, 0xd74b, 0xad82, 0x1, 0x0);
        gbc.writeMem(0xc125, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc125));
        EXPECT(0x18, gbc.readMem(0xc126));
        // CB 18 005A
        gbc.setState(0xbf8f, 0x9c3f, 0x92e0, 0x7b49, 0x57b6, 0xb19b, 0x0, 0x0);
        gbc.writeMem(0xbf8f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8f));
        EXPECT(0x18, gbc.readMem(0xbf90));
        // CB 18 005B
        gbc.setState(0x2ea0, 0x9f04, 0x5ef0, 0x4b01, 0x93ae, 0xc063, 0x1, 0x1);
        gbc.writeMem(0x2ea0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9f04, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 005D
        gbc.setState(0x2be5, 0xebef, 0x3e40, 0x4f94, 0xd74f, 0x2a1e, 0x1, 0x0);
        gbc.writeMem(0x2be5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 005E
        gbc.setState(0x9f3b, 0x4598, 0xfc30, 0xf5b1, 0xf45a, 0x81ff, 0x1, 0x1);
        gbc.writeMem(0x9f3b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4598, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3b));
        EXPECT(0x18, gbc.readMem(0x9f3c));
        // CB 18 005F
        gbc.setState(0xdada, 0xb7d1, 0xaaa0, 0xa73d, 0x8dad, 0x9382, 0x0, 0x0);
        gbc.writeMem(0xdada, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb7d1, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdada));
        EXPECT(0x18, gbc.readMem(0xdadb));
        // CB 18 0060
        gbc.setState(0xe429, 0xd9a1, 0x2010, 0xba74, 0x4e62, 0x14a, 0x1, 0x0);
        gbc.writeMem(0xe429, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd9a1, gbc.sp());
        EXPECT(0xe42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe429));
        EXPECT(0x18, gbc.readMem(0xe42a));
        // CB 18 0062
        gbc.setState(0xaa1, 0x223d, 0xfa80, 0x4840, 0xb43, 0x8391, 0x1, 0x1);
        gbc.writeMem(0xaa1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x223d, gbc.sp());
        EXPECT(0xaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0063
        gbc.setState(0x2a7b, 0xce6c, 0x5780, 0x156e, 0x3d9e, 0xbda, 0x0, 0x1);
        gbc.writeMem(0x2a7b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce6c, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0065
        gbc.setState(0xe41a, 0xaffe, 0x5df0, 0xdfae, 0x19bb, 0xd973, 0x0, 0x0);
        gbc.writeMem(0xe41a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0xe41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41a));
        EXPECT(0x18, gbc.readMem(0xe41b));
        // CB 18 0066
        gbc.setState(0x1f35, 0xf2a0, 0x7020, 0x9e98, 0xa1d4, 0x328c, 0x1, 0x1);
        gbc.writeMem(0x1f35, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf2a0, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0068
        gbc.setState(0x64f6, 0x3058, 0xe560, 0xa7fb, 0xf9df, 0x66a6, 0x0, 0x1);
        gbc.writeMem(0x64f6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0069
        gbc.setState(0xefac, 0x8d59, 0xc830, 0xb069, 0x8a9b, 0x38be, 0x1, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8d59, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefac));
        EXPECT(0x18, gbc.readMem(0xefad));
        // CB 18 006A
        gbc.setState(0x1257, 0x73ed, 0x86b0, 0x957f, 0x896, 0x54e7, 0x1, 0x1);
        gbc.writeMem(0x1257, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 006C
        gbc.setState(0x2859, 0xfae2, 0x5a60, 0x4c9f, 0x301e, 0x9e73, 0x0, 0x0);
        gbc.writeMem(0x2859, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0x285b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 006D
        gbc.setState(0x563c, 0xf811, 0x7b30, 0x44ff, 0x3d6c, 0x51a0, 0x0, 0x1);
        gbc.writeMem(0x563c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x563e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 006E
        gbc.setState(0xb0fc, 0x3e6c, 0x1620, 0x25b2, 0x2839, 0xbfc7, 0x1, 0x0);
        gbc.writeMem(0xb0fc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e6c, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fc));
        EXPECT(0x18, gbc.readMem(0xb0fd));
        // CB 18 006F
        gbc.setState(0xbbeb, 0x1705, 0xba90, 0xa53b, 0xc47c, 0x1561, 0x0, 0x0);
        gbc.writeMem(0xbbeb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbeb));
        EXPECT(0x18, gbc.readMem(0xbbec));
        // CB 18 0070
        gbc.setState(0x9e2e, 0xc4dd, 0x7b70, 0x80b7, 0x8193, 0x9690, 0x0, 0x1);
        gbc.writeMem(0x9e2e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc4dd, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2e));
        EXPECT(0x18, gbc.readMem(0x9e2f));
        // CB 18 0071
        gbc.setState(0xd09f, 0xba8, 0x5e10, 0xd13e, 0xf045, 0x3f0b, 0x0, 0x1);
        gbc.writeMem(0xd09f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xba8, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09f));
        EXPECT(0x18, gbc.readMem(0xd0a0));
        // CB 18 0072
        gbc.setState(0x4422, 0xaa67, 0x7ef0, 0xb4ec, 0x5748, 0xe147, 0x1, 0x1);
        gbc.writeMem(0x4422, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaa67, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0073
        gbc.setState(0x84e8, 0xb028, 0xbd60, 0x4740, 0x528b, 0xd1ac, 0x1, 0x1);
        gbc.writeMem(0x84e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb028, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e8));
        EXPECT(0x18, gbc.readMem(0x84e9));
        // CB 18 0074
        gbc.setState(0xbb72, 0x2965, 0x4c40, 0x2615, 0xc71a, 0x1d96, 0x1, 0x0);
        gbc.writeMem(0xbb72, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0xbb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb72));
        EXPECT(0x18, gbc.readMem(0xbb73));
        // CB 18 0076
        gbc.setState(0x8301, 0xc64b, 0xe60, 0x7ffd, 0xcfcb, 0x45, 0x0, 0x0);
        gbc.writeMem(0x8301, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc64b, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8301));
        EXPECT(0x18, gbc.readMem(0x8302));
        // CB 18 0077
        gbc.setState(0x3cd, 0xf0e9, 0x3ed0, 0xa00a, 0x675c, 0x58ec, 0x0, 0x1);
        gbc.writeMem(0x3cd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0079
        gbc.setState(0x4341, 0x64d9, 0x2a20, 0x7fd6, 0xb1c6, 0xae7b, 0x1, 0x0);
        gbc.writeMem(0x4341, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 007A
        gbc.setState(0x27dd, 0xbc17, 0x8190, 0x8048, 0xf923, 0xbb4e, 0x0, 0x1);
        gbc.writeMem(0x27dd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 007B
        gbc.setState(0xab5c, 0x2de8, 0x1a30, 0xc0e5, 0x3a4e, 0x9a7e, 0x0, 0x1);
        gbc.writeMem(0xab5c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0xab5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5c));
        EXPECT(0x18, gbc.readMem(0xab5d));
        // CB 18 007C
        gbc.setState(0x5fdd, 0xeb1e, 0xfa10, 0x2c26, 0x233f, 0x6f32, 0x0, 0x1);
        gbc.writeMem(0x5fdd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeb1e, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 007D
        gbc.setState(0xb089, 0xe4fd, 0xf120, 0x52aa, 0x5aa9, 0x994c, 0x0, 0x0);
        gbc.writeMem(0xb089, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe4fd, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb089));
        EXPECT(0x18, gbc.readMem(0xb08a));
        // CB 18 007E
        gbc.setState(0x3b49, 0x1d59, 0x41d0, 0x76cb, 0xee00, 0xfd2a, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1d59, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 007F
        gbc.setState(0x1e6e, 0x9d9c, 0x8630, 0x7570, 0x6c94, 0xdcb5, 0x0, 0x0);
        gbc.writeMem(0x1e6e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9d9c, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0081
        gbc.setState(0xc802, 0xe66a, 0x8b80, 0xa602, 0x7718, 0xcfe2, 0x1, 0x1);
        gbc.writeMem(0xc802, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0xc804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc802));
        EXPECT(0x18, gbc.readMem(0xc803));
        // CB 18 0082
        gbc.setState(0x9db2, 0xbb6e, 0x95d0, 0xaf67, 0xeb4c, 0xae91, 0x1, 0x1);
        gbc.writeMem(0x9db2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0x9db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db2));
        EXPECT(0x18, gbc.readMem(0x9db3));
        // CB 18 0083
        gbc.setState(0xb07a, 0x736f, 0xcb80, 0x74b3, 0x865c, 0x59a4, 0x1, 0x0);
        gbc.writeMem(0xb07a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x736f, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07a));
        EXPECT(0x18, gbc.readMem(0xb07b));
        // CB 18 0084
        gbc.setState(0x436b, 0x39ea, 0xf710, 0x7617, 0xcaa0, 0xa232, 0x1, 0x1);
        gbc.writeMem(0x436b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x39ea, gbc.sp());
        EXPECT(0x436d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0085
        gbc.setState(0x8a76, 0x2214, 0x2320, 0x8525, 0x446a, 0xddf8, 0x0, 0x0);
        gbc.writeMem(0x8a76, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a76));
        EXPECT(0x18, gbc.readMem(0x8a77));
        // CB 18 0086
        gbc.setState(0x408, 0x209a, 0xa3f0, 0x1135, 0xecc2, 0x39b8, 0x0, 0x1);
        gbc.writeMem(0x408, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x209a, gbc.sp());
        EXPECT(0x40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0087
        gbc.setState(0x32c4, 0xef26, 0x5410, 0xc1c7, 0x6c5a, 0x4276, 0x1, 0x0);
        gbc.writeMem(0x32c4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0088
        gbc.setState(0xd7b9, 0x7ac3, 0x1d90, 0x1bbf, 0x14fa, 0x1a22, 0x0, 0x0);
        gbc.writeMem(0xd7b9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b9));
        EXPECT(0x18, gbc.readMem(0xd7ba));
        // CB 18 008A
        gbc.setState(0x88f8, 0x9dd3, 0x8de0, 0x3668, 0x7ad, 0x451f, 0x1, 0x1);
        gbc.writeMem(0x88f8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0x88fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f8));
        EXPECT(0x18, gbc.readMem(0x88f9));
        // CB 18 008B
        gbc.setState(0xb1b4, 0xa6dd, 0x5060, 0x8e6b, 0xac31, 0xec2a, 0x0, 0x1);
        gbc.writeMem(0xb1b4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0xb1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b4));
        EXPECT(0x18, gbc.readMem(0xb1b5));
        // CB 18 008C
        gbc.setState(0x7506, 0x8d43, 0x8aa0, 0xa330, 0x5ac, 0x3d60, 0x1, 0x1);
        gbc.writeMem(0x7506, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8d43, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 008D
        gbc.setState(0x1c91, 0x3176, 0x8890, 0x1e00, 0x7d4, 0x17a3, 0x1, 0x1);
        gbc.writeMem(0x1c91, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3176, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 008E
        gbc.setState(0xe7e8, 0x32e7, 0xb750, 0x7528, 0xef76, 0x98bf, 0x0, 0x0);
        gbc.writeMem(0xe7e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x32e7, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e8));
        EXPECT(0x18, gbc.readMem(0xe7e9));
        // CB 18 008F
        gbc.setState(0x8142, 0x2877, 0x3a50, 0xa4cb, 0xbc5, 0xecd0, 0x0, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x18, gbc.readMem(0x8143));
        // CB 18 0090
        gbc.setState(0x62c, 0x6217, 0xc930, 0x6994, 0xb7de, 0x381f, 0x0, 0x1);
        gbc.writeMem(0x62c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0x62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0091
        gbc.setState(0x57b1, 0x1a0d, 0x4190, 0x8322, 0x78e1, 0xb1d1, 0x1, 0x1);
        gbc.writeMem(0x57b1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1a0d, gbc.sp());
        EXPECT(0x57b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0093
        gbc.setState(0x1e8d, 0x2259, 0x6100, 0x4c48, 0xbd3f, 0xb943, 0x0, 0x1);
        gbc.writeMem(0x1e8d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2259, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0094
        gbc.setState(0x9d83, 0x8368, 0xeaa0, 0xb90a, 0x83b, 0xf766, 0x1, 0x1);
        gbc.writeMem(0x9d83, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8368, gbc.sp());
        EXPECT(0x9d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d83));
        EXPECT(0x18, gbc.readMem(0x9d84));
        // CB 18 0095
        gbc.setState(0xaaa3, 0xe4e8, 0x4760, 0x72fb, 0xc99d, 0x9da1, 0x1, 0x0);
        gbc.writeMem(0xaaa3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa3));
        EXPECT(0x18, gbc.readMem(0xaaa4));
        // CB 18 0096
        gbc.setState(0x6ffb, 0xe823, 0x6ab0, 0xbe07, 0x25f9, 0x7d45, 0x0, 0x1);
        gbc.writeMem(0x6ffb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe823, gbc.sp());
        EXPECT(0x6ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0097
        gbc.setState(0xde81, 0x7a43, 0x150, 0x8a5c, 0xda31, 0x3c5a, 0x0, 0x1);
        gbc.writeMem(0xde81, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde81));
        EXPECT(0x18, gbc.readMem(0xde82));
        // CB 18 0098
        gbc.setState(0x7f75, 0xf007, 0x9d40, 0xfa51, 0x4ec7, 0x8268, 0x1, 0x1);
        gbc.writeMem(0x7f75, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf007, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0099
        gbc.setState(0x3901, 0x2448, 0xdb20, 0x6ccc, 0xc719, 0x13a6, 0x0, 0x1);
        gbc.writeMem(0x3901, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 009A
        gbc.setState(0xc275, 0x9e4, 0xcaa0, 0xa5dd, 0x938d, 0xbacb, 0x0, 0x1);
        gbc.writeMem(0xc275, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9e4, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc275));
        EXPECT(0x18, gbc.readMem(0xc276));
        // CB 18 009B
        gbc.setState(0x2be5, 0xb02a, 0x6690, 0x7859, 0x45e9, 0x4b5c, 0x0, 0x0);
        gbc.writeMem(0x2be5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb02a, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 009C
        gbc.setState(0x3e8, 0x6586, 0x14e0, 0xf138, 0xd803, 0x126d, 0x1, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6586, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 009D
        gbc.setState(0x125d, 0x58a7, 0x8770, 0x4bd0, 0x780b, 0x2ffa, 0x0, 0x0);
        gbc.writeMem(0x125d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x58a7, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 009E
        gbc.setState(0xc992, 0xb62a, 0x3400, 0x92f9, 0x4d7f, 0xe553, 0x0, 0x1);
        gbc.writeMem(0xc992, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb62a, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc992));
        EXPECT(0x18, gbc.readMem(0xc993));
        // CB 18 00A0
        gbc.setState(0xdecc, 0xa9f1, 0x3e90, 0x307d, 0xc000, 0xa670, 0x1, 0x1);
        gbc.writeMem(0xdecc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa9f1, gbc.sp());
        EXPECT(0xdece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecc));
        EXPECT(0x18, gbc.readMem(0xdecd));
        // CB 18 00A1
        gbc.setState(0xd99b, 0xa4ed, 0xd610, 0x76e8, 0x6b83, 0x11ab, 0x0, 0x0);
        gbc.writeMem(0xd99b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa4ed, gbc.sp());
        EXPECT(0xd99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99b));
        EXPECT(0x18, gbc.readMem(0xd99c));
        // CB 18 00A2
        gbc.setState(0x4ce, 0x98a3, 0xb4a0, 0x4cc, 0xffc5, 0xa74a, 0x1, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00A3
        gbc.setState(0x26b0, 0xf7e5, 0x4080, 0xc84, 0x84ce, 0x6b62, 0x1, 0x0);
        gbc.writeMem(0x26b0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf7e5, gbc.sp());
        EXPECT(0x26b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00A5
        gbc.setState(0x5c5d, 0x94b9, 0xa320, 0x5bb3, 0xe50a, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x5c5d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x94b9, gbc.sp());
        EXPECT(0x5c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00A6
        gbc.setState(0xcf8d, 0x2a2e, 0x52f0, 0xbf09, 0xc19e, 0x1001, 0x0, 0x0);
        gbc.writeMem(0xcf8d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2a2e, gbc.sp());
        EXPECT(0xcf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8d));
        EXPECT(0x18, gbc.readMem(0xcf8e));
        // CB 18 00A7
        gbc.setState(0x3fa7, 0x7c97, 0xf8b0, 0x3e82, 0x6a4b, 0x298, 0x0, 0x1);
        gbc.writeMem(0x3fa7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00A8
        gbc.setState(0x2eb, 0xed8, 0xc920, 0xd64a, 0x67a, 0x106c, 0x1, 0x1);
        gbc.writeMem(0x2eb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0x2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00A9
        gbc.setState(0x469, 0x21fc, 0xe110, 0xfd1e, 0x345e, 0xfa57, 0x0, 0x1);
        gbc.writeMem(0x469, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00AA
        gbc.setState(0x3ffc, 0x1b90, 0x77c0, 0x353d, 0x42e9, 0x7e20, 0x1, 0x1);
        gbc.writeMem(0x3ffc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1b90, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00AB
        gbc.setState(0x7e40, 0x861b, 0x72f0, 0x8511, 0x9b29, 0xa44f, 0x1, 0x1);
        gbc.writeMem(0x7e40, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00AC
        gbc.setState(0x8bca, 0x8cc5, 0x26d0, 0x65a1, 0x23ff, 0x8289, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8cc5, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bca));
        EXPECT(0x18, gbc.readMem(0x8bcb));
        // CB 18 00AD
        gbc.setState(0xb029, 0x25e7, 0x92c0, 0x7009, 0x45dc, 0x403c, 0x1, 0x1);
        gbc.writeMem(0xb029, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0xb02b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb029));
        EXPECT(0x18, gbc.readMem(0xb02a));
        // CB 18 00AE
        gbc.setState(0x2e29, 0xa79c, 0x5360, 0x491b, 0x68b9, 0x496f, 0x0, 0x0);
        gbc.writeMem(0x2e29, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa79c, gbc.sp());
        EXPECT(0x2e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00AF
        gbc.setState(0x9ab6, 0xef73, 0x2650, 0x10f6, 0x299d, 0x88a6, 0x0, 0x1);
        gbc.writeMem(0x9ab6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xef73, gbc.sp());
        EXPECT(0x9ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab6));
        EXPECT(0x18, gbc.readMem(0x9ab7));
        // CB 18 00B0
        gbc.setState(0x60a9, 0x1132, 0xc440, 0x6226, 0xd753, 0x1e3b, 0x0, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1132, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00B1
        gbc.setState(0xa9c3, 0xb7ef, 0x55c0, 0x9bea, 0xf604, 0xed45, 0x1, 0x0);
        gbc.writeMem(0xa9c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c3));
        EXPECT(0x18, gbc.readMem(0xa9c4));
        // CB 18 00B2
        gbc.setState(0x260, 0xecf2, 0xfe90, 0x3211, 0xac44, 0xe51d, 0x1, 0x0);
        gbc.writeMem(0x260, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00B3
        gbc.setState(0xc320, 0xd67c, 0xd1f0, 0x5ec1, 0x9263, 0x3d13, 0x0, 0x0);
        gbc.writeMem(0xc320, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0xc322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc320));
        EXPECT(0x18, gbc.readMem(0xc321));
        // CB 18 00B5
        gbc.setState(0x9fb9, 0xdc17, 0x5b50, 0x22c0, 0xcebc, 0xc240, 0x1, 0x1);
        gbc.writeMem(0x9fb9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x9fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb9));
        EXPECT(0x18, gbc.readMem(0x9fba));
        // CB 18 00B6
        gbc.setState(0x967c, 0xfdac, 0x70e0, 0xf36d, 0x67f4, 0x6ccb, 0x0, 0x0);
        gbc.writeMem(0x967c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0x967e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967c));
        EXPECT(0x18, gbc.readMem(0x967d));
        // CB 18 00B7
        gbc.setState(0x5c1f, 0x1af3, 0x6780, 0xeb8a, 0xfc2f, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0x5c1f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0x5c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00B8
        gbc.setState(0xb119, 0xa602, 0xe610, 0x1b79, 0xd362, 0x217a, 0x1, 0x0);
        gbc.writeMem(0xb119, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb119));
        EXPECT(0x18, gbc.readMem(0xb11a));
        // CB 18 00B9
        gbc.setState(0x8467, 0x6d97, 0xa0, 0x3fe6, 0x2527, 0x2460, 0x1, 0x1);
        gbc.writeMem(0x8467, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6d97, gbc.sp());
        EXPECT(0x8469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8467));
        EXPECT(0x18, gbc.readMem(0x8468));
        // CB 18 00BA
        gbc.setState(0x8e63, 0xb839, 0x7870, 0x10d6, 0xd460, 0x14dd, 0x0, 0x0);
        gbc.writeMem(0x8e63, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e63));
        EXPECT(0x18, gbc.readMem(0x8e64));
        // CB 18 00BC
        gbc.setState(0xd912, 0x6289, 0xae20, 0x38e1, 0x5225, 0x2769, 0x0, 0x0);
        gbc.writeMem(0xd912, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd912));
        EXPECT(0x18, gbc.readMem(0xd913));
        // CB 18 00BD
        gbc.setState(0x994a, 0x6156, 0x7320, 0xc066, 0xc1ad, 0x2562, 0x1, 0x0);
        gbc.writeMem(0x994a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6156, gbc.sp());
        EXPECT(0x994c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994a));
        EXPECT(0x18, gbc.readMem(0x994b));
        // CB 18 00BE
        gbc.setState(0x4ab5, 0x6802, 0x1320, 0xa338, 0xeec, 0xd5c, 0x1, 0x0);
        gbc.writeMem(0x4ab5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6802, gbc.sp());
        EXPECT(0x4ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00BF
        gbc.setState(0x9690, 0xf02b, 0x6880, 0x403b, 0xa66b, 0x6381, 0x0, 0x0);
        gbc.writeMem(0x9690, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf02b, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9690));
        EXPECT(0x18, gbc.readMem(0x9691));
        // CB 18 00C0
        gbc.setState(0x1846, 0x513c, 0x4810, 0x3a74, 0x2b89, 0xbf7e, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x513c, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00C1
        gbc.setState(0xeb53, 0xf923, 0xc2c0, 0xc794, 0xeec, 0x59d2, 0x1, 0x1);
        gbc.writeMem(0xeb53, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0xeb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb53));
        EXPECT(0x18, gbc.readMem(0xeb54));
        // CB 18 00C2
        gbc.setState(0x7b48, 0x2bd2, 0xc080, 0xd279, 0x6e9e, 0xb517, 0x1, 0x0);
        gbc.writeMem(0x7b48, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2bd2, gbc.sp());
        EXPECT(0x7b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00C3
        gbc.setState(0x5bdf, 0xc26, 0x1320, 0x987, 0x475f, 0xd7c6, 0x0, 0x1);
        gbc.writeMem(0x5bdf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc26, gbc.sp());
        EXPECT(0x5be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00C4
        gbc.setState(0x7238, 0xf1e1, 0x4e30, 0x7b2d, 0xf5b5, 0xcba9, 0x0, 0x1);
        gbc.writeMem(0x7238, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf1e1, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00C5
        gbc.setState(0x43b7, 0x7bcc, 0xb230, 0x5d65, 0xa46, 0x9060, 0x1, 0x1);
        gbc.writeMem(0x43b7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7bcc, gbc.sp());
        EXPECT(0x43b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00C6
        gbc.setState(0xa93a, 0x1941, 0xb820, 0xdd0a, 0x11eb, 0xece2, 0x0, 0x0);
        gbc.writeMem(0xa93a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93a));
        EXPECT(0x18, gbc.readMem(0xa93b));
        // CB 18 00C7
        gbc.setState(0x44b7, 0x83a0, 0x37b0, 0xc24f, 0xae8d, 0x4bd8, 0x0, 0x1);
        gbc.writeMem(0x44b7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x83a0, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00C8
        gbc.setState(0xbbe0, 0x203e, 0xef0, 0x84f7, 0x8c20, 0x1dea, 0x1, 0x1);
        gbc.writeMem(0xbbe0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0xbbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe0));
        EXPECT(0x18, gbc.readMem(0xbbe1));
        // CB 18 00C9
        gbc.setState(0x2ab5, 0x24a7, 0x2010, 0xc76e, 0xea9b, 0x269f, 0x1, 0x1);
        gbc.writeMem(0x2ab5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00CA
        gbc.setState(0x3d18, 0x65a0, 0x50e0, 0x889e, 0xcfd7, 0x4e3e, 0x1, 0x1);
        gbc.writeMem(0x3d18, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x65a0, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00CB
        gbc.setState(0x9ec, 0x63d9, 0x290, 0xf6c3, 0x4f72, 0xe8d8, 0x0, 0x1);
        gbc.writeMem(0x9ec, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x63d9, gbc.sp());
        EXPECT(0x9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00CC
        gbc.setState(0x7fbe, 0x6993, 0x3b70, 0xf53, 0x9f08, 0x1ec2, 0x1, 0x1);
        gbc.writeMem(0x7fbe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6993, gbc.sp());
        EXPECT(0x7fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00CD
        gbc.setState(0x52ba, 0x607c, 0xf7d0, 0x399f, 0xdad8, 0x2076, 0x0, 0x1);
        gbc.writeMem(0x52ba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x607c, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00CE
        gbc.setState(0x70ba, 0x5cb, 0xe900, 0x34cd, 0x7cae, 0x9a38, 0x1, 0x0);
        gbc.writeMem(0x70ba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5cb, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00CF
        gbc.setState(0x850c, 0x5104, 0xdfb0, 0x8b0a, 0x2ebd, 0x1e81, 0x0, 0x1);
        gbc.writeMem(0x850c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5104, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0x18, gbc.readMem(0x850d));
        // CB 18 00D0
        gbc.setState(0xae58, 0x6fbb, 0x6dc0, 0x6ee, 0xe58b, 0x765d, 0x1, 0x0);
        gbc.writeMem(0xae58, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0xae5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae58));
        EXPECT(0x18, gbc.readMem(0xae59));
        // CB 18 00D1
        gbc.setState(0xc675, 0xced1, 0xefe0, 0x5b88, 0x5fed, 0xcdce, 0x1, 0x0);
        gbc.writeMem(0xc675, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xced1, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc675));
        EXPECT(0x18, gbc.readMem(0xc676));
        // CB 18 00D2
        gbc.setState(0x3d35, 0x385b, 0xb380, 0xad44, 0xd0e8, 0x73df, 0x1, 0x1);
        gbc.writeMem(0x3d35, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x385b, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00D3
        gbc.setState(0x5279, 0xc582, 0xe50, 0x51af, 0xe43e, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0x5279, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc582, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00D4
        gbc.setState(0x3daa, 0x208f, 0xe310, 0x481b, 0x95ee, 0xf5cc, 0x1, 0x0);
        gbc.writeMem(0x3daa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x208f, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00D5
        gbc.setState(0x9de9, 0xe615, 0xd130, 0xda5b, 0x338b, 0x81c5, 0x0, 0x0);
        gbc.writeMem(0x9de9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x9deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de9));
        EXPECT(0x18, gbc.readMem(0x9dea));
        // CB 18 00D6
        gbc.setState(0x8281, 0xe308, 0x3430, 0x55cc, 0x65bd, 0x1795, 0x0, 0x1);
        gbc.writeMem(0x8281, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe308, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0x18, gbc.readMem(0x8282));
        // CB 18 00D7
        gbc.setState(0xcead, 0x8145, 0x9d00, 0x82b3, 0x865a, 0xbbaf, 0x0, 0x1);
        gbc.writeMem(0xcead, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0xceaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcead));
        EXPECT(0x18, gbc.readMem(0xceae));
        // CB 18 00D8
        gbc.setState(0x79c5, 0xea89, 0x6580, 0x5610, 0x8f49, 0xd848, 0x0, 0x1);
        gbc.writeMem(0x79c5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00D9
        gbc.setState(0xbc65, 0xdc1f, 0xef60, 0x626a, 0xbfac, 0x21a3, 0x1, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdc1f, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc65));
        EXPECT(0x18, gbc.readMem(0xbc66));
        // CB 18 00DA
        gbc.setState(0x2a07, 0x8596, 0xe050, 0xbc28, 0x23b0, 0x255f, 0x0, 0x1);
        gbc.writeMem(0x2a07, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8596, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00DB
        gbc.setState(0x42c5, 0x2b4c, 0x1b60, 0x8a7b, 0x63a6, 0xc306, 0x1, 0x1);
        gbc.writeMem(0x42c5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2b4c, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00DC
        gbc.setState(0x3b0b, 0x601a, 0xca40, 0xfae7, 0x1015, 0x4f76, 0x1, 0x1);
        gbc.writeMem(0x3b0b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0x3b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00DD
        gbc.setState(0x60cb, 0x6f27, 0x3dd0, 0x2e60, 0x1b9e, 0xf94e, 0x0, 0x0);
        gbc.writeMem(0x60cb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00DE
        gbc.setState(0x7fb4, 0xeef3, 0x9340, 0x5d53, 0x9904, 0xc1bd, 0x0, 0x0);
        gbc.writeMem(0x7fb4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00DF
        gbc.setState(0x721c, 0xf9bb, 0xc9c0, 0x9cec, 0xf7fd, 0x42b9, 0x0, 0x1);
        gbc.writeMem(0x721c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf9bb, gbc.sp());
        EXPECT(0x721e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00E0
        gbc.setState(0x35c3, 0xf0d1, 0xcec0, 0xad4c, 0x6e4a, 0x856c, 0x0, 0x0);
        gbc.writeMem(0x35c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0x35c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00E1
        gbc.setState(0x4fb5, 0xe9d8, 0xc060, 0xf5fd, 0xb3e, 0x134b, 0x1, 0x1);
        gbc.writeMem(0x4fb5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x4fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00E2
        gbc.setState(0x6e1f, 0x6295, 0x3cb0, 0x91e1, 0x6c3a, 0x1392, 0x0, 0x0);
        gbc.writeMem(0x6e1f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6295, gbc.sp());
        EXPECT(0x6e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00E3
        gbc.setState(0xaef1, 0xe7b1, 0x19b0, 0xc893, 0x2be4, 0xa070, 0x0, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef1));
        EXPECT(0x18, gbc.readMem(0xaef2));
        // CB 18 00E4
        gbc.setState(0xb7f8, 0x1f6f, 0x2830, 0x5cc6, 0x7d3f, 0x545c, 0x1, 0x1);
        gbc.writeMem(0xb7f8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1f6f, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f8));
        EXPECT(0x18, gbc.readMem(0xb7f9));
        // CB 18 00E5
        gbc.setState(0x9d20, 0x3c89, 0x4640, 0x52d4, 0xf3e, 0xb530, 0x0, 0x1);
        gbc.writeMem(0x9d20, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0x9d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d20));
        EXPECT(0x18, gbc.readMem(0x9d21));
        // CB 18 00E6
        gbc.setState(0x31fa, 0xe0b5, 0x5e0, 0x86a1, 0x403e, 0x58d1, 0x1, 0x1);
        gbc.writeMem(0x31fa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00E7
        gbc.setState(0x8b7a, 0xa436, 0x4b50, 0x83b5, 0x2969, 0xe754, 0x1, 0x0);
        gbc.writeMem(0x8b7a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa436, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7a));
        EXPECT(0x18, gbc.readMem(0x8b7b));
        // CB 18 00E8
        gbc.setState(0x4695, 0x25bc, 0x4f30, 0xcbc6, 0x17f1, 0x9697, 0x0, 0x1);
        gbc.writeMem(0x4695, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x25bc, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00E9
        gbc.setState(0x110b, 0x55eb, 0x8c40, 0xc409, 0x4dc5, 0xccdb, 0x0, 0x1);
        gbc.writeMem(0x110b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00EB
        gbc.setState(0x3cf4, 0x8588, 0x6ba0, 0x352, 0x3e91, 0x930c, 0x0, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00EC
        gbc.setState(0x74a4, 0xd3c2, 0x6e80, 0xfe47, 0xd1cb, 0x5478, 0x0, 0x1);
        gbc.writeMem(0x74a4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00ED
        gbc.setState(0xc4ae, 0x344d, 0x4400, 0x25ac, 0x7c67, 0x327d, 0x0, 0x1);
        gbc.writeMem(0xc4ae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x344d, gbc.sp());
        EXPECT(0xc4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ae));
        EXPECT(0x18, gbc.readMem(0xc4af));
        // CB 18 00EE
        gbc.setState(0x2839, 0x97af, 0xfee0, 0xcfa7, 0x6e90, 0x9c16, 0x0, 0x0);
        gbc.writeMem(0x2839, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x97af, gbc.sp());
        EXPECT(0x283b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00EF
        gbc.setState(0x19d6, 0xc451, 0xcfe0, 0xce56, 0x8920, 0x94, 0x0, 0x0);
        gbc.writeMem(0x19d6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x19d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00F0
        gbc.setState(0x1cc7, 0x35f7, 0xed60, 0x5aa5, 0xee85, 0x9ecc, 0x0, 0x1);
        gbc.writeMem(0x1cc7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x35f7, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00F1
        gbc.setState(0x1c27, 0x7959, 0x61a0, 0x1bd, 0xf967, 0xb381, 0x0, 0x0);
        gbc.writeMem(0x1c27, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00F2
        gbc.setState(0xcfd4, 0x234b, 0xb510, 0xcdd7, 0x3ae1, 0x5bf7, 0x0, 0x0);
        gbc.writeMem(0xcfd4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0xcfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd4));
        EXPECT(0x18, gbc.readMem(0xcfd5));
        // CB 18 00F3
        gbc.setState(0xe23f, 0x97e, 0x3cc0, 0xacaa, 0x5af0, 0xd19e, 0x0, 0x1);
        gbc.writeMem(0xe23f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x97e, gbc.sp());
        EXPECT(0xe241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23f));
        EXPECT(0x18, gbc.readMem(0xe240));
        // CB 18 00F4
        gbc.setState(0x4f47, 0x7049, 0x110, 0x48d1, 0x393c, 0x8208, 0x1, 0x1);
        gbc.writeMem(0x4f47, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7049, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00F5
        gbc.setState(0x2296, 0x3123, 0xb800, 0x61ab, 0x64b, 0x4ca6, 0x1, 0x1);
        gbc.writeMem(0x2296, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3123, gbc.sp());
        EXPECT(0x2298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00F8
        gbc.setState(0x41a, 0x5e28, 0xae80, 0xd011, 0x5527, 0xcb18, 0x0, 0x1);
        gbc.writeMem(0x41a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00F9
        gbc.setState(0x7c90, 0x87a5, 0xb900, 0xf9e, 0x7359, 0xb12f, 0x0, 0x1);
        gbc.writeMem(0x7c90, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x87a5, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00FA
        gbc.setState(0x92d7, 0xb518, 0xf1e0, 0x18f3, 0x16c8, 0xbc40, 0x1, 0x0);
        gbc.writeMem(0x92d7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0x92d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d7));
        EXPECT(0x18, gbc.readMem(0x92d8));
        // CB 18 00FB
        gbc.setState(0x4b00, 0xe640, 0xe1b0, 0x482c, 0x1efc, 0xbe01, 0x0, 0x0);
        gbc.writeMem(0x4b00, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe640, gbc.sp());
        EXPECT(0x4b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 00FD
        gbc.setState(0x3a9b, 0x775a, 0x350, 0x4304, 0x900f, 0xb971, 0x0, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x3a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 00FE
        gbc.setState(0xbe09, 0x92e8, 0x6f20, 0x3fea, 0xbd84, 0xd71, 0x0, 0x0);
        gbc.writeMem(0xbe09, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x92e8, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe09));
        EXPECT(0x18, gbc.readMem(0xbe0a));
        // CB 18 00FF
        gbc.setState(0xab63, 0x56aa, 0x8a70, 0xa335, 0xe3dc, 0xf268, 0x1, 0x1);
        gbc.writeMem(0xab63, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x56aa, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab63));
        EXPECT(0x18, gbc.readMem(0xab64));
        // CB 18 0100
        gbc.setState(0xc486, 0x6fe9, 0xc040, 0x4063, 0xdc9c, 0xe25c, 0x0, 0x1);
        gbc.writeMem(0xc486, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0xc488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc486));
        EXPECT(0x18, gbc.readMem(0xc487));
        // CB 18 0101
        gbc.setState(0x116c, 0xac9a, 0x5a80, 0x9b64, 0x8d7a, 0x660b, 0x0, 0x1);
        gbc.writeMem(0x116c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xac9a, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0102
        gbc.setState(0x2685, 0xd015, 0x5320, 0xbc07, 0xd8fe, 0x5719, 0x0, 0x0);
        gbc.writeMem(0x2685, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x2687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0103
        gbc.setState(0x2600, 0xdd90, 0xaa10, 0x6203, 0x8b80, 0x5ae0, 0x1, 0x0);
        gbc.writeMem(0x2600, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0104
        gbc.setState(0xc05b, 0x7c91, 0x6700, 0x32e5, 0xef5b, 0x48c5, 0x0, 0x1);
        gbc.writeMem(0xc05b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05b));
        EXPECT(0x18, gbc.readMem(0xc05c));
        // CB 18 0105
        gbc.setState(0x1efc, 0x3bed, 0x8d70, 0x8f88, 0x11f, 0xf016, 0x1, 0x0);
        gbc.writeMem(0x1efc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0x1efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0106
        gbc.setState(0x9e43, 0xc38b, 0x2e0, 0x5e4, 0xc367, 0x1ab3, 0x0, 0x1);
        gbc.writeMem(0x9e43, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc38b, gbc.sp());
        EXPECT(0x9e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e43));
        EXPECT(0x18, gbc.readMem(0x9e44));
        // CB 18 0107
        gbc.setState(0xc446, 0x359e, 0x5dd0, 0xdb79, 0xaaa6, 0xab18, 0x1, 0x0);
        gbc.writeMem(0xc446, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x359e, gbc.sp());
        EXPECT(0xc448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc446));
        EXPECT(0x18, gbc.readMem(0xc447));
        // CB 18 0108
        gbc.setState(0xb65b, 0x138, 0x3e00, 0x8832, 0x29be, 0x6e66, 0x0, 0x0);
        gbc.writeMem(0xb65b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x138, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65b));
        EXPECT(0x18, gbc.readMem(0xb65c));
        // CB 18 0109
        gbc.setState(0x7043, 0xc19f, 0x5050, 0x29d7, 0x3f1b, 0x8567, 0x0, 0x1);
        gbc.writeMem(0x7043, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc19f, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 010B
        gbc.setState(0xa3a2, 0xaf9e, 0x5220, 0xd2bd, 0x954e, 0xeeb6, 0x0, 0x1);
        gbc.writeMem(0xa3a2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf9e, gbc.sp());
        EXPECT(0xa3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a2));
        EXPECT(0x18, gbc.readMem(0xa3a3));
        // CB 18 010C
        gbc.setState(0xccf4, 0x2eb, 0x3120, 0x3da1, 0x738e, 0xb42c, 0x1, 0x1);
        gbc.writeMem(0xccf4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2eb, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf4));
        EXPECT(0x18, gbc.readMem(0xccf5));
        // CB 18 010D
        gbc.setState(0xb6ed, 0x903a, 0x23d0, 0xd748, 0xd622, 0x6cff, 0x0, 0x1);
        gbc.writeMem(0xb6ed, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x903a, gbc.sp());
        EXPECT(0xb6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ed));
        EXPECT(0x18, gbc.readMem(0xb6ee));
        // CB 18 010E
        gbc.setState(0x8785, 0x1761, 0x6310, 0xb26b, 0x17ab, 0x6b48, 0x0, 0x0);
        gbc.writeMem(0x8785, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0x8787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8785));
        EXPECT(0x18, gbc.readMem(0x8786));
        // CB 18 010F
        gbc.setState(0x2b51, 0x1b96, 0x4490, 0xaef4, 0x963e, 0xce39, 0x1, 0x1);
        gbc.writeMem(0x2b51, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1b96, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0110
        gbc.setState(0x4ffe, 0xed41, 0x7650, 0xe05a, 0x70c9, 0xc5d2, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0111
        gbc.setState(0x3a07, 0x3b9f, 0x3ae0, 0x9d6d, 0x3f9, 0x9066, 0x1, 0x1);
        gbc.writeMem(0x3a07, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3b9f, gbc.sp());
        EXPECT(0x3a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0112
        gbc.setState(0x6886, 0x751e, 0x6f80, 0x486f, 0x3c7e, 0x1ece, 0x1, 0x0);
        gbc.writeMem(0x6886, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x6888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0113
        gbc.setState(0x4606, 0x5d82, 0x5560, 0x9282, 0x637d, 0xcb58, 0x0, 0x1);
        gbc.writeMem(0x4606, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0114
        gbc.setState(0xc49c, 0xdea5, 0x2110, 0xdde0, 0xfbbf, 0xa2db, 0x1, 0x0);
        gbc.writeMem(0xc49c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdea5, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49c));
        EXPECT(0x18, gbc.readMem(0xc49d));
        // CB 18 0115
        gbc.setState(0x23ac, 0x1418, 0xf080, 0x9ab4, 0x4e50, 0xfa90, 0x1, 0x1);
        gbc.writeMem(0x23ac, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1418, gbc.sp());
        EXPECT(0x23ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0116
        gbc.setState(0x2f3d, 0x2fe8, 0x2cf0, 0xa541, 0x66e1, 0xfb7a, 0x0, 0x0);
        gbc.writeMem(0x2f3d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0117
        gbc.setState(0x9da7, 0x8abb, 0x9fe0, 0x29f1, 0x3e16, 0x416a, 0x0, 0x0);
        gbc.writeMem(0x9da7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x9da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da7));
        EXPECT(0x18, gbc.readMem(0x9da8));
        // CB 18 0118
        gbc.setState(0xc324, 0x5270, 0xaf30, 0x950a, 0x8077, 0x5a1, 0x0, 0x1);
        gbc.writeMem(0xc324, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5270, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc324));
        EXPECT(0x18, gbc.readMem(0xc325));
        // CB 18 0119
        gbc.setState(0xfca, 0x485b, 0x27d0, 0xd78e, 0x1651, 0x9723, 0x0, 0x0);
        gbc.writeMem(0xfca, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x485b, gbc.sp());
        EXPECT(0xfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 011A
        gbc.setState(0x6f70, 0x484b, 0x50b0, 0xba97, 0x376, 0xae3c, 0x1, 0x1);
        gbc.writeMem(0x6f70, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 011B
        gbc.setState(0x893, 0x28b3, 0x2d40, 0xdecb, 0xa85a, 0x3531, 0x1, 0x1);
        gbc.writeMem(0x893, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x28b3, gbc.sp());
        EXPECT(0x895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 011C
        gbc.setState(0x8fd6, 0x8cd8, 0xf780, 0xafd4, 0x5641, 0xfbe3, 0x0, 0x1);
        gbc.writeMem(0x8fd6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8cd8, gbc.sp());
        EXPECT(0x8fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd6));
        EXPECT(0x18, gbc.readMem(0x8fd7));
        // CB 18 011D
        gbc.setState(0xc346, 0xddbc, 0xbbb0, 0x458c, 0xf9e7, 0x60b7, 0x0, 0x0);
        gbc.writeMem(0xc346, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xddbc, gbc.sp());
        EXPECT(0xc348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc346));
        EXPECT(0x18, gbc.readMem(0xc347));
        // CB 18 011E
        gbc.setState(0x643c, 0x9c47, 0x2c00, 0x6809, 0xa720, 0xbecb, 0x1, 0x0);
        gbc.writeMem(0x643c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9c47, gbc.sp());
        EXPECT(0x643e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 011F
        gbc.setState(0x39b5, 0xe2e2, 0x6070, 0x5c45, 0x623e, 0x8081, 0x0, 0x1);
        gbc.writeMem(0x39b5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0x39b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0120
        gbc.setState(0x405d, 0x8797, 0x2d30, 0x3806, 0x10b, 0xb7df, 0x0, 0x1);
        gbc.writeMem(0x405d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0121
        gbc.setState(0xb56d, 0x7c3e, 0x9b10, 0x21a6, 0xc0bd, 0xf3a, 0x1, 0x1);
        gbc.writeMem(0xb56d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7c3e, gbc.sp());
        EXPECT(0xb56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56d));
        EXPECT(0x18, gbc.readMem(0xb56e));
        // CB 18 0122
        gbc.setState(0x4f30, 0xb240, 0x2dd0, 0x18bf, 0xcb83, 0x8da4, 0x1, 0x1);
        gbc.writeMem(0x4f30, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0x4f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0123
        gbc.setState(0x3d6e, 0xf9a7, 0xc9a0, 0xf355, 0xfb26, 0xbdf2, 0x0, 0x1);
        gbc.writeMem(0x3d6e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x3d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0124
        gbc.setState(0x54f9, 0x795d, 0x5490, 0x49f0, 0xac6d, 0x6ffc, 0x0, 0x1);
        gbc.writeMem(0x54f9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0x54fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0125
        gbc.setState(0x3508, 0xfab4, 0x6260, 0x6b63, 0x7257, 0x4a32, 0x1, 0x1);
        gbc.writeMem(0x3508, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0126
        gbc.setState(0xad83, 0xb558, 0x7c60, 0xdabf, 0x6469, 0x7e, 0x0, 0x0);
        gbc.writeMem(0xad83, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb558, gbc.sp());
        EXPECT(0xad85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad83));
        EXPECT(0x18, gbc.readMem(0xad84));
        // CB 18 0127
        gbc.setState(0x6a6, 0x8584, 0x5d10, 0x8398, 0xb99c, 0xb891, 0x0, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8584, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0128
        gbc.setState(0xdeb6, 0x7744, 0x19c0, 0xc0b1, 0x7425, 0x7466, 0x0, 0x0);
        gbc.writeMem(0xdeb6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb6));
        EXPECT(0x18, gbc.readMem(0xdeb7));
        // CB 18 0129
        gbc.setState(0x8c57, 0x4ad6, 0x8a60, 0x8db6, 0xfd1e, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0x8c57, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0x18, gbc.readMem(0x8c58));
        // CB 18 012A
        gbc.setState(0xbcfd, 0xb798, 0x5c0, 0x8811, 0xdd30, 0xfe85, 0x1, 0x1);
        gbc.writeMem(0xbcfd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xbcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcfd));
        EXPECT(0x18, gbc.readMem(0xbcfe));
        // CB 18 012B
        gbc.setState(0x1d07, 0xfa32, 0x30a0, 0x3ba8, 0x2e91, 0xf18f, 0x0, 0x1);
        gbc.writeMem(0x1d07, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x1d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 012C
        gbc.setState(0x548c, 0xe412, 0x5300, 0xd4c5, 0x2430, 0xd8fa, 0x0, 0x0);
        gbc.writeMem(0x548c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe412, gbc.sp());
        EXPECT(0x548e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 012D
        gbc.setState(0x139, 0x134c, 0x69e0, 0xec73, 0x278b, 0xc53f, 0x1, 0x0);
        gbc.writeMem(0x139, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x134c, gbc.sp());
        EXPECT(0x13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 012E
        gbc.setState(0xec3e, 0x6d55, 0xc810, 0xcdb6, 0x9f2f, 0xb977, 0x0, 0x0);
        gbc.writeMem(0xec3e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3e));
        EXPECT(0x18, gbc.readMem(0xec3f));
        // CB 18 0130
        gbc.setState(0xc98b, 0x78a5, 0x6720, 0x28f8, 0x3900, 0x5a50, 0x0, 0x1);
        gbc.writeMem(0xc98b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0xc98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98b));
        EXPECT(0x18, gbc.readMem(0xc98c));
        // CB 18 0131
        gbc.setState(0x87db, 0x3ad2, 0x9900, 0xe902, 0x2f9a, 0xb74b, 0x1, 0x0);
        gbc.writeMem(0x87db, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ad2, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87db));
        EXPECT(0x18, gbc.readMem(0x87dc));
        // CB 18 0132
        gbc.setState(0xeb62, 0x179c, 0xadf0, 0x3dc8, 0xffca, 0x3ecd, 0x1, 0x1);
        gbc.writeMem(0xeb62, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x179c, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0x18, gbc.readMem(0xeb63));
        // CB 18 0133
        gbc.setState(0x501d, 0x73a3, 0xae10, 0x6081, 0x68bf, 0xefb3, 0x1, 0x1);
        gbc.writeMem(0x501d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x73a3, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0134
        gbc.setState(0xa94, 0xcf00, 0xd6b0, 0xec9a, 0xa2b, 0xf6db, 0x1, 0x0);
        gbc.writeMem(0xa94, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0xa96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0135
        gbc.setState(0x5c83, 0x882f, 0xc140, 0x1fe0, 0x2b18, 0x43c5, 0x1, 0x0);
        gbc.writeMem(0x5c83, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0x5c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0136
        gbc.setState(0x663b, 0x3e3f, 0xe200, 0xca6e, 0x6bb3, 0x68a7, 0x0, 0x1);
        gbc.writeMem(0x663b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3e3f, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0137
        gbc.setState(0xb0c7, 0x4193, 0x1280, 0x4ac3, 0xda2f, 0x3228, 0x1, 0x1);
        gbc.writeMem(0xb0c7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0xb0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c7));
        EXPECT(0x18, gbc.readMem(0xb0c8));
        // CB 18 0138
        gbc.setState(0x3f09, 0xba33, 0x3e50, 0x84dd, 0xcc2e, 0x200a, 0x0, 0x0);
        gbc.writeMem(0x3f09, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x3f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0139
        gbc.setState(0xd46a, 0xaadb, 0xe290, 0x1be4, 0x3cfc, 0xc776, 0x1, 0x1);
        gbc.writeMem(0xd46a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0x18, gbc.readMem(0xd46b));
        // CB 18 013A
        gbc.setState(0xc7a7, 0xb041, 0xb350, 0x298b, 0xe4c5, 0x9756, 0x1, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x18, gbc.readMem(0xc7a8));
        // CB 18 013B
        gbc.setState(0xc57b, 0x8264, 0x51b0, 0x837b, 0x650, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8264, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0x18, gbc.readMem(0xc57c));
        // CB 18 013C
        gbc.setState(0x89ff, 0x5801, 0x4740, 0xfa7, 0xb5cc, 0x3c8a, 0x0, 0x1);
        gbc.writeMem(0x89ff, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5801, gbc.sp());
        EXPECT(0x8a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ff));
        EXPECT(0x18, gbc.readMem(0x8a00));
        // CB 18 013E
        gbc.setState(0x9907, 0xc335, 0x8550, 0xd34f, 0xf14c, 0xdd77, 0x1, 0x1);
        gbc.writeMem(0x9907, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc335, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9907));
        EXPECT(0x18, gbc.readMem(0x9908));
        // CB 18 013F
        gbc.setState(0x1b0, 0x7ad8, 0x2b10, 0xaba, 0x3e4d, 0xb0a6, 0x1, 0x1);
        gbc.writeMem(0x1b0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7ad8, gbc.sp());
        EXPECT(0x1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0140
        gbc.setState(0x5496, 0x2d5a, 0x9a60, 0xb6d5, 0x5bc4, 0x97, 0x1, 0x1);
        gbc.writeMem(0x5496, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0141
        gbc.setState(0x1b50, 0x19ef, 0x9900, 0xdae9, 0xf32e, 0xf9d7, 0x0, 0x0);
        gbc.writeMem(0x1b50, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x19ef, gbc.sp());
        EXPECT(0x1b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0142
        gbc.setState(0xe8c8, 0xe8d1, 0x2ea0, 0x9233, 0x512d, 0x8067, 0x0, 0x1);
        gbc.writeMem(0xe8c8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe8d1, gbc.sp());
        EXPECT(0xe8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c8));
        EXPECT(0x18, gbc.readMem(0xe8c9));
        // CB 18 0143
        gbc.setState(0x2a32, 0xe624, 0x4710, 0x7f16, 0xb59b, 0xb40c, 0x1, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0144
        gbc.setState(0x3262, 0xd3b3, 0x9ca0, 0x7d20, 0x6151, 0xb146, 0x0, 0x1);
        gbc.writeMem(0x3262, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0145
        gbc.setState(0x8824, 0x595c, 0xd840, 0x9d49, 0xc54c, 0x130, 0x1, 0x0);
        gbc.writeMem(0x8824, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0x18, gbc.readMem(0x8825));
        // CB 18 0146
        gbc.setState(0x9ced, 0x4dbd, 0x7cb0, 0x6b52, 0xc341, 0x73d2, 0x1, 0x0);
        gbc.writeMem(0x9ced, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4dbd, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ced));
        EXPECT(0x18, gbc.readMem(0x9cee));
        // CB 18 0147
        gbc.setState(0x2858, 0x2317, 0xfdb0, 0xaaa5, 0x73ac, 0x6e2b, 0x0, 0x0);
        gbc.writeMem(0x2858, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0148
        gbc.setState(0xb6a, 0x4797, 0x5d70, 0x81e0, 0x4f71, 0xbd12, 0x0, 0x1);
        gbc.writeMem(0xb6a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4797, gbc.sp());
        EXPECT(0xb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0149
        gbc.setState(0xbd8b, 0x37ed, 0x12c0, 0x1942, 0x9d77, 0x2012, 0x1, 0x0);
        gbc.writeMem(0xbd8b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x37ed, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8b));
        EXPECT(0x18, gbc.readMem(0xbd8c));
        // CB 18 014A
        gbc.setState(0xee9c, 0x6b38, 0xca20, 0xd7da, 0xa294, 0x235, 0x0, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6b38, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9c));
        EXPECT(0x18, gbc.readMem(0xee9d));
        // CB 18 014B
        gbc.setState(0x53d8, 0xbcee, 0x6a20, 0xbf0, 0xc15c, 0xe9ed, 0x1, 0x1);
        gbc.writeMem(0x53d8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbcee, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 014C
        gbc.setState(0xafaa, 0xb6b8, 0x9ce0, 0xa0bd, 0x6a14, 0x7ca0, 0x1, 0x1);
        gbc.writeMem(0xafaa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafaa));
        EXPECT(0x18, gbc.readMem(0xafab));
        // CB 18 014D
        gbc.setState(0x8165, 0x5d0d, 0xc6d0, 0xacbe, 0x7db4, 0x566f, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5d0d, gbc.sp());
        EXPECT(0x8167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8165));
        EXPECT(0x18, gbc.readMem(0x8166));
        // CB 18 014F
        gbc.setState(0x8dfc, 0xd46c, 0xcd80, 0xf22a, 0x5f34, 0x6727, 0x1, 0x1);
        gbc.writeMem(0x8dfc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd46c, gbc.sp());
        EXPECT(0x8dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfc));
        EXPECT(0x18, gbc.readMem(0x8dfd));
        // CB 18 0150
        gbc.setState(0x3515, 0xf923, 0xb480, 0xfed6, 0x618f, 0x5a4, 0x0, 0x1);
        gbc.writeMem(0x3515, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0151
        gbc.setState(0xefa9, 0x37f2, 0x2c90, 0xb14c, 0x58d1, 0x11a9, 0x0, 0x1);
        gbc.writeMem(0xefa9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0xefab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa9));
        EXPECT(0x18, gbc.readMem(0xefaa));
        // CB 18 0152
        gbc.setState(0x5b59, 0xbe8e, 0xa270, 0x56cf, 0x90e5, 0x7b4e, 0x1, 0x1);
        gbc.writeMem(0x5b59, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbe8e, gbc.sp());
        EXPECT(0x5b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0153
        gbc.setState(0x9446, 0x88e1, 0x6ae0, 0x2b32, 0x22e1, 0x978a, 0x1, 0x0);
        gbc.writeMem(0x9446, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x88e1, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9446));
        EXPECT(0x18, gbc.readMem(0x9447));
        // CB 18 0154
        gbc.setState(0x7bf9, 0xe618, 0x8ab0, 0xc028, 0x8269, 0x9a7a, 0x0, 0x0);
        gbc.writeMem(0x7bf9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe618, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0155
        gbc.setState(0x69bc, 0xa19c, 0xc1f0, 0x53b7, 0x49c8, 0x2efd, 0x1, 0x1);
        gbc.writeMem(0x69bc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0156
        gbc.setState(0xd80a, 0x3fdd, 0x32c0, 0x97f8, 0x4548, 0x9d1c, 0x0, 0x0);
        gbc.writeMem(0xd80a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3fdd, gbc.sp());
        EXPECT(0xd80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80a));
        EXPECT(0x18, gbc.readMem(0xd80b));
        // CB 18 0157
        gbc.setState(0xbbf6, 0x97f9, 0x8860, 0x4d55, 0xf1dc, 0x5318, 0x1, 0x1);
        gbc.writeMem(0xbbf6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0xbbf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf6));
        EXPECT(0x18, gbc.readMem(0xbbf7));
        // CB 18 0158
        gbc.setState(0xb090, 0x9028, 0x8bf0, 0x7760, 0xd837, 0xcd2, 0x1, 0x1);
        gbc.writeMem(0xb090, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0x18, gbc.readMem(0xb091));
        // CB 18 0159
        gbc.setState(0xaa3f, 0x601e, 0xc9d0, 0xdd5, 0x9ca3, 0x947c, 0x1, 0x0);
        gbc.writeMem(0xaa3f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x601e, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3f));
        EXPECT(0x18, gbc.readMem(0xaa40));
        // CB 18 015A
        gbc.setState(0x1196, 0x3958, 0x3a50, 0x5ecb, 0x2b3c, 0xf801, 0x0, 0x0);
        gbc.writeMem(0x1196, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0x1198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 015B
        gbc.setState(0x1c7b, 0x4523, 0x1940, 0x3c68, 0x285, 0xcaae, 0x0, 0x1);
        gbc.writeMem(0x1c7b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4523, gbc.sp());
        EXPECT(0x1c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 015C
        gbc.setState(0xdea6, 0xf43, 0xdf20, 0xb72d, 0x7b09, 0xb735, 0x1, 0x0);
        gbc.writeMem(0xdea6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf43, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea6));
        EXPECT(0x18, gbc.readMem(0xdea7));
        // CB 18 015D
        gbc.setState(0x76d2, 0xa93d, 0xac80, 0xadf4, 0x1568, 0x40df, 0x0, 0x1);
        gbc.writeMem(0x76d2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa93d, gbc.sp());
        EXPECT(0x76d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 015E
        gbc.setState(0x1c08, 0x5b09, 0xe3a0, 0x277e, 0x90b2, 0x41f1, 0x1, 0x0);
        gbc.writeMem(0x1c08, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 015F
        gbc.setState(0x6979, 0x56b6, 0x8de0, 0xc12e, 0xb897, 0x41e4, 0x0, 0x0);
        gbc.writeMem(0x6979, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x56b6, gbc.sp());
        EXPECT(0x697b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0160
        gbc.setState(0x264a, 0xeec2, 0xbe20, 0x486, 0xa31b, 0xb585, 0x1, 0x0);
        gbc.writeMem(0x264a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0161
        gbc.setState(0x50a0, 0xa9b6, 0xe340, 0xb1ce, 0xd12d, 0x5116, 0x0, 0x0);
        gbc.writeMem(0x50a0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0x50a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0162
        gbc.setState(0xca60, 0x3ce1, 0x14a0, 0x71b0, 0xe89c, 0xc341, 0x0, 0x0);
        gbc.writeMem(0xca60, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3ce1, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca60));
        EXPECT(0x18, gbc.readMem(0xca61));
        // CB 18 0163
        gbc.setState(0xef, 0x27d0, 0x2320, 0xf25e, 0x4f46, 0x2488, 0x0, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0164
        gbc.setState(0x8d52, 0xa92a, 0x78d0, 0x9ccd, 0xdef9, 0x7dc2, 0x1, 0x1);
        gbc.writeMem(0x8d52, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa92a, gbc.sp());
        EXPECT(0x8d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d52));
        EXPECT(0x18, gbc.readMem(0x8d53));
        // CB 18 0165
        gbc.setState(0x3ae7, 0xbb61, 0x7330, 0xc1af, 0x628, 0xb934, 0x0, 0x1);
        gbc.writeMem(0x3ae7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbb61, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0166
        gbc.setState(0x2c89, 0x81d8, 0xe6f0, 0x7839, 0xf435, 0x27a2, 0x1, 0x1);
        gbc.writeMem(0x2c89, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x81d8, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0167
        gbc.setState(0xb8f7, 0x1de8, 0x5020, 0xbcd5, 0xf3f2, 0x4f50, 0x1, 0x1);
        gbc.writeMem(0xb8f7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1de8, gbc.sp());
        EXPECT(0xb8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f7));
        EXPECT(0x18, gbc.readMem(0xb8f8));
        // CB 18 0168
        gbc.setState(0x396, 0xce70, 0x9ff0, 0x7ee0, 0x12f2, 0x6100, 0x0, 0x1);
        gbc.writeMem(0x396, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0x398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0169
        gbc.setState(0x868b, 0x72bf, 0xfe30, 0xdcc2, 0xa944, 0x86a6, 0x0, 0x0);
        gbc.writeMem(0x868b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x868d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868b));
        EXPECT(0x18, gbc.readMem(0x868c));
        // CB 18 016A
        gbc.setState(0x44ad, 0xec0f, 0x630, 0x4dbc, 0x74ea, 0xb08, 0x1, 0x1);
        gbc.writeMem(0x44ad, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xec0f, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 016B
        gbc.setState(0x2dc9, 0xc2bf, 0x920, 0x55fb, 0x42f5, 0x8e36, 0x1, 0x1);
        gbc.writeMem(0x2dc9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc2bf, gbc.sp());
        EXPECT(0x2dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 016D
        gbc.setState(0xb11e, 0x3c3, 0x38c0, 0x49e5, 0xf44f, 0x3b09, 0x0, 0x0);
        gbc.writeMem(0xb11e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x18, gbc.readMem(0xb11f));
        // CB 18 016E
        gbc.setState(0xb005, 0x94e6, 0x43d0, 0x3db9, 0x99c0, 0x201c, 0x0, 0x0);
        gbc.writeMem(0xb005, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb005));
        EXPECT(0x18, gbc.readMem(0xb006));
        // CB 18 016F
        gbc.setState(0xe424, 0xf64, 0x5da0, 0xbf02, 0x2a5d, 0x50b0, 0x0, 0x0);
        gbc.writeMem(0xe424, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf64, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0x18, gbc.readMem(0xe425));
        // CB 18 0170
        gbc.setState(0x18d3, 0xd414, 0xde70, 0x3b3f, 0xff2a, 0xbc8, 0x1, 0x0);
        gbc.writeMem(0x18d3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0x18d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0171
        gbc.setState(0x9ef8, 0x9c1f, 0xd870, 0xacd6, 0xbfe, 0x1f94, 0x0, 0x0);
        gbc.writeMem(0x9ef8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef8));
        EXPECT(0x18, gbc.readMem(0x9ef9));
        // CB 18 0172
        gbc.setState(0xe23, 0x8598, 0x6800, 0xcf, 0x498b, 0xe6bc, 0x1, 0x1);
        gbc.writeMem(0xe23, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8598, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0173
        gbc.setState(0xbffd, 0xe17, 0x2750, 0x8f34, 0x5d10, 0x7d4a, 0x0, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe17, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffd));
        EXPECT(0x18, gbc.readMem(0xbffe));
        // CB 18 0174
        gbc.setState(0xef94, 0xbe4, 0x4ac0, 0xf5a4, 0x8b2b, 0x2054, 0x1, 0x1);
        gbc.writeMem(0xef94, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbe4, gbc.sp());
        EXPECT(0xef96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef94));
        EXPECT(0x18, gbc.readMem(0xef95));
        // CB 18 0175
        gbc.setState(0x90d6, 0x7b6f, 0xe290, 0x9840, 0xd2fe, 0x554e, 0x0, 0x0);
        gbc.writeMem(0x90d6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7b6f, gbc.sp());
        EXPECT(0x90d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d6));
        EXPECT(0x18, gbc.readMem(0x90d7));
        // CB 18 0176
        gbc.setState(0xef22, 0x5d8a, 0xe6f0, 0xb1f6, 0xcd0c, 0x45e3, 0x0, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef22));
        EXPECT(0x18, gbc.readMem(0xef23));
        // CB 18 0177
        gbc.setState(0x4981, 0x792a, 0x4080, 0xc600, 0xaa6d, 0xa956, 0x0, 0x1);
        gbc.writeMem(0x4981, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x792a, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0178
        gbc.setState(0x1bd, 0xaf72, 0x4c40, 0x431d, 0x56d5, 0xedac, 0x1, 0x1);
        gbc.writeMem(0x1bd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0179
        gbc.setState(0x8505, 0xe1, 0x3f60, 0xdfd7, 0xffd8, 0xcb02, 0x1, 0x1);
        gbc.writeMem(0x8505, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8505));
        EXPECT(0x18, gbc.readMem(0x8506));
        // CB 18 017A
        gbc.setState(0x5a0, 0xc627, 0x5a30, 0x8b7a, 0x7a91, 0x7336, 0x1, 0x0);
        gbc.writeMem(0x5a0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0x5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 017B
        gbc.setState(0x8d70, 0x648a, 0xf570, 0x59d2, 0xc74c, 0xb734, 0x1, 0x1);
        gbc.writeMem(0x8d70, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x648a, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d70));
        EXPECT(0x18, gbc.readMem(0x8d71));
        // CB 18 017C
        gbc.setState(0xe764, 0xf149, 0xecf0, 0x9d73, 0xe387, 0x31be, 0x0, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf149, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0x18, gbc.readMem(0xe765));
        // CB 18 017D
        gbc.setState(0xbf60, 0xa5d3, 0xe40, 0x7b06, 0x90d6, 0x6440, 0x0, 0x1);
        gbc.writeMem(0xbf60, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa5d3, gbc.sp());
        EXPECT(0xbf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf60));
        EXPECT(0x18, gbc.readMem(0xbf61));
        // CB 18 017E
        gbc.setState(0x3eaa, 0x2a40, 0xded0, 0xd3bc, 0xc574, 0xd390, 0x1, 0x0);
        gbc.writeMem(0x3eaa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2a40, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 017F
        gbc.setState(0x1cfe, 0xd27a, 0x21d0, 0xbead, 0xcad, 0xd19b, 0x1, 0x1);
        gbc.writeMem(0x1cfe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd27a, gbc.sp());
        EXPECT(0x1d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0180
        gbc.setState(0x402b, 0xc9b0, 0xb040, 0x61a9, 0x87ec, 0xe0b3, 0x1, 0x0);
        gbc.writeMem(0x402b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc9b0, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0181
        gbc.setState(0x7c53, 0xae75, 0xe670, 0xadd3, 0x6095, 0xaafe, 0x0, 0x0);
        gbc.writeMem(0x7c53, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xae75, gbc.sp());
        EXPECT(0x7c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0183
        gbc.setState(0x2120, 0x4020, 0x6890, 0x61ab, 0x51e5, 0xebb1, 0x1, 0x0);
        gbc.writeMem(0x2120, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0185
        gbc.setState(0x5c94, 0x141e, 0xebf0, 0x4b32, 0xb742, 0x1078, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x141e, gbc.sp());
        EXPECT(0x5c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0186
        gbc.setState(0x9a, 0xd31a, 0x8db0, 0x9063, 0x1115, 0x6712, 0x0, 0x0);
        gbc.writeMem(0x9a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd31a, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0187
        gbc.setState(0x1f8a, 0x18ec, 0x9020, 0xa022, 0xa6f4, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x1f8a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0188
        gbc.setState(0x297d, 0xc035, 0x6f80, 0xfac5, 0x253, 0x2e00, 0x0, 0x1);
        gbc.writeMem(0x297d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0x297f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0189
        gbc.setState(0x5288, 0xb341, 0xc580, 0xbb63, 0xdfbf, 0x6b04, 0x0, 0x0);
        gbc.writeMem(0x5288, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0x528a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 018A
        gbc.setState(0xb718, 0xdf37, 0x2fe0, 0xa794, 0xa57c, 0x3e7b, 0x0, 0x0);
        gbc.writeMem(0xb718, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdf37, gbc.sp());
        EXPECT(0xb71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb718));
        EXPECT(0x18, gbc.readMem(0xb719));
        // CB 18 018B
        gbc.setState(0x1b7a, 0x9de8, 0xa0, 0x6399, 0x91b0, 0x5097, 0x0, 0x1);
        gbc.writeMem(0x1b7a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9de8, gbc.sp());
        EXPECT(0x1b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 018C
        gbc.setState(0xa5a3, 0xac78, 0xb7d0, 0x2875, 0xcb9a, 0x2c3a, 0x0, 0x0);
        gbc.writeMem(0xa5a3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a3));
        EXPECT(0x18, gbc.readMem(0xa5a4));
        // CB 18 018D
        gbc.setState(0x8d96, 0x31f2, 0x1ae0, 0xbeab, 0xd52c, 0xe34b, 0x0, 0x0);
        gbc.writeMem(0x8d96, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x31f2, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0x18, gbc.readMem(0x8d97));
        // CB 18 018E
        gbc.setState(0x297e, 0x957c, 0x6f60, 0x68a2, 0x1153, 0x7521, 0x1, 0x0);
        gbc.writeMem(0x297e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 018F
        gbc.setState(0xd64e, 0xac66, 0x9020, 0x8d02, 0xf943, 0xff77, 0x0, 0x0);
        gbc.writeMem(0xd64e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0xd650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64e));
        EXPECT(0x18, gbc.readMem(0xd64f));
        // CB 18 0190
        gbc.setState(0xbf4c, 0x1156, 0xdcc0, 0x8b8d, 0x762d, 0x39c4, 0x1, 0x1);
        gbc.writeMem(0xbf4c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0xbf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4c));
        EXPECT(0x18, gbc.readMem(0xbf4d));
        // CB 18 0191
        gbc.setState(0x8c6, 0x474a, 0xf0, 0xe363, 0x4a96, 0x620, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x474a, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0192
        gbc.setState(0x4c35, 0x67fa, 0x2330, 0x138b, 0x5496, 0x24dd, 0x0, 0x0);
        gbc.writeMem(0x4c35, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x4c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0193
        gbc.setState(0xbc7, 0x1665, 0x6aa0, 0xa2c1, 0x869b, 0x116f, 0x1, 0x1);
        gbc.writeMem(0xbc7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0194
        gbc.setState(0xd50f, 0x30c7, 0x5d0, 0x6bba, 0x5e39, 0xe91e, 0x1, 0x1);
        gbc.writeMem(0xd50f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x30c7, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50f));
        EXPECT(0x18, gbc.readMem(0xd510));
        // CB 18 0195
        gbc.setState(0xb093, 0x3d98, 0x41e0, 0xe57e, 0xc945, 0x4e58, 0x0, 0x0);
        gbc.writeMem(0xb093, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0xb095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb093));
        EXPECT(0x18, gbc.readMem(0xb094));
        // CB 18 0196
        gbc.setState(0xc236, 0xfc0c, 0x8730, 0xec2, 0xf322, 0x6c98, 0x1, 0x1);
        gbc.writeMem(0xc236, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc236));
        EXPECT(0x18, gbc.readMem(0xc237));
        // CB 18 0197
        gbc.setState(0x3875, 0x2859, 0x8b90, 0x5b5, 0xdaa0, 0x393f, 0x0, 0x0);
        gbc.writeMem(0x3875, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2859, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0198
        gbc.setState(0x6bb4, 0x548, 0x5c0, 0x2e04, 0xa46b, 0x1592, 0x1, 0x0);
        gbc.writeMem(0x6bb4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x548, gbc.sp());
        EXPECT(0x6bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0199
        gbc.setState(0xbe09, 0x6d02, 0xaac0, 0xe11a, 0x4f93, 0xc45f, 0x0, 0x1);
        gbc.writeMem(0xbe09, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe09));
        EXPECT(0x18, gbc.readMem(0xbe0a));
        // CB 18 019A
        gbc.setState(0x2294, 0x8763, 0x6a20, 0x6e6, 0x8651, 0x40af, 0x0, 0x0);
        gbc.writeMem(0x2294, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 019B
        gbc.setState(0x49b5, 0x5687, 0x1150, 0x4d61, 0x68ad, 0xe325, 0x1, 0x0);
        gbc.writeMem(0x49b5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5687, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 019C
        gbc.setState(0x770a, 0x87b1, 0x3910, 0xf00a, 0xd45a, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x770a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 019D
        gbc.setState(0xcaf8, 0xf586, 0x5670, 0x5c45, 0x4a57, 0xf3ac, 0x0, 0x1);
        gbc.writeMem(0xcaf8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf586, gbc.sp());
        EXPECT(0xcafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf8));
        EXPECT(0x18, gbc.readMem(0xcaf9));
        // CB 18 019E
        gbc.setState(0xa30b, 0x70f9, 0x9e30, 0x28ea, 0x806f, 0x76c1, 0x0, 0x0);
        gbc.writeMem(0xa30b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x70f9, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30b));
        EXPECT(0x18, gbc.readMem(0xa30c));
        // CB 18 01A0
        gbc.setState(0xb97f, 0xbf4d, 0xaf50, 0x1d38, 0x8609, 0xe97f, 0x0, 0x1);
        gbc.writeMem(0xb97f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbf4d, gbc.sp());
        EXPECT(0xb981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97f));
        EXPECT(0x18, gbc.readMem(0xb980));
        // CB 18 01A1
        gbc.setState(0x80e8, 0x2060, 0xac90, 0x94f9, 0x5f5a, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x80e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2060, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e8));
        EXPECT(0x18, gbc.readMem(0x80e9));
        // CB 18 01A2
        gbc.setState(0x7578, 0x4fa0, 0x1030, 0xa819, 0xf2d1, 0x16bd, 0x0, 0x0);
        gbc.writeMem(0x7578, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0x757a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01A3
        gbc.setState(0x9f2f, 0x4ab9, 0x2df0, 0x1664, 0x8b44, 0x6d96, 0x0, 0x0);
        gbc.writeMem(0x9f2f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4ab9, gbc.sp());
        EXPECT(0x9f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2f));
        EXPECT(0x18, gbc.readMem(0x9f30));
        // CB 18 01A4
        gbc.setState(0x7f0e, 0xc1c, 0xcf20, 0x186b, 0xe9b6, 0x8b45, 0x0, 0x0);
        gbc.writeMem(0x7f0e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc1c, gbc.sp());
        EXPECT(0x7f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01A5
        gbc.setState(0xe017, 0xd355, 0x9940, 0x1090, 0xd11d, 0x753b, 0x0, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd355, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0x18, gbc.readMem(0xe018));
        // CB 18 01A6
        gbc.setState(0x857, 0xfe33, 0xd820, 0x5ff5, 0x75a6, 0x976f, 0x1, 0x0);
        gbc.writeMem(0x857, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0x859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01A7
        gbc.setState(0xa12c, 0x4759, 0xc730, 0xf353, 0x23f8, 0x94c7, 0x1, 0x1);
        gbc.writeMem(0xa12c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0xa12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12c));
        EXPECT(0x18, gbc.readMem(0xa12d));
        // CB 18 01A8
        gbc.setState(0x566d, 0x5e51, 0xf010, 0x51f1, 0x5edf, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5e51, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01A9
        gbc.setState(0xaa95, 0x5815, 0x7eb0, 0x6a7, 0x3240, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0xaa95, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5815, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0x18, gbc.readMem(0xaa96));
        // CB 18 01AA
        gbc.setState(0xea85, 0xfb6, 0x6250, 0xc0cf, 0x91df, 0x57bb, 0x0, 0x1);
        gbc.writeMem(0xea85, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0xea87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea85));
        EXPECT(0x18, gbc.readMem(0xea86));
        // CB 18 01AB
        gbc.setState(0xbd14, 0xa8c2, 0xf520, 0x95df, 0xe660, 0xe999, 0x0, 0x1);
        gbc.writeMem(0xbd14, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa8c2, gbc.sp());
        EXPECT(0xbd16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd14));
        EXPECT(0x18, gbc.readMem(0xbd15));
        // CB 18 01AC
        gbc.setState(0xd166, 0x5f56, 0x3dc0, 0xc263, 0xb44b, 0x49c5, 0x1, 0x1);
        gbc.writeMem(0xd166, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f56, gbc.sp());
        EXPECT(0xd168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd166));
        EXPECT(0x18, gbc.readMem(0xd167));
        // CB 18 01AD
        gbc.setState(0x59ed, 0xf8d3, 0xc370, 0x467c, 0x8585, 0xf6d4, 0x1, 0x1);
        gbc.writeMem(0x59ed, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x59ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01AE
        gbc.setState(0xef04, 0xa1cd, 0x47d0, 0x6889, 0xb2f0, 0x138f, 0x0, 0x0);
        gbc.writeMem(0xef04, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0xef06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef04));
        EXPECT(0x18, gbc.readMem(0xef05));
        // CB 18 01AF
        gbc.setState(0xba79, 0x112b, 0x5a80, 0xb9cd, 0x2acf, 0x235f, 0x1, 0x1);
        gbc.writeMem(0xba79, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x112b, gbc.sp());
        EXPECT(0xba7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba79));
        EXPECT(0x18, gbc.readMem(0xba7a));
        // CB 18 01B0
        gbc.setState(0x7246, 0x6980, 0x560, 0x9081, 0x4301, 0x64d3, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6980, gbc.sp());
        EXPECT(0x7248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01B1
        gbc.setState(0xd36, 0x8ec6, 0x6020, 0x48b8, 0xeee6, 0xa95, 0x1, 0x0);
        gbc.writeMem(0xd36, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8ec6, gbc.sp());
        EXPECT(0xd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01B2
        gbc.setState(0xb41f, 0xf7b9, 0xdd40, 0xde49, 0xa65a, 0x7141, 0x1, 0x0);
        gbc.writeMem(0xb41f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf7b9, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41f));
        EXPECT(0x18, gbc.readMem(0xb420));
        // CB 18 01B3
        gbc.setState(0x9d25, 0x6b3e, 0x36d0, 0x97ae, 0x5a34, 0x55, 0x1, 0x0);
        gbc.writeMem(0x9d25, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d25));
        EXPECT(0x18, gbc.readMem(0x9d26));
        // CB 18 01B4
        gbc.setState(0x371c, 0x8adc, 0xdbb0, 0x71fc, 0xa76d, 0x9a25, 0x0, 0x0);
        gbc.writeMem(0x371c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8adc, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01B5
        gbc.setState(0x6f4b, 0xf958, 0x8f70, 0x62b9, 0x372f, 0x77c1, 0x0, 0x1);
        gbc.writeMem(0x6f4b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0x6f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01B7
        gbc.setState(0xed72, 0x69cd, 0x7f90, 0x99fb, 0x708e, 0x16cb, 0x0, 0x0);
        gbc.writeMem(0xed72, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0xed74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed72));
        EXPECT(0x18, gbc.readMem(0xed73));
        // CB 18 01B8
        gbc.setState(0xa1e3, 0xceaa, 0x9f10, 0x8ba6, 0x773, 0xc9a6, 0x1, 0x1);
        gbc.writeMem(0xa1e3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0xa1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e3));
        EXPECT(0x18, gbc.readMem(0xa1e4));
        // CB 18 01B9
        gbc.setState(0xd3db, 0xc3a8, 0x3540, 0xde45, 0x799f, 0xf3a7, 0x0, 0x1);
        gbc.writeMem(0xd3db, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc3a8, gbc.sp());
        EXPECT(0xd3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3db));
        EXPECT(0x18, gbc.readMem(0xd3dc));
        // CB 18 01BA
        gbc.setState(0xb4b6, 0x7621, 0xf7f0, 0xbec3, 0x4b36, 0x9bc6, 0x1, 0x0);
        gbc.writeMem(0xb4b6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b6));
        EXPECT(0x18, gbc.readMem(0xb4b7));
        // CB 18 01BB
        gbc.setState(0x316b, 0xda6e, 0x7e50, 0x3d04, 0xa667, 0x4741, 0x0, 0x1);
        gbc.writeMem(0x316b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xda6e, gbc.sp());
        EXPECT(0x316d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01BC
        gbc.setState(0x7819, 0xa50d, 0x7f40, 0xba6f, 0xc831, 0xdaff, 0x1, 0x1);
        gbc.writeMem(0x7819, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0x781b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01BD
        gbc.setState(0xa4c1, 0x6fba, 0xf890, 0xeb34, 0x69d7, 0x834c, 0x1, 0x1);
        gbc.writeMem(0xa4c1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c1));
        EXPECT(0x18, gbc.readMem(0xa4c2));
        // CB 18 01BE
        gbc.setState(0x24e6, 0x174c, 0xd8b0, 0x899a, 0x7843, 0xf22f, 0x0, 0x1);
        gbc.writeMem(0x24e6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x174c, gbc.sp());
        EXPECT(0x24e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01BF
        gbc.setState(0x4ce7, 0x415d, 0x73f0, 0x7d69, 0xf71c, 0x681d, 0x1, 0x0);
        gbc.writeMem(0x4ce7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x415d, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01C0
        gbc.setState(0x762b, 0xc1ea, 0x8f10, 0xcd7e, 0x5c0f, 0x91cd, 0x1, 0x1);
        gbc.writeMem(0x762b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01C1
        gbc.setState(0x454e, 0x26f, 0xe610, 0xf047, 0xdf11, 0x640e, 0x1, 0x0);
        gbc.writeMem(0x454e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0x4550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01C3
        gbc.setState(0x6f71, 0x1ade, 0x31c0, 0xd47c, 0xb8ee, 0xffe2, 0x1, 0x1);
        gbc.writeMem(0x6f71, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ade, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01C4
        gbc.setState(0x6eba, 0xab35, 0x5f30, 0xc2a6, 0x6b2f, 0xc9e, 0x0, 0x1);
        gbc.writeMem(0x6eba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x6ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01C5
        gbc.setState(0x748a, 0x9cba, 0xeb80, 0x5e13, 0xba19, 0x752b, 0x0, 0x0);
        gbc.writeMem(0x748a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9cba, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01C6
        gbc.setState(0xb547, 0x78de, 0xd3f0, 0xc058, 0xf421, 0x35c8, 0x0, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x78de, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0x18, gbc.readMem(0xb548));
        // CB 18 01C7
        gbc.setState(0x8e4e, 0x3ae6, 0x460, 0x7698, 0x8e84, 0x1988, 0x0, 0x0);
        gbc.writeMem(0x8e4e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x8e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4e));
        EXPECT(0x18, gbc.readMem(0x8e4f));
        // CB 18 01C8
        gbc.setState(0x5a7e, 0xabaa, 0xe0d0, 0x2c44, 0xbbbc, 0x53a5, 0x0, 0x1);
        gbc.writeMem(0x5a7e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xabaa, gbc.sp());
        EXPECT(0x5a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01C9
        gbc.setState(0x41a5, 0x2f47, 0x2fa0, 0x81fd, 0x33de, 0x7fca, 0x0, 0x0);
        gbc.writeMem(0x41a5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x41a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01CA
        gbc.setState(0xc1b8, 0x900d, 0xbab0, 0x6856, 0xcc00, 0xbbc8, 0x0, 0x0);
        gbc.writeMem(0xc1b8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x900d, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b8));
        EXPECT(0x18, gbc.readMem(0xc1b9));
        // CB 18 01CB
        gbc.setState(0x9f41, 0x9dd, 0x1ad0, 0x27ed, 0x73a0, 0xa40e, 0x0, 0x1);
        gbc.writeMem(0x9f41, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0x9f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f41));
        EXPECT(0x18, gbc.readMem(0x9f42));
        // CB 18 01CC
        gbc.setState(0xefdb, 0x2239, 0x59e0, 0xa3b5, 0x5da, 0x7b64, 0x1, 0x1);
        gbc.writeMem(0xefdb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2239, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdb));
        EXPECT(0x18, gbc.readMem(0xefdc));
        // CB 18 01CD
        gbc.setState(0xc3d, 0x5185, 0xeb50, 0xf88e, 0x2263, 0x111d, 0x0, 0x1);
        gbc.writeMem(0xc3d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0xc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01CE
        gbc.setState(0x67a6, 0xc900, 0xb20, 0x711, 0x5627, 0x8cdc, 0x0, 0x1);
        gbc.writeMem(0x67a6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0x67a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01CF
        gbc.setState(0x322e, 0x31, 0x2160, 0x4fb9, 0x4ff0, 0x72e7, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x31, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01D0
        gbc.setState(0x2c62, 0xe043, 0x9490, 0x5d46, 0x76ed, 0xf550, 0x0, 0x1);
        gbc.writeMem(0x2c62, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01D1
        gbc.setState(0x4b25, 0x88ef, 0x8ee0, 0xb797, 0x4d99, 0xf085, 0x1, 0x1);
        gbc.writeMem(0x4b25, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x4b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01D2
        gbc.setState(0x34a5, 0xf13a, 0xce90, 0xbcea, 0x14f, 0xb884, 0x0, 0x0);
        gbc.writeMem(0x34a5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf13a, gbc.sp());
        EXPECT(0x34a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01D3
        gbc.setState(0xd601, 0x458a, 0xb280, 0x7897, 0x38c0, 0xa219, 0x0, 0x1);
        gbc.writeMem(0xd601, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x458a, gbc.sp());
        EXPECT(0xd603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd601));
        EXPECT(0x18, gbc.readMem(0xd602));
        // CB 18 01D4
        gbc.setState(0x4623, 0x8ef0, 0x9930, 0x487b, 0x17fe, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x4623, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8ef0, gbc.sp());
        EXPECT(0x4625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01D6
        gbc.setState(0x4204, 0x1a2c, 0x2570, 0xecde, 0x85b5, 0x3a8a, 0x0, 0x0);
        gbc.writeMem(0x4204, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1a2c, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01D7
        gbc.setState(0x4450, 0xa5aa, 0x4750, 0x5351, 0xcfd5, 0xa340, 0x1, 0x1);
        gbc.writeMem(0x4450, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa5aa, gbc.sp());
        EXPECT(0x4452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01D8
        gbc.setState(0x894c, 0x57b1, 0x5210, 0xcddf, 0xe3f, 0xc664, 0x0, 0x0);
        gbc.writeMem(0x894c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x57b1, gbc.sp());
        EXPECT(0x894e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894c));
        EXPECT(0x18, gbc.readMem(0x894d));
        // CB 18 01D9
        gbc.setState(0xecae, 0x79a, 0xa4c0, 0xba46, 0x627, 0xb7f0, 0x0, 0x1);
        gbc.writeMem(0xecae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x79a, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecae));
        EXPECT(0x18, gbc.readMem(0xecaf));
        // CB 18 01DA
        gbc.setState(0xbd7, 0x7c3c, 0xed20, 0x3178, 0x68d0, 0xfc09, 0x0, 0x0);
        gbc.writeMem(0xbd7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7c3c, gbc.sp());
        EXPECT(0xbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01DB
        gbc.setState(0x615a, 0x4b80, 0xa8e0, 0x6f63, 0x7169, 0xa311, 0x0, 0x1);
        gbc.writeMem(0x615a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4b80, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01DC
        gbc.setState(0xc21, 0x6384, 0xea50, 0x90c0, 0xf117, 0xf527, 0x1, 0x0);
        gbc.writeMem(0xc21, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0xc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01DD
        gbc.setState(0x2231, 0x28d4, 0xf010, 0x14e8, 0x13c, 0xcb0d, 0x1, 0x0);
        gbc.writeMem(0x2231, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0x2233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01DE
        gbc.setState(0x215e, 0xec10, 0x4810, 0x83de, 0x773d, 0x18f3, 0x1, 0x0);
        gbc.writeMem(0x215e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01DF
        gbc.setState(0x454f, 0xc45c, 0xb650, 0xbb74, 0x6ef7, 0x5ae9, 0x1, 0x1);
        gbc.writeMem(0x454f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc45c, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01E0
        gbc.setState(0x3c07, 0xc9e, 0x7240, 0x1fb7, 0x1e52, 0xc0d0, 0x0, 0x0);
        gbc.writeMem(0x3c07, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc9e, gbc.sp());
        EXPECT(0x3c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01E1
        gbc.setState(0xe627, 0xaae4, 0x98f0, 0xa45a, 0x927a, 0x9b79, 0x0, 0x0);
        gbc.writeMem(0xe627, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0xe629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe627));
        EXPECT(0x18, gbc.readMem(0xe628));
        // CB 18 01E2
        gbc.setState(0xbae4, 0x82a9, 0x38f0, 0x3cf, 0x9266, 0x2e06, 0x0, 0x1);
        gbc.writeMem(0xbae4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x82a9, gbc.sp());
        EXPECT(0xbae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae4));
        EXPECT(0x18, gbc.readMem(0xbae5));
        // CB 18 01E3
        gbc.setState(0x5b87, 0xf7e, 0xecc0, 0xffc, 0x3b27, 0x9911, 0x0, 0x1);
        gbc.writeMem(0x5b87, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf7e, gbc.sp());
        EXPECT(0x5b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01E4
        gbc.setState(0xaca0, 0xeb35, 0x1a30, 0xdd29, 0xe01c, 0xc00b, 0x1, 0x1);
        gbc.writeMem(0xaca0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeb35, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca0));
        EXPECT(0x18, gbc.readMem(0xaca1));
        // CB 18 01E5
        gbc.setState(0xccc0, 0x49ed, 0x2070, 0x27f5, 0x31d6, 0x5ee8, 0x1, 0x0);
        gbc.writeMem(0xccc0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0xccc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc0));
        EXPECT(0x18, gbc.readMem(0xccc1));
        // CB 18 01E6
        gbc.setState(0xbdae, 0xc151, 0x31d0, 0x994d, 0x4d0f, 0x3f46, 0x0, 0x0);
        gbc.writeMem(0xbdae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc151, gbc.sp());
        EXPECT(0xbdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdae));
        EXPECT(0x18, gbc.readMem(0xbdaf));
        // CB 18 01E7
        gbc.setState(0x87e, 0xa438, 0x95c0, 0xf6c6, 0xbd49, 0x6ee6, 0x0, 0x0);
        gbc.writeMem(0x87e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01E9
        gbc.setState(0xc9fc, 0xb020, 0xc9e0, 0xaf4, 0xc44f, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0xc9fc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0x18, gbc.readMem(0xc9fd));
        // CB 18 01EA
        gbc.setState(0x7458, 0xb998, 0xe70, 0x1a03, 0x2d75, 0xa4f2, 0x1, 0x0);
        gbc.writeMem(0x7458, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01EB
        gbc.setState(0x1672, 0xeab3, 0x1e00, 0x1cf3, 0xf3c8, 0xbfb3, 0x0, 0x1);
        gbc.writeMem(0x1672, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xeab3, gbc.sp());
        EXPECT(0x1674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01ED
        gbc.setState(0x4cde, 0x5484, 0xe170, 0xeca7, 0x7a66, 0x1ef5, 0x1, 0x0);
        gbc.writeMem(0x4cde, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01EE
        gbc.setState(0xc41a, 0x9fdf, 0x1140, 0xa87d, 0x87b, 0xb5d1, 0x1, 0x1);
        gbc.writeMem(0xc41a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0x18, gbc.readMem(0xc41b));
        // CB 18 01EF
        gbc.setState(0x623, 0xf7fd, 0xa8b0, 0xf8c3, 0x468f, 0xec2f, 0x0, 0x1);
        gbc.writeMem(0x623, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0x625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01F0
        gbc.setState(0xec5e, 0x86df, 0xcd90, 0x6066, 0xdac2, 0x65d8, 0x1, 0x1);
        gbc.writeMem(0xec5e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x86df, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5e));
        EXPECT(0x18, gbc.readMem(0xec5f));
        // CB 18 01F1
        gbc.setState(0xb9bf, 0x2b23, 0xfcf0, 0x9941, 0x7f92, 0x3262, 0x0, 0x0);
        gbc.writeMem(0xb9bf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2b23, gbc.sp());
        EXPECT(0xb9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bf));
        EXPECT(0x18, gbc.readMem(0xb9c0));
        // CB 18 01F2
        gbc.setState(0xa948, 0x4103, 0x5e20, 0xe79c, 0x770d, 0xac64, 0x0, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4103, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa948));
        EXPECT(0x18, gbc.readMem(0xa949));
        // CB 18 01F3
        gbc.setState(0xefee, 0x72b9, 0x34c0, 0x50b, 0x7bb1, 0x77ca, 0x1, 0x0);
        gbc.writeMem(0xefee, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x72b9, gbc.sp());
        EXPECT(0xeff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefee));
        EXPECT(0x18, gbc.readMem(0xefef));
        // CB 18 01F4
        gbc.setState(0x1bb9, 0x6020, 0xdd00, 0xd194, 0x444c, 0xcd93, 0x1, 0x1);
        gbc.writeMem(0x1bb9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6020, gbc.sp());
        EXPECT(0x1bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01F5
        gbc.setState(0x70cd, 0x65e, 0x1b00, 0x654f, 0xb2d0, 0x94d, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x65e, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01F6
        gbc.setState(0xd6dd, 0x525c, 0x87c0, 0x5c54, 0x8765, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0xd6dd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dd));
        EXPECT(0x18, gbc.readMem(0xd6de));
        // CB 18 01F7
        gbc.setState(0x2396, 0x621d, 0xc2f0, 0xc78d, 0x1e1b, 0x3a23, 0x1, 0x0);
        gbc.writeMem(0x2396, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x621d, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01F8
        gbc.setState(0x647f, 0x5309, 0x63d0, 0xc274, 0xe286, 0x9126, 0x0, 0x0);
        gbc.writeMem(0x647f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0x6481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01F9
        gbc.setState(0x6ee1, 0xf61c, 0xa6a0, 0xbee4, 0xece9, 0xe3a6, 0x0, 0x0);
        gbc.writeMem(0x6ee1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf61c, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01FA
        gbc.setState(0x57d3, 0x4211, 0x5c80, 0x53cb, 0x2f9d, 0x39b2, 0x1, 0x0);
        gbc.writeMem(0x57d3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4211, gbc.sp());
        EXPECT(0x57d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01FB
        gbc.setState(0x878f, 0x8088, 0x7f70, 0xc14d, 0xb43b, 0xe277, 0x0, 0x1);
        gbc.writeMem(0x878f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8088, gbc.sp());
        EXPECT(0x8791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878f));
        EXPECT(0x18, gbc.readMem(0x8790));
        // CB 18 01FC
        gbc.setState(0x8f9, 0x158b, 0x58a0, 0xd508, 0x72eb, 0xc7f4, 0x0, 0x1);
        gbc.writeMem(0x8f9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0x8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 01FD
        gbc.setState(0xc626, 0x1e4a, 0xeab0, 0x549a, 0xe2ea, 0x9ea5, 0x1, 0x0);
        gbc.writeMem(0xc626, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0xc628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc626));
        EXPECT(0x18, gbc.readMem(0xc627));
        // CB 18 01FE
        gbc.setState(0x7d81, 0x6d1a, 0x8130, 0x90ce, 0xe11a, 0x5da4, 0x1, 0x1);
        gbc.writeMem(0x7d81, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 01FF
        gbc.setState(0x6530, 0xdf9c, 0x1b40, 0x9eaa, 0xc4eb, 0x45c9, 0x1, 0x1);
        gbc.writeMem(0x6530, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdf9c, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0200
        gbc.setState(0xc023, 0xa275, 0xfcf0, 0x4007, 0xe265, 0xeb18, 0x0, 0x1);
        gbc.writeMem(0xc023, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa275, gbc.sp());
        EXPECT(0xc025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc023));
        EXPECT(0x18, gbc.readMem(0xc024));
        // CB 18 0201
        gbc.setState(0x2ab4, 0x886a, 0xe120, 0x106, 0xf48b, 0xbf14, 0x1, 0x1);
        gbc.writeMem(0x2ab4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x886a, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0202
        gbc.setState(0xc7cf, 0xdc2c, 0x97c0, 0x4cdd, 0xba9, 0xfc9c, 0x0, 0x0);
        gbc.writeMem(0xc7cf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc2c, gbc.sp());
        EXPECT(0xc7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7cf));
        EXPECT(0x18, gbc.readMem(0xc7d0));
        // CB 18 0203
        gbc.setState(0xbeb3, 0x3c3, 0x76d0, 0x8780, 0xa4db, 0xd1fb, 0x0, 0x1);
        gbc.writeMem(0xbeb3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0xbeb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb3));
        EXPECT(0x18, gbc.readMem(0xbeb4));
        // CB 18 0204
        gbc.setState(0x3cd5, 0x676, 0xb4e0, 0x1679, 0xbc8, 0x2899, 0x1, 0x0);
        gbc.writeMem(0x3cd5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0205
        gbc.setState(0x4518, 0x7e50, 0xcf60, 0xddd8, 0x107, 0xb40b, 0x0, 0x1);
        gbc.writeMem(0x4518, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7e50, gbc.sp());
        EXPECT(0x451a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0206
        gbc.setState(0xdb0e, 0xfea6, 0x5da0, 0xdf26, 0x3a66, 0xe015, 0x0, 0x0);
        gbc.writeMem(0xdb0e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfea6, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0e));
        EXPECT(0x18, gbc.readMem(0xdb0f));
        // CB 18 0207
        gbc.setState(0x9313, 0x299, 0xc770, 0xa342, 0x41a3, 0x496c, 0x1, 0x1);
        gbc.writeMem(0x9313, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9313));
        EXPECT(0x18, gbc.readMem(0x9314));
        // CB 18 0209
        gbc.setState(0x27f0, 0x7441, 0x3870, 0xe137, 0x4dfc, 0x38d9, 0x1, 0x1);
        gbc.writeMem(0x27f0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 020A
        gbc.setState(0xeda5, 0x4492, 0xf470, 0xd3f6, 0xe941, 0xd6d4, 0x1, 0x0);
        gbc.writeMem(0xeda5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4492, gbc.sp());
        EXPECT(0xeda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda5));
        EXPECT(0x18, gbc.readMem(0xeda6));
        // CB 18 020B
        gbc.setState(0x70a2, 0x1210, 0xa910, 0xbedf, 0x6d04, 0x1a5e, 0x1, 0x1);
        gbc.writeMem(0x70a2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1210, gbc.sp());
        EXPECT(0x70a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 020C
        gbc.setState(0x3167, 0x37df, 0xa990, 0x9e18, 0x9858, 0x1f68, 0x1, 0x1);
        gbc.writeMem(0x3167, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x37df, gbc.sp());
        EXPECT(0x3169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 020D
        gbc.setState(0xefb1, 0x3b2c, 0x9b30, 0x7a05, 0xa0d8, 0xbe9e, 0x1, 0x0);
        gbc.writeMem(0xefb1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b2c, gbc.sp());
        EXPECT(0xefb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb1));
        EXPECT(0x18, gbc.readMem(0xefb2));
        // CB 18 020E
        gbc.setState(0xd629, 0xcdf2, 0x3620, 0x3807, 0x2a72, 0xda68, 0x0, 0x1);
        gbc.writeMem(0xd629, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcdf2, gbc.sp());
        EXPECT(0xd62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd629));
        EXPECT(0x18, gbc.readMem(0xd62a));
        // CB 18 020F
        gbc.setState(0x494b, 0x7707, 0xf3e0, 0x117b, 0x3bc5, 0xb493, 0x1, 0x0);
        gbc.writeMem(0x494b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7707, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0210
        gbc.setState(0x1fc7, 0xc3bc, 0x94a0, 0x34fe, 0x6a5e, 0x6149, 0x0, 0x0);
        gbc.writeMem(0x1fc7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0211
        gbc.setState(0xb868, 0xd63e, 0x4d0, 0x7535, 0x9ec3, 0x5383, 0x1, 0x0);
        gbc.writeMem(0xb868, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd63e, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb868));
        EXPECT(0x18, gbc.readMem(0xb869));
        // CB 18 0212
        gbc.setState(0x31d0, 0xcbc5, 0xf880, 0x7636, 0x6587, 0x770c, 0x0, 0x0);
        gbc.writeMem(0x31d0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcbc5, gbc.sp());
        EXPECT(0x31d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0213
        gbc.setState(0xa739, 0x48e6, 0xb80, 0x8c2b, 0x78f2, 0xf458, 0x0, 0x0);
        gbc.writeMem(0xa739, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa739));
        EXPECT(0x18, gbc.readMem(0xa73a));
        // CB 18 0214
        gbc.setState(0x33c2, 0xeda9, 0x3680, 0x9ca2, 0xc3e6, 0xe99a, 0x1, 0x1);
        gbc.writeMem(0x33c2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x33c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0216
        gbc.setState(0x9e56, 0x7ed1, 0x3770, 0x11f5, 0x7dd5, 0xbfef, 0x0, 0x1);
        gbc.writeMem(0x9e56, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7ed1, gbc.sp());
        EXPECT(0x9e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e56));
        EXPECT(0x18, gbc.readMem(0x9e57));
        // CB 18 0217
        gbc.setState(0xb255, 0xfb53, 0xf5c0, 0x8be4, 0xe1f3, 0xfc8f, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb255));
        EXPECT(0x18, gbc.readMem(0xb256));
        // CB 18 0218
        gbc.setState(0xe878, 0x6c6b, 0xde20, 0xd20c, 0x8579, 0xb8dc, 0x1, 0x1);
        gbc.writeMem(0xe878, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6c6b, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0x18, gbc.readMem(0xe879));
        // CB 18 0219
        gbc.setState(0xb709, 0xcdce, 0x8cb0, 0x1704, 0xa17d, 0xc687, 0x1, 0x0);
        gbc.writeMem(0xb709, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb709));
        EXPECT(0x18, gbc.readMem(0xb70a));
        // CB 18 021A
        gbc.setState(0xee15, 0x4c3d, 0x2d10, 0xa5e4, 0xdab0, 0xd971, 0x0, 0x0);
        gbc.writeMem(0xee15, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0x18, gbc.readMem(0xee16));
        // CB 18 021B
        gbc.setState(0xa83a, 0xb452, 0xc870, 0xe897, 0xa299, 0xe32e, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb452, gbc.sp());
        EXPECT(0xa83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83a));
        EXPECT(0x18, gbc.readMem(0xa83b));
        // CB 18 021C
        gbc.setState(0x2444, 0x3c56, 0xd000, 0xefb1, 0x17e6, 0x557b, 0x1, 0x0);
        gbc.writeMem(0x2444, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x2446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 021D
        gbc.setState(0xddb3, 0xe311, 0xb5f0, 0xc6ea, 0xf2c6, 0xe710, 0x0, 0x0);
        gbc.writeMem(0xddb3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe311, gbc.sp());
        EXPECT(0xddb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb3));
        EXPECT(0x18, gbc.readMem(0xddb4));
        // CB 18 021E
        gbc.setState(0x4fc4, 0x3b40, 0x9670, 0xe3fb, 0xe49a, 0xefe, 0x1, 0x1);
        gbc.writeMem(0x4fc4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 021F
        gbc.setState(0x951f, 0x2001, 0xcfb0, 0xc0f1, 0x5743, 0xbe7a, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951f));
        EXPECT(0x18, gbc.readMem(0x9520));
        // CB 18 0220
        gbc.setState(0xce1, 0x9fef, 0xfe20, 0x1802, 0xca82, 0x37bb, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9fef, gbc.sp());
        EXPECT(0xce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0221
        gbc.setState(0x1138, 0x6669, 0x2980, 0x37ad, 0xdc8e, 0xa5fd, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6669, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0222
        gbc.setState(0x3644, 0xd94d, 0xaf50, 0x2fc9, 0x5d07, 0x30a5, 0x0, 0x0);
        gbc.writeMem(0x3644, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0x3646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0223
        gbc.setState(0x5e4d, 0x5c94, 0x8310, 0x380, 0x8ff1, 0xcd60, 0x1, 0x0);
        gbc.writeMem(0x5e4d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c94, gbc.sp());
        EXPECT(0x5e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0224
        gbc.setState(0x673d, 0x74c5, 0xa120, 0xe06b, 0xb75e, 0x882f, 0x1, 0x1);
        gbc.writeMem(0x673d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x673f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0225
        gbc.setState(0xc436, 0xa025, 0x41e0, 0x1aeb, 0xc2f3, 0x4c70, 0x0, 0x1);
        gbc.writeMem(0xc436, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa025, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc436));
        EXPECT(0x18, gbc.readMem(0xc437));
        // CB 18 0226
        gbc.setState(0xa92d, 0x3a86, 0x2280, 0xec74, 0x4701, 0xeaf4, 0x1, 0x0);
        gbc.writeMem(0xa92d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0xa92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92d));
        EXPECT(0x18, gbc.readMem(0xa92e));
        // CB 18 0227
        gbc.setState(0x3598, 0xf026, 0x5bf0, 0x7b3, 0x8fd0, 0x188e, 0x1, 0x1);
        gbc.writeMem(0x3598, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf026, gbc.sp());
        EXPECT(0x359a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0228
        gbc.setState(0x7b24, 0x3f08, 0x27c0, 0x5282, 0x7ba9, 0x475c, 0x0, 0x1);
        gbc.writeMem(0x7b24, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0x7b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0229
        gbc.setState(0x9d26, 0x4659, 0x8aa0, 0xa0c8, 0x7c00, 0x8c19, 0x0, 0x1);
        gbc.writeMem(0x9d26, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0x18, gbc.readMem(0x9d27));
        // CB 18 022A
        gbc.setState(0x91f2, 0x3746, 0x75e0, 0xcad, 0x16b8, 0xcdc7, 0x0, 0x0);
        gbc.writeMem(0x91f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3746, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f2));
        EXPECT(0x18, gbc.readMem(0x91f3));
        // CB 18 022B
        gbc.setState(0x926d, 0xbadb, 0xd300, 0x2be5, 0x2ee9, 0xab7a, 0x0, 0x1);
        gbc.writeMem(0x926d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0x926f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926d));
        EXPECT(0x18, gbc.readMem(0x926e));
        // CB 18 022C
        gbc.setState(0x6f54, 0xf0e7, 0x4940, 0xe7ab, 0x2c00, 0x5fe4, 0x0, 0x0);
        gbc.writeMem(0x6f54, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 022D
        gbc.setState(0x3fff, 0xf905, 0x36e0, 0xaf71, 0x34a3, 0x8b13, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 022E
        gbc.setState(0x4068, 0xc273, 0x3770, 0xec90, 0xbcb2, 0xc9c9, 0x1, 0x0);
        gbc.writeMem(0x4068, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc273, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 022F
        gbc.setState(0x605c, 0xe9d6, 0xe360, 0x7e82, 0x3389, 0xb644, 0x0, 0x1);
        gbc.writeMem(0x605c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0230
        gbc.setState(0xdfb, 0xc9a8, 0xa300, 0xe829, 0x4c7b, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0xdfb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc9a8, gbc.sp());
        EXPECT(0xdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0231
        gbc.setState(0xa8f2, 0xfda1, 0xb280, 0xb681, 0x97c3, 0xa2b6, 0x1, 0x1);
        gbc.writeMem(0xa8f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfda1, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f2));
        EXPECT(0x18, gbc.readMem(0xa8f3));
        // CB 18 0232
        gbc.setState(0x140e, 0xeba4, 0xa6f0, 0xc812, 0x29ce, 0xe3f5, 0x0, 0x0);
        gbc.writeMem(0x140e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeba4, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0233
        gbc.setState(0x5526, 0xd895, 0x4ea0, 0xcc40, 0x6853, 0xa080, 0x0, 0x0);
        gbc.writeMem(0x5526, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x5528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0234
        gbc.setState(0xd79, 0xf19, 0x8a60, 0xeab1, 0x5db6, 0xbdfb, 0x0, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf19, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0235
        gbc.setState(0xca99, 0x21d1, 0x9320, 0x558, 0x6cf1, 0x1a24, 0x0, 0x0);
        gbc.writeMem(0xca99, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0xca9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca99));
        EXPECT(0x18, gbc.readMem(0xca9a));
        // CB 18 0236
        gbc.setState(0x4bb, 0xa131, 0x7670, 0xa5e3, 0xaaee, 0x8e17, 0x1, 0x0);
        gbc.writeMem(0x4bb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa131, gbc.sp());
        EXPECT(0x4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0237
        gbc.setState(0xa35a, 0x1232, 0x6960, 0x3678, 0x3774, 0xec7f, 0x0, 0x1);
        gbc.writeMem(0xa35a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0x18, gbc.readMem(0xa35b));
        // CB 18 0238
        gbc.setState(0xdbe, 0x77a1, 0x9f80, 0x859d, 0xd17b, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0239
        gbc.setState(0x98bb, 0x2987, 0xb620, 0xce23, 0x9b37, 0x26e6, 0x1, 0x0);
        gbc.writeMem(0x98bb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2987, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0x18, gbc.readMem(0x98bc));
        // CB 18 023B
        gbc.setState(0x5e7a, 0xa4f4, 0x11c0, 0x9936, 0xf76f, 0x548, 0x1, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa4f4, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 023C
        gbc.setState(0x8a5b, 0x65f5, 0x3060, 0xed71, 0xf72e, 0x3738, 0x1, 0x0);
        gbc.writeMem(0x8a5b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5b));
        EXPECT(0x18, gbc.readMem(0x8a5c));
        // CB 18 023D
        gbc.setState(0xf0d, 0x343c, 0xab90, 0x4cbe, 0x50e0, 0x3110, 0x0, 0x1);
        gbc.writeMem(0xf0d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x343c, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 023E
        gbc.setState(0xa551, 0x3383, 0x83a0, 0xb2ef, 0x6296, 0x2c52, 0x0, 0x1);
        gbc.writeMem(0xa551, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3383, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa551));
        EXPECT(0x18, gbc.readMem(0xa552));
        // CB 18 023F
        gbc.setState(0xa984, 0x42c1, 0xa300, 0x7f0, 0x4ddf, 0xa94f, 0x1, 0x0);
        gbc.writeMem(0xa984, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x42c1, gbc.sp());
        EXPECT(0xa986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa984));
        EXPECT(0x18, gbc.readMem(0xa985));
        // CB 18 0240
        gbc.setState(0x6068, 0xe50d, 0x6770, 0x47e8, 0xda98, 0x3e01, 0x0, 0x0);
        gbc.writeMem(0x6068, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe50d, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0241
        gbc.setState(0x7092, 0x8fea, 0xc410, 0xe75c, 0xf499, 0xc415, 0x0, 0x1);
        gbc.writeMem(0x7092, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0x7094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0242
        gbc.setState(0x5c4c, 0xf252, 0xa410, 0x499d, 0x3d7, 0xc763, 0x1, 0x1);
        gbc.writeMem(0x5c4c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0x5c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0243
        gbc.setState(0xe8ed, 0x43af, 0xfde0, 0x310f, 0x778d, 0xe353, 0x0, 0x0);
        gbc.writeMem(0xe8ed, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x43af, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ed));
        EXPECT(0x18, gbc.readMem(0xe8ee));
        // CB 18 0244
        gbc.setState(0x43f, 0xb98a, 0xb680, 0x5f11, 0x8ff6, 0x8aa6, 0x1, 0x1);
        gbc.writeMem(0x43f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb98a, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0245
        gbc.setState(0xdbeb, 0xf714, 0x850, 0xe7b7, 0x297f, 0x2382, 0x0, 0x0);
        gbc.writeMem(0xdbeb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbeb));
        EXPECT(0x18, gbc.readMem(0xdbec));
        // CB 18 0246
        gbc.setState(0x403b, 0xfb51, 0xb3a0, 0xd999, 0xe076, 0xb07, 0x1, 0x0);
        gbc.writeMem(0x403b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x403d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0247
        gbc.setState(0xd424, 0xb319, 0xbd80, 0x512b, 0xf4a5, 0x8074, 0x1, 0x0);
        gbc.writeMem(0xd424, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd424));
        EXPECT(0x18, gbc.readMem(0xd425));
        // CB 18 0248
        gbc.setState(0xcdc6, 0x9fe9, 0x710, 0x569c, 0xdb56, 0x85a4, 0x1, 0x0);
        gbc.writeMem(0xcdc6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9fe9, gbc.sp());
        EXPECT(0xcdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc6));
        EXPECT(0x18, gbc.readMem(0xcdc7));
        // CB 18 0249
        gbc.setState(0x5d2, 0x6415, 0xdd40, 0xa8a8, 0x5bd6, 0x118, 0x0, 0x0);
        gbc.writeMem(0x5d2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0x5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 024A
        gbc.setState(0x71de, 0xfb8a, 0x2a90, 0x7857, 0x8e4f, 0x347f, 0x0, 0x0);
        gbc.writeMem(0x71de, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb8a, gbc.sp());
        EXPECT(0x71e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 024B
        gbc.setState(0x74f3, 0x2aef, 0x6950, 0x352a, 0x4428, 0x43fc, 0x0, 0x1);
        gbc.writeMem(0x74f3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2aef, gbc.sp());
        EXPECT(0x74f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 024C
        gbc.setState(0x2804, 0x7711, 0xdb40, 0xb1f8, 0xa7a9, 0x1986, 0x1, 0x1);
        gbc.writeMem(0x2804, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x2806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 024D
        gbc.setState(0xdde8, 0xd27a, 0x1430, 0x7ab9, 0xad47, 0x85a5, 0x1, 0x1);
        gbc.writeMem(0xdde8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd27a, gbc.sp());
        EXPECT(0xddea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde8));
        EXPECT(0x18, gbc.readMem(0xdde9));
        // CB 18 024E
        gbc.setState(0xb1cb, 0x515e, 0x5f40, 0x5657, 0xfef1, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0xb1cb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x515e, gbc.sp());
        EXPECT(0xb1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cb));
        EXPECT(0x18, gbc.readMem(0xb1cc));
        // CB 18 024F
        gbc.setState(0x7cd0, 0x4159, 0x9720, 0x4b6c, 0xed1c, 0x248d, 0x1, 0x0);
        gbc.writeMem(0x7cd0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4159, gbc.sp());
        EXPECT(0x7cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0250
        gbc.setState(0x9680, 0x1e04, 0x8500, 0x9b44, 0x21da, 0xc8, 0x1, 0x1);
        gbc.writeMem(0x9680, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1e04, gbc.sp());
        EXPECT(0x9682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9680));
        EXPECT(0x18, gbc.readMem(0x9681));
        // CB 18 0251
        gbc.setState(0xa2cb, 0x49a8, 0x850, 0x7789, 0xc9cb, 0x8b08, 0x1, 0x1);
        gbc.writeMem(0xa2cb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x49a8, gbc.sp());
        EXPECT(0xa2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cb));
        EXPECT(0x18, gbc.readMem(0xa2cc));
        // CB 18 0252
        gbc.setState(0xc1f0, 0x6070, 0x8810, 0x7a73, 0xaa08, 0x6ee7, 0x0, 0x1);
        gbc.writeMem(0xc1f0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6070, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f0));
        EXPECT(0x18, gbc.readMem(0xc1f1));
        // CB 18 0253
        gbc.setState(0xa49d, 0xc38c, 0x40c0, 0x5e00, 0x11cb, 0x87d1, 0x1, 0x0);
        gbc.writeMem(0xa49d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0x18, gbc.readMem(0xa49e));
        // CB 18 0254
        gbc.setState(0xbf0f, 0x1541, 0xf350, 0x96d8, 0x5ed2, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0xbf0f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0f));
        EXPECT(0x18, gbc.readMem(0xbf10));
        // CB 18 0255
        gbc.setState(0x18fa, 0x1a7a, 0x45b0, 0xd92f, 0x1e1c, 0x3bb9, 0x1, 0x0);
        gbc.writeMem(0x18fa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0x18fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0256
        gbc.setState(0xd2b, 0x5aed, 0x4550, 0xc247, 0x9940, 0x4021, 0x1, 0x1);
        gbc.writeMem(0xd2b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0257
        gbc.setState(0x7589, 0x6c3d, 0x1a50, 0xfdfa, 0x7c16, 0xbc22, 0x0, 0x0);
        gbc.writeMem(0x7589, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6c3d, gbc.sp());
        EXPECT(0x758b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0258
        gbc.setState(0xda53, 0xfbf6, 0xd1b0, 0x8efe, 0x2b54, 0xba22, 0x1, 0x0);
        gbc.writeMem(0xda53, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfbf6, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda53));
        EXPECT(0x18, gbc.readMem(0xda54));
        // CB 18 0259
        gbc.setState(0x67f7, 0x8420, 0xf8f0, 0xf2b1, 0x8885, 0x39b4, 0x1, 0x1);
        gbc.writeMem(0x67f7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0x67f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 025B
        gbc.setState(0x61e3, 0x733c, 0x7dc0, 0xabf8, 0xadc8, 0x6c4b, 0x1, 0x1);
        gbc.writeMem(0x61e3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 025C
        gbc.setState(0x8705, 0x8d58, 0xf8c0, 0x2346, 0xc765, 0xa01, 0x0, 0x1);
        gbc.writeMem(0x8705, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8d58, gbc.sp());
        EXPECT(0x8707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8705));
        EXPECT(0x18, gbc.readMem(0x8706));
        // CB 18 025D
        gbc.setState(0x80a3, 0xa138, 0x2bf0, 0x4742, 0xf526, 0x879a, 0x0, 0x0);
        gbc.writeMem(0x80a3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa138, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0x18, gbc.readMem(0x80a4));
        // CB 18 025E
        gbc.setState(0x6641, 0x2705, 0xcf50, 0x19ff, 0x16de, 0x2b0a, 0x0, 0x0);
        gbc.writeMem(0x6641, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0x6643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 025F
        gbc.setState(0x90dd, 0x860f, 0x7b60, 0xeac7, 0x8c5c, 0x3028, 0x1, 0x1);
        gbc.writeMem(0x90dd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x90df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90dd));
        EXPECT(0x18, gbc.readMem(0x90de));
        // CB 18 0260
        gbc.setState(0x98fb, 0x6a7d, 0x970, 0x659d, 0xdea3, 0xf111, 0x1, 0x0);
        gbc.writeMem(0x98fb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x98fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fb));
        EXPECT(0x18, gbc.readMem(0x98fc));
        // CB 18 0261
        gbc.setState(0x6462, 0x1fef, 0xc9b0, 0xc8ca, 0x8ff3, 0x6ed2, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1fef, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0262
        gbc.setState(0x432c, 0x8019, 0xb430, 0x47b8, 0x1d23, 0x370e, 0x1, 0x0);
        gbc.writeMem(0x432c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8019, gbc.sp());
        EXPECT(0x432e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0263
        gbc.setState(0xe93d, 0x35e3, 0x3690, 0x95d4, 0x9f6c, 0x52c4, 0x0, 0x1);
        gbc.writeMem(0xe93d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x35e3, gbc.sp());
        EXPECT(0xe93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93d));
        EXPECT(0x18, gbc.readMem(0xe93e));
        // CB 18 0264
        gbc.setState(0xc3ad, 0xcb08, 0x9230, 0xa6d3, 0xd8b1, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0xc3ad, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0xc3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ad));
        EXPECT(0x18, gbc.readMem(0xc3ae));
        // CB 18 0265
        gbc.setState(0xfd2, 0x6ff1, 0x7b70, 0x8381, 0x9e5a, 0xd89c, 0x0, 0x0);
        gbc.writeMem(0xfd2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6ff1, gbc.sp());
        EXPECT(0xfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0266
        gbc.setState(0x7b8, 0x1f69, 0x58e0, 0xf8e3, 0xd836, 0xf1b7, 0x1, 0x0);
        gbc.writeMem(0x7b8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0x7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0267
        gbc.setState(0xaeca, 0x46bd, 0x5940, 0x788f, 0xd67a, 0xc125, 0x0, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeca));
        EXPECT(0x18, gbc.readMem(0xaecb));
        // CB 18 0268
        gbc.setState(0x3c23, 0xaefd, 0x6f0, 0x4450, 0xbf23, 0x7dab, 0x0, 0x1);
        gbc.writeMem(0x3c23, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0x3c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0269
        gbc.setState(0x5aa3, 0xb087, 0xbd90, 0x73bc, 0xb36b, 0xefcd, 0x0, 0x1);
        gbc.writeMem(0x5aa3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb087, gbc.sp());
        EXPECT(0x5aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 026A
        gbc.setState(0xdb88, 0xcbc3, 0x6480, 0x3833, 0x18a4, 0x489b, 0x1, 0x0);
        gbc.writeMem(0xdb88, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcbc3, gbc.sp());
        EXPECT(0xdb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb88));
        EXPECT(0x18, gbc.readMem(0xdb89));
        // CB 18 026B
        gbc.setState(0x7624, 0x2cab, 0x9c50, 0x7ea1, 0xa984, 0x492a, 0x0, 0x1);
        gbc.writeMem(0x7624, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0x7626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 026C
        gbc.setState(0x1978, 0x638c, 0xeb60, 0x697d, 0x93f3, 0x1424, 0x0, 0x0);
        gbc.writeMem(0x1978, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 026D
        gbc.setState(0x3b87, 0x32ff, 0x18a0, 0x6c3b, 0x5878, 0x8dd4, 0x0, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x32ff, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 026E
        gbc.setState(0xef9c, 0x6d45, 0x2a30, 0x7379, 0x2f0e, 0xf25c, 0x0, 0x1);
        gbc.writeMem(0xef9c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0xef9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9c));
        EXPECT(0x18, gbc.readMem(0xef9d));
        // CB 18 026F
        gbc.setState(0xeeb9, 0x30c9, 0x6a0, 0x3824, 0xe79, 0x42bd, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb9));
        EXPECT(0x18, gbc.readMem(0xeeba));
        // CB 18 0270
        gbc.setState(0x54f2, 0x62d8, 0xe640, 0x2d7e, 0xd5b6, 0x4847, 0x1, 0x0);
        gbc.writeMem(0x54f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0271
        gbc.setState(0xe7d6, 0x1330, 0x7450, 0x9f, 0x366, 0xf8d, 0x0, 0x1);
        gbc.writeMem(0xe7d6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1330, gbc.sp());
        EXPECT(0xe7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d6));
        EXPECT(0x18, gbc.readMem(0xe7d7));
        // CB 18 0272
        gbc.setState(0xb0a5, 0x1b32, 0x68e0, 0x4015, 0xa9c2, 0xcca3, 0x1, 0x0);
        gbc.writeMem(0xb0a5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a5));
        EXPECT(0x18, gbc.readMem(0xb0a6));
        // CB 18 0273
        gbc.setState(0xbe62, 0x5ae9, 0xe590, 0x2d6a, 0xc80b, 0xd34e, 0x0, 0x1);
        gbc.writeMem(0xbe62, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe62));
        EXPECT(0x18, gbc.readMem(0xbe63));
        // CB 18 0274
        gbc.setState(0xd5d7, 0xca1e, 0x53d0, 0x1f89, 0x2e75, 0x239f, 0x1, 0x0);
        gbc.writeMem(0xd5d7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0xd5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d7));
        EXPECT(0x18, gbc.readMem(0xd5d8));
        // CB 18 0275
        gbc.setState(0xec64, 0xcf1d, 0x20e0, 0x14f7, 0x5d4, 0x3f03, 0x1, 0x1);
        gbc.writeMem(0xec64, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0xec66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec64));
        EXPECT(0x18, gbc.readMem(0xec65));
        // CB 18 0276
        gbc.setState(0xaf4e, 0xa7fa, 0x36b0, 0x471c, 0xa5ab, 0x2c7c, 0x0, 0x0);
        gbc.writeMem(0xaf4e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa7fa, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4e));
        EXPECT(0x18, gbc.readMem(0xaf4f));
        // CB 18 0277
        gbc.setState(0x14af, 0x75e2, 0xada0, 0x107, 0x21ea, 0xe61c, 0x1, 0x1);
        gbc.writeMem(0x14af, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x75e2, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0278
        gbc.setState(0xc208, 0xdc29, 0xe7c0, 0xa93, 0xbb2f, 0xbce, 0x0, 0x0);
        gbc.writeMem(0xc208, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdc29, gbc.sp());
        EXPECT(0xc20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc208));
        EXPECT(0x18, gbc.readMem(0xc209));
        // CB 18 0279
        gbc.setState(0xb511, 0x6fc9, 0x7780, 0xfb91, 0xa6ab, 0xe857, 0x1, 0x0);
        gbc.writeMem(0xb511, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6fc9, gbc.sp());
        EXPECT(0xb513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb511));
        EXPECT(0x18, gbc.readMem(0xb512));
        // CB 18 027A
        gbc.setState(0x9fbf, 0x23a4, 0xbfb0, 0xbf72, 0x955c, 0x9641, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbf));
        EXPECT(0x18, gbc.readMem(0x9fc0));
        // CB 18 027B
        gbc.setState(0x2906, 0xf104, 0xee40, 0xb1f7, 0xd58c, 0xa9c1, 0x0, 0x0);
        gbc.writeMem(0x2906, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf104, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 027C
        gbc.setState(0x44d5, 0xb694, 0x6470, 0xf408, 0xcdfb, 0xa569, 0x0, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb694, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 027D
        gbc.setState(0xc4f2, 0x7467, 0xb930, 0xab9e, 0x3dc6, 0x427b, 0x1, 0x1);
        gbc.writeMem(0xc4f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7467, gbc.sp());
        EXPECT(0xc4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f2));
        EXPECT(0x18, gbc.readMem(0xc4f3));
        // CB 18 027E
        gbc.setState(0xe28c, 0x8181, 0x7740, 0x4308, 0x2c53, 0x5d0d, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8181, gbc.sp());
        EXPECT(0xe28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28c));
        EXPECT(0x18, gbc.readMem(0xe28d));
        // CB 18 027F
        gbc.setState(0x9284, 0xb409, 0xcf80, 0xd9f, 0xf7bf, 0x7038, 0x1, 0x0);
        gbc.writeMem(0x9284, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb409, gbc.sp());
        EXPECT(0x9286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9284));
        EXPECT(0x18, gbc.readMem(0x9285));
        // CB 18 0280
        gbc.setState(0xae91, 0x7324, 0x5c90, 0x998b, 0xb3d9, 0x718f, 0x0, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7324, gbc.sp());
        EXPECT(0xae93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae91));
        EXPECT(0x18, gbc.readMem(0xae92));
        // CB 18 0281
        gbc.setState(0x8515, 0x33cf, 0x4f0, 0x8534, 0xdfd5, 0xeafc, 0x0, 0x1);
        gbc.writeMem(0x8515, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8515));
        EXPECT(0x18, gbc.readMem(0x8516));
        // CB 18 0282
        gbc.setState(0x991b, 0x7fd7, 0xbbf0, 0xb86c, 0xe0af, 0x3d80, 0x1, 0x1);
        gbc.writeMem(0x991b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7fd7, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991b));
        EXPECT(0x18, gbc.readMem(0x991c));
        // CB 18 0283
        gbc.setState(0xbaba, 0xd700, 0x5ab0, 0x39d4, 0x19ea, 0x58ae, 0x1, 0x1);
        gbc.writeMem(0xbaba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd700, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaba));
        EXPECT(0x18, gbc.readMem(0xbabb));
        // CB 18 0284
        gbc.setState(0x42d4, 0x76e6, 0x8020, 0x1f4b, 0x9c5, 0x1778, 0x1, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0285
        gbc.setState(0xbcf1, 0x3d02, 0x8b10, 0xf3e5, 0x6bb9, 0x3a40, 0x1, 0x1);
        gbc.writeMem(0xbcf1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3d02, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf1));
        EXPECT(0x18, gbc.readMem(0xbcf2));
        // CB 18 0286
        gbc.setState(0x6cce, 0xa015, 0xe370, 0xdf90, 0x674c, 0xde9d, 0x1, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0287
        gbc.setState(0x5c56, 0x758a, 0x4550, 0x46fa, 0xa780, 0xecd4, 0x1, 0x0);
        gbc.writeMem(0x5c56, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x758a, gbc.sp());
        EXPECT(0x5c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0288
        gbc.setState(0x7e8, 0xcda7, 0x4030, 0xbda4, 0x8ebd, 0x6582, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0289
        gbc.setState(0x87c9, 0xe305, 0xb3e0, 0xff4d, 0x3b2d, 0x48c6, 0x1, 0x1);
        gbc.writeMem(0x87c9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0x87cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c9));
        EXPECT(0x18, gbc.readMem(0x87ca));
        // CB 18 028A
        gbc.setState(0x463c, 0x52b9, 0x6ef0, 0xf340, 0x932e, 0x247a, 0x0, 0x0);
        gbc.writeMem(0x463c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 028B
        gbc.setState(0x1ac9, 0xe7da, 0x67b0, 0x9539, 0xfd21, 0xc1e2, 0x1, 0x1);
        gbc.writeMem(0x1ac9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0x1acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 028C
        gbc.setState(0x55f7, 0x277a, 0x9260, 0xd9ce, 0x9eb3, 0x1ffd, 0x1, 0x0);
        gbc.writeMem(0x55f7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x277a, gbc.sp());
        EXPECT(0x55f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 028D
        gbc.setState(0x2823, 0x4fbe, 0xc7e0, 0xbd9d, 0x82c6, 0xd614, 0x0, 0x0);
        gbc.writeMem(0x2823, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fbe, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 028E
        gbc.setState(0x91b9, 0xfdbc, 0xae70, 0x9653, 0xa127, 0x42c5, 0x0, 0x1);
        gbc.writeMem(0x91b9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfdbc, gbc.sp());
        EXPECT(0x91bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b9));
        EXPECT(0x18, gbc.readMem(0x91ba));
        // CB 18 028F
        gbc.setState(0xd0c3, 0x1618, 0xf3e0, 0x7a28, 0x1b1f, 0xddba, 0x0, 0x1);
        gbc.writeMem(0xd0c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0xd0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c3));
        EXPECT(0x18, gbc.readMem(0xd0c4));
        // CB 18 0290
        gbc.setState(0xa2d, 0x4792, 0x5580, 0xb230, 0xa172, 0xe3c9, 0x1, 0x1);
        gbc.writeMem(0xa2d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4792, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0291
        gbc.setState(0xe5af, 0xf03, 0xa9c0, 0xaf99, 0x5de, 0x420b, 0x0, 0x0);
        gbc.writeMem(0xe5af, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0xe5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5af));
        EXPECT(0x18, gbc.readMem(0xe5b0));
        // CB 18 0292
        gbc.setState(0xf5b, 0x4ecf, 0x59a0, 0xd70b, 0x745f, 0xf2cc, 0x1, 0x1);
        gbc.writeMem(0xf5b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4ecf, gbc.sp());
        EXPECT(0xf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0293
        gbc.setState(0x6a82, 0xa589, 0x1a60, 0x5dc5, 0x7112, 0x529b, 0x0, 0x1);
        gbc.writeMem(0x6a82, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa589, gbc.sp());
        EXPECT(0x6a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0294
        gbc.setState(0xcf7a, 0x847f, 0x36a0, 0xc0ac, 0x43b, 0xda8a, 0x1, 0x1);
        gbc.writeMem(0xcf7a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7a));
        EXPECT(0x18, gbc.readMem(0xcf7b));
        // CB 18 0295
        gbc.setState(0x4d80, 0x157f, 0x3980, 0xf1bd, 0x59a6, 0xdf1c, 0x0, 0x0);
        gbc.writeMem(0x4d80, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x157f, gbc.sp());
        EXPECT(0x4d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0297
        gbc.setState(0x48a, 0xac4f, 0xa640, 0xc31b, 0x4bc9, 0xb669, 0x1, 0x0);
        gbc.writeMem(0x48a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0298
        gbc.setState(0xda4d, 0x8c6c, 0x47b0, 0x4fbd, 0x6dbd, 0xf29f, 0x0, 0x1);
        gbc.writeMem(0xda4d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c6c, gbc.sp());
        EXPECT(0xda4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4d));
        EXPECT(0x18, gbc.readMem(0xda4e));
        // CB 18 0299
        gbc.setState(0x3cf7, 0xddc0, 0xb3e0, 0xb7f8, 0x1519, 0x9b59, 0x0, 0x0);
        gbc.writeMem(0x3cf7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 029A
        gbc.setState(0x1301, 0x1450, 0xf40, 0x3096, 0x5082, 0xc417, 0x0, 0x0);
        gbc.writeMem(0x1301, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 029B
        gbc.setState(0xd8d0, 0x2b80, 0x84f0, 0xe098, 0x8af3, 0xb86f, 0x1, 0x1);
        gbc.writeMem(0xd8d0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2b80, gbc.sp());
        EXPECT(0xd8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d0));
        EXPECT(0x18, gbc.readMem(0xd8d1));
        // CB 18 029C
        gbc.setState(0xc52a, 0x2099, 0xffe0, 0xeb1c, 0x42da, 0x8aca, 0x1, 0x1);
        gbc.writeMem(0xc52a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2099, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52a));
        EXPECT(0x18, gbc.readMem(0xc52b));
        // CB 18 029D
        gbc.setState(0x5335, 0xf4b3, 0x83b0, 0xae03, 0x87e7, 0x870a, 0x0, 0x0);
        gbc.writeMem(0x5335, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf4b3, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 029E
        gbc.setState(0x774, 0xbe71, 0x2470, 0x9d31, 0xf4de, 0x2025, 0x1, 0x1);
        gbc.writeMem(0x774, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbe71, gbc.sp());
        EXPECT(0x776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 029F
        gbc.setState(0xa000, 0x76ed, 0x9ec0, 0xcd41, 0xd8a, 0xac28, 0x1, 0x1);
        gbc.writeMem(0xa000, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0x18, gbc.readMem(0xa001));
        // CB 18 02A0
        gbc.setState(0xb0ae, 0xad94, 0x76f0, 0x9621, 0x4b3b, 0x4999, 0x1, 0x1);
        gbc.writeMem(0xb0ae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xad94, gbc.sp());
        EXPECT(0xb0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ae));
        EXPECT(0x18, gbc.readMem(0xb0af));
        // CB 18 02A1
        gbc.setState(0xc068, 0xcc1b, 0x1c30, 0xa977, 0xed04, 0xca1a, 0x0, 0x0);
        gbc.writeMem(0xc068, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc1b, gbc.sp());
        EXPECT(0xc06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc068));
        EXPECT(0x18, gbc.readMem(0xc069));
        // CB 18 02A2
        gbc.setState(0x3a84, 0xd5db, 0x1720, 0x15c0, 0x3e05, 0xd552, 0x1, 0x0);
        gbc.writeMem(0x3a84, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd5db, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02A3
        gbc.setState(0x761, 0x48f5, 0x15d0, 0x16f7, 0x1a0d, 0xb7c5, 0x1, 0x0);
        gbc.writeMem(0x761, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x48f5, gbc.sp());
        EXPECT(0x763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02A4
        gbc.setState(0x2793, 0x5dc4, 0xd7c0, 0xa9a, 0x1be3, 0xf72e, 0x1, 0x0);
        gbc.writeMem(0x2793, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02A5
        gbc.setState(0x4b48, 0x1c3a, 0x78e0, 0x8184, 0xef90, 0xdf5e, 0x1, 0x1);
        gbc.writeMem(0x4b48, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1c3a, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02A6
        gbc.setState(0x65a4, 0x2162, 0xfef0, 0x854c, 0x232d, 0x3d93, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02A7
        gbc.setState(0x59e6, 0x592b, 0xfe70, 0xdd0c, 0x16a, 0xb9d7, 0x1, 0x0);
        gbc.writeMem(0x59e6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x592b, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02A8
        gbc.setState(0xb3a8, 0xe6e6, 0x3c70, 0x3475, 0x7fa0, 0xa425, 0x1, 0x0);
        gbc.writeMem(0xb3a8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe6e6, gbc.sp());
        EXPECT(0xb3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a8));
        EXPECT(0x18, gbc.readMem(0xb3a9));
        // CB 18 02A9
        gbc.setState(0x25f3, 0xf5bf, 0xa680, 0x56fb, 0x42e4, 0x7dca, 0x1, 0x1);
        gbc.writeMem(0x25f3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf5bf, gbc.sp());
        EXPECT(0x25f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02AA
        gbc.setState(0x5248, 0x55e, 0x70a0, 0xb529, 0x7bcb, 0xdac6, 0x1, 0x1);
        gbc.writeMem(0x5248, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0x524a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02AB
        gbc.setState(0x41f2, 0xc92f, 0xe360, 0x9c1b, 0xc9d8, 0x4b34, 0x0, 0x1);
        gbc.writeMem(0x41f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02AC
        gbc.setState(0xa24, 0x3f72, 0x5830, 0x44ef, 0x6d2b, 0xca5e, 0x1, 0x1);
        gbc.writeMem(0xa24, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3f72, gbc.sp());
        EXPECT(0xa26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02AD
        gbc.setState(0x20ae, 0xeac0, 0xeb70, 0x3eae, 0xecc6, 0xfabe, 0x1, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0x20b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02AE
        gbc.setState(0x903e, 0x9ae1, 0x53d0, 0x5d60, 0xc73e, 0x78b2, 0x1, 0x1);
        gbc.writeMem(0x903e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0x9040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903e));
        EXPECT(0x18, gbc.readMem(0x903f));
        // CB 18 02B0
        gbc.setState(0x61b3, 0x35d7, 0x6f70, 0xf916, 0x73ae, 0x6126, 0x0, 0x1);
        gbc.writeMem(0x61b3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0x61b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02B1
        gbc.setState(0x53fa, 0x98e9, 0xe60, 0xb5a5, 0xb9a8, 0x44ee, 0x0, 0x0);
        gbc.writeMem(0x53fa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x98e9, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02B2
        gbc.setState(0x533f, 0xbb0, 0x9bb0, 0x8d9b, 0x7c40, 0xb4ce, 0x0, 0x0);
        gbc.writeMem(0x533f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbb0, gbc.sp());
        EXPECT(0x5341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02B3
        gbc.setState(0x9309, 0xae04, 0xa480, 0x112d, 0xe23c, 0xd7c5, 0x1, 0x1);
        gbc.writeMem(0x9309, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xae04, gbc.sp());
        EXPECT(0x930b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9309));
        EXPECT(0x18, gbc.readMem(0x930a));
        // CB 18 02B4
        gbc.setState(0x6a98, 0xb235, 0xce40, 0x9c57, 0x3a9d, 0x6dc8, 0x0, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb235, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02B5
        gbc.setState(0xee03, 0xb432, 0x1ca0, 0x695b, 0x1fb9, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0xee03, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb432, gbc.sp());
        EXPECT(0xee05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee03));
        EXPECT(0x18, gbc.readMem(0xee04));
        // CB 18 02B6
        gbc.setState(0x7b28, 0x73b, 0xfbc0, 0xa2, 0x66fd, 0x1a74, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02B7
        gbc.setState(0x3342, 0xc787, 0xcee0, 0xfcf1, 0x72dd, 0x80ce, 0x1, 0x1);
        gbc.writeMem(0x3342, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc787, gbc.sp());
        EXPECT(0x3344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02B8
        gbc.setState(0x78d5, 0x212a, 0x9a30, 0x7687, 0xcaec, 0xaa30, 0x0, 0x1);
        gbc.writeMem(0x78d5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02B9
        gbc.setState(0xd46a, 0x343d, 0x2b20, 0x6a5a, 0x2e94, 0xf0c, 0x1, 0x0);
        gbc.writeMem(0xd46a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0x18, gbc.readMem(0xd46b));
        // CB 18 02BA
        gbc.setState(0xce6d, 0x6c2a, 0x9700, 0xb9fb, 0x9aba, 0xfe7b, 0x1, 0x1);
        gbc.writeMem(0xce6d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6c2a, gbc.sp());
        EXPECT(0xce6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6d));
        EXPECT(0x18, gbc.readMem(0xce6e));
        // CB 18 02BB
        gbc.setState(0x8975, 0x3a2f, 0xf8b0, 0xdd72, 0xbe14, 0x905d, 0x0, 0x0);
        gbc.writeMem(0x8975, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3a2f, gbc.sp());
        EXPECT(0x8977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8975));
        EXPECT(0x18, gbc.readMem(0x8976));
        // CB 18 02BC
        gbc.setState(0x3273, 0xf304, 0xc760, 0xcc0e, 0xc767, 0x9323, 0x1, 0x0);
        gbc.writeMem(0x3273, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0x3275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02BD
        gbc.setState(0xd5ac, 0x69c9, 0x6080, 0x96fc, 0x4210, 0xb93a, 0x1, 0x0);
        gbc.writeMem(0xd5ac, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x69c9, gbc.sp());
        EXPECT(0xd5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ac));
        EXPECT(0x18, gbc.readMem(0xd5ad));
        // CB 18 02BE
        gbc.setState(0x1134, 0x5b04, 0x86b0, 0x88da, 0x9c95, 0x3243, 0x1, 0x1);
        gbc.writeMem(0x1134, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5b04, gbc.sp());
        EXPECT(0x1136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02BF
        gbc.setState(0x1934, 0x6dbb, 0x1690, 0xf676, 0x2993, 0x2758, 0x0, 0x1);
        gbc.writeMem(0x1934, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6dbb, gbc.sp());
        EXPECT(0x1936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02C0
        gbc.setState(0xe340, 0xd380, 0xfa70, 0xf4be, 0x7412, 0x3685, 0x1, 0x0);
        gbc.writeMem(0xe340, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd380, gbc.sp());
        EXPECT(0xe342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe340));
        EXPECT(0x18, gbc.readMem(0xe341));
        // CB 18 02C1
        gbc.setState(0x63b1, 0xbf41, 0xcd40, 0xa1e8, 0xd30e, 0x3794, 0x1, 0x0);
        gbc.writeMem(0x63b1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbf41, gbc.sp());
        EXPECT(0x63b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02C2
        gbc.setState(0xb892, 0x7577, 0x7000, 0xaf03, 0x7382, 0x3a29, 0x0, 0x0);
        gbc.writeMem(0xb892, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7577, gbc.sp());
        EXPECT(0xb894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb892));
        EXPECT(0x18, gbc.readMem(0xb893));
        // CB 18 02C3
        gbc.setState(0x8790, 0xba68, 0x1b0, 0xf329, 0x4729, 0x88b, 0x0, 0x0);
        gbc.writeMem(0x8790, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0x8792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8790));
        EXPECT(0x18, gbc.readMem(0x8791));
        // CB 18 02C4
        gbc.setState(0x1d21, 0x8a45, 0x5d20, 0xa252, 0x74fa, 0x4b5e, 0x0, 0x1);
        gbc.writeMem(0x1d21, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02C5
        gbc.setState(0x6c33, 0xd49b, 0xeb50, 0x9de9, 0x5a91, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x6c33, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd49b, gbc.sp());
        EXPECT(0x6c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02C6
        gbc.setState(0xb8da, 0x4be2, 0xb280, 0xb1c5, 0xfc99, 0x10aa, 0x0, 0x0);
        gbc.writeMem(0xb8da, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4be2, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8da));
        EXPECT(0x18, gbc.readMem(0xb8db));
        // CB 18 02C7
        gbc.setState(0x9a93, 0xf176, 0x39b0, 0x5018, 0xf38, 0xdc24, 0x1, 0x0);
        gbc.writeMem(0x9a93, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0x9a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a93));
        EXPECT(0x18, gbc.readMem(0x9a94));
        // CB 18 02C8
        gbc.setState(0xaeaa, 0xaddf, 0x870, 0x3df6, 0x528c, 0xe7ee, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaddf, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaa));
        EXPECT(0x18, gbc.readMem(0xaeab));
        // CB 18 02C9
        gbc.setState(0xda12, 0x651b, 0xab0, 0xb3e2, 0x4e1f, 0xdb1f, 0x1, 0x1);
        gbc.writeMem(0xda12, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0xda14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda12));
        EXPECT(0x18, gbc.readMem(0xda13));
        // CB 18 02CA
        gbc.setState(0xb690, 0xb65b, 0x51e0, 0x1fbe, 0x99ec, 0x6b63, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb690));
        EXPECT(0x18, gbc.readMem(0xb691));
        // CB 18 02CB
        gbc.setState(0xe99a, 0x89ed, 0x2220, 0x6dd0, 0x6ced, 0x473d, 0x1, 0x0);
        gbc.writeMem(0xe99a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x89ed, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99a));
        EXPECT(0x18, gbc.readMem(0xe99b));
        // CB 18 02CC
        gbc.setState(0x6839, 0x8f81, 0xc460, 0x50bc, 0xbe76, 0x6374, 0x0, 0x1);
        gbc.writeMem(0x6839, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8f81, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02CD
        gbc.setState(0xe84b, 0xe7e5, 0xcbc0, 0xfc61, 0x7ba3, 0xa140, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe7e5, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84b));
        EXPECT(0x18, gbc.readMem(0xe84c));
        // CB 18 02CE
        gbc.setState(0x6941, 0x8b27, 0x80a0, 0xa53c, 0x4185, 0x8393, 0x1, 0x1);
        gbc.writeMem(0x6941, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b27, gbc.sp());
        EXPECT(0x6943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02CF
        gbc.setState(0x2a50, 0xe555, 0x7fe0, 0x6a49, 0x1dd5, 0xf590, 0x1, 0x0);
        gbc.writeMem(0x2a50, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02D0
        gbc.setState(0xdf97, 0x1b69, 0xa750, 0xb71b, 0xedae, 0x82f4, 0x1, 0x1);
        gbc.writeMem(0xdf97, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1b69, gbc.sp());
        EXPECT(0xdf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf97));
        EXPECT(0x18, gbc.readMem(0xdf98));
        // CB 18 02D1
        gbc.setState(0x960, 0x43d5, 0xfd40, 0x935c, 0x3958, 0x963e, 0x0, 0x0);
        gbc.writeMem(0x960, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x43d5, gbc.sp());
        EXPECT(0x962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02D2
        gbc.setState(0xa984, 0x1466, 0x5060, 0x19be, 0x4ab3, 0x10e8, 0x1, 0x1);
        gbc.writeMem(0xa984, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0xa986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa984));
        EXPECT(0x18, gbc.readMem(0xa985));
        // CB 18 02D3
        gbc.setState(0xc993, 0xca4e, 0xe520, 0x724, 0xff5a, 0x4204, 0x0, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0xc995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc993));
        EXPECT(0x18, gbc.readMem(0xc994));
        // CB 18 02D4
        gbc.setState(0x3939, 0x13f5, 0x8cf0, 0xcd35, 0xadb1, 0x872c, 0x1, 0x1);
        gbc.writeMem(0x3939, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x13f5, gbc.sp());
        EXPECT(0x393b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02D5
        gbc.setState(0x2cb1, 0x2d5c, 0x6440, 0x905d, 0xd4b9, 0x39c8, 0x0, 0x0);
        gbc.writeMem(0x2cb1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x2cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02D6
        gbc.setState(0x3c4c, 0x9393, 0x9880, 0xe931, 0xbdb, 0x7de6, 0x0, 0x0);
        gbc.writeMem(0x3c4c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0x3c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02D7
        gbc.setState(0x6dd2, 0x9e1a, 0xd830, 0x8c37, 0x8a2c, 0xca6b, 0x0, 0x0);
        gbc.writeMem(0x6dd2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9e1a, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02D8
        gbc.setState(0xa959, 0x5894, 0x8b40, 0x8d15, 0x5c34, 0x2dcf, 0x0, 0x0);
        gbc.writeMem(0xa959, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5894, gbc.sp());
        EXPECT(0xa95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa959));
        EXPECT(0x18, gbc.readMem(0xa95a));
        // CB 18 02D9
        gbc.setState(0x250a, 0x3777, 0x3b90, 0x1cdf, 0x26b1, 0xd113, 0x1, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3777, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02DA
        gbc.setState(0x673a, 0xfdee, 0x37f0, 0x4b5f, 0xd44e, 0x852d, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02DB
        gbc.setState(0xc135, 0x7bdb, 0x4760, 0x7950, 0x1c, 0xc63b, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7bdb, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0x18, gbc.readMem(0xc136));
        // CB 18 02DC
        gbc.setState(0x142e, 0x7185, 0xff60, 0x67d5, 0x6927, 0xc87, 0x1, 0x0);
        gbc.writeMem(0x142e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7185, gbc.sp());
        EXPECT(0x1430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02DD
        gbc.setState(0x3d11, 0xca62, 0x19f0, 0x4977, 0x979d, 0x2cb6, 0x1, 0x1);
        gbc.writeMem(0x3d11, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x3d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02DE
        gbc.setState(0xd404, 0x1573, 0x81f0, 0xc3fd, 0xf35f, 0x354b, 0x0, 0x1);
        gbc.writeMem(0xd404, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1573, gbc.sp());
        EXPECT(0xd406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd404));
        EXPECT(0x18, gbc.readMem(0xd405));
        // CB 18 02DF
        gbc.setState(0xba5e, 0x8169, 0xb8e0, 0x333e, 0xa788, 0xc3f3, 0x1, 0x1);
        gbc.writeMem(0xba5e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0xba60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5e));
        EXPECT(0x18, gbc.readMem(0xba5f));
        // CB 18 02E0
        gbc.setState(0x8ad6, 0x3f45, 0x620, 0x336e, 0xbd, 0x19b4, 0x0, 0x1);
        gbc.writeMem(0x8ad6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3f45, gbc.sp());
        EXPECT(0x8ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad6));
        EXPECT(0x18, gbc.readMem(0x8ad7));
        // CB 18 02E1
        gbc.setState(0x48b1, 0x86d4, 0x6880, 0x972b, 0xc50, 0xdd0b, 0x0, 0x0);
        gbc.writeMem(0x48b1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x86d4, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02E2
        gbc.setState(0x7f14, 0x8e42, 0xaf10, 0xa358, 0x8bf7, 0x5694, 0x1, 0x0);
        gbc.writeMem(0x7f14, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x7f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02E3
        gbc.setState(0xe522, 0x5b98, 0x4ec0, 0x5859, 0x2429, 0x8c1e, 0x0, 0x0);
        gbc.writeMem(0xe522, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe522));
        EXPECT(0x18, gbc.readMem(0xe523));
        // CB 18 02E4
        gbc.setState(0xbcbc, 0x9869, 0x2640, 0x1680, 0x739, 0x5d69, 0x0, 0x0);
        gbc.writeMem(0xbcbc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9869, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbc));
        EXPECT(0x18, gbc.readMem(0xbcbd));
        // CB 18 02E5
        gbc.setState(0xb74e, 0xdb14, 0x7d00, 0xfc9d, 0x929a, 0xcab6, 0x1, 0x1);
        gbc.writeMem(0xb74e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb14, gbc.sp());
        EXPECT(0xb750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74e));
        EXPECT(0x18, gbc.readMem(0xb74f));
        // CB 18 02E6
        gbc.setState(0x6d63, 0x8bd1, 0x52e0, 0xec94, 0x393f, 0x8e4f, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8bd1, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02E7
        gbc.setState(0xca04, 0x10c0, 0x7c40, 0x95e3, 0x4524, 0xd213, 0x0, 0x1);
        gbc.writeMem(0xca04, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca04));
        EXPECT(0x18, gbc.readMem(0xca05));
        // CB 18 02E8
        gbc.setState(0x4926, 0x8ed4, 0xa080, 0xc6b2, 0xa40b, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x4926, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0x4928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02E9
        gbc.setState(0x8662, 0x4f45, 0x7be0, 0x6dcb, 0x6e47, 0x9182, 0x0, 0x1);
        gbc.writeMem(0x8662, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4f45, gbc.sp());
        EXPECT(0x8664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8662));
        EXPECT(0x18, gbc.readMem(0x8663));
        // CB 18 02EA
        gbc.setState(0x4e13, 0xb50d, 0xb740, 0xc757, 0x2714, 0xb8b0, 0x1, 0x1);
        gbc.writeMem(0x4e13, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0x4e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02EB
        gbc.setState(0xc653, 0x4d2c, 0xf8b0, 0x52c1, 0x190a, 0xaa83, 0x0, 0x1);
        gbc.writeMem(0xc653, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d2c, gbc.sp());
        EXPECT(0xc655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc653));
        EXPECT(0x18, gbc.readMem(0xc654));
        // CB 18 02EC
        gbc.setState(0xefa3, 0x2d88, 0xa110, 0xb18a, 0xdaea, 0xd799, 0x0, 0x0);
        gbc.writeMem(0xefa3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2d88, gbc.sp());
        EXPECT(0xefa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa3));
        EXPECT(0x18, gbc.readMem(0xefa4));
        // CB 18 02ED
        gbc.setState(0xe50b, 0xe671, 0x1a10, 0xbcb2, 0xa1dc, 0x1af, 0x0, 0x0);
        gbc.writeMem(0xe50b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0xe50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50b));
        EXPECT(0x18, gbc.readMem(0xe50c));
        // CB 18 02EE
        gbc.setState(0x2fec, 0x2732, 0xde90, 0x6290, 0xb3a1, 0x39c2, 0x0, 0x1);
        gbc.writeMem(0x2fec, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2732, gbc.sp());
        EXPECT(0x2fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02EF
        gbc.setState(0xd757, 0xb96, 0x34f0, 0x367c, 0x18dc, 0x13fc, 0x0, 0x1);
        gbc.writeMem(0xd757, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb96, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd757));
        EXPECT(0x18, gbc.readMem(0xd758));
        // CB 18 02F0
        gbc.setState(0xb7eb, 0x20d2, 0xd650, 0xd838, 0x18f, 0x7eb3, 0x1, 0x0);
        gbc.writeMem(0xb7eb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x20d2, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7eb));
        EXPECT(0x18, gbc.readMem(0xb7ec));
        // CB 18 02F1
        gbc.setState(0xda2f, 0xb929, 0x40d0, 0xfd8, 0x33fc, 0x18f0, 0x1, 0x0);
        gbc.writeMem(0xda2f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0xda31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2f));
        EXPECT(0x18, gbc.readMem(0xda30));
        // CB 18 02F2
        gbc.setState(0x232d, 0x8385, 0x7340, 0x2d1b, 0xb961, 0x39a0, 0x0, 0x0);
        gbc.writeMem(0x232d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8385, gbc.sp());
        EXPECT(0x232f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02F3
        gbc.setState(0x212c, 0x8ef6, 0x23d0, 0xe73a, 0xc785, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x212c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02F4
        gbc.setState(0xaa59, 0x389c, 0x8470, 0xf643, 0x2843, 0x8374, 0x1, 0x0);
        gbc.writeMem(0xaa59, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa59));
        EXPECT(0x18, gbc.readMem(0xaa5a));
        // CB 18 02F5
        gbc.setState(0x55ca, 0x9b08, 0xf320, 0xed48, 0xb249, 0xedc6, 0x1, 0x1);
        gbc.writeMem(0x55ca, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02F6
        gbc.setState(0x18f9, 0x6d0b, 0x47f0, 0xe0c8, 0x942d, 0x6e0f, 0x1, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6d0b, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02F7
        gbc.setState(0x6c26, 0xe525, 0x8f10, 0xd95, 0x29b5, 0xe048, 0x0, 0x0);
        gbc.writeMem(0x6c26, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe525, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02F8
        gbc.setState(0x6ceb, 0xb549, 0xdd00, 0xa376, 0xdb21, 0x8b9b, 0x1, 0x0);
        gbc.writeMem(0x6ceb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02F9
        gbc.setState(0x5e12, 0x4558, 0xdca0, 0x8a16, 0x977c, 0xdfe9, 0x0, 0x1);
        gbc.writeMem(0x5e12, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 02FA
        gbc.setState(0xd9b2, 0x49a7, 0xeb50, 0x8248, 0x2186, 0x1ed2, 0x1, 0x0);
        gbc.writeMem(0xd9b2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x49a7, gbc.sp());
        EXPECT(0xd9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b2));
        EXPECT(0x18, gbc.readMem(0xd9b3));
        // CB 18 02FB
        gbc.setState(0x997b, 0x30f9, 0xea10, 0x59b7, 0x1880, 0xdd0c, 0x1, 0x1);
        gbc.writeMem(0x997b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x30f9, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0x18, gbc.readMem(0x997c));
        // CB 18 02FC
        gbc.setState(0x756f, 0x5372, 0xc910, 0xdf2, 0x6198, 0x3b3b, 0x0, 0x1);
        gbc.writeMem(0x756f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5372, gbc.sp());
        EXPECT(0x7571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02FD
        gbc.setState(0x63b4, 0x125c, 0x5c20, 0x1557, 0xdc98, 0xd4a3, 0x0, 0x1);
        gbc.writeMem(0x63b4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x125c, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02FE
        gbc.setState(0x2d50, 0xd498, 0x6480, 0x4f2b, 0x800d, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x2d50, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd498, gbc.sp());
        EXPECT(0x2d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 02FF
        gbc.setState(0x36ad, 0xfc9c, 0x86b0, 0x95cf, 0x9f2a, 0x84e8, 0x1, 0x0);
        gbc.writeMem(0x36ad, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfc9c, gbc.sp());
        EXPECT(0x36af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0300
        gbc.setState(0xd08e, 0x9c31, 0x7870, 0x4e42, 0x2c28, 0xdeef, 0x1, 0x0);
        gbc.writeMem(0xd08e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0xd090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08e));
        EXPECT(0x18, gbc.readMem(0xd08f));
        // CB 18 0301
        gbc.setState(0x29a6, 0x5b86, 0xe3e0, 0x825a, 0xa1e, 0x880b, 0x0, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5b86, gbc.sp());
        EXPECT(0x29a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0302
        gbc.setState(0x6f6e, 0x162d, 0xda0, 0x7046, 0x8e2, 0x8fc4, 0x0, 0x1);
        gbc.writeMem(0x6f6e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x6f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0303
        gbc.setState(0x5526, 0x2915, 0x3f40, 0xa941, 0x50b6, 0x133c, 0x0, 0x0);
        gbc.writeMem(0x5526, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0x5528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0304
        gbc.setState(0xee60, 0x2d9e, 0x760, 0x301e, 0x694d, 0x35e9, 0x1, 0x1);
        gbc.writeMem(0xee60, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2d9e, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0x18, gbc.readMem(0xee61));
        // CB 18 0305
        gbc.setState(0x4cb3, 0x364f, 0xf000, 0x8397, 0x6706, 0x7b02, 0x1, 0x0);
        gbc.writeMem(0x4cb3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0x4cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0306
        gbc.setState(0x5083, 0x9f33, 0x58d0, 0xc4bb, 0x3d91, 0xb34c, 0x1, 0x1);
        gbc.writeMem(0x5083, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9f33, gbc.sp());
        EXPECT(0x5085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0307
        gbc.setState(0x6e59, 0x48a, 0x1750, 0xb12, 0xae2b, 0x28dc, 0x0, 0x1);
        gbc.writeMem(0x6e59, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x48a, gbc.sp());
        EXPECT(0x6e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0308
        gbc.setState(0xea0f, 0x64df, 0x2260, 0x1827, 0x7724, 0xd45, 0x0, 0x0);
        gbc.writeMem(0xea0f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0xea11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0f));
        EXPECT(0x18, gbc.readMem(0xea10));
        // CB 18 0309
        gbc.setState(0x17bc, 0x1205, 0xfa30, 0x58d7, 0xb853, 0xe6ec, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1205, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 030A
        gbc.setState(0xc131, 0x7121, 0xa8b0, 0xcebb, 0x7151, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0xc131, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7121, gbc.sp());
        EXPECT(0xc133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc131));
        EXPECT(0x18, gbc.readMem(0xc132));
        // CB 18 030B
        gbc.setState(0xe660, 0x119a, 0xdc90, 0xa72c, 0x2aaa, 0x7020, 0x1, 0x1);
        gbc.writeMem(0xe660, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe660));
        EXPECT(0x18, gbc.readMem(0xe661));
        // CB 18 030C
        gbc.setState(0xd1b9, 0x710a, 0x9b10, 0x930f, 0x7b03, 0x63bb, 0x0, 0x0);
        gbc.writeMem(0xd1b9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0xd1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b9));
        EXPECT(0x18, gbc.readMem(0xd1ba));
        // CB 18 030E
        gbc.setState(0xdb8d, 0x6659, 0x5890, 0x8916, 0xc7a0, 0x9ebc, 0x1, 0x0);
        gbc.writeMem(0xdb8d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8d));
        EXPECT(0x18, gbc.readMem(0xdb8e));
        // CB 18 030F
        gbc.setState(0xb502, 0x39e1, 0xd1e0, 0x87e1, 0xdde4, 0xe906, 0x0, 0x1);
        gbc.writeMem(0xb502, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x39e1, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0x18, gbc.readMem(0xb503));
        // CB 18 0310
        gbc.setState(0x335d, 0x5d73, 0x1b00, 0xdaa3, 0xe892, 0x70fd, 0x1, 0x1);
        gbc.writeMem(0x335d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x335f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0311
        gbc.setState(0x815b, 0x4ea8, 0x9010, 0xaa47, 0xde40, 0x4e2e, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4ea8, gbc.sp());
        EXPECT(0x815d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815b));
        EXPECT(0x18, gbc.readMem(0x815c));
        // CB 18 0312
        gbc.setState(0xae0f, 0xc45b, 0x41d0, 0x8e47, 0xf228, 0xf873, 0x0, 0x0);
        gbc.writeMem(0xae0f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0x18, gbc.readMem(0xae10));
        // CB 18 0313
        gbc.setState(0x52cf, 0xc170, 0x8580, 0xa250, 0x6aac, 0xa89b, 0x0, 0x0);
        gbc.writeMem(0x52cf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0314
        gbc.setState(0x404f, 0x48c5, 0x61f0, 0x6ac8, 0x3e4, 0x4930, 0x0, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x48c5, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0315
        gbc.setState(0x3ff1, 0x418, 0xe250, 0xc53e, 0x3313, 0x43ed, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0316
        gbc.setState(0xde49, 0xb490, 0xb680, 0x9171, 0x6463, 0x62d, 0x0, 0x0);
        gbc.writeMem(0xde49, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb490, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde49));
        EXPECT(0x18, gbc.readMem(0xde4a));
        // CB 18 0317
        gbc.setState(0xd1ca, 0x3f86, 0xb3a0, 0x124a, 0x5e7, 0x59cf, 0x0, 0x1);
        gbc.writeMem(0xd1ca, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0xd1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ca));
        EXPECT(0x18, gbc.readMem(0xd1cb));
        // CB 18 0318
        gbc.setState(0x68af, 0xe07e, 0x4ef0, 0x77, 0xdd90, 0x4f08, 0x0, 0x0);
        gbc.writeMem(0x68af, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0319
        gbc.setState(0x7e18, 0xb6e4, 0x7dd0, 0x6e41, 0xba35, 0x7349, 0x0, 0x1);
        gbc.writeMem(0x7e18, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb6e4, gbc.sp());
        EXPECT(0x7e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 031A
        gbc.setState(0xc96, 0x6e9b, 0x8500, 0xb172, 0x8fc8, 0x36d2, 0x0, 0x0);
        gbc.writeMem(0xc96, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6e9b, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 031B
        gbc.setState(0x4ea6, 0x6e93, 0xbf30, 0x71ee, 0x2dbe, 0x1bbc, 0x1, 0x0);
        gbc.writeMem(0x4ea6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6e93, gbc.sp());
        EXPECT(0x4ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 031C
        gbc.setState(0x888b, 0x3a98, 0x3420, 0x2de3, 0x79de, 0x62c6, 0x0, 0x1);
        gbc.writeMem(0x888b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0x888d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888b));
        EXPECT(0x18, gbc.readMem(0x888c));
        // CB 18 031D
        gbc.setState(0x3746, 0x74, 0x5500, 0x1642, 0x85ea, 0xaba, 0x1, 0x0);
        gbc.writeMem(0x3746, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x74, gbc.sp());
        EXPECT(0x3748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 031E
        gbc.setState(0x9153, 0xba48, 0x6270, 0x9cf6, 0x6578, 0xb079, 0x1, 0x1);
        gbc.writeMem(0x9153, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xba48, gbc.sp());
        EXPECT(0x9155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9153));
        EXPECT(0x18, gbc.readMem(0x9154));
        // CB 18 031F
        gbc.setState(0xaa88, 0x399f, 0xe910, 0xc296, 0x5d26, 0x337a, 0x1, 0x1);
        gbc.writeMem(0xaa88, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x399f, gbc.sp());
        EXPECT(0xaa8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa88));
        EXPECT(0x18, gbc.readMem(0xaa89));
        // CB 18 0320
        gbc.setState(0xccee, 0xce0d, 0x7fb0, 0x52ba, 0x2abb, 0x5b3f, 0x1, 0x1);
        gbc.writeMem(0xccee, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xce0d, gbc.sp());
        EXPECT(0xccf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccee));
        EXPECT(0x18, gbc.readMem(0xccef));
        // CB 18 0321
        gbc.setState(0x79ec, 0xd1ef, 0xb9a0, 0x5d39, 0xfd3a, 0xc74f, 0x0, 0x0);
        gbc.writeMem(0x79ec, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd1ef, gbc.sp());
        EXPECT(0x79ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0322
        gbc.setState(0xd996, 0xd87b, 0x3b60, 0xebb6, 0xda60, 0x9f74, 0x1, 0x0);
        gbc.writeMem(0xd996, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0xd998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd996));
        EXPECT(0x18, gbc.readMem(0xd997));
        // CB 18 0323
        gbc.setState(0x93b3, 0xa41, 0x1ca0, 0xd882, 0x762f, 0xd797, 0x1, 0x0);
        gbc.writeMem(0x93b3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa41, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b3));
        EXPECT(0x18, gbc.readMem(0x93b4));
        // CB 18 0324
        gbc.setState(0x92b3, 0x338a, 0xdf90, 0xb7f7, 0xde02, 0x8dfc, 0x0, 0x0);
        gbc.writeMem(0x92b3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0x92b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b3));
        EXPECT(0x18, gbc.readMem(0x92b4));
        // CB 18 0325
        gbc.setState(0x4def, 0x3c3b, 0x92a0, 0x569a, 0x23b, 0xba5b, 0x0, 0x0);
        gbc.writeMem(0x4def, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3c3b, gbc.sp());
        EXPECT(0x4df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0326
        gbc.setState(0xaca2, 0x2a20, 0x6e90, 0xd06f, 0xa945, 0x6a4e, 0x1, 0x1);
        gbc.writeMem(0xaca2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0xaca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca2));
        EXPECT(0x18, gbc.readMem(0xaca3));
        // CB 18 0327
        gbc.setState(0x94e6, 0x3430, 0x1e0, 0xcae1, 0xe6bb, 0xdc33, 0x1, 0x1);
        gbc.writeMem(0x94e6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3430, gbc.sp());
        EXPECT(0x94e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e6));
        EXPECT(0x18, gbc.readMem(0x94e7));
        // CB 18 0328
        gbc.setState(0x2c12, 0x91bb, 0xc960, 0x3620, 0x34e1, 0x7ac0, 0x0, 0x0);
        gbc.writeMem(0x2c12, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x91bb, gbc.sp());
        EXPECT(0x2c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0329
        gbc.setState(0x890c, 0x774c, 0x61c0, 0x62db, 0x8451, 0xc136, 0x1, 0x0);
        gbc.writeMem(0x890c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x774c, gbc.sp());
        EXPECT(0x890e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890c));
        EXPECT(0x18, gbc.readMem(0x890d));
        // CB 18 032A
        gbc.setState(0x6c7e, 0x3e9, 0x9b90, 0xcb3c, 0xf8ec, 0x69c1, 0x0, 0x1);
        gbc.writeMem(0x6c7e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 032B
        gbc.setState(0x7d82, 0x63a1, 0xdf70, 0x7b0e, 0xf14, 0x123, 0x1, 0x1);
        gbc.writeMem(0x7d82, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0x7d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 032C
        gbc.setState(0xd908, 0xf792, 0xca50, 0x2947, 0x1810, 0xd073, 0x1, 0x0);
        gbc.writeMem(0xd908, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf792, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd908));
        EXPECT(0x18, gbc.readMem(0xd909));
        // CB 18 032D
        gbc.setState(0x7acc, 0xfd04, 0x3d30, 0x91e6, 0xe4bd, 0x60dd, 0x0, 0x0);
        gbc.writeMem(0x7acc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0x7ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 032E
        gbc.setState(0x6efc, 0xf9fa, 0xd4b0, 0xa1d8, 0xe000, 0x4b48, 0x0, 0x0);
        gbc.writeMem(0x6efc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 032F
        gbc.setState(0x6d70, 0x6217, 0x6720, 0xf378, 0xf02f, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x6d70, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0330
        gbc.setState(0x3efc, 0x8b2, 0x79c0, 0x297e, 0x9223, 0x28bb, 0x0, 0x1);
        gbc.writeMem(0x3efc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0331
        gbc.setState(0x93c4, 0xf87f, 0x8300, 0x602a, 0x4e57, 0x821d, 0x0, 0x1);
        gbc.writeMem(0x93c4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0x93c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c4));
        EXPECT(0x18, gbc.readMem(0x93c5));
        // CB 18 0333
        gbc.setState(0x8185, 0xdc17, 0x4320, 0xaba8, 0x2a24, 0x95ed, 0x1, 0x1);
        gbc.writeMem(0x8185, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8185));
        EXPECT(0x18, gbc.readMem(0x8186));
        // CB 18 0334
        gbc.setState(0x3bc6, 0x5e03, 0xb2e0, 0x2656, 0xef11, 0x5fd2, 0x1, 0x0);
        gbc.writeMem(0x3bc6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5e03, gbc.sp());
        EXPECT(0x3bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0335
        gbc.setState(0xa8be, 0xb18c, 0x2a60, 0x5fc3, 0x62fc, 0x740b, 0x1, 0x1);
        gbc.writeMem(0xa8be, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb18c, gbc.sp());
        EXPECT(0xa8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8be));
        EXPECT(0x18, gbc.readMem(0xa8bf));
        // CB 18 0336
        gbc.setState(0x4ca4, 0xd4d9, 0x8490, 0x16ab, 0x1c47, 0x8fd6, 0x1, 0x1);
        gbc.writeMem(0x4ca4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd4d9, gbc.sp());
        EXPECT(0x4ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0337
        gbc.setState(0x22c2, 0x9cec, 0x8a0, 0x1df3, 0xc895, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0x22c2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9cec, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0338
        gbc.setState(0xd712, 0x8031, 0xcf80, 0x5e16, 0xe68f, 0x37c9, 0x0, 0x0);
        gbc.writeMem(0xd712, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8031, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd712));
        EXPECT(0x18, gbc.readMem(0xd713));
        // CB 18 0339
        gbc.setState(0x7104, 0x7a4f, 0x5770, 0x7243, 0xbf8, 0x76fe, 0x1, 0x1);
        gbc.writeMem(0x7104, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 033A
        gbc.setState(0x2d5b, 0x1d73, 0x1da0, 0x72d9, 0xdb28, 0x85ce, 0x0, 0x1);
        gbc.writeMem(0x2d5b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1d73, gbc.sp());
        EXPECT(0x2d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 033B
        gbc.setState(0x3d42, 0x1636, 0xacb0, 0xfa04, 0x8162, 0x749b, 0x0, 0x0);
        gbc.writeMem(0x3d42, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1636, gbc.sp());
        EXPECT(0x3d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 033C
        gbc.setState(0x8e81, 0xd553, 0x64b0, 0xe4ec, 0xb534, 0x1ad2, 0x0, 0x1);
        gbc.writeMem(0x8e81, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd553, gbc.sp());
        EXPECT(0x8e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e81));
        EXPECT(0x18, gbc.readMem(0x8e82));
        // CB 18 033D
        gbc.setState(0x2c0d, 0xedfd, 0xe1d0, 0x83a6, 0x28e9, 0xc635, 0x1, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xedfd, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 033E
        gbc.setState(0x5c13, 0x5ec9, 0x5910, 0x415, 0x5b03, 0xd93a, 0x0, 0x1);
        gbc.writeMem(0x5c13, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5ec9, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 033F
        gbc.setState(0xdb4b, 0xfdf, 0x3590, 0x5d5f, 0x93a3, 0xa31, 0x1, 0x1);
        gbc.writeMem(0xdb4b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfdf, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0x18, gbc.readMem(0xdb4c));
        // CB 18 0340
        gbc.setState(0x61c1, 0x49a6, 0x7bb0, 0x37e7, 0xbaf1, 0xd638, 0x0, 0x1);
        gbc.writeMem(0x61c1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x49a6, gbc.sp());
        EXPECT(0x61c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0341
        gbc.setState(0x91ba, 0x9f15, 0xeee0, 0x142f, 0x6654, 0x22b9, 0x0, 0x1);
        gbc.writeMem(0x91ba, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f15, gbc.sp());
        EXPECT(0x91bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ba));
        EXPECT(0x18, gbc.readMem(0x91bb));
        // CB 18 0342
        gbc.setState(0x3f8a, 0x4906, 0x15b0, 0xd2ab, 0xe822, 0xc9c0, 0x1, 0x1);
        gbc.writeMem(0x3f8a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0x3f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0343
        gbc.setState(0xb42d, 0xf880, 0x7380, 0xfa2, 0x4bf4, 0x8a6e, 0x0, 0x0);
        gbc.writeMem(0xb42d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0xb42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42d));
        EXPECT(0x18, gbc.readMem(0xb42e));
        // CB 18 0344
        gbc.setState(0x7c4f, 0xd14f, 0x66f0, 0x9597, 0x8e5d, 0x1f5e, 0x0, 0x1);
        gbc.writeMem(0x7c4f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd14f, gbc.sp());
        EXPECT(0x7c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0345
        gbc.setState(0x9881, 0xa993, 0xdbe0, 0x73f4, 0x48d1, 0x9a0, 0x0, 0x1);
        gbc.writeMem(0x9881, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0x9883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9881));
        EXPECT(0x18, gbc.readMem(0x9882));
        // CB 18 0347
        gbc.setState(0xbc20, 0x2866, 0xa1a0, 0x7af7, 0x8391, 0xbbf7, 0x1, 0x0);
        gbc.writeMem(0xbc20, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0x18, gbc.readMem(0xbc21));
        // CB 18 0348
        gbc.setState(0x1e14, 0x64bc, 0x5550, 0x1ace, 0xe351, 0x7072, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x64bc, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0349
        gbc.setState(0x6eee, 0x21ce, 0x2de0, 0xe6c8, 0x60db, 0x5d5b, 0x1, 0x0);
        gbc.writeMem(0x6eee, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x21ce, gbc.sp());
        EXPECT(0x6ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 034A
        gbc.setState(0x5875, 0xc02f, 0x6490, 0xcd3, 0x902d, 0xfcb2, 0x0, 0x0);
        gbc.writeMem(0x5875, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc02f, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 034B
        gbc.setState(0x4038, 0x68d6, 0x32c0, 0x81f0, 0x70e6, 0xb5a7, 0x1, 0x1);
        gbc.writeMem(0x4038, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x68d6, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 034C
        gbc.setState(0xc725, 0xdcb2, 0x6c10, 0x76f3, 0x8d72, 0x24c4, 0x0, 0x1);
        gbc.writeMem(0xc725, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdcb2, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc725));
        EXPECT(0x18, gbc.readMem(0xc726));
        // CB 18 034D
        gbc.setState(0x9d34, 0xb1e8, 0x7870, 0xb5, 0xdaa4, 0x79d3, 0x0, 0x1);
        gbc.writeMem(0x9d34, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d34));
        EXPECT(0x18, gbc.readMem(0x9d35));
        // CB 18 034E
        gbc.setState(0xd26e, 0x1066, 0x91d0, 0x3628, 0xf4c3, 0xa95e, 0x1, 0x0);
        gbc.writeMem(0xd26e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1066, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26e));
        EXPECT(0x18, gbc.readMem(0xd26f));
        // CB 18 034F
        gbc.setState(0x5dfa, 0x7db4, 0x13a0, 0xbe3f, 0x2b26, 0xea9d, 0x0, 0x0);
        gbc.writeMem(0x5dfa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0350
        gbc.setState(0xe79d, 0x6154, 0x6f60, 0xe2a, 0x678, 0xfa0, 0x1, 0x0);
        gbc.writeMem(0xe79d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6154, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0x18, gbc.readMem(0xe79e));
        // CB 18 0351
        gbc.setState(0x5607, 0x6fca, 0x3dd0, 0x9d6c, 0x8ac5, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x5607, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6fca, gbc.sp());
        EXPECT(0x5609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0352
        gbc.setState(0x2860, 0xd73f, 0xa4b0, 0xe2d7, 0xe3ad, 0xe819, 0x0, 0x0);
        gbc.writeMem(0x2860, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd73f, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0353
        gbc.setState(0xe6b8, 0xe937, 0xeb80, 0xbbce, 0xc303, 0xcb14, 0x1, 0x0);
        gbc.writeMem(0xe6b8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b8));
        EXPECT(0x18, gbc.readMem(0xe6b9));
        // CB 18 0354
        gbc.setState(0x86f5, 0xfe7c, 0x7190, 0xab1c, 0x73e7, 0xda7d, 0x1, 0x0);
        gbc.writeMem(0x86f5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0x86f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f5));
        EXPECT(0x18, gbc.readMem(0x86f6));
        // CB 18 0355
        gbc.setState(0x9107, 0xde21, 0xc2f0, 0x53a1, 0x5645, 0x443a, 0x1, 0x1);
        gbc.writeMem(0x9107, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xde21, gbc.sp());
        EXPECT(0x9109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9107));
        EXPECT(0x18, gbc.readMem(0x9108));
        // CB 18 0356
        gbc.setState(0x4fe9, 0xe2fd, 0x5050, 0x77ae, 0xd134, 0x20af, 0x0, 0x0);
        gbc.writeMem(0x4fe9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0x4feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0357
        gbc.setState(0x87b5, 0xbcfa, 0x7ef0, 0x8928, 0x9a66, 0x4d5a, 0x1, 0x1);
        gbc.writeMem(0x87b5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x87b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b5));
        EXPECT(0x18, gbc.readMem(0x87b6));
        // CB 18 0358
        gbc.setState(0x5672, 0x532c, 0x4120, 0xf65a, 0x1cc, 0x2f3c, 0x0, 0x1);
        gbc.writeMem(0x5672, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x532c, gbc.sp());
        EXPECT(0x5674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0359
        gbc.setState(0xaf25, 0xd443, 0xf270, 0x415b, 0xad16, 0xacdc, 0x0, 0x1);
        gbc.writeMem(0xaf25, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd443, gbc.sp());
        EXPECT(0xaf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf25));
        EXPECT(0x18, gbc.readMem(0xaf26));
        // CB 18 035A
        gbc.setState(0x238f, 0x815f, 0xc010, 0x1b5e, 0x760b, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x238f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x815f, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 035B
        gbc.setState(0xbea9, 0xf6d, 0x6840, 0x6612, 0x416b, 0x13c1, 0x0, 0x1);
        gbc.writeMem(0xbea9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6d, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea9));
        EXPECT(0x18, gbc.readMem(0xbeaa));
        // CB 18 035C
        gbc.setState(0x1a38, 0x9d24, 0x37d0, 0xda45, 0xc479, 0x53c4, 0x1, 0x0);
        gbc.writeMem(0x1a38, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0x1a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 035D
        gbc.setState(0x119f, 0x16b8, 0xd670, 0x325d, 0x170c, 0xc9ea, 0x0, 0x0);
        gbc.writeMem(0x119f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x16b8, gbc.sp());
        EXPECT(0x11a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 035E
        gbc.setState(0x26c3, 0x516f, 0x7800, 0x18bc, 0xdae0, 0x693f, 0x1, 0x1);
        gbc.writeMem(0x26c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0x26c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 035F
        gbc.setState(0x3279, 0x76, 0x69d0, 0x4b99, 0xd4e6, 0x3865, 0x0, 0x1);
        gbc.writeMem(0x3279, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x76, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0360
        gbc.setState(0xb1f7, 0x3590, 0x5250, 0x6a30, 0xbda5, 0xc298, 0x0, 0x0);
        gbc.writeMem(0xb1f7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3590, gbc.sp());
        EXPECT(0xb1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f7));
        EXPECT(0x18, gbc.readMem(0xb1f8));
        // CB 18 0361
        gbc.setState(0x8821, 0xe1a6, 0xfb20, 0x807e, 0x9b22, 0x890b, 0x1, 0x1);
        gbc.writeMem(0x8821, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8821));
        EXPECT(0x18, gbc.readMem(0x8822));
        // CB 18 0362
        gbc.setState(0xab7d, 0xce11, 0x9f40, 0xc462, 0xa47a, 0x7d27, 0x0, 0x1);
        gbc.writeMem(0xab7d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0x18, gbc.readMem(0xab7e));
        // CB 18 0363
        gbc.setState(0x1bc6, 0x9898, 0xc1b0, 0x5232, 0x932c, 0xc056, 0x0, 0x0);
        gbc.writeMem(0x1bc6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0x1bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0364
        gbc.setState(0xd255, 0x3ed8, 0xfae0, 0x3837, 0xab19, 0xb9c, 0x0, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0x18, gbc.readMem(0xd256));
        // CB 18 0365
        gbc.setState(0x44e, 0xe733, 0x3f10, 0xec6f, 0x87d9, 0xa8f, 0x0, 0x1);
        gbc.writeMem(0x44e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0366
        gbc.setState(0x325e, 0x5406, 0xe7c0, 0xa27a, 0xa3cd, 0xa79, 0x0, 0x0);
        gbc.writeMem(0x325e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5406, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0367
        gbc.setState(0x5a2e, 0xaaa3, 0x66d0, 0xfe23, 0xe0fa, 0x4132, 0x1, 0x1);
        gbc.writeMem(0x5a2e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaaa3, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0368
        gbc.setState(0x174e, 0xdbd6, 0xabb0, 0x207a, 0x64b5, 0x60ad, 0x1, 0x1);
        gbc.writeMem(0x174e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdbd6, gbc.sp());
        EXPECT(0x1750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0369
        gbc.setState(0x550b, 0xaffe, 0x5120, 0x3bd, 0x7c9d, 0x91f1, 0x1, 0x1);
        gbc.writeMem(0x550b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 036A
        gbc.setState(0xbb72, 0xc9e1, 0x39d0, 0x8389, 0x65c0, 0xe1ef, 0x1, 0x0);
        gbc.writeMem(0xbb72, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0xbb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb72));
        EXPECT(0x18, gbc.readMem(0xbb73));
        // CB 18 036B
        gbc.setState(0x9bd, 0xa6, 0x6970, 0x8aad, 0x1cde, 0x781c, 0x0, 0x1);
        gbc.writeMem(0x9bd, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 036C
        gbc.setState(0xd0bb, 0x1f27, 0xf8e0, 0x21b8, 0xbe69, 0xd2a, 0x1, 0x0);
        gbc.writeMem(0xd0bb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xd0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bb));
        EXPECT(0x18, gbc.readMem(0xd0bc));
        // CB 18 036D
        gbc.setState(0x2bd5, 0xf192, 0x3a40, 0xa6d7, 0x43b4, 0x30b7, 0x1, 0x0);
        gbc.writeMem(0x2bd5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf192, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 036E
        gbc.setState(0xdf58, 0xa880, 0xeb40, 0x3454, 0x8b58, 0x7ff2, 0x0, 0x1);
        gbc.writeMem(0xdf58, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa880, gbc.sp());
        EXPECT(0xdf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf58));
        EXPECT(0x18, gbc.readMem(0xdf59));
        // CB 18 036F
        gbc.setState(0x47be, 0x91f5, 0x4660, 0xe517, 0xaef, 0x7052, 0x0, 0x1);
        gbc.writeMem(0x47be, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x91f5, gbc.sp());
        EXPECT(0x47c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0370
        gbc.setState(0x8497, 0x8ef2, 0x5bc0, 0xe3b5, 0xad87, 0x2043, 0x1, 0x0);
        gbc.writeMem(0x8497, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8ef2, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8497));
        EXPECT(0x18, gbc.readMem(0x8498));
        // CB 18 0372
        gbc.setState(0x9cb3, 0x5cf7, 0x9770, 0x3bce, 0xa405, 0xd283, 0x1, 0x1);
        gbc.writeMem(0x9cb3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5cf7, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb3));
        EXPECT(0x18, gbc.readMem(0x9cb4));
        // CB 18 0373
        gbc.setState(0x5697, 0xd08e, 0xede0, 0xd96a, 0x8e80, 0x699a, 0x1, 0x1);
        gbc.writeMem(0x5697, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0x5699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0374
        gbc.setState(0x9687, 0x97d3, 0x6350, 0xb238, 0xcbaf, 0xca8b, 0x1, 0x1);
        gbc.writeMem(0x9687, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x97d3, gbc.sp());
        EXPECT(0x9689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9687));
        EXPECT(0x18, gbc.readMem(0x9688));
        // CB 18 0375
        gbc.setState(0x62f8, 0x595c, 0x39e0, 0x2fa2, 0x56b7, 0xfe32, 0x1, 0x1);
        gbc.writeMem(0x62f8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0376
        gbc.setState(0x9cbc, 0xc196, 0x4df0, 0x54f8, 0x748a, 0xbfce, 0x0, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc196, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0x18, gbc.readMem(0x9cbd));
        // CB 18 0377
        gbc.setState(0x390f, 0x6b52, 0x1a90, 0xdfc2, 0x49fb, 0x31db, 0x1, 0x0);
        gbc.writeMem(0x390f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b52, gbc.sp());
        EXPECT(0x3911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0378
        gbc.setState(0x8ce3, 0xe9a7, 0xbeb0, 0xcc16, 0x350d, 0x6bb8, 0x0, 0x0);
        gbc.writeMem(0x8ce3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce3));
        EXPECT(0x18, gbc.readMem(0x8ce4));
        // CB 18 0379
        gbc.setState(0x71c1, 0x6150, 0xe3e0, 0x1eb1, 0x91c2, 0xf365, 0x1, 0x0);
        gbc.writeMem(0x71c1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6150, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 037B
        gbc.setState(0x36b1, 0x632f, 0xe460, 0x4df8, 0xefe6, 0x87fc, 0x0, 0x1);
        gbc.writeMem(0x36b1, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x632f, gbc.sp());
        EXPECT(0x36b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 037C
        gbc.setState(0x48a6, 0x98b1, 0x88b0, 0x6e9e, 0x5929, 0x5e7, 0x0, 0x1);
        gbc.writeMem(0x48a6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 037D
        gbc.setState(0xae7, 0x4b6, 0xa2c0, 0x7bcc, 0xff0e, 0xf040, 0x0, 0x1);
        gbc.writeMem(0xae7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4b6, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 037E
        gbc.setState(0xb863, 0x94d, 0xe6c0, 0xa423, 0x6f0d, 0x60, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x94d, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb863));
        EXPECT(0x18, gbc.readMem(0xb864));
        // CB 18 037F
        gbc.setState(0xb3bc, 0x27f, 0xa3e0, 0x627b, 0xb925, 0x8be0, 0x1, 0x0);
        gbc.writeMem(0xb3bc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x27f, gbc.sp());
        EXPECT(0xb3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bc));
        EXPECT(0x18, gbc.readMem(0xb3bd));
        // CB 18 0380
        gbc.setState(0x46b, 0xb486, 0xc920, 0xf2f4, 0xabc8, 0xa0e7, 0x1, 0x0);
        gbc.writeMem(0x46b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0382
        gbc.setState(0xe940, 0xb485, 0x34b0, 0x5895, 0x2329, 0x1b4d, 0x1, 0x0);
        gbc.writeMem(0xe940, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb485, gbc.sp());
        EXPECT(0xe942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe940));
        EXPECT(0x18, gbc.readMem(0xe941));
        // CB 18 0383
        gbc.setState(0x7ca3, 0x1904, 0x56f0, 0x56d4, 0xf499, 0x52e9, 0x1, 0x0);
        gbc.writeMem(0x7ca3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1904, gbc.sp());
        EXPECT(0x7ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0384
        gbc.setState(0xee89, 0xebb2, 0xa1a0, 0x8e1b, 0x80a7, 0x244e, 0x1, 0x0);
        gbc.writeMem(0xee89, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee89));
        EXPECT(0x18, gbc.readMem(0xee8a));
        // CB 18 0385
        gbc.setState(0x9cd4, 0x96ee, 0x9e90, 0x47a1, 0xaef9, 0x1d87, 0x1, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0x18, gbc.readMem(0x9cd5));
        // CB 18 0386
        gbc.setState(0x9d03, 0xdb96, 0x5130, 0x5124, 0xcb36, 0x275a, 0x1, 0x1);
        gbc.writeMem(0x9d03, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdb96, gbc.sp());
        EXPECT(0x9d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d03));
        EXPECT(0x18, gbc.readMem(0x9d04));
        // CB 18 0387
        gbc.setState(0xaaa2, 0x52d6, 0xc350, 0xabb1, 0x5107, 0xc842, 0x1, 0x1);
        gbc.writeMem(0xaaa2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x52d6, gbc.sp());
        EXPECT(0xaaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa2));
        EXPECT(0x18, gbc.readMem(0xaaa3));
        // CB 18 0388
        gbc.setState(0x73de, 0x303b, 0x9050, 0x65ba, 0xd139, 0x22da, 0x0, 0x1);
        gbc.writeMem(0x73de, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x73e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0389
        gbc.setState(0x6098, 0xbcbb, 0xebc0, 0xac3, 0x79ad, 0xe2d7, 0x0, 0x1);
        gbc.writeMem(0x6098, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0x609a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 038A
        gbc.setState(0xb824, 0x882f, 0xc360, 0x953d, 0xb15f, 0x23dc, 0x1, 0x1);
        gbc.writeMem(0xb824, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0xb826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb824));
        EXPECT(0x18, gbc.readMem(0xb825));
        // CB 18 038B
        gbc.setState(0x8570, 0xa0b, 0x18b0, 0xf98e, 0x527b, 0xcad2, 0x1, 0x0);
        gbc.writeMem(0x8570, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa0b, gbc.sp());
        EXPECT(0x8572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8570));
        EXPECT(0x18, gbc.readMem(0x8571));
        // CB 18 038C
        gbc.setState(0x49d7, 0x2121, 0x5ea0, 0x59b0, 0xb4d2, 0x67d3, 0x0, 0x1);
        gbc.writeMem(0x49d7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x49d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 038D
        gbc.setState(0xec9b, 0xc529, 0x7900, 0xbb3d, 0xb9be, 0x2f3e, 0x1, 0x1);
        gbc.writeMem(0xec9b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc529, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9b));
        EXPECT(0x18, gbc.readMem(0xec9c));
        // CB 18 038F
        gbc.setState(0xdfd5, 0x795, 0x8ca0, 0xce4b, 0x5ed7, 0xafd7, 0x0, 0x1);
        gbc.writeMem(0xdfd5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x795, gbc.sp());
        EXPECT(0xdfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd5));
        EXPECT(0x18, gbc.readMem(0xdfd6));
        // CB 18 0391
        gbc.setState(0x2bea, 0x3bbe, 0x2f70, 0x50bd, 0x3115, 0x3e8c, 0x0, 0x1);
        gbc.writeMem(0x2bea, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0x2bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0392
        gbc.setState(0xaac5, 0x7de5, 0xb640, 0xb68d, 0x6ae2, 0x2d87, 0x1, 0x0);
        gbc.writeMem(0xaac5, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac5));
        EXPECT(0x18, gbc.readMem(0xaac6));
        // CB 18 0393
        gbc.setState(0x5b56, 0x5a10, 0x9f30, 0xd782, 0x4f95, 0xd5b3, 0x0, 0x0);
        gbc.writeMem(0x5b56, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5a10, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0394
        gbc.setState(0x9a8, 0x5aaa, 0x2850, 0xb3ee, 0x71ef, 0x9235, 0x1, 0x1);
        gbc.writeMem(0x9a8, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0395
        gbc.setState(0x21cb, 0xeb1b, 0xd110, 0xb717, 0x7353, 0x17e9, 0x1, 0x1);
        gbc.writeMem(0x21cb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0396
        gbc.setState(0x7368, 0x9b7d, 0xcd90, 0x1076, 0x8782, 0x50b9, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 0397
        gbc.setState(0x9385, 0x667f, 0x20d0, 0xd700, 0x3eb2, 0x9c7, 0x0, 0x1);
        gbc.writeMem(0x9385, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9385));
        EXPECT(0x18, gbc.readMem(0x9386));
        // CB 18 0398
        gbc.setState(0x7b87, 0xc2e6, 0x8f00, 0x2920, 0x87b1, 0x6d36, 0x1, 0x1);
        gbc.writeMem(0x7b87, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc2e6, gbc.sp());
        EXPECT(0x7b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 0399
        gbc.setState(0xd0c0, 0x57fa, 0x7280, 0xabaf, 0xb2d0, 0xbac6, 0x0, 0x1);
        gbc.writeMem(0xd0c0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0xd0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c0));
        EXPECT(0x18, gbc.readMem(0xd0c1));
        // CB 18 039A
        gbc.setState(0x4d05, 0xc22a, 0xf4f0, 0x6976, 0xd271, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0x4d05, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc22a, gbc.sp());
        EXPECT(0x4d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 039C
        gbc.setState(0x656f, 0xf835, 0x78b0, 0xc52b, 0x9dcc, 0xf1ed, 0x0, 0x0);
        gbc.writeMem(0x656f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0x6571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 039D
        gbc.setState(0x71de, 0xf630, 0xa390, 0x7340, 0xf922, 0xeb84, 0x0, 0x0);
        gbc.writeMem(0x71de, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf630, gbc.sp());
        EXPECT(0x71e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 039F
        gbc.setState(0xded9, 0x5974, 0x98b0, 0x8d1e, 0x39d1, 0x4f01, 0x0, 0x0);
        gbc.writeMem(0xded9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5974, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded9));
        EXPECT(0x18, gbc.readMem(0xdeda));
        // CB 18 03A0
        gbc.setState(0x4477, 0x6eac, 0xc9c0, 0x33ca, 0x39fb, 0xed99, 0x0, 0x0);
        gbc.writeMem(0x4477, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0x4479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03A1
        gbc.setState(0xc5a4, 0x83bf, 0x850, 0x43b, 0xd730, 0xc9a, 0x1, 0x0);
        gbc.writeMem(0xc5a4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0xc5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a4));
        EXPECT(0x18, gbc.readMem(0xc5a5));
        // CB 18 03A2
        gbc.setState(0x3873, 0xaa5b, 0x210, 0xe11e, 0x7807, 0x6da0, 0x0, 0x1);
        gbc.writeMem(0x3873, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaa5b, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03A3
        gbc.setState(0xd36a, 0xc1e7, 0x8bb0, 0xece9, 0x2920, 0x223b, 0x1, 0x0);
        gbc.writeMem(0xd36a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc1e7, gbc.sp());
        EXPECT(0xd36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36a));
        EXPECT(0x18, gbc.readMem(0xd36b));
        // CB 18 03A4
        gbc.setState(0xd6c2, 0xb72b, 0x4320, 0x5770, 0x618f, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0xd6c2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0xd6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c2));
        EXPECT(0x18, gbc.readMem(0xd6c3));
        // CB 18 03A5
        gbc.setState(0xd0c3, 0x68fc, 0x2cc0, 0xd883, 0xfe0f, 0x9db3, 0x0, 0x0);
        gbc.writeMem(0xd0c3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0xd0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c3));
        EXPECT(0x18, gbc.readMem(0xd0c4));
        // CB 18 03A6
        gbc.setState(0xe41d, 0xb313, 0x8670, 0xe9aa, 0xe0e5, 0x7749, 0x1, 0x1);
        gbc.writeMem(0xe41d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0xe41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41d));
        EXPECT(0x18, gbc.readMem(0xe41e));
        // CB 18 03A7
        gbc.setState(0x718d, 0xd2cc, 0xb40, 0x317f, 0x50f4, 0xb91a, 0x1, 0x0);
        gbc.writeMem(0x718d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd2cc, gbc.sp());
        EXPECT(0x718f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03A8
        gbc.setState(0xe99b, 0x4f5, 0xb300, 0x647b, 0x64bb, 0x7904, 0x1, 0x0);
        gbc.writeMem(0xe99b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99b));
        EXPECT(0x18, gbc.readMem(0xe99c));
        // CB 18 03A9
        gbc.setState(0x542b, 0x44c2, 0x6210, 0x8254, 0x3f3c, 0xfec0, 0x1, 0x1);
        gbc.writeMem(0x542b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0x542d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03AA
        gbc.setState(0x4b26, 0x8480, 0xda50, 0xf7e, 0xe0f5, 0x4539, 0x0, 0x1);
        gbc.writeMem(0x4b26, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8480, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03AB
        gbc.setState(0xad0, 0x4b52, 0x75b0, 0xd14e, 0xcacc, 0x44cb, 0x1, 0x1);
        gbc.writeMem(0xad0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0xad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03AC
        gbc.setState(0xe0e7, 0x638a, 0xf70, 0xdef2, 0x68df, 0x652e, 0x1, 0x1);
        gbc.writeMem(0xe0e7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0xe0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e7));
        EXPECT(0x18, gbc.readMem(0xe0e8));
        // CB 18 03AD
        gbc.setState(0x4ead, 0x1396, 0x86c0, 0xfaf0, 0xc441, 0x20f0, 0x0, 0x1);
        gbc.writeMem(0x4ead, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03AE
        gbc.setState(0x1449, 0x26f1, 0x1f10, 0xf541, 0xe5ad, 0xd31a, 0x1, 0x1);
        gbc.writeMem(0x1449, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26f1, gbc.sp());
        EXPECT(0x144b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03AF
        gbc.setState(0x5db6, 0x7661, 0x69a0, 0x6262, 0xa1a9, 0xcfe4, 0x1, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03B1
        gbc.setState(0x5f14, 0xfdff, 0xf280, 0x2ed, 0xb8f7, 0x9c76, 0x1, 0x1);
        gbc.writeMem(0x5f14, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03B2
        gbc.setState(0xaf1c, 0x940a, 0x37c0, 0x3383, 0x75ae, 0x69de, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1c));
        EXPECT(0x18, gbc.readMem(0xaf1d));
        // CB 18 03B3
        gbc.setState(0x5312, 0x72cb, 0x9070, 0xaa2c, 0x537e, 0xd006, 0x1, 0x0);
        gbc.writeMem(0x5312, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0x5314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03B5
        gbc.setState(0x73f2, 0x4b2e, 0x1400, 0x7a97, 0x9eaf, 0x34ea, 0x1, 0x0);
        gbc.writeMem(0x73f2, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4b2e, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03B6
        gbc.setState(0x4e90, 0xc183, 0xa560, 0x45f, 0xed88, 0x4f8b, 0x0, 0x1);
        gbc.writeMem(0x4e90, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc183, gbc.sp());
        EXPECT(0x4e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03B7
        gbc.setState(0xfbe, 0x6e53, 0xfd40, 0x5f69, 0x4bce, 0xce0f, 0x1, 0x1);
        gbc.writeMem(0xfbe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6e53, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03B8
        gbc.setState(0x8845, 0x6ca2, 0xdcd0, 0x26f7, 0x5cb9, 0x44dc, 0x1, 0x1);
        gbc.writeMem(0x8845, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6ca2, gbc.sp());
        EXPECT(0x8847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8845));
        EXPECT(0x18, gbc.readMem(0x8846));
        // CB 18 03B9
        gbc.setState(0xda42, 0x8e64, 0x77d0, 0x736a, 0x7aa4, 0xc3e5, 0x0, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0x18, gbc.readMem(0xda43));
        // CB 18 03BA
        gbc.setState(0x3669, 0x46be, 0x460, 0xafe0, 0xfae2, 0x3b6, 0x1, 0x0);
        gbc.writeMem(0x3669, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03BB
        gbc.setState(0x952b, 0xc6a3, 0x72a0, 0xb605, 0x4de9, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x952b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952b));
        EXPECT(0x18, gbc.readMem(0x952c));
        // CB 18 03BC
        gbc.setState(0xa4d9, 0x8b93, 0xe400, 0xc6a3, 0x6774, 0xfcb3, 0x1, 0x1);
        gbc.writeMem(0xa4d9, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8b93, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d9));
        EXPECT(0x18, gbc.readMem(0xa4da));
        // CB 18 03BD
        gbc.setState(0xa8cf, 0x5f2b, 0xeee0, 0x7373, 0xfacb, 0xb5d, 0x0, 0x1);
        gbc.writeMem(0xa8cf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5f2b, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cf));
        EXPECT(0x18, gbc.readMem(0xa8d0));
        // CB 18 03BE
        gbc.setState(0x7002, 0x1240, 0xc2e0, 0xd217, 0x2c24, 0x9cda, 0x0, 0x0);
        gbc.writeMem(0x7002, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1240, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03BF
        gbc.setState(0x994f, 0x8b45, 0xc0e0, 0xbc43, 0xc15e, 0x15ee, 0x0, 0x1);
        gbc.writeMem(0x994f, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8b45, gbc.sp());
        EXPECT(0x9951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994f));
        EXPECT(0x18, gbc.readMem(0x9950));
        // CB 18 03C0
        gbc.setState(0x3d67, 0xd1a3, 0xc180, 0xbb63, 0xe777, 0x5efe, 0x1, 0x0);
        gbc.writeMem(0x3d67, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03C1
        gbc.setState(0xe5b7, 0x1310, 0xc750, 0x48ec, 0x8a90, 0x72f1, 0x0, 0x0);
        gbc.writeMem(0xe5b7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0x18, gbc.readMem(0xe5b8));
        // CB 18 03C2
        gbc.setState(0x1112, 0xf874, 0x450, 0xa74f, 0x7fcd, 0x82ba, 0x1, 0x0);
        gbc.writeMem(0x1112, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03C3
        gbc.setState(0xa1e0, 0xf5ed, 0xd020, 0x9a28, 0x8b09, 0xaecd, 0x1, 0x1);
        gbc.writeMem(0xa1e0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0xa1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e0));
        EXPECT(0x18, gbc.readMem(0xa1e1));
        // CB 18 03C4
        gbc.setState(0x34f7, 0x5082, 0xefd0, 0xd77a, 0x6747, 0x1862, 0x0, 0x0);
        gbc.writeMem(0x34f7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0x34f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03C5
        gbc.setState(0xed1d, 0xcabd, 0x2a90, 0x239b, 0x399, 0xd115, 0x1, 0x1);
        gbc.writeMem(0xed1d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1d));
        EXPECT(0x18, gbc.readMem(0xed1e));
        // CB 18 03C6
        gbc.setState(0xee84, 0x4649, 0x8fc0, 0x257a, 0xa8a3, 0xa00d, 0x0, 0x0);
        gbc.writeMem(0xee84, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4649, gbc.sp());
        EXPECT(0xee86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee84));
        EXPECT(0x18, gbc.readMem(0xee85));
        // CB 18 03C7
        gbc.setState(0xefed, 0x9e8a, 0x1370, 0x1f17, 0xabaf, 0x31db, 0x0, 0x1);
        gbc.writeMem(0xefed, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9e8a, gbc.sp());
        EXPECT(0xefef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefed));
        EXPECT(0x18, gbc.readMem(0xefee));
        // CB 18 03C8
        gbc.setState(0x9cb, 0xf8ef, 0x80b0, 0xdd5d, 0x701b, 0x9e14, 0x1, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf8ef, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03C9
        gbc.setState(0x9dac, 0xa24, 0xc7b0, 0xae8f, 0xf0b9, 0x5154, 0x0, 0x1);
        gbc.writeMem(0x9dac, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dac));
        EXPECT(0x18, gbc.readMem(0x9dad));
        // CB 18 03CA
        gbc.setState(0x74aa, 0x1d4a, 0xce00, 0x73d, 0x6f22, 0x1fa8, 0x0, 0x0);
        gbc.writeMem(0x74aa, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1d4a, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03CB
        gbc.setState(0x2fc7, 0x59fd, 0xa940, 0xfdcf, 0xe6e5, 0x550, 0x1, 0x1);
        gbc.writeMem(0x2fc7, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x59fd, gbc.sp());
        EXPECT(0x2fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03CC
        gbc.setState(0xcd36, 0x2e47, 0x86f0, 0x390a, 0x8f43, 0x6e29, 0x0, 0x0);
        gbc.writeMem(0xcd36, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0xcd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd36));
        EXPECT(0x18, gbc.readMem(0xcd37));
        // CB 18 03CD
        gbc.setState(0xbc3c, 0xd898, 0x9870, 0x6a74, 0xad6d, 0xfe51, 0x1, 0x0);
        gbc.writeMem(0xbc3c, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3c));
        EXPECT(0x18, gbc.readMem(0xbc3d));
        // CB 18 03CE
        gbc.setState(0x304e, 0x7c51, 0x6b90, 0x3d10, 0xca00, 0x3201, 0x1, 0x0);
        gbc.writeMem(0x304e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7c51, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03CF
        gbc.setState(0x3de4, 0x48c2, 0xb900, 0x4562, 0xfe0b, 0x73be, 0x1, 0x0);
        gbc.writeMem(0x3de4, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x48c2, gbc.sp());
        EXPECT(0x3de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03D0
        gbc.setState(0x99f3, 0x7a64, 0xcd80, 0xfe80, 0xb521, 0x3484, 0x1, 0x1);
        gbc.writeMem(0x99f3, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7a64, gbc.sp());
        EXPECT(0x99f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f3));
        EXPECT(0x18, gbc.readMem(0x99f4));
        // CB 18 03D1
        gbc.setState(0xd5d0, 0x8c98, 0xfa10, 0x5ce, 0x1d8e, 0x7dfa, 0x1, 0x1);
        gbc.writeMem(0xd5d0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0xd5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d0));
        EXPECT(0x18, gbc.readMem(0xd5d1));
        // CB 18 03D2
        gbc.setState(0x62b0, 0x7a1e, 0x5570, 0x334c, 0x9869, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0x62b0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7a1e, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03D3
        gbc.setState(0xaeab, 0xc11b, 0x4170, 0xc898, 0xac30, 0x1344, 0x1, 0x1);
        gbc.writeMem(0xaeab, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc11b, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeab));
        EXPECT(0x18, gbc.readMem(0xaeac));
        // CB 18 03D4
        gbc.setState(0xec42, 0xec53, 0x7280, 0x651a, 0x12f6, 0xf7c2, 0x1, 0x0);
        gbc.writeMem(0xec42, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0xec44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec42));
        EXPECT(0x18, gbc.readMem(0xec43));
        // CB 18 03D5
        gbc.setState(0x3cfe, 0x384d, 0xafc0, 0xae3a, 0xf6b4, 0x81bb, 0x1, 0x1);
        gbc.writeMem(0x3cfe, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x384d, gbc.sp());
        EXPECT(0x3d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03D6
        gbc.setState(0xc30a, 0xc27d, 0x4c10, 0xbe77, 0xb4aa, 0x46fb, 0x0, 0x1);
        gbc.writeMem(0xc30a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc27d, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0x18, gbc.readMem(0xc30b));
        // CB 18 03D7
        gbc.setState(0xb73d, 0xecad, 0x2290, 0x344f, 0xf3ab, 0x8ee6, 0x0, 0x0);
        gbc.writeMem(0xb73d, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73d));
        EXPECT(0x18, gbc.readMem(0xb73e));
        // CB 18 03D8
        gbc.setState(0x2bdc, 0xbcd2, 0xdf60, 0xeaec, 0x467b, 0x6f07, 0x0, 0x1);
        gbc.writeMem(0x2bdc, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbcd2, gbc.sp());
        EXPECT(0x2bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03D9
        gbc.setState(0x3331, 0x9a0a, 0xf80, 0x3dd3, 0x6449, 0x84f8, 0x0, 0x0);
        gbc.writeMem(0x3331, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x3333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03DA
        gbc.setState(0x529a, 0x239a, 0xd6a0, 0x6a14, 0x2205, 0x853e, 0x1, 0x0);
        gbc.writeMem(0x529a, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03DB
        gbc.setState(0x7473, 0x3e38, 0xc040, 0xcb92, 0xa715, 0xea2b, 0x0, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3e38, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03DC
        gbc.setState(0x3085, 0xb198, 0x6b80, 0x656f, 0xeac8, 0xfd91, 0x1, 0x0);
        gbc.writeMem(0x3085, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb198, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03DD
        gbc.setState(0xcbde, 0x697c, 0x5970, 0x91a1, 0x2006, 0xbf9b, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0x18, gbc.readMem(0xcbdf));
        // CB 18 03DE
        gbc.setState(0x31b0, 0xfaf2, 0xf520, 0xf71f, 0x6ca4, 0xa974, 0x0, 0x1);
        gbc.writeMem(0x31b0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfaf2, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 18 03DF
        gbc.setState(0x2c0e, 0xda48, 0xbce0, 0x1298, 0x8037, 0x2a16, 0x1, 0x0);
        gbc.writeMem(0x2c0e, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xda48, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03E1
        gbc.setState(0x2ede, 0xfdf0, 0xd330, 0x5cfe, 0x74a0, 0xeddd, 0x1, 0x0);
        gbc.writeMem(0x2ede, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfdf0, gbc.sp());
        EXPECT(0x2ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03E2
        gbc.setState(0xb92, 0xeed0, 0xd070, 0x56c7, 0x78c7, 0x1dce, 0x0, 0x0);
        gbc.writeMem(0xb92, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeed0, gbc.sp());
        EXPECT(0xb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03E3
        gbc.setState(0xb7b0, 0xb85b, 0xb9d0, 0xffa6, 0x16c7, 0x583b, 0x1, 0x0);
        gbc.writeMem(0xb7b0, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb85b, gbc.sp());
        EXPECT(0xb7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b0));
        EXPECT(0x18, gbc.readMem(0xb7b1));
        // CB 18 03E4
        gbc.setState(0xc05b, 0xd10a, 0x9ec0, 0xe2c7, 0x5b93, 0x76c5, 0x0, 0x1);
        gbc.writeMem(0xc05b, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd10a, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05b));
        EXPECT(0x18, gbc.readMem(0xc05c));
        // CB 18 03E5
        gbc.setState(0x4289, 0x75bc, 0x1d30, 0xb0ba, 0x97d9, 0x11ad, 0x1, 0x1);
        gbc.writeMem(0x4289, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x75bc, gbc.sp());
        EXPECT(0x428b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03E6
        gbc.setState(0x77cf, 0x5fd7, 0x1f60, 0xaaa1, 0x6c92, 0xf16f, 0x0, 0x0);
        gbc.writeMem(0x77cf, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0x77d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 18 03E7
        gbc.setState(0xcaea, 0xc259, 0xcd60, 0x45fc, 0x5f7, 0x3b04, 0x0, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0x18 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaea));
        EXPECT(0x18, gbc.readMem(0xcaeb));
    }
