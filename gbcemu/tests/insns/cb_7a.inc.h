    TEST(gbcemu, opcode_cb_7a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7A 0000
        gbc.setState(0xad3, 0x7adf, 0xab50, 0x80c0, 0xe3e4, 0xa660, 0x0, 0x1);
        gbc.writeMem(0xad3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7adf, gbc.sp());
        EXPECT(0xad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0001
        gbc.setState(0xdd54, 0x559b, 0x12c0, 0xc4c5, 0xbd05, 0x4c61, 0x0, 0x1);
        gbc.writeMem(0xdd54, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x559b, gbc.sp());
        EXPECT(0xdd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd54));
        EXPECT(0x7a, gbc.readMem(0xdd55));
        // CB 7A 0002
        gbc.setState(0x7c86, 0x4d8f, 0xf370, 0x2f0d, 0xff3f, 0xc6ea, 0x0, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4d8f, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0003
        gbc.setState(0xa594, 0x44a2, 0xfbb0, 0x3834, 0xfef8, 0xa2fd, 0x0, 0x1);
        gbc.writeMem(0xa594, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa594));
        EXPECT(0x7a, gbc.readMem(0xa595));
        // CB 7A 0004
        gbc.setState(0xc79, 0x9a7c, 0x91a0, 0xd838, 0x4875, 0x1618, 0x0, 0x0);
        gbc.writeMem(0xc79, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9a7c, gbc.sp());
        EXPECT(0xc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0005
        gbc.setState(0x7614, 0xc46c, 0xdf20, 0xf2ed, 0x46e5, 0xbfac, 0x0, 0x1);
        gbc.writeMem(0x7614, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0x7616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0006
        gbc.setState(0xcd16, 0xaf5c, 0x8480, 0xeabe, 0x6bd7, 0x9221, 0x0, 0x0);
        gbc.writeMem(0xcd16, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0xcd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd16));
        EXPECT(0x7a, gbc.readMem(0xcd17));
        // CB 7A 0007
        gbc.setState(0xb7a3, 0xcfee, 0x8d30, 0x47cf, 0x808, 0xa69b, 0x1, 0x0);
        gbc.writeMem(0xb7a3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcfee, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a3));
        EXPECT(0x7a, gbc.readMem(0xb7a4));
        // CB 7A 0008
        gbc.setState(0xc970, 0xe343, 0x8160, 0xd842, 0xcddb, 0x1668, 0x0, 0x0);
        gbc.writeMem(0xc970, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe343, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc970));
        EXPECT(0x7a, gbc.readMem(0xc971));
        // CB 7A 0009
        gbc.setState(0x5627, 0x2aef, 0xbda0, 0x52d1, 0x852a, 0x128a, 0x0, 0x1);
        gbc.writeMem(0x5627, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2aef, gbc.sp());
        EXPECT(0x5629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 000A
        gbc.setState(0xb9c1, 0x335c, 0xe8e0, 0x58b4, 0xce23, 0x577d, 0x1, 0x0);
        gbc.writeMem(0xb9c1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x335c, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c1));
        EXPECT(0x7a, gbc.readMem(0xb9c2));
        // CB 7A 000B
        gbc.setState(0x1426, 0xbcce, 0x2000, 0x4533, 0xb16e, 0x25b0, 0x0, 0x1);
        gbc.writeMem(0x1426, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbcce, gbc.sp());
        EXPECT(0x1428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 000C
        gbc.setState(0x61e9, 0x9b03, 0x79a0, 0x2220, 0xc6be, 0xb979, 0x1, 0x1);
        gbc.writeMem(0x61e9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0x61eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 000D
        gbc.setState(0x7d11, 0xc688, 0x8ab0, 0xc974, 0x78fa, 0xf08a, 0x0, 0x0);
        gbc.writeMem(0x7d11, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc688, gbc.sp());
        EXPECT(0x7d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 000E
        gbc.setState(0xd459, 0x6c23, 0x7160, 0x4eb8, 0x7bfb, 0x580d, 0x0, 0x1);
        gbc.writeMem(0xd459, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6c23, gbc.sp());
        EXPECT(0xd45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd459));
        EXPECT(0x7a, gbc.readMem(0xd45a));
        // CB 7A 000F
        gbc.setState(0xb890, 0x7a19, 0xd740, 0xade6, 0x864a, 0xe936, 0x1, 0x0);
        gbc.writeMem(0xb890, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7a19, gbc.sp());
        EXPECT(0xb892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb890));
        EXPECT(0x7a, gbc.readMem(0xb891));
        // CB 7A 0010
        gbc.setState(0x57d, 0xbc90, 0x600, 0x3106, 0xc221, 0xe952, 0x0, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0x57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0011
        gbc.setState(0x3622, 0x1e99, 0xde20, 0x531a, 0x8a9e, 0xcbaa, 0x0, 0x0);
        gbc.writeMem(0x3622, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1e99, gbc.sp());
        EXPECT(0x3624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0012
        gbc.setState(0xb9cb, 0xda65, 0xfc80, 0x222a, 0x0, 0x1f60, 0x0, 0x0);
        gbc.writeMem(0xb9cb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xda65, gbc.sp());
        EXPECT(0xb9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cb));
        EXPECT(0x7a, gbc.readMem(0xb9cc));
        // CB 7A 0013
        gbc.setState(0xcfe0, 0x506e, 0x5fa0, 0xcab8, 0x8772, 0xfa7b, 0x1, 0x1);
        gbc.writeMem(0xcfe0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x506e, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe0));
        EXPECT(0x7a, gbc.readMem(0xcfe1));
        // CB 7A 0014
        gbc.setState(0xb630, 0x2c38, 0x7530, 0xd767, 0xcd58, 0x359d, 0x1, 0x1);
        gbc.writeMem(0xb630, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0xb632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb630));
        EXPECT(0x7a, gbc.readMem(0xb631));
        // CB 7A 0015
        gbc.setState(0x43e5, 0x9521, 0x5d0, 0x386d, 0x627b, 0xc85e, 0x0, 0x0);
        gbc.writeMem(0x43e5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9521, gbc.sp());
        EXPECT(0x43e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0016
        gbc.setState(0xb244, 0xdc5f, 0x4fc0, 0x516a, 0x60d3, 0x74c2, 0x1, 0x0);
        gbc.writeMem(0xb244, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb244));
        EXPECT(0x7a, gbc.readMem(0xb245));
        // CB 7A 0018
        gbc.setState(0x3243, 0x1024, 0x1510, 0x9b06, 0x8aaf, 0x600b, 0x0, 0x0);
        gbc.writeMem(0x3243, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0x3245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0019
        gbc.setState(0xeae0, 0x81d9, 0xf200, 0xd7bb, 0x222a, 0xab4d, 0x0, 0x1);
        gbc.writeMem(0xeae0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x81d9, gbc.sp());
        EXPECT(0xeae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae0));
        EXPECT(0x7a, gbc.readMem(0xeae1));
        // CB 7A 001A
        gbc.setState(0xb5, 0xd5, 0xe9e0, 0x5911, 0xb100, 0x178f, 0x0, 0x1);
        gbc.writeMem(0xb5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 001B
        gbc.setState(0xe3c, 0x788f, 0x7610, 0x6b32, 0x2c36, 0x4ab8, 0x1, 0x0);
        gbc.writeMem(0xe3c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x788f, gbc.sp());
        EXPECT(0xe3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 001C
        gbc.setState(0xe1b0, 0x9b39, 0x4d90, 0xa5f, 0xfcad, 0xa921, 0x1, 0x0);
        gbc.writeMem(0xe1b0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0xe1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b0));
        EXPECT(0x7a, gbc.readMem(0xe1b1));
        // CB 7A 001D
        gbc.setState(0x5eee, 0x5275, 0x50d0, 0x52db, 0xb201, 0x86df, 0x1, 0x1);
        gbc.writeMem(0x5eee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0x5ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 001E
        gbc.setState(0xb988, 0x4286, 0x64d0, 0x86e7, 0x167e, 0x31a6, 0x0, 0x0);
        gbc.writeMem(0xb988, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4286, gbc.sp());
        EXPECT(0xb98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb988));
        EXPECT(0x7a, gbc.readMem(0xb989));
        // CB 7A 0020
        gbc.setState(0x9c3f, 0x7a4e, 0xe890, 0xf962, 0xe28c, 0x384b, 0x1, 0x1);
        gbc.writeMem(0x9c3f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a4e, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3f));
        EXPECT(0x7a, gbc.readMem(0x9c40));
        // CB 7A 0021
        gbc.setState(0x9381, 0xa656, 0x5120, 0xf1f5, 0xde5a, 0xb296, 0x0, 0x0);
        gbc.writeMem(0x9381, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa656, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9381));
        EXPECT(0x7a, gbc.readMem(0x9382));
        // CB 7A 0022
        gbc.setState(0xee52, 0xd589, 0x8c00, 0xf198, 0x77de, 0x9fa8, 0x0, 0x1);
        gbc.writeMem(0xee52, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd589, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0x7a, gbc.readMem(0xee53));
        // CB 7A 0023
        gbc.setState(0x702b, 0xc4df, 0xcd20, 0x3ed0, 0x592c, 0xe214, 0x1, 0x0);
        gbc.writeMem(0x702b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc4df, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0024
        gbc.setState(0xa3f6, 0xa38a, 0x9b20, 0x3b08, 0x2943, 0x6ff4, 0x1, 0x1);
        gbc.writeMem(0xa3f6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa38a, gbc.sp());
        EXPECT(0xa3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f6));
        EXPECT(0x7a, gbc.readMem(0xa3f7));
        // CB 7A 0025
        gbc.setState(0x2b81, 0xfe21, 0x4320, 0x2356, 0x73c8, 0xe64d, 0x1, 0x0);
        gbc.writeMem(0x2b81, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfe21, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0026
        gbc.setState(0x6df8, 0xc382, 0xc390, 0xae45, 0xc2a5, 0xe5a8, 0x1, 0x1);
        gbc.writeMem(0x6df8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc382, gbc.sp());
        EXPECT(0x6dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0027
        gbc.setState(0xe66a, 0x62f8, 0x5000, 0x37cd, 0x11ba, 0xd14c, 0x0, 0x1);
        gbc.writeMem(0xe66a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x62f8, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66a));
        EXPECT(0x7a, gbc.readMem(0xe66b));
        // CB 7A 0028
        gbc.setState(0xb150, 0xebff, 0x7450, 0x8e46, 0xcbdd, 0x1ec8, 0x1, 0x0);
        gbc.writeMem(0xb150, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xebff, gbc.sp());
        EXPECT(0xb152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb150));
        EXPECT(0x7a, gbc.readMem(0xb151));
        // CB 7A 0029
        gbc.setState(0x456c, 0xc904, 0xfc70, 0x37b0, 0xfeb9, 0xaba4, 0x0, 0x0);
        gbc.writeMem(0x456c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc904, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 002A
        gbc.setState(0xc4b1, 0x1b25, 0x2360, 0x195, 0xec57, 0x6445, 0x0, 0x0);
        gbc.writeMem(0xc4b1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1b25, gbc.sp());
        EXPECT(0xc4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b1));
        EXPECT(0x7a, gbc.readMem(0xc4b2));
        // CB 7A 002B
        gbc.setState(0x49b5, 0x3737, 0xfc20, 0x4e4f, 0x4ad7, 0xc5b, 0x1, 0x0);
        gbc.writeMem(0x49b5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 002C
        gbc.setState(0x5446, 0x1436, 0x100, 0xba36, 0xfbf8, 0xfdfd, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1436, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 002D
        gbc.setState(0x2c50, 0x5ca3, 0xc6c0, 0x6586, 0x369, 0x17a5, 0x1, 0x0);
        gbc.writeMem(0x2c50, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 002E
        gbc.setState(0x4540, 0x6ec2, 0xc2e0, 0x5bbe, 0xd510, 0xd702, 0x0, 0x0);
        gbc.writeMem(0x4540, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0x4542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 002F
        gbc.setState(0xdd0e, 0x7a16, 0x4630, 0x3d7, 0xd34, 0x25cc, 0x1, 0x0);
        gbc.writeMem(0xdd0e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7a16, gbc.sp());
        EXPECT(0xdd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0e));
        EXPECT(0x7a, gbc.readMem(0xdd0f));
        // CB 7A 0030
        gbc.setState(0x26b1, 0x7b1f, 0xb1b0, 0x176f, 0xaf88, 0x8f32, 0x1, 0x1);
        gbc.writeMem(0x26b1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7b1f, gbc.sp());
        EXPECT(0x26b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0031
        gbc.setState(0xd20, 0xaab1, 0xed70, 0x94c3, 0xb146, 0x57e6, 0x1, 0x0);
        gbc.writeMem(0xd20, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0032
        gbc.setState(0x2ce4, 0x6335, 0xfd40, 0x69d1, 0x5e8c, 0xce2b, 0x0, 0x1);
        gbc.writeMem(0x2ce4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0x2ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0033
        gbc.setState(0x9eb4, 0xa040, 0x6c20, 0x6487, 0x7d3d, 0xd179, 0x0, 0x0);
        gbc.writeMem(0x9eb4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0x9eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb4));
        EXPECT(0x7a, gbc.readMem(0x9eb5));
        // CB 7A 0034
        gbc.setState(0x2436, 0xade1, 0x890, 0x25ec, 0xa57, 0xb526, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xade1, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0035
        gbc.setState(0xcfff, 0x5213, 0xc760, 0xbba1, 0x24b2, 0x805, 0x1, 0x1);
        gbc.writeMem(0xcfff, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5213, gbc.sp());
        EXPECT(0xd001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfff));
        EXPECT(0x7a, gbc.readMem(0xd000));
        // CB 7A 0036
        gbc.setState(0x479d, 0x2d14, 0x94d0, 0xa352, 0x3559, 0xadb9, 0x1, 0x1);
        gbc.writeMem(0x479d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2d14, gbc.sp());
        EXPECT(0x479f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0037
        gbc.setState(0x33c3, 0x2a94, 0x1f70, 0x9a4c, 0xcb76, 0x6375, 0x0, 0x0);
        gbc.writeMem(0x33c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0039
        gbc.setState(0x221d, 0xa721, 0xab40, 0x3e7a, 0xfbdb, 0xc987, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa721, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 003A
        gbc.setState(0xe05b, 0xf3a2, 0x6810, 0xe7a0, 0xc052, 0xdcb5, 0x0, 0x1);
        gbc.writeMem(0xe05b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf3a2, gbc.sp());
        EXPECT(0xe05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05b));
        EXPECT(0x7a, gbc.readMem(0xe05c));
        // CB 7A 003B
        gbc.setState(0xbf7a, 0x403, 0xb950, 0x5332, 0xa0e4, 0x6d60, 0x1, 0x1);
        gbc.writeMem(0xbf7a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xbf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7a));
        EXPECT(0x7a, gbc.readMem(0xbf7b));
        // CB 7A 003C
        gbc.setState(0x6c50, 0x67a9, 0xd030, 0xa8d8, 0xe012, 0x189c, 0x0, 0x0);
        gbc.writeMem(0x6c50, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x67a9, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 003D
        gbc.setState(0x6973, 0x71d9, 0xceb0, 0xa6a9, 0x10e7, 0x9290, 0x0, 0x0);
        gbc.writeMem(0x6973, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 003F
        gbc.setState(0x9b57, 0xda3d, 0xf60, 0xb6bb, 0xbd12, 0xef23, 0x0, 0x1);
        gbc.writeMem(0x9b57, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x7a, gbc.readMem(0x9b58));
        // CB 7A 0040
        gbc.setState(0x372, 0xf20f, 0x65e0, 0x8a4b, 0xc7aa, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x372, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf20f, gbc.sp());
        EXPECT(0x374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0041
        gbc.setState(0x4fc0, 0xbc30, 0x7db0, 0x61f5, 0xd280, 0xf7e9, 0x1, 0x1);
        gbc.writeMem(0x4fc0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0x4fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0042
        gbc.setState(0xad41, 0x8f8f, 0x1df0, 0x5ba6, 0x4e27, 0xea7b, 0x1, 0x0);
        gbc.writeMem(0xad41, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f8f, gbc.sp());
        EXPECT(0xad43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad41));
        EXPECT(0x7a, gbc.readMem(0xad42));
        // CB 7A 0043
        gbc.setState(0x5b62, 0x7d33, 0xa350, 0x9cad, 0x48e9, 0xe736, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7d33, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0044
        gbc.setState(0x50e, 0x39ac, 0x56c0, 0xdbc1, 0x5eab, 0x63fe, 0x0, 0x0);
        gbc.writeMem(0x50e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0045
        gbc.setState(0x6559, 0x41f9, 0x94a0, 0xecc6, 0x8a3e, 0x141f, 0x1, 0x0);
        gbc.writeMem(0x6559, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0x655b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0046
        gbc.setState(0x1100, 0x1e3a, 0x63e0, 0xbab8, 0x6acd, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0x1100, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1e3a, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0047
        gbc.setState(0xc4b5, 0x87fa, 0xaa70, 0xafcd, 0xe2a0, 0x257d, 0x0, 0x1);
        gbc.writeMem(0xc4b5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0xc4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b5));
        EXPECT(0x7a, gbc.readMem(0xc4b6));
        // CB 7A 0048
        gbc.setState(0xecd3, 0x4f55, 0x2210, 0x3c8, 0xbd97, 0x81ee, 0x1, 0x1);
        gbc.writeMem(0xecd3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4f55, gbc.sp());
        EXPECT(0xecd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd3));
        EXPECT(0x7a, gbc.readMem(0xecd4));
        // CB 7A 0049
        gbc.setState(0x5905, 0x6c65, 0x88d0, 0x93f8, 0x578e, 0x6274, 0x1, 0x1);
        gbc.writeMem(0x5905, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0x5907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 004A
        gbc.setState(0x9069, 0xca44, 0xfc50, 0x253c, 0xc28c, 0x7bd5, 0x0, 0x1);
        gbc.writeMem(0x9069, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xca44, gbc.sp());
        EXPECT(0x906b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9069));
        EXPECT(0x7a, gbc.readMem(0x906a));
        // CB 7A 004B
        gbc.setState(0xe7eb, 0xbb25, 0x7e00, 0x65c, 0x325e, 0x81f9, 0x1, 0x1);
        gbc.writeMem(0xe7eb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbb25, gbc.sp());
        EXPECT(0xe7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7eb));
        EXPECT(0x7a, gbc.readMem(0xe7ec));
        // CB 7A 004C
        gbc.setState(0x786f, 0x39c, 0x4260, 0xa865, 0x2bc1, 0x5f66, 0x0, 0x0);
        gbc.writeMem(0x786f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x39c, gbc.sp());
        EXPECT(0x7871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 004D
        gbc.setState(0x83de, 0xeff1, 0xc540, 0x1e97, 0xbbe8, 0xaba1, 0x1, 0x0);
        gbc.writeMem(0x83de, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeff1, gbc.sp());
        EXPECT(0x83e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83de));
        EXPECT(0x7a, gbc.readMem(0x83df));
        // CB 7A 004E
        gbc.setState(0x803, 0x690a, 0xb570, 0xe6c7, 0x1495, 0x642d, 0x1, 0x1);
        gbc.writeMem(0x803, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x690a, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 004F
        gbc.setState(0x81e, 0xe1d6, 0xe630, 0x140d, 0x3395, 0x702f, 0x0, 0x0);
        gbc.writeMem(0x81e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1d6, gbc.sp());
        EXPECT(0x820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0050
        gbc.setState(0x283b, 0xb20a, 0xbb80, 0xee41, 0x75af, 0x6ad7, 0x0, 0x1);
        gbc.writeMem(0x283b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb20a, gbc.sp());
        EXPECT(0x283d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0051
        gbc.setState(0x647d, 0xceec, 0x22f0, 0xa01a, 0xa9f5, 0x2a25, 0x1, 0x0);
        gbc.writeMem(0x647d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xceec, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0052
        gbc.setState(0x4ec5, 0x8391, 0xece0, 0x96d1, 0x4a4f, 0x293f, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x4ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0053
        gbc.setState(0x506f, 0x5abf, 0xb620, 0xd84c, 0xb56a, 0x2624, 0x0, 0x1);
        gbc.writeMem(0x506f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5abf, gbc.sp());
        EXPECT(0x5071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0054
        gbc.setState(0xb279, 0x406d, 0xa9a0, 0x3064, 0x3bcb, 0xce18, 0x0, 0x0);
        gbc.writeMem(0xb279, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0xb27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb279));
        EXPECT(0x7a, gbc.readMem(0xb27a));
        // CB 7A 0055
        gbc.setState(0x47b5, 0xb31d, 0x1c40, 0x9d82, 0xad1f, 0x397c, 0x0, 0x0);
        gbc.writeMem(0x47b5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb31d, gbc.sp());
        EXPECT(0x47b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0056
        gbc.setState(0x55b, 0x9b37, 0x1810, 0xc40f, 0x66f7, 0x5e42, 0x0, 0x0);
        gbc.writeMem(0x55b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9b37, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0057
        gbc.setState(0x314d, 0x5c62, 0xfd80, 0xbf3b, 0xb3e1, 0xe96, 0x1, 0x0);
        gbc.writeMem(0x314d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5c62, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0058
        gbc.setState(0x3a59, 0x893f, 0x89b0, 0xd39b, 0x9779, 0x1ecb, 0x1, 0x0);
        gbc.writeMem(0x3a59, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0x3a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0059
        gbc.setState(0x548f, 0x94bd, 0x8030, 0x60b2, 0xdfb0, 0x6249, 0x0, 0x1);
        gbc.writeMem(0x548f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x94bd, gbc.sp());
        EXPECT(0x5491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 005A
        gbc.setState(0xeb72, 0x54fd, 0x3f30, 0xbb90, 0x9e12, 0xf795, 0x0, 0x1);
        gbc.writeMem(0xeb72, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0xeb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb72));
        EXPECT(0x7a, gbc.readMem(0xeb73));
        // CB 7A 005B
        gbc.setState(0x5337, 0xf8fa, 0xb190, 0xde2c, 0x88af, 0xef3b, 0x0, 0x0);
        gbc.writeMem(0x5337, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf8fa, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 005C
        gbc.setState(0x50ab, 0xd8c1, 0x9610, 0xe22a, 0xb307, 0x8f3, 0x1, 0x0);
        gbc.writeMem(0x50ab, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 005D
        gbc.setState(0x5ba0, 0xa908, 0x7fb0, 0x569c, 0xe12e, 0xf73a, 0x1, 0x1);
        gbc.writeMem(0x5ba0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa908, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 005E
        gbc.setState(0x8fd2, 0x2e61, 0x3360, 0xd009, 0xdd08, 0xf3a5, 0x0, 0x0);
        gbc.writeMem(0x8fd2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2e61, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd2));
        EXPECT(0x7a, gbc.readMem(0x8fd3));
        // CB 7A 005F
        gbc.setState(0xedfe, 0xcfb1, 0xbc40, 0xf677, 0xed36, 0x7c73, 0x1, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0x7a, gbc.readMem(0xedff));
        // CB 7A 0060
        gbc.setState(0xec5e, 0x4dbf, 0xd380, 0x5d9, 0x633f, 0x5eb6, 0x1, 0x0);
        gbc.writeMem(0xec5e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4dbf, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5e));
        EXPECT(0x7a, gbc.readMem(0xec5f));
        // CB 7A 0061
        gbc.setState(0x3260, 0x606d, 0x3dd0, 0xe8d9, 0x5911, 0xfe5a, 0x1, 0x0);
        gbc.writeMem(0x3260, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x606d, gbc.sp());
        EXPECT(0x3262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0062
        gbc.setState(0xdce, 0x9675, 0x61d0, 0x624d, 0x48f1, 0xc5c3, 0x1, 0x1);
        gbc.writeMem(0xdce, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9675, gbc.sp());
        EXPECT(0xdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0063
        gbc.setState(0x8829, 0xd4cf, 0xaf90, 0xe5e9, 0xdb12, 0xd12b, 0x1, 0x0);
        gbc.writeMem(0x8829, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd4cf, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8829));
        EXPECT(0x7a, gbc.readMem(0x882a));
        // CB 7A 0064
        gbc.setState(0x70b7, 0x7ddf, 0x3d00, 0xb566, 0x21ac, 0x48d3, 0x1, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0065
        gbc.setState(0x4cf4, 0xc1c7, 0xff40, 0x2d30, 0x8a04, 0x63c0, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x4cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0066
        gbc.setState(0xa383, 0xd3a6, 0x5d80, 0x2a78, 0x392, 0xc84c, 0x0, 0x1);
        gbc.writeMem(0xa383, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0xa385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa383));
        EXPECT(0x7a, gbc.readMem(0xa384));
        // CB 7A 0067
        gbc.setState(0x6fd8, 0x64a6, 0x7150, 0x903a, 0xebd7, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0x6fd8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x64a6, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0068
        gbc.setState(0xd66f, 0xc80a, 0x6490, 0xabb, 0x6e3b, 0x33d3, 0x0, 0x0);
        gbc.writeMem(0xd66f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc80a, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66f));
        EXPECT(0x7a, gbc.readMem(0xd670));
        // CB 7A 0069
        gbc.setState(0xaae7, 0xfc04, 0x6d0, 0xbd43, 0xb924, 0xc33e, 0x1, 0x1);
        gbc.writeMem(0xaae7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfc04, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae7));
        EXPECT(0x7a, gbc.readMem(0xaae8));
        // CB 7A 006A
        gbc.setState(0xd930, 0x3e4, 0xe450, 0x1aea, 0xc422, 0x155f, 0x1, 0x0);
        gbc.writeMem(0xd930, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3e4, gbc.sp());
        EXPECT(0xd932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd930));
        EXPECT(0x7a, gbc.readMem(0xd931));
        // CB 7A 006B
        gbc.setState(0xbcc1, 0xbad3, 0x6f20, 0x45ca, 0x8e07, 0x4321, 0x1, 0x0);
        gbc.writeMem(0xbcc1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbad3, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        EXPECT(0x7a, gbc.readMem(0xbcc2));
        // CB 7A 006C
        gbc.setState(0x859f, 0x505a, 0xbe0, 0x2822, 0x3986, 0x91bb, 0x1, 0x0);
        gbc.writeMem(0x859f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x505a, gbc.sp());
        EXPECT(0x85a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859f));
        EXPECT(0x7a, gbc.readMem(0x85a0));
        // CB 7A 006D
        gbc.setState(0x48f3, 0xcc2, 0x4b70, 0x3785, 0x5730, 0x62c, 0x0, 0x0);
        gbc.writeMem(0x48f3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 006E
        gbc.setState(0x840, 0xb01a, 0x6680, 0xe678, 0xadb7, 0x1659, 0x0, 0x1);
        gbc.writeMem(0x840, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 006F
        gbc.setState(0x6406, 0xe5cd, 0xae60, 0xb490, 0x1517, 0xda2, 0x0, 0x0);
        gbc.writeMem(0x6406, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x6408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0070
        gbc.setState(0xbda1, 0x306b, 0xca70, 0xdc7b, 0xdc0d, 0x5901, 0x0, 0x1);
        gbc.writeMem(0xbda1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x306b, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda1));
        EXPECT(0x7a, gbc.readMem(0xbda2));
        // CB 7A 0071
        gbc.setState(0x6762, 0x2672, 0x8fb0, 0x649e, 0x5196, 0xdcf0, 0x1, 0x0);
        gbc.writeMem(0x6762, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0x6764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0072
        gbc.setState(0x4cda, 0xb4e3, 0x7cd0, 0xf3bf, 0xd9d5, 0xbea6, 0x0, 0x1);
        gbc.writeMem(0x4cda, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0073
        gbc.setState(0x3bb0, 0x45fd, 0xad90, 0x23c9, 0x23f7, 0xd9c, 0x1, 0x0);
        gbc.writeMem(0x3bb0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x45fd, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0074
        gbc.setState(0xab66, 0xd665, 0x38d0, 0x84a2, 0x3242, 0xfe75, 0x0, 0x0);
        gbc.writeMem(0xab66, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd665, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab66));
        EXPECT(0x7a, gbc.readMem(0xab67));
        // CB 7A 0075
        gbc.setState(0x64c0, 0x6298, 0x2ee0, 0x37d0, 0xf826, 0x2d6, 0x0, 0x0);
        gbc.writeMem(0x64c0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6298, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0076
        gbc.setState(0x339b, 0x4488, 0x9790, 0xf4c8, 0xac79, 0x287a, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4488, gbc.sp());
        EXPECT(0x339d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0077
        gbc.setState(0x8ca5, 0x2f76, 0x49a0, 0x2714, 0xb96f, 0x9050, 0x1, 0x0);
        gbc.writeMem(0x8ca5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0x7a, gbc.readMem(0x8ca6));
        // CB 7A 0078
        gbc.setState(0x7ab7, 0x4d03, 0x11b0, 0xc236, 0x2b9f, 0x90e7, 0x0, 0x0);
        gbc.writeMem(0x7ab7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x7ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0079
        gbc.setState(0x9a1d, 0x559c, 0x5a50, 0x9a8e, 0xcfde, 0xa5bb, 0x0, 0x1);
        gbc.writeMem(0x9a1d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x559c, gbc.sp());
        EXPECT(0x9a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1d));
        EXPECT(0x7a, gbc.readMem(0x9a1e));
        // CB 7A 007A
        gbc.setState(0x45e1, 0x371b, 0x4380, 0x862a, 0x2bd3, 0xdfa6, 0x0, 0x1);
        gbc.writeMem(0x45e1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x371b, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 007B
        gbc.setState(0x5af3, 0x300f, 0x9520, 0x8b82, 0xe2be, 0xe101, 0x1, 0x1);
        gbc.writeMem(0x5af3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 007C
        gbc.setState(0xd855, 0xc440, 0x1e40, 0x1293, 0x9ddb, 0x9331, 0x1, 0x1);
        gbc.writeMem(0xd855, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc440, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd855));
        EXPECT(0x7a, gbc.readMem(0xd856));
        // CB 7A 007D
        gbc.setState(0x2f77, 0x452d, 0x7a60, 0x56e, 0xc586, 0x70b2, 0x1, 0x1);
        gbc.writeMem(0x2f77, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0x2f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 007F
        gbc.setState(0x6dd1, 0x1b54, 0x6f40, 0xfda6, 0x81da, 0xa185, 0x1, 0x1);
        gbc.writeMem(0x6dd1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1b54, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0081
        gbc.setState(0x67e, 0xe723, 0x5500, 0xc454, 0xee12, 0x4916, 0x0, 0x1);
        gbc.writeMem(0x67e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0x680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0082
        gbc.setState(0xb4d1, 0x64a8, 0x8ce0, 0xb34a, 0x4cf7, 0xeaea, 0x0, 0x0);
        gbc.writeMem(0xb4d1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x64a8, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d1));
        EXPECT(0x7a, gbc.readMem(0xb4d2));
        // CB 7A 0083
        gbc.setState(0x27e, 0x3603, 0x33a0, 0x607e, 0xd3c8, 0x2dea, 0x1, 0x1);
        gbc.writeMem(0x27e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3603, gbc.sp());
        EXPECT(0x280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0084
        gbc.setState(0xc290, 0xcb22, 0x9f30, 0xd746, 0x9d58, 0x7bb5, 0x1, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb22, gbc.sp());
        EXPECT(0xc292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc290));
        EXPECT(0x7a, gbc.readMem(0xc291));
        // CB 7A 0085
        gbc.setState(0x6750, 0xc9f6, 0x5460, 0xe226, 0xcc34, 0xeaad, 0x1, 0x0);
        gbc.writeMem(0x6750, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc9f6, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0086
        gbc.setState(0x3e86, 0x4ab4, 0x1bb0, 0x252b, 0x2d0d, 0xd863, 0x1, 0x0);
        gbc.writeMem(0x3e86, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0087
        gbc.setState(0x6c61, 0x68ad, 0xb380, 0x9455, 0xc23, 0x90b2, 0x1, 0x0);
        gbc.writeMem(0x6c61, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x68ad, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0088
        gbc.setState(0x19c6, 0xfc7d, 0x9270, 0xc59f, 0x11d8, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x19c6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc7d, gbc.sp());
        EXPECT(0x19c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0089
        gbc.setState(0xd94c, 0x6362, 0x38c0, 0x52f, 0x3e39, 0x7085, 0x0, 0x0);
        gbc.writeMem(0xd94c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6362, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0x7a, gbc.readMem(0xd94d));
        // CB 7A 008A
        gbc.setState(0x26a, 0x6215, 0x8230, 0x9230, 0x3d82, 0x41a, 0x0, 0x0);
        gbc.writeMem(0x26a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6215, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 008B
        gbc.setState(0x2ef, 0xdfd, 0x780, 0x2451, 0x893d, 0xafbd, 0x0, 0x1);
        gbc.writeMem(0x2ef, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0x2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 008C
        gbc.setState(0x4fd2, 0x57f9, 0x240, 0xc3f9, 0x228f, 0xf28e, 0x1, 0x1);
        gbc.writeMem(0x4fd2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x4fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 008D
        gbc.setState(0x37f9, 0x457c, 0xbdf0, 0xcd3b, 0x580f, 0xa8dc, 0x1, 0x0);
        gbc.writeMem(0x37f9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 008E
        gbc.setState(0x81ef, 0xea49, 0x9c80, 0xc0a4, 0x3e47, 0x6e89, 0x1, 0x0);
        gbc.writeMem(0x81ef, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x81f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ef));
        EXPECT(0x7a, gbc.readMem(0x81f0));
        // CB 7A 008F
        gbc.setState(0x3e8b, 0xaa54, 0xa700, 0x1a96, 0x7a7f, 0xd112, 0x1, 0x0);
        gbc.writeMem(0x3e8b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0x3e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0090
        gbc.setState(0xdaa8, 0xf514, 0xc1d0, 0x1364, 0x67c2, 0x86f3, 0x1, 0x0);
        gbc.writeMem(0xdaa8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa8));
        EXPECT(0x7a, gbc.readMem(0xdaa9));
        // CB 7A 0091
        gbc.setState(0x2027, 0xaca5, 0x1fc0, 0x5f03, 0xe19d, 0x772b, 0x1, 0x1);
        gbc.writeMem(0x2027, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaca5, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0092
        gbc.setState(0xa480, 0x1bab, 0x6ce0, 0xf51f, 0x7980, 0x4a27, 0x0, 0x0);
        gbc.writeMem(0xa480, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0xa482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa480));
        EXPECT(0x7a, gbc.readMem(0xa481));
        // CB 7A 0093
        gbc.setState(0x7dca, 0xadeb, 0x1300, 0xe637, 0x24aa, 0xb746, 0x1, 0x0);
        gbc.writeMem(0x7dca, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xadeb, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0094
        gbc.setState(0xe98d, 0x5460, 0xfbf0, 0x6cc1, 0x948e, 0xe9f1, 0x1, 0x0);
        gbc.writeMem(0xe98d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5460, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98d));
        EXPECT(0x7a, gbc.readMem(0xe98e));
        // CB 7A 0095
        gbc.setState(0xebda, 0x4b9, 0x11e0, 0x8401, 0x430, 0x5a99, 0x1, 0x1);
        gbc.writeMem(0xebda, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4b9, gbc.sp());
        EXPECT(0xebdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebda));
        EXPECT(0x7a, gbc.readMem(0xebdb));
        // CB 7A 0096
        gbc.setState(0xd6c5, 0x2e9, 0x1df0, 0x58df, 0x57cd, 0x4636, 0x1, 0x1);
        gbc.writeMem(0xd6c5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2e9, gbc.sp());
        EXPECT(0xd6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c5));
        EXPECT(0x7a, gbc.readMem(0xd6c6));
        // CB 7A 0097
        gbc.setState(0xd729, 0xf409, 0xa160, 0xb66f, 0x63b8, 0x82db, 0x0, 0x0);
        gbc.writeMem(0xd729, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0xd72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd729));
        EXPECT(0x7a, gbc.readMem(0xd72a));
        // CB 7A 0098
        gbc.setState(0xb63a, 0x4172, 0x9b80, 0xdfe0, 0xe739, 0x8822, 0x1, 0x0);
        gbc.writeMem(0xb63a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4172, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63a));
        EXPECT(0x7a, gbc.readMem(0xb63b));
        // CB 7A 009A
        gbc.setState(0x23ff, 0x8faa, 0xe6b0, 0x832b, 0x1778, 0x338c, 0x1, 0x1);
        gbc.writeMem(0x23ff, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 009C
        gbc.setState(0x7c00, 0x3af, 0xd210, 0xe36b, 0x31f4, 0x8f13, 0x1, 0x0);
        gbc.writeMem(0x7c00, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3af, gbc.sp());
        EXPECT(0x7c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 009D
        gbc.setState(0xc171, 0x91de, 0xa570, 0xf036, 0xb3ca, 0x4e37, 0x0, 0x0);
        gbc.writeMem(0xc171, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x91de, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc171));
        EXPECT(0x7a, gbc.readMem(0xc172));
        // CB 7A 009E
        gbc.setState(0x21fb, 0x91b2, 0xa150, 0xe47e, 0x6929, 0xf60e, 0x0, 0x0);
        gbc.writeMem(0x21fb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0x21fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 009F
        gbc.setState(0x3305, 0x874, 0x6d70, 0xd4e0, 0x9deb, 0x2bd2, 0x0, 0x0);
        gbc.writeMem(0x3305, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x874, gbc.sp());
        EXPECT(0x3307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00A0
        gbc.setState(0xb547, 0xed62, 0xd2a0, 0x4c1a, 0x7677, 0xea90, 0x0, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed62, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0x7a, gbc.readMem(0xb548));
        // CB 7A 00A1
        gbc.setState(0xb267, 0xee7, 0x7740, 0x5e96, 0xa2cc, 0xd4c3, 0x1, 0x1);
        gbc.writeMem(0xb267, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0xb269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb267));
        EXPECT(0x7a, gbc.readMem(0xb268));
        // CB 7A 00A2
        gbc.setState(0xe664, 0xc8f2, 0x4970, 0x8784, 0x44d6, 0xaf5, 0x1, 0x0);
        gbc.writeMem(0xe664, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0xe666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe664));
        EXPECT(0x7a, gbc.readMem(0xe665));
        // CB 7A 00A3
        gbc.setState(0x477, 0x34a1, 0x7040, 0x9e70, 0xdf31, 0x46bc, 0x0, 0x1);
        gbc.writeMem(0x477, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00A4
        gbc.setState(0x39a1, 0xff0f, 0x110, 0x1164, 0xbba1, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0x39a1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xff0f, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00A5
        gbc.setState(0xe72a, 0x22ee, 0xbf40, 0xb473, 0xc54f, 0x1396, 0x1, 0x1);
        gbc.writeMem(0xe72a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x22ee, gbc.sp());
        EXPECT(0xe72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72a));
        EXPECT(0x7a, gbc.readMem(0xe72b));
        // CB 7A 00A6
        gbc.setState(0x8ca0, 0x11a3, 0xe5e0, 0x9d10, 0xee09, 0x3e39, 0x0, 0x1);
        gbc.writeMem(0x8ca0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x11a3, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca0));
        EXPECT(0x7a, gbc.readMem(0x8ca1));
        // CB 7A 00A8
        gbc.setState(0xeed, 0x8014, 0xaf80, 0x89bc, 0x7802, 0xf22e, 0x1, 0x0);
        gbc.writeMem(0xeed, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00A9
        gbc.setState(0xef16, 0x1ffe, 0xe500, 0xe279, 0x3b51, 0xf951, 0x0, 0x0);
        gbc.writeMem(0xef16, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef16));
        EXPECT(0x7a, gbc.readMem(0xef17));
        // CB 7A 00AA
        gbc.setState(0xd1a8, 0xb44a, 0x6fd0, 0xb4, 0xc6d0, 0x6bc, 0x0, 0x0);
        gbc.writeMem(0xd1a8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xd1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a8));
        EXPECT(0x7a, gbc.readMem(0xd1a9));
        // CB 7A 00AB
        gbc.setState(0x61c7, 0xc895, 0x6e80, 0xa19f, 0x5602, 0x149b, 0x0, 0x0);
        gbc.writeMem(0x61c7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc895, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00AC
        gbc.setState(0x95d, 0x3537, 0x5300, 0xf383, 0x992d, 0x7bfe, 0x1, 0x1);
        gbc.writeMem(0x95d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00AD
        gbc.setState(0x2f38, 0xaf8b, 0x5470, 0x45a0, 0xc1a9, 0x2e46, 0x1, 0x0);
        gbc.writeMem(0x2f38, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0x2f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00AE
        gbc.setState(0x2aa6, 0x299b, 0x7a60, 0x8316, 0x5664, 0x42a4, 0x1, 0x0);
        gbc.writeMem(0x2aa6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x299b, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00AF
        gbc.setState(0x19c3, 0xb4b, 0xb1c0, 0x3847, 0x295e, 0xc275, 0x0, 0x1);
        gbc.writeMem(0x19c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00B0
        gbc.setState(0x3330, 0xe183, 0x73b0, 0x307e, 0x3c37, 0xc7dd, 0x1, 0x0);
        gbc.writeMem(0x3330, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe183, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00B1
        gbc.setState(0x5407, 0x7393, 0xd870, 0x7012, 0xaccc, 0xe023, 0x0, 0x0);
        gbc.writeMem(0x5407, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00B2
        gbc.setState(0x79f1, 0xe8e7, 0x6dd0, 0x29b0, 0x35d8, 0x5473, 0x0, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe8e7, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00B3
        gbc.setState(0xf73, 0x812f, 0x7220, 0x5e7b, 0x2f66, 0x896e, 0x1, 0x1);
        gbc.writeMem(0xf73, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x812f, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00B4
        gbc.setState(0x12e2, 0x1373, 0x7cf0, 0xe7bc, 0x6569, 0xe8d4, 0x1, 0x0);
        gbc.writeMem(0x12e2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1373, gbc.sp());
        EXPECT(0x12e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00B5
        gbc.setState(0xa7cc, 0x5583, 0xbda0, 0xbe7e, 0x3aab, 0xdc3, 0x0, 0x0);
        gbc.writeMem(0xa7cc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5583, gbc.sp());
        EXPECT(0xa7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cc));
        EXPECT(0x7a, gbc.readMem(0xa7cd));
        // CB 7A 00B6
        gbc.setState(0x70da, 0x526f, 0x2600, 0x6660, 0x1d38, 0xdd90, 0x0, 0x0);
        gbc.writeMem(0x70da, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x526f, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00B7
        gbc.setState(0x6aef, 0xc417, 0x2720, 0x6398, 0xbee, 0x2a1a, 0x0, 0x1);
        gbc.writeMem(0x6aef, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc417, gbc.sp());
        EXPECT(0x6af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00B8
        gbc.setState(0xae14, 0x8626, 0xe030, 0xf611, 0x874f, 0x2a7, 0x1, 0x0);
        gbc.writeMem(0xae14, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae14));
        EXPECT(0x7a, gbc.readMem(0xae15));
        // CB 7A 00B9
        gbc.setState(0x5a06, 0xee3a, 0x5700, 0xf79, 0x90ee, 0x5543, 0x0, 0x1);
        gbc.writeMem(0x5a06, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xee3a, gbc.sp());
        EXPECT(0x5a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00BA
        gbc.setState(0x8cd, 0xf6ea, 0x1060, 0x4449, 0x5f64, 0x4903, 0x1, 0x0);
        gbc.writeMem(0x8cd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf6ea, gbc.sp());
        EXPECT(0x8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00BB
        gbc.setState(0x16c0, 0x960d, 0xb400, 0x5f3c, 0x9549, 0x621, 0x0, 0x0);
        gbc.writeMem(0x16c0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x960d, gbc.sp());
        EXPECT(0x16c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00BC
        gbc.setState(0x19fd, 0x41dd, 0xa9c0, 0x1ff6, 0xcc4e, 0xcb09, 0x0, 0x0);
        gbc.writeMem(0x19fd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x41dd, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00BD
        gbc.setState(0x3dfc, 0x818e, 0x6650, 0x5a03, 0xf08c, 0x70d7, 0x1, 0x1);
        gbc.writeMem(0x3dfc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0x3dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00BE
        gbc.setState(0x58b9, 0x9a2f, 0x6780, 0x8d0e, 0x26e1, 0x8166, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9a2f, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00BF
        gbc.setState(0x6bfd, 0x9e5, 0x6400, 0x6c25, 0x621f, 0xf3e7, 0x1, 0x1);
        gbc.writeMem(0x6bfd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9e5, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00C0
        gbc.setState(0x6fd8, 0x948c, 0x8430, 0x6b08, 0xfd1, 0xed57, 0x0, 0x1);
        gbc.writeMem(0x6fd8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x948c, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00C1
        gbc.setState(0xe4d8, 0x7f1d, 0xffb0, 0xaa55, 0xa076, 0x396b, 0x1, 0x0);
        gbc.writeMem(0xe4d8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0xe4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d8));
        EXPECT(0x7a, gbc.readMem(0xe4d9));
        // CB 7A 00C2
        gbc.setState(0x234c, 0xcf28, 0xffd0, 0x1af6, 0xce15, 0xe7f, 0x1, 0x1);
        gbc.writeMem(0x234c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcf28, gbc.sp());
        EXPECT(0x234e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00C3
        gbc.setState(0x324d, 0xa1cf, 0x2a00, 0xc8b2, 0x46, 0x7c19, 0x0, 0x1);
        gbc.writeMem(0x324d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa1cf, gbc.sp());
        EXPECT(0x324f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00C4
        gbc.setState(0x574e, 0xe276, 0x3510, 0x35ad, 0x814b, 0xa92f, 0x1, 0x1);
        gbc.writeMem(0x574e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe276, gbc.sp());
        EXPECT(0x5750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00C5
        gbc.setState(0xbd5f, 0xdab7, 0x7f50, 0x3b44, 0xbe58, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0xbd5f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdab7, gbc.sp());
        EXPECT(0xbd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5f));
        EXPECT(0x7a, gbc.readMem(0xbd60));
        // CB 7A 00C6
        gbc.setState(0xa446, 0xcdff, 0x56c0, 0x19cf, 0x7f62, 0xe567, 0x1, 0x0);
        gbc.writeMem(0xa446, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0xa448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa446));
        EXPECT(0x7a, gbc.readMem(0xa447));
        // CB 7A 00C8
        gbc.setState(0x1be8, 0xbe56, 0xd950, 0x2a55, 0xe23b, 0x3f57, 0x1, 0x1);
        gbc.writeMem(0x1be8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00C9
        gbc.setState(0xd158, 0x849b, 0x7750, 0xf20, 0x86c3, 0xd67c, 0x0, 0x0);
        gbc.writeMem(0xd158, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x849b, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd158));
        EXPECT(0x7a, gbc.readMem(0xd159));
        // CB 7A 00CA
        gbc.setState(0x993f, 0xa537, 0xfeb0, 0x6eff, 0x46dc, 0x5323, 0x0, 0x0);
        gbc.writeMem(0x993f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993f));
        EXPECT(0x7a, gbc.readMem(0x9940));
        // CB 7A 00CB
        gbc.setState(0xba52, 0x9626, 0x47d0, 0xa85c, 0xbdfc, 0x2dd5, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9626, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0x7a, gbc.readMem(0xba53));
        // CB 7A 00CC
        gbc.setState(0x3efb, 0xbf40, 0xa160, 0x539d, 0xa933, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x3efb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf40, gbc.sp());
        EXPECT(0x3efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00CD
        gbc.setState(0x2f12, 0x55e7, 0xf5b0, 0xa5f5, 0xf511, 0xf334, 0x0, 0x0);
        gbc.writeMem(0x2f12, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00CE
        gbc.setState(0x8940, 0x9a13, 0xe8d0, 0xa8c1, 0x2c79, 0xc83c, 0x1, 0x0);
        gbc.writeMem(0x8940, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0x8942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8940));
        EXPECT(0x7a, gbc.readMem(0x8941));
        // CB 7A 00D0
        gbc.setState(0xace4, 0xd500, 0x40, 0x1608, 0xbaa1, 0xc709, 0x1, 0x0);
        gbc.writeMem(0xace4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd500, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace4));
        EXPECT(0x7a, gbc.readMem(0xace5));
        // CB 7A 00D1
        gbc.setState(0x6639, 0xb292, 0x2d70, 0x366b, 0xf88a, 0x4f11, 0x0, 0x1);
        gbc.writeMem(0x6639, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb292, gbc.sp());
        EXPECT(0x663b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00D2
        gbc.setState(0x6f1, 0x952e, 0x35f0, 0xeb9e, 0xac5b, 0x4386, 0x0, 0x1);
        gbc.writeMem(0x6f1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0x6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00D3
        gbc.setState(0xd541, 0xe3be, 0xe230, 0x3c91, 0x1275, 0x3689, 0x1, 0x1);
        gbc.writeMem(0xd541, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe3be, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd541));
        EXPECT(0x7a, gbc.readMem(0xd542));
        // CB 7A 00D4
        gbc.setState(0x86e6, 0x3f48, 0xd800, 0xeb5a, 0x826d, 0xd1a6, 0x1, 0x0);
        gbc.writeMem(0x86e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3f48, gbc.sp());
        EXPECT(0x86e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e6));
        EXPECT(0x7a, gbc.readMem(0x86e7));
        // CB 7A 00D5
        gbc.setState(0x74a8, 0xb9f8, 0x3340, 0x24eb, 0x3d7, 0xb335, 0x0, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb9f8, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00D6
        gbc.setState(0x3007, 0xc927, 0x7720, 0x4ef3, 0x6f85, 0x8064, 0x0, 0x0);
        gbc.writeMem(0x3007, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc927, gbc.sp());
        EXPECT(0x3009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00D7
        gbc.setState(0xa517, 0x90c0, 0xea90, 0x5bbf, 0x6a4c, 0x46d2, 0x1, 0x0);
        gbc.writeMem(0xa517, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa517));
        EXPECT(0x7a, gbc.readMem(0xa518));
        // CB 7A 00D8
        gbc.setState(0x5034, 0xe5f9, 0x5f40, 0xad02, 0x9542, 0x9592, 0x1, 0x0);
        gbc.writeMem(0x5034, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00D9
        gbc.setState(0x9432, 0xdd9a, 0xa870, 0xf3f9, 0x6bc0, 0x9d67, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdd9a, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0x7a, gbc.readMem(0x9433));
        // CB 7A 00DA
        gbc.setState(0x45d, 0xa7a4, 0x2e80, 0xa5d, 0x3601, 0xdf82, 0x1, 0x1);
        gbc.writeMem(0x45d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00DB
        gbc.setState(0x4c12, 0x10ad, 0x7c20, 0xe775, 0xb770, 0x39a0, 0x1, 0x0);
        gbc.writeMem(0x4c12, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00DC
        gbc.setState(0x4ea2, 0xc1c9, 0xbcf0, 0xa9a6, 0x192a, 0x33cc, 0x1, 0x0);
        gbc.writeMem(0x4ea2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00DE
        gbc.setState(0xb6b, 0x1b03, 0x6000, 0x2220, 0x566f, 0xb5c2, 0x1, 0x0);
        gbc.writeMem(0xb6b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0xb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00DF
        gbc.setState(0x52c3, 0x5214, 0x8060, 0xeb21, 0x75c6, 0xa911, 0x1, 0x1);
        gbc.writeMem(0x52c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0x52c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00E0
        gbc.setState(0x388a, 0x175f, 0xf980, 0x52ad, 0x9b3, 0x69fb, 0x1, 0x0);
        gbc.writeMem(0x388a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x175f, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00E1
        gbc.setState(0xcc17, 0xd417, 0xc2f0, 0xe511, 0xf866, 0xe887, 0x0, 0x1);
        gbc.writeMem(0xcc17, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd417, gbc.sp());
        EXPECT(0xcc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc17));
        EXPECT(0x7a, gbc.readMem(0xcc18));
        // CB 7A 00E3
        gbc.setState(0x52b1, 0x927d, 0x5020, 0xa220, 0x55fc, 0x48a7, 0x1, 0x1);
        gbc.writeMem(0x52b1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00E4
        gbc.setState(0x6917, 0x8ec1, 0x96f0, 0x5bc0, 0x455, 0x3c59, 0x0, 0x0);
        gbc.writeMem(0x6917, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00E5
        gbc.setState(0x142b, 0xd349, 0xd0d0, 0x5aa9, 0x67b8, 0x6d39, 0x1, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00E6
        gbc.setState(0x6770, 0xdae7, 0x5430, 0x268c, 0xa970, 0xd767, 0x1, 0x1);
        gbc.writeMem(0x6770, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0x6772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00E7
        gbc.setState(0x202e, 0xe465, 0x7130, 0x36e6, 0xa723, 0x2dd, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00E8
        gbc.setState(0x3723, 0x20d0, 0x3600, 0x9ec8, 0x4d27, 0xcb2, 0x1, 0x0);
        gbc.writeMem(0x3723, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x20d0, gbc.sp());
        EXPECT(0x3725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00E9
        gbc.setState(0xb5, 0xde77, 0x3870, 0xd2a6, 0xb138, 0xbbcf, 0x0, 0x0);
        gbc.writeMem(0xb5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00EA
        gbc.setState(0xc324, 0xa04c, 0x8bd0, 0x8868, 0x6d7f, 0xb8f7, 0x1, 0x0);
        gbc.writeMem(0xc324, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc324));
        EXPECT(0x7a, gbc.readMem(0xc325));
        // CB 7A 00EC
        gbc.setState(0x4930, 0xfac9, 0xb760, 0x7fc6, 0x9c31, 0x3c1e, 0x0, 0x1);
        gbc.writeMem(0x4930, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0x4932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00ED
        gbc.setState(0xc1f3, 0xdd93, 0xc5f0, 0x528f, 0xe5c4, 0x7cc3, 0x0, 0x0);
        gbc.writeMem(0xc1f3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdd93, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f3));
        EXPECT(0x7a, gbc.readMem(0xc1f4));
        // CB 7A 00EE
        gbc.setState(0xe3af, 0x5f52, 0x4a0, 0x1f9e, 0x6ca0, 0x56f2, 0x1, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5f52, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0x7a, gbc.readMem(0xe3b0));
        // CB 7A 00EF
        gbc.setState(0xb1dd, 0x4336, 0xd470, 0x9bf8, 0x1226, 0xeea2, 0x1, 0x0);
        gbc.writeMem(0xb1dd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dd));
        EXPECT(0x7a, gbc.readMem(0xb1de));
        // CB 7A 00F0
        gbc.setState(0x33ab, 0x3eab, 0x49f0, 0x7b06, 0x1189, 0x36c9, 0x1, 0x0);
        gbc.writeMem(0x33ab, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3eab, gbc.sp());
        EXPECT(0x33ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00F3
        gbc.setState(0xbd68, 0x8936, 0x8270, 0xee99, 0x524e, 0x23bd, 0x1, 0x1);
        gbc.writeMem(0xbd68, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8936, gbc.sp());
        EXPECT(0xbd6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd68));
        EXPECT(0x7a, gbc.readMem(0xbd69));
        // CB 7A 00F4
        gbc.setState(0x39d4, 0x6109, 0x91a0, 0xa769, 0xaeea, 0xd31c, 0x0, 0x1);
        gbc.writeMem(0x39d4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00F5
        gbc.setState(0x944f, 0xd39c, 0x8450, 0x4097, 0x732d, 0x315c, 0x1, 0x1);
        gbc.writeMem(0x944f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x9451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944f));
        EXPECT(0x7a, gbc.readMem(0x9450));
        // CB 7A 00F7
        gbc.setState(0xe850, 0xc3f4, 0x1750, 0xf074, 0x26e4, 0x2e63, 0x0, 0x1);
        gbc.writeMem(0xe850, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc3f4, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0x7a, gbc.readMem(0xe851));
        // CB 7A 00F8
        gbc.setState(0x8bf7, 0xaf08, 0xc590, 0x204e, 0x7010, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0x8bf7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0x8bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf7));
        EXPECT(0x7a, gbc.readMem(0x8bf8));
        // CB 7A 00F9
        gbc.setState(0x39f4, 0xe113, 0xdd80, 0x3456, 0x67d1, 0xaa7d, 0x1, 0x0);
        gbc.writeMem(0x39f4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x39f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00FA
        gbc.setState(0x1259, 0x2bc5, 0x6bf0, 0xb33a, 0xb0c, 0x5427, 0x0, 0x0);
        gbc.writeMem(0x1259, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2bc5, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00FB
        gbc.setState(0x2ca2, 0xc19d, 0x5f00, 0x4bdf, 0x8e7d, 0xeb45, 0x1, 0x0);
        gbc.writeMem(0x2ca2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc19d, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00FC
        gbc.setState(0x22f1, 0x5100, 0xf410, 0xa7dc, 0x468d, 0xd108, 0x1, 0x1);
        gbc.writeMem(0x22f1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 00FD
        gbc.setState(0xc4ef, 0x4156, 0x57b0, 0xd297, 0xfade, 0xf851, 0x1, 0x0);
        gbc.writeMem(0xc4ef, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4156, gbc.sp());
        EXPECT(0xc4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ef));
        EXPECT(0x7a, gbc.readMem(0xc4f0));
        // CB 7A 00FE
        gbc.setState(0x874, 0xc970, 0xd000, 0xf334, 0x782e, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0x874, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc970, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 00FF
        gbc.setState(0xd28f, 0x332c, 0x4a0, 0x29db, 0xb715, 0x7406, 0x0, 0x0);
        gbc.writeMem(0xd28f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0xd291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28f));
        EXPECT(0x7a, gbc.readMem(0xd290));
        // CB 7A 0100
        gbc.setState(0x373a, 0x4b65, 0xfa50, 0x180d, 0x11d6, 0x4429, 0x0, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4b65, gbc.sp());
        EXPECT(0x373c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0101
        gbc.setState(0x77ea, 0x32b, 0x5190, 0x100f, 0x189d, 0xfd1d, 0x1, 0x1);
        gbc.writeMem(0x77ea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x32b, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0102
        gbc.setState(0x3caf, 0x61a0, 0xcbf0, 0xad42, 0xe0fa, 0xd1e0, 0x1, 0x0);
        gbc.writeMem(0x3caf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0103
        gbc.setState(0xabf4, 0x6794, 0x97a0, 0x1319, 0xa647, 0xc9f0, 0x1, 0x0);
        gbc.writeMem(0xabf4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6794, gbc.sp());
        EXPECT(0xabf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf4));
        EXPECT(0x7a, gbc.readMem(0xabf5));
        // CB 7A 0104
        gbc.setState(0xdd9, 0x226, 0x7a30, 0xc4f9, 0x9376, 0xf4b3, 0x0, 0x1);
        gbc.writeMem(0xdd9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x226, gbc.sp());
        EXPECT(0xddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0106
        gbc.setState(0x608e, 0xfd99, 0x6560, 0xe087, 0xdb80, 0xd80c, 0x1, 0x1);
        gbc.writeMem(0x608e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfd99, gbc.sp());
        EXPECT(0x6090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0107
        gbc.setState(0xa9e2, 0x3cb9, 0x3100, 0x13ee, 0xde19, 0x5df4, 0x1, 0x1);
        gbc.writeMem(0xa9e2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3cb9, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e2));
        EXPECT(0x7a, gbc.readMem(0xa9e3));
        // CB 7A 0108
        gbc.setState(0x25f9, 0xb587, 0x1660, 0x6bb, 0x7fc0, 0xf58, 0x0, 0x0);
        gbc.writeMem(0x25f9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x25fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0109
        gbc.setState(0x8706, 0x316, 0xd780, 0xc134, 0x3bb2, 0x5f2, 0x1, 0x1);
        gbc.writeMem(0x8706, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8706));
        EXPECT(0x7a, gbc.readMem(0x8707));
        // CB 7A 010A
        gbc.setState(0x20e3, 0xe728, 0xd600, 0xcdff, 0x3eeb, 0x37ce, 0x0, 0x0);
        gbc.writeMem(0x20e3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x20e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 010B
        gbc.setState(0x273e, 0x5ffa, 0xc10, 0xfbca, 0x3439, 0x94ea, 0x1, 0x1);
        gbc.writeMem(0x273e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5ffa, gbc.sp());
        EXPECT(0x2740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 010C
        gbc.setState(0x9d93, 0x9bf8, 0x10, 0x6e04, 0xf3ad, 0x9358, 0x1, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d93));
        EXPECT(0x7a, gbc.readMem(0x9d94));
        // CB 7A 010D
        gbc.setState(0x9408, 0x723e, 0x1c00, 0xe40a, 0x47c1, 0x9f8, 0x1, 0x0);
        gbc.writeMem(0x9408, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x723e, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0x7a, gbc.readMem(0x9409));
        // CB 7A 010E
        gbc.setState(0xe7ec, 0xd653, 0x9b20, 0xde32, 0xc342, 0x749a, 0x1, 0x0);
        gbc.writeMem(0xe7ec, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd653, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ec));
        EXPECT(0x7a, gbc.readMem(0xe7ed));
        // CB 7A 010F
        gbc.setState(0xab47, 0x4da0, 0xa740, 0x2a9b, 0x5a7b, 0x96f1, 0x1, 0x1);
        gbc.writeMem(0xab47, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4da0, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab47));
        EXPECT(0x7a, gbc.readMem(0xab48));
        // CB 7A 0112
        gbc.setState(0x2e4a, 0x7c92, 0x8020, 0xb136, 0x1a68, 0xc5c, 0x1, 0x1);
        gbc.writeMem(0x2e4a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7c92, gbc.sp());
        EXPECT(0x2e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0113
        gbc.setState(0x40c1, 0x7b3, 0x3080, 0xc1f0, 0x86dd, 0x50b1, 0x0, 0x1);
        gbc.writeMem(0x40c1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7b3, gbc.sp());
        EXPECT(0x40c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0114
        gbc.setState(0x1d2d, 0x6f4c, 0x9e40, 0x80c2, 0x12e5, 0x4571, 0x0, 0x0);
        gbc.writeMem(0x1d2d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0x1d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0115
        gbc.setState(0x84e8, 0xc673, 0x7a90, 0x5631, 0xdeb1, 0xd3c9, 0x1, 0x0);
        gbc.writeMem(0x84e8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e8));
        EXPECT(0x7a, gbc.readMem(0x84e9));
        // CB 7A 0116
        gbc.setState(0x394d, 0xd74a, 0x2ca0, 0x1098, 0xdbb5, 0xc639, 0x0, 0x0);
        gbc.writeMem(0x394d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0x394f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0118
        gbc.setState(0x45b7, 0x3f23, 0xe110, 0xd5ce, 0x94d6, 0xa3eb, 0x1, 0x0);
        gbc.writeMem(0x45b7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3f23, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0119
        gbc.setState(0x5ba0, 0xc74b, 0xd110, 0xe009, 0xf758, 0x6129, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 011A
        gbc.setState(0x81ad, 0xb6ec, 0xbf60, 0xf8ee, 0x64d6, 0x19a6, 0x0, 0x1);
        gbc.writeMem(0x81ad, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb6ec, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ad));
        EXPECT(0x7a, gbc.readMem(0x81ae));
        // CB 7A 011B
        gbc.setState(0x4ad1, 0x7da4, 0xf800, 0xa6c7, 0xd72e, 0x5a12, 0x1, 0x0);
        gbc.writeMem(0x4ad1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7da4, gbc.sp());
        EXPECT(0x4ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 011C
        gbc.setState(0xaeb6, 0x9594, 0xc070, 0x1e73, 0x6858, 0x1c9c, 0x0, 0x1);
        gbc.writeMem(0xaeb6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb6));
        EXPECT(0x7a, gbc.readMem(0xaeb7));
        // CB 7A 011D
        gbc.setState(0x3ec7, 0xe535, 0xb7c0, 0x7d, 0x8c63, 0x7c29, 0x1, 0x1);
        gbc.writeMem(0x3ec7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe535, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 011E
        gbc.setState(0x59b8, 0xb914, 0x24a0, 0x5bc9, 0xa481, 0x8b01, 0x0, 0x0);
        gbc.writeMem(0x59b8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb914, gbc.sp());
        EXPECT(0x59ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 011F
        gbc.setState(0x9e7b, 0xbd01, 0x81c0, 0x2b78, 0x36f9, 0x8c80, 0x0, 0x1);
        gbc.writeMem(0x9e7b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd01, gbc.sp());
        EXPECT(0x9e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7b));
        EXPECT(0x7a, gbc.readMem(0x9e7c));
        // CB 7A 0120
        gbc.setState(0x65b5, 0x9152, 0xc300, 0x7b4, 0x7073, 0x4bf0, 0x1, 0x0);
        gbc.writeMem(0x65b5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9152, gbc.sp());
        EXPECT(0x65b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0121
        gbc.setState(0xf73, 0xfb79, 0xd080, 0xcba7, 0x7f67, 0xea60, 0x1, 0x1);
        gbc.writeMem(0xf73, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0122
        gbc.setState(0xd8d2, 0x6652, 0xb540, 0xb9b9, 0xb405, 0xb6d2, 0x0, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6652, gbc.sp());
        EXPECT(0xd8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d2));
        EXPECT(0x7a, gbc.readMem(0xd8d3));
        // CB 7A 0123
        gbc.setState(0x3f20, 0x2ef6, 0x37b0, 0xe01f, 0x67ed, 0x3a4d, 0x1, 0x0);
        gbc.writeMem(0x3f20, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0x3f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0124
        gbc.setState(0x8a5, 0xda3e, 0x27d0, 0x8ac9, 0x935e, 0xacf4, 0x1, 0x1);
        gbc.writeMem(0x8a5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0125
        gbc.setState(0x1bdd, 0x949, 0x77a0, 0x6138, 0xf27d, 0x1ee4, 0x1, 0x0);
        gbc.writeMem(0x1bdd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0x1bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0126
        gbc.setState(0x121, 0x6b8a, 0x4a60, 0xe638, 0xd8b, 0x73b9, 0x0, 0x1);
        gbc.writeMem(0x121, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6b8a, gbc.sp());
        EXPECT(0x123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0127
        gbc.setState(0xba09, 0xe7e0, 0x7050, 0x9c1e, 0x15ee, 0x7957, 0x0, 0x0);
        gbc.writeMem(0xba09, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe7e0, gbc.sp());
        EXPECT(0xba0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba09));
        EXPECT(0x7a, gbc.readMem(0xba0a));
        // CB 7A 0128
        gbc.setState(0x6ef7, 0x9516, 0xd8f0, 0x2b35, 0x11f7, 0x1734, 0x1, 0x1);
        gbc.writeMem(0x6ef7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0129
        gbc.setState(0x79cc, 0xefbc, 0xc8e0, 0x59bc, 0x2890, 0x19c6, 0x0, 0x0);
        gbc.writeMem(0x79cc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xefbc, gbc.sp());
        EXPECT(0x79ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 012A
        gbc.setState(0x39db, 0x2463, 0x9360, 0x3d32, 0xa439, 0x744b, 0x1, 0x1);
        gbc.writeMem(0x39db, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2463, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 012B
        gbc.setState(0x1cbc, 0x8675, 0x61d0, 0xc4ba, 0xf5fe, 0x4a5a, 0x0, 0x1);
        gbc.writeMem(0x1cbc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0x1cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 012C
        gbc.setState(0x6145, 0x69f6, 0xd2d0, 0x2596, 0xdc61, 0xe0eb, 0x0, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x69f6, gbc.sp());
        EXPECT(0x6147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 012D
        gbc.setState(0x785b, 0x4e4a, 0xb60, 0x3007, 0xadc3, 0x2d76, 0x1, 0x1);
        gbc.writeMem(0x785b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0x785d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 012E
        gbc.setState(0x810c, 0xa42a, 0x79a0, 0x9bfc, 0x7b54, 0x9650, 0x1, 0x0);
        gbc.writeMem(0x810c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa42a, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810c));
        EXPECT(0x7a, gbc.readMem(0x810d));
        // CB 7A 012F
        gbc.setState(0xbd98, 0x5496, 0xd830, 0xdef1, 0xd193, 0x3a7c, 0x1, 0x0);
        gbc.writeMem(0xbd98, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5496, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd98));
        EXPECT(0x7a, gbc.readMem(0xbd99));
        // CB 7A 0130
        gbc.setState(0x4c47, 0xc91b, 0x17f0, 0x7e02, 0xf345, 0x3cd7, 0x0, 0x0);
        gbc.writeMem(0x4c47, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc91b, gbc.sp());
        EXPECT(0x4c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0131
        gbc.setState(0xafb8, 0x7095, 0x80b0, 0xfffe, 0xb813, 0xd24a, 0x0, 0x0);
        gbc.writeMem(0xafb8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb8));
        EXPECT(0x7a, gbc.readMem(0xafb9));
        // CB 7A 0132
        gbc.setState(0xc39e, 0x5849, 0x71a0, 0x6194, 0xfea4, 0x5296, 0x1, 0x0);
        gbc.writeMem(0xc39e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39e));
        EXPECT(0x7a, gbc.readMem(0xc39f));
        // CB 7A 0133
        gbc.setState(0x575e, 0xaa1d, 0xc940, 0x1a0b, 0x4621, 0xd3b8, 0x1, 0x1);
        gbc.writeMem(0x575e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaa1d, gbc.sp());
        EXPECT(0x5760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0134
        gbc.setState(0x2f8f, 0x36a7, 0x27c0, 0xb9f4, 0x14e3, 0x1630, 0x0, 0x0);
        gbc.writeMem(0x2f8f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0x2f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0135
        gbc.setState(0xbdd1, 0x8de9, 0x5620, 0xb8d1, 0xabb7, 0x2eb0, 0x0, 0x0);
        gbc.writeMem(0xbdd1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8de9, gbc.sp());
        EXPECT(0xbdd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd1));
        EXPECT(0x7a, gbc.readMem(0xbdd2));
        // CB 7A 0136
        gbc.setState(0xac96, 0x6827, 0xa090, 0x6239, 0x47cc, 0xbc9a, 0x1, 0x0);
        gbc.writeMem(0xac96, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0xac98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac96));
        EXPECT(0x7a, gbc.readMem(0xac97));
        // CB 7A 0137
        gbc.setState(0xe721, 0x355e, 0xe140, 0xa0fe, 0x12d6, 0xd97e, 0x1, 0x0);
        gbc.writeMem(0xe721, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x355e, gbc.sp());
        EXPECT(0xe723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe721));
        EXPECT(0x7a, gbc.readMem(0xe722));
        // CB 7A 0138
        gbc.setState(0x729b, 0x8d17, 0x88b0, 0x7bd7, 0x19e7, 0x6be6, 0x0, 0x1);
        gbc.writeMem(0x729b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8d17, gbc.sp());
        EXPECT(0x729d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0139
        gbc.setState(0xc533, 0x671b, 0x70b0, 0x9d65, 0xea98, 0xc2b7, 0x1, 0x1);
        gbc.writeMem(0xc533, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0xc535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc533));
        EXPECT(0x7a, gbc.readMem(0xc534));
        // CB 7A 013B
        gbc.setState(0xc250, 0xe634, 0xc500, 0x5fea, 0xd5d1, 0xe2e3, 0x1, 0x1);
        gbc.writeMem(0xc250, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe634, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc250));
        EXPECT(0x7a, gbc.readMem(0xc251));
        // CB 7A 013D
        gbc.setState(0x897d, 0xfa0f, 0xb370, 0xd44b, 0x9d2d, 0x7db1, 0x0, 0x1);
        gbc.writeMem(0x897d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897d));
        EXPECT(0x7a, gbc.readMem(0x897e));
        // CB 7A 013E
        gbc.setState(0x682, 0x6859, 0xf7c0, 0x2cbe, 0x70f7, 0x6e90, 0x1, 0x0);
        gbc.writeMem(0x682, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0x684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0140
        gbc.setState(0xee8b, 0x8df6, 0x2340, 0x895a, 0x17ac, 0x9538, 0x1, 0x1);
        gbc.writeMem(0xee8b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0xee8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8b));
        EXPECT(0x7a, gbc.readMem(0xee8c));
        // CB 7A 0141
        gbc.setState(0xb888, 0xe523, 0xe3e0, 0x5242, 0x6278, 0x1fc7, 0x1, 0x0);
        gbc.writeMem(0xb888, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb888));
        EXPECT(0x7a, gbc.readMem(0xb889));
        // CB 7A 0142
        gbc.setState(0x8435, 0xae0e, 0x5890, 0x25, 0x5cf0, 0xb229, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8435));
        EXPECT(0x7a, gbc.readMem(0x8436));
        // CB 7A 0143
        gbc.setState(0xb984, 0xb709, 0x8d50, 0x145b, 0x4270, 0x40eb, 0x1, 0x0);
        gbc.writeMem(0xb984, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0xb986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb984));
        EXPECT(0x7a, gbc.readMem(0xb985));
        // CB 7A 0144
        gbc.setState(0x23d4, 0x86ae, 0x4660, 0xec4d, 0x5de4, 0x88bd, 0x0, 0x0);
        gbc.writeMem(0x23d4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0145
        gbc.setState(0x5c73, 0x79fd, 0xb5c0, 0x4c02, 0xacee, 0xad65, 0x0, 0x0);
        gbc.writeMem(0x5c73, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x79fd, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0146
        gbc.setState(0x8aee, 0xc622, 0x18c0, 0x98f8, 0x9485, 0x9559, 0x1, 0x1);
        gbc.writeMem(0x8aee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0x8af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aee));
        EXPECT(0x7a, gbc.readMem(0x8aef));
        // CB 7A 0147
        gbc.setState(0xd8da, 0xdd13, 0xc400, 0xfb0f, 0x5e4f, 0xcbc0, 0x1, 0x1);
        gbc.writeMem(0xd8da, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdd13, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8da));
        EXPECT(0x7a, gbc.readMem(0xd8db));
        // CB 7A 0148
        gbc.setState(0x6eca, 0x601f, 0x2670, 0x4ae, 0x9a71, 0x9583, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x601f, gbc.sp());
        EXPECT(0x6ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0149
        gbc.setState(0x2415, 0xe6bf, 0x7340, 0xd7ba, 0xf1e, 0x3519, 0x1, 0x0);
        gbc.writeMem(0x2415, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0x2417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 014A
        gbc.setState(0x786d, 0xce5e, 0x200, 0xd311, 0x2500, 0x5212, 0x0, 0x0);
        gbc.writeMem(0x786d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x786f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 014B
        gbc.setState(0xe68a, 0x1dab, 0x48d0, 0xd02e, 0x5834, 0x6bb7, 0x0, 0x0);
        gbc.writeMem(0xe68a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1dab, gbc.sp());
        EXPECT(0xe68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68a));
        EXPECT(0x7a, gbc.readMem(0xe68b));
        // CB 7A 014C
        gbc.setState(0x65f5, 0x2530, 0x8ae0, 0xb17e, 0x40e4, 0x8d33, 0x1, 0x1);
        gbc.writeMem(0x65f5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2530, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 014D
        gbc.setState(0x4fdb, 0x3509, 0x5c40, 0x7ab6, 0x7ddb, 0xe7ab, 0x0, 0x1);
        gbc.writeMem(0x4fdb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 014E
        gbc.setState(0xd319, 0xa116, 0x5b30, 0xef4e, 0x94f3, 0x319, 0x0, 0x0);
        gbc.writeMem(0xd319, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa116, gbc.sp());
        EXPECT(0xd31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd319));
        EXPECT(0x7a, gbc.readMem(0xd31a));
        // CB 7A 014F
        gbc.setState(0x2e72, 0x31be, 0x7250, 0xc205, 0x9e9a, 0xf904, 0x0, 0x0);
        gbc.writeMem(0x2e72, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x31be, gbc.sp());
        EXPECT(0x2e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0150
        gbc.setState(0xa404, 0x4102, 0x1020, 0x818f, 0x9ec9, 0xcb15, 0x0, 0x1);
        gbc.writeMem(0xa404, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4102, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa404));
        EXPECT(0x7a, gbc.readMem(0xa405));
        // CB 7A 0151
        gbc.setState(0x8907, 0xa4d2, 0x6560, 0xc01a, 0xc802, 0x6209, 0x1, 0x0);
        gbc.writeMem(0x8907, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa4d2, gbc.sp());
        EXPECT(0x8909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8907));
        EXPECT(0x7a, gbc.readMem(0x8908));
        // CB 7A 0152
        gbc.setState(0x18d7, 0xb1b5, 0x1690, 0xda28, 0xea1b, 0xc45, 0x1, 0x0);
        gbc.writeMem(0x18d7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0x18d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0153
        gbc.setState(0xcc55, 0xcae4, 0x2980, 0x29a1, 0xebf, 0xe5e8, 0x0, 0x1);
        gbc.writeMem(0xcc55, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcae4, gbc.sp());
        EXPECT(0xcc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc55));
        EXPECT(0x7a, gbc.readMem(0xcc56));
        // CB 7A 0154
        gbc.setState(0x4d19, 0x12ff, 0x4860, 0x6c96, 0x1e25, 0x57b, 0x0, 0x1);
        gbc.writeMem(0x4d19, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x4d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0155
        gbc.setState(0x6e0c, 0xca8, 0x6830, 0xa248, 0xab81, 0x4fe2, 0x1, 0x1);
        gbc.writeMem(0x6e0c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0x6e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0156
        gbc.setState(0xc758, 0x25b0, 0x9ee0, 0xb711, 0xde9c, 0x86f4, 0x1, 0x0);
        gbc.writeMem(0xc758, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc758));
        EXPECT(0x7a, gbc.readMem(0xc759));
        // CB 7A 0157
        gbc.setState(0x2c32, 0xf29a, 0x6df0, 0xbc52, 0x59f8, 0x62c8, 0x1, 0x0);
        gbc.writeMem(0x2c32, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf29a, gbc.sp());
        EXPECT(0x2c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0158
        gbc.setState(0xdb88, 0x53d6, 0x9a60, 0x186, 0xb464, 0x3966, 0x1, 0x1);
        gbc.writeMem(0xdb88, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x53d6, gbc.sp());
        EXPECT(0xdb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb88));
        EXPECT(0x7a, gbc.readMem(0xdb89));
        // CB 7A 0159
        gbc.setState(0x6f84, 0x6feb, 0x19c0, 0xe582, 0xf754, 0xb6ca, 0x0, 0x0);
        gbc.writeMem(0x6f84, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6feb, gbc.sp());
        EXPECT(0x6f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 015A
        gbc.setState(0x86b0, 0x2c16, 0x3030, 0xc552, 0x7b58, 0x467f, 0x1, 0x1);
        gbc.writeMem(0x86b0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c16, gbc.sp());
        EXPECT(0x86b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b0));
        EXPECT(0x7a, gbc.readMem(0x86b1));
        // CB 7A 015B
        gbc.setState(0x11a3, 0x21f0, 0x5a50, 0x36f6, 0x359d, 0x924d, 0x1, 0x1);
        gbc.writeMem(0x11a3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x21f0, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 015C
        gbc.setState(0x642b, 0xb31f, 0xb530, 0x5452, 0xd982, 0x3a2a, 0x1, 0x0);
        gbc.writeMem(0x642b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb31f, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 015D
        gbc.setState(0xe9e2, 0xd27f, 0x9800, 0x8135, 0x1e72, 0x84bd, 0x1, 0x0);
        gbc.writeMem(0xe9e2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd27f, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e2));
        EXPECT(0x7a, gbc.readMem(0xe9e3));
        // CB 7A 015E
        gbc.setState(0x86f9, 0x522d, 0x72c0, 0x80e1, 0x9808, 0x7ac8, 0x0, 0x0);
        gbc.writeMem(0x86f9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x522d, gbc.sp());
        EXPECT(0x86fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f9));
        EXPECT(0x7a, gbc.readMem(0x86fa));
        // CB 7A 015F
        gbc.setState(0xdc18, 0x1af3, 0x7d80, 0xa150, 0x5d60, 0xe62d, 0x0, 0x1);
        gbc.writeMem(0xdc18, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0xdc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc18));
        EXPECT(0x7a, gbc.readMem(0xdc19));
        // CB 7A 0160
        gbc.setState(0x3fdf, 0x4c9b, 0x1150, 0xe5df, 0x65c9, 0x5a95, 0x0, 0x1);
        gbc.writeMem(0x3fdf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4c9b, gbc.sp());
        EXPECT(0x3fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0161
        gbc.setState(0x6008, 0x20a9, 0x44c0, 0xa746, 0x9771, 0xad34, 0x0, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0162
        gbc.setState(0x66f0, 0x9384, 0x830, 0xa306, 0xe628, 0x3776, 0x0, 0x0);
        gbc.writeMem(0x66f0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9384, gbc.sp());
        EXPECT(0x66f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0163
        gbc.setState(0x6a6f, 0xee37, 0xd5c0, 0x784c, 0x83a9, 0x27ec, 0x1, 0x1);
        gbc.writeMem(0x6a6f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee37, gbc.sp());
        EXPECT(0x6a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0164
        gbc.setState(0x2418, 0x9802, 0x9e10, 0xbab4, 0xb66e, 0xea2e, 0x0, 0x0);
        gbc.writeMem(0x2418, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9802, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0165
        gbc.setState(0x8d14, 0x57ee, 0x4b20, 0x8819, 0xb1b0, 0x8a69, 0x0, 0x0);
        gbc.writeMem(0x8d14, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0x8d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d14));
        EXPECT(0x7a, gbc.readMem(0x8d15));
        // CB 7A 0166
        gbc.setState(0xc6ec, 0xbe15, 0x1f80, 0x4584, 0xe717, 0xa252, 0x0, 0x0);
        gbc.writeMem(0xc6ec, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbe15, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ec));
        EXPECT(0x7a, gbc.readMem(0xc6ed));
        // CB 7A 0167
        gbc.setState(0x71aa, 0x469b, 0xfc20, 0x5d97, 0xce31, 0xd16b, 0x0, 0x1);
        gbc.writeMem(0x71aa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x469b, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0168
        gbc.setState(0x7e19, 0xd90d, 0xb80, 0xc838, 0x6a5, 0x72e8, 0x1, 0x0);
        gbc.writeMem(0x7e19, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd90d, gbc.sp());
        EXPECT(0x7e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0169
        gbc.setState(0xc982, 0x1505, 0x9920, 0x5e4b, 0x3eb5, 0xbd0b, 0x1, 0x0);
        gbc.writeMem(0xc982, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1505, gbc.sp());
        EXPECT(0xc984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc982));
        EXPECT(0x7a, gbc.readMem(0xc983));
        // CB 7A 016A
        gbc.setState(0xf97, 0xba3b, 0xabc0, 0x53f2, 0xe1ed, 0xfb37, 0x0, 0x1);
        gbc.writeMem(0xf97, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba3b, gbc.sp());
        EXPECT(0xf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 016B
        gbc.setState(0x55cc, 0x51e7, 0xb1e0, 0xc45c, 0xa0af, 0xca93, 0x0, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x51e7, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 016C
        gbc.setState(0x7f94, 0x27ea, 0x42f0, 0x4cac, 0xdfd4, 0x1126, 0x0, 0x1);
        gbc.writeMem(0x7f94, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x27ea, gbc.sp());
        EXPECT(0x7f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 016D
        gbc.setState(0x72c8, 0xea45, 0x3ad0, 0x1374, 0xa74f, 0xc9fc, 0x0, 0x1);
        gbc.writeMem(0x72c8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea45, gbc.sp());
        EXPECT(0x72ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 016E
        gbc.setState(0x659f, 0x658, 0x8ec0, 0x3d86, 0x67cc, 0x38eb, 0x0, 0x1);
        gbc.writeMem(0x659f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 016F
        gbc.setState(0x91a5, 0x8922, 0xeb10, 0xd16b, 0x7243, 0xefee, 0x1, 0x0);
        gbc.writeMem(0x91a5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x91a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a5));
        EXPECT(0x7a, gbc.readMem(0x91a6));
        // CB 7A 0171
        gbc.setState(0xac33, 0xdefe, 0xe610, 0x87de, 0x9ae3, 0xf08, 0x1, 0x0);
        gbc.writeMem(0xac33, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac33));
        EXPECT(0x7a, gbc.readMem(0xac34));
        // CB 7A 0172
        gbc.setState(0x6a32, 0x503a, 0x5e10, 0x4ee7, 0x339e, 0x9de1, 0x1, 0x0);
        gbc.writeMem(0x6a32, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0173
        gbc.setState(0x36b, 0x689f, 0x9750, 0xce75, 0xc118, 0x51a0, 0x0, 0x1);
        gbc.writeMem(0x36b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0x36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0174
        gbc.setState(0x297c, 0xe397, 0xe660, 0xc40e, 0x1ae2, 0x6637, 0x0, 0x0);
        gbc.writeMem(0x297c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe397, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0175
        gbc.setState(0x5306, 0x7a4c, 0x4a40, 0xb349, 0xc1b1, 0xb460, 0x1, 0x0);
        gbc.writeMem(0x5306, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0176
        gbc.setState(0x826c, 0x4905, 0x56b0, 0xef1c, 0xe840, 0x5b0e, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826c));
        EXPECT(0x7a, gbc.readMem(0x826d));
        // CB 7A 0177
        gbc.setState(0xa037, 0xb4ea, 0x4c60, 0xa55a, 0x79bf, 0xc724, 0x0, 0x0);
        gbc.writeMem(0xa037, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa037));
        EXPECT(0x7a, gbc.readMem(0xa038));
        // CB 7A 0178
        gbc.setState(0xe809, 0x9906, 0x5580, 0x6f63, 0xe5dd, 0xedfc, 0x0, 0x0);
        gbc.writeMem(0xe809, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0xe80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe809));
        EXPECT(0x7a, gbc.readMem(0xe80a));
        // CB 7A 0179
        gbc.setState(0x8de2, 0xb7e8, 0xeac0, 0x6915, 0xfa98, 0x3290, 0x1, 0x0);
        gbc.writeMem(0x8de2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb7e8, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0x7a, gbc.readMem(0x8de3));
        // CB 7A 017A
        gbc.setState(0xaaeb, 0x708c, 0x6640, 0x557e, 0x5a99, 0xa873, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaeb));
        EXPECT(0x7a, gbc.readMem(0xaaec));
        // CB 7A 017B
        gbc.setState(0x5558, 0x9d34, 0xdb50, 0xf79e, 0xcd91, 0xf798, 0x0, 0x0);
        gbc.writeMem(0x5558, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d34, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 017C
        gbc.setState(0x7595, 0xb9cf, 0xd800, 0xdcd1, 0x93bc, 0x2b21, 0x0, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 017D
        gbc.setState(0xe99e, 0x6312, 0x7340, 0x234f, 0x7c9f, 0x23e8, 0x0, 0x0);
        gbc.writeMem(0xe99e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6312, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99e));
        EXPECT(0x7a, gbc.readMem(0xe99f));
        // CB 7A 017E
        gbc.setState(0xd45, 0xa3e3, 0x9040, 0xdddb, 0x3aea, 0x8ca7, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 017F
        gbc.setState(0xba43, 0x6d6f, 0x8bd0, 0x24e1, 0xc444, 0x21e8, 0x0, 0x0);
        gbc.writeMem(0xba43, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba43));
        EXPECT(0x7a, gbc.readMem(0xba44));
        // CB 7A 0181
        gbc.setState(0xdefe, 0x7fb5, 0x4490, 0xa171, 0xd81a, 0xa78a, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7fb5, gbc.sp());
        EXPECT(0xdf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefe));
        EXPECT(0x7a, gbc.readMem(0xdeff));
        // CB 7A 0182
        gbc.setState(0x7b9c, 0xa7fc, 0x9950, 0x7abd, 0x503c, 0xd43b, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa7fc, gbc.sp());
        EXPECT(0x7b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0183
        gbc.setState(0xa4f1, 0x1791, 0x74e0, 0xce0f, 0xb64c, 0x61eb, 0x0, 0x0);
        gbc.writeMem(0xa4f1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1791, gbc.sp());
        EXPECT(0xa4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f1));
        EXPECT(0x7a, gbc.readMem(0xa4f2));
        // CB 7A 0184
        gbc.setState(0x70b6, 0x40fb, 0x8ed0, 0x2cbf, 0x7275, 0x42fe, 0x0, 0x1);
        gbc.writeMem(0x70b6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x40fb, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0185
        gbc.setState(0xa268, 0xca13, 0x73a0, 0xc981, 0xe4f5, 0xa823, 0x1, 0x1);
        gbc.writeMem(0xa268, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa268));
        EXPECT(0x7a, gbc.readMem(0xa269));
        // CB 7A 0186
        gbc.setState(0xb213, 0xcf69, 0x9fc0, 0x1462, 0xf992, 0x8c95, 0x1, 0x1);
        gbc.writeMem(0xb213, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcf69, gbc.sp());
        EXPECT(0xb215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb213));
        EXPECT(0x7a, gbc.readMem(0xb214));
        // CB 7A 0187
        gbc.setState(0x2ad, 0xb94a, 0x2850, 0x8490, 0x99ca, 0xaba7, 0x0, 0x0);
        gbc.writeMem(0x2ad, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0188
        gbc.setState(0x71e6, 0xbcaf, 0x2a20, 0x4987, 0x826, 0x8fc6, 0x0, 0x0);
        gbc.writeMem(0x71e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbcaf, gbc.sp());
        EXPECT(0x71e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0189
        gbc.setState(0x4472, 0x7d49, 0x9f20, 0x9754, 0x844a, 0x5178, 0x1, 0x0);
        gbc.writeMem(0x4472, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d49, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 018A
        gbc.setState(0xc68, 0xf51b, 0x4eb0, 0x49b9, 0x6260, 0xe80f, 0x0, 0x0);
        gbc.writeMem(0xc68, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 018B
        gbc.setState(0x3472, 0x4a82, 0x5650, 0x61b0, 0x3b20, 0xcba8, 0x1, 0x1);
        gbc.writeMem(0x3472, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a82, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 018C
        gbc.setState(0xaf2c, 0xc65b, 0x7950, 0x43cc, 0x9d45, 0x3927, 0x1, 0x0);
        gbc.writeMem(0xaf2c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0xaf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2c));
        EXPECT(0x7a, gbc.readMem(0xaf2d));
        // CB 7A 018D
        gbc.setState(0x927f, 0x6545, 0x62c0, 0xae2a, 0x57d9, 0xae68, 0x1, 0x0);
        gbc.writeMem(0x927f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6545, gbc.sp());
        EXPECT(0x9281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927f));
        EXPECT(0x7a, gbc.readMem(0x9280));
        // CB 7A 018F
        gbc.setState(0x5d17, 0x8107, 0x7570, 0xaed8, 0x2600, 0xded4, 0x1, 0x0);
        gbc.writeMem(0x5d17, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8107, gbc.sp());
        EXPECT(0x5d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0190
        gbc.setState(0xcc91, 0xbfef, 0xb630, 0xfacb, 0x1a3c, 0x3bd9, 0x0, 0x0);
        gbc.writeMem(0xcc91, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbfef, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc91));
        EXPECT(0x7a, gbc.readMem(0xcc92));
        // CB 7A 0191
        gbc.setState(0x624b, 0x7f62, 0x2270, 0xa7f3, 0xab16, 0x9db9, 0x0, 0x0);
        gbc.writeMem(0x624b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0192
        gbc.setState(0x3e72, 0xc211, 0x4a80, 0x5dbd, 0x2862, 0xba9b, 0x1, 0x0);
        gbc.writeMem(0x3e72, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc211, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0193
        gbc.setState(0x704b, 0xf28d, 0xb620, 0xff9, 0xd0bd, 0x14c8, 0x1, 0x0);
        gbc.writeMem(0x704b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf28d, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0194
        gbc.setState(0xdeab, 0xdc7e, 0xf780, 0x8dee, 0xf242, 0xf19e, 0x1, 0x1);
        gbc.writeMem(0xdeab, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc7e, gbc.sp());
        EXPECT(0xdead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeab));
        EXPECT(0x7a, gbc.readMem(0xdeac));
        // CB 7A 0196
        gbc.setState(0x9a08, 0x266e, 0xdcb0, 0x8c1a, 0x18d0, 0x5c0b, 0x0, 0x1);
        gbc.writeMem(0x9a08, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a08));
        EXPECT(0x7a, gbc.readMem(0x9a09));
        // CB 7A 0197
        gbc.setState(0x9443, 0xc13a, 0xdb10, 0x8aa3, 0x5dff, 0x6b35, 0x1, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0x7a, gbc.readMem(0x9444));
        // CB 7A 0198
        gbc.setState(0x3d45, 0xe3ad, 0xb410, 0xd1e7, 0x8727, 0x1224, 0x1, 0x1);
        gbc.writeMem(0x3d45, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe3ad, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0199
        gbc.setState(0x1573, 0xe49f, 0x6ac0, 0x68ce, 0xb10e, 0x8599, 0x0, 0x1);
        gbc.writeMem(0x1573, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe49f, gbc.sp());
        EXPECT(0x1575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 019A
        gbc.setState(0xd8c, 0x983e, 0xde80, 0xec93, 0x4f6a, 0x6015, 0x1, 0x1);
        gbc.writeMem(0xd8c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0xd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 019B
        gbc.setState(0x486d, 0x33b9, 0x3bc0, 0x785d, 0x5a46, 0x2436, 0x1, 0x0);
        gbc.writeMem(0x486d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x486f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 019C
        gbc.setState(0xed30, 0x607c, 0x4250, 0xcf13, 0x5ff5, 0xf773, 0x1, 0x1);
        gbc.writeMem(0xed30, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x607c, gbc.sp());
        EXPECT(0xed32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed30));
        EXPECT(0x7a, gbc.readMem(0xed31));
        // CB 7A 019D
        gbc.setState(0xe37, 0xd081, 0x66b0, 0x23bc, 0x173, 0xdc97, 0x1, 0x1);
        gbc.writeMem(0xe37, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd081, gbc.sp());
        EXPECT(0xe39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 019E
        gbc.setState(0xaffe, 0x8abd, 0x62d0, 0xf476, 0x2701, 0xec5, 0x1, 0x0);
        gbc.writeMem(0xaffe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0xb000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaffe));
        EXPECT(0x7a, gbc.readMem(0xafff));
        // CB 7A 019F
        gbc.setState(0x4e9f, 0x2d4e, 0x18d0, 0x533c, 0x2ab2, 0x1589, 0x1, 0x1);
        gbc.writeMem(0x4e9f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01A0
        gbc.setState(0x5762, 0x340b, 0xfd0, 0xfae2, 0xa34b, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x340b, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01A1
        gbc.setState(0x6d46, 0xc709, 0x9d0, 0xc0cf, 0x770b, 0xd034, 0x1, 0x1);
        gbc.writeMem(0x6d46, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc709, gbc.sp());
        EXPECT(0x6d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01A2
        gbc.setState(0xb97b, 0xcd98, 0xe650, 0xa47a, 0x19c7, 0x41f3, 0x0, 0x1);
        gbc.writeMem(0xb97b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0xb97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97b));
        EXPECT(0x7a, gbc.readMem(0xb97c));
        // CB 7A 01A3
        gbc.setState(0x7e9c, 0x7882, 0x72e0, 0xb8e8, 0xa9f6, 0xf040, 0x1, 0x1);
        gbc.writeMem(0x7e9c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01A4
        gbc.setState(0xa190, 0x818a, 0x8f00, 0x17c1, 0x88c5, 0x39fb, 0x1, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa190));
        EXPECT(0x7a, gbc.readMem(0xa191));
        // CB 7A 01A5
        gbc.setState(0x6417, 0xeaa6, 0xe8f0, 0xa9e9, 0x1644, 0x9859, 0x1, 0x0);
        gbc.writeMem(0x6417, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01A6
        gbc.setState(0x8285, 0xd2e, 0x3390, 0x998e, 0xa7d1, 0xc62d, 0x1, 0x1);
        gbc.writeMem(0x8285, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2e, gbc.sp());
        EXPECT(0x8287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8285));
        EXPECT(0x7a, gbc.readMem(0x8286));
        // CB 7A 01A7
        gbc.setState(0xaa6, 0xaa9d, 0x43a0, 0x5c58, 0x876e, 0x6da7, 0x1, 0x0);
        gbc.writeMem(0xaa6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaa9d, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01A8
        gbc.setState(0x51f, 0x8c41, 0x2e0, 0xbe4c, 0x5be9, 0xb6a5, 0x0, 0x0);
        gbc.writeMem(0x51f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c41, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01A9
        gbc.setState(0xd2ca, 0xf4b8, 0x450, 0x437a, 0x863, 0xb5ca, 0x1, 0x1);
        gbc.writeMem(0xd2ca, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf4b8, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ca));
        EXPECT(0x7a, gbc.readMem(0xd2cb));
        // CB 7A 01AA
        gbc.setState(0x321c, 0x4127, 0x43d0, 0xb89a, 0xaea8, 0x766e, 0x0, 0x0);
        gbc.writeMem(0x321c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x321e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01AB
        gbc.setState(0xe8d6, 0x3c4d, 0xd0, 0xccea, 0xb231, 0xd30b, 0x0, 0x1);
        gbc.writeMem(0xe8d6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d6));
        EXPECT(0x7a, gbc.readMem(0xe8d7));
        // CB 7A 01AC
        gbc.setState(0x19a2, 0x4766, 0x7df0, 0x9998, 0xad54, 0x7046, 0x0, 0x0);
        gbc.writeMem(0x19a2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4766, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01AD
        gbc.setState(0x2110, 0x598b, 0x30c0, 0x9b42, 0x14f6, 0xdb1, 0x1, 0x0);
        gbc.writeMem(0x2110, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x598b, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01AE
        gbc.setState(0x303, 0x89db, 0xea40, 0x2e0c, 0xc497, 0x61bd, 0x0, 0x0);
        gbc.writeMem(0x303, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x89db, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01AF
        gbc.setState(0xbeea, 0x572d, 0xd150, 0x8f6a, 0x4f29, 0x1f1a, 0x1, 0x0);
        gbc.writeMem(0xbeea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x572d, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeea));
        EXPECT(0x7a, gbc.readMem(0xbeeb));
        // CB 7A 01B0
        gbc.setState(0x3ebb, 0x6cac, 0x8a60, 0x9af1, 0xf642, 0x4a34, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01B1
        gbc.setState(0x3270, 0xf89e, 0x5090, 0x5e7a, 0x297c, 0xf518, 0x1, 0x0);
        gbc.writeMem(0x3270, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf89e, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01B2
        gbc.setState(0x1891, 0xecfd, 0x6e30, 0x6903, 0x176, 0x2218, 0x0, 0x0);
        gbc.writeMem(0x1891, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xecfd, gbc.sp());
        EXPECT(0x1893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01B3
        gbc.setState(0xd778, 0x14e3, 0x6cc0, 0xb449, 0x7379, 0x9d06, 0x0, 0x0);
        gbc.writeMem(0xd778, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0xd77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd778));
        EXPECT(0x7a, gbc.readMem(0xd779));
        // CB 7A 01B4
        gbc.setState(0xcf20, 0xdc7a, 0xd860, 0x2695, 0xd592, 0xb60d, 0x0, 0x1);
        gbc.writeMem(0xcf20, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdc7a, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf20));
        EXPECT(0x7a, gbc.readMem(0xcf21));
        // CB 7A 01B5
        gbc.setState(0xe2fa, 0x85e9, 0xf580, 0x4c84, 0x9852, 0x8737, 0x1, 0x0);
        gbc.writeMem(0xe2fa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x85e9, gbc.sp());
        EXPECT(0xe2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fa));
        EXPECT(0x7a, gbc.readMem(0xe2fb));
        // CB 7A 01B6
        gbc.setState(0x863c, 0xb8ad, 0xce90, 0xf872, 0x3a34, 0x1500, 0x1, 0x1);
        gbc.writeMem(0x863c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb8ad, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863c));
        EXPECT(0x7a, gbc.readMem(0x863d));
        // CB 7A 01B7
        gbc.setState(0xed51, 0x9584, 0xa5a0, 0x2382, 0x3a57, 0xcb18, 0x0, 0x0);
        gbc.writeMem(0xed51, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9584, gbc.sp());
        EXPECT(0xed53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed51));
        EXPECT(0x7a, gbc.readMem(0xed52));
        // CB 7A 01B8
        gbc.setState(0x3a3f, 0xcf03, 0x42a0, 0xb6f4, 0x68e6, 0x4c82, 0x0, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01B9
        gbc.setState(0x1a11, 0xe774, 0xb1c0, 0xc507, 0x855e, 0x8cb2, 0x1, 0x1);
        gbc.writeMem(0x1a11, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe774, gbc.sp());
        EXPECT(0x1a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01BA
        gbc.setState(0x8d4f, 0xadb1, 0x81c0, 0xf0cc, 0x778f, 0x4976, 0x0, 0x0);
        gbc.writeMem(0x8d4f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xadb1, gbc.sp());
        EXPECT(0x8d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4f));
        EXPECT(0x7a, gbc.readMem(0x8d50));
        // CB 7A 01BB
        gbc.setState(0x38e6, 0x8719, 0x4320, 0x2199, 0x7485, 0x4a14, 0x1, 0x1);
        gbc.writeMem(0x38e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x38e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01BC
        gbc.setState(0xe237, 0x95eb, 0x63b0, 0xa713, 0x2909, 0x49f4, 0x1, 0x0);
        gbc.writeMem(0xe237, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x95eb, gbc.sp());
        EXPECT(0xe239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe237));
        EXPECT(0x7a, gbc.readMem(0xe238));
        // CB 7A 01BD
        gbc.setState(0xa600, 0xaab3, 0xaa90, 0x1429, 0xc530, 0x514b, 0x1, 0x1);
        gbc.writeMem(0xa600, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa600));
        EXPECT(0x7a, gbc.readMem(0xa601));
        // CB 7A 01BE
        gbc.setState(0x262d, 0xfbfb, 0x9e70, 0x9b91, 0x273b, 0xe6cc, 0x0, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01BF
        gbc.setState(0x8f98, 0x3a69, 0x2cd0, 0x3c02, 0x44c8, 0x9e18, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3a69, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f98));
        EXPECT(0x7a, gbc.readMem(0x8f99));
        // CB 7A 01C0
        gbc.setState(0x11f9, 0xcb83, 0x1480, 0x138e, 0x29fe, 0xa153, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcb83, gbc.sp());
        EXPECT(0x11fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01C1
        gbc.setState(0x8fe2, 0x8fe5, 0x870, 0x54e7, 0xc881, 0x4da6, 0x0, 0x1);
        gbc.writeMem(0x8fe2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x8fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe2));
        EXPECT(0x7a, gbc.readMem(0x8fe3));
        // CB 7A 01C3
        gbc.setState(0x42b2, 0xc7db, 0x8240, 0xbd6f, 0x43d9, 0x3dd8, 0x1, 0x1);
        gbc.writeMem(0x42b2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc7db, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01C4
        gbc.setState(0xa4f, 0x3e0a, 0xfc60, 0x8d59, 0x34d2, 0xb737, 0x0, 0x1);
        gbc.writeMem(0xa4f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0xa51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01C5
        gbc.setState(0x6581, 0xe534, 0x8ea0, 0x249a, 0x724d, 0x34f4, 0x1, 0x1);
        gbc.writeMem(0x6581, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0x6583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01C6
        gbc.setState(0xd6b2, 0xf74, 0x8620, 0x5a2e, 0x8426, 0x8515, 0x1, 0x0);
        gbc.writeMem(0xd6b2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf74, gbc.sp());
        EXPECT(0xd6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b2));
        EXPECT(0x7a, gbc.readMem(0xd6b3));
        // CB 7A 01C7
        gbc.setState(0x8dc8, 0x57ed, 0xfda0, 0xcc32, 0xb69a, 0x4de9, 0x0, 0x1);
        gbc.writeMem(0x8dc8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x57ed, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc8));
        EXPECT(0x7a, gbc.readMem(0x8dc9));
        // CB 7A 01C8
        gbc.setState(0x9697, 0x42dc, 0xbe70, 0xcc5a, 0x2d41, 0xa018, 0x0, 0x0);
        gbc.writeMem(0x9697, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x42dc, gbc.sp());
        EXPECT(0x9699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9697));
        EXPECT(0x7a, gbc.readMem(0x9698));
        // CB 7A 01C9
        gbc.setState(0x3565, 0xdabd, 0xa1c0, 0xc4fc, 0xdc20, 0xa203, 0x1, 0x0);
        gbc.writeMem(0x3565, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdabd, gbc.sp());
        EXPECT(0x3567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01CA
        gbc.setState(0x8d85, 0xbb53, 0x6460, 0x1426, 0x143c, 0x90cb, 0x1, 0x0);
        gbc.writeMem(0x8d85, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d85));
        EXPECT(0x7a, gbc.readMem(0x8d86));
        // CB 7A 01CB
        gbc.setState(0x1ec5, 0x4727, 0xf470, 0x5af7, 0xbc97, 0xc993, 0x0, 0x0);
        gbc.writeMem(0x1ec5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01CC
        gbc.setState(0xc69f, 0x509e, 0x72a0, 0x595d, 0xa21d, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xc69f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0xc6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69f));
        EXPECT(0x7a, gbc.readMem(0xc6a0));
        // CB 7A 01CD
        gbc.setState(0xd828, 0xf71, 0xb8f0, 0xdaa1, 0xadcc, 0x4213, 0x0, 0x0);
        gbc.writeMem(0xd828, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf71, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd828));
        EXPECT(0x7a, gbc.readMem(0xd829));
        // CB 7A 01CE
        gbc.setState(0x6ab, 0xca82, 0x8840, 0x1a5f, 0x80a5, 0x7db1, 0x0, 0x1);
        gbc.writeMem(0x6ab, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xca82, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01CF
        gbc.setState(0x59a5, 0x3357, 0x940, 0x885b, 0xbe8f, 0x4d64, 0x0, 0x0);
        gbc.writeMem(0x59a5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3357, gbc.sp());
        EXPECT(0x59a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01D0
        gbc.setState(0x2225, 0x7014, 0xd680, 0xff4, 0xaa7c, 0x14f3, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7014, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01D1
        gbc.setState(0xcffb, 0xefc1, 0xf3e0, 0x8393, 0xd179, 0xe4ea, 0x0, 0x0);
        gbc.writeMem(0xcffb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xefc1, gbc.sp());
        EXPECT(0xcffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffb));
        EXPECT(0x7a, gbc.readMem(0xcffc));
        // CB 7A 01D2
        gbc.setState(0x85e, 0xcbea, 0x79c0, 0x9416, 0xb554, 0xd7e0, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcbea, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01D3
        gbc.setState(0x2ab1, 0x4eef, 0xd4b0, 0xe1ad, 0x1553, 0x2018, 0x1, 0x0);
        gbc.writeMem(0x2ab1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4eef, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01D4
        gbc.setState(0xc796, 0x4f69, 0xe290, 0xbd92, 0x3db9, 0x7892, 0x0, 0x0);
        gbc.writeMem(0xc796, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc796));
        EXPECT(0x7a, gbc.readMem(0xc797));
        // CB 7A 01D5
        gbc.setState(0xdc86, 0x414d, 0x8fc0, 0x2e1a, 0x57c4, 0x49ae, 0x0, 0x0);
        gbc.writeMem(0xdc86, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x414d, gbc.sp());
        EXPECT(0xdc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc86));
        EXPECT(0x7a, gbc.readMem(0xdc87));
        // CB 7A 01D6
        gbc.setState(0xddf, 0x8580, 0xe9d0, 0x560e, 0x4f19, 0x70ae, 0x1, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8580, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01D7
        gbc.setState(0xb573, 0xd65d, 0xb660, 0xc32d, 0x4aad, 0x30bc, 0x1, 0x1);
        gbc.writeMem(0xb573, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0xb575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb573));
        EXPECT(0x7a, gbc.readMem(0xb574));
        // CB 7A 01D9
        gbc.setState(0x12d7, 0xe4de, 0xfec0, 0x9a31, 0x1473, 0xe963, 0x0, 0x0);
        gbc.writeMem(0x12d7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe4de, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01DA
        gbc.setState(0x5542, 0xcacc, 0x1740, 0x3b9a, 0x311e, 0xfb59, 0x1, 0x1);
        gbc.writeMem(0x5542, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01DB
        gbc.setState(0x6501, 0x26a8, 0x7bd0, 0xe90a, 0xd03, 0xd5e8, 0x0, 0x1);
        gbc.writeMem(0x6501, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0x6503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01DD
        gbc.setState(0xbda6, 0x53f6, 0x3f10, 0x585e, 0xba5f, 0xb00d, 0x0, 0x0);
        gbc.writeMem(0xbda6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda6));
        EXPECT(0x7a, gbc.readMem(0xbda7));
        // CB 7A 01DE
        gbc.setState(0x7066, 0x7d02, 0x6940, 0xfbc6, 0x7a8, 0xcc4d, 0x0, 0x0);
        gbc.writeMem(0x7066, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7d02, gbc.sp());
        EXPECT(0x7068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01DF
        gbc.setState(0x9537, 0xcde3, 0x600, 0x59a0, 0x9841, 0xf9f5, 0x0, 0x0);
        gbc.writeMem(0x9537, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcde3, gbc.sp());
        EXPECT(0x9539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9537));
        EXPECT(0x7a, gbc.readMem(0x9538));
        // CB 7A 01E0
        gbc.setState(0xefe5, 0x10c, 0xaba0, 0x815c, 0xfafd, 0x818e, 0x1, 0x0);
        gbc.writeMem(0xefe5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0xefe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe5));
        EXPECT(0x7a, gbc.readMem(0xefe6));
        // CB 7A 01E1
        gbc.setState(0xdbb7, 0x67bc, 0xf710, 0xb5c6, 0x89b, 0x8a6, 0x1, 0x1);
        gbc.writeMem(0xdbb7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x67bc, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb7));
        EXPECT(0x7a, gbc.readMem(0xdbb8));
        // CB 7A 01E2
        gbc.setState(0x2be7, 0x9d13, 0x7150, 0xef4, 0xca38, 0xaf9c, 0x1, 0x0);
        gbc.writeMem(0x2be7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9d13, gbc.sp());
        EXPECT(0x2be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01E3
        gbc.setState(0x668d, 0x4684, 0xc910, 0x3224, 0x11ae, 0x6acf, 0x1, 0x0);
        gbc.writeMem(0x668d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0x668f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01E4
        gbc.setState(0xc26a, 0x445b, 0xaeb0, 0x756d, 0xe93c, 0xec37, 0x0, 0x0);
        gbc.writeMem(0xc26a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x445b, gbc.sp());
        EXPECT(0xc26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26a));
        EXPECT(0x7a, gbc.readMem(0xc26b));
        // CB 7A 01E5
        gbc.setState(0xb3b3, 0x6b84, 0xae30, 0x2e7b, 0x634e, 0xb06b, 0x1, 0x0);
        gbc.writeMem(0xb3b3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b3));
        EXPECT(0x7a, gbc.readMem(0xb3b4));
        // CB 7A 01E6
        gbc.setState(0x5028, 0x39f4, 0xafa0, 0xff76, 0xc760, 0x879c, 0x1, 0x1);
        gbc.writeMem(0x5028, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0x502a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01E7
        gbc.setState(0xa4e6, 0x911d, 0x2a50, 0x51e8, 0x39fb, 0x7071, 0x0, 0x0);
        gbc.writeMem(0xa4e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x911d, gbc.sp());
        EXPECT(0xa4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e6));
        EXPECT(0x7a, gbc.readMem(0xa4e7));
        // CB 7A 01E8
        gbc.setState(0x8af1, 0xfd9c, 0xced0, 0xc3a0, 0x94f9, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0x8af1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfd9c, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af1));
        EXPECT(0x7a, gbc.readMem(0x8af2));
        // CB 7A 01EA
        gbc.setState(0x5f9f, 0xc086, 0x11d0, 0xdee4, 0x6fea, 0x43a, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01EB
        gbc.setState(0x2430, 0x92d, 0x1bc0, 0xfbae, 0x1488, 0x3f9, 0x1, 0x0);
        gbc.writeMem(0x2430, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x92d, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01EC
        gbc.setState(0xa729, 0x6ca7, 0xdd10, 0xaecf, 0x870e, 0x8268, 0x0, 0x1);
        gbc.writeMem(0xa729, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa729));
        EXPECT(0x7a, gbc.readMem(0xa72a));
        // CB 7A 01ED
        gbc.setState(0x3258, 0xc51b, 0xff60, 0xc7dc, 0x6abe, 0x8cf2, 0x0, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01EE
        gbc.setState(0x831c, 0x4873, 0x5d0, 0xf787, 0xe17e, 0xd47, 0x1, 0x0);
        gbc.writeMem(0x831c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4873, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831c));
        EXPECT(0x7a, gbc.readMem(0x831d));
        // CB 7A 01EF
        gbc.setState(0xc5c1, 0x51a2, 0x1740, 0xc503, 0x9487, 0xf02e, 0x1, 0x0);
        gbc.writeMem(0xc5c1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0xc5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c1));
        EXPECT(0x7a, gbc.readMem(0xc5c2));
        // CB 7A 01F1
        gbc.setState(0xdf20, 0x94c8, 0xeea0, 0xc8ac, 0xd1a9, 0x3881, 0x1, 0x0);
        gbc.writeMem(0xdf20, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0xdf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf20));
        EXPECT(0x7a, gbc.readMem(0xdf21));
        // CB 7A 01F2
        gbc.setState(0xa03d, 0xd0d5, 0xec70, 0xdc50, 0x8b63, 0x74ac, 0x1, 0x0);
        gbc.writeMem(0xa03d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd0d5, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03d));
        EXPECT(0x7a, gbc.readMem(0xa03e));
        // CB 7A 01F3
        gbc.setState(0xe412, 0x3242, 0x33c0, 0xba1b, 0x26e8, 0x5590, 0x1, 0x1);
        gbc.writeMem(0xe412, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0xe414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe412));
        EXPECT(0x7a, gbc.readMem(0xe413));
        // CB 7A 01F4
        gbc.setState(0xac3b, 0xfdbc, 0x8480, 0x832c, 0x2466, 0xd91b, 0x1, 0x0);
        gbc.writeMem(0xac3b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfdbc, gbc.sp());
        EXPECT(0xac3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3b));
        EXPECT(0x7a, gbc.readMem(0xac3c));
        // CB 7A 01F5
        gbc.setState(0x1c0e, 0x768, 0x3cd0, 0x2f38, 0x8b25, 0x1a19, 0x0, 0x0);
        gbc.writeMem(0x1c0e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0x1c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01F6
        gbc.setState(0xb95c, 0xb705, 0x7510, 0xc9c3, 0xbb78, 0x544f, 0x1, 0x1);
        gbc.writeMem(0xb95c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0xb95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95c));
        EXPECT(0x7a, gbc.readMem(0xb95d));
        // CB 7A 01F7
        gbc.setState(0xc2ba, 0x1747, 0x4360, 0xeb66, 0x2b4f, 0xf40e, 0x1, 0x1);
        gbc.writeMem(0xc2ba, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1747, gbc.sp());
        EXPECT(0xc2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ba));
        EXPECT(0x7a, gbc.readMem(0xc2bb));
        // CB 7A 01F9
        gbc.setState(0xc158, 0xa978, 0xd490, 0x6521, 0xffb9, 0xc00d, 0x1, 0x0);
        gbc.writeMem(0xc158, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0xc15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc158));
        EXPECT(0x7a, gbc.readMem(0xc159));
        // CB 7A 01FA
        gbc.setState(0x54b1, 0x9191, 0x39d0, 0x5f4, 0xfb06, 0xd719, 0x1, 0x0);
        gbc.writeMem(0x54b1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0x54b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01FB
        gbc.setState(0x4526, 0x8c77, 0xe2d0, 0x7695, 0x3bd9, 0xb2da, 0x0, 0x1);
        gbc.writeMem(0x4526, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8c77, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01FC
        gbc.setState(0xd625, 0xee9e, 0xe200, 0xd17e, 0x9eab, 0x5f45, 0x0, 0x0);
        gbc.writeMem(0xd625, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee9e, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd625));
        EXPECT(0x7a, gbc.readMem(0xd626));
        // CB 7A 01FD
        gbc.setState(0x7e14, 0x6537, 0xfbd0, 0x5612, 0xdd7, 0x5ff1, 0x0, 0x0);
        gbc.writeMem(0x7e14, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6537, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 01FE
        gbc.setState(0x2d9d, 0x763f, 0x9860, 0x9d17, 0x1e0d, 0x252c, 0x0, 0x1);
        gbc.writeMem(0x2d9d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x763f, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 01FF
        gbc.setState(0x5a6b, 0x3bd8, 0xeeb0, 0x2bc, 0x215d, 0x323c, 0x0, 0x0);
        gbc.writeMem(0x5a6b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3bd8, gbc.sp());
        EXPECT(0x5a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0200
        gbc.setState(0x5895, 0x8db4, 0x6a60, 0xca27, 0x3ecf, 0x69b8, 0x0, 0x0);
        gbc.writeMem(0x5895, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8db4, gbc.sp());
        EXPECT(0x5897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0201
        gbc.setState(0x27be, 0xe793, 0xb1c0, 0x8f11, 0xda8d, 0x3618, 0x0, 0x1);
        gbc.writeMem(0x27be, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0202
        gbc.setState(0x90e3, 0x613d, 0xe140, 0x8152, 0xf98f, 0x27f0, 0x0, 0x0);
        gbc.writeMem(0x90e3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x613d, gbc.sp());
        EXPECT(0x90e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e3));
        EXPECT(0x7a, gbc.readMem(0x90e4));
        // CB 7A 0203
        gbc.setState(0x1d69, 0x8097, 0x8720, 0xf7b6, 0xe379, 0x4c02, 0x1, 0x1);
        gbc.writeMem(0x1d69, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0x1d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0204
        gbc.setState(0x5579, 0xc359, 0xe560, 0x8e40, 0x4525, 0x2c, 0x0, 0x0);
        gbc.writeMem(0x5579, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc359, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0205
        gbc.setState(0xf90, 0xd858, 0x1680, 0x2993, 0x4354, 0x434e, 0x1, 0x0);
        gbc.writeMem(0xf90, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd858, gbc.sp());
        EXPECT(0xf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0206
        gbc.setState(0xd146, 0xe948, 0x680, 0x2b31, 0x98fb, 0x2430, 0x0, 0x1);
        gbc.writeMem(0xd146, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0xd148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd146));
        EXPECT(0x7a, gbc.readMem(0xd147));
        // CB 7A 0207
        gbc.setState(0x3b63, 0x4bdc, 0x7170, 0x6736, 0x45ce, 0xa2b4, 0x0, 0x0);
        gbc.writeMem(0x3b63, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4bdc, gbc.sp());
        EXPECT(0x3b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0208
        gbc.setState(0x9227, 0x68e9, 0x5e20, 0xd392, 0x58cd, 0x2e62, 0x1, 0x1);
        gbc.writeMem(0x9227, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0x9229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9227));
        EXPECT(0x7a, gbc.readMem(0x9228));
        // CB 7A 0209
        gbc.setState(0x87f0, 0xe59c, 0xe050, 0xc255, 0x1bee, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x87f0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe59c, gbc.sp());
        EXPECT(0x87f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f0));
        EXPECT(0x7a, gbc.readMem(0x87f1));
        // CB 7A 020A
        gbc.setState(0x815d, 0x2b7b, 0xf610, 0x2d17, 0x704c, 0x6d44, 0x1, 0x1);
        gbc.writeMem(0x815d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0x7a, gbc.readMem(0x815e));
        // CB 7A 020B
        gbc.setState(0x67ea, 0xdbf5, 0x6ca0, 0x8912, 0x4fae, 0x3f17, 0x0, 0x0);
        gbc.writeMem(0x67ea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0x67ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 020D
        gbc.setState(0xd706, 0xa1f9, 0xba40, 0x8b7c, 0x4db1, 0xe439, 0x0, 0x1);
        gbc.writeMem(0xd706, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0xd708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd706));
        EXPECT(0x7a, gbc.readMem(0xd707));
        // CB 7A 020E
        gbc.setState(0x60eb, 0x2f7e, 0xc560, 0x303d, 0x526c, 0x30c2, 0x1, 0x1);
        gbc.writeMem(0x60eb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x60ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 020F
        gbc.setState(0x418b, 0x9ccb, 0xd6e0, 0x2307, 0x85d4, 0x6be6, 0x1, 0x0);
        gbc.writeMem(0x418b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x418d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0210
        gbc.setState(0x3021, 0x3a6c, 0xc7c0, 0x830e, 0xfb31, 0xd20f, 0x1, 0x1);
        gbc.writeMem(0x3021, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x3023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0211
        gbc.setState(0x6229, 0x33b9, 0xb340, 0x735f, 0xb8fa, 0x2b01, 0x0, 0x1);
        gbc.writeMem(0x6229, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x622b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0212
        gbc.setState(0x279c, 0xd8e4, 0xd790, 0x305a, 0x7429, 0x4704, 0x1, 0x0);
        gbc.writeMem(0x279c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0213
        gbc.setState(0x37e6, 0xdbaf, 0x8cb0, 0x349e, 0xf697, 0xdd59, 0x1, 0x0);
        gbc.writeMem(0x37e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdbaf, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0214
        gbc.setState(0xd5ea, 0x7ec1, 0x7930, 0xb17c, 0xfbcf, 0xc043, 0x1, 0x0);
        gbc.writeMem(0xd5ea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7ec1, gbc.sp());
        EXPECT(0xd5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ea));
        EXPECT(0x7a, gbc.readMem(0xd5eb));
        // CB 7A 0215
        gbc.setState(0x6d8, 0xe432, 0x7b0, 0xf42c, 0xf028, 0x9891, 0x0, 0x1);
        gbc.writeMem(0x6d8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0x6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0216
        gbc.setState(0x3449, 0x36fa, 0x33d0, 0xb7a7, 0xdc23, 0x8d82, 0x1, 0x1);
        gbc.writeMem(0x3449, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x36fa, gbc.sp());
        EXPECT(0x344b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0217
        gbc.setState(0x13c6, 0x46c5, 0xc9d0, 0x66fd, 0x7cd1, 0xa581, 0x0, 0x1);
        gbc.writeMem(0x13c6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x46c5, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0218
        gbc.setState(0x6c72, 0xda75, 0xe580, 0x12c1, 0xbb10, 0x9cb4, 0x0, 0x0);
        gbc.writeMem(0x6c72, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x6c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0219
        gbc.setState(0x4169, 0xae4f, 0x8d80, 0x31ea, 0xcd24, 0xf403, 0x1, 0x1);
        gbc.writeMem(0x4169, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x416b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 021A
        gbc.setState(0x78d2, 0x9757, 0xd0b0, 0xf274, 0x5c53, 0xbeeb, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0x78d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 021B
        gbc.setState(0x8ab6, 0x8208, 0xc9d0, 0xc783, 0x79ed, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0x8ab6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8208, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab6));
        EXPECT(0x7a, gbc.readMem(0x8ab7));
        // CB 7A 021C
        gbc.setState(0xb110, 0xa359, 0x3130, 0x973f, 0x25fb, 0x1fde, 0x1, 0x0);
        gbc.writeMem(0xb110, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb110));
        EXPECT(0x7a, gbc.readMem(0xb111));
        // CB 7A 021D
        gbc.setState(0x43c0, 0x75c5, 0x12d0, 0xd6, 0x9be8, 0x24f1, 0x0, 0x0);
        gbc.writeMem(0x43c0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x75c5, gbc.sp());
        EXPECT(0x43c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 021E
        gbc.setState(0x4002, 0x18ee, 0x2fe0, 0xb334, 0xf6e8, 0xf462, 0x1, 0x1);
        gbc.writeMem(0x4002, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x18ee, gbc.sp());
        EXPECT(0x4004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 021F
        gbc.setState(0x29d3, 0xd8b5, 0x25e0, 0x4877, 0x5264, 0xec6b, 0x1, 0x1);
        gbc.writeMem(0x29d3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd8b5, gbc.sp());
        EXPECT(0x29d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0220
        gbc.setState(0x6c52, 0xe1e8, 0x1b50, 0xeec1, 0x4f5d, 0x2fa0, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe1e8, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0221
        gbc.setState(0x1341, 0x518, 0xbdd0, 0x8467, 0x4b65, 0xaa32, 0x1, 0x0);
        gbc.writeMem(0x1341, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x518, gbc.sp());
        EXPECT(0x1343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0222
        gbc.setState(0x325b, 0x3f07, 0x6420, 0x634d, 0xdbb3, 0x4b96, 0x1, 0x1);
        gbc.writeMem(0x325b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3f07, gbc.sp());
        EXPECT(0x325d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0223
        gbc.setState(0x50b9, 0x8f1b, 0x30f0, 0x4ec5, 0xd5c7, 0x4b7c, 0x1, 0x0);
        gbc.writeMem(0x50b9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8f1b, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0224
        gbc.setState(0xd71d, 0x5a5c, 0x28e0, 0x8e2d, 0xe867, 0x1955, 0x0, 0x0);
        gbc.writeMem(0xd71d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71d));
        EXPECT(0x7a, gbc.readMem(0xd71e));
        // CB 7A 0225
        gbc.setState(0x66ad, 0x9bbd, 0xa0c0, 0xe4f7, 0x974f, 0xe0d1, 0x0, 0x1);
        gbc.writeMem(0x66ad, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9bbd, gbc.sp());
        EXPECT(0x66af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0226
        gbc.setState(0xca6d, 0x857a, 0x3b20, 0xaf0d, 0x941f, 0x2a5, 0x1, 0x0);
        gbc.writeMem(0xca6d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x857a, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6d));
        EXPECT(0x7a, gbc.readMem(0xca6e));
        // CB 7A 0227
        gbc.setState(0xe1cf, 0x5d39, 0x2f70, 0x35d3, 0x33a2, 0x1caf, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5d39, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cf));
        EXPECT(0x7a, gbc.readMem(0xe1d0));
        // CB 7A 0228
        gbc.setState(0x4173, 0xc967, 0xb660, 0x79ec, 0xa53c, 0x95cd, 0x1, 0x1);
        gbc.writeMem(0x4173, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc967, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0229
        gbc.setState(0x7773, 0x7498, 0xb5a0, 0x3932, 0xc3ac, 0x62e4, 0x1, 0x1);
        gbc.writeMem(0x7773, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7498, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 022A
        gbc.setState(0xa509, 0x1a5, 0x5530, 0x513, 0xdb79, 0xc53f, 0x0, 0x0);
        gbc.writeMem(0xa509, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa509));
        EXPECT(0x7a, gbc.readMem(0xa50a));
        // CB 7A 022B
        gbc.setState(0x5085, 0xa6d5, 0xe4e0, 0xa8dc, 0x8375, 0x6b2d, 0x0, 0x0);
        gbc.writeMem(0x5085, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 022C
        gbc.setState(0x1019, 0xa9a4, 0x53d0, 0xee38, 0x2d43, 0x4a00, 0x1, 0x1);
        gbc.writeMem(0x1019, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 022D
        gbc.setState(0xa22a, 0x63a2, 0x1280, 0xdefb, 0xf47, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xa22a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0xa22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22a));
        EXPECT(0x7a, gbc.readMem(0xa22b));
        // CB 7A 022E
        gbc.setState(0x745d, 0x709f, 0x23f0, 0x5a0e, 0x8291, 0x8c2d, 0x1, 0x1);
        gbc.writeMem(0x745d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x709f, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 022F
        gbc.setState(0xaa97, 0xf490, 0xa370, 0xcef5, 0xe458, 0xf32, 0x0, 0x1);
        gbc.writeMem(0xaa97, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa97));
        EXPECT(0x7a, gbc.readMem(0xaa98));
        // CB 7A 0230
        gbc.setState(0xa534, 0xa3d6, 0xdb50, 0xe42d, 0x3a6a, 0xc174, 0x1, 0x1);
        gbc.writeMem(0xa534, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa3d6, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa534));
        EXPECT(0x7a, gbc.readMem(0xa535));
        // CB 7A 0231
        gbc.setState(0xe7d1, 0xe67, 0xc2f0, 0x6393, 0x1bc4, 0xb43, 0x0, 0x1);
        gbc.writeMem(0xe7d1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe67, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d1));
        EXPECT(0x7a, gbc.readMem(0xe7d2));
        // CB 7A 0233
        gbc.setState(0xea57, 0x7a78, 0x8290, 0x1d21, 0xe5f6, 0xd842, 0x1, 0x0);
        gbc.writeMem(0xea57, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7a78, gbc.sp());
        EXPECT(0xea59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea57));
        EXPECT(0x7a, gbc.readMem(0xea58));
        // CB 7A 0234
        gbc.setState(0x5065, 0x5063, 0x4f0, 0x2461, 0x6379, 0x7f1a, 0x0, 0x1);
        gbc.writeMem(0x5065, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0235
        gbc.setState(0x2a08, 0x54e5, 0xa000, 0xb0bd, 0x728b, 0x9e1e, 0x1, 0x0);
        gbc.writeMem(0x2a08, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0x2a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0236
        gbc.setState(0xc76f, 0xd421, 0xa950, 0xd2be, 0x1523, 0xbaeb, 0x0, 0x0);
        gbc.writeMem(0xc76f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0xc771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76f));
        EXPECT(0x7a, gbc.readMem(0xc770));
        // CB 7A 0237
        gbc.setState(0xeec2, 0x3c8d, 0xe230, 0x7ed, 0x1eb3, 0x973d, 0x1, 0x0);
        gbc.writeMem(0xeec2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3c8d, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec2));
        EXPECT(0x7a, gbc.readMem(0xeec3));
        // CB 7A 0238
        gbc.setState(0x99b0, 0xfcdb, 0xe890, 0x9316, 0x2fde, 0x5594, 0x0, 0x1);
        gbc.writeMem(0x99b0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0x99b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b0));
        EXPECT(0x7a, gbc.readMem(0x99b1));
        // CB 7A 0239
        gbc.setState(0x2f68, 0xf66b, 0xd850, 0xd4bb, 0x79a0, 0xaae2, 0x1, 0x0);
        gbc.writeMem(0x2f68, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf66b, gbc.sp());
        EXPECT(0x2f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 023A
        gbc.setState(0xc56d, 0x81ee, 0x4540, 0x8687, 0xc879, 0xfa81, 0x0, 0x1);
        gbc.writeMem(0xc56d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x81ee, gbc.sp());
        EXPECT(0xc56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56d));
        EXPECT(0x7a, gbc.readMem(0xc56e));
        // CB 7A 023B
        gbc.setState(0xb044, 0x2727, 0xa530, 0xd4a5, 0xdbd3, 0xe2f4, 0x0, 0x1);
        gbc.writeMem(0xb044, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb044));
        EXPECT(0x7a, gbc.readMem(0xb045));
        // CB 7A 023C
        gbc.setState(0xbfb6, 0x8a58, 0x90c0, 0xfd23, 0xcc1c, 0xbd82, 0x0, 0x0);
        gbc.writeMem(0xbfb6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8a58, gbc.sp());
        EXPECT(0xbfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb6));
        EXPECT(0x7a, gbc.readMem(0xbfb7));
        // CB 7A 023D
        gbc.setState(0x4fbd, 0xce18, 0x4de0, 0x6218, 0x4f6d, 0x6c8e, 0x0, 0x0);
        gbc.writeMem(0x4fbd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0x4fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 023E
        gbc.setState(0xd39, 0xdeba, 0x7a0, 0x2978, 0x2d84, 0x9d9d, 0x0, 0x1);
        gbc.writeMem(0xd39, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 023F
        gbc.setState(0x71e9, 0x6e0f, 0x550, 0xeb36, 0x13af, 0xd445, 0x0, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0240
        gbc.setState(0x7f1c, 0xad0b, 0x3770, 0xfd0c, 0x810f, 0x14a7, 0x0, 0x0);
        gbc.writeMem(0x7f1c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0241
        gbc.setState(0x4596, 0x3f81, 0x7740, 0xcb13, 0x9713, 0xd1a3, 0x1, 0x1);
        gbc.writeMem(0x4596, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0x4598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0242
        gbc.setState(0xd60a, 0x3aec, 0xade0, 0xebae, 0x952b, 0x2342, 0x0, 0x1);
        gbc.writeMem(0xd60a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3aec, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0x7a, gbc.readMem(0xd60b));
        // CB 7A 0243
        gbc.setState(0x3859, 0x956b, 0x5080, 0x2966, 0x253f, 0xd0ae, 0x1, 0x1);
        gbc.writeMem(0x3859, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x956b, gbc.sp());
        EXPECT(0x385b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0244
        gbc.setState(0x3652, 0xfcf4, 0x2ec0, 0x6fec, 0x682, 0xf14f, 0x0, 0x1);
        gbc.writeMem(0x3652, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0x3654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0245
        gbc.setState(0x65f3, 0x1d8, 0x9250, 0x6394, 0x43ce, 0x5ac0, 0x1, 0x0);
        gbc.writeMem(0x65f3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0x65f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0246
        gbc.setState(0x3e9c, 0x71ab, 0x9180, 0xa7ea, 0x1abb, 0xd308, 0x0, 0x0);
        gbc.writeMem(0x3e9c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x71ab, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0247
        gbc.setState(0x1eac, 0x259, 0xa240, 0xc2cd, 0x1e96, 0x787d, 0x1, 0x1);
        gbc.writeMem(0x1eac, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x259, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0248
        gbc.setState(0xa38f, 0xb6a0, 0xa320, 0x5a0d, 0x4e9f, 0xf86a, 0x1, 0x0);
        gbc.writeMem(0xa38f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0xa391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38f));
        EXPECT(0x7a, gbc.readMem(0xa390));
        // CB 7A 024B
        gbc.setState(0x43c3, 0xa83, 0x800, 0x83e0, 0xbf49, 0x6b31, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa83, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 024C
        gbc.setState(0xc35a, 0xdb9d, 0x9770, 0xc91, 0xeeec, 0xb7b0, 0x1, 0x1);
        gbc.writeMem(0xc35a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdb9d, gbc.sp());
        EXPECT(0xc35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35a));
        EXPECT(0x7a, gbc.readMem(0xc35b));
        // CB 7A 024D
        gbc.setState(0x5293, 0x27a8, 0x26c0, 0x55e1, 0xb489, 0x90c0, 0x1, 0x0);
        gbc.writeMem(0x5293, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 024E
        gbc.setState(0x173b, 0xdffa, 0x13b0, 0xeff0, 0x7d67, 0xb257, 0x0, 0x1);
        gbc.writeMem(0x173b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdffa, gbc.sp());
        EXPECT(0x173d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 024F
        gbc.setState(0xee4a, 0xab5f, 0x4fe0, 0x4318, 0x96be, 0x1278, 0x1, 0x1);
        gbc.writeMem(0xee4a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xab5f, gbc.sp());
        EXPECT(0xee4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4a));
        EXPECT(0x7a, gbc.readMem(0xee4b));
        // CB 7A 0251
        gbc.setState(0x1a08, 0xf511, 0xa690, 0x7c5a, 0x563, 0x83ea, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0x1a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0252
        gbc.setState(0x7e5, 0x7af5, 0xc3a0, 0xe64f, 0x668f, 0x257d, 0x1, 0x1);
        gbc.writeMem(0x7e5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7af5, gbc.sp());
        EXPECT(0x7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0253
        gbc.setState(0xa33a, 0xeea2, 0x8870, 0x2c7a, 0x73ab, 0xcdf0, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33a));
        EXPECT(0x7a, gbc.readMem(0xa33b));
        // CB 7A 0254
        gbc.setState(0xa2d6, 0x3050, 0x1c40, 0xa711, 0x1e36, 0x6a6b, 0x1, 0x0);
        gbc.writeMem(0xa2d6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0xa2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d6));
        EXPECT(0x7a, gbc.readMem(0xa2d7));
        // CB 7A 0255
        gbc.setState(0x610c, 0xc79f, 0x340, 0x6cb8, 0xf153, 0xe34, 0x1, 0x1);
        gbc.writeMem(0x610c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc79f, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0256
        gbc.setState(0x572c, 0x8e1d, 0x5af0, 0xbed, 0x8ad8, 0x3fe7, 0x1, 0x0);
        gbc.writeMem(0x572c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8e1d, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0257
        gbc.setState(0x93be, 0xe11b, 0xdb90, 0xd18d, 0xb644, 0xdbb6, 0x0, 0x1);
        gbc.writeMem(0x93be, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93be));
        EXPECT(0x7a, gbc.readMem(0x93bf));
        // CB 7A 0258
        gbc.setState(0xe276, 0x726f, 0x3140, 0x3c15, 0x243a, 0x6fbf, 0x1, 0x1);
        gbc.writeMem(0xe276, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x726f, gbc.sp());
        EXPECT(0xe278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe276));
        EXPECT(0x7a, gbc.readMem(0xe277));
        // CB 7A 0259
        gbc.setState(0x2af6, 0x5115, 0x7220, 0x2c67, 0xac93, 0x9585, 0x0, 0x0);
        gbc.writeMem(0x2af6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5115, gbc.sp());
        EXPECT(0x2af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 025A
        gbc.setState(0xc0f8, 0x1cef, 0x1b0, 0xf20e, 0x1365, 0x7ff0, 0x0, 0x1);
        gbc.writeMem(0xc0f8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1cef, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f8));
        EXPECT(0x7a, gbc.readMem(0xc0f9));
        // CB 7A 025B
        gbc.setState(0xb396, 0xd998, 0x3530, 0x27a6, 0xc999, 0xec72, 0x0, 0x1);
        gbc.writeMem(0xb396, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd998, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb396));
        EXPECT(0x7a, gbc.readMem(0xb397));
        // CB 7A 025C
        gbc.setState(0x44d0, 0x9c21, 0x8100, 0x19ba, 0x2493, 0xf2fe, 0x1, 0x1);
        gbc.writeMem(0x44d0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0x44d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 025D
        gbc.setState(0x9bbc, 0xac20, 0x5930, 0x17c, 0xa1c0, 0x3175, 0x0, 0x1);
        gbc.writeMem(0x9bbc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xac20, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbc));
        EXPECT(0x7a, gbc.readMem(0x9bbd));
        // CB 7A 025E
        gbc.setState(0xa112, 0x1f9c, 0xbb30, 0x68f9, 0x5707, 0x8a5b, 0x1, 0x0);
        gbc.writeMem(0xa112, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0xa114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa112));
        EXPECT(0x7a, gbc.readMem(0xa113));
        // CB 7A 025F
        gbc.setState(0x3b7, 0xde6c, 0x8260, 0xf550, 0x4190, 0x238f, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xde6c, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0260
        gbc.setState(0x5053, 0x1ee4, 0x6b50, 0x5fc3, 0x728c, 0xaa3e, 0x1, 0x1);
        gbc.writeMem(0x5053, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0x5055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0261
        gbc.setState(0xd737, 0x38a5, 0x7d10, 0x94d5, 0x4b42, 0x39f, 0x1, 0x1);
        gbc.writeMem(0xd737, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x38a5, gbc.sp());
        EXPECT(0xd739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd737));
        EXPECT(0x7a, gbc.readMem(0xd738));
        // CB 7A 0262
        gbc.setState(0x2b36, 0x7ac4, 0xd920, 0xb40a, 0x622e, 0xfa34, 0x1, 0x0);
        gbc.writeMem(0x2b36, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ac4, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0263
        gbc.setState(0x49cf, 0xb5f6, 0x8500, 0x1462, 0xb9a, 0xb536, 0x0, 0x1);
        gbc.writeMem(0x49cf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x49d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0264
        gbc.setState(0x7fb1, 0xaed7, 0x9c60, 0x997, 0x7229, 0x3db0, 0x0, 0x0);
        gbc.writeMem(0x7fb1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0x7fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0265
        gbc.setState(0x8faf, 0x31fc, 0xf0b0, 0xa019, 0x76b0, 0xc95, 0x1, 0x1);
        gbc.writeMem(0x8faf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x31fc, gbc.sp());
        EXPECT(0x8fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faf));
        EXPECT(0x7a, gbc.readMem(0x8fb0));
        // CB 7A 0266
        gbc.setState(0xbbe1, 0xb6df, 0x68e0, 0xe544, 0x61c9, 0xe9d5, 0x0, 0x0);
        gbc.writeMem(0xbbe1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb6df, gbc.sp());
        EXPECT(0xbbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe1));
        EXPECT(0x7a, gbc.readMem(0xbbe2));
        // CB 7A 0267
        gbc.setState(0x1dfa, 0x6513, 0x6280, 0x4473, 0x74f3, 0x1318, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0268
        gbc.setState(0x4172, 0x7f04, 0xc820, 0xab92, 0x4b7c, 0x82b1, 0x1, 0x0);
        gbc.writeMem(0x4172, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0269
        gbc.setState(0xd8a0, 0x7a9c, 0x3b20, 0xda8c, 0x14da, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0xd8a0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a9c, gbc.sp());
        EXPECT(0xd8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a0));
        EXPECT(0x7a, gbc.readMem(0xd8a1));
        // CB 7A 026A
        gbc.setState(0xde21, 0x97fd, 0xb430, 0xaba7, 0x6013, 0x78db, 0x0, 0x1);
        gbc.writeMem(0xde21, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x97fd, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde21));
        EXPECT(0x7a, gbc.readMem(0xde22));
        // CB 7A 026B
        gbc.setState(0xe183, 0xb450, 0x6480, 0x7525, 0x15b5, 0x2fab, 0x1, 0x1);
        gbc.writeMem(0xe183, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe183));
        EXPECT(0x7a, gbc.readMem(0xe184));
        // CB 7A 026C
        gbc.setState(0x9c04, 0x6ebc, 0xd5d0, 0x696b, 0x2e77, 0x365, 0x0, 0x1);
        gbc.writeMem(0x9c04, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6ebc, gbc.sp());
        EXPECT(0x9c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c04));
        EXPECT(0x7a, gbc.readMem(0x9c05));
        // CB 7A 026D
        gbc.setState(0xc627, 0x1c7, 0x7c70, 0x24c8, 0x4e77, 0x30eb, 0x0, 0x1);
        gbc.writeMem(0xc627, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c7, gbc.sp());
        EXPECT(0xc629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc627));
        EXPECT(0x7a, gbc.readMem(0xc628));
        // CB 7A 026F
        gbc.setState(0xe9ea, 0x223b, 0x490, 0x62b, 0x6fe5, 0xed7b, 0x1, 0x0);
        gbc.writeMem(0xe9ea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0x7a, gbc.readMem(0xe9eb));
        // CB 7A 0270
        gbc.setState(0x76b3, 0x3337, 0x2dc0, 0xbf5b, 0x812a, 0x781d, 0x1, 0x1);
        gbc.writeMem(0x76b3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3337, gbc.sp());
        EXPECT(0x76b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0271
        gbc.setState(0xef52, 0x3c61, 0x3ed0, 0x987c, 0xbd6b, 0xee07, 0x1, 0x0);
        gbc.writeMem(0xef52, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3c61, gbc.sp());
        EXPECT(0xef54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef52));
        EXPECT(0x7a, gbc.readMem(0xef53));
        // CB 7A 0272
        gbc.setState(0x52c0, 0xc8e4, 0xe120, 0x6b04, 0xbbe, 0x1524, 0x1, 0x1);
        gbc.writeMem(0x52c0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc8e4, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0273
        gbc.setState(0xa053, 0xc78b, 0x6520, 0xb15f, 0xdb4, 0xb937, 0x1, 0x0);
        gbc.writeMem(0xa053, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa053));
        EXPECT(0x7a, gbc.readMem(0xa054));
        // CB 7A 0274
        gbc.setState(0x3923, 0xef8f, 0xe680, 0xb44e, 0xb056, 0x7f, 0x0, 0x0);
        gbc.writeMem(0x3923, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x3925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0275
        gbc.setState(0x36fa, 0xbac0, 0xf390, 0x93e5, 0x6dc2, 0x2fe4, 0x1, 0x0);
        gbc.writeMem(0x36fa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0276
        gbc.setState(0x9617, 0x5067, 0x82b0, 0x8799, 0x3a7d, 0x6554, 0x1, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0x7a, gbc.readMem(0x9618));
        // CB 7A 0277
        gbc.setState(0xdd97, 0x2fab, 0x8a40, 0x64fd, 0x2f9, 0x3a66, 0x0, 0x1);
        gbc.writeMem(0xdd97, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2fab, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd97));
        EXPECT(0x7a, gbc.readMem(0xdd98));
        // CB 7A 0278
        gbc.setState(0xc565, 0x4423, 0xe7b0, 0xbda0, 0x2514, 0xa472, 0x1, 0x1);
        gbc.writeMem(0xc565, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4423, gbc.sp());
        EXPECT(0xc567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc565));
        EXPECT(0x7a, gbc.readMem(0xc566));
        // CB 7A 0279
        gbc.setState(0xeb0, 0x6a05, 0x880, 0x8755, 0x32a6, 0xc76c, 0x1, 0x0);
        gbc.writeMem(0xeb0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 027A
        gbc.setState(0x20db, 0xfb9a, 0xd360, 0x336f, 0x5bf5, 0x82ac, 0x1, 0x0);
        gbc.writeMem(0x20db, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0x20dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 027B
        gbc.setState(0x63a0, 0x40a6, 0xac90, 0xaf0e, 0x8bce, 0x3957, 0x1, 0x1);
        gbc.writeMem(0x63a0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x40a6, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 027C
        gbc.setState(0x26d2, 0x9b30, 0x9c40, 0x9919, 0x1956, 0x9ed4, 0x1, 0x1);
        gbc.writeMem(0x26d2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 027D
        gbc.setState(0x2f39, 0x6f33, 0xbbb0, 0x3df9, 0x25a2, 0x7205, 0x0, 0x0);
        gbc.writeMem(0x2f39, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 027E
        gbc.setState(0x3500, 0x369f, 0x89c0, 0x3e94, 0x1919, 0xb944, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 027F
        gbc.setState(0xaa6e, 0x9005, 0x1ab0, 0x1677, 0xbc4a, 0xad47, 0x1, 0x1);
        gbc.writeMem(0xaa6e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9005, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6e));
        EXPECT(0x7a, gbc.readMem(0xaa6f));
        // CB 7A 0280
        gbc.setState(0x216, 0xc187, 0x7470, 0x8f68, 0xe768, 0x8dea, 0x0, 0x0);
        gbc.writeMem(0x216, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc187, gbc.sp());
        EXPECT(0x218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0281
        gbc.setState(0x97e7, 0x1ed4, 0x4bd0, 0xc46e, 0x4b25, 0xc415, 0x0, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1ed4, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e7));
        EXPECT(0x7a, gbc.readMem(0x97e8));
        // CB 7A 0282
        gbc.setState(0x712e, 0x39b4, 0x4690, 0xf1df, 0x85c9, 0xb1f0, 0x1, 0x0);
        gbc.writeMem(0x712e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x39b4, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0283
        gbc.setState(0xbfcd, 0xc8cd, 0xc2f0, 0xa732, 0xb6e7, 0xcb1d, 0x0, 0x1);
        gbc.writeMem(0xbfcd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcd));
        EXPECT(0x7a, gbc.readMem(0xbfce));
        // CB 7A 0284
        gbc.setState(0x1f74, 0xf134, 0xe90, 0xc259, 0x5d3, 0xbca5, 0x1, 0x1);
        gbc.writeMem(0x1f74, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf134, gbc.sp());
        EXPECT(0x1f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0285
        gbc.setState(0x51bb, 0x8f7, 0xc670, 0xb832, 0x1f6a, 0x68b5, 0x0, 0x1);
        gbc.writeMem(0x51bb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x51bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0286
        gbc.setState(0x26ea, 0x3762, 0xe8c0, 0x3806, 0xb2bd, 0x13c7, 0x0, 0x0);
        gbc.writeMem(0x26ea, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3762, gbc.sp());
        EXPECT(0x26ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0287
        gbc.setState(0x8bb5, 0xa867, 0x9010, 0xdcb4, 0x189e, 0x40cd, 0x0, 0x0);
        gbc.writeMem(0x8bb5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa867, gbc.sp());
        EXPECT(0x8bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb5));
        EXPECT(0x7a, gbc.readMem(0x8bb6));
        // CB 7A 0288
        gbc.setState(0xba07, 0x88b8, 0xdba0, 0x4589, 0x6ee6, 0xb8ef, 0x1, 0x1);
        gbc.writeMem(0xba07, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0xba09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba07));
        EXPECT(0x7a, gbc.readMem(0xba08));
        // CB 7A 0289
        gbc.setState(0x918e, 0xbd72, 0xb060, 0xf6d9, 0x3e1d, 0xf9d0, 0x1, 0x0);
        gbc.writeMem(0x918e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd72, gbc.sp());
        EXPECT(0x9190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918e));
        EXPECT(0x7a, gbc.readMem(0x918f));
        // CB 7A 028A
        gbc.setState(0x93ad, 0x11b7, 0xe90, 0xcfbc, 0xcfc, 0xd1c0, 0x0, 0x1);
        gbc.writeMem(0x93ad, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x11b7, gbc.sp());
        EXPECT(0x93af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ad));
        EXPECT(0x7a, gbc.readMem(0x93ae));
        // CB 7A 028B
        gbc.setState(0x4224, 0xe006, 0x91a0, 0xef33, 0x394e, 0xd857, 0x0, 0x1);
        gbc.writeMem(0x4224, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe006, gbc.sp());
        EXPECT(0x4226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 028D
        gbc.setState(0xec55, 0x1b11, 0x490, 0xce28, 0xd82d, 0x3656, 0x1, 0x0);
        gbc.writeMem(0xec55, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1b11, gbc.sp());
        EXPECT(0xec57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec55));
        EXPECT(0x7a, gbc.readMem(0xec56));
        // CB 7A 028E
        gbc.setState(0x12ee, 0xb332, 0x85c0, 0x7ff6, 0x7c9a, 0x9f28, 0x0, 0x0);
        gbc.writeMem(0x12ee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 028F
        gbc.setState(0x206f, 0x8295, 0xc3f0, 0xc467, 0x3e4a, 0xb797, 0x1, 0x1);
        gbc.writeMem(0x206f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8295, gbc.sp());
        EXPECT(0x2071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0290
        gbc.setState(0xda0, 0x4e85, 0xaaf0, 0x817e, 0x14b4, 0xc304, 0x1, 0x1);
        gbc.writeMem(0xda0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4e85, gbc.sp());
        EXPECT(0xda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0291
        gbc.setState(0x7914, 0x75ed, 0x8210, 0x6fe2, 0xcca1, 0x280f, 0x1, 0x0);
        gbc.writeMem(0x7914, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x75ed, gbc.sp());
        EXPECT(0x7916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0292
        gbc.setState(0x1465, 0xbc36, 0x63a0, 0x2d8, 0x494e, 0x1661, 0x0, 0x0);
        gbc.writeMem(0x1465, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc36, gbc.sp());
        EXPECT(0x1467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0293
        gbc.setState(0xba8d, 0xfb30, 0x3ce0, 0xb6e1, 0x3257, 0x6067, 0x0, 0x0);
        gbc.writeMem(0xba8d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfb30, gbc.sp());
        EXPECT(0xba8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8d));
        EXPECT(0x7a, gbc.readMem(0xba8e));
        // CB 7A 0294
        gbc.setState(0x270e, 0xbd7a, 0x8990, 0x4b9, 0xc432, 0xbe72, 0x1, 0x1);
        gbc.writeMem(0x270e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0295
        gbc.setState(0x2510, 0x87ec, 0x5700, 0x477e, 0x400f, 0xfd8a, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x87ec, gbc.sp());
        EXPECT(0x2512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0296
        gbc.setState(0xe9d4, 0xbc28, 0x42e0, 0x7640, 0x2335, 0x3dd2, 0x1, 0x1);
        gbc.writeMem(0xe9d4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0xe9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d4));
        EXPECT(0x7a, gbc.readMem(0xe9d5));
        // CB 7A 0297
        gbc.setState(0x5133, 0x361e, 0x3090, 0xad07, 0x71cf, 0xbe03, 0x0, 0x1);
        gbc.writeMem(0x5133, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0298
        gbc.setState(0xedf8, 0xf935, 0xb170, 0xfca8, 0x788b, 0x3beb, 0x1, 0x1);
        gbc.writeMem(0xedf8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf935, gbc.sp());
        EXPECT(0xedfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf8));
        EXPECT(0x7a, gbc.readMem(0xedf9));
        // CB 7A 0299
        gbc.setState(0x9c7b, 0x8808, 0x4ca0, 0xcac5, 0xdb14, 0xeb19, 0x0, 0x1);
        gbc.writeMem(0x9c7b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8808, gbc.sp());
        EXPECT(0x9c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7b));
        EXPECT(0x7a, gbc.readMem(0x9c7c));
        // CB 7A 029A
        gbc.setState(0xa1e8, 0xf154, 0xdc00, 0x2676, 0xdc87, 0x9cc4, 0x0, 0x0);
        gbc.writeMem(0xa1e8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf154, gbc.sp());
        EXPECT(0xa1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e8));
        EXPECT(0x7a, gbc.readMem(0xa1e9));
        // CB 7A 029B
        gbc.setState(0x1f32, 0xf8a7, 0xa2f0, 0xd1e8, 0xa51f, 0xe76d, 0x0, 0x0);
        gbc.writeMem(0x1f32, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf8a7, gbc.sp());
        EXPECT(0x1f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 029C
        gbc.setState(0x1202, 0xfb8, 0xb080, 0xc21b, 0xba, 0x984, 0x0, 0x0);
        gbc.writeMem(0x1202, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 029D
        gbc.setState(0xad7c, 0xa8e1, 0xbe80, 0x4f48, 0xb4e, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0xad7c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7c));
        EXPECT(0x7a, gbc.readMem(0xad7d));
        // CB 7A 029E
        gbc.setState(0x74fd, 0xa19c, 0x23e0, 0x7b2d, 0x92f8, 0x9ca9, 0x0, 0x0);
        gbc.writeMem(0x74fd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0x74ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 029F
        gbc.setState(0x464d, 0x977d, 0x71b0, 0x5bea, 0xfa51, 0xb863, 0x0, 0x1);
        gbc.writeMem(0x464d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x977d, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A0
        gbc.setState(0x3e5b, 0x9d89, 0x3910, 0xbe97, 0x4eb6, 0x2bd8, 0x1, 0x0);
        gbc.writeMem(0x3e5b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9d89, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A1
        gbc.setState(0x48df, 0x5102, 0x5780, 0xdbec, 0xa702, 0xbfad, 0x1, 0x0);
        gbc.writeMem(0x48df, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5102, gbc.sp());
        EXPECT(0x48e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02A2
        gbc.setState(0x1d2a, 0x6612, 0x44d0, 0xaac9, 0x720e, 0xca4e, 0x0, 0x0);
        gbc.writeMem(0x1d2a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6612, gbc.sp());
        EXPECT(0x1d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A3
        gbc.setState(0x810f, 0x97cd, 0xf910, 0xe956, 0x70c8, 0xb2d1, 0x1, 0x1);
        gbc.writeMem(0x810f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0x8111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810f));
        EXPECT(0x7a, gbc.readMem(0x8110));
        // CB 7A 02A4
        gbc.setState(0x4c3e, 0x6e4c, 0xd4b0, 0xae40, 0xb2fc, 0xff87, 0x0, 0x1);
        gbc.writeMem(0x4c3e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A5
        gbc.setState(0xcd01, 0xac35, 0xe5f0, 0x39a7, 0xc2a, 0x1f7b, 0x0, 0x1);
        gbc.writeMem(0xcd01, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xac35, gbc.sp());
        EXPECT(0xcd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd01));
        EXPECT(0x7a, gbc.readMem(0xcd02));
        // CB 7A 02A6
        gbc.setState(0xb991, 0xcacc, 0x5e30, 0xe549, 0x244, 0xa4b3, 0x0, 0x0);
        gbc.writeMem(0xb991, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb991));
        EXPECT(0x7a, gbc.readMem(0xb992));
        // CB 7A 02A7
        gbc.setState(0x796a, 0xa89a, 0xcef0, 0xdbd0, 0x71bc, 0x584c, 0x0, 0x1);
        gbc.writeMem(0x796a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa89a, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A8
        gbc.setState(0x7e2c, 0xfc01, 0x7f70, 0x4990, 0xd06b, 0xfd06, 0x0, 0x0);
        gbc.writeMem(0x7e2c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc01, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02A9
        gbc.setState(0xc686, 0x2363, 0xea50, 0x5534, 0xa47a, 0xf516, 0x0, 0x0);
        gbc.writeMem(0xc686, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0xc688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc686));
        EXPECT(0x7a, gbc.readMem(0xc687));
        // CB 7A 02AA
        gbc.setState(0xb3ec, 0x1b99, 0x3bc0, 0x2c63, 0x3393, 0xa7e7, 0x0, 0x0);
        gbc.writeMem(0xb3ec, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0xb3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ec));
        EXPECT(0x7a, gbc.readMem(0xb3ed));
        // CB 7A 02AB
        gbc.setState(0x301, 0x9013, 0xdd70, 0x96c5, 0x1706, 0x812b, 0x0, 0x1);
        gbc.writeMem(0x301, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02AC
        gbc.setState(0x321a, 0xf122, 0xc8e0, 0x5eb5, 0x1046, 0xcdfb, 0x0, 0x0);
        gbc.writeMem(0x321a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02AD
        gbc.setState(0x11dd, 0xce91, 0xe460, 0x4a59, 0x6cbc, 0xf95b, 0x1, 0x0);
        gbc.writeMem(0x11dd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0x11df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02AE
        gbc.setState(0x1cf9, 0x80f, 0x3090, 0xbf6e, 0x1acd, 0x9a51, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0x1cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02AF
        gbc.setState(0x90c2, 0x7b71, 0x2b50, 0xd5ed, 0x2bea, 0xc868, 0x1, 0x1);
        gbc.writeMem(0x90c2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0x90c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c2));
        EXPECT(0x7a, gbc.readMem(0x90c3));
        // CB 7A 02B0
        gbc.setState(0x473a, 0xb5b6, 0x4960, 0xd080, 0x3945, 0x6a2e, 0x0, 0x0);
        gbc.writeMem(0x473a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb5b6, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B1
        gbc.setState(0x9639, 0x5d1c, 0xf4a0, 0x12b8, 0x67b2, 0xee09, 0x0, 0x0);
        gbc.writeMem(0x9639, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5d1c, gbc.sp());
        EXPECT(0x963b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9639));
        EXPECT(0x7a, gbc.readMem(0x963a));
        // CB 7A 02B2
        gbc.setState(0x2065, 0x4f5c, 0xe3b0, 0x6a32, 0xa64e, 0x9799, 0x1, 0x0);
        gbc.writeMem(0x2065, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02B3
        gbc.setState(0x7ee2, 0x6e92, 0x9740, 0xb94a, 0xea76, 0xdc5, 0x0, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B4
        gbc.setState(0x10e7, 0x1d82, 0x4920, 0xc94a, 0xff2e, 0xbbb9, 0x1, 0x0);
        gbc.writeMem(0x10e7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B5
        gbc.setState(0x1582, 0xfde2, 0xb420, 0x2089, 0xa63a, 0x737a, 0x1, 0x0);
        gbc.writeMem(0x1582, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0x1584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B6
        gbc.setState(0x3af0, 0xe549, 0x37e0, 0x58d9, 0x22cf, 0x3205, 0x1, 0x1);
        gbc.writeMem(0x3af0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe549, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B7
        gbc.setState(0x4156, 0x8251, 0x9970, 0x6e4e, 0xf301, 0xee5d, 0x1, 0x0);
        gbc.writeMem(0x4156, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8251, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02B8
        gbc.setState(0x572d, 0x8cda, 0x3b20, 0x1290, 0x6fd5, 0xece1, 0x1, 0x1);
        gbc.writeMem(0x572d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02B9
        gbc.setState(0xd68a, 0x76bd, 0x2220, 0xc838, 0xa03f, 0xd15c, 0x0, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68a));
        EXPECT(0x7a, gbc.readMem(0xd68b));
        // CB 7A 02BA
        gbc.setState(0xac44, 0x94c4, 0x6f40, 0x34a3, 0xb300, 0x1eee, 0x1, 0x0);
        gbc.writeMem(0xac44, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0xac46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac44));
        EXPECT(0x7a, gbc.readMem(0xac45));
        // CB 7A 02BB
        gbc.setState(0xb502, 0xb8f9, 0xfab0, 0xb48a, 0x693e, 0x9899, 0x0, 0x0);
        gbc.writeMem(0xb502, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0x7a, gbc.readMem(0xb503));
        // CB 7A 02BD
        gbc.setState(0x3cd7, 0xdb77, 0x610, 0xee4f, 0xa9bd, 0xd476, 0x1, 0x0);
        gbc.writeMem(0x3cd7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdb77, gbc.sp());
        EXPECT(0x3cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02BF
        gbc.setState(0x778a, 0x5b31, 0x2050, 0x1bf4, 0x27fc, 0x678a, 0x1, 0x0);
        gbc.writeMem(0x778a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x778c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C0
        gbc.setState(0x27c3, 0x907c, 0xb110, 0xb7b7, 0x1c40, 0x7ad, 0x0, 0x0);
        gbc.writeMem(0x27c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x907c, gbc.sp());
        EXPECT(0x27c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C1
        gbc.setState(0x5411, 0x4945, 0x5600, 0xdd56, 0xf63a, 0xe8ad, 0x1, 0x1);
        gbc.writeMem(0x5411, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4945, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02C2
        gbc.setState(0x12dd, 0xd53e, 0xb270, 0x65e5, 0x92b4, 0xf058, 0x1, 0x1);
        gbc.writeMem(0x12dd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x12df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C3
        gbc.setState(0x4211, 0x3335, 0xbe90, 0xe126, 0xbcb7, 0xd868, 0x1, 0x0);
        gbc.writeMem(0x4211, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0x4213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C4
        gbc.setState(0x753e, 0xc0c8, 0x7490, 0xfce6, 0x6cbc, 0x2d0a, 0x0, 0x0);
        gbc.writeMem(0x753e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C5
        gbc.setState(0x42a7, 0x67a5, 0x8350, 0x2622, 0x76ed, 0xb12, 0x0, 0x0);
        gbc.writeMem(0x42a7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x42a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C6
        gbc.setState(0x8cf2, 0xae27, 0xc150, 0x1b49, 0x8b26, 0x292a, 0x0, 0x1);
        gbc.writeMem(0x8cf2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0x8cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf2));
        EXPECT(0x7a, gbc.readMem(0x8cf3));
        // CB 7A 02C7
        gbc.setState(0x1608, 0xee6d, 0x36d0, 0x9537, 0xfd34, 0x270a, 0x0, 0x0);
        gbc.writeMem(0x1608, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0x160a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02C8
        gbc.setState(0x78c9, 0x6cdb, 0x34c0, 0xdbcb, 0x3a73, 0x5dcb, 0x0, 0x0);
        gbc.writeMem(0x78c9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02CA
        gbc.setState(0xd7c8, 0xf918, 0x5f10, 0xdef4, 0x9584, 0xb5e, 0x0, 0x1);
        gbc.writeMem(0xd7c8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf918, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c8));
        EXPECT(0x7a, gbc.readMem(0xd7c9));
        // CB 7A 02CB
        gbc.setState(0xaf7c, 0xfdd1, 0x61a0, 0x102a, 0x27a6, 0x2aa0, 0x0, 0x1);
        gbc.writeMem(0xaf7c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfdd1, gbc.sp());
        EXPECT(0xaf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7c));
        EXPECT(0x7a, gbc.readMem(0xaf7d));
        // CB 7A 02CC
        gbc.setState(0xf57, 0x2716, 0x2a50, 0x8fa1, 0x20e8, 0xbe2f, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02CD
        gbc.setState(0x1dd9, 0x4e8f, 0xa3b0, 0x1bc5, 0x849a, 0x41b5, 0x1, 0x0);
        gbc.writeMem(0x1dd9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4e8f, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02CE
        gbc.setState(0xe670, 0xf9cb, 0xfe80, 0xa40c, 0xcf46, 0xe1c9, 0x0, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf9cb, gbc.sp());
        EXPECT(0xe672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe670));
        EXPECT(0x7a, gbc.readMem(0xe671));
        // CB 7A 02CF
        gbc.setState(0x56d, 0x9ed1, 0x10d0, 0x88d9, 0xe751, 0x6c0f, 0x1, 0x1);
        gbc.writeMem(0x56d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02D0
        gbc.setState(0x20b3, 0xd64c, 0xc1e0, 0x8a4, 0x3069, 0xc813, 0x0, 0x0);
        gbc.writeMem(0x20b3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd64c, gbc.sp());
        EXPECT(0x20b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02D1
        gbc.setState(0xb9a7, 0x3abf, 0x8710, 0x7cfd, 0x267e, 0x8ad2, 0x1, 0x0);
        gbc.writeMem(0xb9a7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0xb9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a7));
        EXPECT(0x7a, gbc.readMem(0xb9a8));
        // CB 7A 02D2
        gbc.setState(0xd545, 0x483a, 0xef20, 0xc95a, 0x814f, 0xf404, 0x1, 0x1);
        gbc.writeMem(0xd545, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0xd547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd545));
        EXPECT(0x7a, gbc.readMem(0xd546));
        // CB 7A 02D3
        gbc.setState(0x24bd, 0x23bc, 0xed10, 0x7752, 0xf7a, 0xeacf, 0x0, 0x1);
        gbc.writeMem(0x24bd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x23bc, gbc.sp());
        EXPECT(0x24bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02D4
        gbc.setState(0x5928, 0x9f60, 0xc840, 0xdbef, 0x7502, 0x1676, 0x1, 0x1);
        gbc.writeMem(0x5928, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9f60, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02D5
        gbc.setState(0x5b4d, 0x9c1c, 0x25b0, 0xbd65, 0xd2b, 0x9b84, 0x1, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9c1c, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02D6
        gbc.setState(0x5970, 0x3099, 0xf060, 0xa2d, 0xd020, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x5970, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3099, gbc.sp());
        EXPECT(0x5972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02D7
        gbc.setState(0xbda2, 0x871d, 0xfc80, 0x4b6f, 0xf7f1, 0xce73, 0x0, 0x1);
        gbc.writeMem(0xbda2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda2));
        EXPECT(0x7a, gbc.readMem(0xbda3));
        // CB 7A 02D8
        gbc.setState(0x3f59, 0x64d7, 0xd5f0, 0x669f, 0xffe3, 0x8963, 0x1, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02D9
        gbc.setState(0xa09, 0x44e8, 0xe4c0, 0xb358, 0xb956, 0x5d20, 0x0, 0x1);
        gbc.writeMem(0xa09, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02DA
        gbc.setState(0x4651, 0x9253, 0x1a10, 0x705d, 0x4afd, 0x171b, 0x1, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9253, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02DB
        gbc.setState(0x6f92, 0x5244, 0x54e0, 0x96e6, 0x247c, 0x82db, 0x1, 0x0);
        gbc.writeMem(0x6f92, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5244, gbc.sp());
        EXPECT(0x6f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02DC
        gbc.setState(0xd674, 0x2dd3, 0x5890, 0x4a21, 0x9df8, 0xc9d8, 0x1, 0x0);
        gbc.writeMem(0xd674, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2dd3, gbc.sp());
        EXPECT(0xd676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd674));
        EXPECT(0x7a, gbc.readMem(0xd675));
        // CB 7A 02DD
        gbc.setState(0xeccf, 0xe4ae, 0x9400, 0xcfe0, 0xcb22, 0x77a3, 0x1, 0x1);
        gbc.writeMem(0xeccf, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe4ae, gbc.sp());
        EXPECT(0xecd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccf));
        EXPECT(0x7a, gbc.readMem(0xecd0));
        // CB 7A 02DE
        gbc.setState(0x3c1b, 0x9d8a, 0x6e0, 0xfabd, 0xf18c, 0x813c, 0x1, 0x1);
        gbc.writeMem(0x3c1b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9d8a, gbc.sp());
        EXPECT(0x3c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02DF
        gbc.setState(0x25be, 0xf259, 0x6900, 0x17c5, 0x9feb, 0xb0b2, 0x0, 0x0);
        gbc.writeMem(0x25be, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E0
        gbc.setState(0x3b2c, 0x2aac, 0x36e0, 0x8971, 0x565e, 0xe446, 0x1, 0x0);
        gbc.writeMem(0x3b2c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0x3b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E1
        gbc.setState(0x2ce3, 0x51b9, 0xc2c0, 0xf792, 0x687b, 0x9029, 0x0, 0x0);
        gbc.writeMem(0x2ce3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51b9, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E2
        gbc.setState(0x6fb9, 0xaa47, 0x4b60, 0xff6a, 0x5c6f, 0x91d1, 0x0, 0x1);
        gbc.writeMem(0x6fb9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa47, gbc.sp());
        EXPECT(0x6fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E3
        gbc.setState(0x204f, 0x3437, 0xd580, 0xc948, 0x46f4, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x204f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3437, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E4
        gbc.setState(0xcb5f, 0x104, 0x38a0, 0x2a94, 0x9047, 0x1e8a, 0x0, 0x0);
        gbc.writeMem(0xcb5f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x104, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5f));
        EXPECT(0x7a, gbc.readMem(0xcb60));
        // CB 7A 02E5
        gbc.setState(0x930f, 0x38ee, 0x16b0, 0x8bb5, 0x3ce0, 0xfd28, 0x1, 0x1);
        gbc.writeMem(0x930f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x38ee, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930f));
        EXPECT(0x7a, gbc.readMem(0x9310));
        // CB 7A 02E6
        gbc.setState(0x7fce, 0x68a9, 0x3180, 0xbe51, 0x303b, 0x46d1, 0x1, 0x0);
        gbc.writeMem(0x7fce, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x68a9, gbc.sp());
        EXPECT(0x7fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E7
        gbc.setState(0x206a, 0xf48a, 0x9f80, 0x49a2, 0x4071, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0x206a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0x206c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02E8
        gbc.setState(0x9487, 0xf2b5, 0xded0, 0x7b18, 0x709, 0xfda6, 0x1, 0x0);
        gbc.writeMem(0x9487, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf2b5, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9487));
        EXPECT(0x7a, gbc.readMem(0x9488));
        // CB 7A 02E9
        gbc.setState(0xc2af, 0xc472, 0x54b0, 0x5373, 0x517, 0xc556, 0x0, 0x0);
        gbc.writeMem(0xc2af, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc472, gbc.sp());
        EXPECT(0xc2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2af));
        EXPECT(0x7a, gbc.readMem(0xc2b0));
        // CB 7A 02EA
        gbc.setState(0xcd8d, 0x32a3, 0xa2a0, 0x159b, 0x7f4d, 0xbfbb, 0x1, 0x1);
        gbc.writeMem(0xcd8d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x32a3, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8d));
        EXPECT(0x7a, gbc.readMem(0xcd8e));
        // CB 7A 02EC
        gbc.setState(0x56c5, 0xae17, 0x8f0, 0x8483, 0x23c0, 0x3d2a, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xae17, gbc.sp());
        EXPECT(0x56c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02ED
        gbc.setState(0x7b98, 0xf947, 0xe420, 0x72e6, 0xe4ae, 0x1472, 0x1, 0x1);
        gbc.writeMem(0x7b98, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02EE
        gbc.setState(0x64a5, 0x7cfb, 0x1360, 0xfc08, 0xf38e, 0xab26, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7cfb, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02EF
        gbc.setState(0xdc91, 0xd77a, 0x4ac0, 0x5853, 0x2b22, 0x7e11, 0x1, 0x0);
        gbc.writeMem(0xdc91, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0xdc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc91));
        EXPECT(0x7a, gbc.readMem(0xdc92));
        // CB 7A 02F0
        gbc.setState(0x90cb, 0x2c2d, 0x3770, 0x8423, 0x44ae, 0x1325, 0x1, 0x0);
        gbc.writeMem(0x90cb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x90cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cb));
        EXPECT(0x7a, gbc.readMem(0x90cc));
        // CB 7A 02F1
        gbc.setState(0xc6a3, 0x7b17, 0x2c50, 0xf3df, 0xff8, 0x3cdc, 0x1, 0x0);
        gbc.writeMem(0xc6a3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a3));
        EXPECT(0x7a, gbc.readMem(0xc6a4));
        // CB 7A 02F2
        gbc.setState(0x251, 0x46ce, 0x5160, 0x7b92, 0xb625, 0xeb95, 0x0, 0x1);
        gbc.writeMem(0x251, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02F3
        gbc.setState(0x2667, 0x3187, 0xfa10, 0xdbf4, 0xa1b, 0xbdc4, 0x1, 0x0);
        gbc.writeMem(0x2667, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0x2669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02F4
        gbc.setState(0xe188, 0xdfca, 0x6ba0, 0xb515, 0xc8ff, 0xfc90, 0x1, 0x0);
        gbc.writeMem(0xe188, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdfca, gbc.sp());
        EXPECT(0xe18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe188));
        EXPECT(0x7a, gbc.readMem(0xe189));
        // CB 7A 02F5
        gbc.setState(0x8488, 0x9170, 0x4ad0, 0x2d0c, 0x8d27, 0x9fcf, 0x1, 0x1);
        gbc.writeMem(0x8488, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9170, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8488));
        EXPECT(0x7a, gbc.readMem(0x8489));
        // CB 7A 02F6
        gbc.setState(0xd891, 0xeb26, 0x4060, 0xbf9e, 0xfdbf, 0x368e, 0x1, 0x1);
        gbc.writeMem(0xd891, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeb26, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd891));
        EXPECT(0x7a, gbc.readMem(0xd892));
        // CB 7A 02F7
        gbc.setState(0xc0c8, 0x1d5c, 0x1e80, 0xcb36, 0xd1a8, 0x697, 0x1, 0x0);
        gbc.writeMem(0xc0c8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0xc0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c8));
        EXPECT(0x7a, gbc.readMem(0xc0c9));
        // CB 7A 02F8
        gbc.setState(0x2d47, 0x2400, 0x66b0, 0x9288, 0x27d, 0x3d66, 0x0, 0x0);
        gbc.writeMem(0x2d47, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0x2d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02FA
        gbc.setState(0x5b85, 0xf612, 0xcb20, 0x11ad, 0x834f, 0x110a, 0x1, 0x1);
        gbc.writeMem(0x5b85, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf612, gbc.sp());
        EXPECT(0x5b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02FB
        gbc.setState(0x9275, 0x98ed, 0xba30, 0xfc2a, 0x9eea, 0x6489, 0x0, 0x0);
        gbc.writeMem(0x9275, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9275));
        EXPECT(0x7a, gbc.readMem(0x9276));
        // CB 7A 02FC
        gbc.setState(0x316d, 0xeb7, 0x6970, 0x8463, 0x997c, 0x522, 0x0, 0x0);
        gbc.writeMem(0x316d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeb7, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 02FD
        gbc.setState(0x508f, 0xb526, 0xf340, 0xe57d, 0xdae5, 0x7cc6, 0x1, 0x1);
        gbc.writeMem(0x508f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb526, gbc.sp());
        EXPECT(0x5091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 02FE
        gbc.setState(0xb498, 0x28cb, 0x8b60, 0x7566, 0x1844, 0x6e58, 0x0, 0x0);
        gbc.writeMem(0xb498, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x28cb, gbc.sp());
        EXPECT(0xb49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb498));
        EXPECT(0x7a, gbc.readMem(0xb499));
        // CB 7A 02FF
        gbc.setState(0xb1e3, 0x444d, 0xfd40, 0x7fec, 0xb176, 0x7d95, 0x0, 0x1);
        gbc.writeMem(0xb1e3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x444d, gbc.sp());
        EXPECT(0xb1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e3));
        EXPECT(0x7a, gbc.readMem(0xb1e4));
        // CB 7A 0300
        gbc.setState(0x9a08, 0x827d, 0x8490, 0x65ba, 0xa089, 0xbb33, 0x0, 0x0);
        gbc.writeMem(0x9a08, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x827d, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a08));
        EXPECT(0x7a, gbc.readMem(0x9a09));
        // CB 7A 0301
        gbc.setState(0x48a4, 0x4c01, 0x7a10, 0x1ea8, 0x627a, 0x3cbc, 0x1, 0x0);
        gbc.writeMem(0x48a4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4c01, gbc.sp());
        EXPECT(0x48a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0302
        gbc.setState(0xa21a, 0xa46c, 0x9c90, 0x11b3, 0xfa4f, 0x2050, 0x1, 0x0);
        gbc.writeMem(0xa21a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0xa21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21a));
        EXPECT(0x7a, gbc.readMem(0xa21b));
        // CB 7A 0303
        gbc.setState(0xd1c5, 0xfe90, 0x9570, 0xa878, 0x853e, 0x5831, 0x0, 0x1);
        gbc.writeMem(0xd1c5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfe90, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c5));
        EXPECT(0x7a, gbc.readMem(0xd1c6));
        // CB 7A 0304
        gbc.setState(0x7eb7, 0xa3d0, 0x42c0, 0x72c3, 0xc7b8, 0xf568, 0x0, 0x1);
        gbc.writeMem(0x7eb7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa3d0, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0305
        gbc.setState(0xa16f, 0x7395, 0xf900, 0xbaf9, 0xeea4, 0x51ed, 0x1, 0x0);
        gbc.writeMem(0xa16f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16f));
        EXPECT(0x7a, gbc.readMem(0xa170));
        // CB 7A 0306
        gbc.setState(0x76cc, 0xb1cd, 0x9ce0, 0x21e7, 0xdc42, 0xa3d2, 0x1, 0x0);
        gbc.writeMem(0x76cc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb1cd, gbc.sp());
        EXPECT(0x76ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0307
        gbc.setState(0xbb17, 0x4cf, 0x77c0, 0xdd29, 0xc2cc, 0x113c, 0x1, 0x0);
        gbc.writeMem(0xbb17, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4cf, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb17));
        EXPECT(0x7a, gbc.readMem(0xbb18));
        // CB 7A 0308
        gbc.setState(0x85c4, 0x461a, 0x7780, 0x2348, 0x8f1d, 0xfabb, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0x85c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c4));
        EXPECT(0x7a, gbc.readMem(0x85c5));
        // CB 7A 0309
        gbc.setState(0x621b, 0xce5e, 0x9320, 0x29ad, 0x2651, 0xb0e2, 0x0, 0x0);
        gbc.writeMem(0x621b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x621d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 030A
        gbc.setState(0x3038, 0x245f, 0xc690, 0xd8f2, 0xc85c, 0x84de, 0x1, 0x1);
        gbc.writeMem(0x3038, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 030B
        gbc.setState(0x2a56, 0x12bf, 0x5020, 0x5559, 0xb66d, 0xe7f7, 0x0, 0x1);
        gbc.writeMem(0x2a56, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12bf, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 030C
        gbc.setState(0x312, 0xb4f2, 0x3650, 0x5731, 0x68f3, 0x465b, 0x0, 0x1);
        gbc.writeMem(0x312, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4f2, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 030E
        gbc.setState(0xeeff, 0xc81f, 0x1d30, 0x9bc, 0xc711, 0x8c40, 0x1, 0x0);
        gbc.writeMem(0xeeff, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc81f, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x7a, gbc.readMem(0xef00));
        // CB 7A 030F
        gbc.setState(0xc317, 0xbddc, 0x3820, 0x9537, 0x8936, 0x31c4, 0x1, 0x0);
        gbc.writeMem(0xc317, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc317));
        EXPECT(0x7a, gbc.readMem(0xc318));
        // CB 7A 0310
        gbc.setState(0x83c3, 0xc63a, 0xf630, 0x9a05, 0xf2db, 0x1a6f, 0x0, 0x1);
        gbc.writeMem(0x83c3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c3));
        EXPECT(0x7a, gbc.readMem(0x83c4));
        // CB 7A 0311
        gbc.setState(0x3a3f, 0x887f, 0xb3e0, 0xf8d2, 0xd725, 0x4798, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x887f, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0312
        gbc.setState(0x49ac, 0x1d12, 0xfe20, 0x3470, 0x5843, 0x3486, 0x1, 0x0);
        gbc.writeMem(0x49ac, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d12, gbc.sp());
        EXPECT(0x49ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0313
        gbc.setState(0x93a9, 0x4c42, 0x79d0, 0x2476, 0x15a8, 0xe0a, 0x1, 0x1);
        gbc.writeMem(0x93a9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a9));
        EXPECT(0x7a, gbc.readMem(0x93aa));
        // CB 7A 0314
        gbc.setState(0xbaf7, 0x26a5, 0x9f00, 0x6f20, 0x78b3, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0xbaf7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x26a5, gbc.sp());
        EXPECT(0xbaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf7));
        EXPECT(0x7a, gbc.readMem(0xbaf8));
        // CB 7A 0315
        gbc.setState(0xba56, 0xe175, 0xf710, 0x165a, 0x1d15, 0x53c6, 0x1, 0x1);
        gbc.writeMem(0xba56, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba56));
        EXPECT(0x7a, gbc.readMem(0xba57));
        // CB 7A 0316
        gbc.setState(0x2f7d, 0x9ee5, 0xdf40, 0x7965, 0x78ec, 0xea64, 0x0, 0x1);
        gbc.writeMem(0x2f7d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ee5, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0317
        gbc.setState(0x9c59, 0x2407, 0xed90, 0x1808, 0xccab, 0x149c, 0x0, 0x0);
        gbc.writeMem(0x9c59, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x9c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c59));
        EXPECT(0x7a, gbc.readMem(0x9c5a));
        // CB 7A 0318
        gbc.setState(0x9b76, 0x1d9a, 0xe380, 0x8a2, 0x42b4, 0xb981, 0x1, 0x0);
        gbc.writeMem(0x9b76, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1d9a, gbc.sp());
        EXPECT(0x9b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b76));
        EXPECT(0x7a, gbc.readMem(0x9b77));
        // CB 7A 0319
        gbc.setState(0x9d06, 0xecde, 0x6380, 0x6a90, 0x2ea3, 0xbc02, 0x0, 0x0);
        gbc.writeMem(0x9d06, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xecde, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d06));
        EXPECT(0x7a, gbc.readMem(0x9d07));
        // CB 7A 031A
        gbc.setState(0x7bde, 0x8d88, 0xea20, 0x195a, 0x41d3, 0xca3d, 0x0, 0x0);
        gbc.writeMem(0x7bde, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8d88, gbc.sp());
        EXPECT(0x7be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 031B
        gbc.setState(0x93, 0x595e, 0xb10, 0xa58c, 0xa37, 0xf00a, 0x0, 0x0);
        gbc.writeMem(0x93, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x595e, gbc.sp());
        EXPECT(0x95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 031C
        gbc.setState(0x58df, 0x164f, 0xc210, 0x578c, 0x6dff, 0xffe4, 0x0, 0x1);
        gbc.writeMem(0x58df, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 031D
        gbc.setState(0x685f, 0x2a76, 0x9140, 0xd0b4, 0x2e40, 0xe396, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 031E
        gbc.setState(0x1d1f, 0xe222, 0xe710, 0xe9dd, 0x56d3, 0x8632, 0x1, 0x0);
        gbc.writeMem(0x1d1f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe222, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 031F
        gbc.setState(0xa438, 0x665d, 0x9a0, 0xc057, 0xbb98, 0xcece, 0x0, 0x1);
        gbc.writeMem(0xa438, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x665d, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa438));
        EXPECT(0x7a, gbc.readMem(0xa439));
        // CB 7A 0320
        gbc.setState(0xe2e1, 0x82f, 0x1410, 0x59b5, 0x4cba, 0x10ca, 0x1, 0x0);
        gbc.writeMem(0xe2e1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e1));
        EXPECT(0x7a, gbc.readMem(0xe2e2));
        // CB 7A 0321
        gbc.setState(0x33f7, 0x868c, 0x4190, 0x2bed, 0xc193, 0x1b70, 0x1, 0x1);
        gbc.writeMem(0x33f7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x868c, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0322
        gbc.setState(0xb297, 0x3d80, 0x9c30, 0x8b2b, 0x6bb8, 0x6e80, 0x0, 0x1);
        gbc.writeMem(0xb297, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d80, gbc.sp());
        EXPECT(0xb299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb297));
        EXPECT(0x7a, gbc.readMem(0xb298));
        // CB 7A 0323
        gbc.setState(0xd03a, 0x3af8, 0x1990, 0x48a0, 0xee47, 0x7de5, 0x1, 0x1);
        gbc.writeMem(0xd03a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0xd03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03a));
        EXPECT(0x7a, gbc.readMem(0xd03b));
        // CB 7A 0324
        gbc.setState(0xd927, 0xb082, 0x3bf0, 0x887, 0x4161, 0x994d, 0x1, 0x1);
        gbc.writeMem(0xd927, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb082, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd927));
        EXPECT(0x7a, gbc.readMem(0xd928));
        // CB 7A 0325
        gbc.setState(0x510a, 0x9fed, 0xc9e0, 0xa4c7, 0xd8f, 0x6657, 0x1, 0x1);
        gbc.writeMem(0x510a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9fed, gbc.sp());
        EXPECT(0x510c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0326
        gbc.setState(0x1cd6, 0x6724, 0x1e80, 0xc95f, 0x3c63, 0x2d05, 0x1, 0x0);
        gbc.writeMem(0x1cd6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0x1cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0327
        gbc.setState(0xe85f, 0xc66f, 0x9ba0, 0x5de1, 0xbd37, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0xe85f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0xe861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85f));
        EXPECT(0x7a, gbc.readMem(0xe860));
        // CB 7A 0328
        gbc.setState(0xbe71, 0x17af, 0x91d0, 0xe0e, 0xbe90, 0x8858, 0x0, 0x0);
        gbc.writeMem(0xbe71, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0xbe73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe71));
        EXPECT(0x7a, gbc.readMem(0xbe72));
        // CB 7A 0329
        gbc.setState(0xcace, 0x5cec, 0xe340, 0x9263, 0x21, 0x792d, 0x0, 0x0);
        gbc.writeMem(0xcace, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5cec, gbc.sp());
        EXPECT(0xcad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcace));
        EXPECT(0x7a, gbc.readMem(0xcacf));
        // CB 7A 032C
        gbc.setState(0xe9fe, 0xa1dc, 0xfe10, 0xd49a, 0x1654, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0xe9fe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0xea00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fe));
        EXPECT(0x7a, gbc.readMem(0xe9ff));
        // CB 7A 032D
        gbc.setState(0x6b1, 0x40be, 0x60f0, 0xfa7f, 0x2b1e, 0xf2bf, 0x0, 0x1);
        gbc.writeMem(0x6b1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 032E
        gbc.setState(0xb1a5, 0xc507, 0x1010, 0xa59d, 0x53ab, 0x135e, 0x1, 0x0);
        gbc.writeMem(0xb1a5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc507, gbc.sp());
        EXPECT(0xb1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a5));
        EXPECT(0x7a, gbc.readMem(0xb1a6));
        // CB 7A 032F
        gbc.setState(0x71b0, 0x3c7a, 0x13f0, 0x4040, 0x3013, 0x5b0b, 0x1, 0x0);
        gbc.writeMem(0x71b0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3c7a, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0331
        gbc.setState(0xd656, 0xe39e, 0x3540, 0x6e1a, 0x8607, 0xd38c, 0x1, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe39e, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd656));
        EXPECT(0x7a, gbc.readMem(0xd657));
        // CB 7A 0332
        gbc.setState(0x3222, 0xb9ae, 0xce00, 0xa5cd, 0x9a8f, 0x87c4, 0x1, 0x1);
        gbc.writeMem(0x3222, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb9ae, gbc.sp());
        EXPECT(0x3224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0334
        gbc.setState(0x4f70, 0xf67, 0x3d40, 0x650, 0x94ab, 0x450b, 0x0, 0x0);
        gbc.writeMem(0x4f70, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0335
        gbc.setState(0x1eac, 0x233, 0x9590, 0xe922, 0xb629, 0xe700, 0x0, 0x1);
        gbc.writeMem(0x1eac, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x233, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0336
        gbc.setState(0x603f, 0xdd6, 0x2070, 0x7b41, 0xabf0, 0x32cd, 0x1, 0x0);
        gbc.writeMem(0x603f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdd6, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0337
        gbc.setState(0xda1c, 0xcc88, 0x72a0, 0xe840, 0xb97a, 0x928d, 0x1, 0x0);
        gbc.writeMem(0xda1c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1c));
        EXPECT(0x7a, gbc.readMem(0xda1d));
        // CB 7A 0338
        gbc.setState(0x123c, 0xb4d7, 0x32e0, 0xb244, 0xd4f8, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0x123c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb4d7, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0339
        gbc.setState(0x60fe, 0x4736, 0x5870, 0x4408, 0xdc5a, 0x6029, 0x1, 0x0);
        gbc.writeMem(0x60fe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0x6100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 033A
        gbc.setState(0x7344, 0xf3a5, 0x410, 0x7890, 0xe9af, 0x2cb6, 0x1, 0x1);
        gbc.writeMem(0x7344, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf3a5, gbc.sp());
        EXPECT(0x7346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 033B
        gbc.setState(0x934, 0x78c7, 0xb40, 0x56da, 0x7b11, 0xc85, 0x0, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x78c7, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 033C
        gbc.setState(0x663a, 0xb063, 0xe9f0, 0x502b, 0x57fa, 0xc38c, 0x0, 0x1);
        gbc.writeMem(0x663a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb063, gbc.sp());
        EXPECT(0x663c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 033E
        gbc.setState(0x2cee, 0xf35d, 0xbe0, 0x7c83, 0x184e, 0x3b05, 0x0, 0x0);
        gbc.writeMem(0x2cee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf35d, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 033F
        gbc.setState(0x83d9, 0xeda2, 0x5340, 0xa873, 0x13d5, 0xd10e, 0x0, 0x1);
        gbc.writeMem(0x83d9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeda2, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d9));
        EXPECT(0x7a, gbc.readMem(0x83da));
        // CB 7A 0340
        gbc.setState(0x56a1, 0xe66f, 0x86a0, 0x6e8f, 0x7f86, 0xb004, 0x1, 0x1);
        gbc.writeMem(0x56a1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0341
        gbc.setState(0x4f7e, 0x6444, 0xe140, 0x8e08, 0xde86, 0xd0ac, 0x0, 0x0);
        gbc.writeMem(0x4f7e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6444, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0342
        gbc.setState(0x1211, 0x76b6, 0x1b00, 0xfcce, 0xc2a, 0x1c8e, 0x0, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x76b6, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0343
        gbc.setState(0x183b, 0x2b0d, 0x7850, 0x6c65, 0x5fbe, 0xc9cc, 0x0, 0x1);
        gbc.writeMem(0x183b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2b0d, gbc.sp());
        EXPECT(0x183d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0344
        gbc.setState(0xbe15, 0x387f, 0xf770, 0x2638, 0xc464, 0x1a6c, 0x0, 0x1);
        gbc.writeMem(0xbe15, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x387f, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe15));
        EXPECT(0x7a, gbc.readMem(0xbe16));
        // CB 7A 0345
        gbc.setState(0xacf6, 0x7f4d, 0x2c10, 0xa46b, 0x6eb2, 0xe85f, 0x0, 0x1);
        gbc.writeMem(0xacf6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7f4d, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0x7a, gbc.readMem(0xacf7));
        // CB 7A 0346
        gbc.setState(0x4391, 0xe9f4, 0x5c00, 0x8041, 0x2dc5, 0x3137, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0347
        gbc.setState(0x633e, 0xdc0c, 0xb690, 0xd144, 0xd5d1, 0xa7bf, 0x1, 0x1);
        gbc.writeMem(0x633e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0x6340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0348
        gbc.setState(0x35bd, 0x7f6, 0x90a0, 0xf930, 0xd9ba, 0x6bd6, 0x1, 0x1);
        gbc.writeMem(0x35bd, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7f6, gbc.sp());
        EXPECT(0x35bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0349
        gbc.setState(0xecad, 0x900d, 0x5140, 0xc289, 0x3363, 0xa364, 0x1, 0x0);
        gbc.writeMem(0xecad, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x900d, gbc.sp());
        EXPECT(0xecaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecad));
        EXPECT(0x7a, gbc.readMem(0xecae));
        // CB 7A 034A
        gbc.setState(0x4e60, 0xb573, 0xaa70, 0x5f69, 0xa8f, 0xf9f5, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0x4e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 034B
        gbc.setState(0x990f, 0x2b4, 0x9640, 0x7422, 0x6aa9, 0x52ce, 0x1, 0x1);
        gbc.writeMem(0x990f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2b4, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990f));
        EXPECT(0x7a, gbc.readMem(0x9910));
        // CB 7A 034C
        gbc.setState(0x9a41, 0x7685, 0xd760, 0x69, 0xd930, 0xb62f, 0x0, 0x0);
        gbc.writeMem(0x9a41, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a41));
        EXPECT(0x7a, gbc.readMem(0x9a42));
        // CB 7A 034D
        gbc.setState(0xd17d, 0xcc50, 0x3b90, 0xb85d, 0x74f3, 0x315e, 0x0, 0x1);
        gbc.writeMem(0xd17d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcc50, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17d));
        EXPECT(0x7a, gbc.readMem(0xd17e));
        // CB 7A 034E
        gbc.setState(0x2, 0xaa53, 0xe20, 0x4aed, 0xa9fd, 0x5d59, 0x0, 0x1);
        gbc.writeMem(0x2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa53, gbc.sp());
        EXPECT(0x4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0350
        gbc.setState(0x7289, 0xec7f, 0xb340, 0x70ba, 0x9bd, 0x508b, 0x1, 0x0);
        gbc.writeMem(0x7289, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0x728b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0351
        gbc.setState(0x60c9, 0xa531, 0xa80, 0xf90, 0x6833, 0xeebf, 0x0, 0x1);
        gbc.writeMem(0x60c9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa531, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0352
        gbc.setState(0xdde5, 0xd57, 0x9580, 0x87f2, 0x15d2, 0x7bd3, 0x1, 0x0);
        gbc.writeMem(0xdde5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd57, gbc.sp());
        EXPECT(0xdde7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde5));
        EXPECT(0x7a, gbc.readMem(0xdde6));
        // CB 7A 0353
        gbc.setState(0xbe5c, 0x2067, 0x8480, 0x5540, 0x8c0f, 0x50bf, 0x1, 0x0);
        gbc.writeMem(0xbe5c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2067, gbc.sp());
        EXPECT(0xbe5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5c));
        EXPECT(0x7a, gbc.readMem(0xbe5d));
        // CB 7A 0354
        gbc.setState(0x68a, 0xa152, 0xdfe0, 0x7218, 0x8be0, 0x90c, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0356
        gbc.setState(0x90b8, 0x3da7, 0x8fc0, 0x13e5, 0x8c54, 0xc1e, 0x1, 0x0);
        gbc.writeMem(0x90b8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3da7, gbc.sp());
        EXPECT(0x90ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b8));
        EXPECT(0x7a, gbc.readMem(0x90b9));
        // CB 7A 0357
        gbc.setState(0x14cb, 0xce04, 0x88b0, 0x79bc, 0xb167, 0x9038, 0x1, 0x1);
        gbc.writeMem(0x14cb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0358
        gbc.setState(0x1d7a, 0xe0c8, 0xc520, 0x811e, 0xe52, 0x3558, 0x0, 0x1);
        gbc.writeMem(0x1d7a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe0c8, gbc.sp());
        EXPECT(0x1d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0359
        gbc.setState(0x60f7, 0xb22a, 0xeb60, 0x9ffe, 0xfb33, 0x777f, 0x1, 0x1);
        gbc.writeMem(0x60f7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x60f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 035A
        gbc.setState(0xc896, 0xa73a, 0x57c0, 0x9397, 0xd260, 0x97d2, 0x1, 0x1);
        gbc.writeMem(0xc896, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa73a, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc896));
        EXPECT(0x7a, gbc.readMem(0xc897));
        // CB 7A 035B
        gbc.setState(0x3a60, 0x608, 0x8550, 0xabb1, 0x7ad3, 0x2dce, 0x0, 0x1);
        gbc.writeMem(0x3a60, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 035D
        gbc.setState(0x62c8, 0xf91, 0x7830, 0x92ab, 0xc20c, 0x2aff, 0x0, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 035E
        gbc.setState(0x4917, 0x7a7e, 0xbc30, 0x8d67, 0x58f5, 0x8d9b, 0x1, 0x1);
        gbc.writeMem(0x4917, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7a7e, gbc.sp());
        EXPECT(0x4919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 035F
        gbc.setState(0x814, 0xe598, 0x4ad0, 0x4516, 0x154b, 0x16ef, 0x0, 0x0);
        gbc.writeMem(0x814, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0360
        gbc.setState(0x67a4, 0xf622, 0xc0d0, 0x19fe, 0x7efc, 0xf36c, 0x0, 0x1);
        gbc.writeMem(0x67a4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x67a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0361
        gbc.setState(0xbab8, 0x6a9f, 0x5270, 0x7f20, 0x6cb1, 0xe468, 0x1, 0x0);
        gbc.writeMem(0xbab8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a9f, gbc.sp());
        EXPECT(0xbaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab8));
        EXPECT(0x7a, gbc.readMem(0xbab9));
        // CB 7A 0362
        gbc.setState(0x1a53, 0xdf29, 0x2460, 0x692b, 0xccfa, 0x7301, 0x0, 0x1);
        gbc.writeMem(0x1a53, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0x1a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0363
        gbc.setState(0xd1dc, 0x5a3f, 0x1fc0, 0x13, 0x4ab8, 0x7201, 0x0, 0x0);
        gbc.writeMem(0xd1dc, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5a3f, gbc.sp());
        EXPECT(0xd1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1dc));
        EXPECT(0x7a, gbc.readMem(0xd1dd));
        // CB 7A 0364
        gbc.setState(0x2de0, 0x969c, 0x2630, 0xddb8, 0x170c, 0xf8e0, 0x1, 0x0);
        gbc.writeMem(0x2de0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x969c, gbc.sp());
        EXPECT(0x2de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0365
        gbc.setState(0xa8ee, 0x2c56, 0x35a0, 0xbabc, 0x17e8, 0x39ea, 0x1, 0x0);
        gbc.writeMem(0xa8ee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2c56, gbc.sp());
        EXPECT(0xa8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ee));
        EXPECT(0x7a, gbc.readMem(0xa8ef));
        // CB 7A 0366
        gbc.setState(0x988, 0x6a37, 0xf5a0, 0xb884, 0x8c51, 0x1b3e, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6a37, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0368
        gbc.setState(0x7ef5, 0x1357, 0xaa50, 0x4afa, 0xd448, 0xd4, 0x1, 0x0);
        gbc.writeMem(0x7ef5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x7ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0369
        gbc.setState(0x993e, 0x1757, 0xabe0, 0x1178, 0xf9d9, 0x7c08, 0x1, 0x0);
        gbc.writeMem(0x993e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1757, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993e));
        EXPECT(0x7a, gbc.readMem(0x993f));
        // CB 7A 036C
        gbc.setState(0x7783, 0x5910, 0x1830, 0xd7d3, 0xe35d, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0x7783, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 036D
        gbc.setState(0x7538, 0x4917, 0x64c0, 0x8f7d, 0xd9df, 0xbc4e, 0x1, 0x1);
        gbc.writeMem(0x7538, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4917, gbc.sp());
        EXPECT(0x753a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 036E
        gbc.setState(0xe2a, 0xdcce, 0xb790, 0x789, 0xa217, 0xb077, 0x1, 0x0);
        gbc.writeMem(0xe2a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdcce, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 036F
        gbc.setState(0x66e9, 0xea67, 0x5ac0, 0x1e1e, 0x8ecf, 0x8da7, 0x1, 0x1);
        gbc.writeMem(0x66e9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0x66eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0370
        gbc.setState(0xada, 0x82a9, 0xc9e0, 0x9dae, 0xdd73, 0xc860, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x82a9, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0372
        gbc.setState(0xa060, 0x5470, 0x3570, 0xb59f, 0xcc78, 0x1f6e, 0x1, 0x1);
        gbc.writeMem(0xa060, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5470, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa060));
        EXPECT(0x7a, gbc.readMem(0xa061));
        // CB 7A 0373
        gbc.setState(0x6313, 0xe27c, 0x1e70, 0x4a69, 0xbab0, 0x701e, 0x0, 0x0);
        gbc.writeMem(0x6313, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe27c, gbc.sp());
        EXPECT(0x6315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0374
        gbc.setState(0x422e, 0x7228, 0x1a30, 0x2c02, 0xaa6e, 0x67f9, 0x1, 0x0);
        gbc.writeMem(0x422e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7228, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0375
        gbc.setState(0x35a7, 0x9755, 0x99d0, 0x61fb, 0x50c2, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x35a7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9755, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0376
        gbc.setState(0x50f, 0xeed9, 0xef80, 0x516f, 0x816c, 0xf1d5, 0x1, 0x1);
        gbc.writeMem(0x50f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeed9, gbc.sp());
        EXPECT(0x511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0377
        gbc.setState(0x56, 0xf3ca, 0x3740, 0xcbe4, 0x92bf, 0x838b, 0x0, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0378
        gbc.setState(0x497, 0xafb2, 0xdc70, 0x7163, 0xe58a, 0xc921, 0x1, 0x0);
        gbc.writeMem(0x497, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0379
        gbc.setState(0x12c4, 0xa572, 0x86d0, 0x68b0, 0x2ee0, 0xe302, 0x1, 0x0);
        gbc.writeMem(0x12c4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa572, gbc.sp());
        EXPECT(0x12c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 037A
        gbc.setState(0xaf33, 0x9961, 0x2c60, 0xadbc, 0xe07a, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0xaf33, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9961, gbc.sp());
        EXPECT(0xaf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf33));
        EXPECT(0x7a, gbc.readMem(0xaf34));
        // CB 7A 037B
        gbc.setState(0xf39, 0xf2c9, 0xcf0, 0xd5ff, 0xf19c, 0xff57, 0x1, 0x1);
        gbc.writeMem(0xf39, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf2c9, gbc.sp());
        EXPECT(0xf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 037C
        gbc.setState(0xc5de, 0xf70b, 0x9c40, 0xf531, 0xa5a3, 0x98da, 0x1, 0x0);
        gbc.writeMem(0xc5de, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf70b, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5de));
        EXPECT(0x7a, gbc.readMem(0xc5df));
        // CB 7A 037D
        gbc.setState(0xde18, 0x47fd, 0x3340, 0x1081, 0xd672, 0x434f, 0x0, 0x1);
        gbc.writeMem(0xde18, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0xde1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde18));
        EXPECT(0x7a, gbc.readMem(0xde19));
        // CB 7A 037E
        gbc.setState(0xc774, 0x12c, 0x1e50, 0x45be, 0x14ee, 0x2d3b, 0x0, 0x1);
        gbc.writeMem(0xc774, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x12c, gbc.sp());
        EXPECT(0xc776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc774));
        EXPECT(0x7a, gbc.readMem(0xc775));
        // CB 7A 037F
        gbc.setState(0x2850, 0x5b44, 0x28b0, 0x65ac, 0x2c38, 0x336, 0x1, 0x1);
        gbc.writeMem(0x2850, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0381
        gbc.setState(0x8628, 0xc972, 0xd410, 0x8c5c, 0xedfd, 0x6de4, 0x1, 0x0);
        gbc.writeMem(0x8628, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc972, gbc.sp());
        EXPECT(0x862a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8628));
        EXPECT(0x7a, gbc.readMem(0x8629));
        // CB 7A 0382
        gbc.setState(0xe31f, 0x50de, 0x78c0, 0x565b, 0xd4dc, 0xf8c2, 0x0, 0x1);
        gbc.writeMem(0xe31f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0xe321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31f));
        EXPECT(0x7a, gbc.readMem(0xe320));
        // CB 7A 0384
        gbc.setState(0x367a, 0xf15, 0xd080, 0xad53, 0xa1c7, 0xc8c4, 0x1, 0x0);
        gbc.writeMem(0x367a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf15, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0385
        gbc.setState(0xb934, 0x4521, 0xd7d0, 0xcdb6, 0x1da1, 0xbc67, 0x1, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4521, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0x7a, gbc.readMem(0xb935));
        // CB 7A 0386
        gbc.setState(0x31d4, 0xa54f, 0xe30, 0xbb95, 0x5cdd, 0x7940, 0x0, 0x1);
        gbc.writeMem(0x31d4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa54f, gbc.sp());
        EXPECT(0x31d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0387
        gbc.setState(0x2c2f, 0x1ad9, 0xf740, 0x3fea, 0xfda4, 0x928f, 0x1, 0x0);
        gbc.writeMem(0x2c2f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0388
        gbc.setState(0x9323, 0xb4b5, 0xe170, 0x4e6b, 0x7ee0, 0xf1c, 0x1, 0x0);
        gbc.writeMem(0x9323, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9323));
        EXPECT(0x7a, gbc.readMem(0x9324));
        // CB 7A 0389
        gbc.setState(0x90ca, 0xbc06, 0x74a0, 0x31b2, 0xe96f, 0x8582, 0x0, 0x1);
        gbc.writeMem(0x90ca, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbc06, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ca));
        EXPECT(0x7a, gbc.readMem(0x90cb));
        // CB 7A 038A
        gbc.setState(0xe0e4, 0xb00f, 0x59f0, 0x83ad, 0x5a93, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0xe0e4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb00f, gbc.sp());
        EXPECT(0xe0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e4));
        EXPECT(0x7a, gbc.readMem(0xe0e5));
        // CB 7A 038B
        gbc.setState(0x88b9, 0x7273, 0x9e60, 0x6290, 0xe02e, 0xe6d1, 0x0, 0x1);
        gbc.writeMem(0x88b9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7273, gbc.sp());
        EXPECT(0x88bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b9));
        EXPECT(0x7a, gbc.readMem(0x88ba));
        // CB 7A 038C
        gbc.setState(0xdbee, 0xb1d4, 0x1790, 0x4110, 0xb74a, 0xb44d, 0x1, 0x0);
        gbc.writeMem(0xdbee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb1d4, gbc.sp());
        EXPECT(0xdbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbee));
        EXPECT(0x7a, gbc.readMem(0xdbef));
        // CB 7A 038D
        gbc.setState(0x12b4, 0xae4a, 0xd110, 0x95a8, 0x9244, 0x19e0, 0x0, 0x1);
        gbc.writeMem(0x12b4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xae4a, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 038E
        gbc.setState(0xad9c, 0x856d, 0xb7c0, 0x7bb5, 0xc777, 0x69db, 0x1, 0x0);
        gbc.writeMem(0xad9c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0xad9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9c));
        EXPECT(0x7a, gbc.readMem(0xad9d));
        // CB 7A 038F
        gbc.setState(0x9e76, 0x4d6d, 0xa440, 0xba4c, 0x9f41, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0x9e76, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x9e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e76));
        EXPECT(0x7a, gbc.readMem(0x9e77));
        // CB 7A 0390
        gbc.setState(0xc9e6, 0x1b5f, 0x46f0, 0xea91, 0x2319, 0x31b6, 0x0, 0x0);
        gbc.writeMem(0xc9e6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b5f, gbc.sp());
        EXPECT(0xc9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e6));
        EXPECT(0x7a, gbc.readMem(0xc9e7));
        // CB 7A 0391
        gbc.setState(0xe80f, 0x59ea, 0x7320, 0xbb35, 0x5d4e, 0xf665, 0x1, 0x1);
        gbc.writeMem(0xe80f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x59ea, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80f));
        EXPECT(0x7a, gbc.readMem(0xe810));
        // CB 7A 0392
        gbc.setState(0x3686, 0xc98, 0x4350, 0x1d7a, 0x6ba5, 0x792, 0x1, 0x0);
        gbc.writeMem(0x3686, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0393
        gbc.setState(0x7a69, 0xf553, 0x4f70, 0x351a, 0x3626, 0xf46e, 0x1, 0x1);
        gbc.writeMem(0x7a69, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf553, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0394
        gbc.setState(0x83fe, 0xe12e, 0x4410, 0xbe6, 0xf92b, 0xaae4, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0x8400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fe));
        EXPECT(0x7a, gbc.readMem(0x83ff));
        // CB 7A 0395
        gbc.setState(0x23a, 0x76c8, 0x810, 0x980a, 0xa5f4, 0xaf4b, 0x0, 0x1);
        gbc.writeMem(0x23a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x76c8, gbc.sp());
        EXPECT(0x23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 0396
        gbc.setState(0x39d6, 0xdf0f, 0x4200, 0x1d49, 0x5546, 0xd3f0, 0x0, 0x1);
        gbc.writeMem(0x39d6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0x39d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 0397
        gbc.setState(0xeb5f, 0x4231, 0xdd20, 0x570c, 0x5b0, 0x2747, 0x1, 0x0);
        gbc.writeMem(0xeb5f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4231, gbc.sp());
        EXPECT(0xeb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5f));
        EXPECT(0x7a, gbc.readMem(0xeb60));
        // CB 7A 0398
        gbc.setState(0xe79e, 0x945e, 0xe250, 0xd584, 0x6b65, 0x7111, 0x1, 0x1);
        gbc.writeMem(0xe79e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0xe7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79e));
        EXPECT(0x7a, gbc.readMem(0xe79f));
        // CB 7A 0399
        gbc.setState(0x491a, 0xccfc, 0x7d90, 0x7601, 0x8aa4, 0x7f6a, 0x1, 0x1);
        gbc.writeMem(0x491a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0x491c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 039A
        gbc.setState(0x28b3, 0x56a9, 0x4960, 0x7d39, 0x55f0, 0x265d, 0x0, 0x0);
        gbc.writeMem(0x28b3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 039B
        gbc.setState(0xea7c, 0x36, 0xca10, 0x72ce, 0x4cbe, 0x928f, 0x1, 0x0);
        gbc.writeMem(0xea7c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x36, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7c));
        EXPECT(0x7a, gbc.readMem(0xea7d));
        // CB 7A 039C
        gbc.setState(0x1198, 0xfafd, 0x7800, 0xd679, 0xf9b9, 0x4837, 0x0, 0x1);
        gbc.writeMem(0x1198, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfafd, gbc.sp());
        EXPECT(0x119a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 039D
        gbc.setState(0x8399, 0xe301, 0xbdc0, 0x29f1, 0x8fe5, 0x21d6, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe301, gbc.sp());
        EXPECT(0x839b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8399));
        EXPECT(0x7a, gbc.readMem(0x839a));
        // CB 7A 039E
        gbc.setState(0x5c1c, 0x7df0, 0x50f0, 0xd3e1, 0xe9d0, 0x8314, 0x0, 0x0);
        gbc.writeMem(0x5c1c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 039F
        gbc.setState(0xbd4c, 0xe35a, 0xe090, 0x41a6, 0xd966, 0x2407, 0x0, 0x1);
        gbc.writeMem(0xbd4c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe35a, gbc.sp());
        EXPECT(0xbd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4c));
        EXPECT(0x7a, gbc.readMem(0xbd4d));
        // CB 7A 03A0
        gbc.setState(0xb5fa, 0x64fd, 0x63c0, 0x491c, 0x38ab, 0x762a, 0x1, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fa));
        EXPECT(0x7a, gbc.readMem(0xb5fb));
        // CB 7A 03A1
        gbc.setState(0x8e10, 0x7dca, 0xa110, 0x8105, 0x911e, 0x5aae, 0x0, 0x1);
        gbc.writeMem(0x8e10, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0x8e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e10));
        EXPECT(0x7a, gbc.readMem(0x8e11));
        // CB 7A 03A2
        gbc.setState(0x74be, 0x69a9, 0xcb40, 0xfa16, 0xf58b, 0xd170, 0x1, 0x0);
        gbc.writeMem(0x74be, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x69a9, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03A3
        gbc.setState(0xd176, 0x951c, 0xc050, 0x7898, 0xd9df, 0xc001, 0x1, 0x1);
        gbc.writeMem(0xd176, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0xd178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd176));
        EXPECT(0x7a, gbc.readMem(0xd177));
        // CB 7A 03A4
        gbc.setState(0xd800, 0xb956, 0xe240, 0xfb42, 0x7781, 0xf535, 0x0, 0x0);
        gbc.writeMem(0xd800, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb956, gbc.sp());
        EXPECT(0xd802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd800));
        EXPECT(0x7a, gbc.readMem(0xd801));
        // CB 7A 03A5
        gbc.setState(0x6d91, 0x8db6, 0xbb70, 0xd7d9, 0xde27, 0x83a2, 0x1, 0x1);
        gbc.writeMem(0x6d91, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8db6, gbc.sp());
        EXPECT(0x6d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03A6
        gbc.setState(0x5b56, 0xb91e, 0xe30, 0xf257, 0x2332, 0xb020, 0x1, 0x1);
        gbc.writeMem(0x5b56, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb91e, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03A7
        gbc.setState(0x42c5, 0x535c, 0x1960, 0x51a6, 0x7b4c, 0xc90b, 0x1, 0x1);
        gbc.writeMem(0x42c5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03A8
        gbc.setState(0xccf0, 0x5d1a, 0x72e0, 0x90d3, 0xe5e6, 0x318e, 0x0, 0x0);
        gbc.writeMem(0xccf0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5d1a, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf0));
        EXPECT(0x7a, gbc.readMem(0xccf1));
        // CB 7A 03A9
        gbc.setState(0xe322, 0x4200, 0x45d0, 0x1e56, 0xd796, 0x7ef2, 0x1, 0x0);
        gbc.writeMem(0xe322, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0xe324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe322));
        EXPECT(0x7a, gbc.readMem(0xe323));
        // CB 7A 03AA
        gbc.setState(0x1ad2, 0xc9a, 0xb7a0, 0x6c35, 0x3384, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0x1ad2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03AB
        gbc.setState(0xa7c8, 0xe5c2, 0x11f0, 0x1e82, 0x89f6, 0x3ca4, 0x0, 0x1);
        gbc.writeMem(0xa7c8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe5c2, gbc.sp());
        EXPECT(0xa7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c8));
        EXPECT(0x7a, gbc.readMem(0xa7c9));
        // CB 7A 03AC
        gbc.setState(0x55b3, 0x1b72, 0xe680, 0xe925, 0xaf1e, 0xfb4c, 0x0, 0x1);
        gbc.writeMem(0x55b3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03AD
        gbc.setState(0xd72e, 0x910, 0xb650, 0xd28e, 0x83f2, 0x9567, 0x0, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x910, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72e));
        EXPECT(0x7a, gbc.readMem(0xd72f));
        // CB 7A 03AE
        gbc.setState(0xb2f1, 0xd839, 0xeb70, 0xddf4, 0x7a29, 0xdeb6, 0x0, 0x1);
        gbc.writeMem(0xb2f1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd839, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0x7a, gbc.readMem(0xb2f2));
        // CB 7A 03AF
        gbc.setState(0x16b5, 0xbe3b, 0xfd60, 0xeada, 0xa8bb, 0xa38c, 0x1, 0x0);
        gbc.writeMem(0x16b5, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03B0
        gbc.setState(0x85f7, 0x2bc7, 0x2010, 0x875e, 0x6429, 0x9bb, 0x0, 0x0);
        gbc.writeMem(0x85f7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2bc7, gbc.sp());
        EXPECT(0x85f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f7));
        EXPECT(0x7a, gbc.readMem(0x85f8));
        // CB 7A 03B1
        gbc.setState(0xa1df, 0x19c7, 0xf9f0, 0x6301, 0xab20, 0xf415, 0x0, 0x0);
        gbc.writeMem(0xa1df, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x19c7, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1df));
        EXPECT(0x7a, gbc.readMem(0xa1e0));
        // CB 7A 03B2
        gbc.setState(0xe29a, 0x7170, 0x840, 0x7290, 0x5f84, 0xbbb9, 0x1, 0x0);
        gbc.writeMem(0xe29a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7170, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29a));
        EXPECT(0x7a, gbc.readMem(0xe29b));
        // CB 7A 03B3
        gbc.setState(0x33f2, 0x1a46, 0x8bd0, 0x7bdb, 0xd9cf, 0x6bf6, 0x0, 0x0);
        gbc.writeMem(0x33f2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1a46, gbc.sp());
        EXPECT(0x33f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03B4
        gbc.setState(0x7283, 0xf185, 0xf880, 0x38de, 0xbe9, 0xff2a, 0x1, 0x1);
        gbc.writeMem(0x7283, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03B5
        gbc.setState(0xcb4, 0x2f6e, 0x1150, 0xfc89, 0xe451, 0xac04, 0x1, 0x0);
        gbc.writeMem(0xcb4, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2f6e, gbc.sp());
        EXPECT(0xcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03B6
        gbc.setState(0x58e, 0xae7, 0x2900, 0x6a25, 0xe774, 0x6663, 0x1, 0x1);
        gbc.writeMem(0x58e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae7, gbc.sp());
        EXPECT(0x590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03B7
        gbc.setState(0xd85e, 0x3c97, 0x3a60, 0x7aa, 0xb33b, 0xa5f7, 0x1, 0x0);
        gbc.writeMem(0xd85e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0xd860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85e));
        EXPECT(0x7a, gbc.readMem(0xd85f));
        // CB 7A 03B8
        gbc.setState(0xae21, 0x9bea, 0x7340, 0xef23, 0x8420, 0xea24, 0x0, 0x1);
        gbc.writeMem(0xae21, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0xae23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae21));
        EXPECT(0x7a, gbc.readMem(0xae22));
        // CB 7A 03B9
        gbc.setState(0x516c, 0x28af, 0x9b50, 0xf687, 0x36d0, 0xc3f9, 0x1, 0x0);
        gbc.writeMem(0x516c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0x516e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03BA
        gbc.setState(0xdab2, 0xb1e7, 0xf2c0, 0xeca9, 0x200c, 0x35b9, 0x0, 0x0);
        gbc.writeMem(0xdab2, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb1e7, gbc.sp());
        EXPECT(0xdab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab2));
        EXPECT(0x7a, gbc.readMem(0xdab3));
        // CB 7A 03BB
        gbc.setState(0x9ac8, 0xa71a, 0xb940, 0xe33, 0xa76c, 0x6dc0, 0x0, 0x1);
        gbc.writeMem(0x9ac8, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x9aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac8));
        EXPECT(0x7a, gbc.readMem(0x9ac9));
        // CB 7A 03BC
        gbc.setState(0xcdb3, 0xff6e, 0x67e0, 0xecba, 0xaf7b, 0x6db, 0x1, 0x1);
        gbc.writeMem(0xcdb3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xff6e, gbc.sp());
        EXPECT(0xcdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb3));
        EXPECT(0x7a, gbc.readMem(0xcdb4));
        // CB 7A 03BD
        gbc.setState(0xd81e, 0x52c5, 0xd6b0, 0xc066, 0xac65, 0xaf26, 0x1, 0x0);
        gbc.writeMem(0xd81e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x52c5, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81e));
        EXPECT(0x7a, gbc.readMem(0xd81f));
        // CB 7A 03BE
        gbc.setState(0x417c, 0xaa5, 0x9920, 0x4416, 0x7d8e, 0xe95c, 0x1, 0x0);
        gbc.writeMem(0x417c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaa5, gbc.sp());
        EXPECT(0x417e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03BF
        gbc.setState(0x9764, 0xe161, 0x4f50, 0xaff2, 0xbe6a, 0xeb21, 0x0, 0x0);
        gbc.writeMem(0x9764, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0x9766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9764));
        EXPECT(0x7a, gbc.readMem(0x9765));
        // CB 7A 03C0
        gbc.setState(0xcacb, 0x293e, 0xc210, 0x2b01, 0xb689, 0x6f9f, 0x1, 0x0);
        gbc.writeMem(0xcacb, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0xcacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacb));
        EXPECT(0x7a, gbc.readMem(0xcacc));
        // CB 7A 03C2
        gbc.setState(0x8644, 0x260f, 0x2eb0, 0xb640, 0xd219, 0x3ce9, 0x0, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8644));
        EXPECT(0x7a, gbc.readMem(0x8645));
        // CB 7A 03C3
        gbc.setState(0x9a15, 0x646, 0xacf0, 0x660f, 0xba29, 0x21c4, 0x1, 0x0);
        gbc.writeMem(0x9a15, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x646, gbc.sp());
        EXPECT(0x9a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a15));
        EXPECT(0x7a, gbc.readMem(0x9a16));
        // CB 7A 03C4
        gbc.setState(0x880d, 0x30ec, 0xaed0, 0x296c, 0x1b3f, 0x7aae, 0x1, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x880f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880d));
        EXPECT(0x7a, gbc.readMem(0x880e));
        // CB 7A 03C5
        gbc.setState(0x6365, 0x2ab7, 0x7e0, 0x2ad4, 0x8c9a, 0x19fb, 0x0, 0x0);
        gbc.writeMem(0x6365, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2ab7, gbc.sp());
        EXPECT(0x6367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03C6
        gbc.setState(0x3fa1, 0x510c, 0xa2b0, 0xce7, 0x74e4, 0x5afb, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x510c, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03C7
        gbc.setState(0x792d, 0x2487, 0xa50, 0x5c9c, 0x356f, 0xb222, 0x1, 0x1);
        gbc.writeMem(0x792d, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2487, gbc.sp());
        EXPECT(0x792f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03C8
        gbc.setState(0x1784, 0xaef5, 0x88c0, 0xb0a0, 0xd5d9, 0x4d8a, 0x0, 0x1);
        gbc.writeMem(0x1784, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x1786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03CA
        gbc.setState(0xdfb0, 0x821, 0x1a20, 0xcfee, 0xc526, 0xb7d7, 0x1, 0x1);
        gbc.writeMem(0xdfb0, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb0));
        EXPECT(0x7a, gbc.readMem(0xdfb1));
        // CB 7A 03CB
        gbc.setState(0x8d51, 0x8705, 0xbbf0, 0xda22, 0x48f9, 0xa656, 0x1, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0x7a, gbc.readMem(0x8d52));
        // CB 7A 03CC
        gbc.setState(0x6a6, 0xd2e9, 0xa050, 0xe202, 0xb760, 0x31d3, 0x0, 0x1);
        gbc.writeMem(0x6a6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd2e9, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03CD
        gbc.setState(0xd268, 0xd3, 0x51a0, 0x2465, 0xe8e7, 0xc7b3, 0x1, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd3, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd268));
        EXPECT(0x7a, gbc.readMem(0xd269));
        // CB 7A 03CE
        gbc.setState(0x9f34, 0xc88b, 0x8330, 0x5032, 0x8e39, 0x9ef3, 0x0, 0x1);
        gbc.writeMem(0x9f34, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f34));
        EXPECT(0x7a, gbc.readMem(0x9f35));
        // CB 7A 03CF
        gbc.setState(0x82f9, 0xcc52, 0x5900, 0xd3ac, 0x5486, 0x3eba, 0x0, 0x1);
        gbc.writeMem(0x82f9, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f9));
        EXPECT(0x7a, gbc.readMem(0x82fa));
        // CB 7A 03D0
        gbc.setState(0x4c5f, 0xfae0, 0xe6c0, 0xf277, 0xca30, 0x5b1e, 0x1, 0x1);
        gbc.writeMem(0x4c5f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0x4c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03D1
        gbc.setState(0x5724, 0x2362, 0x6c90, 0x77fe, 0x9951, 0x3975, 0x1, 0x0);
        gbc.writeMem(0x5724, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0x5726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03D2
        gbc.setState(0x52d7, 0x6941, 0x1fe0, 0x4d1c, 0x6f76, 0x5b73, 0x0, 0x1);
        gbc.writeMem(0x52d7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6941, gbc.sp());
        EXPECT(0x52d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03D3
        gbc.setState(0x8d0c, 0xfb40, 0xe2f0, 0x66aa, 0xe0f8, 0x84b0, 0x1, 0x0);
        gbc.writeMem(0x8d0c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x8d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0c));
        EXPECT(0x7a, gbc.readMem(0x8d0d));
        // CB 7A 03D4
        gbc.setState(0x9b28, 0xcea2, 0xced0, 0x1191, 0x3a1, 0x172f, 0x0, 0x0);
        gbc.writeMem(0x9b28, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcea2, gbc.sp());
        EXPECT(0x9b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b28));
        EXPECT(0x7a, gbc.readMem(0x9b29));
        // CB 7A 03D5
        gbc.setState(0x5c32, 0x89ee, 0xc710, 0x9750, 0x317f, 0x75e6, 0x0, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03D6
        gbc.setState(0x8aaa, 0x2bfb, 0x1e30, 0x99c1, 0x7eab, 0xcb48, 0x0, 0x0);
        gbc.writeMem(0x8aaa, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2bfb, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aaa));
        EXPECT(0x7a, gbc.readMem(0x8aab));
        // CB 7A 03D7
        gbc.setState(0x6f0e, 0x386f, 0x59b0, 0xaf88, 0xe294, 0x3b30, 0x0, 0x0);
        gbc.writeMem(0x6f0e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0x6f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03D8
        gbc.setState(0xc624, 0x418b, 0xe890, 0x3cb3, 0xad93, 0x20dd, 0x1, 0x0);
        gbc.writeMem(0xc624, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x418b, gbc.sp());
        EXPECT(0xc626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc624));
        EXPECT(0x7a, gbc.readMem(0xc625));
        // CB 7A 03D9
        gbc.setState(0x4884, 0x936c, 0xde30, 0xa0ee, 0x2364, 0x9368, 0x1, 0x0);
        gbc.writeMem(0x4884, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x936c, gbc.sp());
        EXPECT(0x4886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03DA
        gbc.setState(0xb5d7, 0x557f, 0x2a70, 0x90e9, 0x91fa, 0x26e9, 0x0, 0x1);
        gbc.writeMem(0xb5d7, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0xb5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d7));
        EXPECT(0x7a, gbc.readMem(0xb5d8));
        // CB 7A 03DB
        gbc.setState(0x7c5c, 0x7983, 0x5970, 0x2b99, 0xff64, 0x5a82, 0x1, 0x0);
        gbc.writeMem(0x7c5c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7983, gbc.sp());
        EXPECT(0x7c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03DC
        gbc.setState(0x8ab6, 0x3b25, 0xde50, 0x8ec8, 0xf1ae, 0xaac2, 0x0, 0x0);
        gbc.writeMem(0x8ab6, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0x8ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab6));
        EXPECT(0x7a, gbc.readMem(0x8ab7));
        // CB 7A 03DD
        gbc.setState(0x38ee, 0x3144, 0x2640, 0x92fd, 0x33ef, 0x19fb, 0x1, 0x1);
        gbc.writeMem(0x38ee, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03DE
        gbc.setState(0x6645, 0x1ae6, 0x3440, 0xe32d, 0x81dc, 0x97fa, 0x0, 0x1);
        gbc.writeMem(0x6645, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1ae6, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7A 03DF
        gbc.setState(0xaf2b, 0x89c6, 0x6900, 0xfd98, 0xea8c, 0x1c52, 0x1, 0x0);
        gbc.writeMem(0xaf2b, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x89c6, gbc.sp());
        EXPECT(0xaf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2b));
        EXPECT(0x7a, gbc.readMem(0xaf2c));
        // CB 7A 03E0
        gbc.setState(0xefb3, 0x4484, 0xfd60, 0xe15d, 0x4b7, 0x3a3f, 0x0, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0x7a, gbc.readMem(0xefb4));
        // CB 7A 03E1
        gbc.setState(0x702a, 0x83ac, 0x7f90, 0x46ed, 0x80b5, 0x9982, 0x0, 0x0);
        gbc.writeMem(0x702a, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03E2
        gbc.setState(0x2880, 0x5e9f, 0xa310, 0x5cfa, 0x7b1b, 0xe5c4, 0x0, 0x0);
        gbc.writeMem(0x2880, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03E3
        gbc.setState(0xc009, 0x4f31, 0xc410, 0xed5e, 0x303, 0x8dbe, 0x0, 0x1);
        gbc.writeMem(0xc009, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4f31, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc009));
        EXPECT(0x7a, gbc.readMem(0xc00a));
        // CB 7A 03E4
        gbc.setState(0x3a5f, 0x71e4, 0xd150, 0xdc43, 0xaf15, 0x2b6a, 0x0, 0x1);
        gbc.writeMem(0x3a5f, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71e4, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03E5
        gbc.setState(0x933e, 0xac81, 0xf0, 0x43cf, 0x30ea, 0x8bcc, 0x1, 0x0);
        gbc.writeMem(0x933e, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933e));
        EXPECT(0x7a, gbc.readMem(0x933f));
        // CB 7A 03E6
        gbc.setState(0x1934, 0xfe7a, 0x23f0, 0xfd3, 0x7e0d, 0x1391, 0x0, 0x0);
        gbc.writeMem(0x1934, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfe7a, gbc.sp());
        EXPECT(0x1936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7A 03E7
        gbc.setState(0x5e3c, 0x2a08, 0x8700, 0xe730, 0x5791, 0x4436, 0x0, 0x1);
        gbc.writeMem(0x5e3c, { 0xcb, 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
