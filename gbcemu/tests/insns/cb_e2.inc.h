    TEST(gbcemu, opcode_cb_e2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E2 0000
        gbc.setState(0x2a89, 0x2861, 0x4680, 0xdc12, 0x1a0d, 0xd231, 0x0, 0x1);
        gbc.writeMem(0x2a89, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0x2a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0001
        gbc.setState(0x937b, 0xd53e, 0xeb40, 0xd089, 0x2539, 0x9583, 0x1, 0x0);
        gbc.writeMem(0x937b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd53e);
        EXPECT(gbc.pc(), 0x937d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x937b), 0xcb);
        EXPECT(gbc.readMem(0x937c), 0xe2);
        // CB E2 0002
        gbc.setState(0xe4ea, 0x72d3, 0xf300, 0xd50b, 0x1dd2, 0x88b2, 0x1, 0x0);
        gbc.writeMem(0xe4ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x72d3);
        EXPECT(gbc.pc(), 0xe4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ea), 0xcb);
        EXPECT(gbc.readMem(0xe4eb), 0xe2);
        // CB E2 0003
        gbc.setState(0x49af, 0x81c7, 0x7090, 0x7e2b, 0xada3, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x81c7);
        EXPECT(gbc.pc(), 0x49b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0005
        gbc.setState(0x61e6, 0x34c, 0xf7e0, 0x4a92, 0x644f, 0x4bd6, 0x0, 0x0);
        gbc.writeMem(0x61e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x34c);
        EXPECT(gbc.pc(), 0x61e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0006
        gbc.setState(0xa75, 0x59b7, 0xc6a0, 0xf948, 0x4275, 0x7bb8, 0x1, 0x0);
        gbc.writeMem(0xa75, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x59b7);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0007
        gbc.setState(0x94d9, 0xe0e0, 0x1be0, 0xcaa0, 0xebf9, 0x7ea1, 0x1, 0x1);
        gbc.writeMem(0x94d9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe0e0);
        EXPECT(gbc.pc(), 0x94db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d9), 0xcb);
        EXPECT(gbc.readMem(0x94da), 0xe2);
        // CB E2 0008
        gbc.setState(0x3008, 0xce9b, 0x8710, 0x8d64, 0x2017, 0xdf04, 0x1, 0x1);
        gbc.writeMem(0x3008, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xce9b);
        EXPECT(gbc.pc(), 0x300a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0009
        gbc.setState(0x7c44, 0x923c, 0x3210, 0x28a3, 0x2474, 0x6372, 0x1, 0x1);
        gbc.writeMem(0x7c44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x923c);
        EXPECT(gbc.pc(), 0x7c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 000A
        gbc.setState(0x7a72, 0xcf68, 0x3570, 0xf4c1, 0xf9f3, 0xde05, 0x1, 0x0);
        gbc.writeMem(0x7a72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcf68);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 000B
        gbc.setState(0xe62d, 0xe795, 0xb900, 0x8922, 0x82e8, 0xe131, 0x0, 0x0);
        gbc.writeMem(0xe62d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe795);
        EXPECT(gbc.pc(), 0xe62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62d), 0xcb);
        EXPECT(gbc.readMem(0xe62e), 0xe2);
        // CB E2 000C
        gbc.setState(0x7388, 0xef48, 0x5c70, 0xe3c3, 0x46b1, 0x4ec9, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xef48);
        EXPECT(gbc.pc(), 0x738a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 000D
        gbc.setState(0x1c4a, 0x84f6, 0x5600, 0xb419, 0x5b02, 0xfc0d, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x84f6);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 000E
        gbc.setState(0x727c, 0x5e07, 0x2380, 0xdb4c, 0xce2, 0x6c16, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5e07);
        EXPECT(gbc.pc(), 0x727e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 000F
        gbc.setState(0x81cc, 0xb932, 0x9830, 0x4b99, 0xa069, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0x81cc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb932);
        EXPECT(gbc.pc(), 0x81ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cc), 0xcb);
        EXPECT(gbc.readMem(0x81cd), 0xe2);
        // CB E2 0010
        gbc.setState(0x366a, 0x942a, 0xf970, 0x5d1e, 0xedc2, 0x4bb5, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x942a);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0011
        gbc.setState(0x1bf9, 0x535, 0x5400, 0x18c0, 0xac0f, 0xb7c7, 0x1, 0x0);
        gbc.writeMem(0x1bf9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0x1bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0012
        gbc.setState(0xa4f4, 0x174d, 0x8200, 0xeeb6, 0x5f27, 0x48d4, 0x1, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x174d);
        EXPECT(gbc.pc(), 0xa4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f4), 0xcb);
        EXPECT(gbc.readMem(0xa4f5), 0xe2);
        // CB E2 0013
        gbc.setState(0xd76b, 0xe948, 0x6f50, 0x4190, 0xf9f6, 0xfb87, 0x1, 0x0);
        gbc.writeMem(0xd76b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe948);
        EXPECT(gbc.pc(), 0xd76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76b), 0xcb);
        EXPECT(gbc.readMem(0xd76c), 0xe2);
        // CB E2 0014
        gbc.setState(0xa893, 0xe44d, 0xc020, 0xd9d7, 0xea82, 0xcaf2, 0x1, 0x1);
        gbc.writeMem(0xa893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe44d);
        EXPECT(gbc.pc(), 0xa895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa893), 0xcb);
        EXPECT(gbc.readMem(0xa894), 0xe2);
        // CB E2 0015
        gbc.setState(0x56dc, 0x5f6b, 0xa5d0, 0xda3c, 0xc79b, 0xb362, 0x1, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5f6b);
        EXPECT(gbc.pc(), 0x56de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0016
        gbc.setState(0xb3dd, 0x6eb3, 0xcdb0, 0x33c7, 0x4afb, 0xfe98, 0x1, 0x1);
        gbc.writeMem(0xb3dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6eb3);
        EXPECT(gbc.pc(), 0xb3df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3dd), 0xcb);
        EXPECT(gbc.readMem(0xb3de), 0xe2);
        // CB E2 0018
        gbc.setState(0xb895, 0xd906, 0xb2e0, 0x5464, 0x5453, 0x5893, 0x1, 0x1);
        gbc.writeMem(0xb895, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd906);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb895), 0xcb);
        EXPECT(gbc.readMem(0xb896), 0xe2);
        // CB E2 0019
        gbc.setState(0xd476, 0x7360, 0x4dc0, 0x87d1, 0x1332, 0x71e2, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7360);
        EXPECT(gbc.pc(), 0xd478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd476), 0xcb);
        EXPECT(gbc.readMem(0xd477), 0xe2);
        // CB E2 001B
        gbc.setState(0x827c, 0xdc39, 0x5070, 0x1481, 0x3b34, 0xd39c, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdc39);
        EXPECT(gbc.pc(), 0x827e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827c), 0xcb);
        EXPECT(gbc.readMem(0x827d), 0xe2);
        // CB E2 001C
        gbc.setState(0x6770, 0x27df, 0x50b0, 0x6171, 0xd436, 0x8e7, 0x1, 0x1);
        gbc.writeMem(0x6770, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x27df);
        EXPECT(gbc.pc(), 0x6772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 001D
        gbc.setState(0x3f8e, 0x1ace, 0xfa50, 0x1710, 0x4e2a, 0x11a3, 0x1, 0x1);
        gbc.writeMem(0x3f8e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x3f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 001E
        gbc.setState(0x5947, 0x8789, 0xa470, 0x3d62, 0xeda4, 0x4094, 0x1, 0x1);
        gbc.writeMem(0x5947, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8789);
        EXPECT(gbc.pc(), 0x5949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 001F
        gbc.setState(0x415f, 0x413d, 0x23c0, 0x73f1, 0xcb00, 0xd037, 0x0, 0x0);
        gbc.writeMem(0x415f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x413d);
        EXPECT(gbc.pc(), 0x4161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0021
        gbc.setState(0xe2c0, 0xe611, 0x5b30, 0xf7d6, 0x8b5, 0xe3de, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe611);
        EXPECT(gbc.pc(), 0xe2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c0), 0xcb);
        EXPECT(gbc.readMem(0xe2c1), 0xe2);
        // CB E2 0022
        gbc.setState(0x28e7, 0xb974, 0x3b0, 0x8e98, 0xf127, 0xbd5f, 0x0, 0x0);
        gbc.writeMem(0x28e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb974);
        EXPECT(gbc.pc(), 0x28e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0023
        gbc.setState(0xe3, 0x8484, 0xd350, 0x30f7, 0x15de, 0xb7b, 0x0, 0x0);
        gbc.writeMem(0xe3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0xe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0024
        gbc.setState(0xec, 0x4d90, 0x2f70, 0xac84, 0x853e, 0x4be3, 0x1, 0x1);
        gbc.writeMem(0xec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4d90);
        EXPECT(gbc.pc(), 0xee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0026
        gbc.setState(0x6e6c, 0x3e08, 0x1340, 0x7f7d, 0x2817, 0xa76a, 0x0, 0x0);
        gbc.writeMem(0x6e6c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3e08);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0027
        gbc.setState(0x9b11, 0xb8a, 0x8570, 0x1be5, 0x19e1, 0x29cc, 0x0, 0x0);
        gbc.writeMem(0x9b11, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb8a);
        EXPECT(gbc.pc(), 0x9b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b11), 0xcb);
        EXPECT(gbc.readMem(0x9b12), 0xe2);
        // CB E2 0028
        gbc.setState(0xbb06, 0x9cc, 0x6860, 0xd459, 0xede8, 0x9703, 0x1, 0x1);
        gbc.writeMem(0xbb06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9cc);
        EXPECT(gbc.pc(), 0xbb08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb06), 0xcb);
        EXPECT(gbc.readMem(0xbb07), 0xe2);
        // CB E2 0029
        gbc.setState(0x569d, 0x756c, 0x58e0, 0x9945, 0x4ab9, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x569d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x756c);
        EXPECT(gbc.pc(), 0x569f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 002A
        gbc.setState(0xb35f, 0xc34a, 0x76a0, 0xa106, 0x6465, 0x9b46, 0x0, 0x1);
        gbc.writeMem(0xb35f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0xb361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb35f), 0xcb);
        EXPECT(gbc.readMem(0xb360), 0xe2);
        // CB E2 002B
        gbc.setState(0x5f36, 0xdd28, 0x1de0, 0x3c5b, 0xec2a, 0x9a69, 0x1, 0x1);
        gbc.writeMem(0x5f36, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdd28);
        EXPECT(gbc.pc(), 0x5f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 002C
        gbc.setState(0xa300, 0x25f1, 0xab70, 0x981d, 0xa784, 0x114c, 0x1, 0x0);
        gbc.writeMem(0xa300, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0xa302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa300), 0xcb);
        EXPECT(gbc.readMem(0xa301), 0xe2);
        // CB E2 002D
        gbc.setState(0xcd82, 0x9064, 0xaf80, 0x881, 0x25, 0xe92b, 0x1, 0x1);
        gbc.writeMem(0xcd82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9064);
        EXPECT(gbc.pc(), 0xcd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd82), 0xcb);
        EXPECT(gbc.readMem(0xcd83), 0xe2);
        // CB E2 002E
        gbc.setState(0x741c, 0x8129, 0x9170, 0xc81, 0xb854, 0xb338, 0x1, 0x0);
        gbc.writeMem(0x741c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8129);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 002F
        gbc.setState(0x347d, 0x900, 0x4f0, 0xe71a, 0xbf4d, 0xa92f, 0x0, 0x0);
        gbc.writeMem(0x347d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x900);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0031
        gbc.setState(0x9026, 0x28e8, 0x7790, 0x406e, 0x8135, 0xd1aa, 0x0, 0x0);
        gbc.writeMem(0x9026, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x28e8);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9026), 0xcb);
        EXPECT(gbc.readMem(0x9027), 0xe2);
        // CB E2 0032
        gbc.setState(0x206c, 0x393d, 0x1aa0, 0x457f, 0x1197, 0xdec3, 0x0, 0x1);
        gbc.writeMem(0x206c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x393d);
        EXPECT(gbc.pc(), 0x206e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0033
        gbc.setState(0xd468, 0x8645, 0x3960, 0xe9b0, 0x27d1, 0x11c3, 0x1, 0x1);
        gbc.writeMem(0xd468, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8645);
        EXPECT(gbc.pc(), 0xd46a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd468), 0xcb);
        EXPECT(gbc.readMem(0xd469), 0xe2);
        // CB E2 0034
        gbc.setState(0x4cbe, 0x3d5c, 0xe690, 0x2d, 0x2559, 0x9091, 0x0, 0x0);
        gbc.writeMem(0x4cbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3d5c);
        EXPECT(gbc.pc(), 0x4cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0035
        gbc.setState(0xe3ec, 0x2b36, 0xa140, 0x3cf0, 0x469b, 0xbd7f, 0x1, 0x0);
        gbc.writeMem(0xe3ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0xe3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ec), 0xcb);
        EXPECT(gbc.readMem(0xe3ed), 0xe2);
        // CB E2 0036
        gbc.setState(0x1e08, 0x5588, 0x4de0, 0x8958, 0x3ab7, 0xad1f, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x1e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0037
        gbc.setState(0xc024, 0xe13e, 0x51a0, 0x666f, 0x54b7, 0xe1bd, 0x0, 0x0);
        gbc.writeMem(0xc024, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe13e);
        EXPECT(gbc.pc(), 0xc026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc024), 0xcb);
        EXPECT(gbc.readMem(0xc025), 0xe2);
        // CB E2 0038
        gbc.setState(0xa728, 0xe31d, 0x5bb0, 0x1945, 0xddb0, 0x8962, 0x1, 0x0);
        gbc.writeMem(0xa728, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe31d);
        EXPECT(gbc.pc(), 0xa72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa728), 0xcb);
        EXPECT(gbc.readMem(0xa729), 0xe2);
        // CB E2 0039
        gbc.setState(0x47fd, 0xf7b4, 0x31d0, 0x364a, 0xcfb0, 0xd6dd, 0x1, 0x0);
        gbc.writeMem(0x47fd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf7b4);
        EXPECT(gbc.pc(), 0x47ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 003A
        gbc.setState(0x758a, 0xd37, 0x6040, 0x33bb, 0xd1e5, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0x758a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd37);
        EXPECT(gbc.pc(), 0x758c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 003B
        gbc.setState(0x751a, 0x6ac9, 0x4f0, 0xcd33, 0xe903, 0xb73d, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 003C
        gbc.setState(0x33a4, 0xd066, 0x48d0, 0xf81e, 0x233a, 0x2429, 0x0, 0x1);
        gbc.writeMem(0x33a4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd066);
        EXPECT(gbc.pc(), 0x33a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 003D
        gbc.setState(0xdc9, 0x9538, 0x9be0, 0xa5b9, 0xdeaf, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9538);
        EXPECT(gbc.pc(), 0xdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 003E
        gbc.setState(0x8324, 0xc71a, 0x8eb0, 0x7554, 0xb502, 0x6e0, 0x0, 0x1);
        gbc.writeMem(0x8324, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc71a);
        EXPECT(gbc.pc(), 0x8326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8324), 0xcb);
        EXPECT(gbc.readMem(0x8325), 0xe2);
        // CB E2 003F
        gbc.setState(0x129b, 0xdcbb, 0x2020, 0xa3ad, 0xcb49, 0x5683, 0x0, 0x1);
        gbc.writeMem(0x129b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdcbb);
        EXPECT(gbc.pc(), 0x129d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0040
        gbc.setState(0x727a, 0xf2b4, 0x4ff0, 0xd679, 0xa1ca, 0x425b, 0x0, 0x0);
        gbc.writeMem(0x727a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf2b4);
        EXPECT(gbc.pc(), 0x727c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0041
        gbc.setState(0xb2f6, 0x629, 0x8970, 0x31e6, 0xf72d, 0xe017, 0x0, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x629);
        EXPECT(gbc.pc(), 0xb2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f6), 0xcb);
        EXPECT(gbc.readMem(0xb2f7), 0xe2);
        // CB E2 0042
        gbc.setState(0x6baa, 0x830b, 0xacf0, 0x14ae, 0x2e56, 0x8550, 0x0, 0x1);
        gbc.writeMem(0x6baa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x830b);
        EXPECT(gbc.pc(), 0x6bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0043
        gbc.setState(0x901e, 0xff7, 0x1300, 0xf506, 0x6bdf, 0x4ef0, 0x0, 0x1);
        gbc.writeMem(0x901e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xff7);
        EXPECT(gbc.pc(), 0x9020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901e), 0xcb);
        EXPECT(gbc.readMem(0x901f), 0xe2);
        // CB E2 0044
        gbc.setState(0xab06, 0xd229, 0x1690, 0xdeab, 0xc1f, 0x6dda, 0x1, 0x1);
        gbc.writeMem(0xab06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd229);
        EXPECT(gbc.pc(), 0xab08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab06), 0xcb);
        EXPECT(gbc.readMem(0xab07), 0xe2);
        // CB E2 0045
        gbc.setState(0xec2a, 0xf4a4, 0x1e30, 0xe6ee, 0x1981, 0x2bb8, 0x0, 0x1);
        gbc.writeMem(0xec2a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf4a4);
        EXPECT(gbc.pc(), 0xec2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2a), 0xcb);
        EXPECT(gbc.readMem(0xec2b), 0xe2);
        // CB E2 0046
        gbc.setState(0x7051, 0x35ef, 0x11d0, 0x95ca, 0x2af4, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x35ef);
        EXPECT(gbc.pc(), 0x7053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0047
        gbc.setState(0x99e9, 0x1ebc, 0x8960, 0x24c8, 0xe2d8, 0xba41, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1ebc);
        EXPECT(gbc.pc(), 0x99eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e9), 0xcb);
        EXPECT(gbc.readMem(0x99ea), 0xe2);
        // CB E2 0049
        gbc.setState(0xdcf1, 0xda50, 0x47c0, 0x95e7, 0x703f, 0x52bb, 0x1, 0x0);
        gbc.writeMem(0xdcf1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xda50);
        EXPECT(gbc.pc(), 0xdcf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf1), 0xcb);
        EXPECT(gbc.readMem(0xdcf2), 0xe2);
        // CB E2 004A
        gbc.setState(0xcf8a, 0xa141, 0x2970, 0x3f90, 0x3788, 0xede4, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa141);
        EXPECT(gbc.pc(), 0xcf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8a), 0xcb);
        EXPECT(gbc.readMem(0xcf8b), 0xe2);
        // CB E2 004B
        gbc.setState(0x9117, 0xedc7, 0x84d0, 0x477e, 0x2404, 0x928d, 0x0, 0x0);
        gbc.writeMem(0x9117, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xedc7);
        EXPECT(gbc.pc(), 0x9119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9117), 0xcb);
        EXPECT(gbc.readMem(0x9118), 0xe2);
        // CB E2 004C
        gbc.setState(0x1448, 0xf4a2, 0x3da0, 0xb833, 0x7146, 0xf92b, 0x0, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf4a2);
        EXPECT(gbc.pc(), 0x144a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 004D
        gbc.setState(0x3d, 0xe18f, 0x1370, 0x4a99, 0x1172, 0x2a6d, 0x0, 0x0);
        gbc.writeMem(0x3d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe18f);
        EXPECT(gbc.pc(), 0x3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 004E
        gbc.setState(0x2d23, 0xb5cc, 0x70f0, 0x79ed, 0x378f, 0xfc22, 0x1, 0x0);
        gbc.writeMem(0x2d23, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb5cc);
        EXPECT(gbc.pc(), 0x2d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 004F
        gbc.setState(0xe4b9, 0x2c90, 0x3330, 0x963a, 0xa89a, 0xe404, 0x1, 0x1);
        gbc.writeMem(0xe4b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2c90);
        EXPECT(gbc.pc(), 0xe4bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b9), 0xcb);
        EXPECT(gbc.readMem(0xe4ba), 0xe2);
        // CB E2 0050
        gbc.setState(0x314d, 0x33b9, 0x7100, 0xa9fe, 0x2b54, 0x510b, 0x1, 0x0);
        gbc.writeMem(0x314d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x33b9);
        EXPECT(gbc.pc(), 0x314f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0051
        gbc.setState(0x373d, 0x9e1b, 0xba40, 0x6b9, 0xfb, 0x799a, 0x1, 0x1);
        gbc.writeMem(0x373d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9e1b);
        EXPECT(gbc.pc(), 0x373f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0052
        gbc.setState(0x6434, 0xe626, 0xc750, 0x736b, 0xaf5b, 0x70b7, 0x1, 0x0);
        gbc.writeMem(0x6434, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe626);
        EXPECT(gbc.pc(), 0x6436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0053
        gbc.setState(0x5e6e, 0x6d75, 0x3eb0, 0xbf48, 0x142b, 0xca22, 0x1, 0x0);
        gbc.writeMem(0x5e6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6d75);
        EXPECT(gbc.pc(), 0x5e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0054
        gbc.setState(0x3c1, 0x8b82, 0x2e90, 0x7dd6, 0x9852, 0x7f38, 0x1, 0x0);
        gbc.writeMem(0x3c1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8b82);
        EXPECT(gbc.pc(), 0x3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0055
        gbc.setState(0x8ff7, 0x952d, 0xda10, 0xa47f, 0x1a32, 0x21e6, 0x0, 0x0);
        gbc.writeMem(0x8ff7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x952d);
        EXPECT(gbc.pc(), 0x8ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff7), 0xcb);
        EXPECT(gbc.readMem(0x8ff8), 0xe2);
        // CB E2 0056
        gbc.setState(0xd4c7, 0x9a8a, 0x52f0, 0xef0a, 0xb495, 0x510d, 0x0, 0x0);
        gbc.writeMem(0xd4c7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9a8a);
        EXPECT(gbc.pc(), 0xd4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c7), 0xcb);
        EXPECT(gbc.readMem(0xd4c8), 0xe2);
        // CB E2 0057
        gbc.setState(0x7a11, 0x18ec, 0xe630, 0xa68, 0x2dc7, 0x832, 0x0, 0x1);
        gbc.writeMem(0x7a11, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x7a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0058
        gbc.setState(0x365e, 0x8c7d, 0x3860, 0xfa83, 0x2eea, 0x1587, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0x3660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0059
        gbc.setState(0xabc0, 0x98bb, 0xcf10, 0x671f, 0xc321, 0x3db7, 0x0, 0x0);
        gbc.writeMem(0xabc0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x98bb);
        EXPECT(gbc.pc(), 0xabc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc0), 0xcb);
        EXPECT(gbc.readMem(0xabc1), 0xe2);
        // CB E2 005A
        gbc.setState(0x8663, 0xcb9a, 0x99a0, 0x1a59, 0xb02b, 0xd902, 0x0, 0x1);
        gbc.writeMem(0x8663, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0x8665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8663), 0xcb);
        EXPECT(gbc.readMem(0x8664), 0xe2);
        // CB E2 005B
        gbc.setState(0x791f, 0x1db1, 0x21d0, 0xb812, 0xd1ec, 0xb57c, 0x0, 0x1);
        gbc.writeMem(0x791f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1db1);
        EXPECT(gbc.pc(), 0x7921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 005C
        gbc.setState(0x208, 0xc1b8, 0xe120, 0x6d01, 0x20a, 0x526a, 0x0, 0x1);
        gbc.writeMem(0x208, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc1b8);
        EXPECT(gbc.pc(), 0x20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 005E
        gbc.setState(0x5cf7, 0x6545, 0x3cf0, 0x6514, 0x75c5, 0x370a, 0x1, 0x0);
        gbc.writeMem(0x5cf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6545);
        EXPECT(gbc.pc(), 0x5cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 005F
        gbc.setState(0x382c, 0xf848, 0x53e0, 0x4d9, 0x3614, 0x7e7b, 0x0, 0x1);
        gbc.writeMem(0x382c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf848);
        EXPECT(gbc.pc(), 0x382e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0060
        gbc.setState(0x31f1, 0x4dc8, 0x56c0, 0x5d38, 0xdcb6, 0x38b3, 0x0, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0x31f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0061
        gbc.setState(0x979e, 0x9832, 0xe3d0, 0xdce2, 0xf8ae, 0x4a37, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9832);
        EXPECT(gbc.pc(), 0x97a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979e), 0xcb);
        EXPECT(gbc.readMem(0x979f), 0xe2);
        // CB E2 0062
        gbc.setState(0x9ac8, 0x5a1b, 0xcda0, 0x1f1f, 0xae8a, 0xef14, 0x0, 0x1);
        gbc.writeMem(0x9ac8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x9aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac8), 0xcb);
        EXPECT(gbc.readMem(0x9ac9), 0xe2);
        // CB E2 0063
        gbc.setState(0xcb72, 0x92e, 0xfd0, 0xf323, 0xe5c4, 0xee03, 0x0, 0x1);
        gbc.writeMem(0xcb72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x92e);
        EXPECT(gbc.pc(), 0xcb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb72), 0xcb);
        EXPECT(gbc.readMem(0xcb73), 0xe2);
        // CB E2 0064
        gbc.setState(0x7f3c, 0x7509, 0x4580, 0xadca, 0x9c1a, 0xaa8c, 0x1, 0x1);
        gbc.writeMem(0x7f3c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7509);
        EXPECT(gbc.pc(), 0x7f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0065
        gbc.setState(0x5ee5, 0xd07d, 0x35b0, 0xcf7c, 0x3f6a, 0x7e77, 0x1, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd07d);
        EXPECT(gbc.pc(), 0x5ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0066
        gbc.setState(0xa55e, 0xdc6, 0xc390, 0xa853, 0x6d7f, 0x5b4c, 0x0, 0x0);
        gbc.writeMem(0xa55e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdc6);
        EXPECT(gbc.pc(), 0xa560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55e), 0xcb);
        EXPECT(gbc.readMem(0xa55f), 0xe2);
        // CB E2 0067
        gbc.setState(0x7879, 0x552, 0xd640, 0x2e63, 0x94be, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x552);
        EXPECT(gbc.pc(), 0x787b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0068
        gbc.setState(0xaa10, 0xc84e, 0xde70, 0x3149, 0x612a, 0x2d35, 0x0, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc84e);
        EXPECT(gbc.pc(), 0xaa12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa10), 0xcb);
        EXPECT(gbc.readMem(0xaa11), 0xe2);
        // CB E2 0069
        gbc.setState(0x33f9, 0x50b4, 0x9880, 0x7353, 0x7290, 0xf7ac, 0x0, 0x0);
        gbc.writeMem(0x33f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x50b4);
        EXPECT(gbc.pc(), 0x33fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 006B
        gbc.setState(0x577b, 0x5bee, 0x1d0, 0xfc5, 0xc797, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x577b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5bee);
        EXPECT(gbc.pc(), 0x577d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 006C
        gbc.setState(0xa748, 0x40a, 0xb9f0, 0x4727, 0xb690, 0x23cc, 0x1, 0x0);
        gbc.writeMem(0xa748, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x40a);
        EXPECT(gbc.pc(), 0xa74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa748), 0xcb);
        EXPECT(gbc.readMem(0xa749), 0xe2);
        // CB E2 006D
        gbc.setState(0xa9d2, 0x7be7, 0x22d0, 0x55e, 0x569c, 0x7c37, 0x0, 0x0);
        gbc.writeMem(0xa9d2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7be7);
        EXPECT(gbc.pc(), 0xa9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d2), 0xcb);
        EXPECT(gbc.readMem(0xa9d3), 0xe2);
        // CB E2 006E
        gbc.setState(0x1a77, 0xe4ab, 0x80c0, 0x2f9d, 0x5a02, 0xd6a8, 0x1, 0x0);
        gbc.writeMem(0x1a77, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 006F
        gbc.setState(0xd60a, 0xcfbf, 0x7810, 0x2060, 0xe4f2, 0xb297, 0x0, 0x0);
        gbc.writeMem(0xd60a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcfbf);
        EXPECT(gbc.pc(), 0xd60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60a), 0xcb);
        EXPECT(gbc.readMem(0xd60b), 0xe2);
        // CB E2 0071
        gbc.setState(0xca5f, 0x5303, 0xbdf0, 0x138c, 0xcf29, 0x6312, 0x0, 0x0);
        gbc.writeMem(0xca5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5303);
        EXPECT(gbc.pc(), 0xca61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5f), 0xcb);
        EXPECT(gbc.readMem(0xca60), 0xe2);
        // CB E2 0072
        gbc.setState(0x8ed5, 0x1a7a, 0x6310, 0x271d, 0x3eda, 0xeebe, 0x1, 0x1);
        gbc.writeMem(0x8ed5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1a7a);
        EXPECT(gbc.pc(), 0x8ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed5), 0xcb);
        EXPECT(gbc.readMem(0x8ed6), 0xe2);
        // CB E2 0073
        gbc.setState(0xc6e0, 0x23ea, 0xbaf0, 0x2c0f, 0x8eaa, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0xc6e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x23ea);
        EXPECT(gbc.pc(), 0xc6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e0), 0xcb);
        EXPECT(gbc.readMem(0xc6e1), 0xe2);
        // CB E2 0074
        gbc.setState(0xce0a, 0x23a5, 0x56f0, 0x4891, 0x9b8e, 0xf87a, 0x0, 0x0);
        gbc.writeMem(0xce0a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x23a5);
        EXPECT(gbc.pc(), 0xce0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0a), 0xcb);
        EXPECT(gbc.readMem(0xce0b), 0xe2);
        // CB E2 0075
        gbc.setState(0xdde4, 0x5259, 0x9e30, 0x8ef6, 0xe5dd, 0x5db6, 0x0, 0x1);
        gbc.writeMem(0xdde4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5259);
        EXPECT(gbc.pc(), 0xdde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde4), 0xcb);
        EXPECT(gbc.readMem(0xdde5), 0xe2);
        // CB E2 0076
        gbc.setState(0x6fe, 0x4eb1, 0x8190, 0x39e, 0x3cf5, 0xac50, 0x0, 0x0);
        gbc.writeMem(0x6fe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4eb1);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0077
        gbc.setState(0xd6cb, 0xb14f, 0x5940, 0xbd37, 0x1981, 0xb6a3, 0x0, 0x0);
        gbc.writeMem(0xd6cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb14f);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cb), 0xcb);
        EXPECT(gbc.readMem(0xd6cc), 0xe2);
        // CB E2 0078
        gbc.setState(0x873c, 0x8ab5, 0xa8b0, 0x10db, 0x24c1, 0xb2ed, 0x1, 0x1);
        gbc.writeMem(0x873c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x873e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873c), 0xcb);
        EXPECT(gbc.readMem(0x873d), 0xe2);
        // CB E2 0079
        gbc.setState(0xa31a, 0xc4ef, 0x3ea0, 0x31b, 0x7a8b, 0xeadd, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc4ef);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31a), 0xcb);
        EXPECT(gbc.readMem(0xa31b), 0xe2);
        // CB E2 007A
        gbc.setState(0x5961, 0xee24, 0x79e0, 0x1abf, 0x6b39, 0x9b16, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xee24);
        EXPECT(gbc.pc(), 0x5963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 007B
        gbc.setState(0x6a, 0x9f08, 0xae0, 0xdec1, 0x5ac, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9f08);
        EXPECT(gbc.pc(), 0x6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 007C
        gbc.setState(0x963b, 0xaf4d, 0xcd80, 0xbbaf, 0x99d8, 0xb602, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaf4d);
        EXPECT(gbc.pc(), 0x963d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963b), 0xcb);
        EXPECT(gbc.readMem(0x963c), 0xe2);
        // CB E2 007D
        gbc.setState(0xcf4d, 0x2df, 0xa680, 0x105d, 0x179d, 0x52e5, 0x1, 0x0);
        gbc.writeMem(0xcf4d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2df);
        EXPECT(gbc.pc(), 0xcf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4d), 0xcb);
        EXPECT(gbc.readMem(0xcf4e), 0xe2);
        // CB E2 007E
        gbc.setState(0xc2a0, 0x170b, 0x9bd0, 0x9ecf, 0x10dd, 0xa9b5, 0x1, 0x1);
        gbc.writeMem(0xc2a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x170b);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a0), 0xcb);
        EXPECT(gbc.readMem(0xc2a1), 0xe2);
        // CB E2 007F
        gbc.setState(0x360c, 0x4ee6, 0x7df0, 0x45df, 0xef43, 0xc020, 0x1, 0x0);
        gbc.writeMem(0x360c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4ee6);
        EXPECT(gbc.pc(), 0x360e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0080
        gbc.setState(0x6ba7, 0xbd72, 0x27f0, 0xca23, 0xec9a, 0x6fa4, 0x0, 0x1);
        gbc.writeMem(0x6ba7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbd72);
        EXPECT(gbc.pc(), 0x6ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0081
        gbc.setState(0x91d3, 0xe515, 0x29b0, 0xb95f, 0x1af8, 0x4e7f, 0x0, 0x0);
        gbc.writeMem(0x91d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0x91d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d3), 0xcb);
        EXPECT(gbc.readMem(0x91d4), 0xe2);
        // CB E2 0082
        gbc.setState(0x31e5, 0xc3a4, 0xc550, 0x5b85, 0x6b51, 0x77d5, 0x1, 0x0);
        gbc.writeMem(0x31e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc3a4);
        EXPECT(gbc.pc(), 0x31e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0083
        gbc.setState(0x2c70, 0xced6, 0x6bb0, 0x8ac5, 0xdf57, 0xc530, 0x0, 0x0);
        gbc.writeMem(0x2c70, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xced6);
        EXPECT(gbc.pc(), 0x2c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0084
        gbc.setState(0xa312, 0x812b, 0xb880, 0x66d7, 0xcc95, 0x8f75, 0x1, 0x0);
        gbc.writeMem(0xa312, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x812b);
        EXPECT(gbc.pc(), 0xa314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa312), 0xcb);
        EXPECT(gbc.readMem(0xa313), 0xe2);
        // CB E2 0085
        gbc.setState(0x5abe, 0x3e52, 0xc6f0, 0x4907, 0x434b, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0x5abe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3e52);
        EXPECT(gbc.pc(), 0x5ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0086
        gbc.setState(0xaf0e, 0x3215, 0x9d40, 0x8db4, 0xd75b, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0xaf0e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3215);
        EXPECT(gbc.pc(), 0xaf10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0e), 0xcb);
        EXPECT(gbc.readMem(0xaf0f), 0xe2);
        // CB E2 0087
        gbc.setState(0x5a51, 0xb13a, 0xa3d0, 0x69dd, 0xbc4f, 0x55cc, 0x1, 0x0);
        gbc.writeMem(0x5a51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb13a);
        EXPECT(gbc.pc(), 0x5a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0088
        gbc.setState(0x226e, 0xd6ff, 0xda60, 0xac48, 0x9caf, 0x1895, 0x1, 0x1);
        gbc.writeMem(0x226e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd6ff);
        EXPECT(gbc.pc(), 0x2270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0089
        gbc.setState(0x1ff1, 0x1651, 0xe230, 0x5225, 0x371f, 0x7713, 0x1, 0x0);
        gbc.writeMem(0x1ff1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1651);
        EXPECT(gbc.pc(), 0x1ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 008A
        gbc.setState(0xee1c, 0xcc4d, 0xa360, 0x29f6, 0x880d, 0xa1b9, 0x0, 0x1);
        gbc.writeMem(0xee1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcc4d);
        EXPECT(gbc.pc(), 0xee1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1c), 0xcb);
        EXPECT(gbc.readMem(0xee1d), 0xe2);
        // CB E2 008B
        gbc.setState(0x801d, 0xb8ac, 0xb040, 0xe11c, 0xd301, 0xee12, 0x0, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb8ac);
        EXPECT(gbc.pc(), 0x801f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801d), 0xcb);
        EXPECT(gbc.readMem(0x801e), 0xe2);
        // CB E2 008C
        gbc.setState(0xad73, 0xa175, 0x320, 0x96e6, 0x9c95, 0x4126, 0x1, 0x0);
        gbc.writeMem(0xad73, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa175);
        EXPECT(gbc.pc(), 0xad75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad73), 0xcb);
        EXPECT(gbc.readMem(0xad74), 0xe2);
        // CB E2 008D
        gbc.setState(0xc44d, 0x89a0, 0x6970, 0xca44, 0xa98d, 0x7a15, 0x1, 0x0);
        gbc.writeMem(0xc44d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x89a0);
        EXPECT(gbc.pc(), 0xc44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44d), 0xcb);
        EXPECT(gbc.readMem(0xc44e), 0xe2);
        // CB E2 008E
        gbc.setState(0xbffb, 0x497c, 0xa380, 0xfc5d, 0xceb3, 0x10f7, 0x0, 0x1);
        gbc.writeMem(0xbffb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x497c);
        EXPECT(gbc.pc(), 0xbffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffb), 0xcb);
        EXPECT(gbc.readMem(0xbffc), 0xe2);
        // CB E2 008F
        gbc.setState(0xb3c3, 0xc297, 0x640, 0x3dc9, 0x9dbd, 0x5e05, 0x1, 0x1);
        gbc.writeMem(0xb3c3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc297);
        EXPECT(gbc.pc(), 0xb3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c3), 0xcb);
        EXPECT(gbc.readMem(0xb3c4), 0xe2);
        // CB E2 0090
        gbc.setState(0xbdfd, 0x152b, 0x2380, 0x7ce6, 0xd071, 0x9c87, 0x1, 0x0);
        gbc.writeMem(0xbdfd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x152b);
        EXPECT(gbc.pc(), 0xbdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfd), 0xcb);
        EXPECT(gbc.readMem(0xbdfe), 0xe2);
        // CB E2 0091
        gbc.setState(0xd699, 0xb9b8, 0x96e0, 0xf6f5, 0xd781, 0x5c36, 0x0, 0x1);
        gbc.writeMem(0xd699, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb9b8);
        EXPECT(gbc.pc(), 0xd69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd699), 0xcb);
        EXPECT(gbc.readMem(0xd69a), 0xe2);
        // CB E2 0092
        gbc.setState(0xed1, 0x1ff0, 0x4de0, 0x26b8, 0xe945, 0x7745, 0x0, 0x1);
        gbc.writeMem(0xed1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1ff0);
        EXPECT(gbc.pc(), 0xed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0093
        gbc.setState(0x31dd, 0x2346, 0x36d0, 0x7c54, 0xcf4b, 0x2531, 0x1, 0x0);
        gbc.writeMem(0x31dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0x31df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0094
        gbc.setState(0xdede, 0x6c82, 0x6890, 0xe60a, 0x6581, 0xc603, 0x1, 0x1);
        gbc.writeMem(0xdede, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6c82);
        EXPECT(gbc.pc(), 0xdee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdede), 0xcb);
        EXPECT(gbc.readMem(0xdedf), 0xe2);
        // CB E2 0095
        gbc.setState(0xa609, 0x9815, 0xb240, 0x4bfd, 0xab42, 0x52b7, 0x1, 0x1);
        gbc.writeMem(0xa609, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0xa60b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa609), 0xcb);
        EXPECT(gbc.readMem(0xa60a), 0xe2);
        // CB E2 0096
        gbc.setState(0x37db, 0x3363, 0x7ec0, 0x7d43, 0xce85, 0xae36, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3363);
        EXPECT(gbc.pc(), 0x37dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0097
        gbc.setState(0xce3e, 0xaa36, 0xa350, 0x4ce7, 0xe8eb, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0xce3e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xaa36);
        EXPECT(gbc.pc(), 0xce40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3e), 0xcb);
        EXPECT(gbc.readMem(0xce3f), 0xe2);
        // CB E2 0098
        gbc.setState(0x79ea, 0xd522, 0x2980, 0xb5cf, 0xc125, 0x4bfb, 0x0, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd522);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0099
        gbc.setState(0x8679, 0x5e48, 0x9120, 0x8271, 0x7789, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0x8679, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5e48);
        EXPECT(gbc.pc(), 0x867b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8679), 0xcb);
        EXPECT(gbc.readMem(0x867a), 0xe2);
        // CB E2 009A
        gbc.setState(0xa54e, 0xc751, 0x96d0, 0xe39, 0xef96, 0x5498, 0x1, 0x0);
        gbc.writeMem(0xa54e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc751);
        EXPECT(gbc.pc(), 0xa550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54e), 0xcb);
        EXPECT(gbc.readMem(0xa54f), 0xe2);
        // CB E2 009B
        gbc.setState(0xb581, 0x846f, 0x6cb0, 0x2394, 0x8990, 0x98c4, 0x1, 0x0);
        gbc.writeMem(0xb581, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x846f);
        EXPECT(gbc.pc(), 0xb583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb581), 0xcb);
        EXPECT(gbc.readMem(0xb582), 0xe2);
        // CB E2 009C
        gbc.setState(0x8975, 0xd437, 0x3a80, 0x2b0b, 0xc2b6, 0xd9fa, 0x0, 0x1);
        gbc.writeMem(0x8975, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd437);
        EXPECT(gbc.pc(), 0x8977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8975), 0xcb);
        EXPECT(gbc.readMem(0x8976), 0xe2);
        // CB E2 009D
        gbc.setState(0x400d, 0xd0b5, 0x6970, 0x8deb, 0x7c13, 0x46c6, 0x1, 0x1);
        gbc.writeMem(0x400d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd0b5);
        EXPECT(gbc.pc(), 0x400f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 009E
        gbc.setState(0x9c2, 0x9007, 0xd710, 0x3a3, 0xeb20, 0x1df2, 0x0, 0x0);
        gbc.writeMem(0x9c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9007);
        EXPECT(gbc.pc(), 0x9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 009F
        gbc.setState(0xbe7e, 0x3bcb, 0x9270, 0x38b5, 0x7e08, 0x8fda, 0x0, 0x1);
        gbc.writeMem(0xbe7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3bcb);
        EXPECT(gbc.pc(), 0xbe80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7e), 0xcb);
        EXPECT(gbc.readMem(0xbe7f), 0xe2);
        // CB E2 00A0
        gbc.setState(0x58dc, 0x47ff, 0xbad0, 0x67a, 0x654a, 0xbd90, 0x1, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x47ff);
        EXPECT(gbc.pc(), 0x58de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00A1
        gbc.setState(0x2c3a, 0x22d2, 0xc6c0, 0x9c26, 0x374e, 0xf52b, 0x1, 0x1);
        gbc.writeMem(0x2c3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x22d2);
        EXPECT(gbc.pc(), 0x2c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00A2
        gbc.setState(0x1bae, 0x6d46, 0xc0f0, 0x482e, 0x9c00, 0x1fe0, 0x1, 0x1);
        gbc.writeMem(0x1bae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0x1bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00A3
        gbc.setState(0xccce, 0xbfa6, 0x4cc0, 0x97a6, 0xb257, 0x56c7, 0x0, 0x1);
        gbc.writeMem(0xccce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbfa6);
        EXPECT(gbc.pc(), 0xccd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccce), 0xcb);
        EXPECT(gbc.readMem(0xcccf), 0xe2);
        // CB E2 00A4
        gbc.setState(0x5ca9, 0xab30, 0x95a0, 0x48af, 0xbef5, 0xc3d7, 0x1, 0x1);
        gbc.writeMem(0x5ca9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xab30);
        EXPECT(gbc.pc(), 0x5cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00A5
        gbc.setState(0xce5a, 0x9dd9, 0x4e20, 0xe923, 0x566d, 0xaee1, 0x1, 0x1);
        gbc.writeMem(0xce5a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9dd9);
        EXPECT(gbc.pc(), 0xce5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5a), 0xcb);
        EXPECT(gbc.readMem(0xce5b), 0xe2);
        // CB E2 00A6
        gbc.setState(0x8bdf, 0xab70, 0xd520, 0x5fec, 0x84b7, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0x8bdf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xab70);
        EXPECT(gbc.pc(), 0x8be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdf), 0xcb);
        EXPECT(gbc.readMem(0x8be0), 0xe2);
        // CB E2 00A7
        gbc.setState(0xe1a5, 0x27a4, 0xf9c0, 0x5f96, 0x18ce, 0x1fe4, 0x1, 0x0);
        gbc.writeMem(0xe1a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x27a4);
        EXPECT(gbc.pc(), 0xe1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a5), 0xcb);
        EXPECT(gbc.readMem(0xe1a6), 0xe2);
        // CB E2 00A8
        gbc.setState(0xe32d, 0x9618, 0x3ba0, 0x539b, 0x364, 0x2311, 0x0, 0x1);
        gbc.writeMem(0xe32d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9618);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32d), 0xcb);
        EXPECT(gbc.readMem(0xe32e), 0xe2);
        // CB E2 00A9
        gbc.setState(0xc491, 0xacad, 0x6770, 0x95, 0xe60b, 0xbb4a, 0x0, 0x0);
        gbc.writeMem(0xc491, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xacad);
        EXPECT(gbc.pc(), 0xc493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc491), 0xcb);
        EXPECT(gbc.readMem(0xc492), 0xe2);
        // CB E2 00AA
        gbc.setState(0xa5f2, 0x38bb, 0xe320, 0xaa33, 0xfbd7, 0x897d, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x38bb);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f2), 0xcb);
        EXPECT(gbc.readMem(0xa5f3), 0xe2);
        // CB E2 00AB
        gbc.setState(0x8cc6, 0x1e65, 0x1520, 0xbb6, 0x7b9f, 0xb22e, 0x0, 0x0);
        gbc.writeMem(0x8cc6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1e65);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0xe2);
        // CB E2 00AC
        gbc.setState(0x7d51, 0x3938, 0x5890, 0x8960, 0x541c, 0xb692, 0x1, 0x0);
        gbc.writeMem(0x7d51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3938);
        EXPECT(gbc.pc(), 0x7d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00AD
        gbc.setState(0x8070, 0x1774, 0x1e40, 0xb29a, 0x91ee, 0x248c, 0x1, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1774);
        EXPECT(gbc.pc(), 0x8072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8070), 0xcb);
        EXPECT(gbc.readMem(0x8071), 0xe2);
        // CB E2 00AE
        gbc.setState(0x3b44, 0x4336, 0xaaa0, 0x328a, 0x6b7e, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x3b44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4336);
        EXPECT(gbc.pc(), 0x3b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00AF
        gbc.setState(0xbf81, 0x5269, 0xe670, 0xa401, 0x3837, 0x2944, 0x1, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5269);
        EXPECT(gbc.pc(), 0xbf83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf81), 0xcb);
        EXPECT(gbc.readMem(0xbf82), 0xe2);
        // CB E2 00B0
        gbc.setState(0x4238, 0x467a, 0x91f0, 0xb3de, 0x2117, 0xd4fb, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x467a);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00B1
        gbc.setState(0xc7b2, 0xe0f0, 0xc8e0, 0x2b13, 0x9c37, 0x124e, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe0f0);
        EXPECT(gbc.pc(), 0xc7b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b2), 0xcb);
        EXPECT(gbc.readMem(0xc7b3), 0xe2);
        // CB E2 00B2
        gbc.setState(0xd1e2, 0x5fbf, 0x1f30, 0xbdd6, 0xb747, 0x92f4, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5fbf);
        EXPECT(gbc.pc(), 0xd1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e2), 0xcb);
        EXPECT(gbc.readMem(0xd1e3), 0xe2);
        // CB E2 00B3
        gbc.setState(0x42d7, 0xec6c, 0x5990, 0xf999, 0xfc12, 0xaca, 0x1, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xec6c);
        EXPECT(gbc.pc(), 0x42d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00B4
        gbc.setState(0xa243, 0x95, 0xb20, 0xed95, 0xc9c4, 0x5833, 0x1, 0x1);
        gbc.writeMem(0xa243, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x95);
        EXPECT(gbc.pc(), 0xa245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa243), 0xcb);
        EXPECT(gbc.readMem(0xa244), 0xe2);
        // CB E2 00B5
        gbc.setState(0x65be, 0xb2e9, 0x7680, 0x221a, 0x5708, 0x4abb, 0x0, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb2e9);
        EXPECT(gbc.pc(), 0x65c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00B6
        gbc.setState(0xc9c1, 0xf1fd, 0x61f0, 0x7ef, 0xc7d7, 0x2476, 0x1, 0x0);
        gbc.writeMem(0xc9c1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf1fd);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c1), 0xcb);
        EXPECT(gbc.readMem(0xc9c2), 0xe2);
        // CB E2 00B7
        gbc.setState(0x97c9, 0x3c1d, 0x9fa0, 0xa91f, 0x6ba9, 0x73dc, 0x0, 0x1);
        gbc.writeMem(0x97c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3c1d);
        EXPECT(gbc.pc(), 0x97cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c9), 0xcb);
        EXPECT(gbc.readMem(0x97ca), 0xe2);
        // CB E2 00B8
        gbc.setState(0x8b9a, 0xedd2, 0x3110, 0x8b4, 0x8958, 0x804e, 0x0, 0x0);
        gbc.writeMem(0x8b9a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xedd2);
        EXPECT(gbc.pc(), 0x8b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9a), 0xcb);
        EXPECT(gbc.readMem(0x8b9b), 0xe2);
        // CB E2 00B9
        gbc.setState(0x2b73, 0x5718, 0x3010, 0xbd05, 0xe2d8, 0x136d, 0x1, 0x0);
        gbc.writeMem(0x2b73, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5718);
        EXPECT(gbc.pc(), 0x2b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00BA
        gbc.setState(0xd488, 0xc184, 0x89b0, 0x5495, 0x6eb4, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0xd488, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0xd48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd488), 0xcb);
        EXPECT(gbc.readMem(0xd489), 0xe2);
        // CB E2 00BB
        gbc.setState(0x196d, 0x7384, 0x10f0, 0xf43b, 0x833b, 0x6d63, 0x1, 0x0);
        gbc.writeMem(0x196d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7384);
        EXPECT(gbc.pc(), 0x196f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00BC
        gbc.setState(0xa2f3, 0xba29, 0x70a0, 0x9989, 0xc26f, 0x652e, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xba29);
        EXPECT(gbc.pc(), 0xa2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f3), 0xcb);
        EXPECT(gbc.readMem(0xa2f4), 0xe2);
        // CB E2 00BD
        gbc.setState(0x4205, 0x1f02, 0x4180, 0x356d, 0x854c, 0xf7e2, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1f02);
        EXPECT(gbc.pc(), 0x4207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00BE
        gbc.setState(0x8cc4, 0x57db, 0x46d0, 0x7e96, 0x78ae, 0xbd96, 0x0, 0x0);
        gbc.writeMem(0x8cc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x57db);
        EXPECT(gbc.pc(), 0x8cc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc4), 0xcb);
        EXPECT(gbc.readMem(0x8cc5), 0xe2);
        // CB E2 00BF
        gbc.setState(0x7732, 0xf8f9, 0x7160, 0x210e, 0xa56c, 0xf2d8, 0x0, 0x0);
        gbc.writeMem(0x7732, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf8f9);
        EXPECT(gbc.pc(), 0x7734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00C0
        gbc.setState(0x113d, 0xd1f7, 0x88c0, 0xc8ff, 0xf728, 0x2cb8, 0x0, 0x1);
        gbc.writeMem(0x113d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd1f7);
        EXPECT(gbc.pc(), 0x113f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00C1
        gbc.setState(0xab, 0xa24, 0x530, 0xd025, 0xcb00, 0x6abc, 0x0, 0x1);
        gbc.writeMem(0xab, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0xad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00C2
        gbc.setState(0x8e99, 0x373b, 0x9520, 0x3dcb, 0xb71c, 0x1bf6, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x373b);
        EXPECT(gbc.pc(), 0x8e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e99), 0xcb);
        EXPECT(gbc.readMem(0x8e9a), 0xe2);
        // CB E2 00C3
        gbc.setState(0x331, 0x9e0e, 0x4060, 0x90f5, 0xa7db, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0x331, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0x333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00C4
        gbc.setState(0x1fc4, 0x5139, 0x3b0, 0x3e9b, 0x9e61, 0x2688, 0x1, 0x1);
        gbc.writeMem(0x1fc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5139);
        EXPECT(gbc.pc(), 0x1fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00C5
        gbc.setState(0x9615, 0xcdc8, 0x1b50, 0x66e8, 0x9b81, 0xbc1, 0x1, 0x0);
        gbc.writeMem(0x9615, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcdc8);
        EXPECT(gbc.pc(), 0x9617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9615), 0xcb);
        EXPECT(gbc.readMem(0x9616), 0xe2);
        // CB E2 00C6
        gbc.setState(0x4a64, 0x1f08, 0x7ba0, 0x593e, 0xd882, 0x22e3, 0x1, 0x1);
        gbc.writeMem(0x4a64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1f08);
        EXPECT(gbc.pc(), 0x4a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00C7
        gbc.setState(0xc4aa, 0x71cb, 0xe710, 0xdc01, 0xb03f, 0x8637, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x71cb);
        EXPECT(gbc.pc(), 0xc4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4aa), 0xcb);
        EXPECT(gbc.readMem(0xc4ab), 0xe2);
        // CB E2 00C8
        gbc.setState(0x4c1c, 0x3d69, 0xa6d0, 0x7e96, 0x15d2, 0xc458, 0x0, 0x1);
        gbc.writeMem(0x4c1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3d69);
        EXPECT(gbc.pc(), 0x4c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00C9
        gbc.setState(0x581b, 0xc3ea, 0xa190, 0xb69b, 0xb952, 0x4275, 0x0, 0x0);
        gbc.writeMem(0x581b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc3ea);
        EXPECT(gbc.pc(), 0x581d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00CA
        gbc.setState(0x7e5b, 0xa6a, 0x2df0, 0x3471, 0x1fc6, 0x6f72, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa6a);
        EXPECT(gbc.pc(), 0x7e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00CB
        gbc.setState(0xb6cd, 0xf75, 0x5e20, 0x77f7, 0x89c1, 0x745c, 0x1, 0x1);
        gbc.writeMem(0xb6cd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf75);
        EXPECT(gbc.pc(), 0xb6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cd), 0xcb);
        EXPECT(gbc.readMem(0xb6ce), 0xe2);
        // CB E2 00CC
        gbc.setState(0x714e, 0x2747, 0xb3a0, 0x7250, 0x7049, 0x2112, 0x1, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2747);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00CD
        gbc.setState(0xb300, 0x71ef, 0x5350, 0x35e6, 0xbd35, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0xb300, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x71ef);
        EXPECT(gbc.pc(), 0xb302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb300), 0xcb);
        EXPECT(gbc.readMem(0xb301), 0xe2);
        // CB E2 00CE
        gbc.setState(0xee95, 0x9458, 0xd490, 0x79e2, 0x4e80, 0xd819, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9458);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee95), 0xcb);
        EXPECT(gbc.readMem(0xee96), 0xe2);
        // CB E2 00CF
        gbc.setState(0x5ec8, 0x2fe2, 0xcc00, 0x5889, 0xb0c7, 0x55ed, 0x0, 0x1);
        gbc.writeMem(0x5ec8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2fe2);
        EXPECT(gbc.pc(), 0x5eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00D0
        gbc.setState(0x5c32, 0xdad4, 0x89d0, 0x9f17, 0xff59, 0x43b7, 0x1, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdad4);
        EXPECT(gbc.pc(), 0x5c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00D1
        gbc.setState(0x5dda, 0xadb9, 0x9290, 0x6287, 0xe222, 0xf486, 0x0, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xadb9);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00D2
        gbc.setState(0xb1a3, 0x747c, 0x1f40, 0x75d, 0xa74f, 0x7c4e, 0x1, 0x0);
        gbc.writeMem(0xb1a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x747c);
        EXPECT(gbc.pc(), 0xb1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a3), 0xcb);
        EXPECT(gbc.readMem(0xb1a4), 0xe2);
        // CB E2 00D3
        gbc.setState(0x15e7, 0x3024, 0x7220, 0x2c5b, 0x3cd5, 0x4761, 0x0, 0x0);
        gbc.writeMem(0x15e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00D4
        gbc.setState(0x44af, 0xbfbc, 0x9960, 0x804d, 0xfcff, 0x5e34, 0x1, 0x0);
        gbc.writeMem(0x44af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbfbc);
        EXPECT(gbc.pc(), 0x44b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00D5
        gbc.setState(0xb99, 0xe897, 0x780, 0x6f04, 0x99b6, 0xfd90, 0x0, 0x1);
        gbc.writeMem(0xb99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe897);
        EXPECT(gbc.pc(), 0xb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00D7
        gbc.setState(0x5f48, 0xbb6d, 0x77b0, 0x8af3, 0x735a, 0xcb8e, 0x1, 0x1);
        gbc.writeMem(0x5f48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbb6d);
        EXPECT(gbc.pc(), 0x5f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00D8
        gbc.setState(0xb8af, 0xfd49, 0x6bd0, 0x2b8b, 0x16e1, 0xf8c6, 0x1, 0x0);
        gbc.writeMem(0xb8af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfd49);
        EXPECT(gbc.pc(), 0xb8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8af), 0xcb);
        EXPECT(gbc.readMem(0xb8b0), 0xe2);
        // CB E2 00D9
        gbc.setState(0xe6ea, 0xaf42, 0x6a50, 0xd971, 0xf451, 0x913e, 0x1, 0x1);
        gbc.writeMem(0xe6ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaf42);
        EXPECT(gbc.pc(), 0xe6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ea), 0xcb);
        EXPECT(gbc.readMem(0xe6eb), 0xe2);
        // CB E2 00DA
        gbc.setState(0x8fc, 0x64ba, 0x1940, 0x3797, 0x1f13, 0x287c, 0x1, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x64ba);
        EXPECT(gbc.pc(), 0x8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00DB
        gbc.setState(0x4c82, 0x3555, 0x7990, 0xe744, 0xabe1, 0x891, 0x1, 0x0);
        gbc.writeMem(0x4c82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3555);
        EXPECT(gbc.pc(), 0x4c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00DC
        gbc.setState(0xbba7, 0x4f3d, 0x9ed0, 0xdc5b, 0x6ba, 0x2919, 0x1, 0x1);
        gbc.writeMem(0xbba7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4f3d);
        EXPECT(gbc.pc(), 0xbba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba7), 0xcb);
        EXPECT(gbc.readMem(0xbba8), 0xe2);
        // CB E2 00DD
        gbc.setState(0x816a, 0x59d, 0x4140, 0xe3bc, 0x392c, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x59d);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816a), 0xcb);
        EXPECT(gbc.readMem(0x816b), 0xe2);
        // CB E2 00DE
        gbc.setState(0xb900, 0xaaa1, 0x7da0, 0xe2f0, 0x7740, 0xc9f0, 0x1, 0x1);
        gbc.writeMem(0xb900, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xaaa1);
        EXPECT(gbc.pc(), 0xb902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb900), 0xcb);
        EXPECT(gbc.readMem(0xb901), 0xe2);
        // CB E2 00DF
        gbc.setState(0xe953, 0x3b7a, 0x3970, 0xb0aa, 0x9cff, 0x8c71, 0x0, 0x0);
        gbc.writeMem(0xe953, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3b7a);
        EXPECT(gbc.pc(), 0xe955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe953), 0xcb);
        EXPECT(gbc.readMem(0xe954), 0xe2);
        // CB E2 00E0
        gbc.setState(0x3196, 0xe0a2, 0xf190, 0x8f81, 0xb8ae, 0x305b, 0x0, 0x0);
        gbc.writeMem(0x3196, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe0a2);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00E1
        gbc.setState(0xc7aa, 0x788e, 0x66a0, 0x4f9a, 0xe8cb, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0xc7aa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x788e);
        EXPECT(gbc.pc(), 0xc7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7aa), 0xcb);
        EXPECT(gbc.readMem(0xc7ab), 0xe2);
        // CB E2 00E2
        gbc.setState(0x59d1, 0x70fb, 0xbb70, 0xeefe, 0xc852, 0x47c2, 0x1, 0x0);
        gbc.writeMem(0x59d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00E3
        gbc.setState(0xe5b5, 0xe1ce, 0x62f0, 0x6e5b, 0x44b7, 0xcc3e, 0x1, 0x0);
        gbc.writeMem(0xe5b5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe1ce);
        EXPECT(gbc.pc(), 0xe5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b5), 0xcb);
        EXPECT(gbc.readMem(0xe5b6), 0xe2);
        // CB E2 00E4
        gbc.setState(0xd3a6, 0xa5ae, 0xb9a0, 0xc22c, 0x7865, 0x5c6f, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa5ae);
        EXPECT(gbc.pc(), 0xd3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a6), 0xcb);
        EXPECT(gbc.readMem(0xd3a7), 0xe2);
        // CB E2 00E5
        gbc.setState(0x9a12, 0xa197, 0x24d0, 0x54b4, 0x962a, 0x2159, 0x1, 0x0);
        gbc.writeMem(0x9a12, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa197);
        EXPECT(gbc.pc(), 0x9a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a12), 0xcb);
        EXPECT(gbc.readMem(0x9a13), 0xe2);
        // CB E2 00E6
        gbc.setState(0xa44c, 0xe11, 0xa0b0, 0x5e85, 0x12ef, 0xad0e, 0x0, 0x1);
        gbc.writeMem(0xa44c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe11);
        EXPECT(gbc.pc(), 0xa44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44c), 0xcb);
        EXPECT(gbc.readMem(0xa44d), 0xe2);
        // CB E2 00E7
        gbc.setState(0x15ad, 0x547f, 0x2af0, 0x4842, 0x841, 0x51dd, 0x1, 0x0);
        gbc.writeMem(0x15ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x547f);
        EXPECT(gbc.pc(), 0x15af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00E8
        gbc.setState(0x72ad, 0x2640, 0x5b40, 0x1826, 0xa628, 0x1ad5, 0x0, 0x0);
        gbc.writeMem(0x72ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2640);
        EXPECT(gbc.pc(), 0x72af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00E9
        gbc.setState(0x1361, 0xb54f, 0xed0, 0x719e, 0x62ef, 0xdd54, 0x0, 0x1);
        gbc.writeMem(0x1361, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0x1363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00EA
        gbc.setState(0x48eb, 0x1d4a, 0xb570, 0x1c33, 0xc5c6, 0x3117, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1d4a);
        EXPECT(gbc.pc(), 0x48ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00EB
        gbc.setState(0x12be, 0xc9c7, 0xe790, 0xdada, 0xdad2, 0x852c, 0x0, 0x0);
        gbc.writeMem(0x12be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc9c7);
        EXPECT(gbc.pc(), 0x12c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00ED
        gbc.setState(0x8b93, 0x8db8, 0xdcc0, 0x2f5e, 0x2ed2, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x8b93, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8db8);
        EXPECT(gbc.pc(), 0x8b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b93), 0xcb);
        EXPECT(gbc.readMem(0x8b94), 0xe2);
        // CB E2 00EE
        gbc.setState(0x7f6f, 0x2a6, 0x16a0, 0x59d, 0xae50, 0xc233, 0x1, 0x0);
        gbc.writeMem(0x7f6f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2a6);
        EXPECT(gbc.pc(), 0x7f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00F0
        gbc.setState(0xad20, 0xd1c4, 0xd220, 0x87a7, 0x6f06, 0x7363, 0x0, 0x1);
        gbc.writeMem(0xad20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd1c4);
        EXPECT(gbc.pc(), 0xad22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad20), 0xcb);
        EXPECT(gbc.readMem(0xad21), 0xe2);
        // CB E2 00F1
        gbc.setState(0xd896, 0xa48a, 0xe230, 0xf49f, 0x7378, 0xcbc0, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa48a);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd896), 0xcb);
        EXPECT(gbc.readMem(0xd897), 0xe2);
        // CB E2 00F2
        gbc.setState(0x8f54, 0xc3dc, 0x1c30, 0x43f0, 0x5de2, 0x76a5, 0x0, 0x0);
        gbc.writeMem(0x8f54, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc3dc);
        EXPECT(gbc.pc(), 0x8f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f54), 0xcb);
        EXPECT(gbc.readMem(0x8f55), 0xe2);
        // CB E2 00F3
        gbc.setState(0x3b30, 0xf3d0, 0x7a80, 0x36eb, 0x620b, 0xc7bb, 0x0, 0x0);
        gbc.writeMem(0x3b30, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf3d0);
        EXPECT(gbc.pc(), 0x3b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00F4
        gbc.setState(0x1337, 0x3e11, 0x1b50, 0x2237, 0xac03, 0x80af, 0x1, 0x1);
        gbc.writeMem(0x1337, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3e11);
        EXPECT(gbc.pc(), 0x1339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00F5
        gbc.setState(0x5410, 0x4807, 0x3a40, 0x6429, 0x457c, 0x2b8d, 0x1, 0x0);
        gbc.writeMem(0x5410, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4807);
        EXPECT(gbc.pc(), 0x5412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 00F6
        gbc.setState(0xd384, 0x9684, 0xc540, 0x6b7f, 0xcd09, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9684);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd384), 0xcb);
        EXPECT(gbc.readMem(0xd385), 0xe2);
        // CB E2 00F8
        gbc.setState(0x8644, 0xbb66, 0x9710, 0xe44b, 0x52cf, 0xea43, 0x0, 0x1);
        gbc.writeMem(0x8644, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbb66);
        EXPECT(gbc.pc(), 0x8646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8644), 0xcb);
        EXPECT(gbc.readMem(0x8645), 0xe2);
        // CB E2 00F9
        gbc.setState(0xc5ea, 0xf564, 0x9b60, 0xdc7a, 0x14fa, 0xe1d3, 0x1, 0x1);
        gbc.writeMem(0xc5ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf564);
        EXPECT(gbc.pc(), 0xc5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ea), 0xcb);
        EXPECT(gbc.readMem(0xc5eb), 0xe2);
        // CB E2 00FA
        gbc.setState(0xc96f, 0xa825, 0xe980, 0x37d3, 0xc7c2, 0x4400, 0x0, 0x1);
        gbc.writeMem(0xc96f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa825);
        EXPECT(gbc.pc(), 0xc971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96f), 0xcb);
        EXPECT(gbc.readMem(0xc970), 0xe2);
        // CB E2 00FB
        gbc.setState(0xafc7, 0xcd8c, 0xaab0, 0x26ee, 0x1a78, 0x524f, 0x0, 0x1);
        gbc.writeMem(0xafc7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcd8c);
        EXPECT(gbc.pc(), 0xafc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc7), 0xcb);
        EXPECT(gbc.readMem(0xafc8), 0xe2);
        // CB E2 00FC
        gbc.setState(0xe899, 0x2fb6, 0xf5a0, 0x81b9, 0x20ba, 0x492f, 0x1, 0x0);
        gbc.writeMem(0xe899, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2fb6);
        EXPECT(gbc.pc(), 0xe89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe899), 0xcb);
        EXPECT(gbc.readMem(0xe89a), 0xe2);
        // CB E2 00FD
        gbc.setState(0x118d, 0x7ab6, 0x8350, 0x6cb0, 0x179, 0x1318, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7ab6);
        EXPECT(gbc.pc(), 0x118f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 00FE
        gbc.setState(0xa865, 0x3d1a, 0xcbc0, 0x6989, 0x8b76, 0x246c, 0x0, 0x1);
        gbc.writeMem(0xa865, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3d1a);
        EXPECT(gbc.pc(), 0xa867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa865), 0xcb);
        EXPECT(gbc.readMem(0xa866), 0xe2);
        // CB E2 00FF
        gbc.setState(0xeaa6, 0x39de, 0x83b0, 0x718c, 0xb432, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xeaa6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x39de);
        EXPECT(gbc.pc(), 0xeaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa6), 0xcb);
        EXPECT(gbc.readMem(0xeaa7), 0xe2);
        // CB E2 0100
        gbc.setState(0x5a3f, 0x2755, 0x8ef0, 0x598, 0xedd4, 0x3e99, 0x0, 0x0);
        gbc.writeMem(0x5a3f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2755);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0101
        gbc.setState(0x8dd3, 0xb5e, 0xbfe0, 0xdfd6, 0xd040, 0xa612, 0x1, 0x0);
        gbc.writeMem(0x8dd3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb5e);
        EXPECT(gbc.pc(), 0x8dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd3), 0xcb);
        EXPECT(gbc.readMem(0x8dd4), 0xe2);
        // CB E2 0102
        gbc.setState(0x549c, 0xda8f, 0xbb90, 0xd8b8, 0x6a44, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x549c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xda8f);
        EXPECT(gbc.pc(), 0x549e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0103
        gbc.setState(0x84b9, 0x3bd4, 0xa820, 0xe27c, 0x8ca, 0x93e8, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3bd4);
        EXPECT(gbc.pc(), 0x84bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b9), 0xcb);
        EXPECT(gbc.readMem(0x84ba), 0xe2);
        // CB E2 0104
        gbc.setState(0xb338, 0xfd6, 0xa960, 0x1816, 0xf61f, 0x1fd4, 0x0, 0x1);
        gbc.writeMem(0xb338, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfd6);
        EXPECT(gbc.pc(), 0xb33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb338), 0xcb);
        EXPECT(gbc.readMem(0xb339), 0xe2);
        // CB E2 0105
        gbc.setState(0xcf86, 0x7e25, 0xce40, 0x6d76, 0x8747, 0x168d, 0x0, 0x0);
        gbc.writeMem(0xcf86, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0xcf88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf86), 0xcb);
        EXPECT(gbc.readMem(0xcf87), 0xe2);
        // CB E2 0106
        gbc.setState(0x8c1a, 0xc7a4, 0x67e0, 0x57d8, 0x7d71, 0xba19, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc7a4);
        EXPECT(gbc.pc(), 0x8c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c1a), 0xcb);
        EXPECT(gbc.readMem(0x8c1b), 0xe2);
        // CB E2 0107
        gbc.setState(0x2735, 0x8c0, 0x93e0, 0x8984, 0x6a26, 0x51f3, 0x1, 0x1);
        gbc.writeMem(0x2735, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8c0);
        EXPECT(gbc.pc(), 0x2737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0108
        gbc.setState(0x5c48, 0x82e1, 0x85f0, 0x4b73, 0xad78, 0x4931, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x82e1);
        EXPECT(gbc.pc(), 0x5c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0109
        gbc.setState(0x8efb, 0xa4cb, 0x8420, 0x3890, 0xbe69, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x8efb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa4cb);
        EXPECT(gbc.pc(), 0x8efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efb), 0xcb);
        EXPECT(gbc.readMem(0x8efc), 0xe2);
        // CB E2 010A
        gbc.setState(0x7e58, 0x7bf2, 0xd130, 0x6931, 0x35d1, 0xda0b, 0x1, 0x0);
        gbc.writeMem(0x7e58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7bf2);
        EXPECT(gbc.pc(), 0x7e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 010B
        gbc.setState(0xb261, 0xf0e7, 0xd590, 0x5e4f, 0x42cd, 0x7df9, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf0e7);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb261), 0xcb);
        EXPECT(gbc.readMem(0xb262), 0xe2);
        // CB E2 010C
        gbc.setState(0xef87, 0x6f85, 0xd350, 0x4d3e, 0x8c40, 0x3dab, 0x0, 0x0);
        gbc.writeMem(0xef87, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6f85);
        EXPECT(gbc.pc(), 0xef89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef87), 0xcb);
        EXPECT(gbc.readMem(0xef88), 0xe2);
        // CB E2 010D
        gbc.setState(0x32bf, 0x1396, 0x1dd0, 0xd499, 0x9416, 0xb802, 0x1, 0x0);
        gbc.writeMem(0x32bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0x32c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 010E
        gbc.setState(0xd66a, 0x89ac, 0xb660, 0xf636, 0x3345, 0x2fb4, 0x1, 0x0);
        gbc.writeMem(0xd66a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x89ac);
        EXPECT(gbc.pc(), 0xd66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66a), 0xcb);
        EXPECT(gbc.readMem(0xd66b), 0xe2);
        // CB E2 010F
        gbc.setState(0x61e6, 0xb4c5, 0xff30, 0xa4be, 0x6ae0, 0xf9d3, 0x0, 0x0);
        gbc.writeMem(0x61e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb4c5);
        EXPECT(gbc.pc(), 0x61e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0110
        gbc.setState(0x2ee7, 0xe513, 0xa1e0, 0xa3d8, 0x3930, 0xf66, 0x0, 0x0);
        gbc.writeMem(0x2ee7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe513);
        EXPECT(gbc.pc(), 0x2ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0111
        gbc.setState(0xcb8a, 0xd2b2, 0x7d90, 0xcff8, 0x1f70, 0xf6c5, 0x1, 0x0);
        gbc.writeMem(0xcb8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd2b2);
        EXPECT(gbc.pc(), 0xcb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8a), 0xcb);
        EXPECT(gbc.readMem(0xcb8b), 0xe2);
        // CB E2 0112
        gbc.setState(0x8124, 0x727f, 0x73e0, 0xd3e6, 0xcffd, 0xa94a, 0x1, 0x0);
        gbc.writeMem(0x8124, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x727f);
        EXPECT(gbc.pc(), 0x8126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8124), 0xcb);
        EXPECT(gbc.readMem(0x8125), 0xe2);
        // CB E2 0113
        gbc.setState(0x970f, 0x4816, 0x9af0, 0xba54, 0xecb8, 0x48e1, 0x1, 0x1);
        gbc.writeMem(0x970f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4816);
        EXPECT(gbc.pc(), 0x9711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970f), 0xcb);
        EXPECT(gbc.readMem(0x9710), 0xe2);
        // CB E2 0114
        gbc.setState(0xc326, 0x1a3e, 0x8a90, 0xd1ec, 0x7d4f, 0x88b9, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1a3e);
        EXPECT(gbc.pc(), 0xc328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc326), 0xcb);
        EXPECT(gbc.readMem(0xc327), 0xe2);
        // CB E2 0115
        gbc.setState(0xaee7, 0x447d, 0x1f90, 0x2e06, 0xf0fc, 0x86ab, 0x0, 0x1);
        gbc.writeMem(0xaee7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x447d);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0xe2);
        // CB E2 0116
        gbc.setState(0xe4bd, 0xe76c, 0x4640, 0x7ff2, 0x9d74, 0x3183, 0x1, 0x0);
        gbc.writeMem(0xe4bd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe76c);
        EXPECT(gbc.pc(), 0xe4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4bd), 0xcb);
        EXPECT(gbc.readMem(0xe4be), 0xe2);
        // CB E2 0117
        gbc.setState(0x8b14, 0x785a, 0xcd40, 0x5f6, 0xbd49, 0xb4b6, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x785a);
        EXPECT(gbc.pc(), 0x8b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b14), 0xcb);
        EXPECT(gbc.readMem(0x8b15), 0xe2);
        // CB E2 0118
        gbc.setState(0xd3f7, 0x524, 0x17f0, 0x75be, 0xd2b0, 0x278d, 0x0, 0x1);
        gbc.writeMem(0xd3f7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x524);
        EXPECT(gbc.pc(), 0xd3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f7), 0xcb);
        EXPECT(gbc.readMem(0xd3f8), 0xe2);
        // CB E2 0119
        gbc.setState(0x2b1, 0x272a, 0xe9b0, 0xcd4c, 0x4959, 0x57ed, 0x1, 0x1);
        gbc.writeMem(0x2b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x272a);
        EXPECT(gbc.pc(), 0x2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 011A
        gbc.setState(0x368a, 0x3137, 0x8f90, 0x2128, 0x1863, 0x9b04, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3137);
        EXPECT(gbc.pc(), 0x368c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 011B
        gbc.setState(0x7825, 0xdace, 0x2e60, 0x901e, 0x5b6e, 0xfdba, 0x0, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdace);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 011C
        gbc.setState(0xbf6d, 0x3001, 0xdec0, 0xe82, 0x7a3c, 0xdf9d, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3001);
        EXPECT(gbc.pc(), 0xbf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6d), 0xcb);
        EXPECT(gbc.readMem(0xbf6e), 0xe2);
        // CB E2 011D
        gbc.setState(0xccf7, 0xfaa8, 0x9b20, 0x5f87, 0xd0b8, 0x1cc8, 0x1, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfaa8);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0xe2);
        // CB E2 011F
        gbc.setState(0xb25c, 0x61e, 0x1960, 0xb6f, 0x34da, 0x45d5, 0x0, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x61e);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25c), 0xcb);
        EXPECT(gbc.readMem(0xb25d), 0xe2);
        // CB E2 0120
        gbc.setState(0x4692, 0x75ed, 0xf570, 0x4523, 0x4936, 0xe6d7, 0x1, 0x1);
        gbc.writeMem(0x4692, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x75ed);
        EXPECT(gbc.pc(), 0x4694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0121
        gbc.setState(0xedf0, 0x1030, 0x3820, 0x9830, 0x3167, 0x37c9, 0x1, 0x0);
        gbc.writeMem(0xedf0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1030);
        EXPECT(gbc.pc(), 0xedf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf0), 0xcb);
        EXPECT(gbc.readMem(0xedf1), 0xe2);
        // CB E2 0122
        gbc.setState(0x202a, 0x99de, 0x7a10, 0xb0e8, 0xc6fc, 0xb652, 0x1, 0x0);
        gbc.writeMem(0x202a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x99de);
        EXPECT(gbc.pc(), 0x202c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0123
        gbc.setState(0x5f04, 0xc3ae, 0x2330, 0x3fc1, 0x7eca, 0x56b5, 0x1, 0x1);
        gbc.writeMem(0x5f04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc3ae);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0124
        gbc.setState(0x4bf6, 0x22a7, 0x1b50, 0x848d, 0x40fe, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x4bf6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x22a7);
        EXPECT(gbc.pc(), 0x4bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0125
        gbc.setState(0x6e37, 0x4fa7, 0xfaa0, 0xf6fa, 0xac48, 0xf22b, 0x0, 0x0);
        gbc.writeMem(0x6e37, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4fa7);
        EXPECT(gbc.pc(), 0x6e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0126
        gbc.setState(0x32e4, 0xa305, 0x68f0, 0x85a7, 0xb519, 0x1b, 0x0, 0x1);
        gbc.writeMem(0x32e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa305);
        EXPECT(gbc.pc(), 0x32e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0127
        gbc.setState(0x5e51, 0xcbc9, 0xdbf0, 0x841a, 0x71db, 0xcb3a, 0x1, 0x1);
        gbc.writeMem(0x5e51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcbc9);
        EXPECT(gbc.pc(), 0x5e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0128
        gbc.setState(0x711d, 0xe02d, 0x1b80, 0x9929, 0xce61, 0xf6d4, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe02d);
        EXPECT(gbc.pc(), 0x711f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0129
        gbc.setState(0x24a8, 0xa6be, 0x56d0, 0x6249, 0x192e, 0xaebc, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa6be);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 012B
        gbc.setState(0xd1a, 0x4f03, 0xfc90, 0x431a, 0xfde4, 0xbb9d, 0x1, 0x1);
        gbc.writeMem(0xd1a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4f03);
        EXPECT(gbc.pc(), 0xd1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 012C
        gbc.setState(0xa43d, 0xf129, 0x3780, 0xc841, 0xa7d1, 0xb19b, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0xa43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43d), 0xcb);
        EXPECT(gbc.readMem(0xa43e), 0xe2);
        // CB E2 012D
        gbc.setState(0x69ca, 0x3b89, 0xb160, 0xe1ee, 0xdd9a, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3b89);
        EXPECT(gbc.pc(), 0x69cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 012E
        gbc.setState(0x45e4, 0xe87c, 0x35c0, 0x46b8, 0x4453, 0xa88d, 0x1, 0x0);
        gbc.writeMem(0x45e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0x45e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 012F
        gbc.setState(0xc523, 0x2075, 0x84d0, 0x3c4c, 0xc5d, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xc523, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2075);
        EXPECT(gbc.pc(), 0xc525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc523), 0xcb);
        EXPECT(gbc.readMem(0xc524), 0xe2);
        // CB E2 0130
        gbc.setState(0x3bbf, 0x8ec7, 0x4470, 0x8baf, 0xaf5e, 0x9156, 0x0, 0x0);
        gbc.writeMem(0x3bbf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8ec7);
        EXPECT(gbc.pc(), 0x3bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0132
        gbc.setState(0x4eff, 0x9781, 0xf000, 0xa229, 0x24fc, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0x4eff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9781);
        EXPECT(gbc.pc(), 0x4f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0134
        gbc.setState(0x16dc, 0x125, 0x97f0, 0x350e, 0x5aa, 0x51ac, 0x0, 0x1);
        gbc.writeMem(0x16dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0x16de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0135
        gbc.setState(0x62e0, 0x6080, 0xd7c0, 0x5dea, 0x97c6, 0x1223, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6080);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0136
        gbc.setState(0x2022, 0x1f4a, 0x8730, 0x5b58, 0xfc83, 0xbe60, 0x0, 0x0);
        gbc.writeMem(0x2022, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1f4a);
        EXPECT(gbc.pc(), 0x2024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0137
        gbc.setState(0x1dc4, 0xfaa6, 0x58d0, 0x5400, 0x5251, 0xf66c, 0x0, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfaa6);
        EXPECT(gbc.pc(), 0x1dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0138
        gbc.setState(0xd608, 0xf297, 0x91a0, 0x9852, 0x8268, 0x5941, 0x1, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf297);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0xe2);
        // CB E2 0139
        gbc.setState(0x49cd, 0x1f5e, 0x4a40, 0xcd5f, 0x8c98, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0x49cd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1f5e);
        EXPECT(gbc.pc(), 0x49cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 013A
        gbc.setState(0x7371, 0xc75a, 0x6760, 0xdf39, 0x9c76, 0x98e6, 0x0, 0x0);
        gbc.writeMem(0x7371, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 013B
        gbc.setState(0x6a92, 0x1c01, 0x6e60, 0xf47b, 0xfe65, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0x6a92, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1c01);
        EXPECT(gbc.pc(), 0x6a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 013C
        gbc.setState(0x1019, 0x33c8, 0xf420, 0x3c3a, 0x63ee, 0xb068, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x101b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 013D
        gbc.setState(0x9f87, 0xf8af, 0x92a0, 0x18c6, 0x326b, 0x9ed7, 0x1, 0x1);
        gbc.writeMem(0x9f87, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf8af);
        EXPECT(gbc.pc(), 0x9f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f87), 0xcb);
        EXPECT(gbc.readMem(0x9f88), 0xe2);
        // CB E2 013E
        gbc.setState(0xa892, 0x92e4, 0x2c50, 0x6c31, 0xeade, 0x4a81, 0x0, 0x1);
        gbc.writeMem(0xa892, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x92e4);
        EXPECT(gbc.pc(), 0xa894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa892), 0xcb);
        EXPECT(gbc.readMem(0xa893), 0xe2);
        // CB E2 013F
        gbc.setState(0x7e95, 0x3197, 0x9250, 0xdd7b, 0xc2aa, 0xaf7b, 0x0, 0x0);
        gbc.writeMem(0x7e95, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3197);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0140
        gbc.setState(0xa2af, 0xd26e, 0x550, 0x4b59, 0xe2b9, 0xe071, 0x1, 0x1);
        gbc.writeMem(0xa2af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd26e);
        EXPECT(gbc.pc(), 0xa2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2af), 0xcb);
        EXPECT(gbc.readMem(0xa2b0), 0xe2);
        // CB E2 0141
        gbc.setState(0x3ca2, 0x940b, 0x11c0, 0xd8e0, 0x130f, 0xb67d, 0x1, 0x0);
        gbc.writeMem(0x3ca2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x940b);
        EXPECT(gbc.pc(), 0x3ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0142
        gbc.setState(0x20e3, 0xa422, 0xf320, 0x12c8, 0x20ff, 0x33be, 0x0, 0x1);
        gbc.writeMem(0x20e3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa422);
        EXPECT(gbc.pc(), 0x20e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0143
        gbc.setState(0xb2d, 0xe84a, 0x3f10, 0x5e5e, 0xa844, 0x7a03, 0x1, 0x0);
        gbc.writeMem(0xb2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe84a);
        EXPECT(gbc.pc(), 0xb2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0145
        gbc.setState(0xeccd, 0x669c, 0x8eb0, 0x7123, 0x2ca0, 0xedaf, 0x0, 0x1);
        gbc.writeMem(0xeccd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x669c);
        EXPECT(gbc.pc(), 0xeccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccd), 0xcb);
        EXPECT(gbc.readMem(0xecce), 0xe2);
        // CB E2 0146
        gbc.setState(0x7ac3, 0x731e, 0x15d0, 0xb3fe, 0x6ca5, 0x3566, 0x1, 0x1);
        gbc.writeMem(0x7ac3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x731e);
        EXPECT(gbc.pc(), 0x7ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0147
        gbc.setState(0x6137, 0xdd32, 0x6c30, 0xb98f, 0x383, 0x4680, 0x1, 0x1);
        gbc.writeMem(0x6137, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdd32);
        EXPECT(gbc.pc(), 0x6139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0148
        gbc.setState(0x8189, 0xd766, 0xb620, 0x4f0b, 0x26bf, 0x7f36, 0x0, 0x1);
        gbc.writeMem(0x8189, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd766);
        EXPECT(gbc.pc(), 0x818b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8189), 0xcb);
        EXPECT(gbc.readMem(0x818a), 0xe2);
        // CB E2 0149
        gbc.setState(0x170a, 0x1b15, 0x96d0, 0x5063, 0x9b74, 0x9973, 0x1, 0x0);
        gbc.writeMem(0x170a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1b15);
        EXPECT(gbc.pc(), 0x170c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 014A
        gbc.setState(0x658, 0x4ed2, 0x6990, 0x247, 0x902b, 0x973, 0x1, 0x1);
        gbc.writeMem(0x658, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4ed2);
        EXPECT(gbc.pc(), 0x65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 014B
        gbc.setState(0x71af, 0xfa6f, 0xe5e0, 0xf1b, 0x7151, 0x41c9, 0x1, 0x1);
        gbc.writeMem(0x71af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfa6f);
        EXPECT(gbc.pc(), 0x71b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 014D
        gbc.setState(0xca6d, 0xac80, 0x1be0, 0x6b17, 0x93e3, 0xe106, 0x1, 0x1);
        gbc.writeMem(0xca6d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xac80);
        EXPECT(gbc.pc(), 0xca6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca6d), 0xcb);
        EXPECT(gbc.readMem(0xca6e), 0xe2);
        // CB E2 014E
        gbc.setState(0x3dcf, 0xb672, 0x2aa0, 0x3b62, 0xce2b, 0x3488, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb672);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 014F
        gbc.setState(0xbdd1, 0xa675, 0xd140, 0xeccf, 0x278a, 0xad01, 0x0, 0x1);
        gbc.writeMem(0xbdd1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa675);
        EXPECT(gbc.pc(), 0xbdd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd1), 0xcb);
        EXPECT(gbc.readMem(0xbdd2), 0xe2);
        // CB E2 0150
        gbc.setState(0x1ae, 0x3583, 0x3e80, 0x16cd, 0x316f, 0xe935, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3583);
        EXPECT(gbc.pc(), 0x1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0151
        gbc.setState(0xb5ec, 0xbb34, 0xca20, 0xd67e, 0xc88e, 0x528, 0x1, 0x1);
        gbc.writeMem(0xb5ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0xb5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ec), 0xcb);
        EXPECT(gbc.readMem(0xb5ed), 0xe2);
        // CB E2 0152
        gbc.setState(0x44cf, 0x715c, 0x6f10, 0x6a5c, 0xa273, 0xac81, 0x1, 0x0);
        gbc.writeMem(0x44cf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x715c);
        EXPECT(gbc.pc(), 0x44d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0153
        gbc.setState(0xbb59, 0xf722, 0x9170, 0xddaf, 0x8f71, 0xff90, 0x0, 0x0);
        gbc.writeMem(0xbb59, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf722);
        EXPECT(gbc.pc(), 0xbb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0xcb);
        EXPECT(gbc.readMem(0xbb5a), 0xe2);
        // CB E2 0154
        gbc.setState(0x7f66, 0x3c78, 0xc100, 0x6ee6, 0x4a83, 0x985c, 0x0, 0x1);
        gbc.writeMem(0x7f66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3c78);
        EXPECT(gbc.pc(), 0x7f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0155
        gbc.setState(0x26b3, 0x1231, 0xdc00, 0x732b, 0x41d6, 0xe551, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1231);
        EXPECT(gbc.pc(), 0x26b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0156
        gbc.setState(0x4c2a, 0xa63b, 0x7b10, 0x9cb0, 0x2f2b, 0xf592, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa63b);
        EXPECT(gbc.pc(), 0x4c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0157
        gbc.setState(0xb9fc, 0x2086, 0xec30, 0x138c, 0xd685, 0xc022, 0x1, 0x0);
        gbc.writeMem(0xb9fc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2086);
        EXPECT(gbc.pc(), 0xb9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fc), 0xcb);
        EXPECT(gbc.readMem(0xb9fd), 0xe2);
        // CB E2 0158
        gbc.setState(0xc791, 0xd1a7, 0x6500, 0x3442, 0x61a2, 0x730f, 0x0, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd1a7);
        EXPECT(gbc.pc(), 0xc793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc791), 0xcb);
        EXPECT(gbc.readMem(0xc792), 0xe2);
        // CB E2 0159
        gbc.setState(0x4278, 0x4f85, 0x270, 0xc5ad, 0x6cfb, 0xa9d5, 0x1, 0x0);
        gbc.writeMem(0x4278, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4f85);
        EXPECT(gbc.pc(), 0x427a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 015A
        gbc.setState(0x77e5, 0xc32, 0x5bd0, 0xd80, 0x786, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc32);
        EXPECT(gbc.pc(), 0x77e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 015B
        gbc.setState(0x5b26, 0x373e, 0x8730, 0x298e, 0x5f8f, 0x14b2, 0x0, 0x1);
        gbc.writeMem(0x5b26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x373e);
        EXPECT(gbc.pc(), 0x5b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 015C
        gbc.setState(0x474c, 0xb6e2, 0x9590, 0x3cc1, 0xcc88, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0x474c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb6e2);
        EXPECT(gbc.pc(), 0x474e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 015D
        gbc.setState(0x6f1e, 0xb516, 0x4a40, 0x2702, 0x290e, 0x2f9a, 0x0, 0x1);
        gbc.writeMem(0x6f1e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb516);
        EXPECT(gbc.pc(), 0x6f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 015E
        gbc.setState(0xe20b, 0xf80, 0x3b50, 0x7940, 0xeefb, 0xea6c, 0x0, 0x1);
        gbc.writeMem(0xe20b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf80);
        EXPECT(gbc.pc(), 0xe20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe20b), 0xcb);
        EXPECT(gbc.readMem(0xe20c), 0xe2);
        // CB E2 015F
        gbc.setState(0xdb3a, 0x963b, 0xb620, 0x9af5, 0xd13a, 0x7271, 0x0, 0x0);
        gbc.writeMem(0xdb3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x963b);
        EXPECT(gbc.pc(), 0xdb3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3a), 0xcb);
        EXPECT(gbc.readMem(0xdb3b), 0xe2);
        // CB E2 0160
        gbc.setState(0x4bc, 0x8a11, 0x69b0, 0x9046, 0x7874, 0xc27, 0x0, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8a11);
        EXPECT(gbc.pc(), 0x4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0161
        gbc.setState(0xabf6, 0x77f, 0x9720, 0xd836, 0x260a, 0x5764, 0x0, 0x1);
        gbc.writeMem(0xabf6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x77f);
        EXPECT(gbc.pc(), 0xabf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf6), 0xcb);
        EXPECT(gbc.readMem(0xabf7), 0xe2);
        // CB E2 0162
        gbc.setState(0x8ac8, 0x14ef, 0xf5c0, 0x7e00, 0xd774, 0xbb43, 0x1, 0x1);
        gbc.writeMem(0x8ac8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x14ef);
        EXPECT(gbc.pc(), 0x8aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac8), 0xcb);
        EXPECT(gbc.readMem(0x8ac9), 0xe2);
        // CB E2 0163
        gbc.setState(0xba17, 0x2e16, 0x8410, 0x9f15, 0xac3, 0x6688, 0x0, 0x1);
        gbc.writeMem(0xba17, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2e16);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba17), 0xcb);
        EXPECT(gbc.readMem(0xba18), 0xe2);
        // CB E2 0164
        gbc.setState(0x1a19, 0x51d8, 0x71c0, 0xd202, 0x39a6, 0xe088, 0x0, 0x1);
        gbc.writeMem(0x1a19, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x51d8);
        EXPECT(gbc.pc(), 0x1a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0165
        gbc.setState(0xe041, 0x64e8, 0xde50, 0xccf4, 0x2c61, 0x50bf, 0x1, 0x0);
        gbc.writeMem(0xe041, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x64e8);
        EXPECT(gbc.pc(), 0xe043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe041), 0xcb);
        EXPECT(gbc.readMem(0xe042), 0xe2);
        // CB E2 0166
        gbc.setState(0xa4a0, 0x14db, 0x1810, 0x9ed6, 0xb52a, 0x2109, 0x1, 0x0);
        gbc.writeMem(0xa4a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x14db);
        EXPECT(gbc.pc(), 0xa4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a0), 0xcb);
        EXPECT(gbc.readMem(0xa4a1), 0xe2);
        // CB E2 0167
        gbc.setState(0xbd64, 0x8b06, 0x2d20, 0xeb16, 0x5d0a, 0x59a7, 0x1, 0x0);
        gbc.writeMem(0xbd64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8b06);
        EXPECT(gbc.pc(), 0xbd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd64), 0xcb);
        EXPECT(gbc.readMem(0xbd65), 0xe2);
        // CB E2 0168
        gbc.setState(0x81bb, 0x1db8, 0xae60, 0x1daa, 0x9fa7, 0x8694, 0x0, 0x1);
        gbc.writeMem(0x81bb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1db8);
        EXPECT(gbc.pc(), 0x81bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81bb), 0xcb);
        EXPECT(gbc.readMem(0x81bc), 0xe2);
        // CB E2 0169
        gbc.setState(0xa7f9, 0xb8db, 0xbe10, 0xcdf9, 0x4b8f, 0x902c, 0x0, 0x1);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb8db);
        EXPECT(gbc.pc(), 0xa7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f9), 0xcb);
        EXPECT(gbc.readMem(0xa7fa), 0xe2);
        // CB E2 016A
        gbc.setState(0xd255, 0x7ccd, 0xae40, 0xf829, 0xfe5c, 0xe539, 0x0, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7ccd);
        EXPECT(gbc.pc(), 0xd257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd255), 0xcb);
        EXPECT(gbc.readMem(0xd256), 0xe2);
        // CB E2 016B
        gbc.setState(0xc9ca, 0x2aa9, 0xd4b0, 0x70ed, 0x8d33, 0x6bd6, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2aa9);
        EXPECT(gbc.pc(), 0xc9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ca), 0xcb);
        EXPECT(gbc.readMem(0xc9cb), 0xe2);
        // CB E2 016C
        gbc.setState(0x929, 0x88a7, 0x7c00, 0xb36c, 0xfde3, 0xd7d8, 0x1, 0x0);
        gbc.writeMem(0x929, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x88a7);
        EXPECT(gbc.pc(), 0x92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 016D
        gbc.setState(0x1656, 0xcdc1, 0xf6c0, 0x75f5, 0xb2a8, 0x31a3, 0x1, 0x1);
        gbc.writeMem(0x1656, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x1658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 016E
        gbc.setState(0x46d2, 0xd7e5, 0x2910, 0xc773, 0x1676, 0x7981, 0x0, 0x0);
        gbc.writeMem(0x46d2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd7e5);
        EXPECT(gbc.pc(), 0x46d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 016F
        gbc.setState(0x1237, 0x91ef, 0xae60, 0xbf4c, 0xb97e, 0x9e5d, 0x0, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x91ef);
        EXPECT(gbc.pc(), 0x1239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0171
        gbc.setState(0x8dfa, 0x6838, 0xc2b0, 0x6b28, 0xff4, 0xf691, 0x0, 0x0);
        gbc.writeMem(0x8dfa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6838);
        EXPECT(gbc.pc(), 0x8dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfa), 0xcb);
        EXPECT(gbc.readMem(0x8dfb), 0xe2);
        // CB E2 0172
        gbc.setState(0xb492, 0xb321, 0x6500, 0xd820, 0x93fa, 0xfcd2, 0x1, 0x1);
        gbc.writeMem(0xb492, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb321);
        EXPECT(gbc.pc(), 0xb494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb492), 0xcb);
        EXPECT(gbc.readMem(0xb493), 0xe2);
        // CB E2 0173
        gbc.setState(0x3ed9, 0xf4c0, 0xfab0, 0xf36f, 0xf8af, 0x373, 0x0, 0x0);
        gbc.writeMem(0x3ed9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf4c0);
        EXPECT(gbc.pc(), 0x3edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0174
        gbc.setState(0x9a32, 0x34db, 0x6210, 0x38c, 0xe83, 0xf88d, 0x0, 0x0);
        gbc.writeMem(0x9a32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x34db);
        EXPECT(gbc.pc(), 0x9a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a32), 0xcb);
        EXPECT(gbc.readMem(0x9a33), 0xe2);
        // CB E2 0175
        gbc.setState(0x54b2, 0xf702, 0x5e20, 0xe1ff, 0x301b, 0x439f, 0x0, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0x54b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0176
        gbc.setState(0x3809, 0x1ef9, 0x3550, 0x39e8, 0xd2f2, 0xca2a, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1ef9);
        EXPECT(gbc.pc(), 0x380b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0177
        gbc.setState(0xe83, 0x5a6a, 0x8370, 0xcc6f, 0x31e, 0xe87d, 0x1, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5a6a);
        EXPECT(gbc.pc(), 0xe85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0178
        gbc.setState(0xcf86, 0xf3ea, 0x1f50, 0x72ee, 0xee82, 0x5d10, 0x1, 0x1);
        gbc.writeMem(0xcf86, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf3ea);
        EXPECT(gbc.pc(), 0xcf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf86), 0xcb);
        EXPECT(gbc.readMem(0xcf87), 0xe2);
        // CB E2 0179
        gbc.setState(0xdf01, 0xaba6, 0xcb40, 0xaf5e, 0x852e, 0x3105, 0x1, 0x0);
        gbc.writeMem(0xdf01, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaba6);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf01), 0xcb);
        EXPECT(gbc.readMem(0xdf02), 0xe2);
        // CB E2 017A
        gbc.setState(0x9b14, 0xf916, 0x4df0, 0xf730, 0x2c23, 0xa0c5, 0x1, 0x0);
        gbc.writeMem(0x9b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf916);
        EXPECT(gbc.pc(), 0x9b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b14), 0xcb);
        EXPECT(gbc.readMem(0x9b15), 0xe2);
        // CB E2 017B
        gbc.setState(0x1842, 0x855e, 0xe50, 0x2a44, 0x1fb1, 0x2944, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x855e);
        EXPECT(gbc.pc(), 0x1844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 017C
        gbc.setState(0xcaf8, 0x8ad9, 0xab10, 0xa64f, 0xbbf7, 0x9a7d, 0x0, 0x0);
        gbc.writeMem(0xcaf8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8ad9);
        EXPECT(gbc.pc(), 0xcafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf8), 0xcb);
        EXPECT(gbc.readMem(0xcaf9), 0xe2);
        // CB E2 017D
        gbc.setState(0x9427, 0xa1b1, 0xd2b0, 0x5ec9, 0xb57, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0x9427, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa1b1);
        EXPECT(gbc.pc(), 0x9429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9427), 0xcb);
        EXPECT(gbc.readMem(0x9428), 0xe2);
        // CB E2 017E
        gbc.setState(0x946b, 0x4f2d, 0x82b0, 0xf5a0, 0xda18, 0x26bf, 0x1, 0x1);
        gbc.writeMem(0x946b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4f2d);
        EXPECT(gbc.pc(), 0x946d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946b), 0xcb);
        EXPECT(gbc.readMem(0x946c), 0xe2);
        // CB E2 017F
        gbc.setState(0x624a, 0xe936, 0x8e40, 0x7411, 0x9bc4, 0xe0ac, 0x0, 0x1);
        gbc.writeMem(0x624a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe936);
        EXPECT(gbc.pc(), 0x624c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0180
        gbc.setState(0x3c27, 0xe81a, 0x1b0, 0x7003, 0xc7c2, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0x3c27, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe81a);
        EXPECT(gbc.pc(), 0x3c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0181
        gbc.setState(0x5882, 0xe0d4, 0xb250, 0x7cc9, 0xa02d, 0x3993, 0x0, 0x1);
        gbc.writeMem(0x5882, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe0d4);
        EXPECT(gbc.pc(), 0x5884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0182
        gbc.setState(0x251b, 0xa23, 0xa370, 0x8040, 0x1cb0, 0x9162, 0x1, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa23);
        EXPECT(gbc.pc(), 0x251d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0183
        gbc.setState(0x5d81, 0xcae3, 0x3100, 0x6b26, 0xf1b1, 0x843d, 0x0, 0x0);
        gbc.writeMem(0x5d81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcae3);
        EXPECT(gbc.pc(), 0x5d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0184
        gbc.setState(0x84c0, 0x9195, 0xdda0, 0x4038, 0xdcfc, 0xed73, 0x1, 0x1);
        gbc.writeMem(0x84c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9195);
        EXPECT(gbc.pc(), 0x84c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c0), 0xcb);
        EXPECT(gbc.readMem(0x84c1), 0xe2);
        // CB E2 0185
        gbc.setState(0x54d8, 0xe06b, 0x5340, 0x1410, 0xbf92, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe06b);
        EXPECT(gbc.pc(), 0x54da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0186
        gbc.setState(0x9ece, 0xc18c, 0x1e30, 0xa34d, 0x8a42, 0x2950, 0x1, 0x1);
        gbc.writeMem(0x9ece, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc18c);
        EXPECT(gbc.pc(), 0x9ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ece), 0xcb);
        EXPECT(gbc.readMem(0x9ecf), 0xe2);
        // CB E2 0187
        gbc.setState(0x693d, 0x197, 0xcc20, 0xbb8a, 0x9d5e, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x693d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x197);
        EXPECT(gbc.pc(), 0x693f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0188
        gbc.setState(0x26b, 0x7063, 0xeb70, 0xb64c, 0xd415, 0x924e, 0x0, 0x0);
        gbc.writeMem(0x26b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7063);
        EXPECT(gbc.pc(), 0x26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0189
        gbc.setState(0x9ca7, 0x5357, 0xb6d0, 0xac28, 0xac2d, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x9ca7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5357);
        EXPECT(gbc.pc(), 0x9ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca7), 0xcb);
        EXPECT(gbc.readMem(0x9ca8), 0xe2);
        // CB E2 018A
        gbc.setState(0xac0e, 0x57fe, 0xf9d0, 0x3bbc, 0x8419, 0x2ff2, 0x1, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x57fe);
        EXPECT(gbc.pc(), 0xac10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0e), 0xcb);
        EXPECT(gbc.readMem(0xac0f), 0xe2);
        // CB E2 018B
        gbc.setState(0x6a00, 0xf220, 0xfa00, 0x679d, 0x50e7, 0x4db5, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf220);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 018C
        gbc.setState(0x2fe8, 0xac53, 0x4070, 0x4e2a, 0xf1b, 0x2cfd, 0x1, 0x0);
        gbc.writeMem(0x2fe8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xac53);
        EXPECT(gbc.pc(), 0x2fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 018D
        gbc.setState(0xb40c, 0x7546, 0x3550, 0x1ad8, 0x3d96, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0xb40c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0xb40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40c), 0xcb);
        EXPECT(gbc.readMem(0xb40d), 0xe2);
        // CB E2 018E
        gbc.setState(0xe91b, 0x268, 0x3420, 0x2cff, 0x7c18, 0x4720, 0x1, 0x0);
        gbc.writeMem(0xe91b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x268);
        EXPECT(gbc.pc(), 0xe91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91b), 0xcb);
        EXPECT(gbc.readMem(0xe91c), 0xe2);
        // CB E2 018F
        gbc.setState(0x74c5, 0x860c, 0x1870, 0xcf9f, 0x6b60, 0x5fa0, 0x0, 0x1);
        gbc.writeMem(0x74c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x860c);
        EXPECT(gbc.pc(), 0x74c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0190
        gbc.setState(0x7bbc, 0x772, 0x1c00, 0xb324, 0x7d4f, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x7bbc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x772);
        EXPECT(gbc.pc(), 0x7bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0191
        gbc.setState(0x1d42, 0x8555, 0xffd0, 0x3334, 0x3354, 0x1bf4, 0x0, 0x1);
        gbc.writeMem(0x1d42, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8555);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0193
        gbc.setState(0xe1d1, 0x3042, 0xf310, 0x6ad7, 0x3276, 0x6601, 0x0, 0x1);
        gbc.writeMem(0xe1d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3042);
        EXPECT(gbc.pc(), 0xe1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d1), 0xcb);
        EXPECT(gbc.readMem(0xe1d2), 0xe2);
        // CB E2 0194
        gbc.setState(0x250c, 0x919c, 0x1e30, 0xa694, 0x4b4a, 0x7c13, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x919c);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0195
        gbc.setState(0xe21, 0x8952, 0x1b50, 0xdd5f, 0x6f9e, 0xee62, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8952);
        EXPECT(gbc.pc(), 0xe23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0196
        gbc.setState(0x30d, 0x3e0a, 0xcc50, 0xfb23, 0xf4e3, 0xc820, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3e0a);
        EXPECT(gbc.pc(), 0x30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0198
        gbc.setState(0x9704, 0x99c2, 0x2f40, 0x3e47, 0x3c55, 0x19b5, 0x0, 0x0);
        gbc.writeMem(0x9704, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x99c2);
        EXPECT(gbc.pc(), 0x9706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9704), 0xcb);
        EXPECT(gbc.readMem(0x9705), 0xe2);
        // CB E2 0199
        gbc.setState(0x5010, 0x6d65, 0xa5d0, 0x5358, 0x416b, 0x38e0, 0x0, 0x0);
        gbc.writeMem(0x5010, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d65);
        EXPECT(gbc.pc(), 0x5012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 019A
        gbc.setState(0xab88, 0xed77, 0xc7f0, 0x77e8, 0xa9d6, 0x9540, 0x1, 0x1);
        gbc.writeMem(0xab88, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xed77);
        EXPECT(gbc.pc(), 0xab8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab88), 0xcb);
        EXPECT(gbc.readMem(0xab89), 0xe2);
        // CB E2 019B
        gbc.setState(0x886f, 0xb048, 0x3140, 0xea8a, 0xb219, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb048);
        EXPECT(gbc.pc(), 0x8871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886f), 0xcb);
        EXPECT(gbc.readMem(0x8870), 0xe2);
        // CB E2 019C
        gbc.setState(0x92ee, 0xd357, 0x3320, 0x67ff, 0x480f, 0xb354, 0x1, 0x1);
        gbc.writeMem(0x92ee, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd357);
        EXPECT(gbc.pc(), 0x92f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ee), 0xcb);
        EXPECT(gbc.readMem(0x92ef), 0xe2);
        // CB E2 019D
        gbc.setState(0x8357, 0x5537, 0xba0, 0x2f6, 0xeada, 0x7d8b, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8357), 0xcb);
        EXPECT(gbc.readMem(0x8358), 0xe2);
        // CB E2 019E
        gbc.setState(0x5cda, 0x4e55, 0x510, 0xa1fc, 0x60d6, 0x4989, 0x1, 0x1);
        gbc.writeMem(0x5cda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4e55);
        EXPECT(gbc.pc(), 0x5cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 019F
        gbc.setState(0xd009, 0xf55a, 0x9b80, 0x83fa, 0x35c5, 0xcea3, 0x1, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0xe2);
        // CB E2 01A0
        gbc.setState(0x298b, 0x81eb, 0xd430, 0x92a1, 0xb24a, 0xfdc, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0x298d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01A1
        gbc.setState(0x377b, 0xf832, 0x10b0, 0x63d3, 0xf50, 0x17a, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x377d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01A2
        gbc.setState(0xefd9, 0x14a3, 0xffd0, 0x2c5b, 0xf795, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x14a3);
        EXPECT(gbc.pc(), 0xefdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd9), 0xcb);
        EXPECT(gbc.readMem(0xefda), 0xe2);
        // CB E2 01A3
        gbc.setState(0x5a58, 0x434d, 0x7c30, 0x97a6, 0xda05, 0x39a3, 0x0, 0x0);
        gbc.writeMem(0x5a58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x434d);
        EXPECT(gbc.pc(), 0x5a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01A4
        gbc.setState(0xeedf, 0xed25, 0x6c0, 0xbab4, 0xccf4, 0x8077, 0x0, 0x0);
        gbc.writeMem(0xeedf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xed25);
        EXPECT(gbc.pc(), 0xeee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedf), 0xcb);
        EXPECT(gbc.readMem(0xeee0), 0xe2);
        // CB E2 01A5
        gbc.setState(0xb885, 0xd5f, 0xb00, 0xfbb1, 0xbf2, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0xb885, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0xb887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb885), 0xcb);
        EXPECT(gbc.readMem(0xb886), 0xe2);
        // CB E2 01A6
        gbc.setState(0xdf04, 0x3b89, 0x6620, 0xea4e, 0x6dd6, 0x368d, 0x0, 0x0);
        gbc.writeMem(0xdf04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3b89);
        EXPECT(gbc.pc(), 0xdf06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf04), 0xcb);
        EXPECT(gbc.readMem(0xdf05), 0xe2);
        // CB E2 01A7
        gbc.setState(0x6c4b, 0x6a19, 0x8570, 0x7d61, 0x20d9, 0x221f, 0x1, 0x1);
        gbc.writeMem(0x6c4b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6a19);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01A8
        gbc.setState(0x32ad, 0x4130, 0xd010, 0x6efe, 0x814c, 0xa8, 0x1, 0x0);
        gbc.writeMem(0x32ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4130);
        EXPECT(gbc.pc(), 0x32af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01A9
        gbc.setState(0x20db, 0xa02a, 0x1280, 0xbec4, 0xe83d, 0xd0b, 0x1, 0x1);
        gbc.writeMem(0x20db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa02a);
        EXPECT(gbc.pc(), 0x20dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01AA
        gbc.setState(0x5893, 0x35, 0xab20, 0xedb6, 0xd2a1, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x5893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x35);
        EXPECT(gbc.pc(), 0x5895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01AB
        gbc.setState(0x4886, 0x8834, 0x2590, 0xbfae, 0x6c32, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0x4886, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8834);
        EXPECT(gbc.pc(), 0x4888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01AC
        gbc.setState(0x3d94, 0x964c, 0x8e20, 0xe200, 0xa698, 0xdb50, 0x0, 0x1);
        gbc.writeMem(0x3d94, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x964c);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01AD
        gbc.setState(0xebcf, 0x78a3, 0xe20, 0xc3aa, 0x1110, 0x8b1c, 0x0, 0x1);
        gbc.writeMem(0xebcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x78a3);
        EXPECT(gbc.pc(), 0xebd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebcf), 0xcb);
        EXPECT(gbc.readMem(0xebd0), 0xe2);
        // CB E2 01AE
        gbc.setState(0x6d58, 0x52ac, 0xa2e0, 0x9302, 0x81bc, 0xbc9e, 0x1, 0x0);
        gbc.writeMem(0x6d58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x52ac);
        EXPECT(gbc.pc(), 0x6d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01AF
        gbc.setState(0x1ee1, 0x159, 0xc560, 0x5543, 0xf576, 0x2b61, 0x1, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x159);
        EXPECT(gbc.pc(), 0x1ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01B0
        gbc.setState(0x479e, 0x9581, 0xede0, 0x764b, 0xdb6f, 0x4b4c, 0x0, 0x0);
        gbc.writeMem(0x479e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9581);
        EXPECT(gbc.pc(), 0x47a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01B1
        gbc.setState(0xe577, 0xffa3, 0xca10, 0x3a15, 0x94f0, 0xd62b, 0x0, 0x1);
        gbc.writeMem(0xe577, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xffa3);
        EXPECT(gbc.pc(), 0xe579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe577), 0xcb);
        EXPECT(gbc.readMem(0xe578), 0xe2);
        // CB E2 01B3
        gbc.setState(0xea48, 0x8e, 0xd400, 0xe909, 0xd34e, 0x3fce, 0x1, 0x0);
        gbc.writeMem(0xea48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8e);
        EXPECT(gbc.pc(), 0xea4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea48), 0xcb);
        EXPECT(gbc.readMem(0xea49), 0xe2);
        // CB E2 01B4
        gbc.setState(0x821c, 0x3ea3, 0x19c0, 0xf33, 0x107a, 0x9ebe, 0x0, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3ea3);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0xe2);
        // CB E2 01B5
        gbc.setState(0x777d, 0xf5dd, 0xb640, 0x7d5d, 0x54e0, 0xd892, 0x1, 0x1);
        gbc.writeMem(0x777d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf5dd);
        EXPECT(gbc.pc(), 0x777f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01B6
        gbc.setState(0x1b72, 0xff0e, 0xb0a0, 0x3544, 0x4b09, 0xba98, 0x1, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xff0e);
        EXPECT(gbc.pc(), 0x1b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01B7
        gbc.setState(0x6fcc, 0xeafe, 0xa890, 0xceed, 0x8810, 0xc771, 0x0, 0x1);
        gbc.writeMem(0x6fcc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeafe);
        EXPECT(gbc.pc(), 0x6fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01B8
        gbc.setState(0x2967, 0x21cf, 0xf9c0, 0x5e2b, 0xa953, 0xe7ae, 0x0, 0x1);
        gbc.writeMem(0x2967, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x21cf);
        EXPECT(gbc.pc(), 0x2969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01B9
        gbc.setState(0x7d5d, 0x1000, 0x33c0, 0xa1e9, 0x97f1, 0x9626, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1000);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01BA
        gbc.setState(0x49bc, 0xd43e, 0xf920, 0xb0aa, 0x58db, 0x503, 0x0, 0x0);
        gbc.writeMem(0x49bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0x49be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01BB
        gbc.setState(0xb102, 0xffd7, 0xa920, 0x78b3, 0x5564, 0xd5fe, 0x0, 0x1);
        gbc.writeMem(0xb102, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xffd7);
        EXPECT(gbc.pc(), 0xb104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb102), 0xcb);
        EXPECT(gbc.readMem(0xb103), 0xe2);
        // CB E2 01BC
        gbc.setState(0xaa60, 0xde02, 0xc420, 0x3f1d, 0x13d5, 0xcb45, 0x1, 0x1);
        gbc.writeMem(0xaa60, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xde02);
        EXPECT(gbc.pc(), 0xaa62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa60), 0xcb);
        EXPECT(gbc.readMem(0xaa61), 0xe2);
        // CB E2 01BD
        gbc.setState(0xc7fb, 0x2b4c, 0x7e60, 0x7126, 0x8da0, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2b4c);
        EXPECT(gbc.pc(), 0xc7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fb), 0xcb);
        EXPECT(gbc.readMem(0xc7fc), 0xe2);
        // CB E2 01BE
        gbc.setState(0x46b4, 0xeb88, 0x4e00, 0x48a9, 0xb534, 0x4f02, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xeb88);
        EXPECT(gbc.pc(), 0x46b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01C0
        gbc.setState(0x38b1, 0x8210, 0xdb20, 0x78c4, 0x4828, 0x5e1f, 0x0, 0x1);
        gbc.writeMem(0x38b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8210);
        EXPECT(gbc.pc(), 0x38b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01C1
        gbc.setState(0xb4b0, 0x6df9, 0x8060, 0x5a33, 0x8360, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6df9);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0xe2);
        // CB E2 01C2
        gbc.setState(0x8695, 0xb6b8, 0x6a00, 0x3982, 0x102e, 0xe118, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0xe2);
        // CB E2 01C4
        gbc.setState(0x73d3, 0xa86b, 0xb1c0, 0x7a96, 0x2f1b, 0x7274, 0x0, 0x1);
        gbc.writeMem(0x73d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa86b);
        EXPECT(gbc.pc(), 0x73d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01C5
        gbc.setState(0xa0, 0xe6c1, 0x9570, 0x509, 0x20c2, 0xcbc7, 0x0, 0x1);
        gbc.writeMem(0xa0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe6c1);
        EXPECT(gbc.pc(), 0xa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01C6
        gbc.setState(0xcd66, 0xc34a, 0x50b0, 0x398c, 0x1c27, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0xcd66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0xcd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd66), 0xcb);
        EXPECT(gbc.readMem(0xcd67), 0xe2);
        // CB E2 01C7
        gbc.setState(0x31f, 0x5f6b, 0x6f30, 0xb473, 0xb897, 0x1654, 0x0, 0x1);
        gbc.writeMem(0x31f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5f6b);
        EXPECT(gbc.pc(), 0x321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01C8
        gbc.setState(0x8aa0, 0x2e92, 0xe0f0, 0x94fa, 0x3670, 0x289d, 0x1, 0x0);
        gbc.writeMem(0x8aa0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2e92);
        EXPECT(gbc.pc(), 0x8aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa0), 0xcb);
        EXPECT(gbc.readMem(0x8aa1), 0xe2);
        // CB E2 01C9
        gbc.setState(0x1115, 0x8bb6, 0xf2b0, 0x5c97, 0x2995, 0xf510, 0x0, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0x1117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01CA
        gbc.setState(0x5bb4, 0x631, 0x8640, 0xfa67, 0x90d8, 0xed35, 0x0, 0x0);
        gbc.writeMem(0x5bb4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x631);
        EXPECT(gbc.pc(), 0x5bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01CB
        gbc.setState(0x3c50, 0x1904, 0x3150, 0x5d43, 0x8513, 0xd569, 0x0, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1904);
        EXPECT(gbc.pc(), 0x3c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01CC
        gbc.setState(0x17d3, 0x5d71, 0xaa80, 0xa676, 0x33a2, 0x88b3, 0x0, 0x1);
        gbc.writeMem(0x17d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5d71);
        EXPECT(gbc.pc(), 0x17d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01CD
        gbc.setState(0x13fe, 0x7a67, 0x41a0, 0x4816, 0xb2ea, 0x2771, 0x0, 0x0);
        gbc.writeMem(0x13fe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a67);
        EXPECT(gbc.pc(), 0x1400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01CE
        gbc.setState(0x2f09, 0xffc0, 0x3fe0, 0x93c2, 0xca96, 0x50, 0x0, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xffc0);
        EXPECT(gbc.pc(), 0x2f0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01CF
        gbc.setState(0x1546, 0x3a56, 0x19e0, 0x9024, 0x3950, 0xea85, 0x0, 0x1);
        gbc.writeMem(0x1546, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3a56);
        EXPECT(gbc.pc(), 0x1548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01D0
        gbc.setState(0xc19b, 0x61dc, 0x2c70, 0xba2c, 0xd635, 0xfa30, 0x0, 0x1);
        gbc.writeMem(0xc19b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x61dc);
        EXPECT(gbc.pc(), 0xc19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19b), 0xcb);
        EXPECT(gbc.readMem(0xc19c), 0xe2);
        // CB E2 01D1
        gbc.setState(0x1d1d, 0x55f7, 0xf830, 0xf7fe, 0x4cb8, 0xa731, 0x0, 0x0);
        gbc.writeMem(0x1d1d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x55f7);
        EXPECT(gbc.pc(), 0x1d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01D2
        gbc.setState(0x9520, 0xf555, 0x57a0, 0xd18b, 0xe4e6, 0x6e12, 0x1, 0x1);
        gbc.writeMem(0x9520, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf555);
        EXPECT(gbc.pc(), 0x9522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9520), 0xcb);
        EXPECT(gbc.readMem(0x9521), 0xe2);
        // CB E2 01D3
        gbc.setState(0xb64, 0x3447, 0xf9e0, 0xbcd3, 0x48b1, 0x5e06, 0x1, 0x0);
        gbc.writeMem(0xb64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3447);
        EXPECT(gbc.pc(), 0xb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01D4
        gbc.setState(0x9340, 0x3d37, 0xc160, 0x3898, 0x413a, 0x377b, 0x1, 0x0);
        gbc.writeMem(0x9340, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3d37);
        EXPECT(gbc.pc(), 0x9342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9340), 0xcb);
        EXPECT(gbc.readMem(0x9341), 0xe2);
        // CB E2 01D5
        gbc.setState(0x874e, 0x5256, 0xf470, 0xd75d, 0x4258, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5256);
        EXPECT(gbc.pc(), 0x8750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874e), 0xcb);
        EXPECT(gbc.readMem(0x874f), 0xe2);
        // CB E2 01D6
        gbc.setState(0x258, 0xc41e, 0x2240, 0x5a3c, 0x83a7, 0x8b24, 0x1, 0x1);
        gbc.writeMem(0x258, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc41e);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01D7
        gbc.setState(0xd1a0, 0x3ca9, 0x9710, 0xb4e1, 0xeea2, 0x124b, 0x0, 0x0);
        gbc.writeMem(0xd1a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3ca9);
        EXPECT(gbc.pc(), 0xd1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a0), 0xcb);
        EXPECT(gbc.readMem(0xd1a1), 0xe2);
        // CB E2 01D8
        gbc.setState(0x9bff, 0x434d, 0x57f0, 0xaab4, 0x4117, 0xab18, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x434d);
        EXPECT(gbc.pc(), 0x9c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bff), 0xcb);
        EXPECT(gbc.readMem(0x9c00), 0xe2);
        // CB E2 01DA
        gbc.setState(0x990b, 0x2dd1, 0x3fb0, 0x4846, 0xef58, 0x6b3c, 0x0, 0x1);
        gbc.writeMem(0x990b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2dd1);
        EXPECT(gbc.pc(), 0x990d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990b), 0xcb);
        EXPECT(gbc.readMem(0x990c), 0xe2);
        // CB E2 01DB
        gbc.setState(0x3d6e, 0x5955, 0x9b50, 0x2d8e, 0xd9da, 0x8401, 0x0, 0x0);
        gbc.writeMem(0x3d6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5955);
        EXPECT(gbc.pc(), 0x3d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01DC
        gbc.setState(0xab7, 0xd46f, 0x400, 0x82c3, 0xd255, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0xab7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd46f);
        EXPECT(gbc.pc(), 0xab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01DD
        gbc.setState(0xb359, 0xecff, 0x57b0, 0x119f, 0x9831, 0x8519, 0x1, 0x1);
        gbc.writeMem(0xb359, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xecff);
        EXPECT(gbc.pc(), 0xb35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb359), 0xcb);
        EXPECT(gbc.readMem(0xb35a), 0xe2);
        // CB E2 01DE
        gbc.setState(0x261, 0x6e92, 0xba10, 0x59bf, 0x2c09, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x261, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6e92);
        EXPECT(gbc.pc(), 0x263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01DF
        gbc.setState(0x7fae, 0x8e16, 0xb240, 0xf411, 0x7a78, 0x7d00, 0x1, 0x0);
        gbc.writeMem(0x7fae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8e16);
        EXPECT(gbc.pc(), 0x7fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01E0
        gbc.setState(0x3291, 0x1654, 0x260, 0xc479, 0x309c, 0xfa3d, 0x1, 0x0);
        gbc.writeMem(0x3291, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1654);
        EXPECT(gbc.pc(), 0x3293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01E1
        gbc.setState(0xbb81, 0x24b9, 0x66c0, 0xefad, 0x7ae8, 0xa467, 0x1, 0x1);
        gbc.writeMem(0xbb81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x24b9);
        EXPECT(gbc.pc(), 0xbb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0xcb);
        EXPECT(gbc.readMem(0xbb82), 0xe2);
        // CB E2 01E2
        gbc.setState(0x9a5d, 0xa3a5, 0x38c0, 0xe361, 0x4909, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa3a5);
        EXPECT(gbc.pc(), 0x9a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5d), 0xcb);
        EXPECT(gbc.readMem(0x9a5e), 0xe2);
        // CB E2 01E3
        gbc.setState(0x4fa4, 0x2887, 0x4e00, 0xe114, 0xb2ec, 0xe8cc, 0x0, 0x1);
        gbc.writeMem(0x4fa4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2887);
        EXPECT(gbc.pc(), 0x4fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01E4
        gbc.setState(0x3660, 0xafb2, 0x4ac0, 0x4393, 0xe821, 0xb32d, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xafb2);
        EXPECT(gbc.pc(), 0x3662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01E5
        gbc.setState(0x9bc2, 0x6cf6, 0xb9f0, 0x8535, 0x2edc, 0x7d4e, 0x0, 0x0);
        gbc.writeMem(0x9bc2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6cf6);
        EXPECT(gbc.pc(), 0x9bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc2), 0xcb);
        EXPECT(gbc.readMem(0x9bc3), 0xe2);
        // CB E2 01E6
        gbc.setState(0xc4d5, 0x15c3, 0xbb00, 0xcb9f, 0x6ed1, 0x3c9c, 0x0, 0x1);
        gbc.writeMem(0xc4d5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x15c3);
        EXPECT(gbc.pc(), 0xc4d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d5), 0xcb);
        EXPECT(gbc.readMem(0xc4d6), 0xe2);
        // CB E2 01E7
        gbc.setState(0xa306, 0x41f9, 0xccb0, 0xf8d5, 0x15ae, 0xff96, 0x0, 0x0);
        gbc.writeMem(0xa306, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x41f9);
        EXPECT(gbc.pc(), 0xa308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa306), 0xcb);
        EXPECT(gbc.readMem(0xa307), 0xe2);
        // CB E2 01E8
        gbc.setState(0x682e, 0x3080, 0x61b0, 0xf151, 0xda12, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0x682e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0x6830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01E9
        gbc.setState(0xacc8, 0xa63b, 0xd30, 0x86d1, 0xdd45, 0xa086, 0x1, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa63b);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc8), 0xcb);
        EXPECT(gbc.readMem(0xacc9), 0xe2);
        // CB E2 01EA
        gbc.setState(0x5c56, 0xe832, 0x1f80, 0x1921, 0x819b, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x5c56, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe832);
        EXPECT(gbc.pc(), 0x5c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01EB
        gbc.setState(0x6483, 0xd012, 0x4640, 0x2cf7, 0x1fcb, 0x7015, 0x0, 0x0);
        gbc.writeMem(0x6483, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd012);
        EXPECT(gbc.pc(), 0x6485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01EC
        gbc.setState(0xc9cf, 0x1649, 0xf720, 0x71d8, 0x6e02, 0x5ca2, 0x1, 0x1);
        gbc.writeMem(0xc9cf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1649);
        EXPECT(gbc.pc(), 0xc9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cf), 0xcb);
        EXPECT(gbc.readMem(0xc9d0), 0xe2);
        // CB E2 01ED
        gbc.setState(0xc87b, 0x8137, 0xf0b0, 0xa934, 0x3aa3, 0x327e, 0x1, 0x0);
        gbc.writeMem(0xc87b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8137);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87b), 0xcb);
        EXPECT(gbc.readMem(0xc87c), 0xe2);
        // CB E2 01EE
        gbc.setState(0x9d13, 0x542c, 0xa330, 0x8db1, 0xb9cd, 0x61ad, 0x1, 0x0);
        gbc.writeMem(0x9d13, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x542c);
        EXPECT(gbc.pc(), 0x9d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d13), 0xcb);
        EXPECT(gbc.readMem(0x9d14), 0xe2);
        // CB E2 01EF
        gbc.setState(0x84c2, 0x241a, 0x5b70, 0xcb13, 0xc202, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x241a);
        EXPECT(gbc.pc(), 0x84c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c2), 0xcb);
        EXPECT(gbc.readMem(0x84c3), 0xe2);
        // CB E2 01F0
        gbc.setState(0xd2bd, 0x7cfa, 0xd640, 0x7cc8, 0xe097, 0xe6aa, 0x1, 0x0);
        gbc.writeMem(0xd2bd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7cfa);
        EXPECT(gbc.pc(), 0xd2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bd), 0xcb);
        EXPECT(gbc.readMem(0xd2be), 0xe2);
        // CB E2 01F1
        gbc.setState(0x2941, 0x7176, 0x83e0, 0xa466, 0x966c, 0xb65f, 0x0, 0x0);
        gbc.writeMem(0x2941, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7176);
        EXPECT(gbc.pc(), 0x2943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01F2
        gbc.setState(0xb6f3, 0x8b7c, 0xf400, 0x6d38, 0xdbb8, 0x50f7, 0x0, 0x1);
        gbc.writeMem(0xb6f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8b7c);
        EXPECT(gbc.pc(), 0xb6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f3), 0xcb);
        EXPECT(gbc.readMem(0xb6f4), 0xe2);
        // CB E2 01F3
        gbc.setState(0x29bf, 0x21ca, 0x1120, 0xf627, 0xb845, 0x70a9, 0x1, 0x0);
        gbc.writeMem(0x29bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x21ca);
        EXPECT(gbc.pc(), 0x29c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01F4
        gbc.setState(0x8dbe, 0xa502, 0x8860, 0xe5c0, 0x8006, 0x38f, 0x0, 0x0);
        gbc.writeMem(0x8dbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa502);
        EXPECT(gbc.pc(), 0x8dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbe), 0xcb);
        EXPECT(gbc.readMem(0x8dbf), 0xe2);
        // CB E2 01F5
        gbc.setState(0x4424, 0x9d6b, 0xfea0, 0x73ea, 0xcbb9, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9d6b);
        EXPECT(gbc.pc(), 0x4426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01F8
        gbc.setState(0xb25f, 0xf6d7, 0xaa50, 0xe780, 0xd8ae, 0x3eb9, 0x1, 0x0);
        gbc.writeMem(0xb25f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf6d7);
        EXPECT(gbc.pc(), 0xb261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25f), 0xcb);
        EXPECT(gbc.readMem(0xb260), 0xe2);
        // CB E2 01FA
        gbc.setState(0x7755, 0xc7b0, 0x6880, 0x5112, 0x26f6, 0x1f12, 0x0, 0x0);
        gbc.writeMem(0x7755, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc7b0);
        EXPECT(gbc.pc(), 0x7757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01FB
        gbc.setState(0x129f, 0xd8a1, 0x540, 0x1c78, 0xbcff, 0x91e8, 0x0, 0x1);
        gbc.writeMem(0x129f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd8a1);
        EXPECT(gbc.pc(), 0x12a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01FC
        gbc.setState(0x1790, 0x18b, 0x93b0, 0xab8a, 0xda28, 0x6c88, 0x0, 0x0);
        gbc.writeMem(0x1790, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x18b);
        EXPECT(gbc.pc(), 0x1792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 01FD
        gbc.setState(0x50ca, 0x3d7b, 0xd40, 0x5a32, 0x9560, 0x3b68, 0x0, 0x0);
        gbc.writeMem(0x50ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3d7b);
        EXPECT(gbc.pc(), 0x50cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01FE
        gbc.setState(0x3ce0, 0x2ad2, 0x6320, 0xfdd5, 0xdc4e, 0x850, 0x0, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2ad2);
        EXPECT(gbc.pc(), 0x3ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 01FF
        gbc.setState(0x758b, 0xabad, 0x48f0, 0xe937, 0x910d, 0xfea6, 0x0, 0x0);
        gbc.writeMem(0x758b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xabad);
        EXPECT(gbc.pc(), 0x758d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0201
        gbc.setState(0xe526, 0x2038, 0xd980, 0xd09a, 0xa56c, 0x24df, 0x1, 0x0);
        gbc.writeMem(0xe526, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2038);
        EXPECT(gbc.pc(), 0xe528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe526), 0xcb);
        EXPECT(gbc.readMem(0xe527), 0xe2);
        // CB E2 0202
        gbc.setState(0xa5ce, 0xde49, 0xcdc0, 0xe2a8, 0xb059, 0xd669, 0x0, 0x1);
        gbc.writeMem(0xa5ce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xde49);
        EXPECT(gbc.pc(), 0xa5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ce), 0xcb);
        EXPECT(gbc.readMem(0xa5cf), 0xe2);
        // CB E2 0203
        gbc.setState(0x542c, 0x72c, 0x8a20, 0x76de, 0x23ed, 0xd17c, 0x1, 0x1);
        gbc.writeMem(0x542c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x72c);
        EXPECT(gbc.pc(), 0x542e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0204
        gbc.setState(0x8451, 0x7960, 0x4680, 0x993c, 0x30d, 0x69e5, 0x1, 0x0);
        gbc.writeMem(0x8451, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7960);
        EXPECT(gbc.pc(), 0x8453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8451), 0xcb);
        EXPECT(gbc.readMem(0x8452), 0xe2);
        // CB E2 0206
        gbc.setState(0x5973, 0x9e34, 0xc550, 0x14c5, 0xcd54, 0x9307, 0x1, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9e34);
        EXPECT(gbc.pc(), 0x5975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0207
        gbc.setState(0x49fd, 0x5f73, 0xb60, 0x6bed, 0x9762, 0x4afc, 0x0, 0x1);
        gbc.writeMem(0x49fd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5f73);
        EXPECT(gbc.pc(), 0x49ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0208
        gbc.setState(0x8725, 0xaf81, 0xdbe0, 0x1794, 0xf4d1, 0x1fcc, 0x1, 0x1);
        gbc.writeMem(0x8725, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaf81);
        EXPECT(gbc.pc(), 0x8727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8725), 0xcb);
        EXPECT(gbc.readMem(0x8726), 0xe2);
        // CB E2 0209
        gbc.setState(0xb75e, 0x5e3b, 0x65a0, 0xb5f6, 0x8a, 0xf874, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5e3b);
        EXPECT(gbc.pc(), 0xb760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75e), 0xcb);
        EXPECT(gbc.readMem(0xb75f), 0xe2);
        // CB E2 020A
        gbc.setState(0x1c5c, 0xf4a0, 0xdf00, 0xf, 0x8f49, 0x564, 0x1, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf4a0);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 020C
        gbc.setState(0xd275, 0x783b, 0xec90, 0xe5c7, 0xe579, 0x505e, 0x1, 0x0);
        gbc.writeMem(0xd275, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x783b);
        EXPECT(gbc.pc(), 0xd277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd275), 0xcb);
        EXPECT(gbc.readMem(0xd276), 0xe2);
        // CB E2 020D
        gbc.setState(0xd2fa, 0x9f23, 0xf620, 0x7194, 0xec21, 0xbeba, 0x0, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9f23);
        EXPECT(gbc.pc(), 0xd2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fa), 0xcb);
        EXPECT(gbc.readMem(0xd2fb), 0xe2);
        // CB E2 020E
        gbc.setState(0x961a, 0x59b6, 0xd140, 0xdb9d, 0xc9e7, 0x32c6, 0x0, 0x1);
        gbc.writeMem(0x961a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x59b6);
        EXPECT(gbc.pc(), 0x961c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961a), 0xcb);
        EXPECT(gbc.readMem(0x961b), 0xe2);
        // CB E2 020F
        gbc.setState(0x24e0, 0xf1cb, 0x6650, 0xb82f, 0x15f0, 0x8cdc, 0x0, 0x0);
        gbc.writeMem(0x24e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf1cb);
        EXPECT(gbc.pc(), 0x24e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0210
        gbc.setState(0x100e, 0x1d1d, 0xaf20, 0x5f71, 0x7ade, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x100e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1d1d);
        EXPECT(gbc.pc(), 0x1010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0211
        gbc.setState(0xc6b0, 0x2e66, 0x9560, 0x253b, 0x13a7, 0xec68, 0x1, 0x0);
        gbc.writeMem(0xc6b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2e66);
        EXPECT(gbc.pc(), 0xc6b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b0), 0xcb);
        EXPECT(gbc.readMem(0xc6b1), 0xe2);
        // CB E2 0213
        gbc.setState(0xe5a1, 0x2581, 0x8d60, 0xc3de, 0x279f, 0x6481, 0x0, 0x0);
        gbc.writeMem(0xe5a1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2581);
        EXPECT(gbc.pc(), 0xe5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a1), 0xcb);
        EXPECT(gbc.readMem(0xe5a2), 0xe2);
        // CB E2 0214
        gbc.setState(0x9b5f, 0x93b5, 0x4710, 0xcd3, 0x61e1, 0xf359, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x93b5);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0xe2);
        // CB E2 0215
        gbc.setState(0xa49a, 0x9e51, 0xd2c0, 0x24f2, 0x1eb, 0x74fb, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9e51);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0xe2);
        // CB E2 0216
        gbc.setState(0xd599, 0x8c21, 0x2140, 0xccc9, 0x6974, 0xf8dc, 0x0, 0x1);
        gbc.writeMem(0xd599, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8c21);
        EXPECT(gbc.pc(), 0xd59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd599), 0xcb);
        EXPECT(gbc.readMem(0xd59a), 0xe2);
        // CB E2 0217
        gbc.setState(0xd213, 0xd7bf, 0x59e0, 0xcd28, 0x8409, 0xe5cf, 0x1, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd7bf);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd213), 0xcb);
        EXPECT(gbc.readMem(0xd214), 0xe2);
        // CB E2 0218
        gbc.setState(0x8de9, 0x6c8a, 0x33a0, 0xc253, 0x2420, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0x8de9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6c8a);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de9), 0xcb);
        EXPECT(gbc.readMem(0x8dea), 0xe2);
        // CB E2 0219
        gbc.setState(0x3d4, 0x380d, 0xa1a0, 0x6975, 0x3b5, 0xaa8a, 0x1, 0x0);
        gbc.writeMem(0x3d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x380d);
        EXPECT(gbc.pc(), 0x3d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 021A
        gbc.setState(0xc791, 0x4520, 0x77e0, 0xc242, 0x214a, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4520);
        EXPECT(gbc.pc(), 0xc793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc791), 0xcb);
        EXPECT(gbc.readMem(0xc792), 0xe2);
        // CB E2 021B
        gbc.setState(0xcbbe, 0xb94d, 0x2540, 0x8554, 0x9a5a, 0xebf3, 0x1, 0x1);
        gbc.writeMem(0xcbbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb94d);
        EXPECT(gbc.pc(), 0xcbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbbe), 0xcb);
        EXPECT(gbc.readMem(0xcbbf), 0xe2);
        // CB E2 021D
        gbc.setState(0x68ac, 0x2f5d, 0x8870, 0xd34b, 0xf5d4, 0x7248, 0x1, 0x0);
        gbc.writeMem(0x68ac, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2f5d);
        EXPECT(gbc.pc(), 0x68ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 021E
        gbc.setState(0xc541, 0x5ae, 0xd5f0, 0xad31, 0x44db, 0xa6f1, 0x0, 0x0);
        gbc.writeMem(0xc541, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5ae);
        EXPECT(gbc.pc(), 0xc543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc541), 0xcb);
        EXPECT(gbc.readMem(0xc542), 0xe2);
        // CB E2 021F
        gbc.setState(0x1c92, 0xc62a, 0x48a0, 0xae7b, 0xd988, 0xb3c3, 0x1, 0x1);
        gbc.writeMem(0x1c92, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc62a);
        EXPECT(gbc.pc(), 0x1c94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0220
        gbc.setState(0xdaf7, 0x1e9d, 0x4840, 0xd92f, 0xc6c4, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0xdaf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1e9d);
        EXPECT(gbc.pc(), 0xdaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf7), 0xcb);
        EXPECT(gbc.readMem(0xdaf8), 0xe2);
        // CB E2 0221
        gbc.setState(0x9676, 0xf528, 0x6c40, 0xeb70, 0xd92e, 0x6ad2, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0xcb);
        EXPECT(gbc.readMem(0x9677), 0xe2);
        // CB E2 0222
        gbc.setState(0xb51a, 0x91e1, 0x78b0, 0x6366, 0x3439, 0x3beb, 0x1, 0x1);
        gbc.writeMem(0xb51a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x91e1);
        EXPECT(gbc.pc(), 0xb51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51a), 0xcb);
        EXPECT(gbc.readMem(0xb51b), 0xe2);
        // CB E2 0223
        gbc.setState(0x801e, 0xd46f, 0xba90, 0x661e, 0xb977, 0xf5c1, 0x1, 0x1);
        gbc.writeMem(0x801e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd46f);
        EXPECT(gbc.pc(), 0x8020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x801e), 0xcb);
        EXPECT(gbc.readMem(0x801f), 0xe2);
        // CB E2 0224
        gbc.setState(0xd63c, 0xd421, 0x6890, 0xd877, 0xa37a, 0xbb99, 0x0, 0x1);
        gbc.writeMem(0xd63c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd421);
        EXPECT(gbc.pc(), 0xd63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63c), 0xcb);
        EXPECT(gbc.readMem(0xd63d), 0xe2);
        // CB E2 0225
        gbc.setState(0xb34f, 0x995a, 0x6e90, 0x9481, 0xc4b4, 0x70b8, 0x0, 0x1);
        gbc.writeMem(0xb34f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x995a);
        EXPECT(gbc.pc(), 0xb351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34f), 0xcb);
        EXPECT(gbc.readMem(0xb350), 0xe2);
        // CB E2 0226
        gbc.setState(0x7b54, 0xd804, 0xe680, 0x94db, 0x9662, 0xe97, 0x0, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd804);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0227
        gbc.setState(0xdf7e, 0xc78f, 0x92d0, 0x9663, 0xd0b9, 0xe765, 0x0, 0x1);
        gbc.writeMem(0xdf7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc78f);
        EXPECT(gbc.pc(), 0xdf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf7e), 0xcb);
        EXPECT(gbc.readMem(0xdf7f), 0xe2);
        // CB E2 0228
        gbc.setState(0x6b14, 0x94c4, 0x69c0, 0xf17c, 0x1a3c, 0xb1aa, 0x1, 0x1);
        gbc.writeMem(0x6b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x94c4);
        EXPECT(gbc.pc(), 0x6b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0229
        gbc.setState(0x586b, 0x6460, 0x4800, 0xf939, 0xea8b, 0xc1fe, 0x0, 0x0);
        gbc.writeMem(0x586b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6460);
        EXPECT(gbc.pc(), 0x586d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 022A
        gbc.setState(0xcf0c, 0x37fd, 0x65b0, 0xf74e, 0x5be2, 0xad7, 0x1, 0x1);
        gbc.writeMem(0xcf0c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x37fd);
        EXPECT(gbc.pc(), 0xcf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0c), 0xcb);
        EXPECT(gbc.readMem(0xcf0d), 0xe2);
        // CB E2 022B
        gbc.setState(0xe897, 0x538, 0xafc0, 0x3865, 0xfd89, 0x7194, 0x1, 0x1);
        gbc.writeMem(0xe897, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x538);
        EXPECT(gbc.pc(), 0xe899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe897), 0xcb);
        EXPECT(gbc.readMem(0xe898), 0xe2);
        // CB E2 022E
        gbc.setState(0x2e68, 0xe7d, 0x770, 0x50cc, 0xd76, 0x7d01, 0x0, 0x0);
        gbc.writeMem(0x2e68, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe7d);
        EXPECT(gbc.pc(), 0x2e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 022F
        gbc.setState(0x2185, 0x4f9d, 0x59b0, 0xf06b, 0x8751, 0xe463, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4f9d);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0230
        gbc.setState(0xe13e, 0xd8f1, 0x57d0, 0x6d3f, 0x5182, 0x119b, 0x0, 0x0);
        gbc.writeMem(0xe13e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd8f1);
        EXPECT(gbc.pc(), 0xe140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13e), 0xcb);
        EXPECT(gbc.readMem(0xe13f), 0xe2);
        // CB E2 0231
        gbc.setState(0x499c, 0x152, 0x1850, 0x2de1, 0xb2c2, 0x12dd, 0x1, 0x0);
        gbc.writeMem(0x499c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x152);
        EXPECT(gbc.pc(), 0x499e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0232
        gbc.setState(0x69a7, 0xf9cf, 0xc9c0, 0x6b08, 0xa7d9, 0x6056, 0x0, 0x0);
        gbc.writeMem(0x69a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf9cf);
        EXPECT(gbc.pc(), 0x69a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0233
        gbc.setState(0x63c5, 0x7bd, 0x85f0, 0xe5af, 0x6bd9, 0x9673, 0x1, 0x1);
        gbc.writeMem(0x63c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7bd);
        EXPECT(gbc.pc(), 0x63c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0234
        gbc.setState(0xe0a8, 0x6989, 0x92b0, 0xd775, 0xdd05, 0xb150, 0x1, 0x1);
        gbc.writeMem(0xe0a8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6989);
        EXPECT(gbc.pc(), 0xe0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a8), 0xcb);
        EXPECT(gbc.readMem(0xe0a9), 0xe2);
        // CB E2 0235
        gbc.setState(0xae78, 0xa276, 0x6d10, 0x4855, 0xd411, 0xc959, 0x0, 0x0);
        gbc.writeMem(0xae78, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0xae7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae78), 0xcb);
        EXPECT(gbc.readMem(0xae79), 0xe2);
        // CB E2 0236
        gbc.setState(0xc3e5, 0xda69, 0x4770, 0xa7d, 0xb861, 0x5aca, 0x1, 0x1);
        gbc.writeMem(0xc3e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xda69);
        EXPECT(gbc.pc(), 0xc3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e5), 0xcb);
        EXPECT(gbc.readMem(0xc3e6), 0xe2);
        // CB E2 0237
        gbc.setState(0x43cb, 0xfa0c, 0xafe0, 0xea42, 0x9950, 0x3d43, 0x0, 0x0);
        gbc.writeMem(0x43cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfa0c);
        EXPECT(gbc.pc(), 0x43cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0238
        gbc.setState(0x7e55, 0xd304, 0x1470, 0xc1e5, 0x77d8, 0xbb44, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd304);
        EXPECT(gbc.pc(), 0x7e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0239
        gbc.setState(0xd1e6, 0x4e9b, 0x380, 0xd1e2, 0x792e, 0xf6f5, 0x1, 0x0);
        gbc.writeMem(0xd1e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4e9b);
        EXPECT(gbc.pc(), 0xd1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e6), 0xcb);
        EXPECT(gbc.readMem(0xd1e7), 0xe2);
        // CB E2 023A
        gbc.setState(0xdc50, 0x3317, 0x87e0, 0x739, 0xef3c, 0xd937, 0x0, 0x0);
        gbc.writeMem(0xdc50, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3317);
        EXPECT(gbc.pc(), 0xdc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc50), 0xcb);
        EXPECT(gbc.readMem(0xdc51), 0xe2);
        // CB E2 023B
        gbc.setState(0x3cfa, 0xc2b4, 0x89c0, 0xcce5, 0xf7d4, 0xcbaa, 0x1, 0x0);
        gbc.writeMem(0x3cfa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc2b4);
        EXPECT(gbc.pc(), 0x3cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 023C
        gbc.setState(0x18ff, 0x7351, 0xa890, 0xcead, 0xa5, 0x346a, 0x1, 0x0);
        gbc.writeMem(0x18ff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7351);
        EXPECT(gbc.pc(), 0x1901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 023D
        gbc.setState(0x1deb, 0x59a3, 0x6370, 0x41af, 0x79f6, 0x6613, 0x1, 0x1);
        gbc.writeMem(0x1deb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x59a3);
        EXPECT(gbc.pc(), 0x1ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 023E
        gbc.setState(0xbdcf, 0xbe15, 0x6bc0, 0x7a77, 0x2c85, 0xca1c, 0x0, 0x0);
        gbc.writeMem(0xbdcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbe15);
        EXPECT(gbc.pc(), 0xbdd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdcf), 0xcb);
        EXPECT(gbc.readMem(0xbdd0), 0xe2);
        // CB E2 023F
        gbc.setState(0x6a5f, 0x620a, 0xbed0, 0xca84, 0xa1af, 0x2f2d, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x620a);
        EXPECT(gbc.pc(), 0x6a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0240
        gbc.setState(0xca32, 0x53f8, 0xd160, 0xf39c, 0x8042, 0x2941, 0x1, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x53f8);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca32), 0xcb);
        EXPECT(gbc.readMem(0xca33), 0xe2);
        // CB E2 0241
        gbc.setState(0x7c26, 0xd092, 0xb120, 0xa483, 0x8116, 0x2ff9, 0x0, 0x1);
        gbc.writeMem(0x7c26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd092);
        EXPECT(gbc.pc(), 0x7c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0242
        gbc.setState(0x3a41, 0x8c16, 0xa050, 0x2fad, 0x415a, 0x8aa, 0x0, 0x0);
        gbc.writeMem(0x3a41, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8c16);
        EXPECT(gbc.pc(), 0x3a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0243
        gbc.setState(0x13c3, 0x87a0, 0x34a0, 0xe313, 0x97f1, 0x389b, 0x1, 0x1);
        gbc.writeMem(0x13c3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x87a0);
        EXPECT(gbc.pc(), 0x13c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0244
        gbc.setState(0x87ba, 0xbdaa, 0xd370, 0x73b9, 0x3c94, 0x5c9d, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbdaa);
        EXPECT(gbc.pc(), 0x87bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ba), 0xcb);
        EXPECT(gbc.readMem(0x87bb), 0xe2);
        // CB E2 0245
        gbc.setState(0x74ea, 0xf56a, 0x2440, 0xb173, 0x24ef, 0x490f, 0x1, 0x1);
        gbc.writeMem(0x74ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf56a);
        EXPECT(gbc.pc(), 0x74ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0246
        gbc.setState(0xc93e, 0xbdb9, 0xd590, 0x34a5, 0x20ef, 0x673f, 0x0, 0x0);
        gbc.writeMem(0xc93e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbdb9);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93e), 0xcb);
        EXPECT(gbc.readMem(0xc93f), 0xe2);
        // CB E2 0247
        gbc.setState(0xe52d, 0x439b, 0xcca0, 0xd82f, 0x7ab2, 0x1053, 0x0, 0x1);
        gbc.writeMem(0xe52d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x439b);
        EXPECT(gbc.pc(), 0xe52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52d), 0xcb);
        EXPECT(gbc.readMem(0xe52e), 0xe2);
        // CB E2 0248
        gbc.setState(0xa881, 0xc371, 0x43b0, 0x8ce4, 0x7586, 0x9ac6, 0x0, 0x1);
        gbc.writeMem(0xa881, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc371);
        EXPECT(gbc.pc(), 0xa883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa881), 0xcb);
        EXPECT(gbc.readMem(0xa882), 0xe2);
        // CB E2 0249
        gbc.setState(0x3a5, 0x5c5, 0xcfd0, 0x8698, 0x6046, 0x2f05, 0x0, 0x0);
        gbc.writeMem(0x3a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5c5);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 024A
        gbc.setState(0xb468, 0x21ad, 0xa520, 0x3f47, 0x921b, 0xc24e, 0x0, 0x1);
        gbc.writeMem(0xb468, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0xb46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb468), 0xcb);
        EXPECT(gbc.readMem(0xb469), 0xe2);
        // CB E2 024B
        gbc.setState(0x91a, 0x6303, 0xd860, 0xf771, 0xbefa, 0x7433, 0x0, 0x1);
        gbc.writeMem(0x91a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6303);
        EXPECT(gbc.pc(), 0x91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 024C
        gbc.setState(0x4f5f, 0x26a1, 0xe5d0, 0xda8, 0x8e3, 0x7e33, 0x0, 0x0);
        gbc.writeMem(0x4f5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x26a1);
        EXPECT(gbc.pc(), 0x4f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 024D
        gbc.setState(0x8394, 0xd752, 0xa1d0, 0xcb51, 0xd47a, 0xd477, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd752);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8394), 0xcb);
        EXPECT(gbc.readMem(0x8395), 0xe2);
        // CB E2 024E
        gbc.setState(0x7905, 0x74c0, 0x5550, 0x9aff, 0xc847, 0xd63f, 0x0, 0x1);
        gbc.writeMem(0x7905, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0x7907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 024F
        gbc.setState(0x39a9, 0xfd6a, 0xf590, 0xd34, 0xee61, 0x235c, 0x1, 0x0);
        gbc.writeMem(0x39a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfd6a);
        EXPECT(gbc.pc(), 0x39ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0250
        gbc.setState(0x9ab5, 0xc983, 0x3470, 0x5019, 0xda78, 0x3cb, 0x0, 0x0);
        gbc.writeMem(0x9ab5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0x9ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab5), 0xcb);
        EXPECT(gbc.readMem(0x9ab6), 0xe2);
        // CB E2 0251
        gbc.setState(0x5d4e, 0xbd64, 0x53a0, 0x1ea6, 0xe915, 0x857a, 0x1, 0x1);
        gbc.writeMem(0x5d4e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0x5d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0252
        gbc.setState(0xc6e1, 0xac2, 0xce50, 0xcd07, 0x4795, 0xf16e, 0x0, 0x1);
        gbc.writeMem(0xc6e1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xac2);
        EXPECT(gbc.pc(), 0xc6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e1), 0xcb);
        EXPECT(gbc.readMem(0xc6e2), 0xe2);
        // CB E2 0253
        gbc.setState(0x7a9a, 0x879e, 0x7650, 0x3b79, 0x778e, 0x4734, 0x0, 0x0);
        gbc.writeMem(0x7a9a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x879e);
        EXPECT(gbc.pc(), 0x7a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0254
        gbc.setState(0xe0dd, 0x2400, 0x4c60, 0xc2d, 0xf046, 0xf3fe, 0x1, 0x1);
        gbc.writeMem(0xe0dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2400);
        EXPECT(gbc.pc(), 0xe0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0dd), 0xcb);
        EXPECT(gbc.readMem(0xe0de), 0xe2);
        // CB E2 0255
        gbc.setState(0x3855, 0xe33f, 0xfe10, 0x1ee1, 0xfd12, 0x5841, 0x1, 0x0);
        gbc.writeMem(0x3855, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe33f);
        EXPECT(gbc.pc(), 0x3857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0256
        gbc.setState(0x714a, 0x93e2, 0x2a20, 0x51e5, 0x3e6b, 0xa1eb, 0x0, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x93e2);
        EXPECT(gbc.pc(), 0x714c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0257
        gbc.setState(0x7a58, 0xdfd, 0xd420, 0x22ff, 0xbc58, 0x659b, 0x1, 0x1);
        gbc.writeMem(0x7a58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdfd);
        EXPECT(gbc.pc(), 0x7a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0258
        gbc.setState(0x803d, 0x83f8, 0x15a0, 0x1dfe, 0x5a1c, 0xe395, 0x1, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x83f8);
        EXPECT(gbc.pc(), 0x803f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803d), 0xcb);
        EXPECT(gbc.readMem(0x803e), 0xe2);
        // CB E2 0259
        gbc.setState(0x558a, 0x6af2, 0xda60, 0x6a27, 0x5e5a, 0x2876, 0x0, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6af2);
        EXPECT(gbc.pc(), 0x558c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 025A
        gbc.setState(0xe304, 0xea73, 0x15d0, 0x37a8, 0x37b7, 0x560, 0x1, 0x0);
        gbc.writeMem(0xe304, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xea73);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe304), 0xcb);
        EXPECT(gbc.readMem(0xe305), 0xe2);
        // CB E2 025B
        gbc.setState(0x7c39, 0xe87e, 0xdb50, 0x8013, 0x5ffc, 0x9960, 0x0, 0x1);
        gbc.writeMem(0x7c39, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x7c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 025C
        gbc.setState(0xcac9, 0x52c9, 0x8be0, 0xc6fb, 0xf97a, 0xe671, 0x0, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x52c9);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac9), 0xcb);
        EXPECT(gbc.readMem(0xcaca), 0xe2);
        // CB E2 025D
        gbc.setState(0xa729, 0x2a2d, 0x7e00, 0x2da3, 0xeed7, 0xc743, 0x1, 0x0);
        gbc.writeMem(0xa729, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a2d);
        EXPECT(gbc.pc(), 0xa72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa729), 0xcb);
        EXPECT(gbc.readMem(0xa72a), 0xe2);
        // CB E2 025E
        gbc.setState(0xe6d1, 0x2a3f, 0x14c0, 0x92f8, 0xf582, 0xc5bb, 0x1, 0x1);
        gbc.writeMem(0xe6d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2a3f);
        EXPECT(gbc.pc(), 0xe6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d1), 0xcb);
        EXPECT(gbc.readMem(0xe6d2), 0xe2);
        // CB E2 025F
        gbc.setState(0x11a5, 0x1892, 0x4580, 0x42b9, 0x358e, 0x3ec4, 0x1, 0x1);
        gbc.writeMem(0x11a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1892);
        EXPECT(gbc.pc(), 0x11a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0260
        gbc.setState(0x4f82, 0x4ef6, 0x3050, 0x4091, 0xcc18, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x4f82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4ef6);
        EXPECT(gbc.pc(), 0x4f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0261
        gbc.setState(0x7e6c, 0x32de, 0xb700, 0x4604, 0x3c6b, 0x89b1, 0x0, 0x1);
        gbc.writeMem(0x7e6c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x32de);
        EXPECT(gbc.pc(), 0x7e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0262
        gbc.setState(0xeb6a, 0x53ab, 0x130, 0x7c1b, 0x8cda, 0x92e9, 0x0, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x53ab);
        EXPECT(gbc.pc(), 0xeb6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6a), 0xcb);
        EXPECT(gbc.readMem(0xeb6b), 0xe2);
        // CB E2 0263
        gbc.setState(0x35c0, 0x9dda, 0x23a0, 0xd96b, 0x12e2, 0x46ef, 0x0, 0x0);
        gbc.writeMem(0x35c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9dda);
        EXPECT(gbc.pc(), 0x35c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0264
        gbc.setState(0x3816, 0x9f6e, 0xb300, 0xdda9, 0xc0be, 0xbdea, 0x1, 0x0);
        gbc.writeMem(0x3816, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9f6e);
        EXPECT(gbc.pc(), 0x3818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0265
        gbc.setState(0xb942, 0x179f, 0x1a0, 0xf70d, 0x211e, 0xacf6, 0x1, 0x1);
        gbc.writeMem(0xb942, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x179f);
        EXPECT(gbc.pc(), 0xb944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb942), 0xcb);
        EXPECT(gbc.readMem(0xb943), 0xe2);
        // CB E2 0266
        gbc.setState(0x1f00, 0x1ba6, 0x5d50, 0x99b5, 0x3e40, 0xbf8b, 0x0, 0x1);
        gbc.writeMem(0x1f00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1ba6);
        EXPECT(gbc.pc(), 0x1f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0267
        gbc.setState(0x5e7a, 0x6fbb, 0x3890, 0x42cd, 0x41e, 0xab9e, 0x0, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6fbb);
        EXPECT(gbc.pc(), 0x5e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0269
        gbc.setState(0x3623, 0xbe96, 0x16c0, 0x858c, 0xb44c, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x3623, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbe96);
        EXPECT(gbc.pc(), 0x3625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 026A
        gbc.setState(0xd9a9, 0x5cb3, 0xca60, 0x6d99, 0x82df, 0x1cb8, 0x1, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5cb3);
        EXPECT(gbc.pc(), 0xd9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a9), 0xcb);
        EXPECT(gbc.readMem(0xd9aa), 0xe2);
        // CB E2 026B
        gbc.setState(0xa8c4, 0xea62, 0x6b30, 0xaef0, 0x8a49, 0x3e8c, 0x1, 0x1);
        gbc.writeMem(0xa8c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xea62);
        EXPECT(gbc.pc(), 0xa8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c4), 0xcb);
        EXPECT(gbc.readMem(0xa8c5), 0xe2);
        // CB E2 026C
        gbc.setState(0x1ef4, 0x7660, 0x3e70, 0x45f0, 0xf583, 0x58e1, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7660);
        EXPECT(gbc.pc(), 0x1ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 026D
        gbc.setState(0xe005, 0xeb45, 0xaaf0, 0x150c, 0x1758, 0x39a2, 0x1, 0x0);
        gbc.writeMem(0xe005, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xeb45);
        EXPECT(gbc.pc(), 0xe007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe005), 0xcb);
        EXPECT(gbc.readMem(0xe006), 0xe2);
        // CB E2 026E
        gbc.setState(0xe50f, 0x21af, 0xf50, 0x4052, 0xce76, 0x2fb5, 0x1, 0x1);
        gbc.writeMem(0xe50f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0xe511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50f), 0xcb);
        EXPECT(gbc.readMem(0xe510), 0xe2);
        // CB E2 026F
        gbc.setState(0x849a, 0x1838, 0x6570, 0xdbc3, 0x4f0f, 0x4d73, 0x0, 0x1);
        gbc.writeMem(0x849a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1838);
        EXPECT(gbc.pc(), 0x849c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849a), 0xcb);
        EXPECT(gbc.readMem(0x849b), 0xe2);
        // CB E2 0270
        gbc.setState(0x5397, 0x97a3, 0xfcc0, 0xfc95, 0x4019, 0x3763, 0x0, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x97a3);
        EXPECT(gbc.pc(), 0x5399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0271
        gbc.setState(0x6fc4, 0xc288, 0x6e10, 0x3e4e, 0x593f, 0x1db3, 0x1, 0x1);
        gbc.writeMem(0x6fc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc288);
        EXPECT(gbc.pc(), 0x6fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0272
        gbc.setState(0x5626, 0x5c39, 0x2480, 0xbb09, 0x89e, 0x4e60, 0x0, 0x1);
        gbc.writeMem(0x5626, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0x5628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0273
        gbc.setState(0x33dc, 0x9f7e, 0xa340, 0x25ad, 0x9a66, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0x33dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9f7e);
        EXPECT(gbc.pc(), 0x33de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0274
        gbc.setState(0xd0b5, 0x9aff, 0xaaf0, 0xc34d, 0x6c38, 0x7e22, 0x1, 0x0);
        gbc.writeMem(0xd0b5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9aff);
        EXPECT(gbc.pc(), 0xd0b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b5), 0xcb);
        EXPECT(gbc.readMem(0xd0b6), 0xe2);
        // CB E2 0275
        gbc.setState(0xddc3, 0x1723, 0x1940, 0xb0f1, 0xcfc6, 0xcd47, 0x0, 0x0);
        gbc.writeMem(0xddc3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1723);
        EXPECT(gbc.pc(), 0xddc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc3), 0xcb);
        EXPECT(gbc.readMem(0xddc4), 0xe2);
        // CB E2 0276
        gbc.setState(0xc356, 0x9b59, 0xf0e0, 0xecf1, 0x5dc6, 0x5d1b, 0x1, 0x1);
        gbc.writeMem(0xc356, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0xc358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc356), 0xcb);
        EXPECT(gbc.readMem(0xc357), 0xe2);
        // CB E2 0277
        gbc.setState(0x89c9, 0x420, 0x5940, 0x7195, 0x33a7, 0x614c, 0x0, 0x0);
        gbc.writeMem(0x89c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x420);
        EXPECT(gbc.pc(), 0x89cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c9), 0xcb);
        EXPECT(gbc.readMem(0x89ca), 0xe2);
        // CB E2 0278
        gbc.setState(0x56ec, 0x8525, 0xcd00, 0x2c24, 0x883b, 0xc8f, 0x0, 0x1);
        gbc.writeMem(0x56ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8525);
        EXPECT(gbc.pc(), 0x56ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0279
        gbc.setState(0x93b8, 0x9e2f, 0xb2d0, 0xa2f1, 0xc948, 0xef7f, 0x0, 0x1);
        gbc.writeMem(0x93b8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9e2f);
        EXPECT(gbc.pc(), 0x93ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b8), 0xcb);
        EXPECT(gbc.readMem(0x93b9), 0xe2);
        // CB E2 027A
        gbc.setState(0xe19f, 0x5dc1, 0x3df0, 0x4e63, 0x43eb, 0xe766, 0x1, 0x1);
        gbc.writeMem(0xe19f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0xe1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19f), 0xcb);
        EXPECT(gbc.readMem(0xe1a0), 0xe2);
        // CB E2 027B
        gbc.setState(0x4e3f, 0xc860, 0x7620, 0xcc4e, 0x44ee, 0x80ef, 0x1, 0x1);
        gbc.writeMem(0x4e3f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc860);
        EXPECT(gbc.pc(), 0x4e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 027C
        gbc.setState(0x8e7b, 0xd55f, 0xa70, 0x5202, 0x84ba, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x8e7b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd55f);
        EXPECT(gbc.pc(), 0x8e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7b), 0xcb);
        EXPECT(gbc.readMem(0x8e7c), 0xe2);
        // CB E2 027D
        gbc.setState(0xedd7, 0xb99e, 0xb240, 0x55ff, 0xd3b8, 0x3378, 0x0, 0x1);
        gbc.writeMem(0xedd7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb99e);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd7), 0xcb);
        EXPECT(gbc.readMem(0xedd8), 0xe2);
        // CB E2 027E
        gbc.setState(0xc848, 0x4f04, 0x6210, 0xdc08, 0xdc63, 0x7a33, 0x0, 0x1);
        gbc.writeMem(0xc848, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4f04);
        EXPECT(gbc.pc(), 0xc84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc848), 0xcb);
        EXPECT(gbc.readMem(0xc849), 0xe2);
        // CB E2 027F
        gbc.setState(0x893, 0xb318, 0x8e0, 0x810, 0x21fc, 0x3306, 0x0, 0x0);
        gbc.writeMem(0x893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb318);
        EXPECT(gbc.pc(), 0x895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0280
        gbc.setState(0x9a29, 0x758d, 0xbc00, 0xa2fd, 0x62a4, 0x98fb, 0x0, 0x0);
        gbc.writeMem(0x9a29, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x758d);
        EXPECT(gbc.pc(), 0x9a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a29), 0xcb);
        EXPECT(gbc.readMem(0x9a2a), 0xe2);
        // CB E2 0281
        gbc.setState(0x9954, 0xaee5, 0x6c40, 0x2bc9, 0x2e4f, 0x4c24, 0x0, 0x1);
        gbc.writeMem(0x9954, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaee5);
        EXPECT(gbc.pc(), 0x9956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9954), 0xcb);
        EXPECT(gbc.readMem(0x9955), 0xe2);
        // CB E2 0282
        gbc.setState(0x7d31, 0x8ed2, 0x9c30, 0xa11f, 0x794, 0x48a0, 0x1, 0x0);
        gbc.writeMem(0x7d31, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8ed2);
        EXPECT(gbc.pc(), 0x7d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0283
        gbc.setState(0xef68, 0x61f2, 0x3610, 0xfd8b, 0x892b, 0x2231, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x61f2);
        EXPECT(gbc.pc(), 0xef6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef68), 0xcb);
        EXPECT(gbc.readMem(0xef69), 0xe2);
        // CB E2 0284
        gbc.setState(0x3063, 0xf226, 0xa210, 0x4588, 0x5820, 0x2f08, 0x0, 0x1);
        gbc.writeMem(0x3063, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf226);
        EXPECT(gbc.pc(), 0x3065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0285
        gbc.setState(0xd948, 0xaa8b, 0x4ce0, 0x1ebd, 0xf1cd, 0xb86f, 0x1, 0x0);
        gbc.writeMem(0xd948, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaa8b);
        EXPECT(gbc.pc(), 0xd94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd948), 0xcb);
        EXPECT(gbc.readMem(0xd949), 0xe2);
        // CB E2 0286
        gbc.setState(0xbec2, 0x276, 0xa640, 0xfd18, 0xa3fd, 0x56ae, 0x1, 0x0);
        gbc.writeMem(0xbec2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x276);
        EXPECT(gbc.pc(), 0xbec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec2), 0xcb);
        EXPECT(gbc.readMem(0xbec3), 0xe2);
        // CB E2 0288
        gbc.setState(0x2698, 0x36b9, 0x8f40, 0xbf9e, 0x8d97, 0x371e, 0x0, 0x0);
        gbc.writeMem(0x2698, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x36b9);
        EXPECT(gbc.pc(), 0x269a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0289
        gbc.setState(0x7ed7, 0xb587, 0x2670, 0xd1aa, 0xa63b, 0x3e93, 0x1, 0x1);
        gbc.writeMem(0x7ed7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x7ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 028A
        gbc.setState(0x4c56, 0xd53a, 0x3780, 0xa127, 0xee44, 0x6a4, 0x1, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd53a);
        EXPECT(gbc.pc(), 0x4c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 028B
        gbc.setState(0xe55a, 0x35a7, 0x4ec0, 0xd682, 0x27f7, 0xea55, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x35a7);
        EXPECT(gbc.pc(), 0xe55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55a), 0xcb);
        EXPECT(gbc.readMem(0xe55b), 0xe2);
        // CB E2 028C
        gbc.setState(0xe3c8, 0x2fb2, 0x8e60, 0x1e5c, 0x80e4, 0x6b2d, 0x0, 0x1);
        gbc.writeMem(0xe3c8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2fb2);
        EXPECT(gbc.pc(), 0xe3ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c8), 0xcb);
        EXPECT(gbc.readMem(0xe3c9), 0xe2);
        // CB E2 028D
        gbc.setState(0xcc84, 0x8a70, 0xb3d0, 0x420a, 0x88de, 0xce30, 0x1, 0x0);
        gbc.writeMem(0xcc84, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8a70);
        EXPECT(gbc.pc(), 0xcc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc84), 0xcb);
        EXPECT(gbc.readMem(0xcc85), 0xe2);
        // CB E2 028E
        gbc.setState(0x5b5c, 0xd4fa, 0x3d50, 0xddfc, 0x5e45, 0x563d, 0x0, 0x0);
        gbc.writeMem(0x5b5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd4fa);
        EXPECT(gbc.pc(), 0x5b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 028F
        gbc.setState(0x573d, 0xfc78, 0x41c0, 0x2d4f, 0x981, 0xc9c8, 0x0, 0x1);
        gbc.writeMem(0x573d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfc78);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0290
        gbc.setState(0x49a0, 0x29ae, 0x6b30, 0x3270, 0xf06a, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0x49a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x29ae);
        EXPECT(gbc.pc(), 0x49a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0291
        gbc.setState(0x13ba, 0xcc8c, 0xe330, 0x40a0, 0x13b4, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x13ba, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc8c);
        EXPECT(gbc.pc(), 0x13bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0292
        gbc.setState(0x2e7, 0xdc83, 0xab80, 0x13ed, 0x19ec, 0x6356, 0x1, 0x0);
        gbc.writeMem(0x2e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdc83);
        EXPECT(gbc.pc(), 0x2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0293
        gbc.setState(0xe801, 0x5e3c, 0xa700, 0xc790, 0x42a2, 0x1927, 0x1, 0x1);
        gbc.writeMem(0xe801, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5e3c);
        EXPECT(gbc.pc(), 0xe803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe801), 0xcb);
        EXPECT(gbc.readMem(0xe802), 0xe2);
        // CB E2 0294
        gbc.setState(0xbd34, 0xda89, 0x5110, 0xf2ae, 0x3e33, 0xb6a3, 0x0, 0x1);
        gbc.writeMem(0xbd34, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0xbd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd34), 0xcb);
        EXPECT(gbc.readMem(0xbd35), 0xe2);
        // CB E2 0295
        gbc.setState(0x629c, 0x8ddd, 0x6580, 0xfd8b, 0x73bd, 0x15a7, 0x0, 0x0);
        gbc.writeMem(0x629c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8ddd);
        EXPECT(gbc.pc(), 0x629e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0296
        gbc.setState(0xe0ff, 0xb950, 0xc5b0, 0x2ba8, 0x28ec, 0x782e, 0x0, 0x0);
        gbc.writeMem(0xe0ff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb950);
        EXPECT(gbc.pc(), 0xe101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ff), 0xcb);
        EXPECT(gbc.readMem(0xe100), 0xe2);
        // CB E2 0297
        gbc.setState(0x9b07, 0x57d2, 0x4a70, 0xc2eb, 0x413b, 0x1e15, 0x1, 0x1);
        gbc.writeMem(0x9b07, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x57d2);
        EXPECT(gbc.pc(), 0x9b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b07), 0xcb);
        EXPECT(gbc.readMem(0x9b08), 0xe2);
        // CB E2 0298
        gbc.setState(0xed38, 0x8e77, 0xb60, 0x4f1d, 0x549d, 0x80b2, 0x0, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8e77);
        EXPECT(gbc.pc(), 0xed3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed38), 0xcb);
        EXPECT(gbc.readMem(0xed39), 0xe2);
        // CB E2 0299
        gbc.setState(0xa53d, 0x8921, 0x7d50, 0x7aac, 0x168b, 0x9663, 0x0, 0x1);
        gbc.writeMem(0xa53d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0xa53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa53d), 0xcb);
        EXPECT(gbc.readMem(0xa53e), 0xe2);
        // CB E2 029A
        gbc.setState(0x85c9, 0xcf9a, 0x2b00, 0x81dd, 0x3225, 0x7eac, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcf9a);
        EXPECT(gbc.pc(), 0x85cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c9), 0xcb);
        EXPECT(gbc.readMem(0x85ca), 0xe2);
        // CB E2 029B
        gbc.setState(0x55de, 0xadd6, 0xf070, 0x5093, 0xe14d, 0x6b3a, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xadd6);
        EXPECT(gbc.pc(), 0x55e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 029C
        gbc.setState(0xe3a4, 0x552c, 0x6b40, 0xf02a, 0x8d3a, 0x4f63, 0x0, 0x1);
        gbc.writeMem(0xe3a4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x552c);
        EXPECT(gbc.pc(), 0xe3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a4), 0xcb);
        EXPECT(gbc.readMem(0xe3a5), 0xe2);
        // CB E2 029D
        gbc.setState(0x3fa7, 0x4a5d, 0xfb80, 0x4e21, 0xff33, 0x6538, 0x1, 0x1);
        gbc.writeMem(0x3fa7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4a5d);
        EXPECT(gbc.pc(), 0x3fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 029E
        gbc.setState(0x77d8, 0xb4dc, 0x94c0, 0x6cfa, 0x276f, 0x8db7, 0x1, 0x1);
        gbc.writeMem(0x77d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb4dc);
        EXPECT(gbc.pc(), 0x77da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02A0
        gbc.setState(0x6347, 0x9933, 0x2f00, 0x7ab4, 0x2234, 0xc6f2, 0x0, 0x1);
        gbc.writeMem(0x6347, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x6349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02A1
        gbc.setState(0x98a5, 0x3937, 0xf8c0, 0xd0a5, 0xd3e4, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x98a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3937);
        EXPECT(gbc.pc(), 0x98a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a5), 0xcb);
        EXPECT(gbc.readMem(0x98a6), 0xe2);
        // CB E2 02A2
        gbc.setState(0x3b83, 0x67f8, 0x4790, 0xd969, 0x382f, 0xa183, 0x1, 0x1);
        gbc.writeMem(0x3b83, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x67f8);
        EXPECT(gbc.pc(), 0x3b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02A3
        gbc.setState(0x8faa, 0xcef5, 0xf3b0, 0x9286, 0xba62, 0x78ba, 0x0, 0x1);
        gbc.writeMem(0x8faa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcef5);
        EXPECT(gbc.pc(), 0x8fac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8faa), 0xcb);
        EXPECT(gbc.readMem(0x8fab), 0xe2);
        // CB E2 02A4
        gbc.setState(0x9e4d, 0x7b45, 0xe0b0, 0xfa54, 0x8db2, 0x5c3a, 0x1, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7b45);
        EXPECT(gbc.pc(), 0x9e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4d), 0xcb);
        EXPECT(gbc.readMem(0x9e4e), 0xe2);
        // CB E2 02A5
        gbc.setState(0x50c4, 0x8a14, 0xc920, 0x7751, 0x20d6, 0x40ea, 0x0, 0x1);
        gbc.writeMem(0x50c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8a14);
        EXPECT(gbc.pc(), 0x50c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02A6
        gbc.setState(0xe2c8, 0x6eb9, 0xc120, 0x51c1, 0xb041, 0x3d7a, 0x1, 0x1);
        gbc.writeMem(0xe2c8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6eb9);
        EXPECT(gbc.pc(), 0xe2ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c8), 0xcb);
        EXPECT(gbc.readMem(0xe2c9), 0xe2);
        // CB E2 02A7
        gbc.setState(0x33a9, 0x6fc8, 0x6590, 0x7577, 0xfd3, 0x1a76, 0x1, 0x1);
        gbc.writeMem(0x33a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6fc8);
        EXPECT(gbc.pc(), 0x33ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02A8
        gbc.setState(0x5659, 0xf757, 0x82b0, 0xa79e, 0x2017, 0x7471, 0x0, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf757);
        EXPECT(gbc.pc(), 0x565b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02A9
        gbc.setState(0xa79e, 0xe747, 0xaed0, 0x576d, 0x4a98, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0xa79e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe747);
        EXPECT(gbc.pc(), 0xa7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79e), 0xcb);
        EXPECT(gbc.readMem(0xa79f), 0xe2);
        // CB E2 02AA
        gbc.setState(0xaaf9, 0xfea9, 0x77a0, 0x3dc9, 0xee96, 0xf4d5, 0x1, 0x1);
        gbc.writeMem(0xaaf9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfea9);
        EXPECT(gbc.pc(), 0xaafb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf9), 0xcb);
        EXPECT(gbc.readMem(0xaafa), 0xe2);
        // CB E2 02AB
        gbc.setState(0xe3a7, 0xe146, 0x5640, 0xd5e0, 0xbf09, 0x25e, 0x1, 0x0);
        gbc.writeMem(0xe3a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe146);
        EXPECT(gbc.pc(), 0xe3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a7), 0xcb);
        EXPECT(gbc.readMem(0xe3a8), 0xe2);
        // CB E2 02AC
        gbc.setState(0x958c, 0xbe32, 0xd330, 0xe435, 0x7044, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0x958c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0x958e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958c), 0xcb);
        EXPECT(gbc.readMem(0x958d), 0xe2);
        // CB E2 02AD
        gbc.setState(0x95be, 0x8f7e, 0xcc20, 0x6f16, 0x4a61, 0xc0be, 0x1, 0x0);
        gbc.writeMem(0x95be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0x95c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95be), 0xcb);
        EXPECT(gbc.readMem(0x95bf), 0xe2);
        // CB E2 02AE
        gbc.setState(0xad19, 0x509, 0x6140, 0xfe6e, 0xb059, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xad19, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x509);
        EXPECT(gbc.pc(), 0xad1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad19), 0xcb);
        EXPECT(gbc.readMem(0xad1a), 0xe2);
        // CB E2 02AF
        gbc.setState(0x93f4, 0x6cad, 0xdfd0, 0x1e72, 0xf1fc, 0x77aa, 0x0, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6cad);
        EXPECT(gbc.pc(), 0x93f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f4), 0xcb);
        EXPECT(gbc.readMem(0x93f5), 0xe2);
        // CB E2 02B1
        gbc.setState(0x49a6, 0x6c81, 0x90d0, 0x729c, 0xe1c7, 0x353, 0x0, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6c81);
        EXPECT(gbc.pc(), 0x49a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02B3
        gbc.setState(0xe18a, 0x9b2, 0x90b0, 0x5553, 0x2a8c, 0x7c9e, 0x0, 0x0);
        gbc.writeMem(0xe18a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9b2);
        EXPECT(gbc.pc(), 0xe18c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18a), 0xcb);
        EXPECT(gbc.readMem(0xe18b), 0xe2);
        // CB E2 02B4
        gbc.setState(0x18d8, 0xff1b, 0x7860, 0x1234, 0xeafa, 0x72bb, 0x0, 0x1);
        gbc.writeMem(0x18d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xff1b);
        EXPECT(gbc.pc(), 0x18da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02B5
        gbc.setState(0x52a3, 0xbedb, 0xa780, 0x44a3, 0xfc22, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0x52a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0x52a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02B6
        gbc.setState(0x84f0, 0x17bc, 0xf20, 0xc277, 0xae47, 0x18d, 0x1, 0x0);
        gbc.writeMem(0x84f0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x17bc);
        EXPECT(gbc.pc(), 0x84f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f0), 0xcb);
        EXPECT(gbc.readMem(0x84f1), 0xe2);
        // CB E2 02B7
        gbc.setState(0x8eb8, 0xe65c, 0xe3f0, 0x5f9b, 0xce20, 0x1ce7, 0x0, 0x0);
        gbc.writeMem(0x8eb8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe65c);
        EXPECT(gbc.pc(), 0x8eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb8), 0xcb);
        EXPECT(gbc.readMem(0x8eb9), 0xe2);
        // CB E2 02B8
        gbc.setState(0xe7d8, 0x78e, 0xa6c0, 0x16ca, 0xb3c2, 0x2e64, 0x1, 0x0);
        gbc.writeMem(0xe7d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x78e);
        EXPECT(gbc.pc(), 0xe7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d8), 0xcb);
        EXPECT(gbc.readMem(0xe7d9), 0xe2);
        // CB E2 02B9
        gbc.setState(0xea00, 0x978d, 0xe830, 0x2822, 0x6093, 0x26e8, 0x0, 0x0);
        gbc.writeMem(0xea00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0xea02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea00), 0xcb);
        EXPECT(gbc.readMem(0xea01), 0xe2);
        // CB E2 02BA
        gbc.setState(0xa017, 0xa2e8, 0x3b0, 0x54b4, 0x2d35, 0x89c8, 0x1, 0x0);
        gbc.writeMem(0xa017, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa2e8);
        EXPECT(gbc.pc(), 0xa019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa017), 0xcb);
        EXPECT(gbc.readMem(0xa018), 0xe2);
        // CB E2 02BB
        gbc.setState(0x3cfc, 0xd73c, 0xee20, 0xc91e, 0x999f, 0xb3a7, 0x1, 0x0);
        gbc.writeMem(0x3cfc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd73c);
        EXPECT(gbc.pc(), 0x3cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02BC
        gbc.setState(0xe9ee, 0x501a, 0x3b80, 0x14ec, 0x15cb, 0x2ebc, 0x0, 0x1);
        gbc.writeMem(0xe9ee, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x501a);
        EXPECT(gbc.pc(), 0xe9f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ee), 0xcb);
        EXPECT(gbc.readMem(0xe9ef), 0xe2);
        // CB E2 02BD
        gbc.setState(0xb786, 0xbc98, 0xc7a0, 0xdb21, 0xb876, 0x6064, 0x0, 0x0);
        gbc.writeMem(0xb786, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbc98);
        EXPECT(gbc.pc(), 0xb788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb786), 0xcb);
        EXPECT(gbc.readMem(0xb787), 0xe2);
        // CB E2 02BF
        gbc.setState(0x73d4, 0xec78, 0xe3c0, 0x3bd, 0x236, 0xc4fb, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xec78);
        EXPECT(gbc.pc(), 0x73d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02C0
        gbc.setState(0xd797, 0xc6ab, 0xeee0, 0xdba, 0xd753, 0x694e, 0x1, 0x0);
        gbc.writeMem(0xd797, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0xd799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd797), 0xcb);
        EXPECT(gbc.readMem(0xd798), 0xe2);
        // CB E2 02C1
        gbc.setState(0x3f28, 0x4d1c, 0x62e0, 0xf8d7, 0x3a73, 0xb3f8, 0x1, 0x0);
        gbc.writeMem(0x3f28, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4d1c);
        EXPECT(gbc.pc(), 0x3f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02C2
        gbc.setState(0xdd52, 0x49dd, 0x9f70, 0x827c, 0xb32b, 0x80b1, 0x0, 0x0);
        gbc.writeMem(0xdd52, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x49dd);
        EXPECT(gbc.pc(), 0xdd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd52), 0xcb);
        EXPECT(gbc.readMem(0xdd53), 0xe2);
        // CB E2 02C3
        gbc.setState(0x2916, 0xd92, 0xfec0, 0xc9d, 0x14d1, 0x6f62, 0x0, 0x0);
        gbc.writeMem(0x2916, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd92);
        EXPECT(gbc.pc(), 0x2918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02C4
        gbc.setState(0x7637, 0x60cb, 0x15c0, 0xfc4, 0x649c, 0xcc6f, 0x1, 0x0);
        gbc.writeMem(0x7637, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x60cb);
        EXPECT(gbc.pc(), 0x7639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02C5
        gbc.setState(0x398a, 0x44e6, 0xa6c0, 0x956b, 0x3ce3, 0x2043, 0x1, 0x0);
        gbc.writeMem(0x398a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02C6
        gbc.setState(0x8fda, 0xe2d5, 0x8bd0, 0x1e6b, 0x2546, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe2d5);
        EXPECT(gbc.pc(), 0x8fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fda), 0xcb);
        EXPECT(gbc.readMem(0x8fdb), 0xe2);
        // CB E2 02C7
        gbc.setState(0x82f7, 0x26ee, 0x97d0, 0x412d, 0xc12, 0x3008, 0x0, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0x82f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f7), 0xcb);
        EXPECT(gbc.readMem(0x82f8), 0xe2);
        // CB E2 02C8
        gbc.setState(0x62ec, 0xd6cb, 0x63d0, 0xd3d5, 0x18b4, 0x45e4, 0x0, 0x0);
        gbc.writeMem(0x62ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd6cb);
        EXPECT(gbc.pc(), 0x62ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02C9
        gbc.setState(0x1099, 0x50d3, 0xb350, 0x72f, 0x861a, 0xdb13, 0x1, 0x0);
        gbc.writeMem(0x1099, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x50d3);
        EXPECT(gbc.pc(), 0x109b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02CA
        gbc.setState(0xe1b1, 0x836c, 0x9ac0, 0x816e, 0x8e02, 0x2c75, 0x1, 0x1);
        gbc.writeMem(0xe1b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x836c);
        EXPECT(gbc.pc(), 0xe1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b1), 0xcb);
        EXPECT(gbc.readMem(0xe1b2), 0xe2);
        // CB E2 02CB
        gbc.setState(0x5366, 0x1228, 0xb2a0, 0x51c3, 0x61bc, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x5366, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1228);
        EXPECT(gbc.pc(), 0x5368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02CC
        gbc.setState(0xacb8, 0x69f0, 0xfb80, 0x76bf, 0xae8e, 0x477c, 0x1, 0x0);
        gbc.writeMem(0xacb8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0xacba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb8), 0xcb);
        EXPECT(gbc.readMem(0xacb9), 0xe2);
        // CB E2 02CD
        gbc.setState(0x26a9, 0x7975, 0xa660, 0xfb54, 0xb8bd, 0x5ae0, 0x0, 0x1);
        gbc.writeMem(0x26a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7975);
        EXPECT(gbc.pc(), 0x26ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02CE
        gbc.setState(0x5f22, 0xbbfc, 0xa360, 0x3194, 0x3cec, 0x872e, 0x0, 0x0);
        gbc.writeMem(0x5f22, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0x5f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02CF
        gbc.setState(0x9c7e, 0x2b1a, 0x8500, 0x179c, 0x2ac9, 0xfe21, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2b1a);
        EXPECT(gbc.pc(), 0x9c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7e), 0xcb);
        EXPECT(gbc.readMem(0x9c7f), 0xe2);
        // CB E2 02D0
        gbc.setState(0xc1c9, 0xf439, 0x16e0, 0xbe3a, 0xd15a, 0x19c0, 0x1, 0x0);
        gbc.writeMem(0xc1c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf439);
        EXPECT(gbc.pc(), 0xc1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c9), 0xcb);
        EXPECT(gbc.readMem(0xc1ca), 0xe2);
        // CB E2 02D1
        gbc.setState(0xc55d, 0x4d3f, 0xf210, 0x6911, 0xb07, 0xe01e, 0x0, 0x1);
        gbc.writeMem(0xc55d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4d3f);
        EXPECT(gbc.pc(), 0xc55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55d), 0xcb);
        EXPECT(gbc.readMem(0xc55e), 0xe2);
        // CB E2 02D2
        gbc.setState(0x42c, 0x1e26, 0xfd60, 0xf092, 0xf111, 0x873d, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1e26);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02D3
        gbc.setState(0xc2b4, 0xce56, 0xe0e0, 0x87aa, 0xffc4, 0x60b5, 0x0, 0x1);
        gbc.writeMem(0xc2b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xce56);
        EXPECT(gbc.pc(), 0xc2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b4), 0xcb);
        EXPECT(gbc.readMem(0xc2b5), 0xe2);
        // CB E2 02D5
        gbc.setState(0x10d4, 0xf235, 0x5e00, 0x7956, 0x1ef, 0xaab1, 0x1, 0x1);
        gbc.writeMem(0x10d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf235);
        EXPECT(gbc.pc(), 0x10d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02D6
        gbc.setState(0xefb0, 0xbe91, 0x600, 0x1d43, 0x6242, 0x5dfb, 0x1, 0x0);
        gbc.writeMem(0xefb0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbe91);
        EXPECT(gbc.pc(), 0xefb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb0), 0xcb);
        EXPECT(gbc.readMem(0xefb1), 0xe2);
        // CB E2 02D7
        gbc.setState(0x896a, 0x6bdc, 0x9e00, 0xe392, 0x5ea, 0x67e7, 0x1, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6bdc);
        EXPECT(gbc.pc(), 0x896c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896a), 0xcb);
        EXPECT(gbc.readMem(0x896b), 0xe2);
        // CB E2 02D8
        gbc.setState(0x37a7, 0x1448, 0x2a20, 0xaece, 0x2695, 0x493d, 0x0, 0x0);
        gbc.writeMem(0x37a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1448);
        EXPECT(gbc.pc(), 0x37a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02D9
        gbc.setState(0x574b, 0xdbf8, 0xd460, 0x956d, 0xabb4, 0x5fff, 0x0, 0x0);
        gbc.writeMem(0x574b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdbf8);
        EXPECT(gbc.pc(), 0x574d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02DA
        gbc.setState(0x7e8, 0x9fd8, 0x3860, 0xceef, 0x7d49, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x7e8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9fd8);
        EXPECT(gbc.pc(), 0x7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02DB
        gbc.setState(0x31ce, 0xbc4, 0x76a0, 0x10f8, 0xbe44, 0xea9e, 0x1, 0x1);
        gbc.writeMem(0x31ce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbc4);
        EXPECT(gbc.pc(), 0x31d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02DC
        gbc.setState(0x2599, 0x559f, 0xc840, 0xdcba, 0xbd10, 0xb751, 0x1, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0x259b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02DD
        gbc.setState(0x3a15, 0xf43f, 0xff40, 0x7517, 0x83b8, 0xb83a, 0x1, 0x1);
        gbc.writeMem(0x3a15, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf43f);
        EXPECT(gbc.pc(), 0x3a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02DE
        gbc.setState(0xc93d, 0x6589, 0x8100, 0x2b63, 0xbb2d, 0x8601, 0x0, 0x0);
        gbc.writeMem(0xc93d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6589);
        EXPECT(gbc.pc(), 0xc93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93d), 0xcb);
        EXPECT(gbc.readMem(0xc93e), 0xe2);
        // CB E2 02DF
        gbc.setState(0x2be2, 0xde1b, 0x3a60, 0x8ae5, 0xf0de, 0xa158, 0x0, 0x0);
        gbc.writeMem(0x2be2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xde1b);
        EXPECT(gbc.pc(), 0x2be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02E0
        gbc.setState(0xd896, 0xde65, 0x1670, 0x37fa, 0xb5b8, 0x77fc, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd896), 0xcb);
        EXPECT(gbc.readMem(0xd897), 0xe2);
        // CB E2 02E1
        gbc.setState(0x427a, 0x7e6, 0x4240, 0xd0fa, 0xe07b, 0x5509, 0x1, 0x1);
        gbc.writeMem(0x427a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7e6);
        EXPECT(gbc.pc(), 0x427c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02E2
        gbc.setState(0x5dc7, 0x45cc, 0x2620, 0x5bc7, 0x497b, 0x5ef, 0x0, 0x0);
        gbc.writeMem(0x5dc7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0x5dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02E3
        gbc.setState(0x56ed, 0x52a1, 0xd7f0, 0xd86d, 0xc4fa, 0xbc10, 0x0, 0x1);
        gbc.writeMem(0x56ed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x52a1);
        EXPECT(gbc.pc(), 0x56ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02E4
        gbc.setState(0xab2d, 0xd6b5, 0x8e0, 0xfa8d, 0xe582, 0xfa7a, 0x0, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd6b5);
        EXPECT(gbc.pc(), 0xab2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2d), 0xcb);
        EXPECT(gbc.readMem(0xab2e), 0xe2);
        // CB E2 02E5
        gbc.setState(0x21b4, 0x97ca, 0x47b0, 0x3148, 0x4a1b, 0x909d, 0x1, 0x1);
        gbc.writeMem(0x21b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x97ca);
        EXPECT(gbc.pc(), 0x21b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02E6
        gbc.setState(0x6e35, 0xbd9f, 0x5900, 0x2ea6, 0x131f, 0xe3e7, 0x0, 0x0);
        gbc.writeMem(0x6e35, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbd9f);
        EXPECT(gbc.pc(), 0x6e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02E7
        gbc.setState(0xe7ca, 0xf6f9, 0x44a0, 0x9600, 0xf3bd, 0x81ab, 0x0, 0x0);
        gbc.writeMem(0xe7ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf6f9);
        EXPECT(gbc.pc(), 0xe7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ca), 0xcb);
        EXPECT(gbc.readMem(0xe7cb), 0xe2);
        // CB E2 02E8
        gbc.setState(0x67fa, 0x1c81, 0x5ff0, 0xc2a3, 0x9cc0, 0x796d, 0x0, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1c81);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02E9
        gbc.setState(0x3d26, 0xe40c, 0xd230, 0x3899, 0x2a15, 0x69b4, 0x0, 0x0);
        gbc.writeMem(0x3d26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe40c);
        EXPECT(gbc.pc(), 0x3d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02EA
        gbc.setState(0x478d, 0xa954, 0x6590, 0x8d64, 0x400c, 0xb060, 0x1, 0x0);
        gbc.writeMem(0x478d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa954);
        EXPECT(gbc.pc(), 0x478f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02EC
        gbc.setState(0x5761, 0x3c96, 0xb7c0, 0x9a25, 0x99f7, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x5761, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3c96);
        EXPECT(gbc.pc(), 0x5763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02ED
        gbc.setState(0x931f, 0x7d50, 0x9730, 0xd283, 0x59b1, 0x54e6, 0x0, 0x0);
        gbc.writeMem(0x931f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7d50);
        EXPECT(gbc.pc(), 0x9321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931f), 0xcb);
        EXPECT(gbc.readMem(0x9320), 0xe2);
        // CB E2 02EE
        gbc.setState(0x7b52, 0x5c9, 0x3220, 0x931a, 0xe895, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5c9);
        EXPECT(gbc.pc(), 0x7b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02EF
        gbc.setState(0x5848, 0xc1ee, 0x230, 0xdc48, 0xff84, 0x48ad, 0x1, 0x1);
        gbc.writeMem(0x5848, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc1ee);
        EXPECT(gbc.pc(), 0x584a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02F0
        gbc.setState(0x450e, 0x3ae6, 0x7d10, 0x2783, 0x59fb, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x450e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0x4510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02F1
        gbc.setState(0x4f08, 0x5c72, 0xfec0, 0x30eb, 0xf771, 0x2a42, 0x0, 0x0);
        gbc.writeMem(0x4f08, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c72);
        EXPECT(gbc.pc(), 0x4f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02F2
        gbc.setState(0x473d, 0x6249, 0xc1c0, 0x377b, 0xe60e, 0x9c81, 0x0, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6249);
        EXPECT(gbc.pc(), 0x473f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02F3
        gbc.setState(0xb0da, 0xd9b7, 0x5170, 0x8f49, 0x5cfa, 0x558d, 0x1, 0x1);
        gbc.writeMem(0xb0da, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd9b7);
        EXPECT(gbc.pc(), 0xb0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0da), 0xcb);
        EXPECT(gbc.readMem(0xb0db), 0xe2);
        // CB E2 02F4
        gbc.setState(0xd71a, 0xb86c, 0x5b60, 0xa594, 0x8091, 0xe01, 0x0, 0x1);
        gbc.writeMem(0xd71a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb86c);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71a), 0xcb);
        EXPECT(gbc.readMem(0xd71b), 0xe2);
        // CB E2 02F5
        gbc.setState(0x2611, 0x27a2, 0x8560, 0xa899, 0xf1dd, 0xa783, 0x0, 0x1);
        gbc.writeMem(0x2611, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x27a2);
        EXPECT(gbc.pc(), 0x2613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02F6
        gbc.setState(0x835b, 0x3821, 0x8230, 0xbf6f, 0x813a, 0x47e8, 0x1, 0x1);
        gbc.writeMem(0x835b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3821);
        EXPECT(gbc.pc(), 0x835d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835b), 0xcb);
        EXPECT(gbc.readMem(0x835c), 0xe2);
        // CB E2 02F7
        gbc.setState(0x5bef, 0x2df4, 0xbad0, 0xb8ff, 0x2965, 0x32a5, 0x1, 0x1);
        gbc.writeMem(0x5bef, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2df4);
        EXPECT(gbc.pc(), 0x5bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02F8
        gbc.setState(0x8f27, 0xe9fe, 0xf0a0, 0x40cf, 0xd6fe, 0xd6e8, 0x1, 0x0);
        gbc.writeMem(0x8f27, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe9fe);
        EXPECT(gbc.pc(), 0x8f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f27), 0xcb);
        EXPECT(gbc.readMem(0x8f28), 0xe2);
        // CB E2 02F9
        gbc.setState(0x4f06, 0xeed4, 0x170, 0x5efc, 0xf6d8, 0xbfe6, 0x0, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeed4);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 02FA
        gbc.setState(0x5d20, 0x117c, 0xac00, 0xd6e1, 0x6a4e, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x117c);
        EXPECT(gbc.pc(), 0x5d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02FB
        gbc.setState(0x87db, 0x6500, 0x2880, 0x46f5, 0x6abc, 0xf106, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0x87dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87db), 0xcb);
        EXPECT(gbc.readMem(0x87dc), 0xe2);
        // CB E2 02FC
        gbc.setState(0x9ae1, 0x4e36, 0x6880, 0x9090, 0xd67e, 0x33cb, 0x1, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4e36);
        EXPECT(gbc.pc(), 0x9ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae1), 0xcb);
        EXPECT(gbc.readMem(0x9ae2), 0xe2);
        // CB E2 02FD
        gbc.setState(0x6406, 0x242, 0xfcc0, 0x6618, 0x5fc3, 0xa9eb, 0x1, 0x1);
        gbc.writeMem(0x6406, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x242);
        EXPECT(gbc.pc(), 0x6408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 02FE
        gbc.setState(0xd90e, 0x2e01, 0x8bb0, 0x727b, 0x3c3f, 0xa3b2, 0x0, 0x1);
        gbc.writeMem(0xd90e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2e01);
        EXPECT(gbc.pc(), 0xd910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90e), 0xcb);
        EXPECT(gbc.readMem(0xd90f), 0xe2);
        // CB E2 02FF
        gbc.setState(0xd6ea, 0xd1ee, 0xa680, 0xf153, 0xeea, 0x859a, 0x1, 0x0);
        gbc.writeMem(0xd6ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd1ee);
        EXPECT(gbc.pc(), 0xd6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ea), 0xcb);
        EXPECT(gbc.readMem(0xd6eb), 0xe2);
        // CB E2 0300
        gbc.setState(0xdf25, 0x23af, 0xdef0, 0x5868, 0xb2c6, 0xcced, 0x0, 0x1);
        gbc.writeMem(0xdf25, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x23af);
        EXPECT(gbc.pc(), 0xdf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf25), 0xcb);
        EXPECT(gbc.readMem(0xdf26), 0xe2);
        // CB E2 0301
        gbc.setState(0x66dd, 0x22ba, 0xce80, 0x57ae, 0xb4db, 0xa915, 0x1, 0x1);
        gbc.writeMem(0x66dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x22ba);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0302
        gbc.setState(0x3a2d, 0xf121, 0xebf0, 0x3630, 0x3c11, 0xa05f, 0x0, 0x0);
        gbc.writeMem(0x3a2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf121);
        EXPECT(gbc.pc(), 0x3a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0303
        gbc.setState(0xb921, 0x2ec3, 0x1fa0, 0x9c84, 0x18ef, 0xdea4, 0x1, 0x0);
        gbc.writeMem(0xb921, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2ec3);
        EXPECT(gbc.pc(), 0xb923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb921), 0xcb);
        EXPECT(gbc.readMem(0xb922), 0xe2);
        // CB E2 0304
        gbc.setState(0x8cfe, 0xa658, 0x7f0, 0x5828, 0x3e08, 0x958f, 0x1, 0x1);
        gbc.writeMem(0x8cfe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa658);
        EXPECT(gbc.pc(), 0x8d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfe), 0xcb);
        EXPECT(gbc.readMem(0x8cff), 0xe2);
        // CB E2 0305
        gbc.setState(0xa6ec, 0x98a2, 0x33b0, 0xaaa2, 0x7dbe, 0x3164, 0x0, 0x1);
        gbc.writeMem(0xa6ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x98a2);
        EXPECT(gbc.pc(), 0xa6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ec), 0xcb);
        EXPECT(gbc.readMem(0xa6ed), 0xe2);
        // CB E2 0306
        gbc.setState(0x1438, 0x30bd, 0xffd0, 0x3b59, 0xa155, 0x1a41, 0x1, 0x1);
        gbc.writeMem(0x1438, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x30bd);
        EXPECT(gbc.pc(), 0x143a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0307
        gbc.setState(0xe97a, 0xe644, 0xc230, 0xf072, 0xb596, 0xd03e, 0x1, 0x1);
        gbc.writeMem(0xe97a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe644);
        EXPECT(gbc.pc(), 0xe97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97a), 0xcb);
        EXPECT(gbc.readMem(0xe97b), 0xe2);
        // CB E2 0308
        gbc.setState(0xb288, 0x59bb, 0xaa50, 0x3d73, 0x661e, 0x8a61, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x59bb);
        EXPECT(gbc.pc(), 0xb28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb288), 0xcb);
        EXPECT(gbc.readMem(0xb289), 0xe2);
        // CB E2 0309
        gbc.setState(0xa01a, 0x256b, 0x4e70, 0x7fb6, 0xc717, 0xc69d, 0x1, 0x0);
        gbc.writeMem(0xa01a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x256b);
        EXPECT(gbc.pc(), 0xa01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01a), 0xcb);
        EXPECT(gbc.readMem(0xa01b), 0xe2);
        // CB E2 030A
        gbc.setState(0x37a, 0xc659, 0xe50, 0x7b27, 0xa63a, 0x8537, 0x0, 0x0);
        gbc.writeMem(0x37a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0x37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 030B
        gbc.setState(0x91e4, 0xdd9, 0xe3f0, 0x177, 0xcb2, 0x84a4, 0x1, 0x1);
        gbc.writeMem(0x91e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdd9);
        EXPECT(gbc.pc(), 0x91e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e4), 0xcb);
        EXPECT(gbc.readMem(0x91e5), 0xe2);
        // CB E2 030C
        gbc.setState(0x13bb, 0x221f, 0x3ad0, 0x2f10, 0xa4df, 0x8956, 0x0, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x221f);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 030D
        gbc.setState(0xc3b0, 0x6c74, 0x2b80, 0x1118, 0x3083, 0x4c6c, 0x1, 0x0);
        gbc.writeMem(0xc3b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6c74);
        EXPECT(gbc.pc(), 0xc3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b0), 0xcb);
        EXPECT(gbc.readMem(0xc3b1), 0xe2);
        // CB E2 030E
        gbc.setState(0x696b, 0xa5b6, 0x9880, 0x31b5, 0x326e, 0xdf60, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa5b6);
        EXPECT(gbc.pc(), 0x696d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0310
        gbc.setState(0xdb7f, 0x4b82, 0x1700, 0x6ec6, 0xc7c5, 0xd801, 0x1, 0x0);
        gbc.writeMem(0xdb7f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4b82);
        EXPECT(gbc.pc(), 0xdb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7f), 0xcb);
        EXPECT(gbc.readMem(0xdb80), 0xe2);
        // CB E2 0311
        gbc.setState(0x6f47, 0x1e25, 0x8140, 0x6a99, 0x302c, 0x15df, 0x0, 0x1);
        gbc.writeMem(0x6f47, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1e25);
        EXPECT(gbc.pc(), 0x6f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0312
        gbc.setState(0x9de8, 0xc6c9, 0xe540, 0x2206, 0x243b, 0x1845, 0x1, 0x0);
        gbc.writeMem(0x9de8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc6c9);
        EXPECT(gbc.pc(), 0x9dea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de8), 0xcb);
        EXPECT(gbc.readMem(0x9de9), 0xe2);
        // CB E2 0313
        gbc.setState(0x240c, 0x81f8, 0x7570, 0x2fb0, 0x59c0, 0xd50c, 0x1, 0x1);
        gbc.writeMem(0x240c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x81f8);
        EXPECT(gbc.pc(), 0x240e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0314
        gbc.setState(0x9221, 0x73e4, 0x6c40, 0x8ff0, 0x965d, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0x9221, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x73e4);
        EXPECT(gbc.pc(), 0x9223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9221), 0xcb);
        EXPECT(gbc.readMem(0x9222), 0xe2);
        // CB E2 0315
        gbc.setState(0x8b3a, 0xa972, 0x91f0, 0xf3d3, 0xc7aa, 0x517d, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa972);
        EXPECT(gbc.pc(), 0x8b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3a), 0xcb);
        EXPECT(gbc.readMem(0x8b3b), 0xe2);
        // CB E2 0316
        gbc.setState(0x3f13, 0xb8aa, 0x9f70, 0x6a94, 0x4341, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0x3f13, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb8aa);
        EXPECT(gbc.pc(), 0x3f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0317
        gbc.setState(0x67c4, 0x8d6d, 0x5940, 0x9d04, 0x4d76, 0xa8c9, 0x1, 0x0);
        gbc.writeMem(0x67c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8d6d);
        EXPECT(gbc.pc(), 0x67c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0318
        gbc.setState(0xdf7b, 0x8397, 0x23b0, 0x5e89, 0xa468, 0x3dff, 0x1, 0x1);
        gbc.writeMem(0xdf7b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8397);
        EXPECT(gbc.pc(), 0xdf7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf7b), 0xcb);
        EXPECT(gbc.readMem(0xdf7c), 0xe2);
        // CB E2 0319
        gbc.setState(0x93f2, 0xc29, 0xbf80, 0xb6e6, 0x2a17, 0x61cb, 0x0, 0x1);
        gbc.writeMem(0x93f2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc29);
        EXPECT(gbc.pc(), 0x93f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f2), 0xcb);
        EXPECT(gbc.readMem(0x93f3), 0xe2);
        // CB E2 031A
        gbc.setState(0x3ea3, 0x1147, 0xf10, 0xa074, 0xa7ec, 0xe29b, 0x1, 0x1);
        gbc.writeMem(0x3ea3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1147);
        EXPECT(gbc.pc(), 0x3ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 031B
        gbc.setState(0xbbf5, 0xc606, 0xbb20, 0x469f, 0x7a9b, 0xb56c, 0x1, 0x1);
        gbc.writeMem(0xbbf5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc606);
        EXPECT(gbc.pc(), 0xbbf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf5), 0xcb);
        EXPECT(gbc.readMem(0xbbf6), 0xe2);
        // CB E2 031C
        gbc.setState(0x89a7, 0x15c7, 0xeb30, 0xda20, 0x9d36, 0x30fb, 0x1, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x15c7);
        EXPECT(gbc.pc(), 0x89a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a7), 0xcb);
        EXPECT(gbc.readMem(0x89a8), 0xe2);
        // CB E2 031D
        gbc.setState(0x8bff, 0x6d6e, 0xf150, 0x992e, 0xbc79, 0xdb81, 0x1, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bff), 0xcb);
        EXPECT(gbc.readMem(0x8c00), 0xe2);
        // CB E2 031E
        gbc.setState(0x239c, 0x4d1d, 0x2370, 0x8d91, 0x8136, 0x1045, 0x1, 0x1);
        gbc.writeMem(0x239c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0x239e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 031F
        gbc.setState(0x8462, 0x9083, 0x5720, 0xd6f3, 0x1392, 0x4a9e, 0x1, 0x1);
        gbc.writeMem(0x8462, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9083);
        EXPECT(gbc.pc(), 0x8464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8462), 0xcb);
        EXPECT(gbc.readMem(0x8463), 0xe2);
        // CB E2 0320
        gbc.setState(0xda10, 0xc2c1, 0x4bb0, 0xe427, 0xca94, 0x2d80, 0x0, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc2c1);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0xe2);
        // CB E2 0321
        gbc.setState(0x898a, 0x87da, 0x4ca0, 0x956c, 0x4962, 0xb91c, 0x0, 0x0);
        gbc.writeMem(0x898a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x87da);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898a), 0xcb);
        EXPECT(gbc.readMem(0x898b), 0xe2);
        // CB E2 0322
        gbc.setState(0x6a9f, 0x9b3b, 0x6140, 0x98fc, 0xd9f2, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x6a9f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9b3b);
        EXPECT(gbc.pc(), 0x6aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0323
        gbc.setState(0x968e, 0x8edd, 0x8390, 0x3e3, 0x6c2, 0xd69c, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8edd);
        EXPECT(gbc.pc(), 0x9690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x968e), 0xcb);
        EXPECT(gbc.readMem(0x968f), 0xe2);
        // CB E2 0324
        gbc.setState(0xd86a, 0x4924, 0x3bf0, 0x36e4, 0xa24d, 0x9fc1, 0x0, 0x0);
        gbc.writeMem(0xd86a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4924);
        EXPECT(gbc.pc(), 0xd86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86a), 0xcb);
        EXPECT(gbc.readMem(0xd86b), 0xe2);
        // CB E2 0325
        gbc.setState(0x98bc, 0x89b9, 0x2a60, 0xab2f, 0xe80b, 0xf899, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x89b9);
        EXPECT(gbc.pc(), 0x98be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98bc), 0xcb);
        EXPECT(gbc.readMem(0x98bd), 0xe2);
        // CB E2 0326
        gbc.setState(0xcdb6, 0xe657, 0x9cd0, 0x3582, 0x9981, 0x109, 0x1, 0x1);
        gbc.writeMem(0xcdb6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe657);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb6), 0xcb);
        EXPECT(gbc.readMem(0xcdb7), 0xe2);
        // CB E2 0327
        gbc.setState(0xcd8f, 0x40da, 0x7270, 0xc83c, 0xc4aa, 0xb0f6, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x40da);
        EXPECT(gbc.pc(), 0xcd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8f), 0xcb);
        EXPECT(gbc.readMem(0xcd90), 0xe2);
        // CB E2 0328
        gbc.setState(0x659c, 0x564e, 0xf820, 0xd8cb, 0xf994, 0x7586, 0x0, 0x1);
        gbc.writeMem(0x659c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x564e);
        EXPECT(gbc.pc(), 0x659e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0329
        gbc.setState(0x5985, 0x5fec, 0x3e50, 0x1310, 0x40e, 0x815, 0x0, 0x1);
        gbc.writeMem(0x5985, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5fec);
        EXPECT(gbc.pc(), 0x5987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 032A
        gbc.setState(0x38b1, 0xd79d, 0xbc70, 0x8f12, 0xd55c, 0x6ddc, 0x1, 0x0);
        gbc.writeMem(0x38b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd79d);
        EXPECT(gbc.pc(), 0x38b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 032B
        gbc.setState(0xc01d, 0x823, 0xdfd0, 0x74c4, 0x17e9, 0x8045, 0x1, 0x1);
        gbc.writeMem(0xc01d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x823);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01d), 0xcb);
        EXPECT(gbc.readMem(0xc01e), 0xe2);
        // CB E2 032C
        gbc.setState(0x873b, 0x3f51, 0xe9e0, 0xe1bb, 0x91aa, 0x7ed3, 0x1, 0x0);
        gbc.writeMem(0x873b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3f51);
        EXPECT(gbc.pc(), 0x873d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873b), 0xcb);
        EXPECT(gbc.readMem(0x873c), 0xe2);
        // CB E2 032D
        gbc.setState(0xc25d, 0x7d0d, 0x65a0, 0xc37f, 0x11e, 0xf12d, 0x0, 0x1);
        gbc.writeMem(0xc25d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7d0d);
        EXPECT(gbc.pc(), 0xc25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25d), 0xcb);
        EXPECT(gbc.readMem(0xc25e), 0xe2);
        // CB E2 032E
        gbc.setState(0x458f, 0xdb97, 0x59b0, 0x5916, 0xd6e7, 0x4760, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdb97);
        EXPECT(gbc.pc(), 0x4591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 032F
        gbc.setState(0x8283, 0x900a, 0x1a80, 0x7d52, 0x8422, 0x6024, 0x0, 0x1);
        gbc.writeMem(0x8283, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x900a);
        EXPECT(gbc.pc(), 0x8285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8283), 0xcb);
        EXPECT(gbc.readMem(0x8284), 0xe2);
        // CB E2 0330
        gbc.setState(0x4c28, 0x8de7, 0x4fb0, 0xcad8, 0x1ac9, 0x8851, 0x0, 0x0);
        gbc.writeMem(0x4c28, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8de7);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0332
        gbc.setState(0xe72e, 0xb41f, 0xe530, 0x264, 0x1e27, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0xe72e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb41f);
        EXPECT(gbc.pc(), 0xe730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72e), 0xcb);
        EXPECT(gbc.readMem(0xe72f), 0xe2);
        // CB E2 0333
        gbc.setState(0x4057, 0x7950, 0xabc0, 0x9366, 0x69e6, 0xb120, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7950);
        EXPECT(gbc.pc(), 0x4059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0334
        gbc.setState(0x89cb, 0x2d90, 0xb80, 0x2b0d, 0x4b6d, 0x90c5, 0x0, 0x1);
        gbc.writeMem(0x89cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2d90);
        EXPECT(gbc.pc(), 0x89cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cb), 0xcb);
        EXPECT(gbc.readMem(0x89cc), 0xe2);
        // CB E2 0335
        gbc.setState(0x99fa, 0x5fa7, 0xa7d0, 0x3e0a, 0xc98b, 0xaaf0, 0x0, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5fa7);
        EXPECT(gbc.pc(), 0x99fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fa), 0xcb);
        EXPECT(gbc.readMem(0x99fb), 0xe2);
        // CB E2 0337
        gbc.setState(0x2e5b, 0x847e, 0xc640, 0xf97, 0xf25, 0x18fc, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x847e);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0338
        gbc.setState(0x562e, 0xb938, 0x9250, 0xf2a6, 0x73e6, 0x12e5, 0x0, 0x1);
        gbc.writeMem(0x562e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb938);
        EXPECT(gbc.pc(), 0x5630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0339
        gbc.setState(0x28a, 0xaecb, 0x8220, 0xeef2, 0xe530, 0x7875, 0x0, 0x1);
        gbc.writeMem(0x28a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaecb);
        EXPECT(gbc.pc(), 0x28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 033A
        gbc.setState(0xcf2b, 0x5264, 0x1ec0, 0x931f, 0x9dc7, 0xd28, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5264);
        EXPECT(gbc.pc(), 0xcf2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2b), 0xcb);
        EXPECT(gbc.readMem(0xcf2c), 0xe2);
        // CB E2 033B
        gbc.setState(0x525, 0xe6a4, 0xbe90, 0xffa, 0xe3a9, 0x959a, 0x1, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe6a4);
        EXPECT(gbc.pc(), 0x527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 033C
        gbc.setState(0xb464, 0xe10d, 0xa050, 0x8858, 0xacf7, 0xb0cd, 0x0, 0x0);
        gbc.writeMem(0xb464, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe10d);
        EXPECT(gbc.pc(), 0xb466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb464), 0xcb);
        EXPECT(gbc.readMem(0xb465), 0xe2);
        // CB E2 033E
        gbc.setState(0x9324, 0x6b8a, 0x3630, 0xccc9, 0xa16c, 0xfeb5, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6b8a);
        EXPECT(gbc.pc(), 0x9326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9324), 0xcb);
        EXPECT(gbc.readMem(0x9325), 0xe2);
        // CB E2 033F
        gbc.setState(0x49c5, 0xb2a2, 0xafb0, 0x3cd4, 0xd3d9, 0x66f5, 0x0, 0x0);
        gbc.writeMem(0x49c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb2a2);
        EXPECT(gbc.pc(), 0x49c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0340
        gbc.setState(0xe9d3, 0x1d0d, 0xcb70, 0x7ee0, 0xda36, 0x80fe, 0x1, 0x0);
        gbc.writeMem(0xe9d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0xe9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d3), 0xcb);
        EXPECT(gbc.readMem(0xe9d4), 0xe2);
        // CB E2 0341
        gbc.setState(0x3357, 0x2dc6, 0x840, 0x3e91, 0xe145, 0x376d, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2dc6);
        EXPECT(gbc.pc(), 0x3359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0342
        gbc.setState(0x7bed, 0xfda, 0x5ef0, 0xcdc7, 0x82e9, 0x14c3, 0x1, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfda);
        EXPECT(gbc.pc(), 0x7bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0343
        gbc.setState(0x4317, 0xba53, 0x5ac0, 0x67de, 0x95e7, 0xbe5a, 0x0, 0x0);
        gbc.writeMem(0x4317, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xba53);
        EXPECT(gbc.pc(), 0x4319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0344
        gbc.setState(0xec05, 0xf2b3, 0xa20, 0x528f, 0xd5ed, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0xec05, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf2b3);
        EXPECT(gbc.pc(), 0xec07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec05), 0xcb);
        EXPECT(gbc.readMem(0xec06), 0xe2);
        // CB E2 0345
        gbc.setState(0x2228, 0xbf67, 0x2860, 0x461a, 0xbf62, 0xcdec, 0x0, 0x1);
        gbc.writeMem(0x2228, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbf67);
        EXPECT(gbc.pc(), 0x222a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0346
        gbc.setState(0x3146, 0x38f4, 0xc60, 0x24fe, 0x744c, 0x2c39, 0x0, 0x0);
        gbc.writeMem(0x3146, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x38f4);
        EXPECT(gbc.pc(), 0x3148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0347
        gbc.setState(0x6802, 0xa267, 0xfe80, 0x33be, 0xb761, 0xfeb9, 0x1, 0x0);
        gbc.writeMem(0x6802, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa267);
        EXPECT(gbc.pc(), 0x6804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0348
        gbc.setState(0x2d1f, 0xc1e5, 0xf280, 0xba62, 0x8ba3, 0x47d1, 0x1, 0x1);
        gbc.writeMem(0x2d1f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc1e5);
        EXPECT(gbc.pc(), 0x2d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0349
        gbc.setState(0x909c, 0xb39f, 0x4720, 0x7350, 0xcdd7, 0x1ad5, 0x0, 0x1);
        gbc.writeMem(0x909c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb39f);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0xe2);
        // CB E2 034A
        gbc.setState(0xcf91, 0x70c7, 0x93e0, 0x4ecd, 0x23ec, 0x9497, 0x1, 0x1);
        gbc.writeMem(0xcf91, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x70c7);
        EXPECT(gbc.pc(), 0xcf93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf91), 0xcb);
        EXPECT(gbc.readMem(0xcf92), 0xe2);
        // CB E2 034B
        gbc.setState(0x79e, 0xb1f6, 0x92c0, 0x1e59, 0x4dac, 0xaf42, 0x1, 0x0);
        gbc.writeMem(0x79e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb1f6);
        EXPECT(gbc.pc(), 0x7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 034C
        gbc.setState(0xb58a, 0x93b8, 0x5520, 0x7d0f, 0x6883, 0xa953, 0x0, 0x1);
        gbc.writeMem(0xb58a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x93b8);
        EXPECT(gbc.pc(), 0xb58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58a), 0xcb);
        EXPECT(gbc.readMem(0xb58b), 0xe2);
        // CB E2 034D
        gbc.setState(0xac12, 0xd120, 0x330, 0x34ba, 0x298c, 0xe82b, 0x0, 0x0);
        gbc.writeMem(0xac12, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd120);
        EXPECT(gbc.pc(), 0xac14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac12), 0xcb);
        EXPECT(gbc.readMem(0xac13), 0xe2);
        // CB E2 034E
        gbc.setState(0x25c2, 0x91b5, 0x490, 0x3a7d, 0x2487, 0x3319, 0x0, 0x0);
        gbc.writeMem(0x25c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x91b5);
        EXPECT(gbc.pc(), 0x25c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 034F
        gbc.setState(0x42d7, 0xa385, 0x36f0, 0xadaf, 0xd583, 0xc883, 0x0, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa385);
        EXPECT(gbc.pc(), 0x42d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0350
        gbc.setState(0x5c82, 0x2241, 0xb540, 0xd8c8, 0x2e0e, 0xc0c1, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2241);
        EXPECT(gbc.pc(), 0x5c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0351
        gbc.setState(0x220b, 0x35a1, 0x54d0, 0x7916, 0x4b37, 0xe968, 0x1, 0x0);
        gbc.writeMem(0x220b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x35a1);
        EXPECT(gbc.pc(), 0x220d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0352
        gbc.setState(0x7ce7, 0xdf6f, 0xe390, 0x74c1, 0xb0fe, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x7ce7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf6f);
        EXPECT(gbc.pc(), 0x7ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0353
        gbc.setState(0xe810, 0x83cf, 0x7eb0, 0xd62a, 0x345, 0x1eef, 0x1, 0x0);
        gbc.writeMem(0xe810, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x83cf);
        EXPECT(gbc.pc(), 0xe812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe810), 0xcb);
        EXPECT(gbc.readMem(0xe811), 0xe2);
        // CB E2 0354
        gbc.setState(0x626b, 0x8f88, 0xd790, 0x1fb6, 0x75e8, 0x1d1e, 0x1, 0x1);
        gbc.writeMem(0x626b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8f88);
        EXPECT(gbc.pc(), 0x626d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0355
        gbc.setState(0xabb1, 0x6338, 0xd260, 0xc811, 0x4cb, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0xabb1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6338);
        EXPECT(gbc.pc(), 0xabb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb1), 0xcb);
        EXPECT(gbc.readMem(0xabb2), 0xe2);
        // CB E2 0356
        gbc.setState(0x387, 0xc5a9, 0x4400, 0xbb81, 0x5018, 0x6de, 0x0, 0x1);
        gbc.writeMem(0x387, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc5a9);
        EXPECT(gbc.pc(), 0x389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0357
        gbc.setState(0x171d, 0x1b22, 0x7430, 0xc8d3, 0xe290, 0x6a55, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1b22);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0359
        gbc.setState(0xbae, 0xddf, 0xad90, 0x3097, 0x8107, 0x7fb9, 0x0, 0x0);
        gbc.writeMem(0xbae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xddf);
        EXPECT(gbc.pc(), 0xbb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 035A
        gbc.setState(0x928a, 0x7030, 0xf730, 0xa128, 0x11c9, 0x7ecd, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7030);
        EXPECT(gbc.pc(), 0x928c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928a), 0xcb);
        EXPECT(gbc.readMem(0x928b), 0xe2);
        // CB E2 035B
        gbc.setState(0x9c17, 0xba3, 0x1b30, 0x1c27, 0xaf4b, 0xa371, 0x0, 0x0);
        gbc.writeMem(0x9c17, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xba3);
        EXPECT(gbc.pc(), 0x9c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c17), 0xcb);
        EXPECT(gbc.readMem(0x9c18), 0xe2);
        // CB E2 035C
        gbc.setState(0x3de5, 0x25fd, 0x31c0, 0x77c4, 0x4653, 0xe0e6, 0x0, 0x0);
        gbc.writeMem(0x3de5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x25fd);
        EXPECT(gbc.pc(), 0x3de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 035D
        gbc.setState(0x1458, 0x2411, 0xb6a0, 0xc2, 0xb868, 0x3847, 0x0, 0x1);
        gbc.writeMem(0x1458, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2411);
        EXPECT(gbc.pc(), 0x145a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 035E
        gbc.setState(0x2d0, 0xa7c8, 0x2bd0, 0xb471, 0x5e3f, 0x60ca, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa7c8);
        EXPECT(gbc.pc(), 0x2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 035F
        gbc.setState(0x127d, 0xb681, 0x8cb0, 0xfa48, 0x4b19, 0x79c6, 0x0, 0x1);
        gbc.writeMem(0x127d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb681);
        EXPECT(gbc.pc(), 0x127f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0360
        gbc.setState(0xd3fa, 0x92b3, 0x65b0, 0x6fd, 0x753, 0x7822, 0x0, 0x0);
        gbc.writeMem(0xd3fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x92b3);
        EXPECT(gbc.pc(), 0xd3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fa), 0xcb);
        EXPECT(gbc.readMem(0xd3fb), 0xe2);
        // CB E2 0361
        gbc.setState(0x95ca, 0x7cf3, 0xbe30, 0x776, 0x24a8, 0xe67d, 0x1, 0x0);
        gbc.writeMem(0x95ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0x95cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ca), 0xcb);
        EXPECT(gbc.readMem(0x95cb), 0xe2);
        // CB E2 0362
        gbc.setState(0x743f, 0xf00a, 0x2680, 0xefb5, 0xbf36, 0x53cd, 0x0, 0x1);
        gbc.writeMem(0x743f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf00a);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0363
        gbc.setState(0x24d3, 0xab94, 0x5530, 0x1543, 0xa64d, 0xb34e, 0x1, 0x1);
        gbc.writeMem(0x24d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xab94);
        EXPECT(gbc.pc(), 0x24d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0364
        gbc.setState(0x4f0b, 0x609f, 0xe5f0, 0xa130, 0xf7fb, 0x70fb, 0x0, 0x1);
        gbc.writeMem(0x4f0b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x609f);
        EXPECT(gbc.pc(), 0x4f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0365
        gbc.setState(0xbc24, 0x9f75, 0xcc80, 0xf8ac, 0x5ffc, 0x9f00, 0x0, 0x0);
        gbc.writeMem(0xbc24, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9f75);
        EXPECT(gbc.pc(), 0xbc26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc24), 0xcb);
        EXPECT(gbc.readMem(0xbc25), 0xe2);
        // CB E2 0366
        gbc.setState(0x71e7, 0xbabd, 0xe890, 0x4ee1, 0xcedd, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x71e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbabd);
        EXPECT(gbc.pc(), 0x71e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0367
        gbc.setState(0xa92b, 0xb585, 0xa240, 0x3549, 0x623f, 0x31b7, 0x1, 0x0);
        gbc.writeMem(0xa92b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb585);
        EXPECT(gbc.pc(), 0xa92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa92b), 0xcb);
        EXPECT(gbc.readMem(0xa92c), 0xe2);
        // CB E2 0368
        gbc.setState(0xc720, 0xdbb6, 0x42a0, 0xdf63, 0x7947, 0x8b88, 0x0, 0x0);
        gbc.writeMem(0xc720, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdbb6);
        EXPECT(gbc.pc(), 0xc722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc720), 0xcb);
        EXPECT(gbc.readMem(0xc721), 0xe2);
        // CB E2 0369
        gbc.setState(0x4078, 0xb87f, 0xe330, 0xa56e, 0xf7e8, 0x8677, 0x0, 0x1);
        gbc.writeMem(0x4078, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0x407a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 036A
        gbc.setState(0x626f, 0x954b, 0xc390, 0x1817, 0x5a5b, 0xb15, 0x1, 0x0);
        gbc.writeMem(0x626f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x6271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 036B
        gbc.setState(0x9a6b, 0x2be8, 0x4f10, 0x239a, 0xfdf, 0xb9b3, 0x1, 0x1);
        gbc.writeMem(0x9a6b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2be8);
        EXPECT(gbc.pc(), 0x9a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6b), 0xcb);
        EXPECT(gbc.readMem(0x9a6c), 0xe2);
        // CB E2 036C
        gbc.setState(0xb3e3, 0xbf85, 0x22a0, 0xfadb, 0x39de, 0xa018, 0x0, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf85);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e3), 0xcb);
        EXPECT(gbc.readMem(0xb3e4), 0xe2);
        // CB E2 036D
        gbc.setState(0xc9e, 0x459c, 0x1e40, 0x29f3, 0xbeb4, 0x2ad5, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x459c);
        EXPECT(gbc.pc(), 0xca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 036E
        gbc.setState(0x9e44, 0xa0c3, 0x3b20, 0x4911, 0x345f, 0x2261, 0x1, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa0c3);
        EXPECT(gbc.pc(), 0x9e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e44), 0xcb);
        EXPECT(gbc.readMem(0x9e45), 0xe2);
        // CB E2 036F
        gbc.setState(0x7068, 0x8cd7, 0xa3b0, 0xbdcc, 0x4415, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8cd7);
        EXPECT(gbc.pc(), 0x706a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0371
        gbc.setState(0xc5ec, 0x43d9, 0x6a40, 0x6186, 0x1465, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0xc5ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x43d9);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ec), 0xcb);
        EXPECT(gbc.readMem(0xc5ed), 0xe2);
        // CB E2 0372
        gbc.setState(0xd771, 0xcf71, 0x490, 0xb4b4, 0x6bf4, 0xf41, 0x1, 0x0);
        gbc.writeMem(0xd771, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcf71);
        EXPECT(gbc.pc(), 0xd773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd771), 0xcb);
        EXPECT(gbc.readMem(0xd772), 0xe2);
        // CB E2 0373
        gbc.setState(0x1dda, 0x4bb0, 0xe0e0, 0x743, 0x26da, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x1dda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4bb0);
        EXPECT(gbc.pc(), 0x1ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0375
        gbc.setState(0x63ec, 0x22ff, 0x64f0, 0x6687, 0x8c43, 0x1877, 0x1, 0x0);
        gbc.writeMem(0x63ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x22ff);
        EXPECT(gbc.pc(), 0x63ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0376
        gbc.setState(0x6bbf, 0x94bf, 0x6420, 0xa1d4, 0x7635, 0xaa53, 0x1, 0x0);
        gbc.writeMem(0x6bbf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x94bf);
        EXPECT(gbc.pc(), 0x6bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0377
        gbc.setState(0xa9e0, 0x8626, 0xb4c0, 0xa4e0, 0x9c44, 0x2c88, 0x1, 0x1);
        gbc.writeMem(0xa9e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8626);
        EXPECT(gbc.pc(), 0xa9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e0), 0xcb);
        EXPECT(gbc.readMem(0xa9e1), 0xe2);
        // CB E2 0378
        gbc.setState(0x42c4, 0x92ea, 0x7280, 0x8e0e, 0xafa8, 0x436f, 0x0, 0x1);
        gbc.writeMem(0x42c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x92ea);
        EXPECT(gbc.pc(), 0x42c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0379
        gbc.setState(0x9e6e, 0x2d12, 0xa370, 0x80a3, 0xa26c, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0x9e6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2d12);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0xe2);
        // CB E2 037A
        gbc.setState(0xd573, 0x5ebe, 0xadb0, 0x4659, 0x6423, 0x293b, 0x1, 0x1);
        gbc.writeMem(0xd573, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5ebe);
        EXPECT(gbc.pc(), 0xd575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd573), 0xcb);
        EXPECT(gbc.readMem(0xd574), 0xe2);
        // CB E2 037B
        gbc.setState(0x51b6, 0x6e89, 0x2da0, 0x47c3, 0xa614, 0x685d, 0x1, 0x1);
        gbc.writeMem(0x51b6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6e89);
        EXPECT(gbc.pc(), 0x51b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 037C
        gbc.setState(0xc753, 0xab22, 0x6520, 0x9dfd, 0x75fd, 0xc183, 0x0, 0x1);
        gbc.writeMem(0xc753, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xab22);
        EXPECT(gbc.pc(), 0xc755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc753), 0xcb);
        EXPECT(gbc.readMem(0xc754), 0xe2);
        // CB E2 037D
        gbc.setState(0x9df7, 0x4257, 0x11e0, 0x6594, 0x4c9, 0xba56, 0x1, 0x0);
        gbc.writeMem(0x9df7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4257);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df7), 0xcb);
        EXPECT(gbc.readMem(0x9df8), 0xe2);
        // CB E2 037E
        gbc.setState(0xa27c, 0x7295, 0xc7c0, 0xa666, 0x95a9, 0x89b, 0x1, 0x1);
        gbc.writeMem(0xa27c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7295);
        EXPECT(gbc.pc(), 0xa27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27c), 0xcb);
        EXPECT(gbc.readMem(0xa27d), 0xe2);
        // CB E2 037F
        gbc.setState(0x58fa, 0xf91d, 0x8520, 0x1104, 0xac56, 0xb54c, 0x1, 0x1);
        gbc.writeMem(0x58fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf91d);
        EXPECT(gbc.pc(), 0x58fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0380
        gbc.setState(0x9b7e, 0xa4, 0xfc60, 0xdc4d, 0xac56, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x9b7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa4);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0xe2);
        // CB E2 0381
        gbc.setState(0xde66, 0xd038, 0x6f50, 0x83bf, 0xb966, 0xf873, 0x0, 0x1);
        gbc.writeMem(0xde66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd038);
        EXPECT(gbc.pc(), 0xde68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde66), 0xcb);
        EXPECT(gbc.readMem(0xde67), 0xe2);
        // CB E2 0382
        gbc.setState(0x35a6, 0xd4e9, 0xc080, 0xa32b, 0x1b7f, 0xda1b, 0x1, 0x0);
        gbc.writeMem(0x35a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd4e9);
        EXPECT(gbc.pc(), 0x35a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0383
        gbc.setState(0xb144, 0x618d, 0x5180, 0x38ac, 0x4959, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0xb144, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x618d);
        EXPECT(gbc.pc(), 0xb146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb144), 0xcb);
        EXPECT(gbc.readMem(0xb145), 0xe2);
        // CB E2 0384
        gbc.setState(0xca59, 0x66dc, 0xc120, 0x145e, 0xcc2b, 0x38fd, 0x1, 0x1);
        gbc.writeMem(0xca59, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x66dc);
        EXPECT(gbc.pc(), 0xca5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca59), 0xcb);
        EXPECT(gbc.readMem(0xca5a), 0xe2);
        // CB E2 0385
        gbc.setState(0xbe8, 0xaba1, 0x8440, 0xcdbf, 0xb027, 0x6d13, 0x1, 0x1);
        gbc.writeMem(0xbe8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaba1);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0386
        gbc.setState(0xa556, 0x698d, 0x2090, 0x153e, 0x4212, 0xf1af, 0x1, 0x1);
        gbc.writeMem(0xa556, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x698d);
        EXPECT(gbc.pc(), 0xa558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa556), 0xcb);
        EXPECT(gbc.readMem(0xa557), 0xe2);
        // CB E2 0387
        gbc.setState(0x87e9, 0x213a, 0x3460, 0xedc2, 0xd1bd, 0xa9e3, 0x1, 0x0);
        gbc.writeMem(0x87e9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x213a);
        EXPECT(gbc.pc(), 0x87eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e9), 0xcb);
        EXPECT(gbc.readMem(0x87ea), 0xe2);
        // CB E2 0388
        gbc.setState(0x966e, 0xa43, 0x30f0, 0xa48a, 0xfc2b, 0x668f, 0x0, 0x1);
        gbc.writeMem(0x966e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa43);
        EXPECT(gbc.pc(), 0x9670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966e), 0xcb);
        EXPECT(gbc.readMem(0x966f), 0xe2);
        // CB E2 0389
        gbc.setState(0x2636, 0x9ef9, 0x8f90, 0x547e, 0x10ed, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9ef9);
        EXPECT(gbc.pc(), 0x2638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 038A
        gbc.setState(0xc2ac, 0xa842, 0x3590, 0xe079, 0xa12d, 0xaec5, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa842);
        EXPECT(gbc.pc(), 0xc2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ac), 0xcb);
        EXPECT(gbc.readMem(0xc2ad), 0xe2);
        // CB E2 038B
        gbc.setState(0xef5a, 0x85bf, 0xa030, 0xbfdd, 0xd4b6, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0xef5a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x85bf);
        EXPECT(gbc.pc(), 0xef5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5a), 0xcb);
        EXPECT(gbc.readMem(0xef5b), 0xe2);
        // CB E2 038C
        gbc.setState(0xc99, 0x3407, 0x5620, 0x8206, 0xb62e, 0x21fd, 0x1, 0x1);
        gbc.writeMem(0xc99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3407);
        EXPECT(gbc.pc(), 0xc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 038D
        gbc.setState(0x442, 0xbf29, 0x45b0, 0x7411, 0x606, 0x4f0, 0x1, 0x1);
        gbc.writeMem(0x442, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbf29);
        EXPECT(gbc.pc(), 0x444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 038F
        gbc.setState(0x78c6, 0xa0bf, 0x210, 0xa639, 0x8906, 0x1751, 0x1, 0x0);
        gbc.writeMem(0x78c6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa0bf);
        EXPECT(gbc.pc(), 0x78c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0390
        gbc.setState(0x83f3, 0xab9c, 0x3a60, 0x243e, 0xba6c, 0xa296, 0x0, 0x1);
        gbc.writeMem(0x83f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xab9c);
        EXPECT(gbc.pc(), 0x83f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f3), 0xcb);
        EXPECT(gbc.readMem(0x83f4), 0xe2);
        // CB E2 0391
        gbc.setState(0x774e, 0x9cd2, 0x8890, 0x2520, 0x8c24, 0xf685, 0x0, 0x1);
        gbc.writeMem(0x774e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9cd2);
        EXPECT(gbc.pc(), 0x7750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0392
        gbc.setState(0x1942, 0x2383, 0xf880, 0xdedf, 0x442b, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2383);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 0393
        gbc.setState(0xa492, 0x110e, 0xa650, 0xa759, 0x13df, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xa492, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x110e);
        EXPECT(gbc.pc(), 0xa494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa492), 0xcb);
        EXPECT(gbc.readMem(0xa493), 0xe2);
        // CB E2 0395
        gbc.setState(0x49e6, 0xb4fd, 0xe050, 0xe26, 0x2d52, 0x7a9, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb4fd);
        EXPECT(gbc.pc(), 0x49e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 0396
        gbc.setState(0xce4b, 0x3d85, 0xedf0, 0x1d0e, 0x1a8d, 0x2df, 0x1, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3d85);
        EXPECT(gbc.pc(), 0xce4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4b), 0xcb);
        EXPECT(gbc.readMem(0xce4c), 0xe2);
        // CB E2 0397
        gbc.setState(0xac66, 0x3efb, 0xcfd0, 0xea03, 0xa8b2, 0x1438, 0x1, 0x1);
        gbc.writeMem(0xac66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3efb);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac66), 0xcb);
        EXPECT(gbc.readMem(0xac67), 0xe2);
        // CB E2 0399
        gbc.setState(0xadde, 0xdbcf, 0xdd00, 0xb969, 0x7808, 0x84ca, 0x0, 0x1);
        gbc.writeMem(0xadde, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdbcf);
        EXPECT(gbc.pc(), 0xade0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadde), 0xcb);
        EXPECT(gbc.readMem(0xaddf), 0xe2);
        // CB E2 039A
        gbc.setState(0x41db, 0x90e9, 0xd030, 0x127a, 0x8b54, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x90e9);
        EXPECT(gbc.pc(), 0x41dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 039B
        gbc.setState(0x12f9, 0x6210, 0xcb10, 0x646e, 0xb9ce, 0xbe4e, 0x0, 0x0);
        gbc.writeMem(0x12f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6210);
        EXPECT(gbc.pc(), 0x12fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 039D
        gbc.setState(0xd1d4, 0x340d, 0x1cb0, 0x5b2d, 0x1974, 0xb131, 0x1, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x340d);
        EXPECT(gbc.pc(), 0xd1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d4), 0xcb);
        EXPECT(gbc.readMem(0xd1d5), 0xe2);
        // CB E2 039E
        gbc.setState(0x1b9, 0x5869, 0x3890, 0x5e9a, 0xc2ce, 0xe0b4, 0x0, 0x1);
        gbc.writeMem(0x1b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5869);
        EXPECT(gbc.pc(), 0x1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 039F
        gbc.setState(0x8df7, 0x1f6, 0xd220, 0xb89c, 0xd2ef, 0x62c2, 0x0, 0x1);
        gbc.writeMem(0x8df7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1f6);
        EXPECT(gbc.pc(), 0x8df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df7), 0xcb);
        EXPECT(gbc.readMem(0x8df8), 0xe2);
        // CB E2 03A0
        gbc.setState(0x21eb, 0xad03, 0x9b30, 0x729, 0xd871, 0x9c92, 0x0, 0x0);
        gbc.writeMem(0x21eb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x21ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03A1
        gbc.setState(0x42bc, 0x8f92, 0xb930, 0xfbec, 0x3c5, 0x1752, 0x0, 0x1);
        gbc.writeMem(0x42bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8f92);
        EXPECT(gbc.pc(), 0x42be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03A3
        gbc.setState(0x3985, 0xf6b6, 0x4a20, 0xe965, 0x5463, 0x2384, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf6b6);
        EXPECT(gbc.pc(), 0x3987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03A4
        gbc.setState(0xd5a3, 0x45eb, 0xe270, 0x15a7, 0xc74c, 0x8436, 0x1, 0x1);
        gbc.writeMem(0xd5a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x45eb);
        EXPECT(gbc.pc(), 0xd5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a3), 0xcb);
        EXPECT(gbc.readMem(0xd5a4), 0xe2);
        // CB E2 03A5
        gbc.setState(0x7dd1, 0x6a40, 0x47b0, 0x5e3, 0xe84, 0x7b3b, 0x0, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6a40);
        EXPECT(gbc.pc(), 0x7dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03A6
        gbc.setState(0x6405, 0x82eb, 0x5570, 0xcd9a, 0xcced, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x82eb);
        EXPECT(gbc.pc(), 0x6407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03A7
        gbc.setState(0xbdc1, 0x516d, 0xfd10, 0x6c7a, 0x8f9e, 0x7c8c, 0x1, 0x0);
        gbc.writeMem(0xbdc1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x516d);
        EXPECT(gbc.pc(), 0xbdc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc1), 0xcb);
        EXPECT(gbc.readMem(0xbdc2), 0xe2);
        // CB E2 03A8
        gbc.setState(0x4b22, 0x7fd2, 0xf740, 0xec81, 0x732b, 0x64e3, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7fd2);
        EXPECT(gbc.pc(), 0x4b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03A9
        gbc.setState(0xb5d0, 0x655f, 0xd1d0, 0x1403, 0xa7d8, 0x1c37, 0x1, 0x1);
        gbc.writeMem(0xb5d0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x655f);
        EXPECT(gbc.pc(), 0xb5d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d0), 0xcb);
        EXPECT(gbc.readMem(0xb5d1), 0xe2);
        // CB E2 03AA
        gbc.setState(0xec39, 0xbe8c, 0x8750, 0x4198, 0xf5f4, 0xf970, 0x0, 0x0);
        gbc.writeMem(0xec39, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbe8c);
        EXPECT(gbc.pc(), 0xec3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec39), 0xcb);
        EXPECT(gbc.readMem(0xec3a), 0xe2);
        // CB E2 03AB
        gbc.setState(0x64e6, 0x10fb, 0x84b0, 0x2004, 0xf024, 0x4152, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x10fb);
        EXPECT(gbc.pc(), 0x64e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03AC
        gbc.setState(0x1766, 0xcadd, 0x6ef0, 0xf9da, 0x3680, 0xbc0d, 0x0, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcadd);
        EXPECT(gbc.pc(), 0x1768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03AD
        gbc.setState(0xdc65, 0x8d0b, 0x6620, 0x30e2, 0x4350, 0xdb52, 0x0, 0x1);
        gbc.writeMem(0xdc65, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8d0b);
        EXPECT(gbc.pc(), 0xdc67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc65), 0xcb);
        EXPECT(gbc.readMem(0xdc66), 0xe2);
        // CB E2 03AE
        gbc.setState(0x6ee4, 0x8724, 0xeba0, 0x7f6, 0x6943, 0x10c0, 0x0, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8724);
        EXPECT(gbc.pc(), 0x6ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03AF
        gbc.setState(0x50b6, 0x5c27, 0xe6f0, 0x4930, 0xa97f, 0x8b25, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5c27);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03B0
        gbc.setState(0xd476, 0xfb84, 0xae20, 0xe476, 0x8c02, 0x4038, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfb84);
        EXPECT(gbc.pc(), 0xd478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd476), 0xcb);
        EXPECT(gbc.readMem(0xd477), 0xe2);
        // CB E2 03B1
        gbc.setState(0x9cd2, 0x3619, 0xfc50, 0xf7cb, 0x3f2, 0xa0c8, 0x1, 0x0);
        gbc.writeMem(0x9cd2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3619);
        EXPECT(gbc.pc(), 0x9cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd2), 0xcb);
        EXPECT(gbc.readMem(0x9cd3), 0xe2);
        // CB E2 03B2
        gbc.setState(0x7831, 0x4e9b, 0xf070, 0xa416, 0xb958, 0xc92d, 0x0, 0x1);
        gbc.writeMem(0x7831, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4e9b);
        EXPECT(gbc.pc(), 0x7833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03B3
        gbc.setState(0x5a1c, 0xf352, 0x24f0, 0x1313, 0xda4f, 0xea41, 0x1, 0x0);
        gbc.writeMem(0x5a1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf352);
        EXPECT(gbc.pc(), 0x5a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03B4
        gbc.setState(0x8188, 0x1536, 0x1360, 0x478b, 0x445f, 0x58ae, 0x1, 0x0);
        gbc.writeMem(0x8188, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1536);
        EXPECT(gbc.pc(), 0x818a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8188), 0xcb);
        EXPECT(gbc.readMem(0x8189), 0xe2);
        // CB E2 03B5
        gbc.setState(0x333, 0xc36c, 0x9280, 0x7f57, 0xcf8a, 0xfef2, 0x0, 0x1);
        gbc.writeMem(0x333, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc36c);
        EXPECT(gbc.pc(), 0x335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03B6
        gbc.setState(0xa55b, 0x76cd, 0x3580, 0xdf36, 0x2b3, 0x2655, 0x1, 0x0);
        gbc.writeMem(0xa55b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0xa55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55b), 0xcb);
        EXPECT(gbc.readMem(0xa55c), 0xe2);
        // CB E2 03B7
        gbc.setState(0xbb42, 0x54c5, 0x450, 0xd9ac, 0x423, 0x20ae, 0x0, 0x1);
        gbc.writeMem(0xbb42, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x54c5);
        EXPECT(gbc.pc(), 0xbb44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb42), 0xcb);
        EXPECT(gbc.readMem(0xbb43), 0xe2);
        // CB E2 03B8
        gbc.setState(0xc2ed, 0xaec4, 0xa9d0, 0x617e, 0x1105, 0xe0f2, 0x1, 0x1);
        gbc.writeMem(0xc2ed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0xc2ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ed), 0xcb);
        EXPECT(gbc.readMem(0xc2ee), 0xe2);
        // CB E2 03B9
        gbc.setState(0x573c, 0xff99, 0xfad0, 0xcfe0, 0xaa9d, 0x28c2, 0x1, 0x0);
        gbc.writeMem(0x573c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xff99);
        EXPECT(gbc.pc(), 0x573e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03BA
        gbc.setState(0x9233, 0x3cd7, 0xb800, 0x7407, 0x8232, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3cd7);
        EXPECT(gbc.pc(), 0x9235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9233), 0xcb);
        EXPECT(gbc.readMem(0x9234), 0xe2);
        // CB E2 03BB
        gbc.setState(0x366a, 0x91c9, 0x39f0, 0x41cf, 0x1547, 0x5b35, 0x0, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x91c9);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03BC
        gbc.setState(0x5d20, 0x43d4, 0x91d0, 0xb01a, 0xd2ac, 0xe0fa, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0x5d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03BD
        gbc.setState(0x8528, 0x430a, 0x5bf0, 0x4436, 0x8c30, 0xa40f, 0x0, 0x1);
        gbc.writeMem(0x8528, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x430a);
        EXPECT(gbc.pc(), 0x852a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8528), 0xcb);
        EXPECT(gbc.readMem(0x8529), 0xe2);
        // CB E2 03BE
        gbc.setState(0x330e, 0x1089, 0x3b90, 0x7d02, 0x2ad1, 0x7745, 0x1, 0x1);
        gbc.writeMem(0x330e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1089);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03BF
        gbc.setState(0x5021, 0x1b0b, 0x2820, 0xd9a3, 0xf64a, 0x5441, 0x1, 0x1);
        gbc.writeMem(0x5021, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1b0b);
        EXPECT(gbc.pc(), 0x5023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03C0
        gbc.setState(0x6ab0, 0x24da, 0x490, 0xfd5b, 0xf6e, 0x73ad, 0x1, 0x1);
        gbc.writeMem(0x6ab0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x24da);
        EXPECT(gbc.pc(), 0x6ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03C1
        gbc.setState(0x795d, 0x898e, 0x3520, 0xe39b, 0x510f, 0x71a6, 0x1, 0x1);
        gbc.writeMem(0x795d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x898e);
        EXPECT(gbc.pc(), 0x795f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03C2
        gbc.setState(0xa89c, 0x6415, 0x7510, 0x5840, 0xc935, 0x5ae1, 0x0, 0x1);
        gbc.writeMem(0xa89c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6415);
        EXPECT(gbc.pc(), 0xa89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa89c), 0xcb);
        EXPECT(gbc.readMem(0xa89d), 0xe2);
        // CB E2 03C3
        gbc.setState(0x234e, 0xf225, 0x43a0, 0x3b0c, 0x3838, 0xa725, 0x1, 0x1);
        gbc.writeMem(0x234e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf225);
        EXPECT(gbc.pc(), 0x2350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03C5
        gbc.setState(0x16d9, 0x458d, 0x3670, 0x81df, 0xe7a0, 0xcc98, 0x0, 0x1);
        gbc.writeMem(0x16d9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x458d);
        EXPECT(gbc.pc(), 0x16db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03C6
        gbc.setState(0x3d36, 0xe731, 0x58d0, 0x90c7, 0xd76f, 0xbafd, 0x1, 0x0);
        gbc.writeMem(0x3d36, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe731);
        EXPECT(gbc.pc(), 0x3d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03C7
        gbc.setState(0x4852, 0x34a2, 0xfc60, 0x9ab4, 0x2de, 0x69c2, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x4854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03C8
        gbc.setState(0xd7dc, 0x4d86, 0xb700, 0x51ab, 0xe185, 0x1c38, 0x0, 0x1);
        gbc.writeMem(0xd7dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4d86);
        EXPECT(gbc.pc(), 0xd7de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7dc), 0xcb);
        EXPECT(gbc.readMem(0xd7dd), 0xe2);
        // CB E2 03C9
        gbc.setState(0x7076, 0x661e, 0xebe0, 0xa143, 0xdf08, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x7076, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x661e);
        EXPECT(gbc.pc(), 0x7078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03CA
        gbc.setState(0xab80, 0xe921, 0x8a70, 0x7921, 0x9d04, 0x3082, 0x1, 0x0);
        gbc.writeMem(0xab80, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe921);
        EXPECT(gbc.pc(), 0xab82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab80), 0xcb);
        EXPECT(gbc.readMem(0xab81), 0xe2);
        // CB E2 03CB
        gbc.setState(0x2f70, 0xabf2, 0x5420, 0xc551, 0x611d, 0xb0d5, 0x1, 0x1);
        gbc.writeMem(0x2f70, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xabf2);
        EXPECT(gbc.pc(), 0x2f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03CC
        gbc.setState(0x676d, 0x5811, 0x8650, 0xd5f8, 0x110f, 0x53ff, 0x1, 0x1);
        gbc.writeMem(0x676d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5811);
        EXPECT(gbc.pc(), 0x676f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03CE
        gbc.setState(0x6b0b, 0x5184, 0x91d0, 0xfeba, 0x6053, 0x963a, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5184);
        EXPECT(gbc.pc(), 0x6b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03CF
        gbc.setState(0xdd3b, 0x6852, 0xb790, 0xbde9, 0x1c95, 0xf190, 0x0, 0x0);
        gbc.writeMem(0xdd3b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6852);
        EXPECT(gbc.pc(), 0xdd3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3b), 0xcb);
        EXPECT(gbc.readMem(0xdd3c), 0xe2);
        // CB E2 03D0
        gbc.setState(0xef1b, 0x4da4, 0x50, 0x537b, 0xd847, 0x7cb7, 0x0, 0x0);
        gbc.writeMem(0xef1b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4da4);
        EXPECT(gbc.pc(), 0xef1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1b), 0xcb);
        EXPECT(gbc.readMem(0xef1c), 0xe2);
        // CB E2 03D1
        gbc.setState(0x5add, 0x5a5b, 0x4380, 0x1551, 0x5f97, 0x64ab, 0x1, 0x1);
        gbc.writeMem(0x5add, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5a5b);
        EXPECT(gbc.pc(), 0x5adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03D2
        gbc.setState(0xc521, 0x87fe, 0xf970, 0x8de7, 0xd2a3, 0xf4cc, 0x1, 0x0);
        gbc.writeMem(0xc521, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x87fe);
        EXPECT(gbc.pc(), 0xc523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc521), 0xcb);
        EXPECT(gbc.readMem(0xc522), 0xe2);
        // CB E2 03D3
        gbc.setState(0x8fe5, 0x9fce, 0xcf20, 0x5a43, 0x218a, 0xafeb, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9fce);
        EXPECT(gbc.pc(), 0x8fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe5), 0xcb);
        EXPECT(gbc.readMem(0x8fe6), 0xe2);
        // CB E2 03D4
        gbc.setState(0x8824, 0xc5ec, 0x3e80, 0xaa65, 0x5baf, 0x515f, 0x1, 0x1);
        gbc.writeMem(0x8824, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x8826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8824), 0xcb);
        EXPECT(gbc.readMem(0x8825), 0xe2);
        // CB E2 03D5
        gbc.setState(0x2135, 0x21f2, 0xef40, 0xf4a1, 0x7c04, 0xe832, 0x0, 0x1);
        gbc.writeMem(0x2135, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x21f2);
        EXPECT(gbc.pc(), 0x2137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03D6
        gbc.setState(0x1a5c, 0x3335, 0x71e0, 0xa95, 0x168d, 0xab43, 0x0, 0x1);
        gbc.writeMem(0x1a5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3335);
        EXPECT(gbc.pc(), 0x1a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03D7
        gbc.setState(0x4446, 0xde2c, 0x4c60, 0x90f8, 0x4cba, 0x4667, 0x0, 0x1);
        gbc.writeMem(0x4446, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xde2c);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03D8
        gbc.setState(0x373a, 0x1212, 0x94b0, 0x72e6, 0x13b6, 0xd56a, 0x1, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1212);
        EXPECT(gbc.pc(), 0x373c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03D9
        gbc.setState(0x6b48, 0x92e5, 0xd6c0, 0xba39, 0xb851, 0x93b0, 0x1, 0x0);
        gbc.writeMem(0x6b48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0x6b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03DB
        gbc.setState(0x3a04, 0xd22b, 0x3c0, 0xe864, 0x866b, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd22b);
        EXPECT(gbc.pc(), 0x3a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03DC
        gbc.setState(0xb3ab, 0x2ef8, 0xd0d0, 0xf8f5, 0x9adb, 0x7329, 0x0, 0x0);
        gbc.writeMem(0xb3ab, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0xb3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ab), 0xcb);
        EXPECT(gbc.readMem(0xb3ac), 0xe2);
        // CB E2 03DD
        gbc.setState(0xe4a9, 0x16ad, 0x1850, 0xae9c, 0xfa71, 0xe5d8, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x16ad);
        EXPECT(gbc.pc(), 0xe4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a9), 0xcb);
        EXPECT(gbc.readMem(0xe4aa), 0xe2);
        // CB E2 03DE
        gbc.setState(0xe323, 0xbe88, 0x3f60, 0xcd4e, 0xf4d1, 0xabff, 0x1, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbe88);
        EXPECT(gbc.pc(), 0xe325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe323), 0xcb);
        EXPECT(gbc.readMem(0xe324), 0xe2);
        // CB E2 03DF
        gbc.setState(0x7f72, 0xe29a, 0xe110, 0xf46, 0x558d, 0xdd3, 0x0, 0x0);
        gbc.writeMem(0x7f72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe29a);
        EXPECT(gbc.pc(), 0x7f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03E0
        gbc.setState(0x6277, 0x645f, 0xf800, 0x6d7, 0x1071, 0xce69, 0x1, 0x0);
        gbc.writeMem(0x6277, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x645f);
        EXPECT(gbc.pc(), 0x6279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03E1
        gbc.setState(0x98a, 0x1c2f, 0x7500, 0xdd72, 0xf68e, 0x7bbb, 0x0, 0x1);
        gbc.writeMem(0x98a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1c2f);
        EXPECT(gbc.pc(), 0x98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03E2
        gbc.setState(0x249d, 0xa913, 0xb480, 0xd92f, 0xd6d6, 0x7a9c, 0x0, 0x0);
        gbc.writeMem(0x249d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa913);
        EXPECT(gbc.pc(), 0x249f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03E3
        gbc.setState(0xa8bf, 0x8427, 0x4640, 0xae57, 0xbe6b, 0x8a8f, 0x1, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bf), 0xcb);
        EXPECT(gbc.readMem(0xa8c0), 0xe2);
        // CB E2 03E4
        gbc.setState(0x6e8a, 0xb3b2, 0x4e50, 0x7248, 0x7b71, 0xb19, 0x0, 0x1);
        gbc.writeMem(0x6e8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb3b2);
        EXPECT(gbc.pc(), 0x6e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E2 03E5
        gbc.setState(0xaad1, 0x597, 0xd8b0, 0xf07a, 0x26ce, 0x3d20, 0x1, 0x1);
        gbc.writeMem(0xaad1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x597);
        EXPECT(gbc.pc(), 0xaad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad1), 0xcb);
        EXPECT(gbc.readMem(0xaad2), 0xe2);
        // CB E2 03E6
        gbc.setState(0x78b3, 0xe711, 0x1a0, 0xf9e1, 0x6d22, 0x4484, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe711);
        EXPECT(gbc.pc(), 0x78b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E2 03E7
        gbc.setState(0x26ef, 0x8a72, 0xa5a0, 0xafb7, 0xb6aa, 0x59ea, 0x1, 0x0);
        gbc.writeMem(0x26ef, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8a72);
        EXPECT(gbc.pc(), 0x26f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
