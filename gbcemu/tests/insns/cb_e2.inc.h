    TEST(gbcemu, opcode_cb_e2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E2 0000
        gbc.setState(0x2a89, 0x2861, 0x4680, 0xdc12, 0x1a0d, 0xd231, 0x0, 0x1);
        gbc.writeMem(0x2a89, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2861, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0001
        gbc.setState(0x937b, 0xd53e, 0xeb40, 0xd089, 0x2539, 0x9583, 0x1, 0x0);
        gbc.writeMem(0x937b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x937d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937b));
        EXPECT(0xe2, gbc.readMem(0x937c));
        // CB E2 0002
        gbc.setState(0xe4ea, 0x72d3, 0xf300, 0xd50b, 0x1dd2, 0x88b2, 0x1, 0x0);
        gbc.writeMem(0xe4ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ea));
        EXPECT(0xe2, gbc.readMem(0xe4eb));
        // CB E2 0003
        gbc.setState(0x49af, 0x81c7, 0x7090, 0x7e2b, 0xada3, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x81c7, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0005
        gbc.setState(0x61e6, 0x34c, 0xf7e0, 0x4a92, 0x644f, 0x4bd6, 0x0, 0x0);
        gbc.writeMem(0x61e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x34c, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0006
        gbc.setState(0xa75, 0x59b7, 0xc6a0, 0xf948, 0x4275, 0x7bb8, 0x1, 0x0);
        gbc.writeMem(0xa75, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0007
        gbc.setState(0x94d9, 0xe0e0, 0x1be0, 0xcaa0, 0xebf9, 0x7ea1, 0x1, 0x1);
        gbc.writeMem(0x94d9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d9));
        EXPECT(0xe2, gbc.readMem(0x94da));
        // CB E2 0008
        gbc.setState(0x3008, 0xce9b, 0x8710, 0x8d64, 0x2017, 0xdf04, 0x1, 0x1);
        gbc.writeMem(0x3008, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xce9b, gbc.sp());
        EXPECT(0x300a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0009
        gbc.setState(0x7c44, 0x923c, 0x3210, 0x28a3, 0x2474, 0x6372, 0x1, 0x1);
        gbc.writeMem(0x7c44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x923c, gbc.sp());
        EXPECT(0x7c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 000A
        gbc.setState(0x7a72, 0xcf68, 0x3570, 0xf4c1, 0xf9f3, 0xde05, 0x1, 0x0);
        gbc.writeMem(0x7a72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0x7a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 000B
        gbc.setState(0xe62d, 0xe795, 0xb900, 0x8922, 0x82e8, 0xe131, 0x0, 0x0);
        gbc.writeMem(0xe62d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe795, gbc.sp());
        EXPECT(0xe62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62d));
        EXPECT(0xe2, gbc.readMem(0xe62e));
        // CB E2 000C
        gbc.setState(0x7388, 0xef48, 0x5c70, 0xe3c3, 0x46b1, 0x4ec9, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 000D
        gbc.setState(0x1c4a, 0x84f6, 0x5600, 0xb419, 0x5b02, 0xfc0d, 0x0, 0x1);
        gbc.writeMem(0x1c4a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x84f6, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 000E
        gbc.setState(0x727c, 0x5e07, 0x2380, 0xdb4c, 0xce2, 0x6c16, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5e07, gbc.sp());
        EXPECT(0x727e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 000F
        gbc.setState(0x81cc, 0xb932, 0x9830, 0x4b99, 0xa069, 0xd57d, 0x1, 0x0);
        gbc.writeMem(0x81cc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb932, gbc.sp());
        EXPECT(0x81ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cc));
        EXPECT(0xe2, gbc.readMem(0x81cd));
        // CB E2 0010
        gbc.setState(0x366a, 0x942a, 0xf970, 0x5d1e, 0xedc2, 0x4bb5, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0x366c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0011
        gbc.setState(0x1bf9, 0x535, 0x5400, 0x18c0, 0xac0f, 0xb7c7, 0x1, 0x0);
        gbc.writeMem(0x1bf9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x535, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0012
        gbc.setState(0xa4f4, 0x174d, 0x8200, 0xeeb6, 0x5f27, 0x48d4, 0x1, 0x0);
        gbc.writeMem(0xa4f4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f4));
        EXPECT(0xe2, gbc.readMem(0xa4f5));
        // CB E2 0013
        gbc.setState(0xd76b, 0xe948, 0x6f50, 0x4190, 0xf9f6, 0xfb87, 0x1, 0x0);
        gbc.writeMem(0xd76b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0xd76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76b));
        EXPECT(0xe2, gbc.readMem(0xd76c));
        // CB E2 0014
        gbc.setState(0xa893, 0xe44d, 0xc020, 0xd9d7, 0xea82, 0xcaf2, 0x1, 0x1);
        gbc.writeMem(0xa893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe44d, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa893));
        EXPECT(0xe2, gbc.readMem(0xa894));
        // CB E2 0015
        gbc.setState(0x56dc, 0x5f6b, 0xa5d0, 0xda3c, 0xc79b, 0xb362, 0x1, 0x1);
        gbc.writeMem(0x56dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0016
        gbc.setState(0xb3dd, 0x6eb3, 0xcdb0, 0x33c7, 0x4afb, 0xfe98, 0x1, 0x1);
        gbc.writeMem(0xb3dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6eb3, gbc.sp());
        EXPECT(0xb3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3dd));
        EXPECT(0xe2, gbc.readMem(0xb3de));
        // CB E2 0018
        gbc.setState(0xb895, 0xd906, 0xb2e0, 0x5464, 0x5453, 0x5893, 0x1, 0x1);
        gbc.writeMem(0xb895, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd906, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb895));
        EXPECT(0xe2, gbc.readMem(0xb896));
        // CB E2 0019
        gbc.setState(0xd476, 0x7360, 0x4dc0, 0x87d1, 0x1332, 0x71e2, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7360, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd476));
        EXPECT(0xe2, gbc.readMem(0xd477));
        // CB E2 001B
        gbc.setState(0x827c, 0xdc39, 0x5070, 0x1481, 0x3b34, 0xd39c, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827c));
        EXPECT(0xe2, gbc.readMem(0x827d));
        // CB E2 001C
        gbc.setState(0x6770, 0x27df, 0x50b0, 0x6171, 0xd436, 0x8e7, 0x1, 0x1);
        gbc.writeMem(0x6770, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x27df, gbc.sp());
        EXPECT(0x6772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 001D
        gbc.setState(0x3f8e, 0x1ace, 0xfa50, 0x1710, 0x4e2a, 0x11a3, 0x1, 0x1);
        gbc.writeMem(0x3f8e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0x3f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 001E
        gbc.setState(0x5947, 0x8789, 0xa470, 0x3d62, 0xeda4, 0x4094, 0x1, 0x1);
        gbc.writeMem(0x5947, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8789, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 001F
        gbc.setState(0x415f, 0x413d, 0x23c0, 0x73f1, 0xcb00, 0xd037, 0x0, 0x0);
        gbc.writeMem(0x415f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x413d, gbc.sp());
        EXPECT(0x4161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0021
        gbc.setState(0xe2c0, 0xe611, 0x5b30, 0xf7d6, 0x8b5, 0xe3de, 0x0, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe611, gbc.sp());
        EXPECT(0xe2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c0));
        EXPECT(0xe2, gbc.readMem(0xe2c1));
        // CB E2 0022
        gbc.setState(0x28e7, 0xb974, 0x3b0, 0x8e98, 0xf127, 0xbd5f, 0x0, 0x0);
        gbc.writeMem(0x28e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x28e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0023
        gbc.setState(0xe3, 0x8484, 0xd350, 0x30f7, 0x15de, 0xb7b, 0x0, 0x0);
        gbc.writeMem(0xe3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8484, gbc.sp());
        EXPECT(0xe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0024
        gbc.setState(0xec, 0x4d90, 0x2f70, 0xac84, 0x853e, 0x4be3, 0x1, 0x1);
        gbc.writeMem(0xec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0026
        gbc.setState(0x6e6c, 0x3e08, 0x1340, 0x7f7d, 0x2817, 0xa76a, 0x0, 0x0);
        gbc.writeMem(0x6e6c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3e08, gbc.sp());
        EXPECT(0x6e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0027
        gbc.setState(0x9b11, 0xb8a, 0x8570, 0x1be5, 0x19e1, 0x29cc, 0x0, 0x0);
        gbc.writeMem(0x9b11, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8a, gbc.sp());
        EXPECT(0x9b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b11));
        EXPECT(0xe2, gbc.readMem(0x9b12));
        // CB E2 0028
        gbc.setState(0xbb06, 0x9cc, 0x6860, 0xd459, 0xede8, 0x9703, 0x1, 0x1);
        gbc.writeMem(0xbb06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9cc, gbc.sp());
        EXPECT(0xbb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb06));
        EXPECT(0xe2, gbc.readMem(0xbb07));
        // CB E2 0029
        gbc.setState(0x569d, 0x756c, 0x58e0, 0x9945, 0x4ab9, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x569d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 002A
        gbc.setState(0xb35f, 0xc34a, 0x76a0, 0xa106, 0x6465, 0x9b46, 0x0, 0x1);
        gbc.writeMem(0xb35f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0xb361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35f));
        EXPECT(0xe2, gbc.readMem(0xb360));
        // CB E2 002B
        gbc.setState(0x5f36, 0xdd28, 0x1de0, 0x3c5b, 0xec2a, 0x9a69, 0x1, 0x1);
        gbc.writeMem(0x5f36, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd28, gbc.sp());
        EXPECT(0x5f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 002C
        gbc.setState(0xa300, 0x25f1, 0xab70, 0x981d, 0xa784, 0x114c, 0x1, 0x0);
        gbc.writeMem(0xa300, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0xa302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa300));
        EXPECT(0xe2, gbc.readMem(0xa301));
        // CB E2 002D
        gbc.setState(0xcd82, 0x9064, 0xaf80, 0x881, 0x25, 0xe92b, 0x1, 0x1);
        gbc.writeMem(0xcd82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9064, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd82));
        EXPECT(0xe2, gbc.readMem(0xcd83));
        // CB E2 002E
        gbc.setState(0x741c, 0x8129, 0x9170, 0xc81, 0xb854, 0xb338, 0x1, 0x0);
        gbc.writeMem(0x741c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 002F
        gbc.setState(0x347d, 0x900, 0x4f0, 0xe71a, 0xbf4d, 0xa92f, 0x0, 0x0);
        gbc.writeMem(0x347d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0031
        gbc.setState(0x9026, 0x28e8, 0x7790, 0x406e, 0x8135, 0xd1aa, 0x0, 0x0);
        gbc.writeMem(0x9026, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x28e8, gbc.sp());
        EXPECT(0x9028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9026));
        EXPECT(0xe2, gbc.readMem(0x9027));
        // CB E2 0032
        gbc.setState(0x206c, 0x393d, 0x1aa0, 0x457f, 0x1197, 0xdec3, 0x0, 0x1);
        gbc.writeMem(0x206c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x393d, gbc.sp());
        EXPECT(0x206e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0033
        gbc.setState(0xd468, 0x8645, 0x3960, 0xe9b0, 0x27d1, 0x11c3, 0x1, 0x1);
        gbc.writeMem(0xd468, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8645, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd468));
        EXPECT(0xe2, gbc.readMem(0xd469));
        // CB E2 0034
        gbc.setState(0x4cbe, 0x3d5c, 0xe690, 0x2d, 0x2559, 0x9091, 0x0, 0x0);
        gbc.writeMem(0x4cbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0035
        gbc.setState(0xe3ec, 0x2b36, 0xa140, 0x3cf0, 0x469b, 0xbd7f, 0x1, 0x0);
        gbc.writeMem(0xe3ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ec));
        EXPECT(0xe2, gbc.readMem(0xe3ed));
        // CB E2 0036
        gbc.setState(0x1e08, 0x5588, 0x4de0, 0x8958, 0x3ab7, 0xad1f, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0037
        gbc.setState(0xc024, 0xe13e, 0x51a0, 0x666f, 0x54b7, 0xe1bd, 0x0, 0x0);
        gbc.writeMem(0xc024, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0xc026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc024));
        EXPECT(0xe2, gbc.readMem(0xc025));
        // CB E2 0038
        gbc.setState(0xa728, 0xe31d, 0x5bb0, 0x1945, 0xddb0, 0x8962, 0x1, 0x0);
        gbc.writeMem(0xa728, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0xa72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa728));
        EXPECT(0xe2, gbc.readMem(0xa729));
        // CB E2 0039
        gbc.setState(0x47fd, 0xf7b4, 0x31d0, 0x364a, 0xcfb0, 0xd6dd, 0x1, 0x0);
        gbc.writeMem(0x47fd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf7b4, gbc.sp());
        EXPECT(0x47ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 003A
        gbc.setState(0x758a, 0xd37, 0x6040, 0x33bb, 0xd1e5, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0x758a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd37, gbc.sp());
        EXPECT(0x758c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 003B
        gbc.setState(0x751a, 0x6ac9, 0x4f0, 0xcd33, 0xe903, 0xb73d, 0x1, 0x1);
        gbc.writeMem(0x751a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 003C
        gbc.setState(0x33a4, 0xd066, 0x48d0, 0xf81e, 0x233a, 0x2429, 0x0, 0x1);
        gbc.writeMem(0x33a4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0x33a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 003D
        gbc.setState(0xdc9, 0x9538, 0x9be0, 0xa5b9, 0xdeaf, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 003E
        gbc.setState(0x8324, 0xc71a, 0x8eb0, 0x7554, 0xb502, 0x6e0, 0x0, 0x1);
        gbc.writeMem(0x8324, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc71a, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8324));
        EXPECT(0xe2, gbc.readMem(0x8325));
        // CB E2 003F
        gbc.setState(0x129b, 0xdcbb, 0x2020, 0xa3ad, 0xcb49, 0x5683, 0x0, 0x1);
        gbc.writeMem(0x129b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdcbb, gbc.sp());
        EXPECT(0x129d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0040
        gbc.setState(0x727a, 0xf2b4, 0x4ff0, 0xd679, 0xa1ca, 0x425b, 0x0, 0x0);
        gbc.writeMem(0x727a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf2b4, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0041
        gbc.setState(0xb2f6, 0x629, 0x8970, 0x31e6, 0xf72d, 0xe017, 0x0, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x629, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f6));
        EXPECT(0xe2, gbc.readMem(0xb2f7));
        // CB E2 0042
        gbc.setState(0x6baa, 0x830b, 0xacf0, 0x14ae, 0x2e56, 0x8550, 0x0, 0x1);
        gbc.writeMem(0x6baa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0043
        gbc.setState(0x901e, 0xff7, 0x1300, 0xf506, 0x6bdf, 0x4ef0, 0x0, 0x1);
        gbc.writeMem(0x901e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0x9020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901e));
        EXPECT(0xe2, gbc.readMem(0x901f));
        // CB E2 0044
        gbc.setState(0xab06, 0xd229, 0x1690, 0xdeab, 0xc1f, 0x6dda, 0x1, 0x1);
        gbc.writeMem(0xab06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0xab08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab06));
        EXPECT(0xe2, gbc.readMem(0xab07));
        // CB E2 0045
        gbc.setState(0xec2a, 0xf4a4, 0x1e30, 0xe6ee, 0x1981, 0x2bb8, 0x0, 0x1);
        gbc.writeMem(0xec2a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf4a4, gbc.sp());
        EXPECT(0xec2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2a));
        EXPECT(0xe2, gbc.readMem(0xec2b));
        // CB E2 0046
        gbc.setState(0x7051, 0x35ef, 0x11d0, 0x95ca, 0x2af4, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x35ef, gbc.sp());
        EXPECT(0x7053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0047
        gbc.setState(0x99e9, 0x1ebc, 0x8960, 0x24c8, 0xe2d8, 0xba41, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1ebc, gbc.sp());
        EXPECT(0x99eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e9));
        EXPECT(0xe2, gbc.readMem(0x99ea));
        // CB E2 0049
        gbc.setState(0xdcf1, 0xda50, 0x47c0, 0x95e7, 0x703f, 0x52bb, 0x1, 0x0);
        gbc.writeMem(0xdcf1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xda50, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf1));
        EXPECT(0xe2, gbc.readMem(0xdcf2));
        // CB E2 004A
        gbc.setState(0xcf8a, 0xa141, 0x2970, 0x3f90, 0x3788, 0xede4, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa141, gbc.sp());
        EXPECT(0xcf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8a));
        EXPECT(0xe2, gbc.readMem(0xcf8b));
        // CB E2 004B
        gbc.setState(0x9117, 0xedc7, 0x84d0, 0x477e, 0x2404, 0x928d, 0x0, 0x0);
        gbc.writeMem(0x9117, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x9119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9117));
        EXPECT(0xe2, gbc.readMem(0x9118));
        // CB E2 004C
        gbc.setState(0x1448, 0xf4a2, 0x3da0, 0xb833, 0x7146, 0xf92b, 0x0, 0x0);
        gbc.writeMem(0x1448, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf4a2, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 004D
        gbc.setState(0x3d, 0xe18f, 0x1370, 0x4a99, 0x1172, 0x2a6d, 0x0, 0x0);
        gbc.writeMem(0x3d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0x3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 004E
        gbc.setState(0x2d23, 0xb5cc, 0x70f0, 0x79ed, 0x378f, 0xfc22, 0x1, 0x0);
        gbc.writeMem(0x2d23, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb5cc, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 004F
        gbc.setState(0xe4b9, 0x2c90, 0x3330, 0x963a, 0xa89a, 0xe404, 0x1, 0x1);
        gbc.writeMem(0xe4b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2c90, gbc.sp());
        EXPECT(0xe4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b9));
        EXPECT(0xe2, gbc.readMem(0xe4ba));
        // CB E2 0050
        gbc.setState(0x314d, 0x33b9, 0x7100, 0xa9fe, 0x2b54, 0x510b, 0x1, 0x0);
        gbc.writeMem(0x314d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0051
        gbc.setState(0x373d, 0x9e1b, 0xba40, 0x6b9, 0xfb, 0x799a, 0x1, 0x1);
        gbc.writeMem(0x373d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0052
        gbc.setState(0x6434, 0xe626, 0xc750, 0x736b, 0xaf5b, 0x70b7, 0x1, 0x0);
        gbc.writeMem(0x6434, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0x6436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0053
        gbc.setState(0x5e6e, 0x6d75, 0x3eb0, 0xbf48, 0x142b, 0xca22, 0x1, 0x0);
        gbc.writeMem(0x5e6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6d75, gbc.sp());
        EXPECT(0x5e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0054
        gbc.setState(0x3c1, 0x8b82, 0x2e90, 0x7dd6, 0x9852, 0x7f38, 0x1, 0x0);
        gbc.writeMem(0x3c1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8b82, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0055
        gbc.setState(0x8ff7, 0x952d, 0xda10, 0xa47f, 0x1a32, 0x21e6, 0x0, 0x0);
        gbc.writeMem(0x8ff7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x8ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff7));
        EXPECT(0xe2, gbc.readMem(0x8ff8));
        // CB E2 0056
        gbc.setState(0xd4c7, 0x9a8a, 0x52f0, 0xef0a, 0xb495, 0x510d, 0x0, 0x0);
        gbc.writeMem(0xd4c7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9a8a, gbc.sp());
        EXPECT(0xd4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c7));
        EXPECT(0xe2, gbc.readMem(0xd4c8));
        // CB E2 0057
        gbc.setState(0x7a11, 0x18ec, 0xe630, 0xa68, 0x2dc7, 0x832, 0x0, 0x1);
        gbc.writeMem(0x7a11, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x7a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0058
        gbc.setState(0x365e, 0x8c7d, 0x3860, 0xfa83, 0x2eea, 0x1587, 0x1, 0x1);
        gbc.writeMem(0x365e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x3660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0059
        gbc.setState(0xabc0, 0x98bb, 0xcf10, 0x671f, 0xc321, 0x3db7, 0x0, 0x0);
        gbc.writeMem(0xabc0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x98bb, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc0));
        EXPECT(0xe2, gbc.readMem(0xabc1));
        // CB E2 005A
        gbc.setState(0x8663, 0xcb9a, 0x99a0, 0x1a59, 0xb02b, 0xd902, 0x0, 0x1);
        gbc.writeMem(0x8663, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcb9a, gbc.sp());
        EXPECT(0x8665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8663));
        EXPECT(0xe2, gbc.readMem(0x8664));
        // CB E2 005B
        gbc.setState(0x791f, 0x1db1, 0x21d0, 0xb812, 0xd1ec, 0xb57c, 0x0, 0x1);
        gbc.writeMem(0x791f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1db1, gbc.sp());
        EXPECT(0x7921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 005C
        gbc.setState(0x208, 0xc1b8, 0xe120, 0x6d01, 0x20a, 0x526a, 0x0, 0x1);
        gbc.writeMem(0x208, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc1b8, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 005E
        gbc.setState(0x5cf7, 0x6545, 0x3cf0, 0x6514, 0x75c5, 0x370a, 0x1, 0x0);
        gbc.writeMem(0x5cf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6545, gbc.sp());
        EXPECT(0x5cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 005F
        gbc.setState(0x382c, 0xf848, 0x53e0, 0x4d9, 0x3614, 0x7e7b, 0x0, 0x1);
        gbc.writeMem(0x382c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0x382e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0060
        gbc.setState(0x31f1, 0x4dc8, 0x56c0, 0x5d38, 0xdcb6, 0x38b3, 0x0, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0061
        gbc.setState(0x979e, 0x9832, 0xe3d0, 0xdce2, 0xf8ae, 0x4a37, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9832, gbc.sp());
        EXPECT(0x97a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979e));
        EXPECT(0xe2, gbc.readMem(0x979f));
        // CB E2 0062
        gbc.setState(0x9ac8, 0x5a1b, 0xcda0, 0x1f1f, 0xae8a, 0xef14, 0x0, 0x1);
        gbc.writeMem(0x9ac8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x9aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac8));
        EXPECT(0xe2, gbc.readMem(0x9ac9));
        // CB E2 0063
        gbc.setState(0xcb72, 0x92e, 0xfd0, 0xf323, 0xe5c4, 0xee03, 0x0, 0x1);
        gbc.writeMem(0xcb72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x92e, gbc.sp());
        EXPECT(0xcb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb72));
        EXPECT(0xe2, gbc.readMem(0xcb73));
        // CB E2 0064
        gbc.setState(0x7f3c, 0x7509, 0x4580, 0xadca, 0x9c1a, 0xaa8c, 0x1, 0x1);
        gbc.writeMem(0x7f3c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0065
        gbc.setState(0x5ee5, 0xd07d, 0x35b0, 0xcf7c, 0x3f6a, 0x7e77, 0x1, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0066
        gbc.setState(0xa55e, 0xdc6, 0xc390, 0xa853, 0x6d7f, 0x5b4c, 0x0, 0x0);
        gbc.writeMem(0xa55e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdc6, gbc.sp());
        EXPECT(0xa560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55e));
        EXPECT(0xe2, gbc.readMem(0xa55f));
        // CB E2 0067
        gbc.setState(0x7879, 0x552, 0xd640, 0x2e63, 0x94be, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0068
        gbc.setState(0xaa10, 0xc84e, 0xde70, 0x3149, 0x612a, 0x2d35, 0x0, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc84e, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0xe2, gbc.readMem(0xaa11));
        // CB E2 0069
        gbc.setState(0x33f9, 0x50b4, 0x9880, 0x7353, 0x7290, 0xf7ac, 0x0, 0x0);
        gbc.writeMem(0x33f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x50b4, gbc.sp());
        EXPECT(0x33fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 006B
        gbc.setState(0x577b, 0x5bee, 0x1d0, 0xfc5, 0xc797, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x577b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5bee, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 006C
        gbc.setState(0xa748, 0x40a, 0xb9f0, 0x4727, 0xb690, 0x23cc, 0x1, 0x0);
        gbc.writeMem(0xa748, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x40a, gbc.sp());
        EXPECT(0xa74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa748));
        EXPECT(0xe2, gbc.readMem(0xa749));
        // CB E2 006D
        gbc.setState(0xa9d2, 0x7be7, 0x22d0, 0x55e, 0x569c, 0x7c37, 0x0, 0x0);
        gbc.writeMem(0xa9d2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0xa9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d2));
        EXPECT(0xe2, gbc.readMem(0xa9d3));
        // CB E2 006E
        gbc.setState(0x1a77, 0xe4ab, 0x80c0, 0x2f9d, 0x5a02, 0xd6a8, 0x1, 0x0);
        gbc.writeMem(0x1a77, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe4ab, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 006F
        gbc.setState(0xd60a, 0xcfbf, 0x7810, 0x2060, 0xe4f2, 0xb297, 0x0, 0x0);
        gbc.writeMem(0xd60a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0xe2, gbc.readMem(0xd60b));
        // CB E2 0071
        gbc.setState(0xca5f, 0x5303, 0xbdf0, 0x138c, 0xcf29, 0x6312, 0x0, 0x0);
        gbc.writeMem(0xca5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5303, gbc.sp());
        EXPECT(0xca61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5f));
        EXPECT(0xe2, gbc.readMem(0xca60));
        // CB E2 0072
        gbc.setState(0x8ed5, 0x1a7a, 0x6310, 0x271d, 0x3eda, 0xeebe, 0x1, 0x1);
        gbc.writeMem(0x8ed5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed5));
        EXPECT(0xe2, gbc.readMem(0x8ed6));
        // CB E2 0073
        gbc.setState(0xc6e0, 0x23ea, 0xbaf0, 0x2c0f, 0x8eaa, 0xf65d, 0x0, 0x0);
        gbc.writeMem(0xc6e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0xc6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e0));
        EXPECT(0xe2, gbc.readMem(0xc6e1));
        // CB E2 0074
        gbc.setState(0xce0a, 0x23a5, 0x56f0, 0x4891, 0x9b8e, 0xf87a, 0x0, 0x0);
        gbc.writeMem(0xce0a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0a));
        EXPECT(0xe2, gbc.readMem(0xce0b));
        // CB E2 0075
        gbc.setState(0xdde4, 0x5259, 0x9e30, 0x8ef6, 0xe5dd, 0x5db6, 0x0, 0x1);
        gbc.writeMem(0xdde4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5259, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde4));
        EXPECT(0xe2, gbc.readMem(0xdde5));
        // CB E2 0076
        gbc.setState(0x6fe, 0x4eb1, 0x8190, 0x39e, 0x3cf5, 0xac50, 0x0, 0x0);
        gbc.writeMem(0x6fe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4eb1, gbc.sp());
        EXPECT(0x700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0077
        gbc.setState(0xd6cb, 0xb14f, 0x5940, 0xbd37, 0x1981, 0xb6a3, 0x0, 0x0);
        gbc.writeMem(0xd6cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb14f, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cb));
        EXPECT(0xe2, gbc.readMem(0xd6cc));
        // CB E2 0078
        gbc.setState(0x873c, 0x8ab5, 0xa8b0, 0x10db, 0x24c1, 0xb2ed, 0x1, 0x1);
        gbc.writeMem(0x873c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8ab5, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0xe2, gbc.readMem(0x873d));
        // CB E2 0079
        gbc.setState(0xa31a, 0xc4ef, 0x3ea0, 0x31b, 0x7a8b, 0xeadd, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31a));
        EXPECT(0xe2, gbc.readMem(0xa31b));
        // CB E2 007A
        gbc.setState(0x5961, 0xee24, 0x79e0, 0x1abf, 0x6b39, 0x9b16, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xee24, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 007B
        gbc.setState(0x6a, 0x9f08, 0xae0, 0xdec1, 0x5ac, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9f08, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 007C
        gbc.setState(0x963b, 0xaf4d, 0xcd80, 0xbbaf, 0x99d8, 0xb602, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaf4d, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963b));
        EXPECT(0xe2, gbc.readMem(0x963c));
        // CB E2 007D
        gbc.setState(0xcf4d, 0x2df, 0xa680, 0x105d, 0x179d, 0x52e5, 0x1, 0x0);
        gbc.writeMem(0xcf4d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2df, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4d));
        EXPECT(0xe2, gbc.readMem(0xcf4e));
        // CB E2 007E
        gbc.setState(0xc2a0, 0x170b, 0x9bd0, 0x9ecf, 0x10dd, 0xa9b5, 0x1, 0x1);
        gbc.writeMem(0xc2a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x170b, gbc.sp());
        EXPECT(0xc2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a0));
        EXPECT(0xe2, gbc.readMem(0xc2a1));
        // CB E2 007F
        gbc.setState(0x360c, 0x4ee6, 0x7df0, 0x45df, 0xef43, 0xc020, 0x1, 0x0);
        gbc.writeMem(0x360c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4ee6, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0080
        gbc.setState(0x6ba7, 0xbd72, 0x27f0, 0xca23, 0xec9a, 0x6fa4, 0x0, 0x1);
        gbc.writeMem(0x6ba7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbd72, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0081
        gbc.setState(0x91d3, 0xe515, 0x29b0, 0xb95f, 0x1af8, 0x4e7f, 0x0, 0x0);
        gbc.writeMem(0x91d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d3));
        EXPECT(0xe2, gbc.readMem(0x91d4));
        // CB E2 0082
        gbc.setState(0x31e5, 0xc3a4, 0xc550, 0x5b85, 0x6b51, 0x77d5, 0x1, 0x0);
        gbc.writeMem(0x31e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc3a4, gbc.sp());
        EXPECT(0x31e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0083
        gbc.setState(0x2c70, 0xced6, 0x6bb0, 0x8ac5, 0xdf57, 0xc530, 0x0, 0x0);
        gbc.writeMem(0x2c70, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xced6, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0084
        gbc.setState(0xa312, 0x812b, 0xb880, 0x66d7, 0xcc95, 0x8f75, 0x1, 0x0);
        gbc.writeMem(0xa312, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0xa314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa312));
        EXPECT(0xe2, gbc.readMem(0xa313));
        // CB E2 0085
        gbc.setState(0x5abe, 0x3e52, 0xc6f0, 0x4907, 0x434b, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0x5abe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3e52, gbc.sp());
        EXPECT(0x5ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0086
        gbc.setState(0xaf0e, 0x3215, 0x9d40, 0x8db4, 0xd75b, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0xaf0e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3215, gbc.sp());
        EXPECT(0xaf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0e));
        EXPECT(0xe2, gbc.readMem(0xaf0f));
        // CB E2 0087
        gbc.setState(0x5a51, 0xb13a, 0xa3d0, 0x69dd, 0xbc4f, 0x55cc, 0x1, 0x0);
        gbc.writeMem(0x5a51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x5a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0088
        gbc.setState(0x226e, 0xd6ff, 0xda60, 0xac48, 0x9caf, 0x1895, 0x1, 0x1);
        gbc.writeMem(0x226e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd6ff, gbc.sp());
        EXPECT(0x2270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0089
        gbc.setState(0x1ff1, 0x1651, 0xe230, 0x5225, 0x371f, 0x7713, 0x1, 0x0);
        gbc.writeMem(0x1ff1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1651, gbc.sp());
        EXPECT(0x1ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 008A
        gbc.setState(0xee1c, 0xcc4d, 0xa360, 0x29f6, 0x880d, 0xa1b9, 0x0, 0x1);
        gbc.writeMem(0xee1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0xee1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1c));
        EXPECT(0xe2, gbc.readMem(0xee1d));
        // CB E2 008B
        gbc.setState(0x801d, 0xb8ac, 0xb040, 0xe11c, 0xd301, 0xee12, 0x0, 0x1);
        gbc.writeMem(0x801d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb8ac, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801d));
        EXPECT(0xe2, gbc.readMem(0x801e));
        // CB E2 008C
        gbc.setState(0xad73, 0xa175, 0x320, 0x96e6, 0x9c95, 0x4126, 0x1, 0x0);
        gbc.writeMem(0xad73, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa175, gbc.sp());
        EXPECT(0xad75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad73));
        EXPECT(0xe2, gbc.readMem(0xad74));
        // CB E2 008D
        gbc.setState(0xc44d, 0x89a0, 0x6970, 0xca44, 0xa98d, 0x7a15, 0x1, 0x0);
        gbc.writeMem(0xc44d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x89a0, gbc.sp());
        EXPECT(0xc44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44d));
        EXPECT(0xe2, gbc.readMem(0xc44e));
        // CB E2 008E
        gbc.setState(0xbffb, 0x497c, 0xa380, 0xfc5d, 0xceb3, 0x10f7, 0x0, 0x1);
        gbc.writeMem(0xbffb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffb));
        EXPECT(0xe2, gbc.readMem(0xbffc));
        // CB E2 008F
        gbc.setState(0xb3c3, 0xc297, 0x640, 0x3dc9, 0x9dbd, 0x5e05, 0x1, 0x1);
        gbc.writeMem(0xb3c3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc297, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c3));
        EXPECT(0xe2, gbc.readMem(0xb3c4));
        // CB E2 0090
        gbc.setState(0xbdfd, 0x152b, 0x2380, 0x7ce6, 0xd071, 0x9c87, 0x1, 0x0);
        gbc.writeMem(0xbdfd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xbdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfd));
        EXPECT(0xe2, gbc.readMem(0xbdfe));
        // CB E2 0091
        gbc.setState(0xd699, 0xb9b8, 0x96e0, 0xf6f5, 0xd781, 0x5c36, 0x0, 0x1);
        gbc.writeMem(0xd699, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb9b8, gbc.sp());
        EXPECT(0xd69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd699));
        EXPECT(0xe2, gbc.readMem(0xd69a));
        // CB E2 0092
        gbc.setState(0xed1, 0x1ff0, 0x4de0, 0x26b8, 0xe945, 0x7745, 0x0, 0x1);
        gbc.writeMem(0xed1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1ff0, gbc.sp());
        EXPECT(0xed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0093
        gbc.setState(0x31dd, 0x2346, 0x36d0, 0x7c54, 0xcf4b, 0x2531, 0x1, 0x0);
        gbc.writeMem(0x31dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2346, gbc.sp());
        EXPECT(0x31df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0094
        gbc.setState(0xdede, 0x6c82, 0x6890, 0xe60a, 0x6581, 0xc603, 0x1, 0x1);
        gbc.writeMem(0xdede, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6c82, gbc.sp());
        EXPECT(0xdee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdede));
        EXPECT(0xe2, gbc.readMem(0xdedf));
        // CB E2 0095
        gbc.setState(0xa609, 0x9815, 0xb240, 0x4bfd, 0xab42, 0x52b7, 0x1, 0x1);
        gbc.writeMem(0xa609, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xa60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa609));
        EXPECT(0xe2, gbc.readMem(0xa60a));
        // CB E2 0096
        gbc.setState(0x37db, 0x3363, 0x7ec0, 0x7d43, 0xce85, 0xae36, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0097
        gbc.setState(0xce3e, 0xaa36, 0xa350, 0x4ce7, 0xe8eb, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0xce3e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaa36, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3e));
        EXPECT(0xe2, gbc.readMem(0xce3f));
        // CB E2 0098
        gbc.setState(0x79ea, 0xd522, 0x2980, 0xb5cf, 0xc125, 0x4bfb, 0x0, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x79ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0099
        gbc.setState(0x8679, 0x5e48, 0x9120, 0x8271, 0x7789, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0x8679, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8679));
        EXPECT(0xe2, gbc.readMem(0x867a));
        // CB E2 009A
        gbc.setState(0xa54e, 0xc751, 0x96d0, 0xe39, 0xef96, 0x5498, 0x1, 0x0);
        gbc.writeMem(0xa54e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0xa550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54e));
        EXPECT(0xe2, gbc.readMem(0xa54f));
        // CB E2 009B
        gbc.setState(0xb581, 0x846f, 0x6cb0, 0x2394, 0x8990, 0x98c4, 0x1, 0x0);
        gbc.writeMem(0xb581, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x846f, gbc.sp());
        EXPECT(0xb583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb581));
        EXPECT(0xe2, gbc.readMem(0xb582));
        // CB E2 009C
        gbc.setState(0x8975, 0xd437, 0x3a80, 0x2b0b, 0xc2b6, 0xd9fa, 0x0, 0x1);
        gbc.writeMem(0x8975, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x8977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8975));
        EXPECT(0xe2, gbc.readMem(0x8976));
        // CB E2 009D
        gbc.setState(0x400d, 0xd0b5, 0x6970, 0x8deb, 0x7c13, 0x46c6, 0x1, 0x1);
        gbc.writeMem(0x400d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd0b5, gbc.sp());
        EXPECT(0x400f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 009E
        gbc.setState(0x9c2, 0x9007, 0xd710, 0x3a3, 0xeb20, 0x1df2, 0x0, 0x0);
        gbc.writeMem(0x9c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9007, gbc.sp());
        EXPECT(0x9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 009F
        gbc.setState(0xbe7e, 0x3bcb, 0x9270, 0x38b5, 0x7e08, 0x8fda, 0x0, 0x1);
        gbc.writeMem(0xbe7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0xbe80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7e));
        EXPECT(0xe2, gbc.readMem(0xbe7f));
        // CB E2 00A0
        gbc.setState(0x58dc, 0x47ff, 0xbad0, 0x67a, 0x654a, 0xbd90, 0x1, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00A1
        gbc.setState(0x2c3a, 0x22d2, 0xc6c0, 0x9c26, 0x374e, 0xf52b, 0x1, 0x1);
        gbc.writeMem(0x2c3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x22d2, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00A2
        gbc.setState(0x1bae, 0x6d46, 0xc0f0, 0x482e, 0x9c00, 0x1fe0, 0x1, 0x1);
        gbc.writeMem(0x1bae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d46, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00A3
        gbc.setState(0xccce, 0xbfa6, 0x4cc0, 0x97a6, 0xb257, 0x56c7, 0x0, 0x1);
        gbc.writeMem(0xccce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbfa6, gbc.sp());
        EXPECT(0xccd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccce));
        EXPECT(0xe2, gbc.readMem(0xcccf));
        // CB E2 00A4
        gbc.setState(0x5ca9, 0xab30, 0x95a0, 0x48af, 0xbef5, 0xc3d7, 0x1, 0x1);
        gbc.writeMem(0x5ca9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xab30, gbc.sp());
        EXPECT(0x5cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00A5
        gbc.setState(0xce5a, 0x9dd9, 0x4e20, 0xe923, 0x566d, 0xaee1, 0x1, 0x1);
        gbc.writeMem(0xce5a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9dd9, gbc.sp());
        EXPECT(0xce5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5a));
        EXPECT(0xe2, gbc.readMem(0xce5b));
        // CB E2 00A6
        gbc.setState(0x8bdf, 0xab70, 0xd520, 0x5fec, 0x84b7, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0x8bdf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0xe2, gbc.readMem(0x8be0));
        // CB E2 00A7
        gbc.setState(0xe1a5, 0x27a4, 0xf9c0, 0x5f96, 0x18ce, 0x1fe4, 0x1, 0x0);
        gbc.writeMem(0xe1a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x27a4, gbc.sp());
        EXPECT(0xe1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a5));
        EXPECT(0xe2, gbc.readMem(0xe1a6));
        // CB E2 00A8
        gbc.setState(0xe32d, 0x9618, 0x3ba0, 0x539b, 0x364, 0x2311, 0x0, 0x1);
        gbc.writeMem(0xe32d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0xe32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32d));
        EXPECT(0xe2, gbc.readMem(0xe32e));
        // CB E2 00A9
        gbc.setState(0xc491, 0xacad, 0x6770, 0x95, 0xe60b, 0xbb4a, 0x0, 0x0);
        gbc.writeMem(0xc491, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xacad, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc491));
        EXPECT(0xe2, gbc.readMem(0xc492));
        // CB E2 00AA
        gbc.setState(0xa5f2, 0x38bb, 0xe320, 0xaa33, 0xfbd7, 0x897d, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x38bb, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0xe2, gbc.readMem(0xa5f3));
        // CB E2 00AB
        gbc.setState(0x8cc6, 0x1e65, 0x1520, 0xbb6, 0x7b9f, 0xb22e, 0x0, 0x0);
        gbc.writeMem(0x8cc6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1e65, gbc.sp());
        EXPECT(0x8cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc6));
        EXPECT(0xe2, gbc.readMem(0x8cc7));
        // CB E2 00AC
        gbc.setState(0x7d51, 0x3938, 0x5890, 0x8960, 0x541c, 0xb692, 0x1, 0x0);
        gbc.writeMem(0x7d51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x7d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00AD
        gbc.setState(0x8070, 0x1774, 0x1e40, 0xb29a, 0x91ee, 0x248c, 0x1, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1774, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8070));
        EXPECT(0xe2, gbc.readMem(0x8071));
        // CB E2 00AE
        gbc.setState(0x3b44, 0x4336, 0xaaa0, 0x328a, 0x6b7e, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x3b44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0x3b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00AF
        gbc.setState(0xbf81, 0x5269, 0xe670, 0xa401, 0x3837, 0x2944, 0x1, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0xe2, gbc.readMem(0xbf82));
        // CB E2 00B0
        gbc.setState(0x4238, 0x467a, 0x91f0, 0xb3de, 0x2117, 0xd4fb, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x467a, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00B1
        gbc.setState(0xc7b2, 0xe0f0, 0xc8e0, 0x2b13, 0x9c37, 0x124e, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0xe2, gbc.readMem(0xc7b3));
        // CB E2 00B2
        gbc.setState(0xd1e2, 0x5fbf, 0x1f30, 0xbdd6, 0xb747, 0x92f4, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0xd1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e2));
        EXPECT(0xe2, gbc.readMem(0xd1e3));
        // CB E2 00B3
        gbc.setState(0x42d7, 0xec6c, 0x5990, 0xf999, 0xfc12, 0xaca, 0x1, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xec6c, gbc.sp());
        EXPECT(0x42d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00B4
        gbc.setState(0xa243, 0x95, 0xb20, 0xed95, 0xc9c4, 0x5833, 0x1, 0x1);
        gbc.writeMem(0xa243, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x95, gbc.sp());
        EXPECT(0xa245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa243));
        EXPECT(0xe2, gbc.readMem(0xa244));
        // CB E2 00B5
        gbc.setState(0x65be, 0xb2e9, 0x7680, 0x221a, 0x5708, 0x4abb, 0x0, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb2e9, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00B6
        gbc.setState(0xc9c1, 0xf1fd, 0x61f0, 0x7ef, 0xc7d7, 0x2476, 0x1, 0x0);
        gbc.writeMem(0xc9c1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf1fd, gbc.sp());
        EXPECT(0xc9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c1));
        EXPECT(0xe2, gbc.readMem(0xc9c2));
        // CB E2 00B7
        gbc.setState(0x97c9, 0x3c1d, 0x9fa0, 0xa91f, 0x6ba9, 0x73dc, 0x0, 0x1);
        gbc.writeMem(0x97c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0x97cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c9));
        EXPECT(0xe2, gbc.readMem(0x97ca));
        // CB E2 00B8
        gbc.setState(0x8b9a, 0xedd2, 0x3110, 0x8b4, 0x8958, 0x804e, 0x0, 0x0);
        gbc.writeMem(0x8b9a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x8b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9a));
        EXPECT(0xe2, gbc.readMem(0x8b9b));
        // CB E2 00B9
        gbc.setState(0x2b73, 0x5718, 0x3010, 0xbd05, 0xe2d8, 0x136d, 0x1, 0x0);
        gbc.writeMem(0x2b73, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5718, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00BA
        gbc.setState(0xd488, 0xc184, 0x89b0, 0x5495, 0x6eb4, 0xf9ab, 0x1, 0x0);
        gbc.writeMem(0xd488, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc184, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd488));
        EXPECT(0xe2, gbc.readMem(0xd489));
        // CB E2 00BB
        gbc.setState(0x196d, 0x7384, 0x10f0, 0xf43b, 0x833b, 0x6d63, 0x1, 0x0);
        gbc.writeMem(0x196d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x196f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00BC
        gbc.setState(0xa2f3, 0xba29, 0x70a0, 0x9989, 0xc26f, 0x652e, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0xa2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f3));
        EXPECT(0xe2, gbc.readMem(0xa2f4));
        // CB E2 00BD
        gbc.setState(0x4205, 0x1f02, 0x4180, 0x356d, 0x854c, 0xf7e2, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1f02, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00BE
        gbc.setState(0x8cc4, 0x57db, 0x46d0, 0x7e96, 0x78ae, 0xbd96, 0x0, 0x0);
        gbc.writeMem(0x8cc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x57db, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0xe2, gbc.readMem(0x8cc5));
        // CB E2 00BF
        gbc.setState(0x7732, 0xf8f9, 0x7160, 0x210e, 0xa56c, 0xf2d8, 0x0, 0x0);
        gbc.writeMem(0x7732, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf8f9, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00C0
        gbc.setState(0x113d, 0xd1f7, 0x88c0, 0xc8ff, 0xf728, 0x2cb8, 0x0, 0x1);
        gbc.writeMem(0x113d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd1f7, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00C1
        gbc.setState(0xab, 0xa24, 0x530, 0xd025, 0xcb00, 0x6abc, 0x0, 0x1);
        gbc.writeMem(0xab, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0xad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00C2
        gbc.setState(0x8e99, 0x373b, 0x9520, 0x3dcb, 0xb71c, 0x1bf6, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x373b, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e99));
        EXPECT(0xe2, gbc.readMem(0x8e9a));
        // CB E2 00C3
        gbc.setState(0x331, 0x9e0e, 0x4060, 0x90f5, 0xa7db, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0x331, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9e0e, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00C4
        gbc.setState(0x1fc4, 0x5139, 0x3b0, 0x3e9b, 0x9e61, 0x2688, 0x1, 0x1);
        gbc.writeMem(0x1fc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0x1fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00C5
        gbc.setState(0x9615, 0xcdc8, 0x1b50, 0x66e8, 0x9b81, 0xbc1, 0x1, 0x0);
        gbc.writeMem(0x9615, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9615));
        EXPECT(0xe2, gbc.readMem(0x9616));
        // CB E2 00C6
        gbc.setState(0x4a64, 0x1f08, 0x7ba0, 0x593e, 0xd882, 0x22e3, 0x1, 0x1);
        gbc.writeMem(0x4a64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00C7
        gbc.setState(0xc4aa, 0x71cb, 0xe710, 0xdc01, 0xb03f, 0x8637, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x71cb, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0xe2, gbc.readMem(0xc4ab));
        // CB E2 00C8
        gbc.setState(0x4c1c, 0x3d69, 0xa6d0, 0x7e96, 0x15d2, 0xc458, 0x0, 0x1);
        gbc.writeMem(0x4c1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00C9
        gbc.setState(0x581b, 0xc3ea, 0xa190, 0xb69b, 0xb952, 0x4275, 0x0, 0x0);
        gbc.writeMem(0x581b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0x581d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00CA
        gbc.setState(0x7e5b, 0xa6a, 0x2df0, 0x3471, 0x1fc6, 0x6f72, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00CB
        gbc.setState(0xb6cd, 0xf75, 0x5e20, 0x77f7, 0x89c1, 0x745c, 0x1, 0x1);
        gbc.writeMem(0xb6cd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0xb6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cd));
        EXPECT(0xe2, gbc.readMem(0xb6ce));
        // CB E2 00CC
        gbc.setState(0x714e, 0x2747, 0xb3a0, 0x7250, 0x7049, 0x2112, 0x1, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2747, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00CD
        gbc.setState(0xb300, 0x71ef, 0x5350, 0x35e6, 0xbd35, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0xb300, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x71ef, gbc.sp());
        EXPECT(0xb302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb300));
        EXPECT(0xe2, gbc.readMem(0xb301));
        // CB E2 00CE
        gbc.setState(0xee95, 0x9458, 0xd490, 0x79e2, 0x4e80, 0xd819, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9458, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xe2, gbc.readMem(0xee96));
        // CB E2 00CF
        gbc.setState(0x5ec8, 0x2fe2, 0xcc00, 0x5889, 0xb0c7, 0x55ed, 0x0, 0x1);
        gbc.writeMem(0x5ec8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00D0
        gbc.setState(0x5c32, 0xdad4, 0x89d0, 0x9f17, 0xff59, 0x43b7, 0x1, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdad4, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00D1
        gbc.setState(0x5dda, 0xadb9, 0x9290, 0x6287, 0xe222, 0xf486, 0x0, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0x5ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00D2
        gbc.setState(0xb1a3, 0x747c, 0x1f40, 0x75d, 0xa74f, 0x7c4e, 0x1, 0x0);
        gbc.writeMem(0xb1a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x747c, gbc.sp());
        EXPECT(0xb1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a3));
        EXPECT(0xe2, gbc.readMem(0xb1a4));
        // CB E2 00D3
        gbc.setState(0x15e7, 0x3024, 0x7220, 0x2c5b, 0x3cd5, 0x4761, 0x0, 0x0);
        gbc.writeMem(0x15e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00D4
        gbc.setState(0x44af, 0xbfbc, 0x9960, 0x804d, 0xfcff, 0x5e34, 0x1, 0x0);
        gbc.writeMem(0x44af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbfbc, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00D5
        gbc.setState(0xb99, 0xe897, 0x780, 0x6f04, 0x99b6, 0xfd90, 0x0, 0x1);
        gbc.writeMem(0xb99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe897, gbc.sp());
        EXPECT(0xb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00D7
        gbc.setState(0x5f48, 0xbb6d, 0x77b0, 0x8af3, 0x735a, 0xcb8e, 0x1, 0x1);
        gbc.writeMem(0x5f48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbb6d, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00D8
        gbc.setState(0xb8af, 0xfd49, 0x6bd0, 0x2b8b, 0x16e1, 0xf8c6, 0x1, 0x0);
        gbc.writeMem(0xb8af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd49, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8af));
        EXPECT(0xe2, gbc.readMem(0xb8b0));
        // CB E2 00D9
        gbc.setState(0xe6ea, 0xaf42, 0x6a50, 0xd971, 0xf451, 0x913e, 0x1, 0x1);
        gbc.writeMem(0xe6ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf42, gbc.sp());
        EXPECT(0xe6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ea));
        EXPECT(0xe2, gbc.readMem(0xe6eb));
        // CB E2 00DA
        gbc.setState(0x8fc, 0x64ba, 0x1940, 0x3797, 0x1f13, 0x287c, 0x1, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0x8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00DB
        gbc.setState(0x4c82, 0x3555, 0x7990, 0xe744, 0xabe1, 0x891, 0x1, 0x0);
        gbc.writeMem(0x4c82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3555, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00DC
        gbc.setState(0xbba7, 0x4f3d, 0x9ed0, 0xdc5b, 0x6ba, 0x2919, 0x1, 0x1);
        gbc.writeMem(0xbba7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4f3d, gbc.sp());
        EXPECT(0xbba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba7));
        EXPECT(0xe2, gbc.readMem(0xbba8));
        // CB E2 00DD
        gbc.setState(0x816a, 0x59d, 0x4140, 0xe3bc, 0x392c, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0x816c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816a));
        EXPECT(0xe2, gbc.readMem(0x816b));
        // CB E2 00DE
        gbc.setState(0xb900, 0xaaa1, 0x7da0, 0xe2f0, 0x7740, 0xc9f0, 0x1, 0x1);
        gbc.writeMem(0xb900, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaaa1, gbc.sp());
        EXPECT(0xb902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb900));
        EXPECT(0xe2, gbc.readMem(0xb901));
        // CB E2 00DF
        gbc.setState(0xe953, 0x3b7a, 0x3970, 0xb0aa, 0x9cff, 0x8c71, 0x0, 0x0);
        gbc.writeMem(0xe953, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3b7a, gbc.sp());
        EXPECT(0xe955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe953));
        EXPECT(0xe2, gbc.readMem(0xe954));
        // CB E2 00E0
        gbc.setState(0x3196, 0xe0a2, 0xf190, 0x8f81, 0xb8ae, 0x305b, 0x0, 0x0);
        gbc.writeMem(0x3196, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe0a2, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00E1
        gbc.setState(0xc7aa, 0x788e, 0x66a0, 0x4f9a, 0xe8cb, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0xc7aa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0xc7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7aa));
        EXPECT(0xe2, gbc.readMem(0xc7ab));
        // CB E2 00E2
        gbc.setState(0x59d1, 0x70fb, 0xbb70, 0xeefe, 0xc852, 0x47c2, 0x1, 0x0);
        gbc.writeMem(0x59d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x70fb, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00E3
        gbc.setState(0xe5b5, 0xe1ce, 0x62f0, 0x6e5b, 0x44b7, 0xcc3e, 0x1, 0x0);
        gbc.writeMem(0xe5b5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe1ce, gbc.sp());
        EXPECT(0xe5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b5));
        EXPECT(0xe2, gbc.readMem(0xe5b6));
        // CB E2 00E4
        gbc.setState(0xd3a6, 0xa5ae, 0xb9a0, 0xc22c, 0x7865, 0x5c6f, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa5ae, gbc.sp());
        EXPECT(0xd3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a6));
        EXPECT(0xe2, gbc.readMem(0xd3a7));
        // CB E2 00E5
        gbc.setState(0x9a12, 0xa197, 0x24d0, 0x54b4, 0x962a, 0x2159, 0x1, 0x0);
        gbc.writeMem(0x9a12, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa197, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a12));
        EXPECT(0xe2, gbc.readMem(0x9a13));
        // CB E2 00E6
        gbc.setState(0xa44c, 0xe11, 0xa0b0, 0x5e85, 0x12ef, 0xad0e, 0x0, 0x1);
        gbc.writeMem(0xa44c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe11, gbc.sp());
        EXPECT(0xa44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44c));
        EXPECT(0xe2, gbc.readMem(0xa44d));
        // CB E2 00E7
        gbc.setState(0x15ad, 0x547f, 0x2af0, 0x4842, 0x841, 0x51dd, 0x1, 0x0);
        gbc.writeMem(0x15ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x547f, gbc.sp());
        EXPECT(0x15af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00E8
        gbc.setState(0x72ad, 0x2640, 0x5b40, 0x1826, 0xa628, 0x1ad5, 0x0, 0x0);
        gbc.writeMem(0x72ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2640, gbc.sp());
        EXPECT(0x72af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00E9
        gbc.setState(0x1361, 0xb54f, 0xed0, 0x719e, 0x62ef, 0xdd54, 0x0, 0x1);
        gbc.writeMem(0x1361, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0x1363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00EA
        gbc.setState(0x48eb, 0x1d4a, 0xb570, 0x1c33, 0xc5c6, 0x3117, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1d4a, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00EB
        gbc.setState(0x12be, 0xc9c7, 0xe790, 0xdada, 0xdad2, 0x852c, 0x0, 0x0);
        gbc.writeMem(0x12be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00ED
        gbc.setState(0x8b93, 0x8db8, 0xdcc0, 0x2f5e, 0x2ed2, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x8b93, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b93));
        EXPECT(0xe2, gbc.readMem(0x8b94));
        // CB E2 00EE
        gbc.setState(0x7f6f, 0x2a6, 0x16a0, 0x59d, 0xae50, 0xc233, 0x1, 0x0);
        gbc.writeMem(0x7f6f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2a6, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00F0
        gbc.setState(0xad20, 0xd1c4, 0xd220, 0x87a7, 0x6f06, 0x7363, 0x0, 0x1);
        gbc.writeMem(0xad20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0xad22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad20));
        EXPECT(0xe2, gbc.readMem(0xad21));
        // CB E2 00F1
        gbc.setState(0xd896, 0xa48a, 0xe230, 0xf49f, 0x7378, 0xcbc0, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa48a, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd896));
        EXPECT(0xe2, gbc.readMem(0xd897));
        // CB E2 00F2
        gbc.setState(0x8f54, 0xc3dc, 0x1c30, 0x43f0, 0x5de2, 0x76a5, 0x0, 0x0);
        gbc.writeMem(0x8f54, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x8f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f54));
        EXPECT(0xe2, gbc.readMem(0x8f55));
        // CB E2 00F3
        gbc.setState(0x3b30, 0xf3d0, 0x7a80, 0x36eb, 0x620b, 0xc7bb, 0x0, 0x0);
        gbc.writeMem(0x3b30, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf3d0, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00F4
        gbc.setState(0x1337, 0x3e11, 0x1b50, 0x2237, 0xac03, 0x80af, 0x1, 0x1);
        gbc.writeMem(0x1337, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x1339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00F5
        gbc.setState(0x5410, 0x4807, 0x3a40, 0x6429, 0x457c, 0x2b8d, 0x1, 0x0);
        gbc.writeMem(0x5410, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4807, gbc.sp());
        EXPECT(0x5412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 00F6
        gbc.setState(0xd384, 0x9684, 0xc540, 0x6b7f, 0xcd09, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9684, gbc.sp());
        EXPECT(0xd386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd384));
        EXPECT(0xe2, gbc.readMem(0xd385));
        // CB E2 00F8
        gbc.setState(0x8644, 0xbb66, 0x9710, 0xe44b, 0x52cf, 0xea43, 0x0, 0x1);
        gbc.writeMem(0x8644, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbb66, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8644));
        EXPECT(0xe2, gbc.readMem(0x8645));
        // CB E2 00F9
        gbc.setState(0xc5ea, 0xf564, 0x9b60, 0xdc7a, 0x14fa, 0xe1d3, 0x1, 0x1);
        gbc.writeMem(0xc5ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ea));
        EXPECT(0xe2, gbc.readMem(0xc5eb));
        // CB E2 00FA
        gbc.setState(0xc96f, 0xa825, 0xe980, 0x37d3, 0xc7c2, 0x4400, 0x0, 0x1);
        gbc.writeMem(0xc96f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa825, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0xe2, gbc.readMem(0xc970));
        // CB E2 00FB
        gbc.setState(0xafc7, 0xcd8c, 0xaab0, 0x26ee, 0x1a78, 0x524f, 0x0, 0x1);
        gbc.writeMem(0xafc7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd8c, gbc.sp());
        EXPECT(0xafc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc7));
        EXPECT(0xe2, gbc.readMem(0xafc8));
        // CB E2 00FC
        gbc.setState(0xe899, 0x2fb6, 0xf5a0, 0x81b9, 0x20ba, 0x492f, 0x1, 0x0);
        gbc.writeMem(0xe899, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0xe89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe899));
        EXPECT(0xe2, gbc.readMem(0xe89a));
        // CB E2 00FD
        gbc.setState(0x118d, 0x7ab6, 0x8350, 0x6cb0, 0x179, 0x1318, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7ab6, gbc.sp());
        EXPECT(0x118f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 00FE
        gbc.setState(0xa865, 0x3d1a, 0xcbc0, 0x6989, 0x8b76, 0x246c, 0x0, 0x1);
        gbc.writeMem(0xa865, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa865));
        EXPECT(0xe2, gbc.readMem(0xa866));
        // CB E2 00FF
        gbc.setState(0xeaa6, 0x39de, 0x83b0, 0x718c, 0xb432, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xeaa6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x39de, gbc.sp());
        EXPECT(0xeaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa6));
        EXPECT(0xe2, gbc.readMem(0xeaa7));
        // CB E2 0100
        gbc.setState(0x5a3f, 0x2755, 0x8ef0, 0x598, 0xedd4, 0x3e99, 0x0, 0x0);
        gbc.writeMem(0x5a3f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2755, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0101
        gbc.setState(0x8dd3, 0xb5e, 0xbfe0, 0xdfd6, 0xd040, 0xa612, 0x1, 0x0);
        gbc.writeMem(0x8dd3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0x8dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd3));
        EXPECT(0xe2, gbc.readMem(0x8dd4));
        // CB E2 0102
        gbc.setState(0x549c, 0xda8f, 0xbb90, 0xd8b8, 0x6a44, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x549c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xda8f, gbc.sp());
        EXPECT(0x549e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0103
        gbc.setState(0x84b9, 0x3bd4, 0xa820, 0xe27c, 0x8ca, 0x93e8, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3bd4, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b9));
        EXPECT(0xe2, gbc.readMem(0x84ba));
        // CB E2 0104
        gbc.setState(0xb338, 0xfd6, 0xa960, 0x1816, 0xf61f, 0x1fd4, 0x0, 0x1);
        gbc.writeMem(0xb338, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb338));
        EXPECT(0xe2, gbc.readMem(0xb339));
        // CB E2 0105
        gbc.setState(0xcf86, 0x7e25, 0xce40, 0x6d76, 0x8747, 0x168d, 0x0, 0x0);
        gbc.writeMem(0xcf86, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0xcf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf86));
        EXPECT(0xe2, gbc.readMem(0xcf87));
        // CB E2 0106
        gbc.setState(0x8c1a, 0xc7a4, 0x67e0, 0x57d8, 0x7d71, 0xba19, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc7a4, gbc.sp());
        EXPECT(0x8c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1a));
        EXPECT(0xe2, gbc.readMem(0x8c1b));
        // CB E2 0107
        gbc.setState(0x2735, 0x8c0, 0x93e0, 0x8984, 0x6a26, 0x51f3, 0x1, 0x1);
        gbc.writeMem(0x2735, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8c0, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0108
        gbc.setState(0x5c48, 0x82e1, 0x85f0, 0x4b73, 0xad78, 0x4931, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0109
        gbc.setState(0x8efb, 0xa4cb, 0x8420, 0x3890, 0xbe69, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x8efb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa4cb, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0xe2, gbc.readMem(0x8efc));
        // CB E2 010A
        gbc.setState(0x7e58, 0x7bf2, 0xd130, 0x6931, 0x35d1, 0xda0b, 0x1, 0x0);
        gbc.writeMem(0x7e58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0x7e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 010B
        gbc.setState(0xb261, 0xf0e7, 0xd590, 0x5e4f, 0x42cd, 0x7df9, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0xe2, gbc.readMem(0xb262));
        // CB E2 010C
        gbc.setState(0xef87, 0x6f85, 0xd350, 0x4d3e, 0x8c40, 0x3dab, 0x0, 0x0);
        gbc.writeMem(0xef87, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f85, gbc.sp());
        EXPECT(0xef89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef87));
        EXPECT(0xe2, gbc.readMem(0xef88));
        // CB E2 010D
        gbc.setState(0x32bf, 0x1396, 0x1dd0, 0xd499, 0x9416, 0xb802, 0x1, 0x0);
        gbc.writeMem(0x32bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x32c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 010E
        gbc.setState(0xd66a, 0x89ac, 0xb660, 0xf636, 0x3345, 0x2fb4, 0x1, 0x0);
        gbc.writeMem(0xd66a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x89ac, gbc.sp());
        EXPECT(0xd66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66a));
        EXPECT(0xe2, gbc.readMem(0xd66b));
        // CB E2 010F
        gbc.setState(0x61e6, 0xb4c5, 0xff30, 0xa4be, 0x6ae0, 0xf9d3, 0x0, 0x0);
        gbc.writeMem(0x61e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0110
        gbc.setState(0x2ee7, 0xe513, 0xa1e0, 0xa3d8, 0x3930, 0xf66, 0x0, 0x0);
        gbc.writeMem(0x2ee7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0111
        gbc.setState(0xcb8a, 0xd2b2, 0x7d90, 0xcff8, 0x1f70, 0xf6c5, 0x1, 0x0);
        gbc.writeMem(0xcb8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd2b2, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0xe2, gbc.readMem(0xcb8b));
        // CB E2 0112
        gbc.setState(0x8124, 0x727f, 0x73e0, 0xd3e6, 0xcffd, 0xa94a, 0x1, 0x0);
        gbc.writeMem(0x8124, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x727f, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8124));
        EXPECT(0xe2, gbc.readMem(0x8125));
        // CB E2 0113
        gbc.setState(0x970f, 0x4816, 0x9af0, 0xba54, 0xecb8, 0x48e1, 0x1, 0x1);
        gbc.writeMem(0x970f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4816, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970f));
        EXPECT(0xe2, gbc.readMem(0x9710));
        // CB E2 0114
        gbc.setState(0xc326, 0x1a3e, 0x8a90, 0xd1ec, 0x7d4f, 0x88b9, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1a3e, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0xe2, gbc.readMem(0xc327));
        // CB E2 0115
        gbc.setState(0xaee7, 0x447d, 0x1f90, 0x2e06, 0xf0fc, 0x86ab, 0x0, 0x1);
        gbc.writeMem(0xaee7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0xe2, gbc.readMem(0xaee8));
        // CB E2 0116
        gbc.setState(0xe4bd, 0xe76c, 0x4640, 0x7ff2, 0x9d74, 0x3183, 0x1, 0x0);
        gbc.writeMem(0xe4bd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe76c, gbc.sp());
        EXPECT(0xe4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bd));
        EXPECT(0xe2, gbc.readMem(0xe4be));
        // CB E2 0117
        gbc.setState(0x8b14, 0x785a, 0xcd40, 0x5f6, 0xbd49, 0xb4b6, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b14));
        EXPECT(0xe2, gbc.readMem(0x8b15));
        // CB E2 0118
        gbc.setState(0xd3f7, 0x524, 0x17f0, 0x75be, 0xd2b0, 0x278d, 0x0, 0x1);
        gbc.writeMem(0xd3f7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x524, gbc.sp());
        EXPECT(0xd3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f7));
        EXPECT(0xe2, gbc.readMem(0xd3f8));
        // CB E2 0119
        gbc.setState(0x2b1, 0x272a, 0xe9b0, 0xcd4c, 0x4959, 0x57ed, 0x1, 0x1);
        gbc.writeMem(0x2b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0x2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 011A
        gbc.setState(0x368a, 0x3137, 0x8f90, 0x2128, 0x1863, 0x9b04, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 011B
        gbc.setState(0x7825, 0xdace, 0x2e60, 0x901e, 0x5b6e, 0xfdba, 0x0, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 011C
        gbc.setState(0xbf6d, 0x3001, 0xdec0, 0xe82, 0x7a3c, 0xdf9d, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3001, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6d));
        EXPECT(0xe2, gbc.readMem(0xbf6e));
        // CB E2 011D
        gbc.setState(0xccf7, 0xfaa8, 0x9b20, 0x5f87, 0xd0b8, 0x1cc8, 0x1, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf7));
        EXPECT(0xe2, gbc.readMem(0xccf8));
        // CB E2 011F
        gbc.setState(0xb25c, 0x61e, 0x1960, 0xb6f, 0x34da, 0x45d5, 0x0, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x61e, gbc.sp());
        EXPECT(0xb25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25c));
        EXPECT(0xe2, gbc.readMem(0xb25d));
        // CB E2 0120
        gbc.setState(0x4692, 0x75ed, 0xf570, 0x4523, 0x4936, 0xe6d7, 0x1, 0x1);
        gbc.writeMem(0x4692, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x75ed, gbc.sp());
        EXPECT(0x4694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0121
        gbc.setState(0xedf0, 0x1030, 0x3820, 0x9830, 0x3167, 0x37c9, 0x1, 0x0);
        gbc.writeMem(0xedf0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1030, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf0));
        EXPECT(0xe2, gbc.readMem(0xedf1));
        // CB E2 0122
        gbc.setState(0x202a, 0x99de, 0x7a10, 0xb0e8, 0xc6fc, 0xb652, 0x1, 0x0);
        gbc.writeMem(0x202a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0123
        gbc.setState(0x5f04, 0xc3ae, 0x2330, 0x3fc1, 0x7eca, 0x56b5, 0x1, 0x1);
        gbc.writeMem(0x5f04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc3ae, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0124
        gbc.setState(0x4bf6, 0x22a7, 0x1b50, 0x848d, 0x40fe, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x4bf6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0x4bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0125
        gbc.setState(0x6e37, 0x4fa7, 0xfaa0, 0xf6fa, 0xac48, 0xf22b, 0x0, 0x0);
        gbc.writeMem(0x6e37, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4fa7, gbc.sp());
        EXPECT(0x6e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0126
        gbc.setState(0x32e4, 0xa305, 0x68f0, 0x85a7, 0xb519, 0x1b, 0x0, 0x1);
        gbc.writeMem(0x32e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0127
        gbc.setState(0x5e51, 0xcbc9, 0xdbf0, 0x841a, 0x71db, 0xcb3a, 0x1, 0x1);
        gbc.writeMem(0x5e51, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0x5e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0128
        gbc.setState(0x711d, 0xe02d, 0x1b80, 0x9929, 0xce61, 0xf6d4, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe02d, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0129
        gbc.setState(0x24a8, 0xa6be, 0x56d0, 0x6249, 0x192e, 0xaebc, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa6be, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 012B
        gbc.setState(0xd1a, 0x4f03, 0xfc90, 0x431a, 0xfde4, 0xbb9d, 0x1, 0x1);
        gbc.writeMem(0xd1a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4f03, gbc.sp());
        EXPECT(0xd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 012C
        gbc.setState(0xa43d, 0xf129, 0x3780, 0xc841, 0xa7d1, 0xb19b, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf129, gbc.sp());
        EXPECT(0xa43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43d));
        EXPECT(0xe2, gbc.readMem(0xa43e));
        // CB E2 012D
        gbc.setState(0x69ca, 0x3b89, 0xb160, 0xe1ee, 0xdd9a, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0x69ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 012E
        gbc.setState(0x45e4, 0xe87c, 0x35c0, 0x46b8, 0x4453, 0xa88d, 0x1, 0x0);
        gbc.writeMem(0x45e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 012F
        gbc.setState(0xc523, 0x2075, 0x84d0, 0x3c4c, 0xc5d, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xc523, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0xc525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc523));
        EXPECT(0xe2, gbc.readMem(0xc524));
        // CB E2 0130
        gbc.setState(0x3bbf, 0x8ec7, 0x4470, 0x8baf, 0xaf5e, 0x9156, 0x0, 0x0);
        gbc.writeMem(0x3bbf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8ec7, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0132
        gbc.setState(0x4eff, 0x9781, 0xf000, 0xa229, 0x24fc, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0x4eff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9781, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0134
        gbc.setState(0x16dc, 0x125, 0x97f0, 0x350e, 0x5aa, 0x51ac, 0x0, 0x1);
        gbc.writeMem(0x16dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0135
        gbc.setState(0x62e0, 0x6080, 0xd7c0, 0x5dea, 0x97c6, 0x1223, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x62e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0136
        gbc.setState(0x2022, 0x1f4a, 0x8730, 0x5b58, 0xfc83, 0xbe60, 0x0, 0x0);
        gbc.writeMem(0x2022, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1f4a, gbc.sp());
        EXPECT(0x2024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0137
        gbc.setState(0x1dc4, 0xfaa6, 0x58d0, 0x5400, 0x5251, 0xf66c, 0x0, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfaa6, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0138
        gbc.setState(0xd608, 0xf297, 0x91a0, 0x9852, 0x8268, 0x5941, 0x1, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf297, gbc.sp());
        EXPECT(0xd60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd608));
        EXPECT(0xe2, gbc.readMem(0xd609));
        // CB E2 0139
        gbc.setState(0x49cd, 0x1f5e, 0x4a40, 0xcd5f, 0x8c98, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0x49cd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1f5e, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 013A
        gbc.setState(0x7371, 0xc75a, 0x6760, 0xdf39, 0x9c76, 0x98e6, 0x0, 0x0);
        gbc.writeMem(0x7371, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0x7373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 013B
        gbc.setState(0x6a92, 0x1c01, 0x6e60, 0xf47b, 0xfe65, 0x25a8, 0x1, 0x0);
        gbc.writeMem(0x6a92, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 013C
        gbc.setState(0x1019, 0x33c8, 0xf420, 0x3c3a, 0x63ee, 0xb068, 0x0, 0x1);
        gbc.writeMem(0x1019, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 013D
        gbc.setState(0x9f87, 0xf8af, 0x92a0, 0x18c6, 0x326b, 0x9ed7, 0x1, 0x1);
        gbc.writeMem(0x9f87, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0x9f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f87));
        EXPECT(0xe2, gbc.readMem(0x9f88));
        // CB E2 013E
        gbc.setState(0xa892, 0x92e4, 0x2c50, 0x6c31, 0xeade, 0x4a81, 0x0, 0x1);
        gbc.writeMem(0xa892, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x92e4, gbc.sp());
        EXPECT(0xa894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa892));
        EXPECT(0xe2, gbc.readMem(0xa893));
        // CB E2 013F
        gbc.setState(0x7e95, 0x3197, 0x9250, 0xdd7b, 0xc2aa, 0xaf7b, 0x0, 0x0);
        gbc.writeMem(0x7e95, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3197, gbc.sp());
        EXPECT(0x7e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0140
        gbc.setState(0xa2af, 0xd26e, 0x550, 0x4b59, 0xe2b9, 0xe071, 0x1, 0x1);
        gbc.writeMem(0xa2af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd26e, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2af));
        EXPECT(0xe2, gbc.readMem(0xa2b0));
        // CB E2 0141
        gbc.setState(0x3ca2, 0x940b, 0x11c0, 0xd8e0, 0x130f, 0xb67d, 0x1, 0x0);
        gbc.writeMem(0x3ca2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x3ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0142
        gbc.setState(0x20e3, 0xa422, 0xf320, 0x12c8, 0x20ff, 0x33be, 0x0, 0x1);
        gbc.writeMem(0x20e3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa422, gbc.sp());
        EXPECT(0x20e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0143
        gbc.setState(0xb2d, 0xe84a, 0x3f10, 0x5e5e, 0xa844, 0x7a03, 0x1, 0x0);
        gbc.writeMem(0xb2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe84a, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0145
        gbc.setState(0xeccd, 0x669c, 0x8eb0, 0x7123, 0x2ca0, 0xedaf, 0x0, 0x1);
        gbc.writeMem(0xeccd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x669c, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccd));
        EXPECT(0xe2, gbc.readMem(0xecce));
        // CB E2 0146
        gbc.setState(0x7ac3, 0x731e, 0x15d0, 0xb3fe, 0x6ca5, 0x3566, 0x1, 0x1);
        gbc.writeMem(0x7ac3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0147
        gbc.setState(0x6137, 0xdd32, 0x6c30, 0xb98f, 0x383, 0x4680, 0x1, 0x1);
        gbc.writeMem(0x6137, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd32, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0148
        gbc.setState(0x8189, 0xd766, 0xb620, 0x4f0b, 0x26bf, 0x7f36, 0x0, 0x1);
        gbc.writeMem(0x8189, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd766, gbc.sp());
        EXPECT(0x818b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8189));
        EXPECT(0xe2, gbc.readMem(0x818a));
        // CB E2 0149
        gbc.setState(0x170a, 0x1b15, 0x96d0, 0x5063, 0x9b74, 0x9973, 0x1, 0x0);
        gbc.writeMem(0x170a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1b15, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 014A
        gbc.setState(0x658, 0x4ed2, 0x6990, 0x247, 0x902b, 0x973, 0x1, 0x1);
        gbc.writeMem(0x658, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4ed2, gbc.sp());
        EXPECT(0x65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 014B
        gbc.setState(0x71af, 0xfa6f, 0xe5e0, 0xf1b, 0x7151, 0x41c9, 0x1, 0x1);
        gbc.writeMem(0x71af, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfa6f, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 014D
        gbc.setState(0xca6d, 0xac80, 0x1be0, 0x6b17, 0x93e3, 0xe106, 0x1, 0x1);
        gbc.writeMem(0xca6d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xac80, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6d));
        EXPECT(0xe2, gbc.readMem(0xca6e));
        // CB E2 014E
        gbc.setState(0x3dcf, 0xb672, 0x2aa0, 0x3b62, 0xce2b, 0x3488, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb672, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 014F
        gbc.setState(0xbdd1, 0xa675, 0xd140, 0xeccf, 0x278a, 0xad01, 0x0, 0x1);
        gbc.writeMem(0xbdd1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0xbdd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd1));
        EXPECT(0xe2, gbc.readMem(0xbdd2));
        // CB E2 0150
        gbc.setState(0x1ae, 0x3583, 0x3e80, 0x16cd, 0x316f, 0xe935, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0151
        gbc.setState(0xb5ec, 0xbb34, 0xca20, 0xd67e, 0xc88e, 0x528, 0x1, 0x1);
        gbc.writeMem(0xb5ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ec));
        EXPECT(0xe2, gbc.readMem(0xb5ed));
        // CB E2 0152
        gbc.setState(0x44cf, 0x715c, 0x6f10, 0x6a5c, 0xa273, 0xac81, 0x1, 0x0);
        gbc.writeMem(0x44cf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x44d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0153
        gbc.setState(0xbb59, 0xf722, 0x9170, 0xddaf, 0x8f71, 0xff90, 0x0, 0x0);
        gbc.writeMem(0xbb59, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0xbb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb59));
        EXPECT(0xe2, gbc.readMem(0xbb5a));
        // CB E2 0154
        gbc.setState(0x7f66, 0x3c78, 0xc100, 0x6ee6, 0x4a83, 0x985c, 0x0, 0x1);
        gbc.writeMem(0x7f66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0x7f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0155
        gbc.setState(0x26b3, 0x1231, 0xdc00, 0x732b, 0x41d6, 0xe551, 0x1, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1231, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0156
        gbc.setState(0x4c2a, 0xa63b, 0x7b10, 0x9cb0, 0x2f2b, 0xf592, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0157
        gbc.setState(0xb9fc, 0x2086, 0xec30, 0x138c, 0xd685, 0xc022, 0x1, 0x0);
        gbc.writeMem(0xb9fc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0xb9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fc));
        EXPECT(0xe2, gbc.readMem(0xb9fd));
        // CB E2 0158
        gbc.setState(0xc791, 0xd1a7, 0x6500, 0x3442, 0x61a2, 0x730f, 0x0, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd1a7, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc791));
        EXPECT(0xe2, gbc.readMem(0xc792));
        // CB E2 0159
        gbc.setState(0x4278, 0x4f85, 0x270, 0xc5ad, 0x6cfb, 0xa9d5, 0x1, 0x0);
        gbc.writeMem(0x4278, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4f85, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 015A
        gbc.setState(0x77e5, 0xc32, 0x5bd0, 0xd80, 0x786, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x77e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0x77e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 015B
        gbc.setState(0x5b26, 0x373e, 0x8730, 0x298e, 0x5f8f, 0x14b2, 0x0, 0x1);
        gbc.writeMem(0x5b26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x373e, gbc.sp());
        EXPECT(0x5b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 015C
        gbc.setState(0x474c, 0xb6e2, 0x9590, 0x3cc1, 0xcc88, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0x474c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb6e2, gbc.sp());
        EXPECT(0x474e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 015D
        gbc.setState(0x6f1e, 0xb516, 0x4a40, 0x2702, 0x290e, 0x2f9a, 0x0, 0x1);
        gbc.writeMem(0x6f1e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb516, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 015E
        gbc.setState(0xe20b, 0xf80, 0x3b50, 0x7940, 0xeefb, 0xea6c, 0x0, 0x1);
        gbc.writeMem(0xe20b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20b));
        EXPECT(0xe2, gbc.readMem(0xe20c));
        // CB E2 015F
        gbc.setState(0xdb3a, 0x963b, 0xb620, 0x9af5, 0xd13a, 0x7271, 0x0, 0x0);
        gbc.writeMem(0xdb3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3a));
        EXPECT(0xe2, gbc.readMem(0xdb3b));
        // CB E2 0160
        gbc.setState(0x4bc, 0x8a11, 0x69b0, 0x9046, 0x7874, 0xc27, 0x0, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0161
        gbc.setState(0xabf6, 0x77f, 0x9720, 0xd836, 0x260a, 0x5764, 0x0, 0x1);
        gbc.writeMem(0xabf6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x77f, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf6));
        EXPECT(0xe2, gbc.readMem(0xabf7));
        // CB E2 0162
        gbc.setState(0x8ac8, 0x14ef, 0xf5c0, 0x7e00, 0xd774, 0xbb43, 0x1, 0x1);
        gbc.writeMem(0x8ac8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x14ef, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0xe2, gbc.readMem(0x8ac9));
        // CB E2 0163
        gbc.setState(0xba17, 0x2e16, 0x8410, 0x9f15, 0xac3, 0x6688, 0x0, 0x1);
        gbc.writeMem(0xba17, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0xba19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba17));
        EXPECT(0xe2, gbc.readMem(0xba18));
        // CB E2 0164
        gbc.setState(0x1a19, 0x51d8, 0x71c0, 0xd202, 0x39a6, 0xe088, 0x0, 0x1);
        gbc.writeMem(0x1a19, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x51d8, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0165
        gbc.setState(0xe041, 0x64e8, 0xde50, 0xccf4, 0x2c61, 0x50bf, 0x1, 0x0);
        gbc.writeMem(0xe041, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x64e8, gbc.sp());
        EXPECT(0xe043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe041));
        EXPECT(0xe2, gbc.readMem(0xe042));
        // CB E2 0166
        gbc.setState(0xa4a0, 0x14db, 0x1810, 0x9ed6, 0xb52a, 0x2109, 0x1, 0x0);
        gbc.writeMem(0xa4a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x14db, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0xe2, gbc.readMem(0xa4a1));
        // CB E2 0167
        gbc.setState(0xbd64, 0x8b06, 0x2d20, 0xeb16, 0x5d0a, 0x59a7, 0x1, 0x0);
        gbc.writeMem(0xbd64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0xe2, gbc.readMem(0xbd65));
        // CB E2 0168
        gbc.setState(0x81bb, 0x1db8, 0xae60, 0x1daa, 0x9fa7, 0x8694, 0x0, 0x1);
        gbc.writeMem(0x81bb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1db8, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bb));
        EXPECT(0xe2, gbc.readMem(0x81bc));
        // CB E2 0169
        gbc.setState(0xa7f9, 0xb8db, 0xbe10, 0xcdf9, 0x4b8f, 0x902c, 0x0, 0x1);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8db, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f9));
        EXPECT(0xe2, gbc.readMem(0xa7fa));
        // CB E2 016A
        gbc.setState(0xd255, 0x7ccd, 0xae40, 0xf829, 0xfe5c, 0xe539, 0x0, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7ccd, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0xe2, gbc.readMem(0xd256));
        // CB E2 016B
        gbc.setState(0xc9ca, 0x2aa9, 0xd4b0, 0x70ed, 0x8d33, 0x6bd6, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2aa9, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0xe2, gbc.readMem(0xc9cb));
        // CB E2 016C
        gbc.setState(0x929, 0x88a7, 0x7c00, 0xb36c, 0xfde3, 0xd7d8, 0x1, 0x0);
        gbc.writeMem(0x929, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x88a7, gbc.sp());
        EXPECT(0x92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 016D
        gbc.setState(0x1656, 0xcdc1, 0xf6c0, 0x75f5, 0xb2a8, 0x31a3, 0x1, 0x1);
        gbc.writeMem(0x1656, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x1658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 016E
        gbc.setState(0x46d2, 0xd7e5, 0x2910, 0xc773, 0x1676, 0x7981, 0x0, 0x0);
        gbc.writeMem(0x46d2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd7e5, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 016F
        gbc.setState(0x1237, 0x91ef, 0xae60, 0xbf4c, 0xb97e, 0x9e5d, 0x0, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0171
        gbc.setState(0x8dfa, 0x6838, 0xc2b0, 0x6b28, 0xff4, 0xf691, 0x0, 0x0);
        gbc.writeMem(0x8dfa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6838, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfa));
        EXPECT(0xe2, gbc.readMem(0x8dfb));
        // CB E2 0172
        gbc.setState(0xb492, 0xb321, 0x6500, 0xd820, 0x93fa, 0xfcd2, 0x1, 0x1);
        gbc.writeMem(0xb492, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb321, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb492));
        EXPECT(0xe2, gbc.readMem(0xb493));
        // CB E2 0173
        gbc.setState(0x3ed9, 0xf4c0, 0xfab0, 0xf36f, 0xf8af, 0x373, 0x0, 0x0);
        gbc.writeMem(0x3ed9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf4c0, gbc.sp());
        EXPECT(0x3edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0174
        gbc.setState(0x9a32, 0x34db, 0x6210, 0x38c, 0xe83, 0xf88d, 0x0, 0x0);
        gbc.writeMem(0x9a32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x34db, gbc.sp());
        EXPECT(0x9a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a32));
        EXPECT(0xe2, gbc.readMem(0x9a33));
        // CB E2 0175
        gbc.setState(0x54b2, 0xf702, 0x5e20, 0xe1ff, 0x301b, 0x439f, 0x0, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0176
        gbc.setState(0x3809, 0x1ef9, 0x3550, 0x39e8, 0xd2f2, 0xca2a, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1ef9, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0177
        gbc.setState(0xe83, 0x5a6a, 0x8370, 0xcc6f, 0x31e, 0xe87d, 0x1, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5a6a, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0178
        gbc.setState(0xcf86, 0xf3ea, 0x1f50, 0x72ee, 0xee82, 0x5d10, 0x1, 0x1);
        gbc.writeMem(0xcf86, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf3ea, gbc.sp());
        EXPECT(0xcf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf86));
        EXPECT(0xe2, gbc.readMem(0xcf87));
        // CB E2 0179
        gbc.setState(0xdf01, 0xaba6, 0xcb40, 0xaf5e, 0x852e, 0x3105, 0x1, 0x0);
        gbc.writeMem(0xdf01, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaba6, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf01));
        EXPECT(0xe2, gbc.readMem(0xdf02));
        // CB E2 017A
        gbc.setState(0x9b14, 0xf916, 0x4df0, 0xf730, 0x2c23, 0xa0c5, 0x1, 0x0);
        gbc.writeMem(0x9b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf916, gbc.sp());
        EXPECT(0x9b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b14));
        EXPECT(0xe2, gbc.readMem(0x9b15));
        // CB E2 017B
        gbc.setState(0x1842, 0x855e, 0xe50, 0x2a44, 0x1fb1, 0x2944, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x855e, gbc.sp());
        EXPECT(0x1844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 017C
        gbc.setState(0xcaf8, 0x8ad9, 0xab10, 0xa64f, 0xbbf7, 0x9a7d, 0x0, 0x0);
        gbc.writeMem(0xcaf8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0xcafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf8));
        EXPECT(0xe2, gbc.readMem(0xcaf9));
        // CB E2 017D
        gbc.setState(0x9427, 0xa1b1, 0xd2b0, 0x5ec9, 0xb57, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0x9427, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa1b1, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9427));
        EXPECT(0xe2, gbc.readMem(0x9428));
        // CB E2 017E
        gbc.setState(0x946b, 0x4f2d, 0x82b0, 0xf5a0, 0xda18, 0x26bf, 0x1, 0x1);
        gbc.writeMem(0x946b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4f2d, gbc.sp());
        EXPECT(0x946d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946b));
        EXPECT(0xe2, gbc.readMem(0x946c));
        // CB E2 017F
        gbc.setState(0x624a, 0xe936, 0x8e40, 0x7411, 0x9bc4, 0xe0ac, 0x0, 0x1);
        gbc.writeMem(0x624a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0180
        gbc.setState(0x3c27, 0xe81a, 0x1b0, 0x7003, 0xc7c2, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0x3c27, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0x3c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0181
        gbc.setState(0x5882, 0xe0d4, 0xb250, 0x7cc9, 0xa02d, 0x3993, 0x0, 0x1);
        gbc.writeMem(0x5882, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0182
        gbc.setState(0x251b, 0xa23, 0xa370, 0x8040, 0x1cb0, 0x9162, 0x1, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa23, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0183
        gbc.setState(0x5d81, 0xcae3, 0x3100, 0x6b26, 0xf1b1, 0x843d, 0x0, 0x0);
        gbc.writeMem(0x5d81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcae3, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0184
        gbc.setState(0x84c0, 0x9195, 0xdda0, 0x4038, 0xdcfc, 0xed73, 0x1, 0x1);
        gbc.writeMem(0x84c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9195, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c0));
        EXPECT(0xe2, gbc.readMem(0x84c1));
        // CB E2 0185
        gbc.setState(0x54d8, 0xe06b, 0x5340, 0x1410, 0xbf92, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe06b, gbc.sp());
        EXPECT(0x54da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0186
        gbc.setState(0x9ece, 0xc18c, 0x1e30, 0xa34d, 0x8a42, 0x2950, 0x1, 0x1);
        gbc.writeMem(0x9ece, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0x9ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ece));
        EXPECT(0xe2, gbc.readMem(0x9ecf));
        // CB E2 0187
        gbc.setState(0x693d, 0x197, 0xcc20, 0xbb8a, 0x9d5e, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x693d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0188
        gbc.setState(0x26b, 0x7063, 0xeb70, 0xb64c, 0xd415, 0x924e, 0x0, 0x0);
        gbc.writeMem(0x26b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7063, gbc.sp());
        EXPECT(0x26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0189
        gbc.setState(0x9ca7, 0x5357, 0xb6d0, 0xac28, 0xac2d, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x9ca7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5357, gbc.sp());
        EXPECT(0x9ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca7));
        EXPECT(0xe2, gbc.readMem(0x9ca8));
        // CB E2 018A
        gbc.setState(0xac0e, 0x57fe, 0xf9d0, 0x3bbc, 0x8419, 0x2ff2, 0x1, 0x1);
        gbc.writeMem(0xac0e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x57fe, gbc.sp());
        EXPECT(0xac10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0e));
        EXPECT(0xe2, gbc.readMem(0xac0f));
        // CB E2 018B
        gbc.setState(0x6a00, 0xf220, 0xfa00, 0x679d, 0x50e7, 0x4db5, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf220, gbc.sp());
        EXPECT(0x6a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 018C
        gbc.setState(0x2fe8, 0xac53, 0x4070, 0x4e2a, 0xf1b, 0x2cfd, 0x1, 0x0);
        gbc.writeMem(0x2fe8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xac53, gbc.sp());
        EXPECT(0x2fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 018D
        gbc.setState(0xb40c, 0x7546, 0x3550, 0x1ad8, 0x3d96, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0xb40c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40c));
        EXPECT(0xe2, gbc.readMem(0xb40d));
        // CB E2 018E
        gbc.setState(0xe91b, 0x268, 0x3420, 0x2cff, 0x7c18, 0x4720, 0x1, 0x0);
        gbc.writeMem(0xe91b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x268, gbc.sp());
        EXPECT(0xe91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91b));
        EXPECT(0xe2, gbc.readMem(0xe91c));
        // CB E2 018F
        gbc.setState(0x74c5, 0x860c, 0x1870, 0xcf9f, 0x6b60, 0x5fa0, 0x0, 0x1);
        gbc.writeMem(0x74c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x860c, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0190
        gbc.setState(0x7bbc, 0x772, 0x1c00, 0xb324, 0x7d4f, 0xd930, 0x0, 0x1);
        gbc.writeMem(0x7bbc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x772, gbc.sp());
        EXPECT(0x7bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0191
        gbc.setState(0x1d42, 0x8555, 0xffd0, 0x3334, 0x3354, 0x1bf4, 0x0, 0x1);
        gbc.writeMem(0x1d42, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8555, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0193
        gbc.setState(0xe1d1, 0x3042, 0xf310, 0x6ad7, 0x3276, 0x6601, 0x0, 0x1);
        gbc.writeMem(0xe1d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0xe1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d1));
        EXPECT(0xe2, gbc.readMem(0xe1d2));
        // CB E2 0194
        gbc.setState(0x250c, 0x919c, 0x1e30, 0xa694, 0x4b4a, 0x7c13, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0x250e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0195
        gbc.setState(0xe21, 0x8952, 0x1b50, 0xdd5f, 0x6f9e, 0xee62, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0196
        gbc.setState(0x30d, 0x3e0a, 0xcc50, 0xfb23, 0xf4e3, 0xc820, 0x0, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0198
        gbc.setState(0x9704, 0x99c2, 0x2f40, 0x3e47, 0x3c55, 0x19b5, 0x0, 0x0);
        gbc.writeMem(0x9704, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x99c2, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9704));
        EXPECT(0xe2, gbc.readMem(0x9705));
        // CB E2 0199
        gbc.setState(0x5010, 0x6d65, 0xa5d0, 0x5358, 0x416b, 0x38e0, 0x0, 0x0);
        gbc.writeMem(0x5010, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0x5012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 019A
        gbc.setState(0xab88, 0xed77, 0xc7f0, 0x77e8, 0xa9d6, 0x9540, 0x1, 0x1);
        gbc.writeMem(0xab88, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xed77, gbc.sp());
        EXPECT(0xab8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab88));
        EXPECT(0xe2, gbc.readMem(0xab89));
        // CB E2 019B
        gbc.setState(0x886f, 0xb048, 0x3140, 0xea8a, 0xb219, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb048, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886f));
        EXPECT(0xe2, gbc.readMem(0x8870));
        // CB E2 019C
        gbc.setState(0x92ee, 0xd357, 0x3320, 0x67ff, 0x480f, 0xb354, 0x1, 0x1);
        gbc.writeMem(0x92ee, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd357, gbc.sp());
        EXPECT(0x92f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ee));
        EXPECT(0xe2, gbc.readMem(0x92ef));
        // CB E2 019D
        gbc.setState(0x8357, 0x5537, 0xba0, 0x2f6, 0xeada, 0x7d8b, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x8359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8357));
        EXPECT(0xe2, gbc.readMem(0x8358));
        // CB E2 019E
        gbc.setState(0x5cda, 0x4e55, 0x510, 0xa1fc, 0x60d6, 0x4989, 0x1, 0x1);
        gbc.writeMem(0x5cda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4e55, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 019F
        gbc.setState(0xd009, 0xf55a, 0x9b80, 0x83fa, 0x35c5, 0xcea3, 0x1, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0xe2, gbc.readMem(0xd00a));
        // CB E2 01A0
        gbc.setState(0x298b, 0x81eb, 0xd430, 0x92a1, 0xb24a, 0xfdc, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01A1
        gbc.setState(0x377b, 0xf832, 0x10b0, 0x63d3, 0xf50, 0x17a, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf832, gbc.sp());
        EXPECT(0x377d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01A2
        gbc.setState(0xefd9, 0x14a3, 0xffd0, 0x2c5b, 0xf795, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x14a3, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd9));
        EXPECT(0xe2, gbc.readMem(0xefda));
        // CB E2 01A3
        gbc.setState(0x5a58, 0x434d, 0x7c30, 0x97a6, 0xda05, 0x39a3, 0x0, 0x0);
        gbc.writeMem(0x5a58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x5a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01A4
        gbc.setState(0xeedf, 0xed25, 0x6c0, 0xbab4, 0xccf4, 0x8077, 0x0, 0x0);
        gbc.writeMem(0xeedf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed25, gbc.sp());
        EXPECT(0xeee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedf));
        EXPECT(0xe2, gbc.readMem(0xeee0));
        // CB E2 01A5
        gbc.setState(0xb885, 0xd5f, 0xb00, 0xfbb1, 0xbf2, 0xf9e6, 0x0, 0x1);
        gbc.writeMem(0xb885, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0xb887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb885));
        EXPECT(0xe2, gbc.readMem(0xb886));
        // CB E2 01A6
        gbc.setState(0xdf04, 0x3b89, 0x6620, 0xea4e, 0x6dd6, 0x368d, 0x0, 0x0);
        gbc.writeMem(0xdf04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf04));
        EXPECT(0xe2, gbc.readMem(0xdf05));
        // CB E2 01A7
        gbc.setState(0x6c4b, 0x6a19, 0x8570, 0x7d61, 0x20d9, 0x221f, 0x1, 0x1);
        gbc.writeMem(0x6c4b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a19, gbc.sp());
        EXPECT(0x6c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01A8
        gbc.setState(0x32ad, 0x4130, 0xd010, 0x6efe, 0x814c, 0xa8, 0x1, 0x0);
        gbc.writeMem(0x32ad, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4130, gbc.sp());
        EXPECT(0x32af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01A9
        gbc.setState(0x20db, 0xa02a, 0x1280, 0xbec4, 0xe83d, 0xd0b, 0x1, 0x1);
        gbc.writeMem(0x20db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0x20dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01AA
        gbc.setState(0x5893, 0x35, 0xab20, 0xedb6, 0xd2a1, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x5893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x35, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01AB
        gbc.setState(0x4886, 0x8834, 0x2590, 0xbfae, 0x6c32, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0x4886, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8834, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01AC
        gbc.setState(0x3d94, 0x964c, 0x8e20, 0xe200, 0xa698, 0xdb50, 0x0, 0x1);
        gbc.writeMem(0x3d94, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x964c, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01AD
        gbc.setState(0xebcf, 0x78a3, 0xe20, 0xc3aa, 0x1110, 0x8b1c, 0x0, 0x1);
        gbc.writeMem(0xebcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x78a3, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcf));
        EXPECT(0xe2, gbc.readMem(0xebd0));
        // CB E2 01AE
        gbc.setState(0x6d58, 0x52ac, 0xa2e0, 0x9302, 0x81bc, 0xbc9e, 0x1, 0x0);
        gbc.writeMem(0x6d58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x6d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01AF
        gbc.setState(0x1ee1, 0x159, 0xc560, 0x5543, 0xf576, 0x2b61, 0x1, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01B0
        gbc.setState(0x479e, 0x9581, 0xede0, 0x764b, 0xdb6f, 0x4b4c, 0x0, 0x0);
        gbc.writeMem(0x479e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9581, gbc.sp());
        EXPECT(0x47a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01B1
        gbc.setState(0xe577, 0xffa3, 0xca10, 0x3a15, 0x94f0, 0xd62b, 0x0, 0x1);
        gbc.writeMem(0xe577, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0xe579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe577));
        EXPECT(0xe2, gbc.readMem(0xe578));
        // CB E2 01B3
        gbc.setState(0xea48, 0x8e, 0xd400, 0xe909, 0xd34e, 0x3fce, 0x1, 0x0);
        gbc.writeMem(0xea48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0xea4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea48));
        EXPECT(0xe2, gbc.readMem(0xea49));
        // CB E2 01B4
        gbc.setState(0x821c, 0x3ea3, 0x19c0, 0xf33, 0x107a, 0x9ebe, 0x0, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0xe2, gbc.readMem(0x821d));
        // CB E2 01B5
        gbc.setState(0x777d, 0xf5dd, 0xb640, 0x7d5d, 0x54e0, 0xd892, 0x1, 0x1);
        gbc.writeMem(0x777d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf5dd, gbc.sp());
        EXPECT(0x777f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01B6
        gbc.setState(0x1b72, 0xff0e, 0xb0a0, 0x3544, 0x4b09, 0xba98, 0x1, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0x1b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01B7
        gbc.setState(0x6fcc, 0xeafe, 0xa890, 0xceed, 0x8810, 0xc771, 0x0, 0x1);
        gbc.writeMem(0x6fcc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01B8
        gbc.setState(0x2967, 0x21cf, 0xf9c0, 0x5e2b, 0xa953, 0xe7ae, 0x0, 0x1);
        gbc.writeMem(0x2967, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x21cf, gbc.sp());
        EXPECT(0x2969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01B9
        gbc.setState(0x7d5d, 0x1000, 0x33c0, 0xa1e9, 0x97f1, 0x9626, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1000, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01BA
        gbc.setState(0x49bc, 0xd43e, 0xf920, 0xb0aa, 0x58db, 0x503, 0x0, 0x0);
        gbc.writeMem(0x49bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01BB
        gbc.setState(0xb102, 0xffd7, 0xa920, 0x78b3, 0x5564, 0xd5fe, 0x0, 0x1);
        gbc.writeMem(0xb102, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb102));
        EXPECT(0xe2, gbc.readMem(0xb103));
        // CB E2 01BC
        gbc.setState(0xaa60, 0xde02, 0xc420, 0x3f1d, 0x13d5, 0xcb45, 0x1, 0x1);
        gbc.writeMem(0xaa60, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xde02, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa60));
        EXPECT(0xe2, gbc.readMem(0xaa61));
        // CB E2 01BD
        gbc.setState(0xc7fb, 0x2b4c, 0x7e60, 0x7126, 0x8da0, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2b4c, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0xe2, gbc.readMem(0xc7fc));
        // CB E2 01BE
        gbc.setState(0x46b4, 0xeb88, 0x4e00, 0x48a9, 0xb534, 0x4f02, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01C0
        gbc.setState(0x38b1, 0x8210, 0xdb20, 0x78c4, 0x4828, 0x5e1f, 0x0, 0x1);
        gbc.writeMem(0x38b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8210, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01C1
        gbc.setState(0xb4b0, 0x6df9, 0x8060, 0x5a33, 0x8360, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6df9, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0xe2, gbc.readMem(0xb4b1));
        // CB E2 01C2
        gbc.setState(0x8695, 0xb6b8, 0x6a00, 0x3982, 0x102e, 0xe118, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0x8697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8695));
        EXPECT(0xe2, gbc.readMem(0x8696));
        // CB E2 01C4
        gbc.setState(0x73d3, 0xa86b, 0xb1c0, 0x7a96, 0x2f1b, 0x7274, 0x0, 0x1);
        gbc.writeMem(0x73d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa86b, gbc.sp());
        EXPECT(0x73d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01C5
        gbc.setState(0xa0, 0xe6c1, 0x9570, 0x509, 0x20c2, 0xcbc7, 0x0, 0x1);
        gbc.writeMem(0xa0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe6c1, gbc.sp());
        EXPECT(0xa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01C6
        gbc.setState(0xcd66, 0xc34a, 0x50b0, 0x398c, 0x1c27, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0xcd66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0xcd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd66));
        EXPECT(0xe2, gbc.readMem(0xcd67));
        // CB E2 01C7
        gbc.setState(0x31f, 0x5f6b, 0x6f30, 0xb473, 0xb897, 0x1654, 0x0, 0x1);
        gbc.writeMem(0x31f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0x321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01C8
        gbc.setState(0x8aa0, 0x2e92, 0xe0f0, 0x94fa, 0x3670, 0x289d, 0x1, 0x0);
        gbc.writeMem(0x8aa0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0x8aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa0));
        EXPECT(0xe2, gbc.readMem(0x8aa1));
        // CB E2 01C9
        gbc.setState(0x1115, 0x8bb6, 0xf2b0, 0x5c97, 0x2995, 0xf510, 0x0, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8bb6, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01CA
        gbc.setState(0x5bb4, 0x631, 0x8640, 0xfa67, 0x90d8, 0xed35, 0x0, 0x0);
        gbc.writeMem(0x5bb4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0x5bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01CB
        gbc.setState(0x3c50, 0x1904, 0x3150, 0x5d43, 0x8513, 0xd569, 0x0, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1904, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01CC
        gbc.setState(0x17d3, 0x5d71, 0xaa80, 0xa676, 0x33a2, 0x88b3, 0x0, 0x1);
        gbc.writeMem(0x17d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0x17d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01CD
        gbc.setState(0x13fe, 0x7a67, 0x41a0, 0x4816, 0xb2ea, 0x2771, 0x0, 0x0);
        gbc.writeMem(0x13fe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01CE
        gbc.setState(0x2f09, 0xffc0, 0x3fe0, 0x93c2, 0xca96, 0x50, 0x0, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01CF
        gbc.setState(0x1546, 0x3a56, 0x19e0, 0x9024, 0x3950, 0xea85, 0x0, 0x1);
        gbc.writeMem(0x1546, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3a56, gbc.sp());
        EXPECT(0x1548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01D0
        gbc.setState(0xc19b, 0x61dc, 0x2c70, 0xba2c, 0xd635, 0xfa30, 0x0, 0x1);
        gbc.writeMem(0xc19b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x61dc, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19b));
        EXPECT(0xe2, gbc.readMem(0xc19c));
        // CB E2 01D1
        gbc.setState(0x1d1d, 0x55f7, 0xf830, 0xf7fe, 0x4cb8, 0xa731, 0x0, 0x0);
        gbc.writeMem(0x1d1d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0x1d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01D2
        gbc.setState(0x9520, 0xf555, 0x57a0, 0xd18b, 0xe4e6, 0x6e12, 0x1, 0x1);
        gbc.writeMem(0x9520, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf555, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9520));
        EXPECT(0xe2, gbc.readMem(0x9521));
        // CB E2 01D3
        gbc.setState(0xb64, 0x3447, 0xf9e0, 0xbcd3, 0x48b1, 0x5e06, 0x1, 0x0);
        gbc.writeMem(0xb64, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3447, gbc.sp());
        EXPECT(0xb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01D4
        gbc.setState(0x9340, 0x3d37, 0xc160, 0x3898, 0x413a, 0x377b, 0x1, 0x0);
        gbc.writeMem(0x9340, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9340));
        EXPECT(0xe2, gbc.readMem(0x9341));
        // CB E2 01D5
        gbc.setState(0x874e, 0x5256, 0xf470, 0xd75d, 0x4258, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5256, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874e));
        EXPECT(0xe2, gbc.readMem(0x874f));
        // CB E2 01D6
        gbc.setState(0x258, 0xc41e, 0x2240, 0x5a3c, 0x83a7, 0x8b24, 0x1, 0x1);
        gbc.writeMem(0x258, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc41e, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01D7
        gbc.setState(0xd1a0, 0x3ca9, 0x9710, 0xb4e1, 0xeea2, 0x124b, 0x0, 0x0);
        gbc.writeMem(0xd1a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ca9, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a0));
        EXPECT(0xe2, gbc.readMem(0xd1a1));
        // CB E2 01D8
        gbc.setState(0x9bff, 0x434d, 0x57f0, 0xaab4, 0x4117, 0xab18, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x9c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bff));
        EXPECT(0xe2, gbc.readMem(0x9c00));
        // CB E2 01DA
        gbc.setState(0x990b, 0x2dd1, 0x3fb0, 0x4846, 0xef58, 0x6b3c, 0x0, 0x1);
        gbc.writeMem(0x990b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0x990d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990b));
        EXPECT(0xe2, gbc.readMem(0x990c));
        // CB E2 01DB
        gbc.setState(0x3d6e, 0x5955, 0x9b50, 0x2d8e, 0xd9da, 0x8401, 0x0, 0x0);
        gbc.writeMem(0x3d6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x3d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01DC
        gbc.setState(0xab7, 0xd46f, 0x400, 0x82c3, 0xd255, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0xab7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0xab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01DD
        gbc.setState(0xb359, 0xecff, 0x57b0, 0x119f, 0x9831, 0x8519, 0x1, 0x1);
        gbc.writeMem(0xb359, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0xb35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb359));
        EXPECT(0xe2, gbc.readMem(0xb35a));
        // CB E2 01DE
        gbc.setState(0x261, 0x6e92, 0xba10, 0x59bf, 0x2c09, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x261, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01DF
        gbc.setState(0x7fae, 0x8e16, 0xb240, 0xf411, 0x7a78, 0x7d00, 0x1, 0x0);
        gbc.writeMem(0x7fae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e16, gbc.sp());
        EXPECT(0x7fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01E0
        gbc.setState(0x3291, 0x1654, 0x260, 0xc479, 0x309c, 0xfa3d, 0x1, 0x0);
        gbc.writeMem(0x3291, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1654, gbc.sp());
        EXPECT(0x3293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01E1
        gbc.setState(0xbb81, 0x24b9, 0x66c0, 0xefad, 0x7ae8, 0xa467, 0x1, 0x1);
        gbc.writeMem(0xbb81, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x24b9, gbc.sp());
        EXPECT(0xbb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb81));
        EXPECT(0xe2, gbc.readMem(0xbb82));
        // CB E2 01E2
        gbc.setState(0x9a5d, 0xa3a5, 0x38c0, 0xe361, 0x4909, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa3a5, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0xe2, gbc.readMem(0x9a5e));
        // CB E2 01E3
        gbc.setState(0x4fa4, 0x2887, 0x4e00, 0xe114, 0xb2ec, 0xe8cc, 0x0, 0x1);
        gbc.writeMem(0x4fa4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2887, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01E4
        gbc.setState(0x3660, 0xafb2, 0x4ac0, 0x4393, 0xe821, 0xb32d, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x3662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01E5
        gbc.setState(0x9bc2, 0x6cf6, 0xb9f0, 0x8535, 0x2edc, 0x7d4e, 0x0, 0x0);
        gbc.writeMem(0x9bc2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6cf6, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc2));
        EXPECT(0xe2, gbc.readMem(0x9bc3));
        // CB E2 01E6
        gbc.setState(0xc4d5, 0x15c3, 0xbb00, 0xcb9f, 0x6ed1, 0x3c9c, 0x0, 0x1);
        gbc.writeMem(0xc4d5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d5));
        EXPECT(0xe2, gbc.readMem(0xc4d6));
        // CB E2 01E7
        gbc.setState(0xa306, 0x41f9, 0xccb0, 0xf8d5, 0x15ae, 0xff96, 0x0, 0x0);
        gbc.writeMem(0xa306, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa306));
        EXPECT(0xe2, gbc.readMem(0xa307));
        // CB E2 01E8
        gbc.setState(0x682e, 0x3080, 0x61b0, 0xf151, 0xda12, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0x682e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3080, gbc.sp());
        EXPECT(0x6830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01E9
        gbc.setState(0xacc8, 0xa63b, 0xd30, 0x86d1, 0xdd45, 0xa086, 0x1, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0xacca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc8));
        EXPECT(0xe2, gbc.readMem(0xacc9));
        // CB E2 01EA
        gbc.setState(0x5c56, 0xe832, 0x1f80, 0x1921, 0x819b, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x5c56, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0x5c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01EB
        gbc.setState(0x6483, 0xd012, 0x4640, 0x2cf7, 0x1fcb, 0x7015, 0x0, 0x0);
        gbc.writeMem(0x6483, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x6485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01EC
        gbc.setState(0xc9cf, 0x1649, 0xf720, 0x71d8, 0x6e02, 0x5ca2, 0x1, 0x1);
        gbc.writeMem(0xc9cf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1649, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cf));
        EXPECT(0xe2, gbc.readMem(0xc9d0));
        // CB E2 01ED
        gbc.setState(0xc87b, 0x8137, 0xf0b0, 0xa934, 0x3aa3, 0x327e, 0x1, 0x0);
        gbc.writeMem(0xc87b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8137, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87b));
        EXPECT(0xe2, gbc.readMem(0xc87c));
        // CB E2 01EE
        gbc.setState(0x9d13, 0x542c, 0xa330, 0x8db1, 0xb9cd, 0x61ad, 0x1, 0x0);
        gbc.writeMem(0x9d13, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d13));
        EXPECT(0xe2, gbc.readMem(0x9d14));
        // CB E2 01EF
        gbc.setState(0x84c2, 0x241a, 0x5b70, 0xcb13, 0xc202, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c2));
        EXPECT(0xe2, gbc.readMem(0x84c3));
        // CB E2 01F0
        gbc.setState(0xd2bd, 0x7cfa, 0xd640, 0x7cc8, 0xe097, 0xe6aa, 0x1, 0x0);
        gbc.writeMem(0xd2bd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0xd2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bd));
        EXPECT(0xe2, gbc.readMem(0xd2be));
        // CB E2 01F1
        gbc.setState(0x2941, 0x7176, 0x83e0, 0xa466, 0x966c, 0xb65f, 0x0, 0x0);
        gbc.writeMem(0x2941, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01F2
        gbc.setState(0xb6f3, 0x8b7c, 0xf400, 0x6d38, 0xdbb8, 0x50f7, 0x0, 0x1);
        gbc.writeMem(0xb6f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8b7c, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f3));
        EXPECT(0xe2, gbc.readMem(0xb6f4));
        // CB E2 01F3
        gbc.setState(0x29bf, 0x21ca, 0x1120, 0xf627, 0xb845, 0x70a9, 0x1, 0x0);
        gbc.writeMem(0x29bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01F4
        gbc.setState(0x8dbe, 0xa502, 0x8860, 0xe5c0, 0x8006, 0x38f, 0x0, 0x0);
        gbc.writeMem(0x8dbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbe));
        EXPECT(0xe2, gbc.readMem(0x8dbf));
        // CB E2 01F5
        gbc.setState(0x4424, 0x9d6b, 0xfea0, 0x73ea, 0xcbb9, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01F8
        gbc.setState(0xb25f, 0xf6d7, 0xaa50, 0xe780, 0xd8ae, 0x3eb9, 0x1, 0x0);
        gbc.writeMem(0xb25f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0xb261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25f));
        EXPECT(0xe2, gbc.readMem(0xb260));
        // CB E2 01FA
        gbc.setState(0x7755, 0xc7b0, 0x6880, 0x5112, 0x26f6, 0x1f12, 0x0, 0x0);
        gbc.writeMem(0x7755, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc7b0, gbc.sp());
        EXPECT(0x7757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01FB
        gbc.setState(0x129f, 0xd8a1, 0x540, 0x1c78, 0xbcff, 0x91e8, 0x0, 0x1);
        gbc.writeMem(0x129f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd8a1, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01FC
        gbc.setState(0x1790, 0x18b, 0x93b0, 0xab8a, 0xda28, 0x6c88, 0x0, 0x0);
        gbc.writeMem(0x1790, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x18b, gbc.sp());
        EXPECT(0x1792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 01FD
        gbc.setState(0x50ca, 0x3d7b, 0xd40, 0x5a32, 0x9560, 0x3b68, 0x0, 0x0);
        gbc.writeMem(0x50ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01FE
        gbc.setState(0x3ce0, 0x2ad2, 0x6320, 0xfdd5, 0xdc4e, 0x850, 0x0, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2ad2, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 01FF
        gbc.setState(0x758b, 0xabad, 0x48f0, 0xe937, 0x910d, 0xfea6, 0x0, 0x0);
        gbc.writeMem(0x758b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0201
        gbc.setState(0xe526, 0x2038, 0xd980, 0xd09a, 0xa56c, 0x24df, 0x1, 0x0);
        gbc.writeMem(0xe526, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0xe528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe526));
        EXPECT(0xe2, gbc.readMem(0xe527));
        // CB E2 0202
        gbc.setState(0xa5ce, 0xde49, 0xcdc0, 0xe2a8, 0xb059, 0xd669, 0x0, 0x1);
        gbc.writeMem(0xa5ce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0xa5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ce));
        EXPECT(0xe2, gbc.readMem(0xa5cf));
        // CB E2 0203
        gbc.setState(0x542c, 0x72c, 0x8a20, 0x76de, 0x23ed, 0xd17c, 0x1, 0x1);
        gbc.writeMem(0x542c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0204
        gbc.setState(0x8451, 0x7960, 0x4680, 0x993c, 0x30d, 0x69e5, 0x1, 0x0);
        gbc.writeMem(0x8451, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7960, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0xe2, gbc.readMem(0x8452));
        // CB E2 0206
        gbc.setState(0x5973, 0x9e34, 0xc550, 0x14c5, 0xcd54, 0x9307, 0x1, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0x5975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0207
        gbc.setState(0x49fd, 0x5f73, 0xb60, 0x6bed, 0x9762, 0x4afc, 0x0, 0x1);
        gbc.writeMem(0x49fd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5f73, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0208
        gbc.setState(0x8725, 0xaf81, 0xdbe0, 0x1794, 0xf4d1, 0x1fcc, 0x1, 0x1);
        gbc.writeMem(0x8725, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xaf81, gbc.sp());
        EXPECT(0x8727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8725));
        EXPECT(0xe2, gbc.readMem(0x8726));
        // CB E2 0209
        gbc.setState(0xb75e, 0x5e3b, 0x65a0, 0xb5f6, 0x8a, 0xf874, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e3b, gbc.sp());
        EXPECT(0xb760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75e));
        EXPECT(0xe2, gbc.readMem(0xb75f));
        // CB E2 020A
        gbc.setState(0x1c5c, 0xf4a0, 0xdf00, 0xf, 0x8f49, 0x564, 0x1, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 020C
        gbc.setState(0xd275, 0x783b, 0xec90, 0xe5c7, 0xe579, 0x505e, 0x1, 0x0);
        gbc.writeMem(0xd275, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd275));
        EXPECT(0xe2, gbc.readMem(0xd276));
        // CB E2 020D
        gbc.setState(0xd2fa, 0x9f23, 0xf620, 0x7194, 0xec21, 0xbeba, 0x0, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0xe2, gbc.readMem(0xd2fb));
        // CB E2 020E
        gbc.setState(0x961a, 0x59b6, 0xd140, 0xdb9d, 0xc9e7, 0x32c6, 0x0, 0x1);
        gbc.writeMem(0x961a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x59b6, gbc.sp());
        EXPECT(0x961c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961a));
        EXPECT(0xe2, gbc.readMem(0x961b));
        // CB E2 020F
        gbc.setState(0x24e0, 0xf1cb, 0x6650, 0xb82f, 0x15f0, 0x8cdc, 0x0, 0x0);
        gbc.writeMem(0x24e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf1cb, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0210
        gbc.setState(0x100e, 0x1d1d, 0xaf20, 0x5f71, 0x7ade, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x100e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x1010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0211
        gbc.setState(0xc6b0, 0x2e66, 0x9560, 0x253b, 0x13a7, 0xec68, 0x1, 0x0);
        gbc.writeMem(0xc6b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2e66, gbc.sp());
        EXPECT(0xc6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b0));
        EXPECT(0xe2, gbc.readMem(0xc6b1));
        // CB E2 0213
        gbc.setState(0xe5a1, 0x2581, 0x8d60, 0xc3de, 0x279f, 0x6481, 0x0, 0x0);
        gbc.writeMem(0xe5a1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2581, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0xe2, gbc.readMem(0xe5a2));
        // CB E2 0214
        gbc.setState(0x9b5f, 0x93b5, 0x4710, 0xcd3, 0x61e1, 0xf359, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93b5, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0xe2, gbc.readMem(0x9b60));
        // CB E2 0215
        gbc.setState(0xa49a, 0x9e51, 0xd2c0, 0x24f2, 0x1eb, 0x74fb, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0xa49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49a));
        EXPECT(0xe2, gbc.readMem(0xa49b));
        // CB E2 0216
        gbc.setState(0xd599, 0x8c21, 0x2140, 0xccc9, 0x6974, 0xf8dc, 0x0, 0x1);
        gbc.writeMem(0xd599, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8c21, gbc.sp());
        EXPECT(0xd59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd599));
        EXPECT(0xe2, gbc.readMem(0xd59a));
        // CB E2 0217
        gbc.setState(0xd213, 0xd7bf, 0x59e0, 0xcd28, 0x8409, 0xe5cf, 0x1, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd7bf, gbc.sp());
        EXPECT(0xd215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd213));
        EXPECT(0xe2, gbc.readMem(0xd214));
        // CB E2 0218
        gbc.setState(0x8de9, 0x6c8a, 0x33a0, 0xc253, 0x2420, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0x8de9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0x8deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de9));
        EXPECT(0xe2, gbc.readMem(0x8dea));
        // CB E2 0219
        gbc.setState(0x3d4, 0x380d, 0xa1a0, 0x6975, 0x3b5, 0xaa8a, 0x1, 0x0);
        gbc.writeMem(0x3d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x380d, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 021A
        gbc.setState(0xc791, 0x4520, 0x77e0, 0xc242, 0x214a, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0xc791, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4520, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc791));
        EXPECT(0xe2, gbc.readMem(0xc792));
        // CB E2 021B
        gbc.setState(0xcbbe, 0xb94d, 0x2540, 0x8554, 0x9a5a, 0xebf3, 0x1, 0x1);
        gbc.writeMem(0xcbbe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbe));
        EXPECT(0xe2, gbc.readMem(0xcbbf));
        // CB E2 021D
        gbc.setState(0x68ac, 0x2f5d, 0x8870, 0xd34b, 0xf5d4, 0x7248, 0x1, 0x0);
        gbc.writeMem(0x68ac, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2f5d, gbc.sp());
        EXPECT(0x68ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 021E
        gbc.setState(0xc541, 0x5ae, 0xd5f0, 0xad31, 0x44db, 0xa6f1, 0x0, 0x0);
        gbc.writeMem(0xc541, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0xc543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc541));
        EXPECT(0xe2, gbc.readMem(0xc542));
        // CB E2 021F
        gbc.setState(0x1c92, 0xc62a, 0x48a0, 0xae7b, 0xd988, 0xb3c3, 0x1, 0x1);
        gbc.writeMem(0x1c92, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc62a, gbc.sp());
        EXPECT(0x1c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0220
        gbc.setState(0xdaf7, 0x1e9d, 0x4840, 0xd92f, 0xc6c4, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0xdaf7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e9d, gbc.sp());
        EXPECT(0xdaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf7));
        EXPECT(0xe2, gbc.readMem(0xdaf8));
        // CB E2 0221
        gbc.setState(0x9676, 0xf528, 0x6c40, 0xeb70, 0xd92e, 0x6ad2, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf528, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9676));
        EXPECT(0xe2, gbc.readMem(0x9677));
        // CB E2 0222
        gbc.setState(0xb51a, 0x91e1, 0x78b0, 0x6366, 0x3439, 0x3beb, 0x1, 0x1);
        gbc.writeMem(0xb51a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x91e1, gbc.sp());
        EXPECT(0xb51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51a));
        EXPECT(0xe2, gbc.readMem(0xb51b));
        // CB E2 0223
        gbc.setState(0x801e, 0xd46f, 0xba90, 0x661e, 0xb977, 0xf5c1, 0x1, 0x1);
        gbc.writeMem(0x801e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0x8020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801e));
        EXPECT(0xe2, gbc.readMem(0x801f));
        // CB E2 0224
        gbc.setState(0xd63c, 0xd421, 0x6890, 0xd877, 0xa37a, 0xbb99, 0x0, 0x1);
        gbc.writeMem(0xd63c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63c));
        EXPECT(0xe2, gbc.readMem(0xd63d));
        // CB E2 0225
        gbc.setState(0xb34f, 0x995a, 0x6e90, 0x9481, 0xc4b4, 0x70b8, 0x0, 0x1);
        gbc.writeMem(0xb34f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34f));
        EXPECT(0xe2, gbc.readMem(0xb350));
        // CB E2 0226
        gbc.setState(0x7b54, 0xd804, 0xe680, 0x94db, 0x9662, 0xe97, 0x0, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd804, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0227
        gbc.setState(0xdf7e, 0xc78f, 0x92d0, 0x9663, 0xd0b9, 0xe765, 0x0, 0x1);
        gbc.writeMem(0xdf7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc78f, gbc.sp());
        EXPECT(0xdf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7e));
        EXPECT(0xe2, gbc.readMem(0xdf7f));
        // CB E2 0228
        gbc.setState(0x6b14, 0x94c4, 0x69c0, 0xf17c, 0x1a3c, 0xb1aa, 0x1, 0x1);
        gbc.writeMem(0x6b14, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0229
        gbc.setState(0x586b, 0x6460, 0x4800, 0xf939, 0xea8b, 0xc1fe, 0x0, 0x0);
        gbc.writeMem(0x586b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 022A
        gbc.setState(0xcf0c, 0x37fd, 0x65b0, 0xf74e, 0x5be2, 0xad7, 0x1, 0x1);
        gbc.writeMem(0xcf0c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x37fd, gbc.sp());
        EXPECT(0xcf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0c));
        EXPECT(0xe2, gbc.readMem(0xcf0d));
        // CB E2 022B
        gbc.setState(0xe897, 0x538, 0xafc0, 0x3865, 0xfd89, 0x7194, 0x1, 0x1);
        gbc.writeMem(0xe897, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x538, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe897));
        EXPECT(0xe2, gbc.readMem(0xe898));
        // CB E2 022E
        gbc.setState(0x2e68, 0xe7d, 0x770, 0x50cc, 0xd76, 0x7d01, 0x0, 0x0);
        gbc.writeMem(0x2e68, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 022F
        gbc.setState(0x2185, 0x4f9d, 0x59b0, 0xf06b, 0x8751, 0xe463, 0x1, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0230
        gbc.setState(0xe13e, 0xd8f1, 0x57d0, 0x6d3f, 0x5182, 0x119b, 0x0, 0x0);
        gbc.writeMem(0xe13e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd8f1, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13e));
        EXPECT(0xe2, gbc.readMem(0xe13f));
        // CB E2 0231
        gbc.setState(0x499c, 0x152, 0x1850, 0x2de1, 0xb2c2, 0x12dd, 0x1, 0x0);
        gbc.writeMem(0x499c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x152, gbc.sp());
        EXPECT(0x499e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0232
        gbc.setState(0x69a7, 0xf9cf, 0xc9c0, 0x6b08, 0xa7d9, 0x6056, 0x0, 0x0);
        gbc.writeMem(0x69a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf9cf, gbc.sp());
        EXPECT(0x69a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0233
        gbc.setState(0x63c5, 0x7bd, 0x85f0, 0xe5af, 0x6bd9, 0x9673, 0x1, 0x1);
        gbc.writeMem(0x63c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7bd, gbc.sp());
        EXPECT(0x63c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0234
        gbc.setState(0xe0a8, 0x6989, 0x92b0, 0xd775, 0xdd05, 0xb150, 0x1, 0x1);
        gbc.writeMem(0xe0a8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6989, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a8));
        EXPECT(0xe2, gbc.readMem(0xe0a9));
        // CB E2 0235
        gbc.setState(0xae78, 0xa276, 0x6d10, 0x4855, 0xd411, 0xc959, 0x0, 0x0);
        gbc.writeMem(0xae78, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0xae7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae78));
        EXPECT(0xe2, gbc.readMem(0xae79));
        // CB E2 0236
        gbc.setState(0xc3e5, 0xda69, 0x4770, 0xa7d, 0xb861, 0x5aca, 0x1, 0x1);
        gbc.writeMem(0xc3e5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xda69, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e5));
        EXPECT(0xe2, gbc.readMem(0xc3e6));
        // CB E2 0237
        gbc.setState(0x43cb, 0xfa0c, 0xafe0, 0xea42, 0x9950, 0x3d43, 0x0, 0x0);
        gbc.writeMem(0x43cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0x43cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0238
        gbc.setState(0x7e55, 0xd304, 0x1470, 0xc1e5, 0x77d8, 0xbb44, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd304, gbc.sp());
        EXPECT(0x7e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0239
        gbc.setState(0xd1e6, 0x4e9b, 0x380, 0xd1e2, 0x792e, 0xf6f5, 0x1, 0x0);
        gbc.writeMem(0xd1e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0xd1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e6));
        EXPECT(0xe2, gbc.readMem(0xd1e7));
        // CB E2 023A
        gbc.setState(0xdc50, 0x3317, 0x87e0, 0x739, 0xef3c, 0xd937, 0x0, 0x0);
        gbc.writeMem(0xdc50, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3317, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc50));
        EXPECT(0xe2, gbc.readMem(0xdc51));
        // CB E2 023B
        gbc.setState(0x3cfa, 0xc2b4, 0x89c0, 0xcce5, 0xf7d4, 0xcbaa, 0x1, 0x0);
        gbc.writeMem(0x3cfa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc2b4, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 023C
        gbc.setState(0x18ff, 0x7351, 0xa890, 0xcead, 0xa5, 0x346a, 0x1, 0x0);
        gbc.writeMem(0x18ff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0x1901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 023D
        gbc.setState(0x1deb, 0x59a3, 0x6370, 0x41af, 0x79f6, 0x6613, 0x1, 0x1);
        gbc.writeMem(0x1deb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x59a3, gbc.sp());
        EXPECT(0x1ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 023E
        gbc.setState(0xbdcf, 0xbe15, 0x6bc0, 0x7a77, 0x2c85, 0xca1c, 0x0, 0x0);
        gbc.writeMem(0xbdcf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbe15, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcf));
        EXPECT(0xe2, gbc.readMem(0xbdd0));
        // CB E2 023F
        gbc.setState(0x6a5f, 0x620a, 0xbed0, 0xca84, 0xa1af, 0x2f2d, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0x6a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0240
        gbc.setState(0xca32, 0x53f8, 0xd160, 0xf39c, 0x8042, 0x2941, 0x1, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x53f8, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca32));
        EXPECT(0xe2, gbc.readMem(0xca33));
        // CB E2 0241
        gbc.setState(0x7c26, 0xd092, 0xb120, 0xa483, 0x8116, 0x2ff9, 0x0, 0x1);
        gbc.writeMem(0x7c26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0242
        gbc.setState(0x3a41, 0x8c16, 0xa050, 0x2fad, 0x415a, 0x8aa, 0x0, 0x0);
        gbc.writeMem(0x3a41, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8c16, gbc.sp());
        EXPECT(0x3a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0243
        gbc.setState(0x13c3, 0x87a0, 0x34a0, 0xe313, 0x97f1, 0x389b, 0x1, 0x1);
        gbc.writeMem(0x13c3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x87a0, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0244
        gbc.setState(0x87ba, 0xbdaa, 0xd370, 0x73b9, 0x3c94, 0x5c9d, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbdaa, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0xe2, gbc.readMem(0x87bb));
        // CB E2 0245
        gbc.setState(0x74ea, 0xf56a, 0x2440, 0xb173, 0x24ef, 0x490f, 0x1, 0x1);
        gbc.writeMem(0x74ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x74ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0246
        gbc.setState(0xc93e, 0xbdb9, 0xd590, 0x34a5, 0x20ef, 0x673f, 0x0, 0x0);
        gbc.writeMem(0xc93e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbdb9, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93e));
        EXPECT(0xe2, gbc.readMem(0xc93f));
        // CB E2 0247
        gbc.setState(0xe52d, 0x439b, 0xcca0, 0xd82f, 0x7ab2, 0x1053, 0x0, 0x1);
        gbc.writeMem(0xe52d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0xe52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52d));
        EXPECT(0xe2, gbc.readMem(0xe52e));
        // CB E2 0248
        gbc.setState(0xa881, 0xc371, 0x43b0, 0x8ce4, 0x7586, 0x9ac6, 0x0, 0x1);
        gbc.writeMem(0xa881, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc371, gbc.sp());
        EXPECT(0xa883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa881));
        EXPECT(0xe2, gbc.readMem(0xa882));
        // CB E2 0249
        gbc.setState(0x3a5, 0x5c5, 0xcfd0, 0x8698, 0x6046, 0x2f05, 0x0, 0x0);
        gbc.writeMem(0x3a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5c5, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 024A
        gbc.setState(0xb468, 0x21ad, 0xa520, 0x3f47, 0x921b, 0xc24e, 0x0, 0x1);
        gbc.writeMem(0xb468, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0xb46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb468));
        EXPECT(0xe2, gbc.readMem(0xb469));
        // CB E2 024B
        gbc.setState(0x91a, 0x6303, 0xd860, 0xf771, 0xbefa, 0x7433, 0x0, 0x1);
        gbc.writeMem(0x91a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6303, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 024C
        gbc.setState(0x4f5f, 0x26a1, 0xe5d0, 0xda8, 0x8e3, 0x7e33, 0x0, 0x0);
        gbc.writeMem(0x4f5f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 024D
        gbc.setState(0x8394, 0xd752, 0xa1d0, 0xcb51, 0xd47a, 0xd477, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd752, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8394));
        EXPECT(0xe2, gbc.readMem(0x8395));
        // CB E2 024E
        gbc.setState(0x7905, 0x74c0, 0x5550, 0x9aff, 0xc847, 0xd63f, 0x0, 0x1);
        gbc.writeMem(0x7905, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x74c0, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 024F
        gbc.setState(0x39a9, 0xfd6a, 0xf590, 0xd34, 0xee61, 0x235c, 0x1, 0x0);
        gbc.writeMem(0x39a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfd6a, gbc.sp());
        EXPECT(0x39ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0250
        gbc.setState(0x9ab5, 0xc983, 0x3470, 0x5019, 0xda78, 0x3cb, 0x0, 0x0);
        gbc.writeMem(0x9ab5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0x9ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab5));
        EXPECT(0xe2, gbc.readMem(0x9ab6));
        // CB E2 0251
        gbc.setState(0x5d4e, 0xbd64, 0x53a0, 0x1ea6, 0xe915, 0x857a, 0x1, 0x1);
        gbc.writeMem(0x5d4e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0252
        gbc.setState(0xc6e1, 0xac2, 0xce50, 0xcd07, 0x4795, 0xf16e, 0x0, 0x1);
        gbc.writeMem(0xc6e1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac2, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e1));
        EXPECT(0xe2, gbc.readMem(0xc6e2));
        // CB E2 0253
        gbc.setState(0x7a9a, 0x879e, 0x7650, 0x3b79, 0x778e, 0x4734, 0x0, 0x0);
        gbc.writeMem(0x7a9a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x879e, gbc.sp());
        EXPECT(0x7a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0254
        gbc.setState(0xe0dd, 0x2400, 0x4c60, 0xc2d, 0xf046, 0xf3fe, 0x1, 0x1);
        gbc.writeMem(0xe0dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0xe0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0dd));
        EXPECT(0xe2, gbc.readMem(0xe0de));
        // CB E2 0255
        gbc.setState(0x3855, 0xe33f, 0xfe10, 0x1ee1, 0xfd12, 0x5841, 0x1, 0x0);
        gbc.writeMem(0x3855, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe33f, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0256
        gbc.setState(0x714a, 0x93e2, 0x2a20, 0x51e5, 0x3e6b, 0xa1eb, 0x0, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0257
        gbc.setState(0x7a58, 0xdfd, 0xd420, 0x22ff, 0xbc58, 0x659b, 0x1, 0x1);
        gbc.writeMem(0x7a58, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0x7a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0258
        gbc.setState(0x803d, 0x83f8, 0x15a0, 0x1dfe, 0x5a1c, 0xe395, 0x1, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x83f8, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803d));
        EXPECT(0xe2, gbc.readMem(0x803e));
        // CB E2 0259
        gbc.setState(0x558a, 0x6af2, 0xda60, 0x6a27, 0x5e5a, 0x2876, 0x0, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0x558c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 025A
        gbc.setState(0xe304, 0xea73, 0x15d0, 0x37a8, 0x37b7, 0x560, 0x1, 0x0);
        gbc.writeMem(0xe304, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0xe2, gbc.readMem(0xe305));
        // CB E2 025B
        gbc.setState(0x7c39, 0xe87e, 0xdb50, 0x8013, 0x5ffc, 0x9960, 0x0, 0x1);
        gbc.writeMem(0x7c39, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x7c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 025C
        gbc.setState(0xcac9, 0x52c9, 0x8be0, 0xc6fb, 0xf97a, 0xe671, 0x0, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0xcacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac9));
        EXPECT(0xe2, gbc.readMem(0xcaca));
        // CB E2 025D
        gbc.setState(0xa729, 0x2a2d, 0x7e00, 0x2da3, 0xeed7, 0xc743, 0x1, 0x0);
        gbc.writeMem(0xa729, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa729));
        EXPECT(0xe2, gbc.readMem(0xa72a));
        // CB E2 025E
        gbc.setState(0xe6d1, 0x2a3f, 0x14c0, 0x92f8, 0xf582, 0xc5bb, 0x1, 0x1);
        gbc.writeMem(0xe6d1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a3f, gbc.sp());
        EXPECT(0xe6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d1));
        EXPECT(0xe2, gbc.readMem(0xe6d2));
        // CB E2 025F
        gbc.setState(0x11a5, 0x1892, 0x4580, 0x42b9, 0x358e, 0x3ec4, 0x1, 0x1);
        gbc.writeMem(0x11a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1892, gbc.sp());
        EXPECT(0x11a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0260
        gbc.setState(0x4f82, 0x4ef6, 0x3050, 0x4091, 0xcc18, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x4f82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0x4f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0261
        gbc.setState(0x7e6c, 0x32de, 0xb700, 0x4604, 0x3c6b, 0x89b1, 0x0, 0x1);
        gbc.writeMem(0x7e6c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x7e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0262
        gbc.setState(0xeb6a, 0x53ab, 0x130, 0x7c1b, 0x8cda, 0x92e9, 0x0, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6a));
        EXPECT(0xe2, gbc.readMem(0xeb6b));
        // CB E2 0263
        gbc.setState(0x35c0, 0x9dda, 0x23a0, 0xd96b, 0x12e2, 0x46ef, 0x0, 0x0);
        gbc.writeMem(0x35c0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9dda, gbc.sp());
        EXPECT(0x35c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0264
        gbc.setState(0x3816, 0x9f6e, 0xb300, 0xdda9, 0xc0be, 0xbdea, 0x1, 0x0);
        gbc.writeMem(0x3816, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0x3818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0265
        gbc.setState(0xb942, 0x179f, 0x1a0, 0xf70d, 0x211e, 0xacf6, 0x1, 0x1);
        gbc.writeMem(0xb942, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0xb944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb942));
        EXPECT(0xe2, gbc.readMem(0xb943));
        // CB E2 0266
        gbc.setState(0x1f00, 0x1ba6, 0x5d50, 0x99b5, 0x3e40, 0xbf8b, 0x0, 0x1);
        gbc.writeMem(0x1f00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0x1f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0267
        gbc.setState(0x5e7a, 0x6fbb, 0x3890, 0x42cd, 0x41e, 0xab9e, 0x0, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0269
        gbc.setState(0x3623, 0xbe96, 0x16c0, 0x858c, 0xb44c, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x3623, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbe96, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 026A
        gbc.setState(0xd9a9, 0x5cb3, 0xca60, 0x6d99, 0x82df, 0x1cb8, 0x1, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a9));
        EXPECT(0xe2, gbc.readMem(0xd9aa));
        // CB E2 026B
        gbc.setState(0xa8c4, 0xea62, 0x6b30, 0xaef0, 0x8a49, 0x3e8c, 0x1, 0x1);
        gbc.writeMem(0xa8c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0xa8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c4));
        EXPECT(0xe2, gbc.readMem(0xa8c5));
        // CB E2 026C
        gbc.setState(0x1ef4, 0x7660, 0x3e70, 0x45f0, 0xf583, 0x58e1, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7660, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 026D
        gbc.setState(0xe005, 0xeb45, 0xaaf0, 0x150c, 0x1758, 0x39a2, 0x1, 0x0);
        gbc.writeMem(0xe005, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeb45, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe005));
        EXPECT(0xe2, gbc.readMem(0xe006));
        // CB E2 026E
        gbc.setState(0xe50f, 0x21af, 0xf50, 0x4052, 0xce76, 0x2fb5, 0x1, 0x1);
        gbc.writeMem(0xe50f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x21af, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50f));
        EXPECT(0xe2, gbc.readMem(0xe510));
        // CB E2 026F
        gbc.setState(0x849a, 0x1838, 0x6570, 0xdbc3, 0x4f0f, 0x4d73, 0x0, 0x1);
        gbc.writeMem(0x849a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849a));
        EXPECT(0xe2, gbc.readMem(0x849b));
        // CB E2 0270
        gbc.setState(0x5397, 0x97a3, 0xfcc0, 0xfc95, 0x4019, 0x3763, 0x0, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0x5399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0271
        gbc.setState(0x6fc4, 0xc288, 0x6e10, 0x3e4e, 0x593f, 0x1db3, 0x1, 0x1);
        gbc.writeMem(0x6fc4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0272
        gbc.setState(0x5626, 0x5c39, 0x2480, 0xbb09, 0x89e, 0x4e60, 0x0, 0x1);
        gbc.writeMem(0x5626, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0273
        gbc.setState(0x33dc, 0x9f7e, 0xa340, 0x25ad, 0x9a66, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0x33dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f7e, gbc.sp());
        EXPECT(0x33de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0274
        gbc.setState(0xd0b5, 0x9aff, 0xaaf0, 0xc34d, 0x6c38, 0x7e22, 0x1, 0x0);
        gbc.writeMem(0xd0b5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0xd0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b5));
        EXPECT(0xe2, gbc.readMem(0xd0b6));
        // CB E2 0275
        gbc.setState(0xddc3, 0x1723, 0x1940, 0xb0f1, 0xcfc6, 0xcd47, 0x0, 0x0);
        gbc.writeMem(0xddc3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1723, gbc.sp());
        EXPECT(0xddc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc3));
        EXPECT(0xe2, gbc.readMem(0xddc4));
        // CB E2 0276
        gbc.setState(0xc356, 0x9b59, 0xf0e0, 0xecf1, 0x5dc6, 0x5d1b, 0x1, 0x1);
        gbc.writeMem(0xc356, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0xc358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc356));
        EXPECT(0xe2, gbc.readMem(0xc357));
        // CB E2 0277
        gbc.setState(0x89c9, 0x420, 0x5940, 0x7195, 0x33a7, 0x614c, 0x0, 0x0);
        gbc.writeMem(0x89c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x420, gbc.sp());
        EXPECT(0x89cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c9));
        EXPECT(0xe2, gbc.readMem(0x89ca));
        // CB E2 0278
        gbc.setState(0x56ec, 0x8525, 0xcd00, 0x2c24, 0x883b, 0xc8f, 0x0, 0x1);
        gbc.writeMem(0x56ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8525, gbc.sp());
        EXPECT(0x56ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0279
        gbc.setState(0x93b8, 0x9e2f, 0xb2d0, 0xa2f1, 0xc948, 0xef7f, 0x0, 0x1);
        gbc.writeMem(0x93b8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0x93ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b8));
        EXPECT(0xe2, gbc.readMem(0x93b9));
        // CB E2 027A
        gbc.setState(0xe19f, 0x5dc1, 0x3df0, 0x4e63, 0x43eb, 0xe766, 0x1, 0x1);
        gbc.writeMem(0xe19f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19f));
        EXPECT(0xe2, gbc.readMem(0xe1a0));
        // CB E2 027B
        gbc.setState(0x4e3f, 0xc860, 0x7620, 0xcc4e, 0x44ee, 0x80ef, 0x1, 0x1);
        gbc.writeMem(0x4e3f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0x4e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 027C
        gbc.setState(0x8e7b, 0xd55f, 0xa70, 0x5202, 0x84ba, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x8e7b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd55f, gbc.sp());
        EXPECT(0x8e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7b));
        EXPECT(0xe2, gbc.readMem(0x8e7c));
        // CB E2 027D
        gbc.setState(0xedd7, 0xb99e, 0xb240, 0x55ff, 0xd3b8, 0x3378, 0x0, 0x1);
        gbc.writeMem(0xedd7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb99e, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd7));
        EXPECT(0xe2, gbc.readMem(0xedd8));
        // CB E2 027E
        gbc.setState(0xc848, 0x4f04, 0x6210, 0xdc08, 0xdc63, 0x7a33, 0x0, 0x1);
        gbc.writeMem(0xc848, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4f04, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc848));
        EXPECT(0xe2, gbc.readMem(0xc849));
        // CB E2 027F
        gbc.setState(0x893, 0xb318, 0x8e0, 0x810, 0x21fc, 0x3306, 0x0, 0x0);
        gbc.writeMem(0x893, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb318, gbc.sp());
        EXPECT(0x895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0280
        gbc.setState(0x9a29, 0x758d, 0xbc00, 0xa2fd, 0x62a4, 0x98fb, 0x0, 0x0);
        gbc.writeMem(0x9a29, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0x9a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a29));
        EXPECT(0xe2, gbc.readMem(0x9a2a));
        // CB E2 0281
        gbc.setState(0x9954, 0xaee5, 0x6c40, 0x2bc9, 0x2e4f, 0x4c24, 0x0, 0x1);
        gbc.writeMem(0x9954, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x9956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9954));
        EXPECT(0xe2, gbc.readMem(0x9955));
        // CB E2 0282
        gbc.setState(0x7d31, 0x8ed2, 0x9c30, 0xa11f, 0x794, 0x48a0, 0x1, 0x0);
        gbc.writeMem(0x7d31, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8ed2, gbc.sp());
        EXPECT(0x7d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0283
        gbc.setState(0xef68, 0x61f2, 0x3610, 0xfd8b, 0x892b, 0x2231, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef68));
        EXPECT(0xe2, gbc.readMem(0xef69));
        // CB E2 0284
        gbc.setState(0x3063, 0xf226, 0xa210, 0x4588, 0x5820, 0x2f08, 0x0, 0x1);
        gbc.writeMem(0x3063, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf226, gbc.sp());
        EXPECT(0x3065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0285
        gbc.setState(0xd948, 0xaa8b, 0x4ce0, 0x1ebd, 0xf1cd, 0xb86f, 0x1, 0x0);
        gbc.writeMem(0xd948, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaa8b, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd948));
        EXPECT(0xe2, gbc.readMem(0xd949));
        // CB E2 0286
        gbc.setState(0xbec2, 0x276, 0xa640, 0xfd18, 0xa3fd, 0x56ae, 0x1, 0x0);
        gbc.writeMem(0xbec2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x276, gbc.sp());
        EXPECT(0xbec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec2));
        EXPECT(0xe2, gbc.readMem(0xbec3));
        // CB E2 0288
        gbc.setState(0x2698, 0x36b9, 0x8f40, 0xbf9e, 0x8d97, 0x371e, 0x0, 0x0);
        gbc.writeMem(0x2698, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x36b9, gbc.sp());
        EXPECT(0x269a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0289
        gbc.setState(0x7ed7, 0xb587, 0x2670, 0xd1aa, 0xa63b, 0x3e93, 0x1, 0x1);
        gbc.writeMem(0x7ed7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 028A
        gbc.setState(0x4c56, 0xd53a, 0x3780, 0xa127, 0xee44, 0x6a4, 0x1, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd53a, gbc.sp());
        EXPECT(0x4c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 028B
        gbc.setState(0xe55a, 0x35a7, 0x4ec0, 0xd682, 0x27f7, 0xea55, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0xe55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55a));
        EXPECT(0xe2, gbc.readMem(0xe55b));
        // CB E2 028C
        gbc.setState(0xe3c8, 0x2fb2, 0x8e60, 0x1e5c, 0x80e4, 0x6b2d, 0x0, 0x1);
        gbc.writeMem(0xe3c8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0xe3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c8));
        EXPECT(0xe2, gbc.readMem(0xe3c9));
        // CB E2 028D
        gbc.setState(0xcc84, 0x8a70, 0xb3d0, 0x420a, 0x88de, 0xce30, 0x1, 0x0);
        gbc.writeMem(0xcc84, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8a70, gbc.sp());
        EXPECT(0xcc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc84));
        EXPECT(0xe2, gbc.readMem(0xcc85));
        // CB E2 028E
        gbc.setState(0x5b5c, 0xd4fa, 0x3d50, 0xddfc, 0x5e45, 0x563d, 0x0, 0x0);
        gbc.writeMem(0x5b5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4fa, gbc.sp());
        EXPECT(0x5b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 028F
        gbc.setState(0x573d, 0xfc78, 0x41c0, 0x2d4f, 0x981, 0xc9c8, 0x0, 0x1);
        gbc.writeMem(0x573d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfc78, gbc.sp());
        EXPECT(0x573f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0290
        gbc.setState(0x49a0, 0x29ae, 0x6b30, 0x3270, 0xf06a, 0x22b0, 0x0, 0x1);
        gbc.writeMem(0x49a0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x29ae, gbc.sp());
        EXPECT(0x49a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0291
        gbc.setState(0x13ba, 0xcc8c, 0xe330, 0x40a0, 0x13b4, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x13ba, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0292
        gbc.setState(0x2e7, 0xdc83, 0xab80, 0x13ed, 0x19ec, 0x6356, 0x1, 0x0);
        gbc.writeMem(0x2e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0x2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0293
        gbc.setState(0xe801, 0x5e3c, 0xa700, 0xc790, 0x42a2, 0x1927, 0x1, 0x1);
        gbc.writeMem(0xe801, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0xe803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe801));
        EXPECT(0xe2, gbc.readMem(0xe802));
        // CB E2 0294
        gbc.setState(0xbd34, 0xda89, 0x5110, 0xf2ae, 0x3e33, 0xb6a3, 0x0, 0x1);
        gbc.writeMem(0xbd34, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd34));
        EXPECT(0xe2, gbc.readMem(0xbd35));
        // CB E2 0295
        gbc.setState(0x629c, 0x8ddd, 0x6580, 0xfd8b, 0x73bd, 0x15a7, 0x0, 0x0);
        gbc.writeMem(0x629c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ddd, gbc.sp());
        EXPECT(0x629e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0296
        gbc.setState(0xe0ff, 0xb950, 0xc5b0, 0x2ba8, 0x28ec, 0x782e, 0x0, 0x0);
        gbc.writeMem(0xe0ff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb950, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ff));
        EXPECT(0xe2, gbc.readMem(0xe100));
        // CB E2 0297
        gbc.setState(0x9b07, 0x57d2, 0x4a70, 0xc2eb, 0x413b, 0x1e15, 0x1, 0x1);
        gbc.writeMem(0x9b07, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x57d2, gbc.sp());
        EXPECT(0x9b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b07));
        EXPECT(0xe2, gbc.readMem(0x9b08));
        // CB E2 0298
        gbc.setState(0xed38, 0x8e77, 0xb60, 0x4f1d, 0x549d, 0x80b2, 0x0, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e77, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed38));
        EXPECT(0xe2, gbc.readMem(0xed39));
        // CB E2 0299
        gbc.setState(0xa53d, 0x8921, 0x7d50, 0x7aac, 0x168b, 0x9663, 0x0, 0x1);
        gbc.writeMem(0xa53d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0xa53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53d));
        EXPECT(0xe2, gbc.readMem(0xa53e));
        // CB E2 029A
        gbc.setState(0x85c9, 0xcf9a, 0x2b00, 0x81dd, 0x3225, 0x7eac, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x85cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c9));
        EXPECT(0xe2, gbc.readMem(0x85ca));
        // CB E2 029B
        gbc.setState(0x55de, 0xadd6, 0xf070, 0x5093, 0xe14d, 0x6b3a, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xadd6, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 029C
        gbc.setState(0xe3a4, 0x552c, 0x6b40, 0xf02a, 0x8d3a, 0x4f63, 0x0, 0x1);
        gbc.writeMem(0xe3a4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a4));
        EXPECT(0xe2, gbc.readMem(0xe3a5));
        // CB E2 029D
        gbc.setState(0x3fa7, 0x4a5d, 0xfb80, 0x4e21, 0xff33, 0x6538, 0x1, 0x1);
        gbc.writeMem(0x3fa7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4a5d, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 029E
        gbc.setState(0x77d8, 0xb4dc, 0x94c0, 0x6cfa, 0x276f, 0x8db7, 0x1, 0x1);
        gbc.writeMem(0x77d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0x77da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02A0
        gbc.setState(0x6347, 0x9933, 0x2f00, 0x7ab4, 0x2234, 0xc6f2, 0x0, 0x1);
        gbc.writeMem(0x6347, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9933, gbc.sp());
        EXPECT(0x6349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02A1
        gbc.setState(0x98a5, 0x3937, 0xf8c0, 0xd0a5, 0xd3e4, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x98a5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0x98a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a5));
        EXPECT(0xe2, gbc.readMem(0x98a6));
        // CB E2 02A2
        gbc.setState(0x3b83, 0x67f8, 0x4790, 0xd969, 0x382f, 0xa183, 0x1, 0x1);
        gbc.writeMem(0x3b83, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x67f8, gbc.sp());
        EXPECT(0x3b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02A3
        gbc.setState(0x8faa, 0xcef5, 0xf3b0, 0x9286, 0xba62, 0x78ba, 0x0, 0x1);
        gbc.writeMem(0x8faa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0x8fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8faa));
        EXPECT(0xe2, gbc.readMem(0x8fab));
        // CB E2 02A4
        gbc.setState(0x9e4d, 0x7b45, 0xe0b0, 0xfa54, 0x8db2, 0x5c3a, 0x1, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0xe2, gbc.readMem(0x9e4e));
        // CB E2 02A5
        gbc.setState(0x50c4, 0x8a14, 0xc920, 0x7751, 0x20d6, 0x40ea, 0x0, 0x1);
        gbc.writeMem(0x50c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02A6
        gbc.setState(0xe2c8, 0x6eb9, 0xc120, 0x51c1, 0xb041, 0x3d7a, 0x1, 0x1);
        gbc.writeMem(0xe2c8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0xe2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c8));
        EXPECT(0xe2, gbc.readMem(0xe2c9));
        // CB E2 02A7
        gbc.setState(0x33a9, 0x6fc8, 0x6590, 0x7577, 0xfd3, 0x1a76, 0x1, 0x1);
        gbc.writeMem(0x33a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6fc8, gbc.sp());
        EXPECT(0x33ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02A8
        gbc.setState(0x5659, 0xf757, 0x82b0, 0xa79e, 0x2017, 0x7471, 0x0, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf757, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02A9
        gbc.setState(0xa79e, 0xe747, 0xaed0, 0x576d, 0x4a98, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0xa79e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79e));
        EXPECT(0xe2, gbc.readMem(0xa79f));
        // CB E2 02AA
        gbc.setState(0xaaf9, 0xfea9, 0x77a0, 0x3dc9, 0xee96, 0xf4d5, 0x1, 0x1);
        gbc.writeMem(0xaaf9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfea9, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf9));
        EXPECT(0xe2, gbc.readMem(0xaafa));
        // CB E2 02AB
        gbc.setState(0xe3a7, 0xe146, 0x5640, 0xd5e0, 0xbf09, 0x25e, 0x1, 0x0);
        gbc.writeMem(0xe3a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe146, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a7));
        EXPECT(0xe2, gbc.readMem(0xe3a8));
        // CB E2 02AC
        gbc.setState(0x958c, 0xbe32, 0xd330, 0xe435, 0x7044, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0x958c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x958e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958c));
        EXPECT(0xe2, gbc.readMem(0x958d));
        // CB E2 02AD
        gbc.setState(0x95be, 0x8f7e, 0xcc20, 0x6f16, 0x4a61, 0xc0be, 0x1, 0x0);
        gbc.writeMem(0x95be, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0x95c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95be));
        EXPECT(0xe2, gbc.readMem(0x95bf));
        // CB E2 02AE
        gbc.setState(0xad19, 0x509, 0x6140, 0xfe6e, 0xb059, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xad19, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x509, gbc.sp());
        EXPECT(0xad1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad19));
        EXPECT(0xe2, gbc.readMem(0xad1a));
        // CB E2 02AF
        gbc.setState(0x93f4, 0x6cad, 0xdfd0, 0x1e72, 0xf1fc, 0x77aa, 0x0, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6cad, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f4));
        EXPECT(0xe2, gbc.readMem(0x93f5));
        // CB E2 02B1
        gbc.setState(0x49a6, 0x6c81, 0x90d0, 0x729c, 0xe1c7, 0x353, 0x0, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6c81, gbc.sp());
        EXPECT(0x49a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02B3
        gbc.setState(0xe18a, 0x9b2, 0x90b0, 0x5553, 0x2a8c, 0x7c9e, 0x0, 0x0);
        gbc.writeMem(0xe18a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9b2, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18a));
        EXPECT(0xe2, gbc.readMem(0xe18b));
        // CB E2 02B4
        gbc.setState(0x18d8, 0xff1b, 0x7860, 0x1234, 0xeafa, 0x72bb, 0x0, 0x1);
        gbc.writeMem(0x18d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xff1b, gbc.sp());
        EXPECT(0x18da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02B5
        gbc.setState(0x52a3, 0xbedb, 0xa780, 0x44a3, 0xfc22, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0x52a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbedb, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02B6
        gbc.setState(0x84f0, 0x17bc, 0xf20, 0xc277, 0xae47, 0x18d, 0x1, 0x0);
        gbc.writeMem(0x84f0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f0));
        EXPECT(0xe2, gbc.readMem(0x84f1));
        // CB E2 02B7
        gbc.setState(0x8eb8, 0xe65c, 0xe3f0, 0x5f9b, 0xce20, 0x1ce7, 0x0, 0x0);
        gbc.writeMem(0x8eb8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0x8eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb8));
        EXPECT(0xe2, gbc.readMem(0x8eb9));
        // CB E2 02B8
        gbc.setState(0xe7d8, 0x78e, 0xa6c0, 0x16ca, 0xb3c2, 0x2e64, 0x1, 0x0);
        gbc.writeMem(0xe7d8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x78e, gbc.sp());
        EXPECT(0xe7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d8));
        EXPECT(0xe2, gbc.readMem(0xe7d9));
        // CB E2 02B9
        gbc.setState(0xea00, 0x978d, 0xe830, 0x2822, 0x6093, 0x26e8, 0x0, 0x0);
        gbc.writeMem(0xea00, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea00));
        EXPECT(0xe2, gbc.readMem(0xea01));
        // CB E2 02BA
        gbc.setState(0xa017, 0xa2e8, 0x3b0, 0x54b4, 0x2d35, 0x89c8, 0x1, 0x0);
        gbc.writeMem(0xa017, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa2e8, gbc.sp());
        EXPECT(0xa019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa017));
        EXPECT(0xe2, gbc.readMem(0xa018));
        // CB E2 02BB
        gbc.setState(0x3cfc, 0xd73c, 0xee20, 0xc91e, 0x999f, 0xb3a7, 0x1, 0x0);
        gbc.writeMem(0x3cfc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd73c, gbc.sp());
        EXPECT(0x3cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02BC
        gbc.setState(0xe9ee, 0x501a, 0x3b80, 0x14ec, 0x15cb, 0x2ebc, 0x0, 0x1);
        gbc.writeMem(0xe9ee, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x501a, gbc.sp());
        EXPECT(0xe9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ee));
        EXPECT(0xe2, gbc.readMem(0xe9ef));
        // CB E2 02BD
        gbc.setState(0xb786, 0xbc98, 0xc7a0, 0xdb21, 0xb876, 0x6064, 0x0, 0x0);
        gbc.writeMem(0xb786, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbc98, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb786));
        EXPECT(0xe2, gbc.readMem(0xb787));
        // CB E2 02BF
        gbc.setState(0x73d4, 0xec78, 0xe3c0, 0x3bd, 0x236, 0xc4fb, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xec78, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02C0
        gbc.setState(0xd797, 0xc6ab, 0xeee0, 0xdba, 0xd753, 0x694e, 0x1, 0x0);
        gbc.writeMem(0xd797, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd797));
        EXPECT(0xe2, gbc.readMem(0xd798));
        // CB E2 02C1
        gbc.setState(0x3f28, 0x4d1c, 0x62e0, 0xf8d7, 0x3a73, 0xb3f8, 0x1, 0x0);
        gbc.writeMem(0x3f28, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d1c, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02C2
        gbc.setState(0xdd52, 0x49dd, 0x9f70, 0x827c, 0xb32b, 0x80b1, 0x0, 0x0);
        gbc.writeMem(0xdd52, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x49dd, gbc.sp());
        EXPECT(0xdd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd52));
        EXPECT(0xe2, gbc.readMem(0xdd53));
        // CB E2 02C3
        gbc.setState(0x2916, 0xd92, 0xfec0, 0xc9d, 0x14d1, 0x6f62, 0x0, 0x0);
        gbc.writeMem(0x2916, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02C4
        gbc.setState(0x7637, 0x60cb, 0x15c0, 0xfc4, 0x649c, 0xcc6f, 0x1, 0x0);
        gbc.writeMem(0x7637, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02C5
        gbc.setState(0x398a, 0x44e6, 0xa6c0, 0x956b, 0x3ce3, 0x2043, 0x1, 0x0);
        gbc.writeMem(0x398a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x44e6, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02C6
        gbc.setState(0x8fda, 0xe2d5, 0x8bd0, 0x1e6b, 0x2546, 0xd5fe, 0x1, 0x1);
        gbc.writeMem(0x8fda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe2d5, gbc.sp());
        EXPECT(0x8fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fda));
        EXPECT(0xe2, gbc.readMem(0x8fdb));
        // CB E2 02C7
        gbc.setState(0x82f7, 0x26ee, 0x97d0, 0x412d, 0xc12, 0x3008, 0x0, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x26ee, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f7));
        EXPECT(0xe2, gbc.readMem(0x82f8));
        // CB E2 02C8
        gbc.setState(0x62ec, 0xd6cb, 0x63d0, 0xd3d5, 0x18b4, 0x45e4, 0x0, 0x0);
        gbc.writeMem(0x62ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02C9
        gbc.setState(0x1099, 0x50d3, 0xb350, 0x72f, 0x861a, 0xdb13, 0x1, 0x0);
        gbc.writeMem(0x1099, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x50d3, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02CA
        gbc.setState(0xe1b1, 0x836c, 0x9ac0, 0x816e, 0x8e02, 0x2c75, 0x1, 0x1);
        gbc.writeMem(0xe1b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x836c, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b1));
        EXPECT(0xe2, gbc.readMem(0xe1b2));
        // CB E2 02CB
        gbc.setState(0x5366, 0x1228, 0xb2a0, 0x51c3, 0x61bc, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x5366, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1228, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02CC
        gbc.setState(0xacb8, 0x69f0, 0xfb80, 0x76bf, 0xae8e, 0x477c, 0x1, 0x0);
        gbc.writeMem(0xacb8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x69f0, gbc.sp());
        EXPECT(0xacba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb8));
        EXPECT(0xe2, gbc.readMem(0xacb9));
        // CB E2 02CD
        gbc.setState(0x26a9, 0x7975, 0xa660, 0xfb54, 0xb8bd, 0x5ae0, 0x0, 0x1);
        gbc.writeMem(0x26a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x26ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02CE
        gbc.setState(0x5f22, 0xbbfc, 0xa360, 0x3194, 0x3cec, 0x872e, 0x0, 0x0);
        gbc.writeMem(0x5f22, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbbfc, gbc.sp());
        EXPECT(0x5f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02CF
        gbc.setState(0x9c7e, 0x2b1a, 0x8500, 0x179c, 0x2ac9, 0xfe21, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x9c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7e));
        EXPECT(0xe2, gbc.readMem(0x9c7f));
        // CB E2 02D0
        gbc.setState(0xc1c9, 0xf439, 0x16e0, 0xbe3a, 0xd15a, 0x19c0, 0x1, 0x0);
        gbc.writeMem(0xc1c9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0xc1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c9));
        EXPECT(0xe2, gbc.readMem(0xc1ca));
        // CB E2 02D1
        gbc.setState(0xc55d, 0x4d3f, 0xf210, 0x6911, 0xb07, 0xe01e, 0x0, 0x1);
        gbc.writeMem(0xc55d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4d3f, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55d));
        EXPECT(0xe2, gbc.readMem(0xc55e));
        // CB E2 02D2
        gbc.setState(0x42c, 0x1e26, 0xfd60, 0xf092, 0xf111, 0x873d, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1e26, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02D3
        gbc.setState(0xc2b4, 0xce56, 0xe0e0, 0x87aa, 0xffc4, 0x60b5, 0x0, 0x1);
        gbc.writeMem(0xc2b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xce56, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0xe2, gbc.readMem(0xc2b5));
        // CB E2 02D5
        gbc.setState(0x10d4, 0xf235, 0x5e00, 0x7956, 0x1ef, 0xaab1, 0x1, 0x1);
        gbc.writeMem(0x10d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0x10d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02D6
        gbc.setState(0xefb0, 0xbe91, 0x600, 0x1d43, 0x6242, 0x5dfb, 0x1, 0x0);
        gbc.writeMem(0xefb0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe91, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb0));
        EXPECT(0xe2, gbc.readMem(0xefb1));
        // CB E2 02D7
        gbc.setState(0x896a, 0x6bdc, 0x9e00, 0xe392, 0x5ea, 0x67e7, 0x1, 0x0);
        gbc.writeMem(0x896a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0x896c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896a));
        EXPECT(0xe2, gbc.readMem(0x896b));
        // CB E2 02D8
        gbc.setState(0x37a7, 0x1448, 0x2a20, 0xaece, 0x2695, 0x493d, 0x0, 0x0);
        gbc.writeMem(0x37a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0x37a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02D9
        gbc.setState(0x574b, 0xdbf8, 0xd460, 0x956d, 0xabb4, 0x5fff, 0x0, 0x0);
        gbc.writeMem(0x574b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x574d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02DA
        gbc.setState(0x7e8, 0x9fd8, 0x3860, 0xceef, 0x7d49, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x7e8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02DB
        gbc.setState(0x31ce, 0xbc4, 0x76a0, 0x10f8, 0xbe44, 0xea9e, 0x1, 0x1);
        gbc.writeMem(0x31ce, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0x31d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02DC
        gbc.setState(0x2599, 0x559f, 0xc840, 0xdcba, 0xbd10, 0xb751, 0x1, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x559f, gbc.sp());
        EXPECT(0x259b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02DD
        gbc.setState(0x3a15, 0xf43f, 0xff40, 0x7517, 0x83b8, 0xb83a, 0x1, 0x1);
        gbc.writeMem(0x3a15, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf43f, gbc.sp());
        EXPECT(0x3a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02DE
        gbc.setState(0xc93d, 0x6589, 0x8100, 0x2b63, 0xbb2d, 0x8601, 0x0, 0x0);
        gbc.writeMem(0xc93d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93d));
        EXPECT(0xe2, gbc.readMem(0xc93e));
        // CB E2 02DF
        gbc.setState(0x2be2, 0xde1b, 0x3a60, 0x8ae5, 0xf0de, 0xa158, 0x0, 0x0);
        gbc.writeMem(0x2be2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xde1b, gbc.sp());
        EXPECT(0x2be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02E0
        gbc.setState(0xd896, 0xde65, 0x1670, 0x37fa, 0xb5b8, 0x77fc, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd896));
        EXPECT(0xe2, gbc.readMem(0xd897));
        // CB E2 02E1
        gbc.setState(0x427a, 0x7e6, 0x4240, 0xd0fa, 0xe07b, 0x5509, 0x1, 0x1);
        gbc.writeMem(0x427a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e6, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02E2
        gbc.setState(0x5dc7, 0x45cc, 0x2620, 0x5bc7, 0x497b, 0x5ef, 0x0, 0x0);
        gbc.writeMem(0x5dc7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02E3
        gbc.setState(0x56ed, 0x52a1, 0xd7f0, 0xd86d, 0xc4fa, 0xbc10, 0x0, 0x1);
        gbc.writeMem(0x56ed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0x56ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02E4
        gbc.setState(0xab2d, 0xd6b5, 0x8e0, 0xfa8d, 0xe582, 0xfa7a, 0x0, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd6b5, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2d));
        EXPECT(0xe2, gbc.readMem(0xab2e));
        // CB E2 02E5
        gbc.setState(0x21b4, 0x97ca, 0x47b0, 0x3148, 0x4a1b, 0x909d, 0x1, 0x1);
        gbc.writeMem(0x21b4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0x21b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02E6
        gbc.setState(0x6e35, 0xbd9f, 0x5900, 0x2ea6, 0x131f, 0xe3e7, 0x0, 0x0);
        gbc.writeMem(0x6e35, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbd9f, gbc.sp());
        EXPECT(0x6e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02E7
        gbc.setState(0xe7ca, 0xf6f9, 0x44a0, 0x9600, 0xf3bd, 0x81ab, 0x0, 0x0);
        gbc.writeMem(0xe7ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf6f9, gbc.sp());
        EXPECT(0xe7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ca));
        EXPECT(0xe2, gbc.readMem(0xe7cb));
        // CB E2 02E8
        gbc.setState(0x67fa, 0x1c81, 0x5ff0, 0xc2a3, 0x9cc0, 0x796d, 0x0, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1c81, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02E9
        gbc.setState(0x3d26, 0xe40c, 0xd230, 0x3899, 0x2a15, 0x69b4, 0x0, 0x0);
        gbc.writeMem(0x3d26, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0x3d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02EA
        gbc.setState(0x478d, 0xa954, 0x6590, 0x8d64, 0x400c, 0xb060, 0x1, 0x0);
        gbc.writeMem(0x478d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa954, gbc.sp());
        EXPECT(0x478f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02EC
        gbc.setState(0x5761, 0x3c96, 0xb7c0, 0x9a25, 0x99f7, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x5761, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3c96, gbc.sp());
        EXPECT(0x5763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02ED
        gbc.setState(0x931f, 0x7d50, 0x9730, 0xd283, 0x59b1, 0x54e6, 0x0, 0x0);
        gbc.writeMem(0x931f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7d50, gbc.sp());
        EXPECT(0x9321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931f));
        EXPECT(0xe2, gbc.readMem(0x9320));
        // CB E2 02EE
        gbc.setState(0x7b52, 0x5c9, 0x3220, 0x931a, 0xe895, 0xcdda, 0x1, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5c9, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02EF
        gbc.setState(0x5848, 0xc1ee, 0x230, 0xdc48, 0xff84, 0x48ad, 0x1, 0x1);
        gbc.writeMem(0x5848, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc1ee, gbc.sp());
        EXPECT(0x584a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02F0
        gbc.setState(0x450e, 0x3ae6, 0x7d10, 0x2783, 0x59fb, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x450e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x4510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02F1
        gbc.setState(0x4f08, 0x5c72, 0xfec0, 0x30eb, 0xf771, 0x2a42, 0x0, 0x0);
        gbc.writeMem(0x4f08, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5c72, gbc.sp());
        EXPECT(0x4f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02F2
        gbc.setState(0x473d, 0x6249, 0xc1c0, 0x377b, 0xe60e, 0x9c81, 0x0, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6249, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02F3
        gbc.setState(0xb0da, 0xd9b7, 0x5170, 0x8f49, 0x5cfa, 0x558d, 0x1, 0x1);
        gbc.writeMem(0xb0da, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0xb0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0da));
        EXPECT(0xe2, gbc.readMem(0xb0db));
        // CB E2 02F4
        gbc.setState(0xd71a, 0xb86c, 0x5b60, 0xa594, 0x8091, 0xe01, 0x0, 0x1);
        gbc.writeMem(0xd71a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb86c, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71a));
        EXPECT(0xe2, gbc.readMem(0xd71b));
        // CB E2 02F5
        gbc.setState(0x2611, 0x27a2, 0x8560, 0xa899, 0xf1dd, 0xa783, 0x0, 0x1);
        gbc.writeMem(0x2611, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x27a2, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02F6
        gbc.setState(0x835b, 0x3821, 0x8230, 0xbf6f, 0x813a, 0x47e8, 0x1, 0x1);
        gbc.writeMem(0x835b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3821, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0xe2, gbc.readMem(0x835c));
        // CB E2 02F7
        gbc.setState(0x5bef, 0x2df4, 0xbad0, 0xb8ff, 0x2965, 0x32a5, 0x1, 0x1);
        gbc.writeMem(0x5bef, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2df4, gbc.sp());
        EXPECT(0x5bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02F8
        gbc.setState(0x8f27, 0xe9fe, 0xf0a0, 0x40cf, 0xd6fe, 0xd6e8, 0x1, 0x0);
        gbc.writeMem(0x8f27, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0x8f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f27));
        EXPECT(0xe2, gbc.readMem(0x8f28));
        // CB E2 02F9
        gbc.setState(0x4f06, 0xeed4, 0x170, 0x5efc, 0xf6d8, 0xbfe6, 0x0, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 02FA
        gbc.setState(0x5d20, 0x117c, 0xac00, 0xd6e1, 0x6a4e, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0x5d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02FB
        gbc.setState(0x87db, 0x6500, 0x2880, 0x46f5, 0x6abc, 0xf106, 0x0, 0x1);
        gbc.writeMem(0x87db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87db));
        EXPECT(0xe2, gbc.readMem(0x87dc));
        // CB E2 02FC
        gbc.setState(0x9ae1, 0x4e36, 0x6880, 0x9090, 0xd67e, 0x33cb, 0x1, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4e36, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae1));
        EXPECT(0xe2, gbc.readMem(0x9ae2));
        // CB E2 02FD
        gbc.setState(0x6406, 0x242, 0xfcc0, 0x6618, 0x5fc3, 0xa9eb, 0x1, 0x1);
        gbc.writeMem(0x6406, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x242, gbc.sp());
        EXPECT(0x6408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 02FE
        gbc.setState(0xd90e, 0x2e01, 0x8bb0, 0x727b, 0x3c3f, 0xa3b2, 0x0, 0x1);
        gbc.writeMem(0xd90e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2e01, gbc.sp());
        EXPECT(0xd910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90e));
        EXPECT(0xe2, gbc.readMem(0xd90f));
        // CB E2 02FF
        gbc.setState(0xd6ea, 0xd1ee, 0xa680, 0xf153, 0xeea, 0x859a, 0x1, 0x0);
        gbc.writeMem(0xd6ea, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd1ee, gbc.sp());
        EXPECT(0xd6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ea));
        EXPECT(0xe2, gbc.readMem(0xd6eb));
        // CB E2 0300
        gbc.setState(0xdf25, 0x23af, 0xdef0, 0x5868, 0xb2c6, 0xcced, 0x0, 0x1);
        gbc.writeMem(0xdf25, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf25));
        EXPECT(0xe2, gbc.readMem(0xdf26));
        // CB E2 0301
        gbc.setState(0x66dd, 0x22ba, 0xce80, 0x57ae, 0xb4db, 0xa915, 0x1, 0x1);
        gbc.writeMem(0x66dd, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x22ba, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0302
        gbc.setState(0x3a2d, 0xf121, 0xebf0, 0x3630, 0x3c11, 0xa05f, 0x0, 0x0);
        gbc.writeMem(0x3a2d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0303
        gbc.setState(0xb921, 0x2ec3, 0x1fa0, 0x9c84, 0x18ef, 0xdea4, 0x1, 0x0);
        gbc.writeMem(0xb921, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0xb923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb921));
        EXPECT(0xe2, gbc.readMem(0xb922));
        // CB E2 0304
        gbc.setState(0x8cfe, 0xa658, 0x7f0, 0x5828, 0x3e08, 0x958f, 0x1, 0x1);
        gbc.writeMem(0x8cfe, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfe));
        EXPECT(0xe2, gbc.readMem(0x8cff));
        // CB E2 0305
        gbc.setState(0xa6ec, 0x98a2, 0x33b0, 0xaaa2, 0x7dbe, 0x3164, 0x0, 0x1);
        gbc.writeMem(0xa6ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x98a2, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ec));
        EXPECT(0xe2, gbc.readMem(0xa6ed));
        // CB E2 0306
        gbc.setState(0x1438, 0x30bd, 0xffd0, 0x3b59, 0xa155, 0x1a41, 0x1, 0x1);
        gbc.writeMem(0x1438, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0307
        gbc.setState(0xe97a, 0xe644, 0xc230, 0xf072, 0xb596, 0xd03e, 0x1, 0x1);
        gbc.writeMem(0xe97a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0xe97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97a));
        EXPECT(0xe2, gbc.readMem(0xe97b));
        // CB E2 0308
        gbc.setState(0xb288, 0x59bb, 0xaa50, 0x3d73, 0x661e, 0x8a61, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb288));
        EXPECT(0xe2, gbc.readMem(0xb289));
        // CB E2 0309
        gbc.setState(0xa01a, 0x256b, 0x4e70, 0x7fb6, 0xc717, 0xc69d, 0x1, 0x0);
        gbc.writeMem(0xa01a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0xa01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01a));
        EXPECT(0xe2, gbc.readMem(0xa01b));
        // CB E2 030A
        gbc.setState(0x37a, 0xc659, 0xe50, 0x7b27, 0xa63a, 0x8537, 0x0, 0x0);
        gbc.writeMem(0x37a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 030B
        gbc.setState(0x91e4, 0xdd9, 0xe3f0, 0x177, 0xcb2, 0x84a4, 0x1, 0x1);
        gbc.writeMem(0x91e4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd9, gbc.sp());
        EXPECT(0x91e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e4));
        EXPECT(0xe2, gbc.readMem(0x91e5));
        // CB E2 030C
        gbc.setState(0x13bb, 0x221f, 0x3ad0, 0x2f10, 0xa4df, 0x8956, 0x0, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 030D
        gbc.setState(0xc3b0, 0x6c74, 0x2b80, 0x1118, 0x3083, 0x4c6c, 0x1, 0x0);
        gbc.writeMem(0xc3b0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b0));
        EXPECT(0xe2, gbc.readMem(0xc3b1));
        // CB E2 030E
        gbc.setState(0x696b, 0xa5b6, 0x9880, 0x31b5, 0x326e, 0xdf60, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa5b6, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0310
        gbc.setState(0xdb7f, 0x4b82, 0x1700, 0x6ec6, 0xc7c5, 0xd801, 0x1, 0x0);
        gbc.writeMem(0xdb7f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0xdb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7f));
        EXPECT(0xe2, gbc.readMem(0xdb80));
        // CB E2 0311
        gbc.setState(0x6f47, 0x1e25, 0x8140, 0x6a99, 0x302c, 0x15df, 0x0, 0x1);
        gbc.writeMem(0x6f47, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e25, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0312
        gbc.setState(0x9de8, 0xc6c9, 0xe540, 0x2206, 0x243b, 0x1845, 0x1, 0x0);
        gbc.writeMem(0x9de8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0x9dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de8));
        EXPECT(0xe2, gbc.readMem(0x9de9));
        // CB E2 0313
        gbc.setState(0x240c, 0x81f8, 0x7570, 0x2fb0, 0x59c0, 0xd50c, 0x1, 0x1);
        gbc.writeMem(0x240c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x81f8, gbc.sp());
        EXPECT(0x240e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0314
        gbc.setState(0x9221, 0x73e4, 0x6c40, 0x8ff0, 0x965d, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0x9221, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0x9223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9221));
        EXPECT(0xe2, gbc.readMem(0x9222));
        // CB E2 0315
        gbc.setState(0x8b3a, 0xa972, 0x91f0, 0xf3d3, 0xc7aa, 0x517d, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa972, gbc.sp());
        EXPECT(0x8b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3a));
        EXPECT(0xe2, gbc.readMem(0x8b3b));
        // CB E2 0316
        gbc.setState(0x3f13, 0xb8aa, 0x9f70, 0x6a94, 0x4341, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0x3f13, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb8aa, gbc.sp());
        EXPECT(0x3f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0317
        gbc.setState(0x67c4, 0x8d6d, 0x5940, 0x9d04, 0x4d76, 0xa8c9, 0x1, 0x0);
        gbc.writeMem(0x67c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8d6d, gbc.sp());
        EXPECT(0x67c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0318
        gbc.setState(0xdf7b, 0x8397, 0x23b0, 0x5e89, 0xa468, 0x3dff, 0x1, 0x1);
        gbc.writeMem(0xdf7b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0xdf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7b));
        EXPECT(0xe2, gbc.readMem(0xdf7c));
        // CB E2 0319
        gbc.setState(0x93f2, 0xc29, 0xbf80, 0xb6e6, 0x2a17, 0x61cb, 0x0, 0x1);
        gbc.writeMem(0x93f2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc29, gbc.sp());
        EXPECT(0x93f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f2));
        EXPECT(0xe2, gbc.readMem(0x93f3));
        // CB E2 031A
        gbc.setState(0x3ea3, 0x1147, 0xf10, 0xa074, 0xa7ec, 0xe29b, 0x1, 0x1);
        gbc.writeMem(0x3ea3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1147, gbc.sp());
        EXPECT(0x3ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 031B
        gbc.setState(0xbbf5, 0xc606, 0xbb20, 0x469f, 0x7a9b, 0xb56c, 0x1, 0x1);
        gbc.writeMem(0xbbf5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc606, gbc.sp());
        EXPECT(0xbbf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf5));
        EXPECT(0xe2, gbc.readMem(0xbbf6));
        // CB E2 031C
        gbc.setState(0x89a7, 0x15c7, 0xeb30, 0xda20, 0x9d36, 0x30fb, 0x1, 0x0);
        gbc.writeMem(0x89a7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x15c7, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a7));
        EXPECT(0xe2, gbc.readMem(0x89a8));
        // CB E2 031D
        gbc.setState(0x8bff, 0x6d6e, 0xf150, 0x992e, 0xbc79, 0xdb81, 0x1, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bff));
        EXPECT(0xe2, gbc.readMem(0x8c00));
        // CB E2 031E
        gbc.setState(0x239c, 0x4d1d, 0x2370, 0x8d91, 0x8136, 0x1045, 0x1, 0x1);
        gbc.writeMem(0x239c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 031F
        gbc.setState(0x8462, 0x9083, 0x5720, 0xd6f3, 0x1392, 0x4a9e, 0x1, 0x1);
        gbc.writeMem(0x8462, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9083, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8462));
        EXPECT(0xe2, gbc.readMem(0x8463));
        // CB E2 0320
        gbc.setState(0xda10, 0xc2c1, 0x4bb0, 0xe427, 0xca94, 0x2d80, 0x0, 0x1);
        gbc.writeMem(0xda10, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc2c1, gbc.sp());
        EXPECT(0xda12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda10));
        EXPECT(0xe2, gbc.readMem(0xda11));
        // CB E2 0321
        gbc.setState(0x898a, 0x87da, 0x4ca0, 0x956c, 0x4962, 0xb91c, 0x0, 0x0);
        gbc.writeMem(0x898a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x87da, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898a));
        EXPECT(0xe2, gbc.readMem(0x898b));
        // CB E2 0322
        gbc.setState(0x6a9f, 0x9b3b, 0x6140, 0x98fc, 0xd9f2, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x6a9f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0323
        gbc.setState(0x968e, 0x8edd, 0x8390, 0x3e3, 0x6c2, 0xd69c, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0x9690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968e));
        EXPECT(0xe2, gbc.readMem(0x968f));
        // CB E2 0324
        gbc.setState(0xd86a, 0x4924, 0x3bf0, 0x36e4, 0xa24d, 0x9fc1, 0x0, 0x0);
        gbc.writeMem(0xd86a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4924, gbc.sp());
        EXPECT(0xd86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86a));
        EXPECT(0xe2, gbc.readMem(0xd86b));
        // CB E2 0325
        gbc.setState(0x98bc, 0x89b9, 0x2a60, 0xab2f, 0xe80b, 0xf899, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bc));
        EXPECT(0xe2, gbc.readMem(0x98bd));
        // CB E2 0326
        gbc.setState(0xcdb6, 0xe657, 0x9cd0, 0x3582, 0x9981, 0x109, 0x1, 0x1);
        gbc.writeMem(0xcdb6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe657, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb6));
        EXPECT(0xe2, gbc.readMem(0xcdb7));
        // CB E2 0327
        gbc.setState(0xcd8f, 0x40da, 0x7270, 0xc83c, 0xc4aa, 0xb0f6, 0x1, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x40da, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8f));
        EXPECT(0xe2, gbc.readMem(0xcd90));
        // CB E2 0328
        gbc.setState(0x659c, 0x564e, 0xf820, 0xd8cb, 0xf994, 0x7586, 0x0, 0x1);
        gbc.writeMem(0x659c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x564e, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0329
        gbc.setState(0x5985, 0x5fec, 0x3e50, 0x1310, 0x40e, 0x815, 0x0, 0x1);
        gbc.writeMem(0x5985, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 032A
        gbc.setState(0x38b1, 0xd79d, 0xbc70, 0x8f12, 0xd55c, 0x6ddc, 0x1, 0x0);
        gbc.writeMem(0x38b1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd79d, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 032B
        gbc.setState(0xc01d, 0x823, 0xdfd0, 0x74c4, 0x17e9, 0x8045, 0x1, 0x1);
        gbc.writeMem(0xc01d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x823, gbc.sp());
        EXPECT(0xc01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01d));
        EXPECT(0xe2, gbc.readMem(0xc01e));
        // CB E2 032C
        gbc.setState(0x873b, 0x3f51, 0xe9e0, 0xe1bb, 0x91aa, 0x7ed3, 0x1, 0x0);
        gbc.writeMem(0x873b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3f51, gbc.sp());
        EXPECT(0x873d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873b));
        EXPECT(0xe2, gbc.readMem(0x873c));
        // CB E2 032D
        gbc.setState(0xc25d, 0x7d0d, 0x65a0, 0xc37f, 0x11e, 0xf12d, 0x0, 0x1);
        gbc.writeMem(0xc25d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7d0d, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25d));
        EXPECT(0xe2, gbc.readMem(0xc25e));
        // CB E2 032E
        gbc.setState(0x458f, 0xdb97, 0x59b0, 0x5916, 0xd6e7, 0x4760, 0x1, 0x1);
        gbc.writeMem(0x458f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0x4591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 032F
        gbc.setState(0x8283, 0x900a, 0x1a80, 0x7d52, 0x8422, 0x6024, 0x0, 0x1);
        gbc.writeMem(0x8283, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x900a, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8283));
        EXPECT(0xe2, gbc.readMem(0x8284));
        // CB E2 0330
        gbc.setState(0x4c28, 0x8de7, 0x4fb0, 0xcad8, 0x1ac9, 0x8851, 0x0, 0x0);
        gbc.writeMem(0x4c28, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0x4c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0332
        gbc.setState(0xe72e, 0xb41f, 0xe530, 0x264, 0x1e27, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0xe72e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb41f, gbc.sp());
        EXPECT(0xe730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72e));
        EXPECT(0xe2, gbc.readMem(0xe72f));
        // CB E2 0333
        gbc.setState(0x4057, 0x7950, 0xabc0, 0x9366, 0x69e6, 0xb120, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0x4059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0334
        gbc.setState(0x89cb, 0x2d90, 0xb80, 0x2b0d, 0x4b6d, 0x90c5, 0x0, 0x1);
        gbc.writeMem(0x89cb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2d90, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cb));
        EXPECT(0xe2, gbc.readMem(0x89cc));
        // CB E2 0335
        gbc.setState(0x99fa, 0x5fa7, 0xa7d0, 0x3e0a, 0xc98b, 0xaaf0, 0x0, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fa));
        EXPECT(0xe2, gbc.readMem(0x99fb));
        // CB E2 0337
        gbc.setState(0x2e5b, 0x847e, 0xc640, 0xf97, 0xf25, 0x18fc, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x847e, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0338
        gbc.setState(0x562e, 0xb938, 0x9250, 0xf2a6, 0x73e6, 0x12e5, 0x0, 0x1);
        gbc.writeMem(0x562e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0339
        gbc.setState(0x28a, 0xaecb, 0x8220, 0xeef2, 0xe530, 0x7875, 0x0, 0x1);
        gbc.writeMem(0x28a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaecb, gbc.sp());
        EXPECT(0x28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 033A
        gbc.setState(0xcf2b, 0x5264, 0x1ec0, 0x931f, 0x9dc7, 0xd28, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5264, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0xe2, gbc.readMem(0xcf2c));
        // CB E2 033B
        gbc.setState(0x525, 0xe6a4, 0xbe90, 0xffa, 0xe3a9, 0x959a, 0x1, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe6a4, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 033C
        gbc.setState(0xb464, 0xe10d, 0xa050, 0x8858, 0xacf7, 0xb0cd, 0x0, 0x0);
        gbc.writeMem(0xb464, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xb466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb464));
        EXPECT(0xe2, gbc.readMem(0xb465));
        // CB E2 033E
        gbc.setState(0x9324, 0x6b8a, 0x3630, 0xccc9, 0xa16c, 0xfeb5, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6b8a, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9324));
        EXPECT(0xe2, gbc.readMem(0x9325));
        // CB E2 033F
        gbc.setState(0x49c5, 0xb2a2, 0xafb0, 0x3cd4, 0xd3d9, 0x66f5, 0x0, 0x0);
        gbc.writeMem(0x49c5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x49c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0340
        gbc.setState(0xe9d3, 0x1d0d, 0xcb70, 0x7ee0, 0xda36, 0x80fe, 0x1, 0x0);
        gbc.writeMem(0xe9d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1d0d, gbc.sp());
        EXPECT(0xe9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d3));
        EXPECT(0xe2, gbc.readMem(0xe9d4));
        // CB E2 0341
        gbc.setState(0x3357, 0x2dc6, 0x840, 0x3e91, 0xe145, 0x376d, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2dc6, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0342
        gbc.setState(0x7bed, 0xfda, 0x5ef0, 0xcdc7, 0x82e9, 0x14c3, 0x1, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfda, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0343
        gbc.setState(0x4317, 0xba53, 0x5ac0, 0x67de, 0x95e7, 0xbe5a, 0x0, 0x0);
        gbc.writeMem(0x4317, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xba53, gbc.sp());
        EXPECT(0x4319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0344
        gbc.setState(0xec05, 0xf2b3, 0xa20, 0x528f, 0xd5ed, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0xec05, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf2b3, gbc.sp());
        EXPECT(0xec07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec05));
        EXPECT(0xe2, gbc.readMem(0xec06));
        // CB E2 0345
        gbc.setState(0x2228, 0xbf67, 0x2860, 0x461a, 0xbf62, 0xcdec, 0x0, 0x1);
        gbc.writeMem(0x2228, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0x222a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0346
        gbc.setState(0x3146, 0x38f4, 0xc60, 0x24fe, 0x744c, 0x2c39, 0x0, 0x0);
        gbc.writeMem(0x3146, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0347
        gbc.setState(0x6802, 0xa267, 0xfe80, 0x33be, 0xb761, 0xfeb9, 0x1, 0x0);
        gbc.writeMem(0x6802, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0348
        gbc.setState(0x2d1f, 0xc1e5, 0xf280, 0xba62, 0x8ba3, 0x47d1, 0x1, 0x1);
        gbc.writeMem(0x2d1f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0x2d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0349
        gbc.setState(0x909c, 0xb39f, 0x4720, 0x7350, 0xcdd7, 0x1ad5, 0x0, 0x1);
        gbc.writeMem(0x909c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb39f, gbc.sp());
        EXPECT(0x909e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909c));
        EXPECT(0xe2, gbc.readMem(0x909d));
        // CB E2 034A
        gbc.setState(0xcf91, 0x70c7, 0x93e0, 0x4ecd, 0x23ec, 0x9497, 0x1, 0x1);
        gbc.writeMem(0xcf91, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x70c7, gbc.sp());
        EXPECT(0xcf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf91));
        EXPECT(0xe2, gbc.readMem(0xcf92));
        // CB E2 034B
        gbc.setState(0x79e, 0xb1f6, 0x92c0, 0x1e59, 0x4dac, 0xaf42, 0x1, 0x0);
        gbc.writeMem(0x79e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0x7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 034C
        gbc.setState(0xb58a, 0x93b8, 0x5520, 0x7d0f, 0x6883, 0xa953, 0x0, 0x1);
        gbc.writeMem(0xb58a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x93b8, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58a));
        EXPECT(0xe2, gbc.readMem(0xb58b));
        // CB E2 034D
        gbc.setState(0xac12, 0xd120, 0x330, 0x34ba, 0x298c, 0xe82b, 0x0, 0x0);
        gbc.writeMem(0xac12, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0xac14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac12));
        EXPECT(0xe2, gbc.readMem(0xac13));
        // CB E2 034E
        gbc.setState(0x25c2, 0x91b5, 0x490, 0x3a7d, 0x2487, 0x3319, 0x0, 0x0);
        gbc.writeMem(0x25c2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x25c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 034F
        gbc.setState(0x42d7, 0xa385, 0x36f0, 0xadaf, 0xd583, 0xc883, 0x0, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa385, gbc.sp());
        EXPECT(0x42d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0350
        gbc.setState(0x5c82, 0x2241, 0xb540, 0xd8c8, 0x2e0e, 0xc0c1, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0x5c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0351
        gbc.setState(0x220b, 0x35a1, 0x54d0, 0x7916, 0x4b37, 0xe968, 0x1, 0x0);
        gbc.writeMem(0x220b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x35a1, gbc.sp());
        EXPECT(0x220d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0352
        gbc.setState(0x7ce7, 0xdf6f, 0xe390, 0x74c1, 0xb0fe, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x7ce7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0353
        gbc.setState(0xe810, 0x83cf, 0x7eb0, 0xd62a, 0x345, 0x1eef, 0x1, 0x0);
        gbc.writeMem(0xe810, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe810));
        EXPECT(0xe2, gbc.readMem(0xe811));
        // CB E2 0354
        gbc.setState(0x626b, 0x8f88, 0xd790, 0x1fb6, 0x75e8, 0x1d1e, 0x1, 0x1);
        gbc.writeMem(0x626b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8f88, gbc.sp());
        EXPECT(0x626d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0355
        gbc.setState(0xabb1, 0x6338, 0xd260, 0xc811, 0x4cb, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0xabb1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb1));
        EXPECT(0xe2, gbc.readMem(0xabb2));
        // CB E2 0356
        gbc.setState(0x387, 0xc5a9, 0x4400, 0xbb81, 0x5018, 0x6de, 0x0, 0x1);
        gbc.writeMem(0x387, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0357
        gbc.setState(0x171d, 0x1b22, 0x7430, 0xc8d3, 0xe290, 0x6a55, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1b22, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0359
        gbc.setState(0xbae, 0xddf, 0xad90, 0x3097, 0x8107, 0x7fb9, 0x0, 0x0);
        gbc.writeMem(0xbae, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xddf, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 035A
        gbc.setState(0x928a, 0x7030, 0xf730, 0xa128, 0x11c9, 0x7ecd, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928a));
        EXPECT(0xe2, gbc.readMem(0x928b));
        // CB E2 035B
        gbc.setState(0x9c17, 0xba3, 0x1b30, 0x1c27, 0xaf4b, 0xa371, 0x0, 0x0);
        gbc.writeMem(0x9c17, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xba3, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c17));
        EXPECT(0xe2, gbc.readMem(0x9c18));
        // CB E2 035C
        gbc.setState(0x3de5, 0x25fd, 0x31c0, 0x77c4, 0x4653, 0xe0e6, 0x0, 0x0);
        gbc.writeMem(0x3de5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x25fd, gbc.sp());
        EXPECT(0x3de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 035D
        gbc.setState(0x1458, 0x2411, 0xb6a0, 0xc2, 0xb868, 0x3847, 0x0, 0x1);
        gbc.writeMem(0x1458, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0x145a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 035E
        gbc.setState(0x2d0, 0xa7c8, 0x2bd0, 0xb471, 0x5e3f, 0x60ca, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 035F
        gbc.setState(0x127d, 0xb681, 0x8cb0, 0xfa48, 0x4b19, 0x79c6, 0x0, 0x1);
        gbc.writeMem(0x127d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb681, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0360
        gbc.setState(0xd3fa, 0x92b3, 0x65b0, 0x6fd, 0x753, 0x7822, 0x0, 0x0);
        gbc.writeMem(0xd3fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x92b3, gbc.sp());
        EXPECT(0xd3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fa));
        EXPECT(0xe2, gbc.readMem(0xd3fb));
        // CB E2 0361
        gbc.setState(0x95ca, 0x7cf3, 0xbe30, 0x776, 0x24a8, 0xe67d, 0x1, 0x0);
        gbc.writeMem(0x95ca, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7cf3, gbc.sp());
        EXPECT(0x95cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ca));
        EXPECT(0xe2, gbc.readMem(0x95cb));
        // CB E2 0362
        gbc.setState(0x743f, 0xf00a, 0x2680, 0xefb5, 0xbf36, 0x53cd, 0x0, 0x1);
        gbc.writeMem(0x743f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0363
        gbc.setState(0x24d3, 0xab94, 0x5530, 0x1543, 0xa64d, 0xb34e, 0x1, 0x1);
        gbc.writeMem(0x24d3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x24d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0364
        gbc.setState(0x4f0b, 0x609f, 0xe5f0, 0xa130, 0xf7fb, 0x70fb, 0x0, 0x1);
        gbc.writeMem(0x4f0b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0365
        gbc.setState(0xbc24, 0x9f75, 0xcc80, 0xf8ac, 0x5ffc, 0x9f00, 0x0, 0x0);
        gbc.writeMem(0xbc24, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9f75, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0xe2, gbc.readMem(0xbc25));
        // CB E2 0366
        gbc.setState(0x71e7, 0xbabd, 0xe890, 0x4ee1, 0xcedd, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x71e7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0367
        gbc.setState(0xa92b, 0xb585, 0xa240, 0x3549, 0x623f, 0x31b7, 0x1, 0x0);
        gbc.writeMem(0xa92b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0xa92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92b));
        EXPECT(0xe2, gbc.readMem(0xa92c));
        // CB E2 0368
        gbc.setState(0xc720, 0xdbb6, 0x42a0, 0xdf63, 0x7947, 0x8b88, 0x0, 0x0);
        gbc.writeMem(0xc720, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdbb6, gbc.sp());
        EXPECT(0xc722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc720));
        EXPECT(0xe2, gbc.readMem(0xc721));
        // CB E2 0369
        gbc.setState(0x4078, 0xb87f, 0xe330, 0xa56e, 0xf7e8, 0x8677, 0x0, 0x1);
        gbc.writeMem(0x4078, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0x407a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 036A
        gbc.setState(0x626f, 0x954b, 0xc390, 0x1817, 0x5a5b, 0xb15, 0x1, 0x0);
        gbc.writeMem(0x626f, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x6271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 036B
        gbc.setState(0x9a6b, 0x2be8, 0x4f10, 0x239a, 0xfdf, 0xb9b3, 0x1, 0x1);
        gbc.writeMem(0x9a6b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2be8, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6b));
        EXPECT(0xe2, gbc.readMem(0x9a6c));
        // CB E2 036C
        gbc.setState(0xb3e3, 0xbf85, 0x22a0, 0xfadb, 0x39de, 0xa018, 0x0, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf85, gbc.sp());
        EXPECT(0xb3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e3));
        EXPECT(0xe2, gbc.readMem(0xb3e4));
        // CB E2 036D
        gbc.setState(0xc9e, 0x459c, 0x1e40, 0x29f3, 0xbeb4, 0x2ad5, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x459c, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 036E
        gbc.setState(0x9e44, 0xa0c3, 0x3b20, 0x4911, 0x345f, 0x2261, 0x1, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa0c3, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e44));
        EXPECT(0xe2, gbc.readMem(0x9e45));
        // CB E2 036F
        gbc.setState(0x7068, 0x8cd7, 0xa3b0, 0xbdcc, 0x4415, 0xbd5d, 0x0, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8cd7, gbc.sp());
        EXPECT(0x706a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0371
        gbc.setState(0xc5ec, 0x43d9, 0x6a40, 0x6186, 0x1465, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0xc5ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x43d9, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ec));
        EXPECT(0xe2, gbc.readMem(0xc5ed));
        // CB E2 0372
        gbc.setState(0xd771, 0xcf71, 0x490, 0xb4b4, 0x6bf4, 0xf41, 0x1, 0x0);
        gbc.writeMem(0xd771, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcf71, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd771));
        EXPECT(0xe2, gbc.readMem(0xd772));
        // CB E2 0373
        gbc.setState(0x1dda, 0x4bb0, 0xe0e0, 0x743, 0x26da, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x1dda, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4bb0, gbc.sp());
        EXPECT(0x1ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0375
        gbc.setState(0x63ec, 0x22ff, 0x64f0, 0x6687, 0x8c43, 0x1877, 0x1, 0x0);
        gbc.writeMem(0x63ec, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x22ff, gbc.sp());
        EXPECT(0x63ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0376
        gbc.setState(0x6bbf, 0x94bf, 0x6420, 0xa1d4, 0x7635, 0xaa53, 0x1, 0x0);
        gbc.writeMem(0x6bbf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x94bf, gbc.sp());
        EXPECT(0x6bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0377
        gbc.setState(0xa9e0, 0x8626, 0xb4c0, 0xa4e0, 0x9c44, 0x2c88, 0x1, 0x1);
        gbc.writeMem(0xa9e0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0xa9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e0));
        EXPECT(0xe2, gbc.readMem(0xa9e1));
        // CB E2 0378
        gbc.setState(0x42c4, 0x92ea, 0x7280, 0x8e0e, 0xafa8, 0x436f, 0x0, 0x1);
        gbc.writeMem(0x42c4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0379
        gbc.setState(0x9e6e, 0x2d12, 0xa370, 0x80a3, 0xa26c, 0x61b3, 0x0, 0x0);
        gbc.writeMem(0x9e6e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2d12, gbc.sp());
        EXPECT(0x9e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6e));
        EXPECT(0xe2, gbc.readMem(0x9e6f));
        // CB E2 037A
        gbc.setState(0xd573, 0x5ebe, 0xadb0, 0x4659, 0x6423, 0x293b, 0x1, 0x1);
        gbc.writeMem(0xd573, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5ebe, gbc.sp());
        EXPECT(0xd575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd573));
        EXPECT(0xe2, gbc.readMem(0xd574));
        // CB E2 037B
        gbc.setState(0x51b6, 0x6e89, 0x2da0, 0x47c3, 0xa614, 0x685d, 0x1, 0x1);
        gbc.writeMem(0x51b6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6e89, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 037C
        gbc.setState(0xc753, 0xab22, 0x6520, 0x9dfd, 0x75fd, 0xc183, 0x0, 0x1);
        gbc.writeMem(0xc753, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc753));
        EXPECT(0xe2, gbc.readMem(0xc754));
        // CB E2 037D
        gbc.setState(0x9df7, 0x4257, 0x11e0, 0x6594, 0x4c9, 0xba56, 0x1, 0x0);
        gbc.writeMem(0x9df7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0x9df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df7));
        EXPECT(0xe2, gbc.readMem(0x9df8));
        // CB E2 037E
        gbc.setState(0xa27c, 0x7295, 0xc7c0, 0xa666, 0x95a9, 0x89b, 0x1, 0x1);
        gbc.writeMem(0xa27c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0xa27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27c));
        EXPECT(0xe2, gbc.readMem(0xa27d));
        // CB E2 037F
        gbc.setState(0x58fa, 0xf91d, 0x8520, 0x1104, 0xac56, 0xb54c, 0x1, 0x1);
        gbc.writeMem(0x58fa, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0x58fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0380
        gbc.setState(0x9b7e, 0xa4, 0xfc60, 0xdc4d, 0xac56, 0xc7e4, 0x0, 0x0);
        gbc.writeMem(0x9b7e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa4, gbc.sp());
        EXPECT(0x9b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7e));
        EXPECT(0xe2, gbc.readMem(0x9b7f));
        // CB E2 0381
        gbc.setState(0xde66, 0xd038, 0x6f50, 0x83bf, 0xb966, 0xf873, 0x0, 0x1);
        gbc.writeMem(0xde66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd038, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde66));
        EXPECT(0xe2, gbc.readMem(0xde67));
        // CB E2 0382
        gbc.setState(0x35a6, 0xd4e9, 0xc080, 0xa32b, 0x1b7f, 0xda1b, 0x1, 0x0);
        gbc.writeMem(0x35a6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd4e9, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0383
        gbc.setState(0xb144, 0x618d, 0x5180, 0x38ac, 0x4959, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0xb144, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0xb146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb144));
        EXPECT(0xe2, gbc.readMem(0xb145));
        // CB E2 0384
        gbc.setState(0xca59, 0x66dc, 0xc120, 0x145e, 0xcc2b, 0x38fd, 0x1, 0x1);
        gbc.writeMem(0xca59, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x66dc, gbc.sp());
        EXPECT(0xca5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca59));
        EXPECT(0xe2, gbc.readMem(0xca5a));
        // CB E2 0385
        gbc.setState(0xbe8, 0xaba1, 0x8440, 0xcdbf, 0xb027, 0x6d13, 0x1, 0x1);
        gbc.writeMem(0xbe8, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaba1, gbc.sp());
        EXPECT(0xbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0386
        gbc.setState(0xa556, 0x698d, 0x2090, 0x153e, 0x4212, 0xf1af, 0x1, 0x1);
        gbc.writeMem(0xa556, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x698d, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa556));
        EXPECT(0xe2, gbc.readMem(0xa557));
        // CB E2 0387
        gbc.setState(0x87e9, 0x213a, 0x3460, 0xedc2, 0xd1bd, 0xa9e3, 0x1, 0x0);
        gbc.writeMem(0x87e9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x213a, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e9));
        EXPECT(0xe2, gbc.readMem(0x87ea));
        // CB E2 0388
        gbc.setState(0x966e, 0xa43, 0x30f0, 0xa48a, 0xfc2b, 0x668f, 0x0, 0x1);
        gbc.writeMem(0x966e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa43, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966e));
        EXPECT(0xe2, gbc.readMem(0x966f));
        // CB E2 0389
        gbc.setState(0x2636, 0x9ef9, 0x8f90, 0x547e, 0x10ed, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9ef9, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 038A
        gbc.setState(0xc2ac, 0xa842, 0x3590, 0xe079, 0xa12d, 0xaec5, 0x1, 0x0);
        gbc.writeMem(0xc2ac, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0xc2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ac));
        EXPECT(0xe2, gbc.readMem(0xc2ad));
        // CB E2 038B
        gbc.setState(0xef5a, 0x85bf, 0xa030, 0xbfdd, 0xd4b6, 0xd0c2, 0x1, 0x0);
        gbc.writeMem(0xef5a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x85bf, gbc.sp());
        EXPECT(0xef5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5a));
        EXPECT(0xe2, gbc.readMem(0xef5b));
        // CB E2 038C
        gbc.setState(0xc99, 0x3407, 0x5620, 0x8206, 0xb62e, 0x21fd, 0x1, 0x1);
        gbc.writeMem(0xc99, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 038D
        gbc.setState(0x442, 0xbf29, 0x45b0, 0x7411, 0x606, 0x4f0, 0x1, 0x1);
        gbc.writeMem(0x442, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 038F
        gbc.setState(0x78c6, 0xa0bf, 0x210, 0xa639, 0x8906, 0x1751, 0x1, 0x0);
        gbc.writeMem(0x78c6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x78c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0390
        gbc.setState(0x83f3, 0xab9c, 0x3a60, 0x243e, 0xba6c, 0xa296, 0x0, 0x1);
        gbc.writeMem(0x83f3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xab9c, gbc.sp());
        EXPECT(0x83f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f3));
        EXPECT(0xe2, gbc.readMem(0x83f4));
        // CB E2 0391
        gbc.setState(0x774e, 0x9cd2, 0x8890, 0x2520, 0x8c24, 0xf685, 0x0, 0x1);
        gbc.writeMem(0x774e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0x7750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0392
        gbc.setState(0x1942, 0x2383, 0xf880, 0xdedf, 0x442b, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x1942, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 0393
        gbc.setState(0xa492, 0x110e, 0xa650, 0xa759, 0x13df, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xa492, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x110e, gbc.sp());
        EXPECT(0xa494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa492));
        EXPECT(0xe2, gbc.readMem(0xa493));
        // CB E2 0395
        gbc.setState(0x49e6, 0xb4fd, 0xe050, 0xe26, 0x2d52, 0x7a9, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb4fd, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 0396
        gbc.setState(0xce4b, 0x3d85, 0xedf0, 0x1d0e, 0x1a8d, 0x2df, 0x1, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3d85, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4b));
        EXPECT(0xe2, gbc.readMem(0xce4c));
        // CB E2 0397
        gbc.setState(0xac66, 0x3efb, 0xcfd0, 0xea03, 0xa8b2, 0x1438, 0x1, 0x1);
        gbc.writeMem(0xac66, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0xac68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac66));
        EXPECT(0xe2, gbc.readMem(0xac67));
        // CB E2 0399
        gbc.setState(0xadde, 0xdbcf, 0xdd00, 0xb969, 0x7808, 0x84ca, 0x0, 0x1);
        gbc.writeMem(0xadde, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdbcf, gbc.sp());
        EXPECT(0xade0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadde));
        EXPECT(0xe2, gbc.readMem(0xaddf));
        // CB E2 039A
        gbc.setState(0x41db, 0x90e9, 0xd030, 0x127a, 0x8b54, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x90e9, gbc.sp());
        EXPECT(0x41dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 039B
        gbc.setState(0x12f9, 0x6210, 0xcb10, 0x646e, 0xb9ce, 0xbe4e, 0x0, 0x0);
        gbc.writeMem(0x12f9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0x12fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 039D
        gbc.setState(0xd1d4, 0x340d, 0x1cb0, 0x5b2d, 0x1974, 0xb131, 0x1, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x340d, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0xe2, gbc.readMem(0xd1d5));
        // CB E2 039E
        gbc.setState(0x1b9, 0x5869, 0x3890, 0x5e9a, 0xc2ce, 0xe0b4, 0x0, 0x1);
        gbc.writeMem(0x1b9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0x1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 039F
        gbc.setState(0x8df7, 0x1f6, 0xd220, 0xb89c, 0xd2ef, 0x62c2, 0x0, 0x1);
        gbc.writeMem(0x8df7, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1f6, gbc.sp());
        EXPECT(0x8df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df7));
        EXPECT(0xe2, gbc.readMem(0x8df8));
        // CB E2 03A0
        gbc.setState(0x21eb, 0xad03, 0x9b30, 0x729, 0xd871, 0x9c92, 0x0, 0x0);
        gbc.writeMem(0x21eb, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x21ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03A1
        gbc.setState(0x42bc, 0x8f92, 0xb930, 0xfbec, 0x3c5, 0x1752, 0x0, 0x1);
        gbc.writeMem(0x42bc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8f92, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03A3
        gbc.setState(0x3985, 0xf6b6, 0x4a20, 0xe965, 0x5463, 0x2384, 0x1, 0x1);
        gbc.writeMem(0x3985, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf6b6, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03A4
        gbc.setState(0xd5a3, 0x45eb, 0xe270, 0x15a7, 0xc74c, 0x8436, 0x1, 0x1);
        gbc.writeMem(0xd5a3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x45eb, gbc.sp());
        EXPECT(0xd5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a3));
        EXPECT(0xe2, gbc.readMem(0xd5a4));
        // CB E2 03A5
        gbc.setState(0x7dd1, 0x6a40, 0x47b0, 0x5e3, 0xe84, 0x7b3b, 0x0, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6a40, gbc.sp());
        EXPECT(0x7dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03A6
        gbc.setState(0x6405, 0x82eb, 0x5570, 0xcd9a, 0xcced, 0x2120, 0x0, 0x0);
        gbc.writeMem(0x6405, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03A7
        gbc.setState(0xbdc1, 0x516d, 0xfd10, 0x6c7a, 0x8f9e, 0x7c8c, 0x1, 0x0);
        gbc.writeMem(0xbdc1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0xbdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc1));
        EXPECT(0xe2, gbc.readMem(0xbdc2));
        // CB E2 03A8
        gbc.setState(0x4b22, 0x7fd2, 0xf740, 0xec81, 0x732b, 0x64e3, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7fd2, gbc.sp());
        EXPECT(0x4b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03A9
        gbc.setState(0xb5d0, 0x655f, 0xd1d0, 0x1403, 0xa7d8, 0x1c37, 0x1, 0x1);
        gbc.writeMem(0xb5d0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x655f, gbc.sp());
        EXPECT(0xb5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d0));
        EXPECT(0xe2, gbc.readMem(0xb5d1));
        // CB E2 03AA
        gbc.setState(0xec39, 0xbe8c, 0x8750, 0x4198, 0xf5f4, 0xf970, 0x0, 0x0);
        gbc.writeMem(0xec39, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0xec3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec39));
        EXPECT(0xe2, gbc.readMem(0xec3a));
        // CB E2 03AB
        gbc.setState(0x64e6, 0x10fb, 0x84b0, 0x2004, 0xf024, 0x4152, 0x1, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03AC
        gbc.setState(0x1766, 0xcadd, 0x6ef0, 0xf9da, 0x3680, 0xbc0d, 0x0, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcadd, gbc.sp());
        EXPECT(0x1768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03AD
        gbc.setState(0xdc65, 0x8d0b, 0x6620, 0x30e2, 0x4350, 0xdb52, 0x0, 0x1);
        gbc.writeMem(0xdc65, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0xe2, gbc.readMem(0xdc66));
        // CB E2 03AE
        gbc.setState(0x6ee4, 0x8724, 0xeba0, 0x7f6, 0x6943, 0x10c0, 0x0, 0x1);
        gbc.writeMem(0x6ee4, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8724, gbc.sp());
        EXPECT(0x6ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03AF
        gbc.setState(0x50b6, 0x5c27, 0xe6f0, 0x4930, 0xa97f, 0x8b25, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5c27, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03B0
        gbc.setState(0xd476, 0xfb84, 0xae20, 0xe476, 0x8c02, 0x4038, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfb84, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd476));
        EXPECT(0xe2, gbc.readMem(0xd477));
        // CB E2 03B1
        gbc.setState(0x9cd2, 0x3619, 0xfc50, 0xf7cb, 0x3f2, 0xa0c8, 0x1, 0x0);
        gbc.writeMem(0x9cd2, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3619, gbc.sp());
        EXPECT(0x9cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd2));
        EXPECT(0xe2, gbc.readMem(0x9cd3));
        // CB E2 03B2
        gbc.setState(0x7831, 0x4e9b, 0xf070, 0xa416, 0xb958, 0xc92d, 0x0, 0x1);
        gbc.writeMem(0x7831, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03B3
        gbc.setState(0x5a1c, 0xf352, 0x24f0, 0x1313, 0xda4f, 0xea41, 0x1, 0x0);
        gbc.writeMem(0x5a1c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf352, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03B4
        gbc.setState(0x8188, 0x1536, 0x1360, 0x478b, 0x445f, 0x58ae, 0x1, 0x0);
        gbc.writeMem(0x8188, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8188));
        EXPECT(0xe2, gbc.readMem(0x8189));
        // CB E2 03B5
        gbc.setState(0x333, 0xc36c, 0x9280, 0x7f57, 0xcf8a, 0xfef2, 0x0, 0x1);
        gbc.writeMem(0x333, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0x335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03B6
        gbc.setState(0xa55b, 0x76cd, 0x3580, 0xdf36, 0x2b3, 0x2655, 0x1, 0x0);
        gbc.writeMem(0xa55b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0xa55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55b));
        EXPECT(0xe2, gbc.readMem(0xa55c));
        // CB E2 03B7
        gbc.setState(0xbb42, 0x54c5, 0x450, 0xd9ac, 0x423, 0x20ae, 0x0, 0x1);
        gbc.writeMem(0xbb42, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x54c5, gbc.sp());
        EXPECT(0xbb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb42));
        EXPECT(0xe2, gbc.readMem(0xbb43));
        // CB E2 03B8
        gbc.setState(0xc2ed, 0xaec4, 0xa9d0, 0x617e, 0x1105, 0xe0f2, 0x1, 0x1);
        gbc.writeMem(0xc2ed, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0xc2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ed));
        EXPECT(0xe2, gbc.readMem(0xc2ee));
        // CB E2 03B9
        gbc.setState(0x573c, 0xff99, 0xfad0, 0xcfe0, 0xaa9d, 0x28c2, 0x1, 0x0);
        gbc.writeMem(0x573c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xff99, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03BA
        gbc.setState(0x9233, 0x3cd7, 0xb800, 0x7407, 0x8232, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3cd7, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0xe2, gbc.readMem(0x9234));
        // CB E2 03BB
        gbc.setState(0x366a, 0x91c9, 0x39f0, 0x41cf, 0x1547, 0x5b35, 0x0, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x91c9, gbc.sp());
        EXPECT(0x366c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03BC
        gbc.setState(0x5d20, 0x43d4, 0x91d0, 0xb01a, 0xd2ac, 0xe0fa, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0x5d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03BD
        gbc.setState(0x8528, 0x430a, 0x5bf0, 0x4436, 0x8c30, 0xa40f, 0x0, 0x1);
        gbc.writeMem(0x8528, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x430a, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0xe2, gbc.readMem(0x8529));
        // CB E2 03BE
        gbc.setState(0x330e, 0x1089, 0x3b90, 0x7d02, 0x2ad1, 0x7745, 0x1, 0x1);
        gbc.writeMem(0x330e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1089, gbc.sp());
        EXPECT(0x3310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03BF
        gbc.setState(0x5021, 0x1b0b, 0x2820, 0xd9a3, 0xf64a, 0x5441, 0x1, 0x1);
        gbc.writeMem(0x5021, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0x5023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03C0
        gbc.setState(0x6ab0, 0x24da, 0x490, 0xfd5b, 0xf6e, 0x73ad, 0x1, 0x1);
        gbc.writeMem(0x6ab0, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03C1
        gbc.setState(0x795d, 0x898e, 0x3520, 0xe39b, 0x510f, 0x71a6, 0x1, 0x1);
        gbc.writeMem(0x795d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03C2
        gbc.setState(0xa89c, 0x6415, 0x7510, 0x5840, 0xc935, 0x5ae1, 0x0, 0x1);
        gbc.writeMem(0xa89c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0xa89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89c));
        EXPECT(0xe2, gbc.readMem(0xa89d));
        // CB E2 03C3
        gbc.setState(0x234e, 0xf225, 0x43a0, 0x3b0c, 0x3838, 0xa725, 0x1, 0x1);
        gbc.writeMem(0x234e, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03C5
        gbc.setState(0x16d9, 0x458d, 0x3670, 0x81df, 0xe7a0, 0xcc98, 0x0, 0x1);
        gbc.writeMem(0x16d9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x458d, gbc.sp());
        EXPECT(0x16db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03C6
        gbc.setState(0x3d36, 0xe731, 0x58d0, 0x90c7, 0xd76f, 0xbafd, 0x1, 0x0);
        gbc.writeMem(0x3d36, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe731, gbc.sp());
        EXPECT(0x3d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03C7
        gbc.setState(0x4852, 0x34a2, 0xfc60, 0x9ab4, 0x2de, 0x69c2, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x34a2, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03C8
        gbc.setState(0xd7dc, 0x4d86, 0xb700, 0x51ab, 0xe185, 0x1c38, 0x0, 0x1);
        gbc.writeMem(0xd7dc, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4d86, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7dc));
        EXPECT(0xe2, gbc.readMem(0xd7dd));
        // CB E2 03C9
        gbc.setState(0x7076, 0x661e, 0xebe0, 0xa143, 0xdf08, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x7076, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x661e, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03CA
        gbc.setState(0xab80, 0xe921, 0x8a70, 0x7921, 0x9d04, 0x3082, 0x1, 0x0);
        gbc.writeMem(0xab80, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe921, gbc.sp());
        EXPECT(0xab82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab80));
        EXPECT(0xe2, gbc.readMem(0xab81));
        // CB E2 03CB
        gbc.setState(0x2f70, 0xabf2, 0x5420, 0xc551, 0x611d, 0xb0d5, 0x1, 0x1);
        gbc.writeMem(0x2f70, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03CC
        gbc.setState(0x676d, 0x5811, 0x8650, 0xd5f8, 0x110f, 0x53ff, 0x1, 0x1);
        gbc.writeMem(0x676d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5811, gbc.sp());
        EXPECT(0x676f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03CE
        gbc.setState(0x6b0b, 0x5184, 0x91d0, 0xfeba, 0x6053, 0x963a, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03CF
        gbc.setState(0xdd3b, 0x6852, 0xb790, 0xbde9, 0x1c95, 0xf190, 0x0, 0x0);
        gbc.writeMem(0xdd3b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0xdd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3b));
        EXPECT(0xe2, gbc.readMem(0xdd3c));
        // CB E2 03D0
        gbc.setState(0xef1b, 0x4da4, 0x50, 0x537b, 0xd847, 0x7cb7, 0x0, 0x0);
        gbc.writeMem(0xef1b, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4da4, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1b));
        EXPECT(0xe2, gbc.readMem(0xef1c));
        // CB E2 03D1
        gbc.setState(0x5add, 0x5a5b, 0x4380, 0x1551, 0x5f97, 0x64ab, 0x1, 0x1);
        gbc.writeMem(0x5add, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5a5b, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03D2
        gbc.setState(0xc521, 0x87fe, 0xf970, 0x8de7, 0xd2a3, 0xf4cc, 0x1, 0x0);
        gbc.writeMem(0xc521, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc521));
        EXPECT(0xe2, gbc.readMem(0xc522));
        // CB E2 03D3
        gbc.setState(0x8fe5, 0x9fce, 0xcf20, 0x5a43, 0x218a, 0xafeb, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9fce, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0xe2, gbc.readMem(0x8fe6));
        // CB E2 03D4
        gbc.setState(0x8824, 0xc5ec, 0x3e80, 0xaa65, 0x5baf, 0x515f, 0x1, 0x1);
        gbc.writeMem(0x8824, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc5ec, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0xe2, gbc.readMem(0x8825));
        // CB E2 03D5
        gbc.setState(0x2135, 0x21f2, 0xef40, 0xf4a1, 0x7c04, 0xe832, 0x0, 0x1);
        gbc.writeMem(0x2135, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x21f2, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03D6
        gbc.setState(0x1a5c, 0x3335, 0x71e0, 0xa95, 0x168d, 0xab43, 0x0, 0x1);
        gbc.writeMem(0x1a5c, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3335, gbc.sp());
        EXPECT(0x1a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03D7
        gbc.setState(0x4446, 0xde2c, 0x4c60, 0x90f8, 0x4cba, 0x4667, 0x0, 0x1);
        gbc.writeMem(0x4446, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03D8
        gbc.setState(0x373a, 0x1212, 0x94b0, 0x72e6, 0x13b6, 0xd56a, 0x1, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0x373c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03D9
        gbc.setState(0x6b48, 0x92e5, 0xd6c0, 0xba39, 0xb851, 0x93b0, 0x1, 0x0);
        gbc.writeMem(0x6b48, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x92e5, gbc.sp());
        EXPECT(0x6b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03DB
        gbc.setState(0x3a04, 0xd22b, 0x3c0, 0xe864, 0x866b, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd22b, gbc.sp());
        EXPECT(0x3a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03DC
        gbc.setState(0xb3ab, 0x2ef8, 0xd0d0, 0xf8f5, 0x9adb, 0x7329, 0x0, 0x0);
        gbc.writeMem(0xb3ab, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0xb3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ab));
        EXPECT(0xe2, gbc.readMem(0xb3ac));
        // CB E2 03DD
        gbc.setState(0xe4a9, 0x16ad, 0x1850, 0xae9c, 0xfa71, 0xe5d8, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0xe2, gbc.readMem(0xe4aa));
        // CB E2 03DE
        gbc.setState(0xe323, 0xbe88, 0x3f60, 0xcd4e, 0xf4d1, 0xabff, 0x1, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe323));
        EXPECT(0xe2, gbc.readMem(0xe324));
        // CB E2 03DF
        gbc.setState(0x7f72, 0xe29a, 0xe110, 0xf46, 0x558d, 0xdd3, 0x0, 0x0);
        gbc.writeMem(0x7f72, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0x7f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03E0
        gbc.setState(0x6277, 0x645f, 0xf800, 0x6d7, 0x1071, 0xce69, 0x1, 0x0);
        gbc.writeMem(0x6277, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x645f, gbc.sp());
        EXPECT(0x6279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03E1
        gbc.setState(0x98a, 0x1c2f, 0x7500, 0xdd72, 0xf68e, 0x7bbb, 0x0, 0x1);
        gbc.writeMem(0x98a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0x98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03E2
        gbc.setState(0x249d, 0xa913, 0xb480, 0xd92f, 0xd6d6, 0x7a9c, 0x0, 0x0);
        gbc.writeMem(0x249d, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa913, gbc.sp());
        EXPECT(0x249f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03E3
        gbc.setState(0xa8bf, 0x8427, 0x4640, 0xae57, 0xbe6b, 0x8a8f, 0x1, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0xe2, gbc.readMem(0xa8c0));
        // CB E2 03E4
        gbc.setState(0x6e8a, 0xb3b2, 0x4e50, 0x7248, 0x7b71, 0xb19, 0x0, 0x1);
        gbc.writeMem(0x6e8a, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb3b2, gbc.sp());
        EXPECT(0x6e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E2 03E5
        gbc.setState(0xaad1, 0x597, 0xd8b0, 0xf07a, 0x26ce, 0x3d20, 0x1, 0x1);
        gbc.writeMem(0xaad1, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x597, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0xe2, gbc.readMem(0xaad2));
        // CB E2 03E6
        gbc.setState(0x78b3, 0xe711, 0x1a0, 0xf9e1, 0x6d22, 0x4484, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe711, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E2 03E7
        gbc.setState(0x26ef, 0x8a72, 0xa5a0, 0xafb7, 0xb6aa, 0x59ea, 0x1, 0x0);
        gbc.writeMem(0x26ef, { 0xcb, 0xe2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8a72, gbc.sp());
        EXPECT(0x26f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
