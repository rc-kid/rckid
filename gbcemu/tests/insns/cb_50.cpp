#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_50)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_50) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 50 0000
        gbc.setState(0xa5fa, 0x2c51, 0xa620, 0x8d9e, 0x9785, 0xa3dd, 0x0, 0x1);
        gbc.writeMem(0xa5fa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2c51);
        EXPECT(gbc.pc(), 0xa5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5fa), 0xcb);
        EXPECT(gbc.readMem(0xa5fb), 0x50);
        // CB 50 0001
        gbc.setState(0xd148, 0x96d3, 0xfac0, 0xffc7, 0x72ba, 0x19e6, 0x0, 0x0);
        gbc.writeMem(0xd148, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x96d3);
        EXPECT(gbc.pc(), 0xd14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd148), 0xcb);
        EXPECT(gbc.readMem(0xd149), 0x50);
        // CB 50 0002
        gbc.setState(0xdeaf, 0x9757, 0x5070, 0x7592, 0x5137, 0x4862, 0x1, 0x1);
        gbc.writeMem(0xdeaf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0xdeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeaf), 0xcb);
        EXPECT(gbc.readMem(0xdeb0), 0x50);
        // CB 50 0003
        gbc.setState(0xe18c, 0xfe5, 0xb2f0, 0x641, 0x5762, 0x674a, 0x0, 0x0);
        gbc.writeMem(0xe18c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfe5);
        EXPECT(gbc.pc(), 0xe18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18c), 0xcb);
        EXPECT(gbc.readMem(0xe18d), 0x50);
        // CB 50 0004
        gbc.setState(0x6db0, 0x554a, 0xa8c0, 0xc473, 0xc4e8, 0xb0b1, 0x1, 0x0);
        gbc.writeMem(0x6db0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x554a);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0005
        gbc.setState(0xaf06, 0x71e6, 0x97b0, 0x82d8, 0x6357, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0xaf06, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x71e6);
        EXPECT(gbc.pc(), 0xaf08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf06), 0xcb);
        EXPECT(gbc.readMem(0xaf07), 0x50);
        // CB 50 0006
        gbc.setState(0xa1df, 0x49a0, 0x6ac0, 0x79a7, 0x94b3, 0x2c97, 0x0, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0xa1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1df), 0xcb);
        EXPECT(gbc.readMem(0xa1e0), 0x50);
        // CB 50 0007
        gbc.setState(0x4e1e, 0xe1ce, 0x790, 0x8059, 0xa5b1, 0x88cc, 0x1, 0x0);
        gbc.writeMem(0x4e1e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe1ce);
        EXPECT(gbc.pc(), 0x4e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0008
        gbc.setState(0x1ac3, 0xafa0, 0x8520, 0x2eed, 0x7ccf, 0xb4dc, 0x1, 0x1);
        gbc.writeMem(0x1ac3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xafa0);
        EXPECT(gbc.pc(), 0x1ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0009
        gbc.setState(0x5815, 0x9ed1, 0xcfb0, 0x43a4, 0xff14, 0x82bd, 0x0, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9ed1);
        EXPECT(gbc.pc(), 0x5817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 000A
        gbc.setState(0xd6ef, 0x4a0c, 0x5670, 0xaf22, 0x1b4d, 0x4e88, 0x0, 0x0);
        gbc.writeMem(0xd6ef, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4a0c);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x50);
        // CB 50 000B
        gbc.setState(0xdc38, 0xd4c3, 0xcc60, 0x6352, 0x89f4, 0x8473, 0x0, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd4c3);
        EXPECT(gbc.pc(), 0xdc3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc38), 0xcb);
        EXPECT(gbc.readMem(0xdc39), 0x50);
        // CB 50 000E
        gbc.setState(0xab94, 0x30ae, 0x4dd0, 0xd1a7, 0xfff4, 0x316a, 0x1, 0x0);
        gbc.writeMem(0xab94, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0xab96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab94), 0xcb);
        EXPECT(gbc.readMem(0xab95), 0x50);
        // CB 50 000F
        gbc.setState(0x4571, 0x989d, 0x23a0, 0xabd4, 0x9bb0, 0xab1a, 0x0, 0x0);
        gbc.writeMem(0x4571, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x989d);
        EXPECT(gbc.pc(), 0x4573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0010
        gbc.setState(0x204e, 0xc63, 0x4610, 0x6107, 0xb48a, 0x9984, 0x0, 0x0);
        gbc.writeMem(0x204e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc63);
        EXPECT(gbc.pc(), 0x2050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0011
        gbc.setState(0x234f, 0x4d15, 0x2a90, 0x7e2f, 0x1cc6, 0x1d22, 0x1, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d15);
        EXPECT(gbc.pc(), 0x2351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0012
        gbc.setState(0xc25a, 0x16e0, 0x3490, 0x7ff2, 0x1924, 0x6703, 0x0, 0x0);
        gbc.writeMem(0xc25a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x16e0);
        EXPECT(gbc.pc(), 0xc25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25a), 0xcb);
        EXPECT(gbc.readMem(0xc25b), 0x50);
        // CB 50 0013
        gbc.setState(0x2677, 0x7c4, 0x6cb0, 0x1da0, 0x4c1, 0x12b8, 0x0, 0x0);
        gbc.writeMem(0x2677, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0014
        gbc.setState(0x34c5, 0x560e, 0xc90, 0x6748, 0x17b9, 0xf7ac, 0x0, 0x1);
        gbc.writeMem(0x34c5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x560e);
        EXPECT(gbc.pc(), 0x34c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0015
        gbc.setState(0x2bf3, 0xa951, 0xee40, 0x858e, 0x697e, 0xb630, 0x1, 0x1);
        gbc.writeMem(0x2bf3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa951);
        EXPECT(gbc.pc(), 0x2bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0016
        gbc.setState(0x35a0, 0xe8b1, 0xf5a0, 0x30b3, 0x7339, 0xd66b, 0x0, 0x0);
        gbc.writeMem(0x35a0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe8b1);
        EXPECT(gbc.pc(), 0x35a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0017
        gbc.setState(0xb8a6, 0x4d8a, 0x7570, 0x6f4f, 0x61d2, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0xb8a6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4d8a);
        EXPECT(gbc.pc(), 0xb8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a6), 0xcb);
        EXPECT(gbc.readMem(0xb8a7), 0x50);
        // CB 50 0018
        gbc.setState(0x560, 0x104c, 0x7520, 0x7043, 0x4ba4, 0x1495, 0x0, 0x0);
        gbc.writeMem(0x560, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x104c);
        EXPECT(gbc.pc(), 0x562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0019
        gbc.setState(0x43f8, 0xc1f5, 0xb220, 0xbeac, 0xa8a9, 0xd47b, 0x1, 0x0);
        gbc.writeMem(0x43f8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc1f5);
        EXPECT(gbc.pc(), 0x43fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 001A
        gbc.setState(0xb44f, 0x111c, 0x2fd0, 0xdbc4, 0x7b88, 0xf2ec, 0x0, 0x1);
        gbc.writeMem(0xb44f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0xb451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44f), 0xcb);
        EXPECT(gbc.readMem(0xb450), 0x50);
        // CB 50 001B
        gbc.setState(0x6e21, 0x7b6c, 0x4b90, 0xea5, 0xfa0a, 0x454d, 0x0, 0x1);
        gbc.writeMem(0x6e21, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7b6c);
        EXPECT(gbc.pc(), 0x6e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 001C
        gbc.setState(0x6f2, 0x260a, 0x72a0, 0x8acc, 0x1306, 0xaf8b, 0x0, 0x1);
        gbc.writeMem(0x6f2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x260a);
        EXPECT(gbc.pc(), 0x6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 001D
        gbc.setState(0x4987, 0xa090, 0x29a0, 0x2695, 0x8176, 0x5149, 0x1, 0x0);
        gbc.writeMem(0x4987, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa090);
        EXPECT(gbc.pc(), 0x4989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 001E
        gbc.setState(0xdfcb, 0x6f26, 0xe980, 0xdd44, 0x91c5, 0xac53, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6f26);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfcb), 0xcb);
        EXPECT(gbc.readMem(0xdfcc), 0x50);
        // CB 50 001F
        gbc.setState(0x156e, 0x29f, 0xb7f0, 0xbf99, 0xeefc, 0x83a1, 0x1, 0x1);
        gbc.writeMem(0x156e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x29f);
        EXPECT(gbc.pc(), 0x1570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0020
        gbc.setState(0xec00, 0x501d, 0x2c30, 0x731f, 0x7017, 0x1ef4, 0x0, 0x0);
        gbc.writeMem(0xec00, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x501d);
        EXPECT(gbc.pc(), 0xec02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec00), 0xcb);
        EXPECT(gbc.readMem(0xec01), 0x50);
        // CB 50 0021
        gbc.setState(0x689a, 0xacd7, 0x70d0, 0xf460, 0x6b25, 0x6842, 0x0, 0x0);
        gbc.writeMem(0x689a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xacd7);
        EXPECT(gbc.pc(), 0x689c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0022
        gbc.setState(0xcfee, 0xdf88, 0x4660, 0x5293, 0x5e14, 0xd48f, 0x0, 0x0);
        gbc.writeMem(0xcfee, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdf88);
        EXPECT(gbc.pc(), 0xcff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfee), 0xcb);
        EXPECT(gbc.readMem(0xcfef), 0x50);
        // CB 50 0023
        gbc.setState(0x4449, 0xb188, 0x70e0, 0x8c7e, 0xf9c8, 0x154d, 0x0, 0x1);
        gbc.writeMem(0x4449, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb188);
        EXPECT(gbc.pc(), 0x444b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0024
        gbc.setState(0x68e2, 0x18ac, 0xea60, 0x12ab, 0x8a0d, 0xf5af, 0x1, 0x0);
        gbc.writeMem(0x68e2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x18ac);
        EXPECT(gbc.pc(), 0x68e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0025
        gbc.setState(0x9dfe, 0x2df3, 0xba30, 0xfae9, 0xf116, 0x9439, 0x1, 0x0);
        gbc.writeMem(0x9dfe, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2df3);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dfe), 0xcb);
        EXPECT(gbc.readMem(0x9dff), 0x50);
        // CB 50 0026
        gbc.setState(0xb977, 0x5a5, 0x2a70, 0x3dd7, 0x74c1, 0x77b3, 0x1, 0x1);
        gbc.writeMem(0xb977, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5a5);
        EXPECT(gbc.pc(), 0xb979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb977), 0xcb);
        EXPECT(gbc.readMem(0xb978), 0x50);
        // CB 50 0027
        gbc.setState(0x993c, 0x824e, 0xa560, 0xd111, 0x1ec9, 0x8ca4, 0x0, 0x1);
        gbc.writeMem(0x993c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x824e);
        EXPECT(gbc.pc(), 0x993e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993c), 0xcb);
        EXPECT(gbc.readMem(0x993d), 0x50);
        // CB 50 0028
        gbc.setState(0x1ccc, 0x54ed, 0x96f0, 0xd83d, 0x9613, 0x9f4c, 0x0, 0x1);
        gbc.writeMem(0x1ccc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x54ed);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0029
        gbc.setState(0xb98d, 0xfa4c, 0x63b0, 0x714f, 0x5762, 0x631, 0x0, 0x1);
        gbc.writeMem(0xb98d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0xb98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98d), 0xcb);
        EXPECT(gbc.readMem(0xb98e), 0x50);
        // CB 50 002A
        gbc.setState(0xec13, 0x6ca0, 0x99b0, 0xa969, 0xeb78, 0x217b, 0x1, 0x1);
        gbc.writeMem(0xec13, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0xec15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec13), 0xcb);
        EXPECT(gbc.readMem(0xec14), 0x50);
        // CB 50 002B
        gbc.setState(0x4e09, 0x74b8, 0xb8c0, 0xd55d, 0x42a2, 0xc0c4, 0x1, 0x0);
        gbc.writeMem(0x4e09, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x74b8);
        EXPECT(gbc.pc(), 0x4e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 002D
        gbc.setState(0xda0b, 0xbbb6, 0x6c90, 0xd5ae, 0x5537, 0x40c0, 0x1, 0x1);
        gbc.writeMem(0xda0b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbbb6);
        EXPECT(gbc.pc(), 0xda0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0b), 0xcb);
        EXPECT(gbc.readMem(0xda0c), 0x50);
        // CB 50 002E
        gbc.setState(0xbad9, 0xe1d7, 0xb500, 0xb5af, 0x2055, 0x8daa, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe1d7);
        EXPECT(gbc.pc(), 0xbadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad9), 0xcb);
        EXPECT(gbc.readMem(0xbada), 0x50);
        // CB 50 002F
        gbc.setState(0x241c, 0xb4d7, 0x1510, 0x2ab3, 0xad7, 0x2608, 0x0, 0x0);
        gbc.writeMem(0x241c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb4d7);
        EXPECT(gbc.pc(), 0x241e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0030
        gbc.setState(0x8483, 0xbdc3, 0x2600, 0x239c, 0x548, 0x6fd9, 0x1, 0x0);
        gbc.writeMem(0x8483, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbdc3);
        EXPECT(gbc.pc(), 0x8485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8483), 0xcb);
        EXPECT(gbc.readMem(0x8484), 0x50);
        // CB 50 0031
        gbc.setState(0xbd7b, 0x1ff5, 0x29d0, 0x2932, 0x886f, 0x41ac, 0x1, 0x1);
        gbc.writeMem(0xbd7b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1ff5);
        EXPECT(gbc.pc(), 0xbd7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7b), 0xcb);
        EXPECT(gbc.readMem(0xbd7c), 0x50);
        // CB 50 0032
        gbc.setState(0xea47, 0x4f45, 0xb1f0, 0xafcb, 0x3627, 0x3568, 0x0, 0x1);
        gbc.writeMem(0xea47, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4f45);
        EXPECT(gbc.pc(), 0xea49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea47), 0xcb);
        EXPECT(gbc.readMem(0xea48), 0x50);
        // CB 50 0033
        gbc.setState(0x8493, 0xb191, 0x3fe0, 0x82cb, 0x8800, 0x5453, 0x1, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb191);
        EXPECT(gbc.pc(), 0x8495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8493), 0xcb);
        EXPECT(gbc.readMem(0x8494), 0x50);
        // CB 50 0034
        gbc.setState(0xb0e7, 0xc9f8, 0x820, 0x728f, 0x1823, 0xf063, 0x1, 0x1);
        gbc.writeMem(0xb0e7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc9f8);
        EXPECT(gbc.pc(), 0xb0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e7), 0xcb);
        EXPECT(gbc.readMem(0xb0e8), 0x50);
        // CB 50 0035
        gbc.setState(0xb6d1, 0xcb7, 0x63e0, 0x2e6c, 0x1a9b, 0x2e89, 0x0, 0x0);
        gbc.writeMem(0xb6d1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcb7);
        EXPECT(gbc.pc(), 0xb6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d1), 0xcb);
        EXPECT(gbc.readMem(0xb6d2), 0x50);
        // CB 50 0036
        gbc.setState(0xebbf, 0x9ae, 0xa210, 0x573e, 0x2d4d, 0xe9ea, 0x0, 0x1);
        gbc.writeMem(0xebbf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9ae);
        EXPECT(gbc.pc(), 0xebc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbf), 0xcb);
        EXPECT(gbc.readMem(0xebc0), 0x50);
        // CB 50 0037
        gbc.setState(0x393, 0x1a74, 0xdfd0, 0xbeb, 0x9d41, 0xbf29, 0x1, 0x1);
        gbc.writeMem(0x393, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1a74);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0038
        gbc.setState(0x9327, 0x70f2, 0xda50, 0x26e, 0xf0ea, 0x712b, 0x0, 0x1);
        gbc.writeMem(0x9327, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x70f2);
        EXPECT(gbc.pc(), 0x9329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9327), 0xcb);
        EXPECT(gbc.readMem(0x9328), 0x50);
        // CB 50 0039
        gbc.setState(0xd453, 0xd98f, 0x56a0, 0x8de2, 0x4faf, 0x5c58, 0x1, 0x1);
        gbc.writeMem(0xd453, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd98f);
        EXPECT(gbc.pc(), 0xd455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd453), 0xcb);
        EXPECT(gbc.readMem(0xd454), 0x50);
        // CB 50 003A
        gbc.setState(0x80d0, 0x8c39, 0x1f40, 0xc555, 0xf361, 0x5ccb, 0x1, 0x1);
        gbc.writeMem(0x80d0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8c39);
        EXPECT(gbc.pc(), 0x80d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d0), 0xcb);
        EXPECT(gbc.readMem(0x80d1), 0x50);
        // CB 50 003C
        gbc.setState(0xcc94, 0x6ca5, 0x8520, 0xb3cf, 0x497c, 0x86b0, 0x0, 0x1);
        gbc.writeMem(0xcc94, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6ca5);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc94), 0xcb);
        EXPECT(gbc.readMem(0xcc95), 0x50);
        // CB 50 003D
        gbc.setState(0x80ef, 0xcad9, 0x4e70, 0xc1f, 0xcce7, 0x6ddf, 0x0, 0x1);
        gbc.writeMem(0x80ef, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcad9);
        EXPECT(gbc.pc(), 0x80f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ef), 0xcb);
        EXPECT(gbc.readMem(0x80f0), 0x50);
        // CB 50 003E
        gbc.setState(0x8adc, 0x1a13, 0xb060, 0x2c9c, 0x851d, 0xc7a7, 0x0, 0x1);
        gbc.writeMem(0x8adc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1a13);
        EXPECT(gbc.pc(), 0x8ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adc), 0xcb);
        EXPECT(gbc.readMem(0x8add), 0x50);
        // CB 50 003F
        gbc.setState(0x373f, 0xc2d6, 0x1600, 0xbf1d, 0x2df6, 0x9169, 0x1, 0x1);
        gbc.writeMem(0x373f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc2d6);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0040
        gbc.setState(0xde27, 0x84df, 0xc350, 0x7ab1, 0xff6a, 0xaadc, 0x0, 0x1);
        gbc.writeMem(0xde27, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x84df);
        EXPECT(gbc.pc(), 0xde29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde27), 0xcb);
        EXPECT(gbc.readMem(0xde28), 0x50);
        // CB 50 0041
        gbc.setState(0x8367, 0x639b, 0xf390, 0xf4a, 0x2e6e, 0x21e, 0x0, 0x0);
        gbc.writeMem(0x8367, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x639b);
        EXPECT(gbc.pc(), 0x8369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8367), 0xcb);
        EXPECT(gbc.readMem(0x8368), 0x50);
        // CB 50 0042
        gbc.setState(0xdaad, 0xc644, 0x21e0, 0xac42, 0x6e6d, 0xbb1c, 0x0, 0x1);
        gbc.writeMem(0xdaad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc644);
        EXPECT(gbc.pc(), 0xdaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaad), 0xcb);
        EXPECT(gbc.readMem(0xdaae), 0x50);
        // CB 50 0043
        gbc.setState(0x6ba8, 0xecaa, 0xbe90, 0x6f1f, 0x24ca, 0x88e6, 0x0, 0x0);
        gbc.writeMem(0x6ba8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xecaa);
        EXPECT(gbc.pc(), 0x6baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0044
        gbc.setState(0x92be, 0x850e, 0x81e0, 0xfe84, 0x7c68, 0x887, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x850e);
        EXPECT(gbc.pc(), 0x92c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92be), 0xcb);
        EXPECT(gbc.readMem(0x92bf), 0x50);
        // CB 50 0045
        gbc.setState(0x512d, 0xdb3a, 0x88a0, 0x159c, 0x415c, 0x2237, 0x1, 0x1);
        gbc.writeMem(0x512d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdb3a);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0046
        gbc.setState(0x703, 0x90bb, 0x3100, 0xaba, 0x769, 0xc72, 0x0, 0x1);
        gbc.writeMem(0x703, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0x705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0047
        gbc.setState(0x8bff, 0xb82a, 0xa9e0, 0x82cb, 0x1b60, 0x933c, 0x0, 0x0);
        gbc.writeMem(0x8bff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb82a);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bff), 0xcb);
        EXPECT(gbc.readMem(0x8c00), 0x50);
        // CB 50 0048
        gbc.setState(0xb1cd, 0xf4f, 0x6ad0, 0xff82, 0x9ef, 0x39a9, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf4f);
        EXPECT(gbc.pc(), 0xb1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cd), 0xcb);
        EXPECT(gbc.readMem(0xb1ce), 0x50);
        // CB 50 0049
        gbc.setState(0x5ba9, 0xf130, 0xd850, 0x5366, 0xc3e4, 0xbbfa, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf130);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 004A
        gbc.setState(0xd384, 0x940, 0xfce0, 0x4212, 0x56d3, 0xe8c0, 0x0, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x940);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd384), 0xcb);
        EXPECT(gbc.readMem(0xd385), 0x50);
        // CB 50 004B
        gbc.setState(0xb472, 0x2dd4, 0xd8b0, 0x165d, 0xf732, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0xb472, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2dd4);
        EXPECT(gbc.pc(), 0xb474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb472), 0xcb);
        EXPECT(gbc.readMem(0xb473), 0x50);
        // CB 50 004C
        gbc.setState(0x57c2, 0xf400, 0x6fe0, 0x4213, 0xe413, 0x2a1c, 0x1, 0x1);
        gbc.writeMem(0x57c2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0x57c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 004D
        gbc.setState(0xe93, 0x2346, 0x4220, 0xa907, 0x35bd, 0x52a5, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 004F
        gbc.setState(0xef99, 0x270b, 0x5120, 0x4336, 0xb081, 0xdff5, 0x0, 0x0);
        gbc.writeMem(0xef99, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x270b);
        EXPECT(gbc.pc(), 0xef9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef99), 0xcb);
        EXPECT(gbc.readMem(0xef9a), 0x50);
        // CB 50 0050
        gbc.setState(0xd33d, 0x947a, 0xf920, 0x7c13, 0x3a42, 0x943d, 0x1, 0x1);
        gbc.writeMem(0xd33d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x947a);
        EXPECT(gbc.pc(), 0xd33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33d), 0xcb);
        EXPECT(gbc.readMem(0xd33e), 0x50);
        // CB 50 0051
        gbc.setState(0x48cf, 0xba07, 0xad50, 0x2a2d, 0x3ada, 0xadea, 0x0, 0x1);
        gbc.writeMem(0x48cf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xba07);
        EXPECT(gbc.pc(), 0x48d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0053
        gbc.setState(0x25a1, 0x57cf, 0x880, 0x2ef7, 0x25a9, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0x25a1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0x25a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0054
        gbc.setState(0x154a, 0x3473, 0x4230, 0xf0ca, 0xbe8, 0x471c, 0x0, 0x0);
        gbc.writeMem(0x154a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3473);
        EXPECT(gbc.pc(), 0x154c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0055
        gbc.setState(0xaade, 0x9dbb, 0xc250, 0xe9a0, 0xe248, 0x49be, 0x0, 0x1);
        gbc.writeMem(0xaade, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9dbb);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaade), 0xcb);
        EXPECT(gbc.readMem(0xaadf), 0x50);
        // CB 50 0056
        gbc.setState(0xb545, 0x4241, 0xedb0, 0x2265, 0x7173, 0xacf0, 0x1, 0x1);
        gbc.writeMem(0xb545, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4241);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb545), 0xcb);
        EXPECT(gbc.readMem(0xb546), 0x50);
        // CB 50 0057
        gbc.setState(0xbd9a, 0x90e1, 0xae80, 0x4950, 0x421d, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0xbd9a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x90e1);
        EXPECT(gbc.pc(), 0xbd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9a), 0xcb);
        EXPECT(gbc.readMem(0xbd9b), 0x50);
        // CB 50 0058
        gbc.setState(0x97a0, 0x7cf9, 0x6060, 0xea6, 0xc5ac, 0x5056, 0x1, 0x1);
        gbc.writeMem(0x97a0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7cf9);
        EXPECT(gbc.pc(), 0x97a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a0), 0xcb);
        EXPECT(gbc.readMem(0x97a1), 0x50);
        // CB 50 0059
        gbc.setState(0xe669, 0xd7b3, 0xe8a0, 0x6007, 0x254b, 0x37a7, 0x0, 0x1);
        gbc.writeMem(0xe669, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd7b3);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe669), 0xcb);
        EXPECT(gbc.readMem(0xe66a), 0x50);
        // CB 50 005A
        gbc.setState(0x459d, 0xfe63, 0xf670, 0xeaa8, 0xc7a0, 0xd144, 0x1, 0x1);
        gbc.writeMem(0x459d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfe63);
        EXPECT(gbc.pc(), 0x459f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 005B
        gbc.setState(0x4016, 0x2505, 0x8d30, 0x3a8b, 0xffbd, 0xe821, 0x0, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2505);
        EXPECT(gbc.pc(), 0x4018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 005C
        gbc.setState(0x1ca2, 0x579f, 0x3780, 0x8c8f, 0x3040, 0x7e45, 0x1, 0x1);
        gbc.writeMem(0x1ca2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x579f);
        EXPECT(gbc.pc(), 0x1ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 005D
        gbc.setState(0xb2a5, 0x19f0, 0x6e00, 0xe562, 0x621f, 0xc911, 0x1, 0x1);
        gbc.writeMem(0xb2a5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x19f0);
        EXPECT(gbc.pc(), 0xb2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a5), 0xcb);
        EXPECT(gbc.readMem(0xb2a6), 0x50);
        // CB 50 005E
        gbc.setState(0x7e3, 0xb573, 0x7c50, 0x88c, 0xcba1, 0xbc69, 0x1, 0x1);
        gbc.writeMem(0x7e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb573);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 005F
        gbc.setState(0x7fdd, 0x9b00, 0x9160, 0x9339, 0xfa60, 0x4d53, 0x1, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0060
        gbc.setState(0x2644, 0xb886, 0x1440, 0x25c8, 0x3f17, 0xe6ae, 0x1, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb886);
        EXPECT(gbc.pc(), 0x2646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0061
        gbc.setState(0x3277, 0x6384, 0xd210, 0x4575, 0x541a, 0x91a8, 0x0, 0x0);
        gbc.writeMem(0x3277, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6384);
        EXPECT(gbc.pc(), 0x3279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0062
        gbc.setState(0x78af, 0x4f07, 0xf350, 0x7126, 0x1277, 0xf150, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4f07);
        EXPECT(gbc.pc(), 0x78b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0063
        gbc.setState(0x665, 0xe534, 0x20e0, 0x400a, 0x8ce3, 0x4f52, 0x1, 0x1);
        gbc.writeMem(0x665, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0x667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0064
        gbc.setState(0xe995, 0x4127, 0x4110, 0xa728, 0xc685, 0xdbe7, 0x0, 0x0);
        gbc.writeMem(0xe995, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4127);
        EXPECT(gbc.pc(), 0xe997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe995), 0xcb);
        EXPECT(gbc.readMem(0xe996), 0x50);
        // CB 50 0065
        gbc.setState(0xc9a1, 0x8ccf, 0xd660, 0xe374, 0xc677, 0x47a, 0x1, 0x0);
        gbc.writeMem(0xc9a1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8ccf);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a1), 0xcb);
        EXPECT(gbc.readMem(0xc9a2), 0x50);
        // CB 50 0066
        gbc.setState(0x814f, 0x1098, 0xd70, 0x40, 0x6a52, 0xd1b3, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1098);
        EXPECT(gbc.pc(), 0x8151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814f), 0xcb);
        EXPECT(gbc.readMem(0x8150), 0x50);
        // CB 50 0067
        gbc.setState(0x5b70, 0xf2a5, 0x78b0, 0x7c3d, 0xaf53, 0x78a2, 0x0, 0x0);
        gbc.writeMem(0x5b70, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf2a5);
        EXPECT(gbc.pc(), 0x5b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0068
        gbc.setState(0x5fa5, 0x4a9b, 0xc7f0, 0x72bd, 0xd8b1, 0x702e, 0x1, 0x1);
        gbc.writeMem(0x5fa5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4a9b);
        EXPECT(gbc.pc(), 0x5fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0069
        gbc.setState(0x7553, 0x89d2, 0xa770, 0x2cc7, 0x2237, 0x4aef, 0x1, 0x1);
        gbc.writeMem(0x7553, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x7555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 006A
        gbc.setState(0x3d73, 0xceba, 0xc390, 0x7fe0, 0x1aae, 0x11de, 0x0, 0x1);
        gbc.writeMem(0x3d73, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xceba);
        EXPECT(gbc.pc(), 0x3d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 006B
        gbc.setState(0x31f8, 0xa237, 0xa0d0, 0x3d3, 0x646d, 0xb1bd, 0x1, 0x1);
        gbc.writeMem(0x31f8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa237);
        EXPECT(gbc.pc(), 0x31fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 006C
        gbc.setState(0xe7e5, 0xce92, 0xdec0, 0x2ffe, 0x8a93, 0x3bb1, 0x0, 0x1);
        gbc.writeMem(0xe7e5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xce92);
        EXPECT(gbc.pc(), 0xe7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e5), 0xcb);
        EXPECT(gbc.readMem(0xe7e6), 0x50);
        // CB 50 006D
        gbc.setState(0x3815, 0xc29f, 0xa490, 0x6b65, 0xe8d4, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0x3815, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc29f);
        EXPECT(gbc.pc(), 0x3817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 006E
        gbc.setState(0xbb1a, 0xe123, 0x28a0, 0xd926, 0x9213, 0xdd1b, 0x0, 0x1);
        gbc.writeMem(0xbb1a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe123);
        EXPECT(gbc.pc(), 0xbb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1a), 0xcb);
        EXPECT(gbc.readMem(0xbb1b), 0x50);
        // CB 50 006F
        gbc.setState(0x8bbf, 0x9ad2, 0xa2f0, 0xe064, 0xe824, 0x6016, 0x1, 0x1);
        gbc.writeMem(0x8bbf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9ad2);
        EXPECT(gbc.pc(), 0x8bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bbf), 0xcb);
        EXPECT(gbc.readMem(0x8bc0), 0x50);
        // CB 50 0070
        gbc.setState(0x319a, 0x8180, 0x4d50, 0x2b5, 0xd8fe, 0x377e, 0x0, 0x0);
        gbc.writeMem(0x319a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8180);
        EXPECT(gbc.pc(), 0x319c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0071
        gbc.setState(0x4e16, 0x1557, 0xaac0, 0x4c1d, 0x5ed9, 0x562, 0x1, 0x0);
        gbc.writeMem(0x4e16, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1557);
        EXPECT(gbc.pc(), 0x4e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0072
        gbc.setState(0x2ca5, 0xf6b7, 0x970, 0x48ad, 0x99fb, 0x67e7, 0x1, 0x0);
        gbc.writeMem(0x2ca5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf6b7);
        EXPECT(gbc.pc(), 0x2ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0073
        gbc.setState(0xa45b, 0xde41, 0x3cf0, 0xcce0, 0xa6b6, 0x4dae, 0x1, 0x0);
        gbc.writeMem(0xa45b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xde41);
        EXPECT(gbc.pc(), 0xa45d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45b), 0xcb);
        EXPECT(gbc.readMem(0xa45c), 0x50);
        // CB 50 0074
        gbc.setState(0xd359, 0x413f, 0x8540, 0x6af3, 0x4d4f, 0x9fb6, 0x0, 0x0);
        gbc.writeMem(0xd359, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x413f);
        EXPECT(gbc.pc(), 0xd35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd359), 0xcb);
        EXPECT(gbc.readMem(0xd35a), 0x50);
        // CB 50 0075
        gbc.setState(0xde9a, 0xd2a6, 0xbf60, 0x8360, 0xfe47, 0x1761, 0x1, 0x1);
        gbc.writeMem(0xde9a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd2a6);
        EXPECT(gbc.pc(), 0xde9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9a), 0xcb);
        EXPECT(gbc.readMem(0xde9b), 0x50);
        // CB 50 0076
        gbc.setState(0x9273, 0x1278, 0x5ce0, 0x9fed, 0x7774, 0x7fca, 0x1, 0x1);
        gbc.writeMem(0x9273, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1278);
        EXPECT(gbc.pc(), 0x9275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9273), 0xcb);
        EXPECT(gbc.readMem(0x9274), 0x50);
        // CB 50 0077
        gbc.setState(0x68e, 0x5e82, 0x7a70, 0x4c0c, 0x5173, 0x8a30, 0x1, 0x1);
        gbc.writeMem(0x68e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5e82);
        EXPECT(gbc.pc(), 0x690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0078
        gbc.setState(0x7a52, 0x8966, 0x6ea0, 0xa6ce, 0x5bda, 0x4846, 0x0, 0x1);
        gbc.writeMem(0x7a52, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8966);
        EXPECT(gbc.pc(), 0x7a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0079
        gbc.setState(0xb7ea, 0xb852, 0xf6b0, 0xd9f5, 0xa5bd, 0xb2f5, 0x1, 0x1);
        gbc.writeMem(0xb7ea, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb852);
        EXPECT(gbc.pc(), 0xb7ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ea), 0xcb);
        EXPECT(gbc.readMem(0xb7eb), 0x50);
        // CB 50 007B
        gbc.setState(0x3b75, 0xc990, 0xf3a0, 0x7cd4, 0x6622, 0x324d, 0x1, 0x1);
        gbc.writeMem(0x3b75, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc990);
        EXPECT(gbc.pc(), 0x3b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 007C
        gbc.setState(0xed2f, 0x4449, 0xcac0, 0x6e76, 0xd2ac, 0x27e, 0x1, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4449);
        EXPECT(gbc.pc(), 0xed31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2f), 0xcb);
        EXPECT(gbc.readMem(0xed30), 0x50);
        // CB 50 007D
        gbc.setState(0x5d31, 0xb103, 0x4870, 0x6b68, 0x9661, 0x7975, 0x0, 0x1);
        gbc.writeMem(0x5d31, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb103);
        EXPECT(gbc.pc(), 0x5d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 007E
        gbc.setState(0xa6c9, 0x4c90, 0xc360, 0xb0e9, 0x75d1, 0x920, 0x1, 0x0);
        gbc.writeMem(0xa6c9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4c90);
        EXPECT(gbc.pc(), 0xa6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c9), 0xcb);
        EXPECT(gbc.readMem(0xa6ca), 0x50);
        // CB 50 007F
        gbc.setState(0x912b, 0xa186, 0x38d0, 0x4104, 0x1d1f, 0xe6fa, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa186);
        EXPECT(gbc.pc(), 0x912d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912b), 0xcb);
        EXPECT(gbc.readMem(0x912c), 0x50);
        // CB 50 0080
        gbc.setState(0x6797, 0xa7ac, 0xc9f0, 0x88eb, 0xe6e7, 0x5be5, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0x6799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0081
        gbc.setState(0x56cd, 0xa5c4, 0x50b0, 0x80a6, 0xac24, 0x2a82, 0x0, 0x1);
        gbc.writeMem(0x56cd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa5c4);
        EXPECT(gbc.pc(), 0x56cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0082
        gbc.setState(0x4cc1, 0x8f4f, 0x72e0, 0x2059, 0xdf21, 0x9d53, 0x1, 0x1);
        gbc.writeMem(0x4cc1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8f4f);
        EXPECT(gbc.pc(), 0x4cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0083
        gbc.setState(0x6caf, 0xf915, 0x5c0, 0x77e5, 0xfa4f, 0xb673, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf915);
        EXPECT(gbc.pc(), 0x6cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0084
        gbc.setState(0x99f2, 0xd5db, 0xb100, 0xee18, 0x711b, 0x3d5c, 0x0, 0x0);
        gbc.writeMem(0x99f2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd5db);
        EXPECT(gbc.pc(), 0x99f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f2), 0xcb);
        EXPECT(gbc.readMem(0x99f3), 0x50);
        // CB 50 0085
        gbc.setState(0xa855, 0xab7e, 0xb150, 0x2f45, 0x1670, 0x8414, 0x0, 0x1);
        gbc.writeMem(0xa855, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xab7e);
        EXPECT(gbc.pc(), 0xa857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa855), 0xcb);
        EXPECT(gbc.readMem(0xa856), 0x50);
        // CB 50 0086
        gbc.setState(0x4ce8, 0xfeb9, 0xab0, 0x789c, 0x9d77, 0x2c0e, 0x0, 0x0);
        gbc.writeMem(0x4ce8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfeb9);
        EXPECT(gbc.pc(), 0x4cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0087
        gbc.setState(0x3b5e, 0x8a9c, 0x1f60, 0xa3a3, 0x900f, 0xee56, 0x1, 0x1);
        gbc.writeMem(0x3b5e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8a9c);
        EXPECT(gbc.pc(), 0x3b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0088
        gbc.setState(0x6e6c, 0x5133, 0xb950, 0x1098, 0x8e01, 0xac10, 0x1, 0x1);
        gbc.writeMem(0x6e6c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5133);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0089
        gbc.setState(0x1ab1, 0x2bba, 0x36f0, 0x800b, 0xc15e, 0x5b1c, 0x0, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2bba);
        EXPECT(gbc.pc(), 0x1ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 008A
        gbc.setState(0x9080, 0x402d, 0x7710, 0x1b25, 0xf40e, 0x3d23, 0x1, 0x0);
        gbc.writeMem(0x9080, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x402d);
        EXPECT(gbc.pc(), 0x9082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9080), 0xcb);
        EXPECT(gbc.readMem(0x9081), 0x50);
        // CB 50 008B
        gbc.setState(0x686b, 0x5c83, 0xb670, 0x8fa3, 0x741f, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0x686b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5c83);
        EXPECT(gbc.pc(), 0x686d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 008C
        gbc.setState(0xb8c, 0x12e4, 0x2830, 0xbc44, 0xa92d, 0x7594, 0x1, 0x0);
        gbc.writeMem(0xb8c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x12e4);
        EXPECT(gbc.pc(), 0xb8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 008D
        gbc.setState(0xca2c, 0x20aa, 0x450, 0x61c2, 0xf33e, 0xd17, 0x1, 0x0);
        gbc.writeMem(0xca2c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x20aa);
        EXPECT(gbc.pc(), 0xca2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2c), 0xcb);
        EXPECT(gbc.readMem(0xca2d), 0x50);
        // CB 50 008E
        gbc.setState(0xa3d9, 0xf035, 0x41d0, 0xf401, 0x934f, 0xd57a, 0x1, 0x1);
        gbc.writeMem(0xa3d9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf035);
        EXPECT(gbc.pc(), 0xa3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d9), 0xcb);
        EXPECT(gbc.readMem(0xa3da), 0x50);
        // CB 50 0090
        gbc.setState(0x2d91, 0xd771, 0xb980, 0xda11, 0x48a1, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0x2d91, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd771);
        EXPECT(gbc.pc(), 0x2d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0091
        gbc.setState(0x70ef, 0x9211, 0x7fc0, 0x265, 0xe442, 0x7df2, 0x1, 0x0);
        gbc.writeMem(0x70ef, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9211);
        EXPECT(gbc.pc(), 0x70f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0092
        gbc.setState(0xacfc, 0x8342, 0xd590, 0x4124, 0x5545, 0xf55b, 0x1, 0x1);
        gbc.writeMem(0xacfc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8342);
        EXPECT(gbc.pc(), 0xacfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacfc), 0xcb);
        EXPECT(gbc.readMem(0xacfd), 0x50);
        // CB 50 0093
        gbc.setState(0x4ab4, 0x6c6f, 0x1c70, 0x27be, 0xf833, 0x74b5, 0x1, 0x1);
        gbc.writeMem(0x4ab4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6c6f);
        EXPECT(gbc.pc(), 0x4ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0094
        gbc.setState(0xd243, 0x4b25, 0xaeb0, 0x6574, 0x121b, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xd243, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4b25);
        EXPECT(gbc.pc(), 0xd245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd243), 0xcb);
        EXPECT(gbc.readMem(0xd244), 0x50);
        // CB 50 0095
        gbc.setState(0xbca9, 0xda1d, 0x7aa0, 0x9d49, 0x7341, 0xf7b3, 0x0, 0x0);
        gbc.writeMem(0xbca9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xda1d);
        EXPECT(gbc.pc(), 0xbcab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca9), 0xcb);
        EXPECT(gbc.readMem(0xbcaa), 0x50);
        // CB 50 0096
        gbc.setState(0xd110, 0x942f, 0x46b0, 0xbe40, 0x407, 0x9d82, 0x0, 0x0);
        gbc.writeMem(0xd110, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x942f);
        EXPECT(gbc.pc(), 0xd112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd110), 0xcb);
        EXPECT(gbc.readMem(0xd111), 0x50);
        // CB 50 0097
        gbc.setState(0x4c3, 0xd291, 0x3ba0, 0x3434, 0xe47a, 0xd001, 0x0, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd291);
        EXPECT(gbc.pc(), 0x4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0098
        gbc.setState(0x1b2d, 0x215a, 0xf80, 0xd2c6, 0xb182, 0x4425, 0x0, 0x0);
        gbc.writeMem(0x1b2d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x215a);
        EXPECT(gbc.pc(), 0x1b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0099
        gbc.setState(0x6ee1, 0x28f0, 0x6990, 0xe733, 0xcae, 0xc473, 0x0, 0x0);
        gbc.writeMem(0x6ee1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x28f0);
        EXPECT(gbc.pc(), 0x6ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 009A
        gbc.setState(0xccd2, 0x8434, 0x8c70, 0x4195, 0x4c18, 0x6b5e, 0x1, 0x1);
        gbc.writeMem(0xccd2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8434);
        EXPECT(gbc.pc(), 0xccd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd2), 0xcb);
        EXPECT(gbc.readMem(0xccd3), 0x50);
        // CB 50 009B
        gbc.setState(0x70ff, 0xd14f, 0x71d0, 0x1262, 0x3e6b, 0x23d5, 0x1, 0x1);
        gbc.writeMem(0x70ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd14f);
        EXPECT(gbc.pc(), 0x7101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 009C
        gbc.setState(0x4acd, 0xce2d, 0x9dc0, 0x1ab, 0xa1e2, 0xfe94, 0x0, 0x0);
        gbc.writeMem(0x4acd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xce2d);
        EXPECT(gbc.pc(), 0x4acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 009D
        gbc.setState(0x2e28, 0xd527, 0xb110, 0xb747, 0x87bf, 0x9e8f, 0x1, 0x0);
        gbc.writeMem(0x2e28, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd527);
        EXPECT(gbc.pc(), 0x2e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 009E
        gbc.setState(0x24f, 0x5854, 0x4500, 0xff98, 0xb1f0, 0xebcc, 0x1, 0x1);
        gbc.writeMem(0x24f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5854);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 009F
        gbc.setState(0xcb9c, 0xfe20, 0xdd50, 0x2472, 0x6e8a, 0x9002, 0x1, 0x0);
        gbc.writeMem(0xcb9c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfe20);
        EXPECT(gbc.pc(), 0xcb9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9c), 0xcb);
        EXPECT(gbc.readMem(0xcb9d), 0x50);
        // CB 50 00A0
        gbc.setState(0xbf5c, 0x3546, 0xf8d0, 0x109b, 0xaea2, 0x625c, 0x0, 0x0);
        gbc.writeMem(0xbf5c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3546);
        EXPECT(gbc.pc(), 0xbf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5c), 0xcb);
        EXPECT(gbc.readMem(0xbf5d), 0x50);
        // CB 50 00A1
        gbc.setState(0xcd95, 0xe221, 0x90d0, 0x9f86, 0x3adf, 0x4d42, 0x1, 0x1);
        gbc.writeMem(0xcd95, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe221);
        EXPECT(gbc.pc(), 0xcd97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd95), 0xcb);
        EXPECT(gbc.readMem(0xcd96), 0x50);
        // CB 50 00A2
        gbc.setState(0x9caa, 0xb4b0, 0xadc0, 0x53a6, 0xf23a, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb4b0);
        EXPECT(gbc.pc(), 0x9cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9caa), 0xcb);
        EXPECT(gbc.readMem(0x9cab), 0x50);
        // CB 50 00A3
        gbc.setState(0x691, 0x280c, 0xfd00, 0x8725, 0xc88, 0xa423, 0x0, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x280c);
        EXPECT(gbc.pc(), 0x693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00A4
        gbc.setState(0xb86, 0xde79, 0xb8b0, 0xaa4f, 0x50b3, 0xf487, 0x1, 0x0);
        gbc.writeMem(0xb86, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xde79);
        EXPECT(gbc.pc(), 0xb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00A5
        gbc.setState(0x367, 0x7fad, 0x9660, 0x9b76, 0xd105, 0x6a02, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7fad);
        EXPECT(gbc.pc(), 0x369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00A6
        gbc.setState(0x4823, 0x77bf, 0xac70, 0x946, 0xc7f0, 0x9e1e, 0x0, 0x0);
        gbc.writeMem(0x4823, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x77bf);
        EXPECT(gbc.pc(), 0x4825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00A7
        gbc.setState(0xcadf, 0xb032, 0x6bf0, 0xfcac, 0xef19, 0x5315, 0x1, 0x0);
        gbc.writeMem(0xcadf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb032);
        EXPECT(gbc.pc(), 0xcae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        EXPECT(gbc.readMem(0xcae0), 0x50);
        // CB 50 00A8
        gbc.setState(0x1677, 0x1160, 0x9380, 0x7b61, 0x83c2, 0x39f0, 0x0, 0x1);
        gbc.writeMem(0x1677, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1160);
        EXPECT(gbc.pc(), 0x1679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00A9
        gbc.setState(0xbe2b, 0x3b44, 0xd2f0, 0x96c6, 0x8f3a, 0xeaf, 0x1, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0xbe2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2b), 0xcb);
        EXPECT(gbc.readMem(0xbe2c), 0x50);
        // CB 50 00AA
        gbc.setState(0x2828, 0xa2cd, 0x7760, 0xfb91, 0x63a6, 0x5cf0, 0x1, 0x0);
        gbc.writeMem(0x2828, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa2cd);
        EXPECT(gbc.pc(), 0x282a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00AB
        gbc.setState(0x9ee6, 0x9b1d, 0x56b0, 0x7af0, 0xdc61, 0xf62c, 0x1, 0x1);
        gbc.writeMem(0x9ee6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9b1d);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0x50);
        // CB 50 00AC
        gbc.setState(0x10fa, 0xeb08, 0x12a0, 0x2750, 0xf0a4, 0x8ed8, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeb08);
        EXPECT(gbc.pc(), 0x10fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00AD
        gbc.setState(0xc44f, 0xa7b6, 0xb8f0, 0x25b0, 0x674c, 0x3763, 0x1, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa7b6);
        EXPECT(gbc.pc(), 0xc451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44f), 0xcb);
        EXPECT(gbc.readMem(0xc450), 0x50);
        // CB 50 00AE
        gbc.setState(0x1af9, 0xd82d, 0xd170, 0xcc3d, 0x1128, 0xeb0b, 0x1, 0x1);
        gbc.writeMem(0x1af9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd82d);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00AF
        gbc.setState(0x845a, 0x2ab3, 0xdfd0, 0x128c, 0xbcbe, 0x533e, 0x1, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2ab3);
        EXPECT(gbc.pc(), 0x845c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845a), 0xcb);
        EXPECT(gbc.readMem(0x845b), 0x50);
        // CB 50 00B0
        gbc.setState(0x9b99, 0x8e65, 0xdc90, 0x3e3f, 0x1789, 0xe083, 0x0, 0x1);
        gbc.writeMem(0x9b99, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8e65);
        EXPECT(gbc.pc(), 0x9b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b99), 0xcb);
        EXPECT(gbc.readMem(0x9b9a), 0x50);
        // CB 50 00B1
        gbc.setState(0x8df2, 0x6e40, 0xdfa0, 0x2ea3, 0xd382, 0x161e, 0x1, 0x0);
        gbc.writeMem(0x8df2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6e40);
        EXPECT(gbc.pc(), 0x8df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df2), 0xcb);
        EXPECT(gbc.readMem(0x8df3), 0x50);
        // CB 50 00B2
        gbc.setState(0x9ac3, 0x8762, 0xd870, 0x7189, 0xf854, 0x4de7, 0x1, 0x0);
        gbc.writeMem(0x9ac3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8762);
        EXPECT(gbc.pc(), 0x9ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac3), 0xcb);
        EXPECT(gbc.readMem(0x9ac4), 0x50);
        // CB 50 00B3
        gbc.setState(0x7b8d, 0x4d44, 0x4b40, 0x4e4, 0xe072, 0x944f, 0x0, 0x0);
        gbc.writeMem(0x7b8d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4d44);
        EXPECT(gbc.pc(), 0x7b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00B4
        gbc.setState(0xd6a9, 0x408, 0x4c10, 0x4289, 0x3820, 0x1d78, 0x0, 0x1);
        gbc.writeMem(0xd6a9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0xd6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a9), 0xcb);
        EXPECT(gbc.readMem(0xd6aa), 0x50);
        // CB 50 00B5
        gbc.setState(0xa144, 0x9b49, 0x9080, 0xd0db, 0x4c69, 0xf32d, 0x0, 0x0);
        gbc.writeMem(0xa144, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9b49);
        EXPECT(gbc.pc(), 0xa146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa144), 0xcb);
        EXPECT(gbc.readMem(0xa145), 0x50);
        // CB 50 00B6
        gbc.setState(0x1e87, 0x1ba8, 0x1030, 0x9ec2, 0xf993, 0x488b, 0x0, 0x1);
        gbc.writeMem(0x1e87, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1ba8);
        EXPECT(gbc.pc(), 0x1e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00B7
        gbc.setState(0x8a0e, 0x11c8, 0xb240, 0xe7e1, 0x49a, 0xf6dc, 0x0, 0x1);
        gbc.writeMem(0x8a0e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x11c8);
        EXPECT(gbc.pc(), 0x8a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0e), 0xcb);
        EXPECT(gbc.readMem(0x8a0f), 0x50);
        // CB 50 00B8
        gbc.setState(0x7902, 0x4664, 0x2a70, 0x550c, 0xd099, 0x9f7e, 0x0, 0x0);
        gbc.writeMem(0x7902, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4664);
        EXPECT(gbc.pc(), 0x7904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00B9
        gbc.setState(0xb60e, 0x79db, 0xed80, 0xf95d, 0xfcb1, 0x5778, 0x0, 0x1);
        gbc.writeMem(0xb60e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x79db);
        EXPECT(gbc.pc(), 0xb610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60e), 0xcb);
        EXPECT(gbc.readMem(0xb60f), 0x50);
        // CB 50 00BA
        gbc.setState(0xd114, 0xe5d6, 0x59b0, 0xf7a2, 0x2eda, 0xdd8a, 0x1, 0x1);
        gbc.writeMem(0xd114, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0xd116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd114), 0xcb);
        EXPECT(gbc.readMem(0xd115), 0x50);
        // CB 50 00BB
        gbc.setState(0x169c, 0xa4a0, 0xfb40, 0x66c3, 0x2a4d, 0x8dc1, 0x0, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa4a0);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00BC
        gbc.setState(0x5bfa, 0x11bc, 0xee20, 0x4372, 0xe56b, 0x90df, 0x0, 0x0);
        gbc.writeMem(0x5bfa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x11bc);
        EXPECT(gbc.pc(), 0x5bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00BD
        gbc.setState(0xc1b9, 0x9977, 0x13b0, 0x582c, 0xe286, 0x1548, 0x1, 0x0);
        gbc.writeMem(0xc1b9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9977);
        EXPECT(gbc.pc(), 0xc1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b9), 0xcb);
        EXPECT(gbc.readMem(0xc1ba), 0x50);
        // CB 50 00BE
        gbc.setState(0xed0, 0xc148, 0x8510, 0x7e47, 0xa022, 0xc047, 0x1, 0x0);
        gbc.writeMem(0xed0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc148);
        EXPECT(gbc.pc(), 0xed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00BF
        gbc.setState(0xce42, 0x1355, 0x9e60, 0x2d65, 0xb23c, 0x6af2, 0x1, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1355);
        EXPECT(gbc.pc(), 0xce44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce42), 0xcb);
        EXPECT(gbc.readMem(0xce43), 0x50);
        // CB 50 00C0
        gbc.setState(0xa1c6, 0xc66d, 0xdda0, 0x123c, 0x8791, 0xb75d, 0x0, 0x0);
        gbc.writeMem(0xa1c6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0xa1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c6), 0xcb);
        EXPECT(gbc.readMem(0xa1c7), 0x50);
        // CB 50 00C1
        gbc.setState(0xe62b, 0x771f, 0xdf50, 0xa522, 0xcc8d, 0xc5cd, 0x0, 0x0);
        gbc.writeMem(0xe62b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x771f);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62b), 0xcb);
        EXPECT(gbc.readMem(0xe62c), 0x50);
        // CB 50 00C2
        gbc.setState(0x4543, 0xeb35, 0x3ff0, 0xa8db, 0xece8, 0xa3b5, 0x1, 0x1);
        gbc.writeMem(0x4543, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeb35);
        EXPECT(gbc.pc(), 0x4545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00C3
        gbc.setState(0x98bd, 0x8616, 0xcc40, 0xada8, 0xfbc5, 0x8ccc, 0x0, 0x1);
        gbc.writeMem(0x98bd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8616);
        EXPECT(gbc.pc(), 0x98bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98bd), 0xcb);
        EXPECT(gbc.readMem(0x98be), 0x50);
        // CB 50 00C4
        gbc.setState(0x213a, 0xe046, 0xdbc0, 0xc0b, 0xddad, 0x1aac, 0x0, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe046);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00C5
        gbc.setState(0xa7ac, 0x7817, 0x2180, 0x41de, 0x6e41, 0xe0fa, 0x1, 0x1);
        gbc.writeMem(0xa7ac, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7817);
        EXPECT(gbc.pc(), 0xa7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ac), 0xcb);
        EXPECT(gbc.readMem(0xa7ad), 0x50);
        // CB 50 00C6
        gbc.setState(0x21f, 0x461f, 0xd1b0, 0xf7fd, 0xb862, 0xf0ab, 0x0, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x461f);
        EXPECT(gbc.pc(), 0x221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00C7
        gbc.setState(0xdbbf, 0xdb71, 0x6490, 0x2788, 0xef23, 0xa5fb, 0x1, 0x0);
        gbc.writeMem(0xdbbf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdb71);
        EXPECT(gbc.pc(), 0xdbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbf), 0xcb);
        EXPECT(gbc.readMem(0xdbc0), 0x50);
        // CB 50 00C8
        gbc.setState(0x8fe6, 0x355a, 0x21b0, 0xea73, 0x18bd, 0x778f, 0x1, 0x1);
        gbc.writeMem(0x8fe6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x355a);
        EXPECT(gbc.pc(), 0x8fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe6), 0xcb);
        EXPECT(gbc.readMem(0x8fe7), 0x50);
        // CB 50 00C9
        gbc.setState(0x3632, 0x84eb, 0x37c0, 0x58c3, 0x30cd, 0x4d6e, 0x0, 0x1);
        gbc.writeMem(0x3632, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x84eb);
        EXPECT(gbc.pc(), 0x3634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00CA
        gbc.setState(0x8e76, 0x96de, 0x92e0, 0x81d9, 0x649a, 0xfe70, 0x0, 0x1);
        gbc.writeMem(0x8e76, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x96de);
        EXPECT(gbc.pc(), 0x8e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e76), 0xcb);
        EXPECT(gbc.readMem(0x8e77), 0x50);
        // CB 50 00CB
        gbc.setState(0xb0bd, 0x5532, 0x1530, 0x1e93, 0x6032, 0x6567, 0x1, 0x0);
        gbc.writeMem(0xb0bd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5532);
        EXPECT(gbc.pc(), 0xb0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bd), 0xcb);
        EXPECT(gbc.readMem(0xb0be), 0x50);
        // CB 50 00CC
        gbc.setState(0xdc78, 0x21e9, 0x8f10, 0x4134, 0x6ca2, 0x16fa, 0x1, 0x0);
        gbc.writeMem(0xdc78, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x21e9);
        EXPECT(gbc.pc(), 0xdc7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc78), 0xcb);
        EXPECT(gbc.readMem(0xdc79), 0x50);
        // CB 50 00CD
        gbc.setState(0x6d34, 0x9349, 0x5250, 0x3398, 0x8716, 0x45d3, 0x1, 0x0);
        gbc.writeMem(0x6d34, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9349);
        EXPECT(gbc.pc(), 0x6d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00CE
        gbc.setState(0x39e6, 0x4cfd, 0xa3c0, 0xd28d, 0x8569, 0x2460, 0x1, 0x1);
        gbc.writeMem(0x39e6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4cfd);
        EXPECT(gbc.pc(), 0x39e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00CF
        gbc.setState(0x901e, 0xbda3, 0x4950, 0x22d6, 0x814b, 0x4e83, 0x1, 0x1);
        gbc.writeMem(0x901e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbda3);
        EXPECT(gbc.pc(), 0x9020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901e), 0xcb);
        EXPECT(gbc.readMem(0x901f), 0x50);
        // CB 50 00D0
        gbc.setState(0x547a, 0x6ddf, 0xc600, 0x7717, 0x969b, 0xab73, 0x1, 0x0);
        gbc.writeMem(0x547a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6ddf);
        EXPECT(gbc.pc(), 0x547c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00D1
        gbc.setState(0x8767, 0x1b3c, 0xa060, 0xd036, 0xb9bb, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0x8767, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1b3c);
        EXPECT(gbc.pc(), 0x8769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8767), 0xcb);
        EXPECT(gbc.readMem(0x8768), 0x50);
        // CB 50 00D2
        gbc.setState(0x39f6, 0xc994, 0xacb0, 0xd85e, 0x2220, 0x3988, 0x0, 0x1);
        gbc.writeMem(0x39f6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc994);
        EXPECT(gbc.pc(), 0x39f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00D3
        gbc.setState(0xc3fe, 0x8333, 0x53b0, 0x82e2, 0x3cc9, 0x4d7a, 0x0, 0x0);
        gbc.writeMem(0xc3fe, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8333);
        EXPECT(gbc.pc(), 0xc400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fe), 0xcb);
        EXPECT(gbc.readMem(0xc3ff), 0x50);
        // CB 50 00D4
        gbc.setState(0x3da0, 0xbad5, 0x3f80, 0xbb04, 0xad96, 0x77eb, 0x0, 0x0);
        gbc.writeMem(0x3da0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbad5);
        EXPECT(gbc.pc(), 0x3da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00D5
        gbc.setState(0xa250, 0x3ec7, 0x6280, 0xd710, 0x62a4, 0x7646, 0x1, 0x0);
        gbc.writeMem(0xa250, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3ec7);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa250), 0xcb);
        EXPECT(gbc.readMem(0xa251), 0x50);
        // CB 50 00D6
        gbc.setState(0xaee7, 0xe78, 0x4fe0, 0x91ea, 0x2cab, 0x7f1f, 0x0, 0x1);
        gbc.writeMem(0xaee7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe78);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0x50);
        // CB 50 00D7
        gbc.setState(0x53fe, 0xe1b5, 0xcdc0, 0x313e, 0xb8f1, 0xe2a1, 0x1, 0x0);
        gbc.writeMem(0x53fe, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe1b5);
        EXPECT(gbc.pc(), 0x5400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00D8
        gbc.setState(0xbb3b, 0x7fd8, 0x7df0, 0x4fb4, 0xd347, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0xbb3b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7fd8);
        EXPECT(gbc.pc(), 0xbb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3b), 0xcb);
        EXPECT(gbc.readMem(0xbb3c), 0x50);
        // CB 50 00D9
        gbc.setState(0x4dc, 0x3404, 0xb5a0, 0xfc8d, 0xbc9e, 0x664, 0x0, 0x0);
        gbc.writeMem(0x4dc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3404);
        EXPECT(gbc.pc(), 0x4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00DA
        gbc.setState(0x34e, 0x9244, 0x29c0, 0x58f2, 0xbb89, 0xd547, 0x0, 0x1);
        gbc.writeMem(0x34e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9244);
        EXPECT(gbc.pc(), 0x350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00DB
        gbc.setState(0x9f7d, 0x1bab, 0xac40, 0x6dda, 0xc71f, 0x5012, 0x1, 0x1);
        gbc.writeMem(0x9f7d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1bab);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7d), 0xcb);
        EXPECT(gbc.readMem(0x9f7e), 0x50);
        // CB 50 00DD
        gbc.setState(0x3e07, 0x8946, 0xb3a0, 0x8cf2, 0x2b8b, 0xac40, 0x1, 0x1);
        gbc.writeMem(0x3e07, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8946);
        EXPECT(gbc.pc(), 0x3e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00DE
        gbc.setState(0x5953, 0x8c54, 0xfcf0, 0x2966, 0xb495, 0x4a16, 0x0, 0x1);
        gbc.writeMem(0x5953, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8c54);
        EXPECT(gbc.pc(), 0x5955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00DF
        gbc.setState(0x5d47, 0x30c9, 0x6860, 0xf46a, 0xa64a, 0xb20f, 0x0, 0x0);
        gbc.writeMem(0x5d47, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x30c9);
        EXPECT(gbc.pc(), 0x5d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00E0
        gbc.setState(0x64ed, 0xff2a, 0xaa80, 0x420c, 0xfb84, 0xc605, 0x0, 0x1);
        gbc.writeMem(0x64ed, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xff2a);
        EXPECT(gbc.pc(), 0x64ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00E1
        gbc.setState(0x3a25, 0x7610, 0x2aa0, 0x3575, 0x1e5e, 0xb358, 0x0, 0x0);
        gbc.writeMem(0x3a25, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7610);
        EXPECT(gbc.pc(), 0x3a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00E2
        gbc.setState(0x1029, 0xef38, 0x2730, 0x47da, 0xa61a, 0x328a, 0x1, 0x0);
        gbc.writeMem(0x1029, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0x102b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00E3
        gbc.setState(0xcdb7, 0x9ebd, 0xc710, 0xcb57, 0x9a5e, 0x9711, 0x1, 0x1);
        gbc.writeMem(0xcdb7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9ebd);
        EXPECT(gbc.pc(), 0xcdb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb7), 0xcb);
        EXPECT(gbc.readMem(0xcdb8), 0x50);
        // CB 50 00E4
        gbc.setState(0xcc1b, 0x966c, 0xde0, 0x3483, 0xc0a1, 0x78cd, 0x1, 0x0);
        gbc.writeMem(0xcc1b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x966c);
        EXPECT(gbc.pc(), 0xcc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1b), 0xcb);
        EXPECT(gbc.readMem(0xcc1c), 0x50);
        // CB 50 00E5
        gbc.setState(0x3ebb, 0xb38a, 0x7190, 0xc878, 0x2ad3, 0xe553, 0x0, 0x1);
        gbc.writeMem(0x3ebb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb38a);
        EXPECT(gbc.pc(), 0x3ebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00E7
        gbc.setState(0xc934, 0x9cb0, 0xb880, 0x69be, 0x876e, 0x5761, 0x1, 0x1);
        gbc.writeMem(0xc934, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9cb0);
        EXPECT(gbc.pc(), 0xc936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc934), 0xcb);
        EXPECT(gbc.readMem(0xc935), 0x50);
        // CB 50 00E8
        gbc.setState(0x8e, 0xa376, 0x7ac0, 0x2415, 0x8ce6, 0xeace, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa376);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00E9
        gbc.setState(0x2b5c, 0x79fd, 0x56e0, 0x735d, 0x5a3, 0x117e, 0x0, 0x0);
        gbc.writeMem(0x2b5c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x79fd);
        EXPECT(gbc.pc(), 0x2b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00EA
        gbc.setState(0x963, 0xf9da, 0xe100, 0xcc1a, 0x476f, 0x7278, 0x0, 0x1);
        gbc.writeMem(0x963, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf9da);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00EB
        gbc.setState(0x11cb, 0xe047, 0x9450, 0x1f46, 0x6e7c, 0xde16, 0x1, 0x1);
        gbc.writeMem(0x11cb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe047);
        EXPECT(gbc.pc(), 0x11cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00EC
        gbc.setState(0x776c, 0x7fee, 0xacd0, 0xeb98, 0x5c58, 0x8297, 0x1, 0x0);
        gbc.writeMem(0x776c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7fee);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00ED
        gbc.setState(0x758d, 0xb6b8, 0x73e0, 0x4e2, 0xdf1c, 0x8847, 0x1, 0x1);
        gbc.writeMem(0x758d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0x758f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00EE
        gbc.setState(0x33b4, 0xb527, 0x5630, 0xba29, 0x2cee, 0xdd85, 0x1, 0x1);
        gbc.writeMem(0x33b4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb527);
        EXPECT(gbc.pc(), 0x33b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00EF
        gbc.setState(0x129d, 0x24e3, 0x55d0, 0xeab5, 0xf54f, 0xb424, 0x1, 0x1);
        gbc.writeMem(0x129d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x24e3);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00F0
        gbc.setState(0x4a00, 0x72c, 0xcf00, 0x1cf3, 0x3b4d, 0x3e5c, 0x0, 0x0);
        gbc.writeMem(0x4a00, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x72c);
        EXPECT(gbc.pc(), 0x4a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00F1
        gbc.setState(0x4f2f, 0x5f7b, 0x8650, 0xcf3d, 0x7b7d, 0x8b0d, 0x0, 0x0);
        gbc.writeMem(0x4f2f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5f7b);
        EXPECT(gbc.pc(), 0x4f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00F2
        gbc.setState(0xd499, 0x5a19, 0x8d10, 0x2248, 0xc638, 0x710b, 0x0, 0x1);
        gbc.writeMem(0xd499, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5a19);
        EXPECT(gbc.pc(), 0xd49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd499), 0xcb);
        EXPECT(gbc.readMem(0xd49a), 0x50);
        // CB 50 00F3
        gbc.setState(0x62e3, 0xd39, 0xaef0, 0xa65, 0xe9e0, 0xddf6, 0x1, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd39);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00F4
        gbc.setState(0x3a51, 0xc609, 0x8c30, 0x31ab, 0x281, 0xe932, 0x1, 0x0);
        gbc.writeMem(0x3a51, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc609);
        EXPECT(gbc.pc(), 0x3a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00F5
        gbc.setState(0x690f, 0x4ad6, 0xfc60, 0xae88, 0xde8f, 0xc3b1, 0x1, 0x0);
        gbc.writeMem(0x690f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4ad6);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00F6
        gbc.setState(0x39a9, 0x3232, 0x7f40, 0x1da9, 0x2613, 0xc1f3, 0x1, 0x1);
        gbc.writeMem(0x39a9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3232);
        EXPECT(gbc.pc(), 0x39ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 00F7
        gbc.setState(0x962f, 0x775b, 0x7680, 0x2add, 0x7436, 0x9167, 0x0, 0x0);
        gbc.writeMem(0x962f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x775b);
        EXPECT(gbc.pc(), 0x9631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962f), 0xcb);
        EXPECT(gbc.readMem(0x9630), 0x50);
        // CB 50 00F8
        gbc.setState(0xb531, 0x3074, 0xd500, 0xc44, 0x9a7f, 0xd71e, 0x1, 0x0);
        gbc.writeMem(0xb531, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3074);
        EXPECT(gbc.pc(), 0xb533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb531), 0xcb);
        EXPECT(gbc.readMem(0xb532), 0x50);
        // CB 50 00F9
        gbc.setState(0xc636, 0xbbc9, 0xd650, 0x925a, 0xcfad, 0x66b1, 0x1, 0x1);
        gbc.writeMem(0xc636, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbbc9);
        EXPECT(gbc.pc(), 0xc638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc636), 0xcb);
        EXPECT(gbc.readMem(0xc637), 0x50);
        // CB 50 00FA
        gbc.setState(0x44, 0x64f8, 0x75f0, 0x5d8, 0x318, 0x92f4, 0x1, 0x0);
        gbc.writeMem(0x44, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x64f8);
        EXPECT(gbc.pc(), 0x46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00FB
        gbc.setState(0xab6, 0xfd81, 0xd5f0, 0x25e, 0xbf19, 0x70bd, 0x0, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0xab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00FC
        gbc.setState(0xa270, 0xb034, 0xcf30, 0xb207, 0xaa3, 0x50c0, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb034);
        EXPECT(gbc.pc(), 0xa272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa270), 0xcb);
        EXPECT(gbc.readMem(0xa271), 0x50);
        // CB 50 00FD
        gbc.setState(0xa583, 0xa2cf, 0xc540, 0x3b6d, 0xd341, 0x8cdb, 0x0, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0x50);
        // CB 50 00FE
        gbc.setState(0xbb5, 0xc657, 0xa2f0, 0xf878, 0x75ae, 0x225d, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc657);
        EXPECT(gbc.pc(), 0xbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 00FF
        gbc.setState(0xae4e, 0x23d5, 0xf650, 0x85f0, 0x92d, 0xd28, 0x0, 0x0);
        gbc.writeMem(0xae4e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0xae50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4e), 0xcb);
        EXPECT(gbc.readMem(0xae4f), 0x50);
        // CB 50 0100
        gbc.setState(0x2a2d, 0x62fa, 0x22f0, 0x8926, 0x845c, 0x31d2, 0x1, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x62fa);
        EXPECT(gbc.pc(), 0x2a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0101
        gbc.setState(0xcee5, 0x52a2, 0x95a0, 0x40e8, 0xdbfd, 0x6d95, 0x1, 0x0);
        gbc.writeMem(0xcee5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x52a2);
        EXPECT(gbc.pc(), 0xcee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee5), 0xcb);
        EXPECT(gbc.readMem(0xcee6), 0x50);
        // CB 50 0103
        gbc.setState(0xc198, 0x7869, 0xa950, 0x9d91, 0x8270, 0x315c, 0x0, 0x1);
        gbc.writeMem(0xc198, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7869);
        EXPECT(gbc.pc(), 0xc19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc198), 0xcb);
        EXPECT(gbc.readMem(0xc199), 0x50);
        // CB 50 0104
        gbc.setState(0x4879, 0x4731, 0xe390, 0xf980, 0xa2c0, 0xb5fb, 0x1, 0x0);
        gbc.writeMem(0x4879, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4731);
        EXPECT(gbc.pc(), 0x487b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0105
        gbc.setState(0xeb9a, 0x3021, 0x7600, 0xfc23, 0x215f, 0xfef, 0x1, 0x0);
        gbc.writeMem(0xeb9a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3021);
        EXPECT(gbc.pc(), 0xeb9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb9a), 0xcb);
        EXPECT(gbc.readMem(0xeb9b), 0x50);
        // CB 50 0106
        gbc.setState(0x9904, 0x28ed, 0xad10, 0x2f84, 0x304e, 0xe9b1, 0x0, 0x0);
        gbc.writeMem(0x9904, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0x9906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9904), 0xcb);
        EXPECT(gbc.readMem(0x9905), 0x50);
        // CB 50 0107
        gbc.setState(0xafa1, 0x5052, 0x460, 0x6c50, 0x1e0f, 0x4f71, 0x1, 0x0);
        gbc.writeMem(0xafa1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5052);
        EXPECT(gbc.pc(), 0xafa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa1), 0xcb);
        EXPECT(gbc.readMem(0xafa2), 0x50);
        // CB 50 0108
        gbc.setState(0x7c7, 0xaece, 0x2b70, 0x389f, 0xaa53, 0x75b4, 0x1, 0x1);
        gbc.writeMem(0x7c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaece);
        EXPECT(gbc.pc(), 0x7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0109
        gbc.setState(0x3cb8, 0xa7de, 0xcac0, 0x4572, 0x17b, 0x6109, 0x0, 0x0);
        gbc.writeMem(0x3cb8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa7de);
        EXPECT(gbc.pc(), 0x3cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 010A
        gbc.setState(0xd1ff, 0x4e98, 0xb4e0, 0x98e8, 0x6ded, 0x6493, 0x0, 0x1);
        gbc.writeMem(0xd1ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4e98);
        EXPECT(gbc.pc(), 0xd201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ff), 0xcb);
        EXPECT(gbc.readMem(0xd200), 0x50);
        // CB 50 010B
        gbc.setState(0xea07, 0xce6d, 0xe050, 0x7f8a, 0x13ea, 0x88ef, 0x0, 0x0);
        gbc.writeMem(0xea07, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xce6d);
        EXPECT(gbc.pc(), 0xea09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea07), 0xcb);
        EXPECT(gbc.readMem(0xea08), 0x50);
        // CB 50 010C
        gbc.setState(0x7359, 0xaee2, 0x2390, 0x139, 0x2bea, 0xda28, 0x0, 0x1);
        gbc.writeMem(0x7359, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaee2);
        EXPECT(gbc.pc(), 0x735b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 010D
        gbc.setState(0xd268, 0xa5cd, 0xbd60, 0x37d, 0xc9fe, 0x89e0, 0x0, 0x1);
        gbc.writeMem(0xd268, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa5cd);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd268), 0xcb);
        EXPECT(gbc.readMem(0xd269), 0x50);
        // CB 50 010E
        gbc.setState(0xe551, 0x836c, 0x64e0, 0x89a8, 0x63fb, 0x1af2, 0x1, 0x1);
        gbc.writeMem(0xe551, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x836c);
        EXPECT(gbc.pc(), 0xe553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe551), 0xcb);
        EXPECT(gbc.readMem(0xe552), 0x50);
        // CB 50 010F
        gbc.setState(0x2a20, 0xdaca, 0x26b0, 0xd4d7, 0x89ac, 0xfea7, 0x0, 0x0);
        gbc.writeMem(0x2a20, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0110
        gbc.setState(0x72da, 0x77ed, 0x1100, 0x998e, 0x9aea, 0xb599, 0x1, 0x1);
        gbc.writeMem(0x72da, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x77ed);
        EXPECT(gbc.pc(), 0x72dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0111
        gbc.setState(0x8947, 0xb64a, 0x7a90, 0x2c39, 0x5c18, 0xb83c, 0x1, 0x0);
        gbc.writeMem(0x8947, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb64a);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0x50);
        // CB 50 0112
        gbc.setState(0x2bdc, 0x1109, 0xf90, 0x769e, 0x5b88, 0xb318, 0x0, 0x0);
        gbc.writeMem(0x2bdc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1109);
        EXPECT(gbc.pc(), 0x2bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0113
        gbc.setState(0xe9ca, 0x9bd6, 0x4bf0, 0xe42a, 0x3be3, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0xe9ca, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9bd6);
        EXPECT(gbc.pc(), 0xe9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ca), 0xcb);
        EXPECT(gbc.readMem(0xe9cb), 0x50);
        // CB 50 0114
        gbc.setState(0x89bc, 0xcb41, 0xb580, 0xe8b9, 0x286, 0x8ada, 0x1, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcb41);
        EXPECT(gbc.pc(), 0x89be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bc), 0xcb);
        EXPECT(gbc.readMem(0x89bd), 0x50);
        // CB 50 0115
        gbc.setState(0xed02, 0xc52a, 0x2070, 0x4431, 0xce77, 0xe7e8, 0x0, 0x1);
        gbc.writeMem(0xed02, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc52a);
        EXPECT(gbc.pc(), 0xed04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed02), 0xcb);
        EXPECT(gbc.readMem(0xed03), 0x50);
        // CB 50 0116
        gbc.setState(0xbe2a, 0xb62d, 0x6650, 0x1a5a, 0xc0b3, 0xab98, 0x0, 0x0);
        gbc.writeMem(0xbe2a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb62d);
        EXPECT(gbc.pc(), 0xbe2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2a), 0xcb);
        EXPECT(gbc.readMem(0xbe2b), 0x50);
        // CB 50 0117
        gbc.setState(0xeda9, 0xb617, 0x5bd0, 0xc50d, 0xf0ec, 0xabc3, 0x1, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb617);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda9), 0xcb);
        EXPECT(gbc.readMem(0xedaa), 0x50);
        // CB 50 0118
        gbc.setState(0xcd06, 0x91b7, 0x4140, 0x84d2, 0xc0da, 0x4593, 0x0, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x91b7);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0x50);
        // CB 50 0119
        gbc.setState(0x1054, 0x6552, 0xb0d0, 0x2b85, 0xffd0, 0x182f, 0x0, 0x1);
        gbc.writeMem(0x1054, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6552);
        EXPECT(gbc.pc(), 0x1056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 011A
        gbc.setState(0xa039, 0x25c1, 0x39f0, 0x5f32, 0x4860, 0x1f, 0x1, 0x1);
        gbc.writeMem(0xa039, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x25c1);
        EXPECT(gbc.pc(), 0xa03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa039), 0xcb);
        EXPECT(gbc.readMem(0xa03a), 0x50);
        // CB 50 011B
        gbc.setState(0x36e8, 0x8ce7, 0x160, 0x800a, 0x4227, 0xe9fe, 0x1, 0x1);
        gbc.writeMem(0x36e8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8ce7);
        EXPECT(gbc.pc(), 0x36ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 011C
        gbc.setState(0xccc2, 0x4a49, 0xb70, 0x3c8b, 0x55d8, 0xf7b5, 0x1, 0x1);
        gbc.writeMem(0xccc2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4a49);
        EXPECT(gbc.pc(), 0xccc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc2), 0xcb);
        EXPECT(gbc.readMem(0xccc3), 0x50);
        // CB 50 011D
        gbc.setState(0xe5a, 0x2174, 0x1290, 0x2526, 0xc54d, 0x9497, 0x0, 0x1);
        gbc.writeMem(0xe5a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2174);
        EXPECT(gbc.pc(), 0xe5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 011E
        gbc.setState(0xb73f, 0xd816, 0x3350, 0x300b, 0xeca3, 0xb766, 0x1, 0x1);
        gbc.writeMem(0xb73f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd816);
        EXPECT(gbc.pc(), 0xb741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73f), 0xcb);
        EXPECT(gbc.readMem(0xb740), 0x50);
        // CB 50 011F
        gbc.setState(0xaa2e, 0x73de, 0x5470, 0x3173, 0xa510, 0xbebe, 0x1, 0x1);
        gbc.writeMem(0xaa2e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x73de);
        EXPECT(gbc.pc(), 0xaa30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2e), 0xcb);
        EXPECT(gbc.readMem(0xaa2f), 0x50);
        // CB 50 0122
        gbc.setState(0xa25, 0xd23b, 0x1210, 0xa6ed, 0xb3de, 0x3db3, 0x0, 0x0);
        gbc.writeMem(0xa25, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd23b);
        EXPECT(gbc.pc(), 0xa27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0123
        gbc.setState(0xe844, 0xea94, 0xac30, 0x3f3b, 0x4165, 0x85b7, 0x1, 0x0);
        gbc.writeMem(0xe844, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xea94);
        EXPECT(gbc.pc(), 0xe846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe844), 0xcb);
        EXPECT(gbc.readMem(0xe845), 0x50);
        // CB 50 0124
        gbc.setState(0x6140, 0xd0f9, 0xd190, 0x8911, 0x735b, 0x28cf, 0x1, 0x0);
        gbc.writeMem(0x6140, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd0f9);
        EXPECT(gbc.pc(), 0x6142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0125
        gbc.setState(0x84a, 0x2488, 0xd4e0, 0x1c91, 0xa5a7, 0xf3d9, 0x0, 0x1);
        gbc.writeMem(0x84a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2488);
        EXPECT(gbc.pc(), 0x84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0126
        gbc.setState(0x1827, 0xff82, 0xe70, 0x15be, 0xcd85, 0x2c7d, 0x0, 0x0);
        gbc.writeMem(0x1827, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xff82);
        EXPECT(gbc.pc(), 0x1829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0128
        gbc.setState(0xad9e, 0x6f93, 0xcd20, 0xa065, 0x1cfa, 0x4c4a, 0x1, 0x1);
        gbc.writeMem(0xad9e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6f93);
        EXPECT(gbc.pc(), 0xada0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9e), 0xcb);
        EXPECT(gbc.readMem(0xad9f), 0x50);
        // CB 50 0129
        gbc.setState(0xee47, 0xbd9d, 0xa080, 0xc9d4, 0xaf90, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xee47, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbd9d);
        EXPECT(gbc.pc(), 0xee49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee47), 0xcb);
        EXPECT(gbc.readMem(0xee48), 0x50);
        // CB 50 012A
        gbc.setState(0x890a, 0x44d, 0x4560, 0xc4c5, 0xb407, 0x3ae0, 0x1, 0x1);
        gbc.writeMem(0x890a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x44d);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890a), 0xcb);
        EXPECT(gbc.readMem(0x890b), 0x50);
        // CB 50 012B
        gbc.setState(0xdc83, 0x7948, 0xf090, 0x6739, 0x55e6, 0x7cde, 0x1, 0x1);
        gbc.writeMem(0xdc83, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7948);
        EXPECT(gbc.pc(), 0xdc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc83), 0xcb);
        EXPECT(gbc.readMem(0xdc84), 0x50);
        // CB 50 012C
        gbc.setState(0xb9, 0x44c1, 0x20f0, 0xe51a, 0x221b, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0xb9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x44c1);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 012D
        gbc.setState(0xbcb5, 0xfc51, 0x5060, 0x3a6b, 0x85b7, 0x83a9, 0x0, 0x1);
        gbc.writeMem(0xbcb5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfc51);
        EXPECT(gbc.pc(), 0xbcb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb5), 0xcb);
        EXPECT(gbc.readMem(0xbcb6), 0x50);
        // CB 50 012E
        gbc.setState(0xc8c7, 0x1bb1, 0xff0, 0xf7d7, 0xd92a, 0xe378, 0x1, 0x0);
        gbc.writeMem(0xc8c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1bb1);
        EXPECT(gbc.pc(), 0xc8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c7), 0xcb);
        EXPECT(gbc.readMem(0xc8c8), 0x50);
        // CB 50 012F
        gbc.setState(0x68d7, 0xca7d, 0x4280, 0x1473, 0x58d1, 0xbaec, 0x0, 0x1);
        gbc.writeMem(0x68d7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xca7d);
        EXPECT(gbc.pc(), 0x68d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0130
        gbc.setState(0x3345, 0xf85e, 0x3740, 0x9903, 0x5df2, 0x9ab3, 0x1, 0x1);
        gbc.writeMem(0x3345, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf85e);
        EXPECT(gbc.pc(), 0x3347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0131
        gbc.setState(0x9dcb, 0x9d44, 0xea10, 0x734e, 0x1fa3, 0xcdc9, 0x1, 0x0);
        gbc.writeMem(0x9dcb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9d44);
        EXPECT(gbc.pc(), 0x9dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcb), 0xcb);
        EXPECT(gbc.readMem(0x9dcc), 0x50);
        // CB 50 0132
        gbc.setState(0x2270, 0x98bf, 0xea90, 0x9556, 0x4fb7, 0x9459, 0x0, 0x0);
        gbc.writeMem(0x2270, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x98bf);
        EXPECT(gbc.pc(), 0x2272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0133
        gbc.setState(0x3cf2, 0x468, 0xe7d0, 0x62e5, 0xd6cf, 0x74b5, 0x1, 0x0);
        gbc.writeMem(0x3cf2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x468);
        EXPECT(gbc.pc(), 0x3cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0134
        gbc.setState(0xe35f, 0x810d, 0x5b00, 0x713e, 0x141d, 0x62ef, 0x0, 0x1);
        gbc.writeMem(0xe35f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0x50);
        // CB 50 0135
        gbc.setState(0xaa2b, 0x74d1, 0xce40, 0xc550, 0x7b40, 0x39b0, 0x0, 0x0);
        gbc.writeMem(0xaa2b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x74d1);
        EXPECT(gbc.pc(), 0xaa2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2b), 0xcb);
        EXPECT(gbc.readMem(0xaa2c), 0x50);
        // CB 50 0137
        gbc.setState(0xd2bf, 0x392a, 0x6210, 0x80cf, 0xad3, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0xd2bf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x392a);
        EXPECT(gbc.pc(), 0xd2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2bf), 0xcb);
        EXPECT(gbc.readMem(0xd2c0), 0x50);
        // CB 50 0139
        gbc.setState(0x4e20, 0x146c, 0x7480, 0x5c99, 0x8fa7, 0x8f6f, 0x1, 0x0);
        gbc.writeMem(0x4e20, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0x4e22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 013A
        gbc.setState(0xd552, 0xac90, 0xb830, 0x1df8, 0x17d3, 0xe361, 0x0, 0x0);
        gbc.writeMem(0xd552, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xac90);
        EXPECT(gbc.pc(), 0xd554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd552), 0xcb);
        EXPECT(gbc.readMem(0xd553), 0x50);
        // CB 50 013B
        gbc.setState(0x961f, 0xba8d, 0xcc30, 0xab21, 0xe849, 0x52c6, 0x0, 0x1);
        gbc.writeMem(0x961f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xba8d);
        EXPECT(gbc.pc(), 0x9621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961f), 0xcb);
        EXPECT(gbc.readMem(0x9620), 0x50);
        // CB 50 013C
        gbc.setState(0xc952, 0x4281, 0x9590, 0x5036, 0x2544, 0x33e7, 0x0, 0x0);
        gbc.writeMem(0xc952, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4281);
        EXPECT(gbc.pc(), 0xc954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc952), 0xcb);
        EXPECT(gbc.readMem(0xc953), 0x50);
        // CB 50 013D
        gbc.setState(0x57da, 0xb3c, 0x9580, 0x8157, 0x9532, 0x18de, 0x1, 0x1);
        gbc.writeMem(0x57da, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb3c);
        EXPECT(gbc.pc(), 0x57dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 013E
        gbc.setState(0xa8a, 0xb851, 0xa0a0, 0x473a, 0x8a79, 0x531b, 0x0, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb851);
        EXPECT(gbc.pc(), 0xa8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 013F
        gbc.setState(0xc457, 0xdaff, 0x52a0, 0x4a37, 0x12e4, 0x7f80, 0x1, 0x1);
        gbc.writeMem(0xc457, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdaff);
        EXPECT(gbc.pc(), 0xc459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc457), 0xcb);
        EXPECT(gbc.readMem(0xc458), 0x50);
        // CB 50 0140
        gbc.setState(0xc78e, 0x6969, 0x52c0, 0xfab6, 0xbb61, 0x75e6, 0x1, 0x1);
        gbc.writeMem(0xc78e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6969);
        EXPECT(gbc.pc(), 0xc790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78e), 0xcb);
        EXPECT(gbc.readMem(0xc78f), 0x50);
        // CB 50 0141
        gbc.setState(0x2ccd, 0x9055, 0x5f0, 0x71cb, 0x3706, 0x269e, 0x1, 0x1);
        gbc.writeMem(0x2ccd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9055);
        EXPECT(gbc.pc(), 0x2ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0142
        gbc.setState(0xc828, 0x51fc, 0x28c0, 0x920, 0x3b0a, 0x45fc, 0x0, 0x1);
        gbc.writeMem(0xc828, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x51fc);
        EXPECT(gbc.pc(), 0xc82a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc828), 0xcb);
        EXPECT(gbc.readMem(0xc829), 0x50);
        // CB 50 0143
        gbc.setState(0x9877, 0x2ed, 0x8080, 0xe72e, 0xb63a, 0xf382, 0x1, 0x0);
        gbc.writeMem(0x9877, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2ed);
        EXPECT(gbc.pc(), 0x9879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9877), 0xcb);
        EXPECT(gbc.readMem(0x9878), 0x50);
        // CB 50 0144
        gbc.setState(0x8bb5, 0x4140, 0x3d80, 0xe900, 0x27ff, 0x37c6, 0x1, 0x1);
        gbc.writeMem(0x8bb5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4140);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb5), 0xcb);
        EXPECT(gbc.readMem(0x8bb6), 0x50);
        // CB 50 0145
        gbc.setState(0x8b1c, 0xfa90, 0x5c40, 0xb2f3, 0xbcb7, 0x2718, 0x1, 0x0);
        gbc.writeMem(0x8b1c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfa90);
        EXPECT(gbc.pc(), 0x8b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1c), 0xcb);
        EXPECT(gbc.readMem(0x8b1d), 0x50);
        // CB 50 0146
        gbc.setState(0xce59, 0x5c2e, 0x320, 0xb416, 0x11a5, 0xfbf0, 0x1, 0x1);
        gbc.writeMem(0xce59, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5c2e);
        EXPECT(gbc.pc(), 0xce5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce59), 0xcb);
        EXPECT(gbc.readMem(0xce5a), 0x50);
        // CB 50 0147
        gbc.setState(0x227, 0x4a5c, 0x77a0, 0x739, 0xcb87, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0x227, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0x229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0148
        gbc.setState(0x1b5f, 0x876b, 0x5ae0, 0x593d, 0xa7a2, 0x2346, 0x1, 0x1);
        gbc.writeMem(0x1b5f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x876b);
        EXPECT(gbc.pc(), 0x1b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0149
        gbc.setState(0x1266, 0x399a, 0x6450, 0x5c0e, 0x4851, 0x8d6b, 0x1, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x399a);
        EXPECT(gbc.pc(), 0x1268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 014A
        gbc.setState(0xcc83, 0xdfc6, 0xce30, 0x3267, 0x50c0, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0xcc83, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdfc6);
        EXPECT(gbc.pc(), 0xcc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc83), 0xcb);
        EXPECT(gbc.readMem(0xcc84), 0x50);
        // CB 50 014B
        gbc.setState(0x123e, 0x58fb, 0x1a00, 0xc28a, 0x70eb, 0xd99d, 0x1, 0x1);
        gbc.writeMem(0x123e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0x1240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 014C
        gbc.setState(0x6c2a, 0xbb79, 0x3450, 0x6538, 0xaece, 0xe327, 0x0, 0x0);
        gbc.writeMem(0x6c2a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbb79);
        EXPECT(gbc.pc(), 0x6c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 014D
        gbc.setState(0xb2e3, 0xc860, 0x6040, 0xab59, 0xa443, 0xbaf2, 0x1, 0x0);
        gbc.writeMem(0xb2e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc860);
        EXPECT(gbc.pc(), 0xb2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e3), 0xcb);
        EXPECT(gbc.readMem(0xb2e4), 0x50);
        // CB 50 014E
        gbc.setState(0xabe7, 0x1755, 0x1340, 0x2469, 0x76c0, 0xa129, 0x0, 0x0);
        gbc.writeMem(0xabe7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1755);
        EXPECT(gbc.pc(), 0xabe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe7), 0xcb);
        EXPECT(gbc.readMem(0xabe8), 0x50);
        // CB 50 014F
        gbc.setState(0x412f, 0x134f, 0xc10, 0x3f6f, 0xa173, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0x412f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x134f);
        EXPECT(gbc.pc(), 0x4131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0150
        gbc.setState(0x26b2, 0x9a4d, 0xc000, 0x14c0, 0x4ae8, 0x5b39, 0x0, 0x1);
        gbc.writeMem(0x26b2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9a4d);
        EXPECT(gbc.pc(), 0x26b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0151
        gbc.setState(0x6072, 0x5305, 0xb940, 0xec46, 0x6b20, 0x7604, 0x1, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5305);
        EXPECT(gbc.pc(), 0x6074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0152
        gbc.setState(0x493f, 0x572b, 0xe940, 0x36ba, 0x3bb8, 0x10da, 0x0, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x572b);
        EXPECT(gbc.pc(), 0x4941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0153
        gbc.setState(0xb09d, 0xa3f9, 0xf00, 0xce60, 0xa8e1, 0xebc1, 0x0, 0x0);
        gbc.writeMem(0xb09d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0xb09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09d), 0xcb);
        EXPECT(gbc.readMem(0xb09e), 0x50);
        // CB 50 0154
        gbc.setState(0xa2c0, 0xc890, 0x13a0, 0x8bcf, 0x22c3, 0x1994, 0x0, 0x1);
        gbc.writeMem(0xa2c0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc890);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c0), 0xcb);
        EXPECT(gbc.readMem(0xa2c1), 0x50);
        // CB 50 0155
        gbc.setState(0xe6af, 0x30e5, 0xcee0, 0x572b, 0xfd09, 0x82cc, 0x1, 0x1);
        gbc.writeMem(0xe6af, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x30e5);
        EXPECT(gbc.pc(), 0xe6b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6af), 0xcb);
        EXPECT(gbc.readMem(0xe6b0), 0x50);
        // CB 50 0156
        gbc.setState(0x5756, 0x92e8, 0x8d80, 0x41e, 0x5485, 0xd9a7, 0x0, 0x0);
        gbc.writeMem(0x5756, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x92e8);
        EXPECT(gbc.pc(), 0x5758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0158
        gbc.setState(0x5644, 0xd2f7, 0x14a0, 0x229, 0xdde4, 0x8ebc, 0x1, 0x0);
        gbc.writeMem(0x5644, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0x5646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0159
        gbc.setState(0x4a3f, 0x20e1, 0x3270, 0xada8, 0x5541, 0x2345, 0x1, 0x0);
        gbc.writeMem(0x4a3f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0x4a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 015A
        gbc.setState(0x5cc, 0x13eb, 0xe430, 0x3239, 0xcb55, 0xfeca, 0x0, 0x0);
        gbc.writeMem(0x5cc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x13eb);
        EXPECT(gbc.pc(), 0x5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 015C
        gbc.setState(0xe286, 0xd3c7, 0xac00, 0x6d86, 0xf2ec, 0x2c9c, 0x0, 0x1);
        gbc.writeMem(0xe286, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd3c7);
        EXPECT(gbc.pc(), 0xe288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe286), 0xcb);
        EXPECT(gbc.readMem(0xe287), 0x50);
        // CB 50 015D
        gbc.setState(0xa12a, 0xebbf, 0x4fc0, 0x91fe, 0x5e26, 0x2482, 0x0, 0x1);
        gbc.writeMem(0xa12a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0xa12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12a), 0xcb);
        EXPECT(gbc.readMem(0xa12b), 0x50);
        // CB 50 015E
        gbc.setState(0x6f3c, 0x80c9, 0xd440, 0x9213, 0xd435, 0x7dfd, 0x0, 0x1);
        gbc.writeMem(0x6f3c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x6f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 015F
        gbc.setState(0x752, 0x9cfb, 0x290, 0xac4d, 0x70ca, 0xeb7, 0x1, 0x1);
        gbc.writeMem(0x752, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9cfb);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0160
        gbc.setState(0xff4, 0x4912, 0x7e80, 0xce8b, 0x357d, 0x2879, 0x1, 0x1);
        gbc.writeMem(0xff4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4912);
        EXPECT(gbc.pc(), 0xff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0161
        gbc.setState(0x7b1d, 0x884e, 0x900, 0xc76e, 0xa488, 0xe8f7, 0x0, 0x0);
        gbc.writeMem(0x7b1d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x884e);
        EXPECT(gbc.pc(), 0x7b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0162
        gbc.setState(0xa050, 0xd792, 0x1070, 0x49d6, 0x56fa, 0xeebd, 0x0, 0x1);
        gbc.writeMem(0xa050, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd792);
        EXPECT(gbc.pc(), 0xa052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa050), 0xcb);
        EXPECT(gbc.readMem(0xa051), 0x50);
        // CB 50 0164
        gbc.setState(0x87e8, 0xe16c, 0xe450, 0xf875, 0x8688, 0x3139, 0x1, 0x0);
        gbc.writeMem(0x87e8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe16c);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e8), 0xcb);
        EXPECT(gbc.readMem(0x87e9), 0x50);
        // CB 50 0165
        gbc.setState(0x9f13, 0xac62, 0xee0, 0x25f9, 0x5397, 0x988f, 0x0, 0x0);
        gbc.writeMem(0x9f13, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xac62);
        EXPECT(gbc.pc(), 0x9f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f13), 0xcb);
        EXPECT(gbc.readMem(0x9f14), 0x50);
        // CB 50 0166
        gbc.setState(0x3453, 0xf4c8, 0x4ed0, 0xbc22, 0x8bad, 0x563c, 0x1, 0x1);
        gbc.writeMem(0x3453, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf4c8);
        EXPECT(gbc.pc(), 0x3455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0167
        gbc.setState(0x79fa, 0x58aa, 0x8350, 0xca1c, 0x380d, 0x53c8, 0x1, 0x0);
        gbc.writeMem(0x79fa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x58aa);
        EXPECT(gbc.pc(), 0x79fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0168
        gbc.setState(0x336c, 0x9723, 0x76c0, 0xef02, 0x4b93, 0x631b, 0x1, 0x0);
        gbc.writeMem(0x336c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9723);
        EXPECT(gbc.pc(), 0x336e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0169
        gbc.setState(0xa7d9, 0x1a5c, 0x81f0, 0x3a69, 0xb6da, 0xf8c7, 0x0, 0x1);
        gbc.writeMem(0xa7d9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1a5c);
        EXPECT(gbc.pc(), 0xa7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d9), 0xcb);
        EXPECT(gbc.readMem(0xa7da), 0x50);
        // CB 50 016A
        gbc.setState(0xa8f6, 0xabf4, 0x9290, 0xb59d, 0xb29e, 0x533a, 0x1, 0x0);
        gbc.writeMem(0xa8f6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0xa8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f6), 0xcb);
        EXPECT(gbc.readMem(0xa8f7), 0x50);
        // CB 50 016B
        gbc.setState(0x2994, 0x8834, 0x7160, 0xb8b5, 0x200c, 0x1d55, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8834);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 016C
        gbc.setState(0x5b21, 0xa321, 0x57a0, 0x11d0, 0x3e4d, 0xf899, 0x1, 0x0);
        gbc.writeMem(0x5b21, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa321);
        EXPECT(gbc.pc(), 0x5b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 016D
        gbc.setState(0x9026, 0x81a0, 0x8df0, 0x965b, 0xfe49, 0x990b, 0x1, 0x1);
        gbc.writeMem(0x9026, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x81a0);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9026), 0xcb);
        EXPECT(gbc.readMem(0x9027), 0x50);
        // CB 50 016E
        gbc.setState(0xd9d1, 0xd098, 0x7850, 0xa371, 0x8449, 0x59c1, 0x0, 0x1);
        gbc.writeMem(0xd9d1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd098);
        EXPECT(gbc.pc(), 0xd9d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d1), 0xcb);
        EXPECT(gbc.readMem(0xd9d2), 0x50);
        // CB 50 016F
        gbc.setState(0x7d6e, 0xca96, 0xc270, 0x2ed2, 0x5cd2, 0x7492, 0x0, 0x1);
        gbc.writeMem(0x7d6e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xca96);
        EXPECT(gbc.pc(), 0x7d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0170
        gbc.setState(0x6975, 0x84e9, 0x32d0, 0x1864, 0x9fc9, 0xccec, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x84e9);
        EXPECT(gbc.pc(), 0x6977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0171
        gbc.setState(0xdc56, 0x8b44, 0xc5c0, 0x6b80, 0x9c98, 0x56d, 0x1, 0x1);
        gbc.writeMem(0xdc56, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8b44);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc56), 0xcb);
        EXPECT(gbc.readMem(0xdc57), 0x50);
        // CB 50 0172
        gbc.setState(0x4e3, 0x90da, 0xa7b0, 0xfd93, 0x7d6f, 0xe272, 0x1, 0x0);
        gbc.writeMem(0x4e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x90da);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0174
        gbc.setState(0xa522, 0x2eb, 0x8910, 0x3b18, 0xfae0, 0xc6d9, 0x1, 0x0);
        gbc.writeMem(0xa522, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2eb);
        EXPECT(gbc.pc(), 0xa524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa522), 0xcb);
        EXPECT(gbc.readMem(0xa523), 0x50);
        // CB 50 0175
        gbc.setState(0x653, 0xf67, 0x3e90, 0x1f32, 0xb425, 0x261d, 0x0, 0x1);
        gbc.writeMem(0x653, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf67);
        EXPECT(gbc.pc(), 0x655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0176
        gbc.setState(0xc40e, 0x428e, 0x4cb0, 0x41a5, 0x2c59, 0x710e, 0x0, 0x0);
        gbc.writeMem(0xc40e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x428e);
        EXPECT(gbc.pc(), 0xc410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc40e), 0xcb);
        EXPECT(gbc.readMem(0xc40f), 0x50);
        // CB 50 0177
        gbc.setState(0x19b5, 0xf73a, 0x7b20, 0x7a92, 0x6cd5, 0x7811, 0x0, 0x1);
        gbc.writeMem(0x19b5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf73a);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0178
        gbc.setState(0x61db, 0x6934, 0x51c0, 0x3ea3, 0x7553, 0x2a81, 0x1, 0x0);
        gbc.writeMem(0x61db, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6934);
        EXPECT(gbc.pc(), 0x61dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0179
        gbc.setState(0x99b1, 0x447d, 0x5e80, 0xf474, 0x7246, 0xa5aa, 0x1, 0x0);
        gbc.writeMem(0x99b1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x447d);
        EXPECT(gbc.pc(), 0x99b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b1), 0xcb);
        EXPECT(gbc.readMem(0x99b2), 0x50);
        // CB 50 017A
        gbc.setState(0x1624, 0xc38b, 0xc950, 0x9fe5, 0x3a1f, 0x488f, 0x0, 0x0);
        gbc.writeMem(0x1624, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc38b);
        EXPECT(gbc.pc(), 0x1626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 017B
        gbc.setState(0x1e65, 0x877e, 0x5d0, 0xa932, 0xba45, 0xe220, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x877e);
        EXPECT(gbc.pc(), 0x1e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 017C
        gbc.setState(0x9eae, 0x3f55, 0x1760, 0x7762, 0x8ece, 0x966d, 0x1, 0x1);
        gbc.writeMem(0x9eae, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3f55);
        EXPECT(gbc.pc(), 0x9eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eae), 0xcb);
        EXPECT(gbc.readMem(0x9eaf), 0x50);
        // CB 50 017D
        gbc.setState(0xbac2, 0x722b, 0x5b20, 0xf938, 0xcf8f, 0x1544, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x722b);
        EXPECT(gbc.pc(), 0xbac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac2), 0xcb);
        EXPECT(gbc.readMem(0xbac3), 0x50);
        // CB 50 017E
        gbc.setState(0x7808, 0xce87, 0x68c0, 0x1afd, 0xae7c, 0xfffa, 0x1, 0x0);
        gbc.writeMem(0x7808, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xce87);
        EXPECT(gbc.pc(), 0x780a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 017F
        gbc.setState(0x2844, 0x1f77, 0xcd40, 0x7857, 0x57a6, 0x2b49, 0x0, 0x0);
        gbc.writeMem(0x2844, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1f77);
        EXPECT(gbc.pc(), 0x2846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0180
        gbc.setState(0x512b, 0x824, 0x5c30, 0x12be, 0xfc74, 0x7fb4, 0x1, 0x1);
        gbc.writeMem(0x512b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x824);
        EXPECT(gbc.pc(), 0x512d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0181
        gbc.setState(0x2e26, 0xe2a2, 0xc810, 0xa508, 0x399e, 0xfd6, 0x1, 0x1);
        gbc.writeMem(0x2e26, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe2a2);
        EXPECT(gbc.pc(), 0x2e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0182
        gbc.setState(0x34b1, 0x2588, 0x6560, 0x8373, 0x4de9, 0x4c70, 0x0, 0x0);
        gbc.writeMem(0x34b1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2588);
        EXPECT(gbc.pc(), 0x34b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0183
        gbc.setState(0xd671, 0x34ab, 0x18b0, 0xb3cb, 0x7ccc, 0x9b61, 0x1, 0x0);
        gbc.writeMem(0xd671, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x34ab);
        EXPECT(gbc.pc(), 0xd673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd671), 0xcb);
        EXPECT(gbc.readMem(0xd672), 0x50);
        // CB 50 0184
        gbc.setState(0x62db, 0x2274, 0xf0c0, 0xfae2, 0x99cd, 0xe923, 0x1, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2274);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0185
        gbc.setState(0xc6ff, 0x67d8, 0x2d70, 0x3ef8, 0xe2db, 0x186, 0x0, 0x0);
        gbc.writeMem(0xc6ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x67d8);
        EXPECT(gbc.pc(), 0xc701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ff), 0xcb);
        EXPECT(gbc.readMem(0xc700), 0x50);
        // CB 50 0186
        gbc.setState(0x2615, 0x35cb, 0xc3b0, 0x2bfd, 0x95dc, 0x4efe, 0x0, 0x1);
        gbc.writeMem(0x2615, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x35cb);
        EXPECT(gbc.pc(), 0x2617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0187
        gbc.setState(0x6023, 0xf553, 0xeb10, 0x46ba, 0xf2e, 0x9f84, 0x1, 0x0);
        gbc.writeMem(0x6023, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf553);
        EXPECT(gbc.pc(), 0x6025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0188
        gbc.setState(0xc6c7, 0x1dbe, 0xec50, 0xd0dd, 0xfd6c, 0xe081, 0x0, 0x1);
        gbc.writeMem(0xc6c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1dbe);
        EXPECT(gbc.pc(), 0xc6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c7), 0xcb);
        EXPECT(gbc.readMem(0xc6c8), 0x50);
        // CB 50 0189
        gbc.setState(0xc1f5, 0xad31, 0x7db0, 0xa595, 0xe127, 0x5f4, 0x0, 0x0);
        gbc.writeMem(0xc1f5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xad31);
        EXPECT(gbc.pc(), 0xc1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f5), 0xcb);
        EXPECT(gbc.readMem(0xc1f6), 0x50);
        // CB 50 018A
        gbc.setState(0x64df, 0x880b, 0x1190, 0x4853, 0xbe77, 0xb621, 0x0, 0x0);
        gbc.writeMem(0x64df, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x880b);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 018B
        gbc.setState(0xc892, 0xf16c, 0xcc60, 0x3f0a, 0xe514, 0xc8f3, 0x0, 0x1);
        gbc.writeMem(0xc892, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf16c);
        EXPECT(gbc.pc(), 0xc894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc892), 0xcb);
        EXPECT(gbc.readMem(0xc893), 0x50);
        // CB 50 018C
        gbc.setState(0x2071, 0x277a, 0x84c0, 0x54c2, 0xdb08, 0xa8e9, 0x0, 0x0);
        gbc.writeMem(0x2071, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x277a);
        EXPECT(gbc.pc(), 0x2073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 018D
        gbc.setState(0x8348, 0xec0b, 0x67d0, 0xaa81, 0x9150, 0x44eb, 0x0, 0x1);
        gbc.writeMem(0x8348, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xec0b);
        EXPECT(gbc.pc(), 0x834a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8348), 0xcb);
        EXPECT(gbc.readMem(0x8349), 0x50);
        // CB 50 018E
        gbc.setState(0xb4dc, 0x497b, 0x640, 0x8336, 0x8ceb, 0xec62, 0x0, 0x0);
        gbc.writeMem(0xb4dc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x497b);
        EXPECT(gbc.pc(), 0xb4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dc), 0xcb);
        EXPECT(gbc.readMem(0xb4dd), 0x50);
        // CB 50 018F
        gbc.setState(0xcef2, 0xeb27, 0xb520, 0x44ab, 0x782a, 0x1ab7, 0x1, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeb27);
        EXPECT(gbc.pc(), 0xcef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef2), 0xcb);
        EXPECT(gbc.readMem(0xcef3), 0x50);
        // CB 50 0190
        gbc.setState(0x5ede, 0x4a7, 0xbc80, 0xf5cf, 0x1933, 0x725, 0x1, 0x1);
        gbc.writeMem(0x5ede, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4a7);
        EXPECT(gbc.pc(), 0x5ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0191
        gbc.setState(0x4cec, 0x3cde, 0x9d40, 0xe601, 0xa125, 0xba07, 0x1, 0x1);
        gbc.writeMem(0x4cec, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3cde);
        EXPECT(gbc.pc(), 0x4cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0192
        gbc.setState(0x8ae8, 0xff42, 0x7280, 0x997a, 0xbcc6, 0xe34e, 0x0, 0x1);
        gbc.writeMem(0x8ae8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xff42);
        EXPECT(gbc.pc(), 0x8aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae8), 0xcb);
        EXPECT(gbc.readMem(0x8ae9), 0x50);
        // CB 50 0194
        gbc.setState(0x2f23, 0x69c5, 0x9c80, 0x3ad8, 0x2571, 0x415, 0x1, 0x1);
        gbc.writeMem(0x2f23, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x69c5);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0195
        gbc.setState(0x165, 0xfb98, 0xc350, 0x72ae, 0x1dc5, 0x3298, 0x0, 0x1);
        gbc.writeMem(0x165, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0196
        gbc.setState(0xa5ce, 0x94c5, 0xbd90, 0xdaec, 0x67e5, 0xcc2e, 0x0, 0x0);
        gbc.writeMem(0xa5ce, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0xa5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ce), 0xcb);
        EXPECT(gbc.readMem(0xa5cf), 0x50);
        // CB 50 0198
        gbc.setState(0x1ba7, 0x1c6, 0x32b0, 0x8286, 0x9322, 0xfdf5, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1c6);
        EXPECT(gbc.pc(), 0x1ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0199
        gbc.setState(0x1faa, 0x7a17, 0x5e10, 0x408a, 0xa624, 0x2f54, 0x0, 0x0);
        gbc.writeMem(0x1faa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7a17);
        EXPECT(gbc.pc(), 0x1fac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 019A
        gbc.setState(0x1481, 0xfdf7, 0x8360, 0x6528, 0x2d50, 0x90a8, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfdf7);
        EXPECT(gbc.pc(), 0x1483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 019B
        gbc.setState(0xe02e, 0x9541, 0xdd40, 0xd83e, 0x194b, 0xb57, 0x1, 0x0);
        gbc.writeMem(0xe02e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9541);
        EXPECT(gbc.pc(), 0xe030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02e), 0xcb);
        EXPECT(gbc.readMem(0xe02f), 0x50);
        // CB 50 019C
        gbc.setState(0x97aa, 0x5b46, 0xc900, 0x406d, 0x58bb, 0xa07c, 0x0, 0x0);
        gbc.writeMem(0x97aa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5b46);
        EXPECT(gbc.pc(), 0x97ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97aa), 0xcb);
        EXPECT(gbc.readMem(0x97ab), 0x50);
        // CB 50 019D
        gbc.setState(0x6910, 0x3633, 0x4fd0, 0x8c22, 0x6ffc, 0x7323, 0x1, 0x0);
        gbc.writeMem(0x6910, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3633);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 019E
        gbc.setState(0xe33f, 0x32f6, 0xdb70, 0xa6da, 0xc3a4, 0x71fa, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x32f6);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33f), 0xcb);
        EXPECT(gbc.readMem(0xe340), 0x50);
        // CB 50 019F
        gbc.setState(0x870f, 0x4d36, 0xb8b0, 0x91fe, 0xad8b, 0x7782, 0x1, 0x1);
        gbc.writeMem(0x870f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4d36);
        EXPECT(gbc.pc(), 0x8711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870f), 0xcb);
        EXPECT(gbc.readMem(0x8710), 0x50);
        // CB 50 01A0
        gbc.setState(0xd7f5, 0xa42e, 0xe650, 0x68e1, 0xf046, 0xfa11, 0x1, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0x50);
        // CB 50 01A1
        gbc.setState(0xbb1c, 0xbfd7, 0x79b0, 0xeb45, 0x5d41, 0xca3b, 0x0, 0x0);
        gbc.writeMem(0xbb1c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbfd7);
        EXPECT(gbc.pc(), 0xbb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1c), 0xcb);
        EXPECT(gbc.readMem(0xbb1d), 0x50);
        // CB 50 01A2
        gbc.setState(0x325e, 0x98e3, 0x5bf0, 0x7f74, 0xcd67, 0xaff1, 0x0, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x98e3);
        EXPECT(gbc.pc(), 0x3260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01A3
        gbc.setState(0x1fe6, 0xb45b, 0x31c0, 0x2bcd, 0x8a6f, 0x5c91, 0x0, 0x1);
        gbc.writeMem(0x1fe6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0x1fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01A4
        gbc.setState(0x9b83, 0x273a, 0x7e10, 0x3d50, 0x515e, 0xdb7c, 0x0, 0x0);
        gbc.writeMem(0x9b83, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x273a);
        EXPECT(gbc.pc(), 0x9b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b83), 0xcb);
        EXPECT(gbc.readMem(0x9b84), 0x50);
        // CB 50 01A5
        gbc.setState(0x48d6, 0xbc8a, 0x66d0, 0x3a02, 0xd466, 0x6b07, 0x1, 0x1);
        gbc.writeMem(0x48d6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbc8a);
        EXPECT(gbc.pc(), 0x48d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01A7
        gbc.setState(0xa01c, 0x1e6c, 0xc3e0, 0x34a, 0x5f2a, 0x47b2, 0x1, 0x0);
        gbc.writeMem(0xa01c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1e6c);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01c), 0xcb);
        EXPECT(gbc.readMem(0xa01d), 0x50);
        // CB 50 01A8
        gbc.setState(0xe3fb, 0xd1fa, 0x84b0, 0x1750, 0x6fe, 0xa2, 0x1, 0x1);
        gbc.writeMem(0xe3fb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd1fa);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fb), 0xcb);
        EXPECT(gbc.readMem(0xe3fc), 0x50);
        // CB 50 01A9
        gbc.setState(0x434d, 0xc744, 0x45f0, 0xfb1e, 0x3c43, 0x5189, 0x1, 0x0);
        gbc.writeMem(0x434d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc744);
        EXPECT(gbc.pc(), 0x434f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01AA
        gbc.setState(0x30a7, 0x4339, 0x4f10, 0x28a2, 0x1b60, 0x5991, 0x0, 0x0);
        gbc.writeMem(0x30a7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4339);
        EXPECT(gbc.pc(), 0x30a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01AB
        gbc.setState(0x59c4, 0xc5b5, 0x7ec0, 0xe93f, 0x8b17, 0x88ec, 0x1, 0x1);
        gbc.writeMem(0x59c4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc5b5);
        EXPECT(gbc.pc(), 0x59c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01AC
        gbc.setState(0x4596, 0xffed, 0xe380, 0x43f0, 0xacf0, 0x8582, 0x1, 0x0);
        gbc.writeMem(0x4596, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xffed);
        EXPECT(gbc.pc(), 0x4598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01AD
        gbc.setState(0x80ce, 0xc608, 0xae60, 0xa400, 0x48d9, 0x665e, 0x0, 0x1);
        gbc.writeMem(0x80ce, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc608);
        EXPECT(gbc.pc(), 0x80d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ce), 0xcb);
        EXPECT(gbc.readMem(0x80cf), 0x50);
        // CB 50 01AE
        gbc.setState(0x32c6, 0x3e3c, 0xf4a0, 0x7f3b, 0x8608, 0x660e, 0x0, 0x0);
        gbc.writeMem(0x32c6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3e3c);
        EXPECT(gbc.pc(), 0x32c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01AF
        gbc.setState(0xeabc, 0x2ded, 0x81b0, 0x4a9d, 0x4aa6, 0x4bb6, 0x0, 0x1);
        gbc.writeMem(0xeabc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2ded);
        EXPECT(gbc.pc(), 0xeabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabc), 0xcb);
        EXPECT(gbc.readMem(0xeabd), 0x50);
        // CB 50 01B0
        gbc.setState(0x7bee, 0xaac2, 0x6a90, 0x889f, 0x2bb6, 0x72b8, 0x0, 0x1);
        gbc.writeMem(0x7bee, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaac2);
        EXPECT(gbc.pc(), 0x7bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01B1
        gbc.setState(0x66d3, 0xaa6c, 0xc1b0, 0x67a0, 0xcd18, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0x66d3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0x66d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01B2
        gbc.setState(0x2e39, 0xb2de, 0x3d90, 0x69f3, 0x75df, 0xf71a, 0x0, 0x0);
        gbc.writeMem(0x2e39, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb2de);
        EXPECT(gbc.pc(), 0x2e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01B3
        gbc.setState(0xe3e5, 0x6b44, 0xd540, 0xde9a, 0x8152, 0x9554, 0x1, 0x0);
        gbc.writeMem(0xe3e5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6b44);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e5), 0xcb);
        EXPECT(gbc.readMem(0xe3e6), 0x50);
        // CB 50 01B4
        gbc.setState(0x6ec9, 0x6971, 0xff30, 0xe19, 0x6588, 0x54fa, 0x0, 0x0);
        gbc.writeMem(0x6ec9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6971);
        EXPECT(gbc.pc(), 0x6ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01B5
        gbc.setState(0x44f5, 0x87f5, 0x7ce0, 0x1d32, 0xa76c, 0xef9, 0x0, 0x0);
        gbc.writeMem(0x44f5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x87f5);
        EXPECT(gbc.pc(), 0x44f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01B6
        gbc.setState(0xdef5, 0x82d6, 0xb510, 0x7320, 0x74ea, 0x613a, 0x0, 0x0);
        gbc.writeMem(0xdef5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x82d6);
        EXPECT(gbc.pc(), 0xdef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef5), 0xcb);
        EXPECT(gbc.readMem(0xdef6), 0x50);
        // CB 50 01B7
        gbc.setState(0x6a6d, 0x940e, 0x22c0, 0x2832, 0xff26, 0xf41e, 0x0, 0x1);
        gbc.writeMem(0x6a6d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x940e);
        EXPECT(gbc.pc(), 0x6a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01B8
        gbc.setState(0x493a, 0x6b5d, 0x59c0, 0x360a, 0xd2cc, 0xdc49, 0x1, 0x1);
        gbc.writeMem(0x493a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6b5d);
        EXPECT(gbc.pc(), 0x493c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01B9
        gbc.setState(0x8fdd, 0xde3d, 0x5820, 0x65cf, 0xb823, 0xeb38, 0x1, 0x1);
        gbc.writeMem(0x8fdd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x8fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdd), 0xcb);
        EXPECT(gbc.readMem(0x8fde), 0x50);
        // CB 50 01BA
        gbc.setState(0x9481, 0x37b3, 0x43f0, 0xbac1, 0x3b22, 0xa714, 0x0, 0x0);
        gbc.writeMem(0x9481, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x37b3);
        EXPECT(gbc.pc(), 0x9483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9481), 0xcb);
        EXPECT(gbc.readMem(0x9482), 0x50);
        // CB 50 01BB
        gbc.setState(0xaa0a, 0xb1e3, 0x63a0, 0x7e5e, 0xb8d6, 0xca6a, 0x0, 0x0);
        gbc.writeMem(0xaa0a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb1e3);
        EXPECT(gbc.pc(), 0xaa0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0a), 0xcb);
        EXPECT(gbc.readMem(0xaa0b), 0x50);
        // CB 50 01BC
        gbc.setState(0xcccd, 0x1167, 0x60d0, 0x2052, 0xa41b, 0xc306, 0x1, 0x0);
        gbc.writeMem(0xcccd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1167);
        EXPECT(gbc.pc(), 0xcccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcccd), 0xcb);
        EXPECT(gbc.readMem(0xccce), 0x50);
        // CB 50 01BD
        gbc.setState(0x52d3, 0x5041, 0x940, 0x3750, 0xfc25, 0x33e0, 0x0, 0x1);
        gbc.writeMem(0x52d3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5041);
        EXPECT(gbc.pc(), 0x52d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01BE
        gbc.setState(0xd47a, 0x3761, 0x53d0, 0xd55d, 0x954b, 0x2e39, 0x0, 0x1);
        gbc.writeMem(0xd47a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3761);
        EXPECT(gbc.pc(), 0xd47c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47a), 0xcb);
        EXPECT(gbc.readMem(0xd47b), 0x50);
        // CB 50 01BF
        gbc.setState(0x4703, 0x237b, 0x6470, 0x356a, 0x6931, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0x4703, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x237b);
        EXPECT(gbc.pc(), 0x4705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01C0
        gbc.setState(0x143c, 0xc9b3, 0x3530, 0xb2c4, 0x540d, 0xde52, 0x0, 0x0);
        gbc.writeMem(0x143c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc9b3);
        EXPECT(gbc.pc(), 0x143e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01C1
        gbc.setState(0x3f61, 0xae7c, 0xa1c0, 0xbfbc, 0x25c7, 0x7aeb, 0x0, 0x0);
        gbc.writeMem(0x3f61, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xae7c);
        EXPECT(gbc.pc(), 0x3f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01C2
        gbc.setState(0x3dc, 0x1f26, 0x6e50, 0xc0b4, 0x61c1, 0x279d, 0x1, 0x0);
        gbc.writeMem(0x3dc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f26);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01C3
        gbc.setState(0xe809, 0x2a5e, 0x41e0, 0xd843, 0xc5a9, 0x43c3, 0x1, 0x1);
        gbc.writeMem(0xe809, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2a5e);
        EXPECT(gbc.pc(), 0xe80b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe809), 0xcb);
        EXPECT(gbc.readMem(0xe80a), 0x50);
        // CB 50 01C4
        gbc.setState(0xd4eb, 0xb1b1, 0xedd0, 0x5859, 0x99c4, 0xcbea, 0x1, 0x0);
        gbc.writeMem(0xd4eb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb1b1);
        EXPECT(gbc.pc(), 0xd4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4eb), 0xcb);
        EXPECT(gbc.readMem(0xd4ec), 0x50);
        // CB 50 01C5
        gbc.setState(0x9999, 0xbb1, 0x67c0, 0x9fdd, 0xa6d3, 0x8fc6, 0x0, 0x1);
        gbc.writeMem(0x9999, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0x999b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9999), 0xcb);
        EXPECT(gbc.readMem(0x999a), 0x50);
        // CB 50 01C6
        gbc.setState(0x4c4d, 0xcaf2, 0x7630, 0x55e9, 0x4949, 0x5a41, 0x1, 0x1);
        gbc.writeMem(0x4c4d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcaf2);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01C7
        gbc.setState(0x1e98, 0x2490, 0xa670, 0x10f1, 0xf73e, 0x23a8, 0x0, 0x0);
        gbc.writeMem(0x1e98, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2490);
        EXPECT(gbc.pc(), 0x1e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01C8
        gbc.setState(0xa0f9, 0xcfa0, 0xc8d0, 0xfcb9, 0xa13b, 0x1cd1, 0x0, 0x1);
        gbc.writeMem(0xa0f9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcfa0);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f9), 0xcb);
        EXPECT(gbc.readMem(0xa0fa), 0x50);
        // CB 50 01C9
        gbc.setState(0x39d4, 0xd9c0, 0x4c80, 0xa0b1, 0x1850, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0x39d4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0x39d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01CA
        gbc.setState(0x73e8, 0x3cae, 0xb930, 0x9ed9, 0x575, 0x3a30, 0x0, 0x0);
        gbc.writeMem(0x73e8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3cae);
        EXPECT(gbc.pc(), 0x73ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01CB
        gbc.setState(0x886a, 0xc310, 0x8690, 0xe75b, 0x8145, 0xcae9, 0x0, 0x1);
        gbc.writeMem(0x886a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc310);
        EXPECT(gbc.pc(), 0x886c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886a), 0xcb);
        EXPECT(gbc.readMem(0x886b), 0x50);
        // CB 50 01CC
        gbc.setState(0x4599, 0x41fd, 0xbd50, 0xbc02, 0x8a63, 0x64a7, 0x1, 0x0);
        gbc.writeMem(0x4599, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x459b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01CD
        gbc.setState(0x28fb, 0xa60e, 0xcb10, 0xe427, 0x1e70, 0xf088, 0x0, 0x1);
        gbc.writeMem(0x28fb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa60e);
        EXPECT(gbc.pc(), 0x28fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01CE
        gbc.setState(0x931a, 0x5f7f, 0xb120, 0x669d, 0x7380, 0xb219, 0x0, 0x1);
        gbc.writeMem(0x931a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5f7f);
        EXPECT(gbc.pc(), 0x931c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931a), 0xcb);
        EXPECT(gbc.readMem(0x931b), 0x50);
        // CB 50 01CF
        gbc.setState(0xac97, 0x34ab, 0x7a30, 0xb73a, 0x580c, 0x7bfb, 0x1, 0x0);
        gbc.writeMem(0xac97, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x34ab);
        EXPECT(gbc.pc(), 0xac99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac97), 0xcb);
        EXPECT(gbc.readMem(0xac98), 0x50);
        // CB 50 01D0
        gbc.setState(0x3199, 0x564c, 0x2610, 0x8024, 0x35d0, 0xa0ef, 0x1, 0x0);
        gbc.writeMem(0x3199, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x564c);
        EXPECT(gbc.pc(), 0x319b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01D1
        gbc.setState(0x282e, 0x6d68, 0xb5c0, 0x40e9, 0x6f9b, 0x1b6, 0x1, 0x0);
        gbc.writeMem(0x282e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6d68);
        EXPECT(gbc.pc(), 0x2830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01D2
        gbc.setState(0x4a63, 0x4837, 0x1280, 0x1167, 0x80c0, 0xb916, 0x1, 0x1);
        gbc.writeMem(0x4a63, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4837);
        EXPECT(gbc.pc(), 0x4a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01D3
        gbc.setState(0xc182, 0xf7a3, 0x9850, 0x95a0, 0x62ec, 0xc230, 0x1, 0x1);
        gbc.writeMem(0xc182, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf7a3);
        EXPECT(gbc.pc(), 0xc184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc182), 0xcb);
        EXPECT(gbc.readMem(0xc183), 0x50);
        // CB 50 01D4
        gbc.setState(0x2622, 0x6fd8, 0x2400, 0x859, 0xe6b8, 0xf7af, 0x0, 0x0);
        gbc.writeMem(0x2622, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6fd8);
        EXPECT(gbc.pc(), 0x2624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01D5
        gbc.setState(0xbc1d, 0x3e7d, 0x2780, 0x5966, 0x54d3, 0x2e44, 0x1, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3e7d);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1d), 0xcb);
        EXPECT(gbc.readMem(0xbc1e), 0x50);
        // CB 50 01D6
        gbc.setState(0x3d9a, 0x9a03, 0x6e30, 0xb6bd, 0x1ef4, 0x104a, 0x1, 0x0);
        gbc.writeMem(0x3d9a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9a03);
        EXPECT(gbc.pc(), 0x3d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01D7
        gbc.setState(0x70d2, 0xaf5a, 0x5450, 0x65fc, 0x2bd9, 0xb21a, 0x0, 0x0);
        gbc.writeMem(0x70d2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xaf5a);
        EXPECT(gbc.pc(), 0x70d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01DA
        gbc.setState(0xd649, 0xa838, 0xd930, 0x9e27, 0xba3d, 0x461a, 0x0, 0x1);
        gbc.writeMem(0xd649, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa838);
        EXPECT(gbc.pc(), 0xd64b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd649), 0xcb);
        EXPECT(gbc.readMem(0xd64a), 0x50);
        // CB 50 01DB
        gbc.setState(0xbf4b, 0x5e3e, 0x9bb0, 0x9d51, 0x9865, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0xbf4b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0xbf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4b), 0xcb);
        EXPECT(gbc.readMem(0xbf4c), 0x50);
        // CB 50 01DC
        gbc.setState(0xa5e9, 0x3b57, 0x36a0, 0x20a6, 0xa5db, 0x4d35, 0x0, 0x0);
        gbc.writeMem(0xa5e9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3b57);
        EXPECT(gbc.pc(), 0xa5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e9), 0xcb);
        EXPECT(gbc.readMem(0xa5ea), 0x50);
        // CB 50 01DD
        gbc.setState(0xdae4, 0x8f62, 0xf30, 0x1244, 0xef2b, 0x5a19, 0x1, 0x1);
        gbc.writeMem(0xdae4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8f62);
        EXPECT(gbc.pc(), 0xdae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae4), 0xcb);
        EXPECT(gbc.readMem(0xdae5), 0x50);
        // CB 50 01DE
        gbc.setState(0xa56, 0x4ca9, 0xe3c0, 0x4924, 0x4a45, 0x7f4c, 0x1, 0x0);
        gbc.writeMem(0xa56, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4ca9);
        EXPECT(gbc.pc(), 0xa58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01DF
        gbc.setState(0x15e4, 0x9fbf, 0x690, 0x6477, 0x3e37, 0xbcc0, 0x0, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9fbf);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E0
        gbc.setState(0x8ec8, 0x7219, 0x1b00, 0xa4cf, 0x50b4, 0xb082, 0x1, 0x1);
        gbc.writeMem(0x8ec8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x8eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec8), 0xcb);
        EXPECT(gbc.readMem(0x8ec9), 0x50);
        // CB 50 01E1
        gbc.setState(0x3a2c, 0x123, 0xcda0, 0xe1c4, 0xb52b, 0xdb12, 0x0, 0x1);
        gbc.writeMem(0x3a2c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x123);
        EXPECT(gbc.pc(), 0x3a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01E2
        gbc.setState(0x162d, 0x6ee7, 0xc420, 0x9c18, 0x334b, 0x5683, 0x1, 0x0);
        gbc.writeMem(0x162d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6ee7);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01E3
        gbc.setState(0x4e4, 0x3b6c, 0x25c0, 0x29ec, 0x6407, 0x5603, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0x4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01E4
        gbc.setState(0x76db, 0x5683, 0x87b0, 0x3f9c, 0x21ad, 0x9ad6, 0x0, 0x0);
        gbc.writeMem(0x76db, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5683);
        EXPECT(gbc.pc(), 0x76dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E5
        gbc.setState(0x61ff, 0x7784, 0x4a10, 0x2514, 0xc03d, 0xf8c7, 0x1, 0x1);
        gbc.writeMem(0x61ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7784);
        EXPECT(gbc.pc(), 0x6201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E6
        gbc.setState(0x4566, 0x7147, 0x7330, 0xe2f2, 0x30d1, 0x2360, 0x1, 0x1);
        gbc.writeMem(0x4566, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7147);
        EXPECT(gbc.pc(), 0x4568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E7
        gbc.setState(0xe37, 0xbed7, 0x26b0, 0x125c, 0x5b5, 0xf388, 0x0, 0x0);
        gbc.writeMem(0xe37, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbed7);
        EXPECT(gbc.pc(), 0xe39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E8
        gbc.setState(0x5e81, 0x215d, 0xdcb0, 0xa850, 0x93cc, 0xbc6f, 0x0, 0x0);
        gbc.writeMem(0x5e81, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x215d);
        EXPECT(gbc.pc(), 0x5e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01E9
        gbc.setState(0x80e6, 0xcb58, 0xfb50, 0x6cb, 0x828f, 0x5e1b, 0x0, 0x1);
        gbc.writeMem(0x80e6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcb58);
        EXPECT(gbc.pc(), 0x80e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e6), 0xcb);
        EXPECT(gbc.readMem(0x80e7), 0x50);
        // CB 50 01EA
        gbc.setState(0x5b99, 0x594b, 0x48a0, 0xd2db, 0x6d3f, 0x4464, 0x1, 0x0);
        gbc.writeMem(0x5b99, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0x5b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01EB
        gbc.setState(0x3962, 0x3156, 0x59f0, 0x9f55, 0x52e9, 0x3176, 0x1, 0x1);
        gbc.writeMem(0x3962, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3156);
        EXPECT(gbc.pc(), 0x3964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01EC
        gbc.setState(0x797d, 0xdca, 0xb2b0, 0x5612, 0x6154, 0x5911, 0x1, 0x1);
        gbc.writeMem(0x797d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xdca);
        EXPECT(gbc.pc(), 0x797f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01ED
        gbc.setState(0x982c, 0xaf67, 0x7270, 0xaf5b, 0xb8e, 0x256b, 0x1, 0x0);
        gbc.writeMem(0x982c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaf67);
        EXPECT(gbc.pc(), 0x982e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982c), 0xcb);
        EXPECT(gbc.readMem(0x982d), 0x50);
        // CB 50 01EE
        gbc.setState(0xa3c2, 0x1cea, 0x26f0, 0x627b, 0xa84, 0x8b44, 0x1, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1cea);
        EXPECT(gbc.pc(), 0xa3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c2), 0xcb);
        EXPECT(gbc.readMem(0xa3c3), 0x50);
        // CB 50 01EF
        gbc.setState(0xe25d, 0x464c, 0x7840, 0xbe42, 0x3382, 0x4979, 0x1, 0x0);
        gbc.writeMem(0xe25d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0xe25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe25d), 0xcb);
        EXPECT(gbc.readMem(0xe25e), 0x50);
        // CB 50 01F0
        gbc.setState(0x2aaa, 0xae7, 0x9d50, 0xb370, 0xcbae, 0x87c0, 0x1, 0x0);
        gbc.writeMem(0x2aaa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xae7);
        EXPECT(gbc.pc(), 0x2aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01F1
        gbc.setState(0x8c6d, 0xb515, 0x9180, 0x8369, 0xd54b, 0x34fe, 0x1, 0x1);
        gbc.writeMem(0x8c6d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb515);
        EXPECT(gbc.pc(), 0x8c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6d), 0xcb);
        EXPECT(gbc.readMem(0x8c6e), 0x50);
        // CB 50 01F2
        gbc.setState(0x3859, 0xdbdc, 0xadd0, 0x5920, 0xd6e6, 0x1167, 0x0, 0x1);
        gbc.writeMem(0x3859, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdbdc);
        EXPECT(gbc.pc(), 0x385b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01F4
        gbc.setState(0xc113, 0x2260, 0x2240, 0x9b36, 0x57cf, 0xae2b, 0x1, 0x0);
        gbc.writeMem(0xc113, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2260);
        EXPECT(gbc.pc(), 0xc115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc113), 0xcb);
        EXPECT(gbc.readMem(0xc114), 0x50);
        // CB 50 01F5
        gbc.setState(0x525f, 0xeafc, 0x2270, 0x162f, 0x916f, 0x9223, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xeafc);
        EXPECT(gbc.pc(), 0x5261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01F6
        gbc.setState(0xd202, 0x2e25, 0x6620, 0x97b2, 0x5222, 0x646c, 0x0, 0x1);
        gbc.writeMem(0xd202, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2e25);
        EXPECT(gbc.pc(), 0xd204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd202), 0xcb);
        EXPECT(gbc.readMem(0xd203), 0x50);
        // CB 50 01F7
        gbc.setState(0xdd02, 0xc4a2, 0xdc60, 0xb232, 0x9069, 0x4ee0, 0x1, 0x0);
        gbc.writeMem(0xdd02, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc4a2);
        EXPECT(gbc.pc(), 0xdd04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd02), 0xcb);
        EXPECT(gbc.readMem(0xdd03), 0x50);
        // CB 50 01F8
        gbc.setState(0x1276, 0x3d56, 0xd170, 0x92d3, 0x7c26, 0xcac3, 0x1, 0x0);
        gbc.writeMem(0x1276, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3d56);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01F9
        gbc.setState(0x8e7d, 0xb7b, 0x50c0, 0x50f1, 0x14ef, 0xa8b3, 0x1, 0x1);
        gbc.writeMem(0x8e7d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb7b);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7d), 0xcb);
        EXPECT(gbc.readMem(0x8e7e), 0x50);
        // CB 50 01FA
        gbc.setState(0xde58, 0x233e, 0x5440, 0xc9ca, 0x1886, 0xc6cf, 0x1, 0x1);
        gbc.writeMem(0xde58, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x233e);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0x50);
        // CB 50 01FB
        gbc.setState(0x22e0, 0x9b76, 0xec80, 0x5ccc, 0x8dfb, 0x8fa5, 0x1, 0x1);
        gbc.writeMem(0x22e0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9b76);
        EXPECT(gbc.pc(), 0x22e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01FC
        gbc.setState(0x7fda, 0xcc65, 0x6230, 0xf61e, 0xf546, 0x563c, 0x0, 0x1);
        gbc.writeMem(0x7fda, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcc65);
        EXPECT(gbc.pc(), 0x7fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 01FD
        gbc.setState(0xc6ee, 0x2bd8, 0x3900, 0xe2fb, 0x7b03, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0xc6ee, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2bd8);
        EXPECT(gbc.pc(), 0xc6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ee), 0xcb);
        EXPECT(gbc.readMem(0xc6ef), 0x50);
        // CB 50 01FE
        gbc.setState(0x857, 0xc64c, 0x54e0, 0x2f12, 0x2853, 0xfd34, 0x0, 0x0);
        gbc.writeMem(0x857, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc64c);
        EXPECT(gbc.pc(), 0x859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 01FF
        gbc.setState(0x59ff, 0x9226, 0xaf10, 0x6078, 0x6685, 0x901, 0x1, 0x0);
        gbc.writeMem(0x59ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9226);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0200
        gbc.setState(0xb43, 0x1f1f, 0x8fa0, 0xb503, 0x3590, 0x87be, 0x0, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1f1f);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0201
        gbc.setState(0x1adb, 0x8b31, 0x8eb0, 0x76bb, 0x398a, 0xd5d0, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8b31);
        EXPECT(gbc.pc(), 0x1add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0202
        gbc.setState(0x6574, 0x446e, 0x66b0, 0x43c1, 0xdf90, 0xf759, 0x1, 0x0);
        gbc.writeMem(0x6574, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x446e);
        EXPECT(gbc.pc(), 0x6576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0203
        gbc.setState(0x2e5, 0x6d78, 0x4f20, 0xbad5, 0xdc94, 0x70dc, 0x1, 0x1);
        gbc.writeMem(0x2e5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6d78);
        EXPECT(gbc.pc(), 0x2e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0204
        gbc.setState(0xb5a5, 0x964, 0x17a0, 0x9516, 0xd7ab, 0x21c4, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x964);
        EXPECT(gbc.pc(), 0xb5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a5), 0xcb);
        EXPECT(gbc.readMem(0xb5a6), 0x50);
        // CB 50 0205
        gbc.setState(0xa585, 0x162c, 0x1ee0, 0xeac9, 0xc6ca, 0x351b, 0x0, 0x0);
        gbc.writeMem(0xa585, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x162c);
        EXPECT(gbc.pc(), 0xa587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa585), 0xcb);
        EXPECT(gbc.readMem(0xa586), 0x50);
        // CB 50 0206
        gbc.setState(0x359f, 0xc252, 0xf600, 0xecb0, 0x40c3, 0xe149, 0x1, 0x1);
        gbc.writeMem(0x359f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc252);
        EXPECT(gbc.pc(), 0x35a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0207
        gbc.setState(0xefa1, 0xd2de, 0xa030, 0xe6df, 0x28b5, 0x429f, 0x0, 0x1);
        gbc.writeMem(0xefa1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd2de);
        EXPECT(gbc.pc(), 0xefa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa1), 0xcb);
        EXPECT(gbc.readMem(0xefa2), 0x50);
        // CB 50 0208
        gbc.setState(0x8f0e, 0xebf2, 0x7770, 0x5c14, 0x9746, 0x5740, 0x0, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xebf2);
        EXPECT(gbc.pc(), 0x8f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0e), 0xcb);
        EXPECT(gbc.readMem(0x8f0f), 0x50);
        // CB 50 0209
        gbc.setState(0x1bac, 0x4ad2, 0xe1a0, 0x97ec, 0x2c8f, 0xf29a, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4ad2);
        EXPECT(gbc.pc(), 0x1bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 020A
        gbc.setState(0x2036, 0x5d2f, 0x3a0, 0x257d, 0x8892, 0xb167, 0x0, 0x0);
        gbc.writeMem(0x2036, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5d2f);
        EXPECT(gbc.pc(), 0x2038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 020B
        gbc.setState(0x561e, 0x3443, 0x6a40, 0x7eef, 0x8fe3, 0xf757, 0x0, 0x1);
        gbc.writeMem(0x561e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3443);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 020C
        gbc.setState(0x96af, 0x43c2, 0x1690, 0x10d1, 0x34dc, 0x4cbc, 0x0, 0x1);
        gbc.writeMem(0x96af, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x43c2);
        EXPECT(gbc.pc(), 0x96b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96af), 0xcb);
        EXPECT(gbc.readMem(0x96b0), 0x50);
        // CB 50 020D
        gbc.setState(0x6ee8, 0x2861, 0x7b10, 0xb21f, 0xa0c3, 0xedc6, 0x1, 0x0);
        gbc.writeMem(0x6ee8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0x6eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 020E
        gbc.setState(0x6024, 0xf3ec, 0x1470, 0xb5f6, 0x679f, 0x1c3, 0x0, 0x1);
        gbc.writeMem(0x6024, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x6026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 020F
        gbc.setState(0x9df8, 0x9c3d, 0xa180, 0x1cec, 0x756c, 0xa772, 0x1, 0x1);
        gbc.writeMem(0x9df8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9c3d);
        EXPECT(gbc.pc(), 0x9dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df8), 0xcb);
        EXPECT(gbc.readMem(0x9df9), 0x50);
        // CB 50 0210
        gbc.setState(0xd15a, 0x6181, 0x4e20, 0x4eb1, 0x4c15, 0x4232, 0x0, 0x0);
        gbc.writeMem(0xd15a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0xd15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15a), 0xcb);
        EXPECT(gbc.readMem(0xd15b), 0x50);
        // CB 50 0211
        gbc.setState(0x4ec9, 0xa0bf, 0xead0, 0x3e57, 0x6ca4, 0x8dfd, 0x0, 0x1);
        gbc.writeMem(0x4ec9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa0bf);
        EXPECT(gbc.pc(), 0x4ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0212
        gbc.setState(0xa9d6, 0xd006, 0xed70, 0x9d17, 0x81e0, 0x7e4e, 0x1, 0x1);
        gbc.writeMem(0xa9d6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd006);
        EXPECT(gbc.pc(), 0xa9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d6), 0xcb);
        EXPECT(gbc.readMem(0xa9d7), 0x50);
        // CB 50 0213
        gbc.setState(0xee51, 0x8abb, 0x82e0, 0xef1, 0x2f18, 0x38de, 0x1, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8abb);
        EXPECT(gbc.pc(), 0xee53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee51), 0xcb);
        EXPECT(gbc.readMem(0xee52), 0x50);
        // CB 50 0214
        gbc.setState(0x5386, 0x9850, 0x4320, 0x31da, 0x8474, 0x8769, 0x1, 0x1);
        gbc.writeMem(0x5386, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0x5388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0215
        gbc.setState(0x1984, 0x2eb, 0x1a20, 0x1261, 0x88cc, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x1984, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2eb);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0216
        gbc.setState(0xcffe, 0xe0d5, 0xb370, 0x43a2, 0x1fdc, 0x42cb, 0x0, 0x0);
        gbc.writeMem(0xcffe, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe0d5);
        EXPECT(gbc.pc(), 0xd000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffe), 0xcb);
        EXPECT(gbc.readMem(0xcfff), 0x50);
        // CB 50 0217
        gbc.setState(0x4c2a, 0x227b, 0x870, 0x14e6, 0x9069, 0xff0c, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x227b);
        EXPECT(gbc.pc(), 0x4c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0218
        gbc.setState(0x26e7, 0x2615, 0x6b20, 0xc801, 0xe08, 0x2f6b, 0x0, 0x0);
        gbc.writeMem(0x26e7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2615);
        EXPECT(gbc.pc(), 0x26e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0219
        gbc.setState(0x1a8a, 0xb12d, 0xed50, 0xb1b3, 0x8fe, 0xbeae, 0x0, 0x1);
        gbc.writeMem(0x1a8a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb12d);
        EXPECT(gbc.pc(), 0x1a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 021A
        gbc.setState(0x643d, 0xb29a, 0xca90, 0xd5ee, 0xd7fd, 0x8fd6, 0x1, 0x1);
        gbc.writeMem(0x643d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb29a);
        EXPECT(gbc.pc(), 0x643f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 021B
        gbc.setState(0xec72, 0x12b3, 0xae10, 0xb894, 0xa640, 0x3fea, 0x1, 0x1);
        gbc.writeMem(0xec72, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x12b3);
        EXPECT(gbc.pc(), 0xec74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec72), 0xcb);
        EXPECT(gbc.readMem(0xec73), 0x50);
        // CB 50 021D
        gbc.setState(0x808c, 0x3a72, 0x3130, 0xc27f, 0x2f2a, 0xe863, 0x0, 0x0);
        gbc.writeMem(0x808c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3a72);
        EXPECT(gbc.pc(), 0x808e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808c), 0xcb);
        EXPECT(gbc.readMem(0x808d), 0x50);
        // CB 50 021F
        gbc.setState(0x95d5, 0x5835, 0x84f0, 0x77f0, 0xaba4, 0xf263, 0x1, 0x0);
        gbc.writeMem(0x95d5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5835);
        EXPECT(gbc.pc(), 0x95d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d5), 0xcb);
        EXPECT(gbc.readMem(0x95d6), 0x50);
        // CB 50 0220
        gbc.setState(0x25bb, 0x8c5f, 0x6d30, 0xa580, 0xeb59, 0x5b3, 0x0, 0x1);
        gbc.writeMem(0x25bb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0x25bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0221
        gbc.setState(0xb09a, 0xa4fa, 0x63c0, 0x5d7f, 0x48c9, 0x8795, 0x0, 0x1);
        gbc.writeMem(0xb09a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa4fa);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xcb);
        EXPECT(gbc.readMem(0xb09b), 0x50);
        // CB 50 0222
        gbc.setState(0x1b21, 0x43ea, 0x1510, 0x931, 0xd09e, 0xee8, 0x1, 0x0);
        gbc.writeMem(0x1b21, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x43ea);
        EXPECT(gbc.pc(), 0x1b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0223
        gbc.setState(0x95df, 0x3cb8, 0xc500, 0xf920, 0xcc58, 0x1d38, 0x0, 0x1);
        gbc.writeMem(0x95df, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3cb8);
        EXPECT(gbc.pc(), 0x95e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95df), 0xcb);
        EXPECT(gbc.readMem(0x95e0), 0x50);
        // CB 50 0224
        gbc.setState(0x8de4, 0xbdf3, 0x18f0, 0x880c, 0x6fe2, 0xe2d5, 0x0, 0x1);
        gbc.writeMem(0x8de4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbdf3);
        EXPECT(gbc.pc(), 0x8de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de4), 0xcb);
        EXPECT(gbc.readMem(0x8de5), 0x50);
        // CB 50 0225
        gbc.setState(0x716a, 0xb601, 0x5ea0, 0xf95, 0x24ba, 0x5270, 0x1, 0x0);
        gbc.writeMem(0x716a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb601);
        EXPECT(gbc.pc(), 0x716c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0226
        gbc.setState(0xe37e, 0xa19b, 0xbc60, 0xf739, 0x5995, 0xc100, 0x1, 0x1);
        gbc.writeMem(0xe37e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa19b);
        EXPECT(gbc.pc(), 0xe380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe37e), 0xcb);
        EXPECT(gbc.readMem(0xe37f), 0x50);
        // CB 50 0227
        gbc.setState(0x9c7e, 0xc937, 0x20, 0x6527, 0x9d50, 0xb773, 0x1, 0x0);
        gbc.writeMem(0x9c7e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc937);
        EXPECT(gbc.pc(), 0x9c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7e), 0xcb);
        EXPECT(gbc.readMem(0x9c7f), 0x50);
        // CB 50 0228
        gbc.setState(0x23f, 0x4234, 0x9570, 0x3975, 0xb444, 0x859, 0x1, 0x0);
        gbc.writeMem(0x23f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4234);
        EXPECT(gbc.pc(), 0x241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0229
        gbc.setState(0x4f82, 0xf968, 0x8a80, 0x1ba, 0x1f59, 0x67ab, 0x1, 0x0);
        gbc.writeMem(0x4f82, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf968);
        EXPECT(gbc.pc(), 0x4f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 022A
        gbc.setState(0xc9be, 0xdedc, 0xba60, 0x97d8, 0x6a2c, 0x2c37, 0x0, 0x0);
        gbc.writeMem(0xc9be, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdedc);
        EXPECT(gbc.pc(), 0xc9c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9be), 0xcb);
        EXPECT(gbc.readMem(0xc9bf), 0x50);
        // CB 50 022B
        gbc.setState(0xb8ac, 0xd815, 0x2b50, 0x6e39, 0xd12f, 0xdd6e, 0x1, 0x1);
        gbc.writeMem(0xb8ac, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0xb8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ac), 0xcb);
        EXPECT(gbc.readMem(0xb8ad), 0x50);
        // CB 50 022C
        gbc.setState(0x59ca, 0x92c8, 0x99a0, 0xefbb, 0xbef3, 0xf855, 0x1, 0x0);
        gbc.writeMem(0x59ca, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x92c8);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 022D
        gbc.setState(0x5ab7, 0x4040, 0x62d0, 0x3012, 0x8968, 0x7df0, 0x1, 0x0);
        gbc.writeMem(0x5ab7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4040);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 022E
        gbc.setState(0x4a90, 0x9b76, 0x4970, 0xef0a, 0x19ef, 0xd3fb, 0x0, 0x1);
        gbc.writeMem(0x4a90, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9b76);
        EXPECT(gbc.pc(), 0x4a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 022F
        gbc.setState(0x9093, 0x9c1a, 0x3160, 0x4ef0, 0x8683, 0x39a2, 0x1, 0x1);
        gbc.writeMem(0x9093, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9c1a);
        EXPECT(gbc.pc(), 0x9095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9093), 0xcb);
        EXPECT(gbc.readMem(0x9094), 0x50);
        // CB 50 0230
        gbc.setState(0xc091, 0x9bbc, 0x38a0, 0x3ec2, 0x3da7, 0x6948, 0x0, 0x0);
        gbc.writeMem(0xc091, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9bbc);
        EXPECT(gbc.pc(), 0xc093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc091), 0xcb);
        EXPECT(gbc.readMem(0xc092), 0x50);
        // CB 50 0231
        gbc.setState(0x47f8, 0x3b86, 0xf60, 0xe6f6, 0x1b5f, 0x9707, 0x1, 0x0);
        gbc.writeMem(0x47f8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3b86);
        EXPECT(gbc.pc(), 0x47fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0232
        gbc.setState(0xe075, 0x3ad5, 0xf7f0, 0x7bd2, 0xb70d, 0x306, 0x0, 0x1);
        gbc.writeMem(0xe075, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3ad5);
        EXPECT(gbc.pc(), 0xe077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe075), 0xcb);
        EXPECT(gbc.readMem(0xe076), 0x50);
        // CB 50 0233
        gbc.setState(0x1d8d, 0xb4c6, 0xf6e0, 0x3a35, 0xb9bc, 0x1213, 0x0, 0x0);
        gbc.writeMem(0x1d8d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb4c6);
        EXPECT(gbc.pc(), 0x1d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0234
        gbc.setState(0x6a7c, 0xb9bd, 0xf870, 0xe09b, 0x1833, 0x7d83, 0x1, 0x0);
        gbc.writeMem(0x6a7c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb9bd);
        EXPECT(gbc.pc(), 0x6a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0235
        gbc.setState(0xcdff, 0xf501, 0xcbb0, 0x3eea, 0xaec9, 0x24a6, 0x0, 0x1);
        gbc.writeMem(0xcdff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0xce01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdff), 0xcb);
        EXPECT(gbc.readMem(0xce00), 0x50);
        // CB 50 0236
        gbc.setState(0xc95b, 0xf32e, 0xe6a0, 0x1909, 0x86c7, 0xfed7, 0x0, 0x1);
        gbc.writeMem(0xc95b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf32e);
        EXPECT(gbc.pc(), 0xc95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95b), 0xcb);
        EXPECT(gbc.readMem(0xc95c), 0x50);
        // CB 50 0237
        gbc.setState(0xa41b, 0xf3ba, 0x4b50, 0xc806, 0x1c1f, 0xdf7e, 0x0, 0x1);
        gbc.writeMem(0xa41b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf3ba);
        EXPECT(gbc.pc(), 0xa41d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41b), 0xcb);
        EXPECT(gbc.readMem(0xa41c), 0x50);
        // CB 50 0238
        gbc.setState(0xea77, 0x1865, 0x2350, 0x4e23, 0xa591, 0x2182, 0x0, 0x0);
        gbc.writeMem(0xea77, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1865);
        EXPECT(gbc.pc(), 0xea79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea77), 0xcb);
        EXPECT(gbc.readMem(0xea78), 0x50);
        // CB 50 0239
        gbc.setState(0xde09, 0x2c84, 0x5540, 0x9d35, 0x7521, 0xd667, 0x1, 0x1);
        gbc.writeMem(0xde09, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2c84);
        EXPECT(gbc.pc(), 0xde0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde09), 0xcb);
        EXPECT(gbc.readMem(0xde0a), 0x50);
        // CB 50 023A
        gbc.setState(0x3bec, 0x5bc2, 0x3980, 0x50e8, 0x2307, 0xd3c5, 0x1, 0x0);
        gbc.writeMem(0x3bec, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5bc2);
        EXPECT(gbc.pc(), 0x3bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 023B
        gbc.setState(0xe716, 0x4ea1, 0x9f20, 0xc51b, 0xe4fa, 0x84c5, 0x0, 0x1);
        gbc.writeMem(0xe716, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0xe718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe716), 0xcb);
        EXPECT(gbc.readMem(0xe717), 0x50);
        // CB 50 023C
        gbc.setState(0xe108, 0x53cc, 0xcb90, 0x1dbb, 0xbab2, 0x4b07, 0x0, 0x1);
        gbc.writeMem(0xe108, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x53cc);
        EXPECT(gbc.pc(), 0xe10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe108), 0xcb);
        EXPECT(gbc.readMem(0xe109), 0x50);
        // CB 50 023D
        gbc.setState(0xc465, 0x3067, 0x9340, 0x6157, 0x235d, 0x65f2, 0x0, 0x1);
        gbc.writeMem(0xc465, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3067);
        EXPECT(gbc.pc(), 0xc467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc465), 0xcb);
        EXPECT(gbc.readMem(0xc466), 0x50);
        // CB 50 023E
        gbc.setState(0xbd41, 0x1f10, 0x2bb0, 0xbdb2, 0xbd8a, 0x7782, 0x0, 0x1);
        gbc.writeMem(0xbd41, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1f10);
        EXPECT(gbc.pc(), 0xbd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd41), 0xcb);
        EXPECT(gbc.readMem(0xbd42), 0x50);
        // CB 50 023F
        gbc.setState(0x5277, 0x9ab6, 0x8000, 0x6392, 0xa00b, 0xe420, 0x0, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9ab6);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0240
        gbc.setState(0xb70, 0x5204, 0xed10, 0xf0a3, 0xb63a, 0x260f, 0x1, 0x1);
        gbc.writeMem(0xb70, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5204);
        EXPECT(gbc.pc(), 0xb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0241
        gbc.setState(0x55f1, 0x2e2e, 0x18e0, 0x1099, 0xd27e, 0xed1a, 0x1, 0x0);
        gbc.writeMem(0x55f1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x55f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0242
        gbc.setState(0x71bc, 0x56a0, 0xf4d0, 0x9e4b, 0xd64c, 0x45a6, 0x1, 0x0);
        gbc.writeMem(0x71bc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x56a0);
        EXPECT(gbc.pc(), 0x71be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0243
        gbc.setState(0xa54e, 0x31e0, 0xea60, 0x829, 0xfb8c, 0x2cd2, 0x1, 0x0);
        gbc.writeMem(0xa54e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x31e0);
        EXPECT(gbc.pc(), 0xa550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54e), 0xcb);
        EXPECT(gbc.readMem(0xa54f), 0x50);
        // CB 50 0244
        gbc.setState(0xd0a8, 0xd74d, 0x5130, 0x2c5, 0x7c71, 0x792, 0x1, 0x1);
        gbc.writeMem(0xd0a8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0xd0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a8), 0xcb);
        EXPECT(gbc.readMem(0xd0a9), 0x50);
        // CB 50 0245
        gbc.setState(0xb18, 0xc28d, 0x4560, 0xf380, 0x956d, 0x396, 0x0, 0x0);
        gbc.writeMem(0xb18, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc28d);
        EXPECT(gbc.pc(), 0xb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0246
        gbc.setState(0x1256, 0x5217, 0x9d80, 0x3c29, 0x52fa, 0xa896, 0x0, 0x0);
        gbc.writeMem(0x1256, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5217);
        EXPECT(gbc.pc(), 0x1258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0247
        gbc.setState(0xb142, 0x1948, 0xa7b0, 0xca36, 0x9ca2, 0x4035, 0x0, 0x0);
        gbc.writeMem(0xb142, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1948);
        EXPECT(gbc.pc(), 0xb144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb142), 0xcb);
        EXPECT(gbc.readMem(0xb143), 0x50);
        // CB 50 0248
        gbc.setState(0xb031, 0x1416, 0x8660, 0x7ca1, 0x93c9, 0xb6df, 0x1, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1416);
        EXPECT(gbc.pc(), 0xb033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb031), 0xcb);
        EXPECT(gbc.readMem(0xb032), 0x50);
        // CB 50 0249
        gbc.setState(0x10de, 0x25bd, 0x57d0, 0x23a0, 0xe1a3, 0xbf60, 0x1, 0x1);
        gbc.writeMem(0x10de, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x25bd);
        EXPECT(gbc.pc(), 0x10e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 024A
        gbc.setState(0xf82, 0x53cd, 0x5800, 0xb029, 0xc2f, 0xef45, 0x1, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x53cd);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 024B
        gbc.setState(0x89a5, 0x2b92, 0x5a40, 0xb4b5, 0xd0df, 0x6ff, 0x0, 0x1);
        gbc.writeMem(0x89a5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0x89a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a5), 0xcb);
        EXPECT(gbc.readMem(0x89a6), 0x50);
        // CB 50 024C
        gbc.setState(0x9ed, 0xcee1, 0xebc0, 0xb48f, 0x66b2, 0xd11f, 0x1, 0x0);
        gbc.writeMem(0x9ed, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcee1);
        EXPECT(gbc.pc(), 0x9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 024D
        gbc.setState(0x5ed3, 0xc63b, 0xd480, 0xb0e2, 0x3b13, 0x9f9, 0x1, 0x1);
        gbc.writeMem(0x5ed3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc63b);
        EXPECT(gbc.pc(), 0x5ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 024E
        gbc.setState(0x4cb7, 0xe42b, 0x3250, 0xaf85, 0xd0db, 0xf4cf, 0x1, 0x1);
        gbc.writeMem(0x4cb7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe42b);
        EXPECT(gbc.pc(), 0x4cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 024F
        gbc.setState(0xd5fd, 0x47fe, 0x7130, 0x69eb, 0x10f8, 0x8599, 0x1, 0x0);
        gbc.writeMem(0xd5fd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x47fe);
        EXPECT(gbc.pc(), 0xd5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fd), 0xcb);
        EXPECT(gbc.readMem(0xd5fe), 0x50);
        // CB 50 0250
        gbc.setState(0xeb71, 0x17e0, 0x6a0, 0x9108, 0xaeb5, 0x9965, 0x1, 0x0);
        gbc.writeMem(0xeb71, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x17e0);
        EXPECT(gbc.pc(), 0xeb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb71), 0xcb);
        EXPECT(gbc.readMem(0xeb72), 0x50);
        // CB 50 0251
        gbc.setState(0x1a0b, 0x3b98, 0xe240, 0xfedc, 0x8b05, 0x9113, 0x1, 0x0);
        gbc.writeMem(0x1a0b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3b98);
        EXPECT(gbc.pc(), 0x1a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0252
        gbc.setState(0x19c0, 0xd1d0, 0x73b0, 0xde52, 0x84a2, 0xdf93, 0x1, 0x0);
        gbc.writeMem(0x19c0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd1d0);
        EXPECT(gbc.pc(), 0x19c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0253
        gbc.setState(0x357a, 0x200d, 0x8650, 0xe7e0, 0x12b9, 0xd6c4, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x200d);
        EXPECT(gbc.pc(), 0x357c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0254
        gbc.setState(0x7ad6, 0x3fb6, 0xbaa0, 0x3cd5, 0xfab2, 0x6301, 0x1, 0x1);
        gbc.writeMem(0x7ad6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0x7ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0256
        gbc.setState(0xb3e9, 0x933c, 0xc5b0, 0x243a, 0xd25e, 0x9f5b, 0x1, 0x0);
        gbc.writeMem(0xb3e9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x933c);
        EXPECT(gbc.pc(), 0xb3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e9), 0xcb);
        EXPECT(gbc.readMem(0xb3ea), 0x50);
        // CB 50 0257
        gbc.setState(0xa910, 0x4957, 0x65e0, 0x58e6, 0xd430, 0xd66a, 0x1, 0x0);
        gbc.writeMem(0xa910, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4957);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa910), 0xcb);
        EXPECT(gbc.readMem(0xa911), 0x50);
        // CB 50 0259
        gbc.setState(0x56, 0x6526, 0xc60, 0x3a80, 0x6a10, 0xa89f, 0x0, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6526);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 025B
        gbc.setState(0x7b4e, 0x4243, 0xaa0, 0x5620, 0xfd44, 0xd936, 0x1, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4243);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 025C
        gbc.setState(0xd04b, 0x9dc0, 0x1da0, 0x4c4, 0x33c1, 0xd108, 0x0, 0x0);
        gbc.writeMem(0xd04b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9dc0);
        EXPECT(gbc.pc(), 0xd04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04b), 0xcb);
        EXPECT(gbc.readMem(0xd04c), 0x50);
        // CB 50 025D
        gbc.setState(0x8223, 0xde8b, 0xe330, 0x7a3a, 0x5383, 0x7f6b, 0x1, 0x1);
        gbc.writeMem(0x8223, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0x8225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8223), 0xcb);
        EXPECT(gbc.readMem(0x8224), 0x50);
        // CB 50 025E
        gbc.setState(0x78ed, 0x5ea, 0x480, 0xebfb, 0xfd3b, 0x351c, 0x1, 0x0);
        gbc.writeMem(0x78ed, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5ea);
        EXPECT(gbc.pc(), 0x78ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 025F
        gbc.setState(0x6460, 0x4917, 0xf540, 0x815, 0x12c0, 0xf0bb, 0x0, 0x0);
        gbc.writeMem(0x6460, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4917);
        EXPECT(gbc.pc(), 0x6462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0260
        gbc.setState(0xedad, 0xb01e, 0x5e20, 0xc22, 0x6bcb, 0xf035, 0x0, 0x1);
        gbc.writeMem(0xedad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb01e);
        EXPECT(gbc.pc(), 0xedaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedad), 0xcb);
        EXPECT(gbc.readMem(0xedae), 0x50);
        // CB 50 0261
        gbc.setState(0x2e12, 0x4ec7, 0x1780, 0xde58, 0xeac2, 0xc835, 0x1, 0x0);
        gbc.writeMem(0x2e12, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4ec7);
        EXPECT(gbc.pc(), 0x2e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0262
        gbc.setState(0xacf3, 0x4b3b, 0xd2d0, 0xde6d, 0xbc4, 0x2ad5, 0x1, 0x0);
        gbc.writeMem(0xacf3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4b3b);
        EXPECT(gbc.pc(), 0xacf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf3), 0xcb);
        EXPECT(gbc.readMem(0xacf4), 0x50);
        // CB 50 0263
        gbc.setState(0xa4c3, 0xc5d3, 0xb280, 0x6b30, 0xf88d, 0xb08e, 0x0, 0x0);
        gbc.writeMem(0xa4c3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc5d3);
        EXPECT(gbc.pc(), 0xa4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c3), 0xcb);
        EXPECT(gbc.readMem(0xa4c4), 0x50);
        // CB 50 0264
        gbc.setState(0x8a88, 0xc5dc, 0x5240, 0xdd4b, 0x8c56, 0xc73, 0x1, 0x0);
        gbc.writeMem(0x8a88, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc5dc);
        EXPECT(gbc.pc(), 0x8a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a88), 0xcb);
        EXPECT(gbc.readMem(0x8a89), 0x50);
        // CB 50 0265
        gbc.setState(0xb7ad, 0xd7d6, 0xa850, 0x8e46, 0xfc17, 0xf3cf, 0x0, 0x0);
        gbc.writeMem(0xb7ad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd7d6);
        EXPECT(gbc.pc(), 0xb7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ad), 0xcb);
        EXPECT(gbc.readMem(0xb7ae), 0x50);
        // CB 50 0266
        gbc.setState(0xc9b6, 0xb2ae, 0x1220, 0x8dfd, 0x6c80, 0x83b0, 0x0, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb2ae);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b6), 0xcb);
        EXPECT(gbc.readMem(0xc9b7), 0x50);
        // CB 50 0267
        gbc.setState(0xe03e, 0xb5ce, 0x3420, 0xfa82, 0x3289, 0xe829, 0x0, 0x1);
        gbc.writeMem(0xe03e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb5ce);
        EXPECT(gbc.pc(), 0xe040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03e), 0xcb);
        EXPECT(gbc.readMem(0xe03f), 0x50);
        // CB 50 0268
        gbc.setState(0x9bce, 0x8143, 0xc10, 0xf17, 0xa129, 0xf4f4, 0x0, 0x1);
        gbc.writeMem(0x9bce, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8143);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0x50);
        // CB 50 0269
        gbc.setState(0xc1d5, 0x7a21, 0x4ca0, 0x1e2, 0x5814, 0xc517, 0x1, 0x0);
        gbc.writeMem(0xc1d5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a21);
        EXPECT(gbc.pc(), 0xc1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d5), 0xcb);
        EXPECT(gbc.readMem(0xc1d6), 0x50);
        // CB 50 026A
        gbc.setState(0x5455, 0x6400, 0x9410, 0xa5be, 0xa1a1, 0xb037, 0x0, 0x0);
        gbc.writeMem(0x5455, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6400);
        EXPECT(gbc.pc(), 0x5457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 026B
        gbc.setState(0x41c7, 0x95eb, 0x89a0, 0xdda8, 0xf05, 0x268e, 0x0, 0x1);
        gbc.writeMem(0x41c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x95eb);
        EXPECT(gbc.pc(), 0x41c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 026C
        gbc.setState(0x9065, 0x7734, 0x540, 0xb7a, 0x1b7e, 0x34dc, 0x1, 0x1);
        gbc.writeMem(0x9065, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0x9067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9065), 0xcb);
        EXPECT(gbc.readMem(0x9066), 0x50);
        // CB 50 026D
        gbc.setState(0x4ad2, 0x24d8, 0x3530, 0x314c, 0xce4e, 0x469b, 0x0, 0x1);
        gbc.writeMem(0x4ad2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x24d8);
        EXPECT(gbc.pc(), 0x4ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 026E
        gbc.setState(0xd375, 0xf17, 0xd9e0, 0xd8bc, 0xa03c, 0xf154, 0x0, 0x0);
        gbc.writeMem(0xd375, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0xd377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd375), 0xcb);
        EXPECT(gbc.readMem(0xd376), 0x50);
        // CB 50 0270
        gbc.setState(0x7555, 0xd9a1, 0x3eb0, 0x2584, 0x7435, 0x1bb4, 0x1, 0x1);
        gbc.writeMem(0x7555, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd9a1);
        EXPECT(gbc.pc(), 0x7557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0271
        gbc.setState(0x9637, 0xb2eb, 0xfc70, 0x1136, 0x9ffa, 0xd2fc, 0x1, 0x0);
        gbc.writeMem(0x9637, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb2eb);
        EXPECT(gbc.pc(), 0x9639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9637), 0xcb);
        EXPECT(gbc.readMem(0x9638), 0x50);
        // CB 50 0272
        gbc.setState(0x56bd, 0x4987, 0xde0, 0xd3f7, 0x2f0c, 0x4768, 0x1, 0x1);
        gbc.writeMem(0x56bd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0x56bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0273
        gbc.setState(0x9c63, 0x9a86, 0x74a0, 0x1869, 0x964, 0x3592, 0x1, 0x1);
        gbc.writeMem(0x9c63, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9a86);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xcb);
        EXPECT(gbc.readMem(0x9c64), 0x50);
        // CB 50 0274
        gbc.setState(0x64ef, 0x9985, 0xc230, 0x99cb, 0x6a79, 0x8b08, 0x0, 0x0);
        gbc.writeMem(0x64ef, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9985);
        EXPECT(gbc.pc(), 0x64f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0275
        gbc.setState(0xaf12, 0x3f6c, 0xf2a0, 0xaadd, 0x965d, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3f6c);
        EXPECT(gbc.pc(), 0xaf14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf12), 0xcb);
        EXPECT(gbc.readMem(0xaf13), 0x50);
        // CB 50 0276
        gbc.setState(0x7e95, 0x62ef, 0x6960, 0xad8, 0xdec5, 0xadf, 0x0, 0x1);
        gbc.writeMem(0x7e95, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x62ef);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0277
        gbc.setState(0x5f46, 0x3db8, 0x6a0, 0x2b94, 0x51d, 0x29a9, 0x0, 0x0);
        gbc.writeMem(0x5f46, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3db8);
        EXPECT(gbc.pc(), 0x5f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0278
        gbc.setState(0x4b19, 0x22da, 0x2e00, 0x2d90, 0x5688, 0x5ec9, 0x0, 0x0);
        gbc.writeMem(0x4b19, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x22da);
        EXPECT(gbc.pc(), 0x4b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0279
        gbc.setState(0x174d, 0xfbb, 0x10, 0x7f53, 0x4c7e, 0x86e0, 0x0, 0x0);
        gbc.writeMem(0x174d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfbb);
        EXPECT(gbc.pc(), 0x174f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 027A
        gbc.setState(0xa5ac, 0x526f, 0xe4f0, 0xaa62, 0x5763, 0x1b7e, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x526f);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ac), 0xcb);
        EXPECT(gbc.readMem(0xa5ad), 0x50);
        // CB 50 027B
        gbc.setState(0xc4c6, 0x658e, 0x6080, 0x449f, 0x2ea9, 0xb9c1, 0x1, 0x0);
        gbc.writeMem(0xc4c6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x658e);
        EXPECT(gbc.pc(), 0xc4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c6), 0xcb);
        EXPECT(gbc.readMem(0xc4c7), 0x50);
        // CB 50 027D
        gbc.setState(0x924b, 0xd5ef, 0xeca0, 0x5a74, 0x8ba7, 0x7a1f, 0x0, 0x0);
        gbc.writeMem(0x924b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd5ef);
        EXPECT(gbc.pc(), 0x924d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924b), 0xcb);
        EXPECT(gbc.readMem(0x924c), 0x50);
        // CB 50 027E
        gbc.setState(0x11a0, 0xe375, 0x4ca0, 0xfe17, 0x9c97, 0xdead, 0x1, 0x1);
        gbc.writeMem(0x11a0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe375);
        EXPECT(gbc.pc(), 0x11a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 027F
        gbc.setState(0x40ad, 0xee39, 0x6bb0, 0x526d, 0xd16, 0x57b3, 0x0, 0x0);
        gbc.writeMem(0x40ad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0x40af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0280
        gbc.setState(0xa0d, 0x227, 0xb5e0, 0xc012, 0xbcfd, 0x998d, 0x0, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x227);
        EXPECT(gbc.pc(), 0xa0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0281
        gbc.setState(0xa7e9, 0xfe6a, 0x7e0, 0xb7f0, 0x2eac, 0x922f, 0x1, 0x1);
        gbc.writeMem(0xa7e9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0xa7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e9), 0xcb);
        EXPECT(gbc.readMem(0xa7ea), 0x50);
        // CB 50 0282
        gbc.setState(0x448c, 0xb522, 0x1570, 0x69c3, 0xedb4, 0xe707, 0x1, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb522);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0283
        gbc.setState(0x8b46, 0x6396, 0xe980, 0xf2e2, 0x6594, 0x57da, 0x0, 0x1);
        gbc.writeMem(0x8b46, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6396);
        EXPECT(gbc.pc(), 0x8b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b46), 0xcb);
        EXPECT(gbc.readMem(0x8b47), 0x50);
        // CB 50 0284
        gbc.setState(0xa4c0, 0xdf7e, 0xb310, 0x8b79, 0x5582, 0xa740, 0x1, 0x1);
        gbc.writeMem(0xa4c0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdf7e);
        EXPECT(gbc.pc(), 0xa4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c0), 0xcb);
        EXPECT(gbc.readMem(0xa4c1), 0x50);
        // CB 50 0285
        gbc.setState(0xe931, 0xbc1f, 0xdc20, 0xc9fe, 0x52e2, 0x47f, 0x1, 0x0);
        gbc.writeMem(0xe931, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0xe933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe931), 0xcb);
        EXPECT(gbc.readMem(0xe932), 0x50);
        // CB 50 0286
        gbc.setState(0x462d, 0xd8a4, 0x9e30, 0xa0a0, 0xa550, 0x8a74, 0x0, 0x1);
        gbc.writeMem(0x462d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd8a4);
        EXPECT(gbc.pc(), 0x462f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0287
        gbc.setState(0x4f8a, 0x40e8, 0xeba0, 0x7982, 0x9d30, 0xb727, 0x1, 0x0);
        gbc.writeMem(0x4f8a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x4f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0288
        gbc.setState(0x58e7, 0x79a0, 0xf60, 0xe5eb, 0x33f3, 0x97b8, 0x0, 0x0);
        gbc.writeMem(0x58e7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x79a0);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0289
        gbc.setState(0x1158, 0xed1a, 0x89f0, 0xab28, 0x68, 0x7935, 0x0, 0x0);
        gbc.writeMem(0x1158, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xed1a);
        EXPECT(gbc.pc(), 0x115a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 028A
        gbc.setState(0x9834, 0x470d, 0x5b30, 0xd4da, 0x9444, 0x29a3, 0x0, 0x1);
        gbc.writeMem(0x9834, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x470d);
        EXPECT(gbc.pc(), 0x9836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9834), 0xcb);
        EXPECT(gbc.readMem(0x9835), 0x50);
        // CB 50 028B
        gbc.setState(0xbd11, 0x63f7, 0xc4d0, 0xc8b5, 0x83cc, 0x1bec, 0x0, 0x0);
        gbc.writeMem(0xbd11, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x63f7);
        EXPECT(gbc.pc(), 0xbd13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd11), 0xcb);
        EXPECT(gbc.readMem(0xbd12), 0x50);
        // CB 50 028C
        gbc.setState(0xbd24, 0x5f1e, 0x160, 0xde56, 0x5e5b, 0x38cb, 0x1, 0x1);
        gbc.writeMem(0xbd24, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5f1e);
        EXPECT(gbc.pc(), 0xbd26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd24), 0xcb);
        EXPECT(gbc.readMem(0xbd25), 0x50);
        // CB 50 028D
        gbc.setState(0x9b3e, 0xdf0c, 0xec50, 0x8f22, 0x294a, 0xec79, 0x0, 0x1);
        gbc.writeMem(0x9b3e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0x9b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3e), 0xcb);
        EXPECT(gbc.readMem(0x9b3f), 0x50);
        // CB 50 028E
        gbc.setState(0x47b1, 0x1d6d, 0x2fc0, 0x64d5, 0x1ff4, 0x590b, 0x1, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0x47b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 028F
        gbc.setState(0xd3ae, 0x3fc7, 0x520, 0x1914, 0xf659, 0xd220, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3fc7);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ae), 0xcb);
        EXPECT(gbc.readMem(0xd3af), 0x50);
        // CB 50 0290
        gbc.setState(0x4c58, 0xa3b7, 0x13b0, 0x3d91, 0x68a6, 0x939b, 0x0, 0x0);
        gbc.writeMem(0x4c58, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa3b7);
        EXPECT(gbc.pc(), 0x4c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0291
        gbc.setState(0x292d, 0x5ccd, 0x2650, 0x6c90, 0x3c3b, 0x44f9, 0x1, 0x0);
        gbc.writeMem(0x292d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5ccd);
        EXPECT(gbc.pc(), 0x292f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0292
        gbc.setState(0x1d16, 0x8e64, 0xf7f0, 0x1a04, 0x8b2e, 0x73c2, 0x1, 0x0);
        gbc.writeMem(0x1d16, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8e64);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0293
        gbc.setState(0x8650, 0xc0f5, 0x1cd0, 0xa6a4, 0xbda0, 0x2e13, 0x1, 0x0);
        gbc.writeMem(0x8650, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc0f5);
        EXPECT(gbc.pc(), 0x8652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8650), 0xcb);
        EXPECT(gbc.readMem(0x8651), 0x50);
        // CB 50 0294
        gbc.setState(0x9fa9, 0xdc68, 0x5470, 0xe0a4, 0xcdc3, 0x877e, 0x1, 0x1);
        gbc.writeMem(0x9fa9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdc68);
        EXPECT(gbc.pc(), 0x9fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa9), 0xcb);
        EXPECT(gbc.readMem(0x9faa), 0x50);
        // CB 50 0295
        gbc.setState(0x1395, 0xf08, 0x7320, 0xea2d, 0xd95e, 0xe6a1, 0x0, 0x0);
        gbc.writeMem(0x1395, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0x1397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0296
        gbc.setState(0x390e, 0xca2, 0xd320, 0x8da2, 0xaea0, 0xe775, 0x0, 0x1);
        gbc.writeMem(0x390e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xca2);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0297
        gbc.setState(0xed7a, 0xef27, 0x5ad0, 0x19a6, 0x96d7, 0xe792, 0x0, 0x0);
        gbc.writeMem(0xed7a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xef27);
        EXPECT(gbc.pc(), 0xed7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7a), 0xcb);
        EXPECT(gbc.readMem(0xed7b), 0x50);
        // CB 50 0298
        gbc.setState(0x9601, 0xed43, 0xcf80, 0xf5e1, 0x30a2, 0xc56e, 0x0, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xed43);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9601), 0xcb);
        EXPECT(gbc.readMem(0x9602), 0x50);
        // CB 50 0299
        gbc.setState(0x9487, 0xb21a, 0x780, 0xc424, 0x47a2, 0xf269, 0x0, 0x1);
        gbc.writeMem(0x9487, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb21a);
        EXPECT(gbc.pc(), 0x9489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9487), 0xcb);
        EXPECT(gbc.readMem(0x9488), 0x50);
        // CB 50 029A
        gbc.setState(0x8665, 0x8b7, 0x4b0, 0xfdb8, 0x10e4, 0x8bcc, 0x0, 0x1);
        gbc.writeMem(0x8665, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8b7);
        EXPECT(gbc.pc(), 0x8667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8665), 0xcb);
        EXPECT(gbc.readMem(0x8666), 0x50);
        // CB 50 029B
        gbc.setState(0x4475, 0x599c, 0x14a0, 0x8778, 0xaf7a, 0x78a, 0x1, 0x1);
        gbc.writeMem(0x4475, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x599c);
        EXPECT(gbc.pc(), 0x4477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 029C
        gbc.setState(0xe1f9, 0xae54, 0xf7e0, 0x7eb4, 0x62d5, 0xf538, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xae54);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0x50);
        // CB 50 029D
        gbc.setState(0xcbad, 0x9191, 0xd1c0, 0x5ae, 0x9a1a, 0xe99f, 0x0, 0x1);
        gbc.writeMem(0xcbad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9191);
        EXPECT(gbc.pc(), 0xcbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbad), 0xcb);
        EXPECT(gbc.readMem(0xcbae), 0x50);
        // CB 50 029E
        gbc.setState(0xbf4b, 0x76ae, 0x8040, 0x338f, 0x9f5a, 0x9a36, 0x0, 0x1);
        gbc.writeMem(0xbf4b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x76ae);
        EXPECT(gbc.pc(), 0xbf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf4b), 0xcb);
        EXPECT(gbc.readMem(0xbf4c), 0x50);
        // CB 50 029F
        gbc.setState(0x6e6b, 0x5085, 0x6c00, 0x483b, 0x7a8f, 0xd9d9, 0x0, 0x0);
        gbc.writeMem(0x6e6b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5085);
        EXPECT(gbc.pc(), 0x6e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02A0
        gbc.setState(0x3816, 0x778d, 0x8810, 0xdc09, 0xf0b4, 0xd3be, 0x1, 0x1);
        gbc.writeMem(0x3816, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x778d);
        EXPECT(gbc.pc(), 0x3818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02A1
        gbc.setState(0x3138, 0xa09b, 0x9740, 0x68bc, 0xac30, 0xa654, 0x1, 0x1);
        gbc.writeMem(0x3138, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa09b);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02A2
        gbc.setState(0x3880, 0x2151, 0xae40, 0xa010, 0x35c1, 0x979b, 0x1, 0x1);
        gbc.writeMem(0x3880, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2151);
        EXPECT(gbc.pc(), 0x3882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02A3
        gbc.setState(0xcce, 0x167, 0xe740, 0xc055, 0x435b, 0xd84f, 0x1, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x167);
        EXPECT(gbc.pc(), 0xcd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02A4
        gbc.setState(0x5303, 0x9f3, 0x7a10, 0x5f6d, 0x294a, 0xb6fb, 0x1, 0x1);
        gbc.writeMem(0x5303, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f3);
        EXPECT(gbc.pc(), 0x5305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02A5
        gbc.setState(0x5ff2, 0x27df, 0x67c0, 0x916b, 0x4155, 0xf9f5, 0x0, 0x0);
        gbc.writeMem(0x5ff2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x27df);
        EXPECT(gbc.pc(), 0x5ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02A7
        gbc.setState(0x91ca, 0x1b08, 0xe6f0, 0xd2a3, 0xe7f8, 0xd0f0, 0x1, 0x1);
        gbc.writeMem(0x91ca, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1b08);
        EXPECT(gbc.pc(), 0x91cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ca), 0xcb);
        EXPECT(gbc.readMem(0x91cb), 0x50);
        // CB 50 02A8
        gbc.setState(0xab99, 0xe983, 0xbf50, 0x7484, 0x2cf, 0x2d26, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe983);
        EXPECT(gbc.pc(), 0xab9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab99), 0xcb);
        EXPECT(gbc.readMem(0xab9a), 0x50);
        // CB 50 02A9
        gbc.setState(0xa31, 0x4b24, 0xff50, 0x3689, 0xd9a6, 0xd563, 0x1, 0x0);
        gbc.writeMem(0xa31, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4b24);
        EXPECT(gbc.pc(), 0xa33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02AA
        gbc.setState(0xda5a, 0x13fb, 0xe180, 0x8fb0, 0x6938, 0x260d, 0x0, 0x0);
        gbc.writeMem(0xda5a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x13fb);
        EXPECT(gbc.pc(), 0xda5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5a), 0xcb);
        EXPECT(gbc.readMem(0xda5b), 0x50);
        // CB 50 02AB
        gbc.setState(0x6431, 0x7431, 0x3b40, 0xf15c, 0xcbb4, 0x12d6, 0x1, 0x0);
        gbc.writeMem(0x6431, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7431);
        EXPECT(gbc.pc(), 0x6433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02AC
        gbc.setState(0xdd0f, 0xe774, 0x8010, 0x6f68, 0x7500, 0x1960, 0x1, 0x1);
        gbc.writeMem(0xdd0f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe774);
        EXPECT(gbc.pc(), 0xdd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0f), 0xcb);
        EXPECT(gbc.readMem(0xdd10), 0x50);
        // CB 50 02AD
        gbc.setState(0x35a3, 0xe02c, 0x8d30, 0x8ae8, 0x2cf4, 0x1845, 0x1, 0x1);
        gbc.writeMem(0x35a3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe02c);
        EXPECT(gbc.pc(), 0x35a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02AE
        gbc.setState(0x2409, 0xe900, 0x3560, 0x84f0, 0x742a, 0xdb5a, 0x1, 0x0);
        gbc.writeMem(0x2409, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe900);
        EXPECT(gbc.pc(), 0x240b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02AF
        gbc.setState(0x2e42, 0xc342, 0x9900, 0xcf5a, 0x8083, 0x30d, 0x1, 0x1);
        gbc.writeMem(0x2e42, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc342);
        EXPECT(gbc.pc(), 0x2e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02B0
        gbc.setState(0x132c, 0x224, 0x9650, 0xea, 0x7e50, 0xc23e, 0x0, 0x0);
        gbc.writeMem(0x132c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x224);
        EXPECT(gbc.pc(), 0x132e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02B1
        gbc.setState(0x1eea, 0xd6ef, 0xc940, 0xeade, 0x6e85, 0xae33, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd6ef);
        EXPECT(gbc.pc(), 0x1eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02B2
        gbc.setState(0xde11, 0x836d, 0x1740, 0x2d9b, 0x865c, 0x8c7f, 0x1, 0x1);
        gbc.writeMem(0xde11, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x836d);
        EXPECT(gbc.pc(), 0xde13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde11), 0xcb);
        EXPECT(gbc.readMem(0xde12), 0x50);
        // CB 50 02B3
        gbc.setState(0x639e, 0xf29e, 0x3370, 0x6e8, 0x989e, 0xc91, 0x1, 0x0);
        gbc.writeMem(0x639e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf29e);
        EXPECT(gbc.pc(), 0x63a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02B4
        gbc.setState(0x2dca, 0xceee, 0x2270, 0x5715, 0x86f8, 0xd244, 0x1, 0x0);
        gbc.writeMem(0x2dca, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xceee);
        EXPECT(gbc.pc(), 0x2dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02B5
        gbc.setState(0xd27f, 0x2921, 0x6f10, 0xaf03, 0x5e23, 0xf22b, 0x1, 0x0);
        gbc.writeMem(0xd27f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2921);
        EXPECT(gbc.pc(), 0xd281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27f), 0xcb);
        EXPECT(gbc.readMem(0xd280), 0x50);
        // CB 50 02B6
        gbc.setState(0xaec, 0x3812, 0xa950, 0x735e, 0x9631, 0xb9ba, 0x0, 0x1);
        gbc.writeMem(0xaec, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0xaee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02B7
        gbc.setState(0xa034, 0xe144, 0x7910, 0xaf02, 0x934c, 0xe66, 0x0, 0x0);
        gbc.writeMem(0xa034, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe144);
        EXPECT(gbc.pc(), 0xa036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa034), 0xcb);
        EXPECT(gbc.readMem(0xa035), 0x50);
        // CB 50 02B8
        gbc.setState(0x2e8c, 0xccf0, 0x24d0, 0xe5e0, 0x786b, 0xff7d, 0x1, 0x0);
        gbc.writeMem(0x2e8c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xccf0);
        EXPECT(gbc.pc(), 0x2e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02BA
        gbc.setState(0x377f, 0xbe0d, 0xe1a0, 0x36fc, 0x25f8, 0x34cb, 0x1, 0x1);
        gbc.writeMem(0x377f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x3781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02BB
        gbc.setState(0x99aa, 0x1d92, 0x3100, 0xc2c4, 0xf219, 0x851c, 0x0, 0x0);
        gbc.writeMem(0x99aa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99aa), 0xcb);
        EXPECT(gbc.readMem(0x99ab), 0x50);
        // CB 50 02BC
        gbc.setState(0xd11e, 0xca4a, 0x8ab0, 0x851c, 0x294a, 0x9958, 0x0, 0x0);
        gbc.writeMem(0xd11e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0xd120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11e), 0xcb);
        EXPECT(gbc.readMem(0xd11f), 0x50);
        // CB 50 02BD
        gbc.setState(0xe375, 0xd328, 0xd5e0, 0xf7e8, 0x851b, 0x8d0c, 0x0, 0x1);
        gbc.writeMem(0xe375, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd328);
        EXPECT(gbc.pc(), 0xe377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe375), 0xcb);
        EXPECT(gbc.readMem(0xe376), 0x50);
        // CB 50 02BE
        gbc.setState(0x2f44, 0x2e2e, 0x9e90, 0xf7fb, 0xaf48, 0x6a5c, 0x0, 0x0);
        gbc.writeMem(0x2f44, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x2f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02BF
        gbc.setState(0x8418, 0x2b0c, 0x4830, 0x328, 0xafcc, 0xa55c, 0x0, 0x1);
        gbc.writeMem(0x8418, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2b0c);
        EXPECT(gbc.pc(), 0x841a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8418), 0xcb);
        EXPECT(gbc.readMem(0x8419), 0x50);
        // CB 50 02C0
        gbc.setState(0x34c9, 0x2f9c, 0xf2e0, 0xee6d, 0x25b6, 0x9274, 0x1, 0x0);
        gbc.writeMem(0x34c9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2f9c);
        EXPECT(gbc.pc(), 0x34cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02C1
        gbc.setState(0xc82a, 0xee74, 0xe460, 0xb0c0, 0x8c3a, 0x89ea, 0x1, 0x0);
        gbc.writeMem(0xc82a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xee74);
        EXPECT(gbc.pc(), 0xc82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82a), 0xcb);
        EXPECT(gbc.readMem(0xc82b), 0x50);
        // CB 50 02C3
        gbc.setState(0xeb3a, 0xc44a, 0xc4f0, 0xc24a, 0x239c, 0x2800, 0x0, 0x0);
        gbc.writeMem(0xeb3a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc44a);
        EXPECT(gbc.pc(), 0xeb3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3a), 0xcb);
        EXPECT(gbc.readMem(0xeb3b), 0x50);
        // CB 50 02C4
        gbc.setState(0xc692, 0x50cf, 0x8c00, 0x4146, 0x5fb3, 0xf1c8, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc692), 0xcb);
        EXPECT(gbc.readMem(0xc693), 0x50);
        // CB 50 02C5
        gbc.setState(0x6aa1, 0xacee, 0x3160, 0x6e54, 0x5ea4, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0x6aa1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0x6aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02C6
        gbc.setState(0x59d9, 0x729a, 0x84d0, 0x4836, 0x17bc, 0xbca, 0x0, 0x0);
        gbc.writeMem(0x59d9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x729a);
        EXPECT(gbc.pc(), 0x59db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02C7
        gbc.setState(0x58e9, 0x24fa, 0x9810, 0xf3c8, 0x280c, 0x9cbb, 0x0, 0x1);
        gbc.writeMem(0x58e9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x24fa);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02C8
        gbc.setState(0x8f44, 0x128b, 0x7b10, 0x3635, 0xf607, 0x20b4, 0x0, 0x1);
        gbc.writeMem(0x8f44, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x128b);
        EXPECT(gbc.pc(), 0x8f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f44), 0xcb);
        EXPECT(gbc.readMem(0x8f45), 0x50);
        // CB 50 02C9
        gbc.setState(0xbf03, 0x5f1d, 0xc870, 0xecae, 0x7de4, 0xe70, 0x1, 0x0);
        gbc.writeMem(0xbf03, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0x50);
        // CB 50 02CA
        gbc.setState(0x9b46, 0x2623, 0x9ca0, 0xb1fd, 0xe849, 0x5ec6, 0x0, 0x0);
        gbc.writeMem(0x9b46, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2623);
        EXPECT(gbc.pc(), 0x9b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b46), 0xcb);
        EXPECT(gbc.readMem(0x9b47), 0x50);
        // CB 50 02CB
        gbc.setState(0xaeb9, 0x2da7, 0xf040, 0xd481, 0x1d9f, 0x37fe, 0x1, 0x1);
        gbc.writeMem(0xaeb9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2da7);
        EXPECT(gbc.pc(), 0xaebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb9), 0xcb);
        EXPECT(gbc.readMem(0xaeba), 0x50);
        // CB 50 02CC
        gbc.setState(0x8ad5, 0xe55b, 0x89d0, 0x44c6, 0x8aa6, 0x832e, 0x0, 0x0);
        gbc.writeMem(0x8ad5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe55b);
        EXPECT(gbc.pc(), 0x8ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad5), 0xcb);
        EXPECT(gbc.readMem(0x8ad6), 0x50);
        // CB 50 02CD
        gbc.setState(0x483a, 0xb7bc, 0x5600, 0x91e7, 0x2bdf, 0xa2bc, 0x1, 0x1);
        gbc.writeMem(0x483a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb7bc);
        EXPECT(gbc.pc(), 0x483c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02CE
        gbc.setState(0x7404, 0x947c, 0x9050, 0xc749, 0x652f, 0x4a6d, 0x0, 0x1);
        gbc.writeMem(0x7404, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x947c);
        EXPECT(gbc.pc(), 0x7406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02CF
        gbc.setState(0x35b2, 0xf2e, 0x4ef0, 0x2250, 0xc3c0, 0xb61e, 0x0, 0x0);
        gbc.writeMem(0x35b2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0x35b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D0
        gbc.setState(0x2940, 0x4ad, 0xda70, 0x6a3b, 0x3dbf, 0x3527, 0x0, 0x0);
        gbc.writeMem(0x2940, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D1
        gbc.setState(0xd719, 0x99c2, 0x3d30, 0xb439, 0x4bd6, 0xf4f4, 0x1, 0x0);
        gbc.writeMem(0xd719, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x99c2);
        EXPECT(gbc.pc(), 0xd71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd719), 0xcb);
        EXPECT(gbc.readMem(0xd71a), 0x50);
        // CB 50 02D2
        gbc.setState(0x7101, 0xf7a0, 0x7bd0, 0xd00d, 0xfbf2, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0x7101, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf7a0);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D3
        gbc.setState(0x35bb, 0xfd80, 0x6b0, 0x8889, 0xbcfb, 0x5ad2, 0x0, 0x1);
        gbc.writeMem(0x35bb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfd80);
        EXPECT(gbc.pc(), 0x35bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D4
        gbc.setState(0x7c08, 0xe323, 0x93a0, 0x4833, 0xea16, 0x3e9f, 0x0, 0x0);
        gbc.writeMem(0x7c08, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe323);
        EXPECT(gbc.pc(), 0x7c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02D5
        gbc.setState(0x52bb, 0x7e20, 0x53e0, 0xab0f, 0xb68b, 0x8153, 0x1, 0x0);
        gbc.writeMem(0x52bb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7e20);
        EXPECT(gbc.pc(), 0x52bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02D6
        gbc.setState(0x23bd, 0x1715, 0x8e70, 0xf719, 0x29c8, 0xb178, 0x0, 0x0);
        gbc.writeMem(0x23bd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1715);
        EXPECT(gbc.pc(), 0x23bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D7
        gbc.setState(0x4a9e, 0x3b20, 0xbb0, 0x6583, 0x1760, 0xdab8, 0x0, 0x0);
        gbc.writeMem(0x4a9e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3b20);
        EXPECT(gbc.pc(), 0x4aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02D8
        gbc.setState(0x6c7, 0xd067, 0x4560, 0xd415, 0xff80, 0xc43, 0x0, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd067);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02D9
        gbc.setState(0xefc6, 0x4690, 0xa820, 0xe4fe, 0xa8ff, 0x87e1, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4690);
        EXPECT(gbc.pc(), 0xefc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc6), 0xcb);
        EXPECT(gbc.readMem(0xefc7), 0x50);
        // CB 50 02DA
        gbc.setState(0xc8d1, 0xa2b8, 0x5b50, 0x34cb, 0xb67d, 0xc1bd, 0x0, 0x1);
        gbc.writeMem(0xc8d1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa2b8);
        EXPECT(gbc.pc(), 0xc8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d1), 0xcb);
        EXPECT(gbc.readMem(0xc8d2), 0x50);
        // CB 50 02DB
        gbc.setState(0x42d3, 0x4e08, 0x5590, 0xd2, 0x4ba3, 0x252c, 0x1, 0x1);
        gbc.writeMem(0x42d3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4e08);
        EXPECT(gbc.pc(), 0x42d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02DD
        gbc.setState(0x17e2, 0x6698, 0xa00, 0x93d2, 0xb8f0, 0xfa20, 0x1, 0x1);
        gbc.writeMem(0x17e2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6698);
        EXPECT(gbc.pc(), 0x17e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02DE
        gbc.setState(0xcf3f, 0x43d4, 0x9920, 0x15de, 0xd44b, 0x699, 0x1, 0x0);
        gbc.writeMem(0xcf3f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0xcf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3f), 0xcb);
        EXPECT(gbc.readMem(0xcf40), 0x50);
        // CB 50 02DF
        gbc.setState(0x2366, 0x29af, 0xe070, 0x794b, 0xa16f, 0x5785, 0x0, 0x1);
        gbc.writeMem(0x2366, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x29af);
        EXPECT(gbc.pc(), 0x2368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02E0
        gbc.setState(0x5fdb, 0xc257, 0x9370, 0x4c73, 0xfbe1, 0x2a10, 0x0, 0x1);
        gbc.writeMem(0x5fdb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc257);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02E1
        gbc.setState(0xcccc, 0x724a, 0x3ea0, 0xa4db, 0x6eb, 0xaae5, 0x0, 0x1);
        gbc.writeMem(0xcccc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x724a);
        EXPECT(gbc.pc(), 0xccce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccc), 0xcb);
        EXPECT(gbc.readMem(0xcccd), 0x50);
        // CB 50 02E3
        gbc.setState(0x8d60, 0x7d17, 0xd80, 0xd932, 0x2dc3, 0xc4c3, 0x0, 0x1);
        gbc.writeMem(0x8d60, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7d17);
        EXPECT(gbc.pc(), 0x8d62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d60), 0xcb);
        EXPECT(gbc.readMem(0x8d61), 0x50);
        // CB 50 02E4
        gbc.setState(0x2750, 0x15e3, 0x2bb0, 0x4038, 0x1f2f, 0x61c7, 0x0, 0x1);
        gbc.writeMem(0x2750, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x15e3);
        EXPECT(gbc.pc(), 0x2752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02E5
        gbc.setState(0xa30a, 0xf41, 0xe210, 0x5dbe, 0x8daf, 0x2a63, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf41);
        EXPECT(gbc.pc(), 0xa30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa30a), 0xcb);
        EXPECT(gbc.readMem(0xa30b), 0x50);
        // CB 50 02E6
        gbc.setState(0x2c80, 0x6f8e, 0x9980, 0xcb1, 0xfcbc, 0xe5e5, 0x1, 0x0);
        gbc.writeMem(0x2c80, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6f8e);
        EXPECT(gbc.pc(), 0x2c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02E7
        gbc.setState(0x5faa, 0x3895, 0xe840, 0xbfdf, 0xf7c8, 0x8673, 0x1, 0x1);
        gbc.writeMem(0x5faa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3895);
        EXPECT(gbc.pc(), 0x5fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02E8
        gbc.setState(0x807c, 0x7375, 0x5280, 0xe280, 0xa29d, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x807c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7375);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807c), 0xcb);
        EXPECT(gbc.readMem(0x807d), 0x50);
        // CB 50 02E9
        gbc.setState(0x77e3, 0x3143, 0xe080, 0xfe99, 0xf9c3, 0x1bf2, 0x0, 0x0);
        gbc.writeMem(0x77e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3143);
        EXPECT(gbc.pc(), 0x77e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02EA
        gbc.setState(0x9b84, 0x6c78, 0xda0, 0xa2ca, 0x98c5, 0x5ed1, 0x1, 0x0);
        gbc.writeMem(0x9b84, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6c78);
        EXPECT(gbc.pc(), 0x9b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b84), 0xcb);
        EXPECT(gbc.readMem(0x9b85), 0x50);
        // CB 50 02EB
        gbc.setState(0x615, 0xdeac, 0x61b0, 0xf166, 0x26cb, 0x5978, 0x0, 0x1);
        gbc.writeMem(0x615, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdeac);
        EXPECT(gbc.pc(), 0x617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02EC
        gbc.setState(0x3b49, 0x3efe, 0x2ad0, 0x90fe, 0x385a, 0x3158, 0x0, 0x1);
        gbc.writeMem(0x3b49, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3efe);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02ED
        gbc.setState(0x2b27, 0x2600, 0xc5b0, 0x4199, 0x8805, 0x356, 0x0, 0x1);
        gbc.writeMem(0x2b27, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2600);
        EXPECT(gbc.pc(), 0x2b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02EE
        gbc.setState(0xe25f, 0xaac9, 0x18d0, 0x206f, 0x8b75, 0xe653, 0x1, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaac9);
        EXPECT(gbc.pc(), 0xe261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25f), 0xcb);
        EXPECT(gbc.readMem(0xe260), 0x50);
        // CB 50 02EF
        gbc.setState(0x6cfb, 0xc4c5, 0xac0, 0xb4bc, 0x8f6d, 0x918e, 0x1, 0x1);
        gbc.writeMem(0x6cfb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc4c5);
        EXPECT(gbc.pc(), 0x6cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02F0
        gbc.setState(0x6297, 0xa966, 0x49b0, 0xff9d, 0x4bd9, 0x8cef, 0x1, 0x0);
        gbc.writeMem(0x6297, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa966);
        EXPECT(gbc.pc(), 0x6299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02F1
        gbc.setState(0xd7b, 0x3acc, 0xb540, 0x5fc1, 0xa82b, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0xd7b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3acc);
        EXPECT(gbc.pc(), 0xd7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02F2
        gbc.setState(0xdc3f, 0x2019, 0xd550, 0xd1f7, 0x323d, 0xa56c, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2019);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0x50);
        // CB 50 02F3
        gbc.setState(0x46f, 0x9311, 0x4eb0, 0xdeab, 0x5e7a, 0x245, 0x0, 0x0);
        gbc.writeMem(0x46f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9311);
        EXPECT(gbc.pc(), 0x471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02F4
        gbc.setState(0x26de, 0x7a19, 0xc50, 0x6fcc, 0xe7ba, 0xdd97, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7a19);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02F5
        gbc.setState(0x7b9e, 0x15fc, 0x4b70, 0xcabf, 0x9b8d, 0x4945, 0x0, 0x0);
        gbc.writeMem(0x7b9e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x15fc);
        EXPECT(gbc.pc(), 0x7ba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 02F6
        gbc.setState(0x8a7f, 0xc547, 0xb490, 0xb73d, 0xca07, 0x7fa4, 0x1, 0x0);
        gbc.writeMem(0x8a7f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc547);
        EXPECT(gbc.pc(), 0x8a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7f), 0xcb);
        EXPECT(gbc.readMem(0x8a80), 0x50);
        // CB 50 02F7
        gbc.setState(0xda8c, 0x4ad0, 0xc110, 0x8ba6, 0xf411, 0x2a5, 0x1, 0x0);
        gbc.writeMem(0xda8c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4ad0);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8c), 0xcb);
        EXPECT(gbc.readMem(0xda8d), 0x50);
        // CB 50 02F8
        gbc.setState(0xb085, 0x8b0b, 0xe5c0, 0x4dd2, 0x9235, 0x8267, 0x0, 0x0);
        gbc.writeMem(0xb085, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8b0b);
        EXPECT(gbc.pc(), 0xb087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb085), 0xcb);
        EXPECT(gbc.readMem(0xb086), 0x50);
        // CB 50 02F9
        gbc.setState(0xb9e8, 0x15de, 0x8b40, 0x5906, 0x3efb, 0x6c3a, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x15de);
        EXPECT(gbc.pc(), 0xb9ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e8), 0xcb);
        EXPECT(gbc.readMem(0xb9e9), 0x50);
        // CB 50 02FA
        gbc.setState(0x76ed, 0x3477, 0xb940, 0x923, 0x450b, 0x43e6, 0x0, 0x0);
        gbc.writeMem(0x76ed, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3477);
        EXPECT(gbc.pc(), 0x76ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 02FC
        gbc.setState(0xac30, 0x9787, 0x9130, 0x6f89, 0x4e00, 0xb1ed, 0x1, 0x1);
        gbc.writeMem(0xac30, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9787);
        EXPECT(gbc.pc(), 0xac32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac30), 0xcb);
        EXPECT(gbc.readMem(0xac31), 0x50);
        // CB 50 02FE
        gbc.setState(0xd1a3, 0x7f33, 0x9750, 0xe4e5, 0xf915, 0xd2b2, 0x0, 0x0);
        gbc.writeMem(0xd1a3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7f33);
        EXPECT(gbc.pc(), 0xd1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a3), 0xcb);
        EXPECT(gbc.readMem(0xd1a4), 0x50);
        // CB 50 02FF
        gbc.setState(0x2b4d, 0xf5d9, 0x3380, 0x7f11, 0xa5b0, 0xfa8c, 0x0, 0x1);
        gbc.writeMem(0x2b4d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf5d9);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0300
        gbc.setState(0x2901, 0x6267, 0x5bf0, 0x7be4, 0x13f7, 0xe65d, 0x1, 0x0);
        gbc.writeMem(0x2901, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6267);
        EXPECT(gbc.pc(), 0x2903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0301
        gbc.setState(0x224a, 0x719f, 0xdee0, 0x871e, 0x7cd7, 0x4ded, 0x0, 0x0);
        gbc.writeMem(0x224a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x719f);
        EXPECT(gbc.pc(), 0x224c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0302
        gbc.setState(0x8173, 0xd0b0, 0x4440, 0xdb31, 0x78a5, 0x2c7c, 0x1, 0x0);
        gbc.writeMem(0x8173, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd0b0);
        EXPECT(gbc.pc(), 0x8175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8173), 0xcb);
        EXPECT(gbc.readMem(0x8174), 0x50);
        // CB 50 0303
        gbc.setState(0xd89c, 0x21af, 0xd420, 0x2178, 0x5230, 0x4e9a, 0x1, 0x1);
        gbc.writeMem(0xd89c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0xd89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89c), 0xcb);
        EXPECT(gbc.readMem(0xd89d), 0x50);
        // CB 50 0304
        gbc.setState(0xb0dc, 0x41e0, 0xa860, 0xe543, 0x1910, 0x8790, 0x1, 0x0);
        gbc.writeMem(0xb0dc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x41e0);
        EXPECT(gbc.pc(), 0xb0de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0dc), 0xcb);
        EXPECT(gbc.readMem(0xb0dd), 0x50);
        // CB 50 0305
        gbc.setState(0xa61a, 0xa5ab, 0x57a0, 0x5059, 0x7e70, 0x542f, 0x0, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa5ab);
        EXPECT(gbc.pc(), 0xa61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61a), 0xcb);
        EXPECT(gbc.readMem(0xa61b), 0x50);
        // CB 50 0306
        gbc.setState(0xa33e, 0x374f, 0x6fb0, 0xda81, 0x43cc, 0xe562, 0x0, 0x0);
        gbc.writeMem(0xa33e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x374f);
        EXPECT(gbc.pc(), 0xa340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33e), 0xcb);
        EXPECT(gbc.readMem(0xa33f), 0x50);
        // CB 50 0307
        gbc.setState(0xcc5e, 0x16c3, 0x7ed0, 0x9ef3, 0xf96c, 0xc118, 0x0, 0x1);
        gbc.writeMem(0xcc5e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x16c3);
        EXPECT(gbc.pc(), 0xcc60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5e), 0xcb);
        EXPECT(gbc.readMem(0xcc5f), 0x50);
        // CB 50 0308
        gbc.setState(0xd5f0, 0xd97a, 0xc9f0, 0xd47b, 0x25c7, 0x8d5f, 0x0, 0x0);
        gbc.writeMem(0xd5f0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd97a);
        EXPECT(gbc.pc(), 0xd5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f0), 0xcb);
        EXPECT(gbc.readMem(0xd5f1), 0x50);
        // CB 50 0309
        gbc.setState(0xc818, 0x8dca, 0x19e0, 0xbf91, 0x4098, 0x4397, 0x1, 0x0);
        gbc.writeMem(0xc818, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc818), 0xcb);
        EXPECT(gbc.readMem(0xc819), 0x50);
        // CB 50 030A
        gbc.setState(0x3cda, 0xb8f1, 0x24c0, 0x21b8, 0x4c7e, 0x5bc9, 0x1, 0x1);
        gbc.writeMem(0x3cda, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb8f1);
        EXPECT(gbc.pc(), 0x3cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 030B
        gbc.setState(0xdd03, 0x19d4, 0x9180, 0xf6fb, 0x89f9, 0x3972, 0x0, 0x0);
        gbc.writeMem(0xdd03, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x19d4);
        EXPECT(gbc.pc(), 0xdd05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd03), 0xcb);
        EXPECT(gbc.readMem(0xdd04), 0x50);
        // CB 50 030C
        gbc.setState(0x26f1, 0x3b61, 0xf900, 0x5bfc, 0xb19a, 0xbe28, 0x0, 0x0);
        gbc.writeMem(0x26f1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3b61);
        EXPECT(gbc.pc(), 0x26f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 030D
        gbc.setState(0xb2c0, 0xfdd0, 0x3b10, 0xe76f, 0x7490, 0xace7, 0x1, 0x0);
        gbc.writeMem(0xb2c0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfdd0);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c0), 0xcb);
        EXPECT(gbc.readMem(0xb2c1), 0x50);
        // CB 50 030E
        gbc.setState(0x7d4f, 0xe459, 0x9320, 0xf708, 0x84e7, 0x88e7, 0x0, 0x1);
        gbc.writeMem(0x7d4f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe459);
        EXPECT(gbc.pc(), 0x7d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 030F
        gbc.setState(0xcd7c, 0x7fa8, 0x5cd0, 0xd8d9, 0x5127, 0xe91e, 0x1, 0x1);
        gbc.writeMem(0xcd7c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7fa8);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd7c), 0xcb);
        EXPECT(gbc.readMem(0xcd7d), 0x50);
        // CB 50 0310
        gbc.setState(0xd002, 0xfe3c, 0x280, 0x28d2, 0x146, 0x1c8a, 0x1, 0x0);
        gbc.writeMem(0xd002, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfe3c);
        EXPECT(gbc.pc(), 0xd004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd002), 0xcb);
        EXPECT(gbc.readMem(0xd003), 0x50);
        // CB 50 0311
        gbc.setState(0x9511, 0xa068, 0xd7f0, 0x3792, 0x4061, 0xad71, 0x0, 0x0);
        gbc.writeMem(0x9511, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0x9513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9511), 0xcb);
        EXPECT(gbc.readMem(0x9512), 0x50);
        // CB 50 0312
        gbc.setState(0xce95, 0x2039, 0x3650, 0xaf5a, 0x8067, 0xf579, 0x1, 0x0);
        gbc.writeMem(0xce95, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2039);
        EXPECT(gbc.pc(), 0xce97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce95), 0xcb);
        EXPECT(gbc.readMem(0xce96), 0x50);
        // CB 50 0313
        gbc.setState(0x83f2, 0xc55f, 0xcfa0, 0xfab0, 0x65a3, 0xc791, 0x1, 0x0);
        gbc.writeMem(0x83f2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc55f);
        EXPECT(gbc.pc(), 0x83f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f2), 0xcb);
        EXPECT(gbc.readMem(0x83f3), 0x50);
        // CB 50 0314
        gbc.setState(0xa69e, 0x3c25, 0x39e0, 0xa406, 0xd50e, 0xbb50, 0x1, 0x1);
        gbc.writeMem(0xa69e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3c25);
        EXPECT(gbc.pc(), 0xa6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69e), 0xcb);
        EXPECT(gbc.readMem(0xa69f), 0x50);
        // CB 50 0315
        gbc.setState(0x6b32, 0xa17c, 0xb0e0, 0xadf7, 0xaa19, 0x5ce2, 0x0, 0x1);
        gbc.writeMem(0x6b32, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa17c);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0316
        gbc.setState(0x6cc, 0xbbc5, 0xbe20, 0xf2dc, 0x55e1, 0xf880, 0x1, 0x1);
        gbc.writeMem(0x6cc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbbc5);
        EXPECT(gbc.pc(), 0x6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0317
        gbc.setState(0x3ecd, 0x75e0, 0xcc90, 0xc92e, 0xa909, 0x6354, 0x0, 0x0);
        gbc.writeMem(0x3ecd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x75e0);
        EXPECT(gbc.pc(), 0x3ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0318
        gbc.setState(0xbc5f, 0x5379, 0xe8e0, 0x1e2d, 0x7ee7, 0x2438, 0x1, 0x1);
        gbc.writeMem(0xbc5f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5379);
        EXPECT(gbc.pc(), 0xbc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5f), 0xcb);
        EXPECT(gbc.readMem(0xbc60), 0x50);
        // CB 50 0319
        gbc.setState(0xe229, 0x8694, 0x7590, 0x5a13, 0x5d00, 0x256, 0x1, 0x0);
        gbc.writeMem(0xe229, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe229), 0xcb);
        EXPECT(gbc.readMem(0xe22a), 0x50);
        // CB 50 031A
        gbc.setState(0x690d, 0xaa2a, 0x64d0, 0xedd, 0x29, 0x1985, 0x0, 0x1);
        gbc.writeMem(0x690d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xaa2a);
        EXPECT(gbc.pc(), 0x690f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 031B
        gbc.setState(0xaf68, 0xa279, 0x2430, 0xe97a, 0xd7cb, 0xb616, 0x1, 0x1);
        gbc.writeMem(0xaf68, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa279);
        EXPECT(gbc.pc(), 0xaf6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf68), 0xcb);
        EXPECT(gbc.readMem(0xaf69), 0x50);
        // CB 50 031C
        gbc.setState(0x9a50, 0xe7e5, 0x4460, 0x3bce, 0x4b9d, 0xf239, 0x0, 0x0);
        gbc.writeMem(0x9a50, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe7e5);
        EXPECT(gbc.pc(), 0x9a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a50), 0xcb);
        EXPECT(gbc.readMem(0x9a51), 0x50);
        // CB 50 031D
        gbc.setState(0x9fcf, 0xee1d, 0xfb60, 0x9472, 0xb55, 0x55e9, 0x1, 0x0);
        gbc.writeMem(0x9fcf, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xee1d);
        EXPECT(gbc.pc(), 0x9fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcf), 0xcb);
        EXPECT(gbc.readMem(0x9fd0), 0x50);
        // CB 50 031E
        gbc.setState(0x602d, 0xee37, 0x6b70, 0x9203, 0xc62d, 0x93f6, 0x1, 0x0);
        gbc.writeMem(0x602d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xee37);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0320
        gbc.setState(0x83a7, 0x3e19, 0xdb0, 0xba52, 0x16da, 0xcbd1, 0x1, 0x0);
        gbc.writeMem(0x83a7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3e19);
        EXPECT(gbc.pc(), 0x83a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a7), 0xcb);
        EXPECT(gbc.readMem(0x83a8), 0x50);
        // CB 50 0321
        gbc.setState(0x2e7c, 0x967a, 0x4e70, 0x38ae, 0x1bda, 0xb6e1, 0x0, 0x1);
        gbc.writeMem(0x2e7c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x967a);
        EXPECT(gbc.pc(), 0x2e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0322
        gbc.setState(0x84de, 0xfc7a, 0xd8c0, 0xa217, 0xd23d, 0x7b66, 0x0, 0x0);
        gbc.writeMem(0x84de, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfc7a);
        EXPECT(gbc.pc(), 0x84e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84de), 0xcb);
        EXPECT(gbc.readMem(0x84df), 0x50);
        // CB 50 0323
        gbc.setState(0xd4a7, 0x62bb, 0xddf0, 0x1f41, 0xf4e6, 0x4f06, 0x0, 0x0);
        gbc.writeMem(0xd4a7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x62bb);
        EXPECT(gbc.pc(), 0xd4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a7), 0xcb);
        EXPECT(gbc.readMem(0xd4a8), 0x50);
        // CB 50 0324
        gbc.setState(0xc9cb, 0x3360, 0x46d0, 0x9e9a, 0xacf4, 0xb181, 0x1, 0x1);
        gbc.writeMem(0xc9cb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3360);
        EXPECT(gbc.pc(), 0xc9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9cb), 0xcb);
        EXPECT(gbc.readMem(0xc9cc), 0x50);
        // CB 50 0325
        gbc.setState(0xbaa, 0xa291, 0x9980, 0xadab, 0x4f1d, 0x5ec7, 0x1, 0x1);
        gbc.writeMem(0xbaa, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa291);
        EXPECT(gbc.pc(), 0xbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0326
        gbc.setState(0x519f, 0x7e02, 0xaca0, 0xcce9, 0x1cc7, 0xd503, 0x0, 0x0);
        gbc.writeMem(0x519f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7e02);
        EXPECT(gbc.pc(), 0x51a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0327
        gbc.setState(0xd04d, 0x321f, 0x52c0, 0x1ff, 0x339d, 0xf5cc, 0x0, 0x1);
        gbc.writeMem(0xd04d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x321f);
        EXPECT(gbc.pc(), 0xd04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04d), 0xcb);
        EXPECT(gbc.readMem(0xd04e), 0x50);
        // CB 50 0328
        gbc.setState(0xac0c, 0x53e5, 0xf1f0, 0xc25a, 0x3600, 0x648e, 0x1, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x53e5);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0x50);
        // CB 50 0329
        gbc.setState(0x4b11, 0x9860, 0xcd0, 0xaa70, 0x3464, 0xbb89, 0x1, 0x1);
        gbc.writeMem(0x4b11, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9860);
        EXPECT(gbc.pc(), 0x4b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 032A
        gbc.setState(0x1487, 0xb0b9, 0xa480, 0x526b, 0xdd31, 0xf553, 0x1, 0x1);
        gbc.writeMem(0x1487, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb0b9);
        EXPECT(gbc.pc(), 0x1489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 032B
        gbc.setState(0x6f31, 0xd7ca, 0x4270, 0x2e3b, 0x807e, 0x7ad3, 0x1, 0x1);
        gbc.writeMem(0x6f31, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd7ca);
        EXPECT(gbc.pc(), 0x6f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 032C
        gbc.setState(0xbafc, 0x11f5, 0xc980, 0x9836, 0x6687, 0xf4c3, 0x0, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x11f5);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafc), 0xcb);
        EXPECT(gbc.readMem(0xbafd), 0x50);
        // CB 50 032D
        gbc.setState(0x4f3c, 0x18db, 0xc0a0, 0x9957, 0x6936, 0x1c9e, 0x0, 0x1);
        gbc.writeMem(0x4f3c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x18db);
        EXPECT(gbc.pc(), 0x4f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 032E
        gbc.setState(0x1d06, 0x9e7c, 0xad70, 0xd37a, 0x4436, 0x712b, 0x1, 0x0);
        gbc.writeMem(0x1d06, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9e7c);
        EXPECT(gbc.pc(), 0x1d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 032F
        gbc.setState(0x8e02, 0xda7f, 0x59f0, 0x324e, 0x34c4, 0xe7a8, 0x0, 0x0);
        gbc.writeMem(0x8e02, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xda7f);
        EXPECT(gbc.pc(), 0x8e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e02), 0xcb);
        EXPECT(gbc.readMem(0x8e03), 0x50);
        // CB 50 0331
        gbc.setState(0x4cb2, 0x7659, 0xfbb0, 0xf4c3, 0xdbab, 0x9f0d, 0x0, 0x1);
        gbc.writeMem(0x4cb2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7659);
        EXPECT(gbc.pc(), 0x4cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0332
        gbc.setState(0xa467, 0xb0a5, 0x79b0, 0x540f, 0xc0a9, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0xa467, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb0a5);
        EXPECT(gbc.pc(), 0xa469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa467), 0xcb);
        EXPECT(gbc.readMem(0xa468), 0x50);
        // CB 50 0333
        gbc.setState(0xecfc, 0x6962, 0x6c60, 0x2df0, 0x5306, 0xbc6f, 0x0, 0x0);
        gbc.writeMem(0xecfc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6962);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfc), 0xcb);
        EXPECT(gbc.readMem(0xecfd), 0x50);
        // CB 50 0334
        gbc.setState(0xe9d5, 0xa331, 0x7ef0, 0x81c1, 0x39cd, 0x30fb, 0x0, 0x1);
        gbc.writeMem(0xe9d5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa331);
        EXPECT(gbc.pc(), 0xe9d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d5), 0xcb);
        EXPECT(gbc.readMem(0xe9d6), 0x50);
        // CB 50 0335
        gbc.setState(0x81e1, 0x9f46, 0x1f70, 0x62cc, 0xc3a, 0x8b8b, 0x1, 0x0);
        gbc.writeMem(0x81e1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9f46);
        EXPECT(gbc.pc(), 0x81e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e1), 0xcb);
        EXPECT(gbc.readMem(0x81e2), 0x50);
        // CB 50 0336
        gbc.setState(0x94ad, 0x5a4c, 0xdf70, 0x8c4e, 0x5c70, 0x6c32, 0x0, 0x0);
        gbc.writeMem(0x94ad, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5a4c);
        EXPECT(gbc.pc(), 0x94af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ad), 0xcb);
        EXPECT(gbc.readMem(0x94ae), 0x50);
        // CB 50 0337
        gbc.setState(0x6790, 0xce41, 0xf660, 0x3103, 0x9f6f, 0xca42, 0x0, 0x0);
        gbc.writeMem(0x6790, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xce41);
        EXPECT(gbc.pc(), 0x6792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0338
        gbc.setState(0xccb2, 0xec0d, 0x60d0, 0x1750, 0x1cc6, 0x5d5, 0x0, 0x1);
        gbc.writeMem(0xccb2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xec0d);
        EXPECT(gbc.pc(), 0xccb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb2), 0xcb);
        EXPECT(gbc.readMem(0xccb3), 0x50);
        // CB 50 0339
        gbc.setState(0x9df7, 0xb18c, 0x4a90, 0x49a8, 0x2b9, 0xe5d7, 0x1, 0x0);
        gbc.writeMem(0x9df7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb18c);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df7), 0xcb);
        EXPECT(gbc.readMem(0x9df8), 0x50);
        // CB 50 033A
        gbc.setState(0x96df, 0x30bb, 0x6c30, 0xf9fd, 0x5e1a, 0x3bf5, 0x0, 0x0);
        gbc.writeMem(0x96df, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x30bb);
        EXPECT(gbc.pc(), 0x96e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96df), 0xcb);
        EXPECT(gbc.readMem(0x96e0), 0x50);
        // CB 50 033B
        gbc.setState(0xa5f6, 0x4a48, 0xf960, 0xe5e1, 0x40eb, 0x26c3, 0x0, 0x1);
        gbc.writeMem(0xa5f6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4a48);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f6), 0xcb);
        EXPECT(gbc.readMem(0xa5f7), 0x50);
        // CB 50 033C
        gbc.setState(0x2436, 0xa315, 0x4100, 0x7191, 0x4f67, 0x446a, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa315);
        EXPECT(gbc.pc(), 0x2438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 033E
        gbc.setState(0xc57b, 0x1915, 0xd930, 0x46c8, 0x139d, 0x470a, 0x1, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1915);
        EXPECT(gbc.pc(), 0xc57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57b), 0xcb);
        EXPECT(gbc.readMem(0xc57c), 0x50);
        // CB 50 0340
        gbc.setState(0xce3f, 0x83dd, 0x2dd0, 0x226c, 0x952, 0x2c8d, 0x0, 0x0);
        gbc.writeMem(0xce3f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x83dd);
        EXPECT(gbc.pc(), 0xce41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3f), 0xcb);
        EXPECT(gbc.readMem(0xce40), 0x50);
        // CB 50 0341
        gbc.setState(0x563c, 0x59e5, 0xf580, 0x24ee, 0x4cac, 0x646a, 0x0, 0x0);
        gbc.writeMem(0x563c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x59e5);
        EXPECT(gbc.pc(), 0x563e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0342
        gbc.setState(0x8e6a, 0x2aaa, 0xc1c0, 0xa9be, 0x18a, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x8e6a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0x8e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6a), 0xcb);
        EXPECT(gbc.readMem(0x8e6b), 0x50);
        // CB 50 0343
        gbc.setState(0x96c5, 0x653, 0xfd00, 0x14ee, 0x8951, 0x91ac, 0x1, 0x1);
        gbc.writeMem(0x96c5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x653);
        EXPECT(gbc.pc(), 0x96c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c5), 0xcb);
        EXPECT(gbc.readMem(0x96c6), 0x50);
        // CB 50 0344
        gbc.setState(0x392e, 0xf431, 0x3a80, 0x7903, 0xa174, 0xf2ca, 0x0, 0x1);
        gbc.writeMem(0x392e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf431);
        EXPECT(gbc.pc(), 0x3930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0345
        gbc.setState(0xe45b, 0x9b0d, 0x4380, 0x2231, 0xf54b, 0x802f, 0x0, 0x0);
        gbc.writeMem(0xe45b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9b0d);
        EXPECT(gbc.pc(), 0xe45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45b), 0xcb);
        EXPECT(gbc.readMem(0xe45c), 0x50);
        // CB 50 0346
        gbc.setState(0x3cdd, 0x8a28, 0xa760, 0x6268, 0x9294, 0xea7c, 0x0, 0x1);
        gbc.writeMem(0x3cdd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8a28);
        EXPECT(gbc.pc(), 0x3cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0347
        gbc.setState(0x3e8b, 0x8169, 0xb690, 0x2c10, 0xec9, 0x6d8c, 0x0, 0x1);
        gbc.writeMem(0x3e8b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8169);
        EXPECT(gbc.pc(), 0x3e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0348
        gbc.setState(0xbccd, 0x1fb7, 0x5030, 0x35b7, 0x1189, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0xbccd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1fb7);
        EXPECT(gbc.pc(), 0xbccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbccd), 0xcb);
        EXPECT(gbc.readMem(0xbcce), 0x50);
        // CB 50 0349
        gbc.setState(0x4910, 0xaaf2, 0x7100, 0x41fb, 0xd356, 0x722a, 0x0, 0x1);
        gbc.writeMem(0x4910, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaaf2);
        EXPECT(gbc.pc(), 0x4912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 034A
        gbc.setState(0xe493, 0x238a, 0xb740, 0x5c48, 0x584f, 0x4b48, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x238a);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe493), 0xcb);
        EXPECT(gbc.readMem(0xe494), 0x50);
        // CB 50 034B
        gbc.setState(0xb5d, 0xcde6, 0xe9a0, 0xef6, 0x1098, 0x815a, 0x1, 0x0);
        gbc.writeMem(0xb5d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcde6);
        EXPECT(gbc.pc(), 0xb5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 034C
        gbc.setState(0xe458, 0x5869, 0x6740, 0xcbc9, 0xb17a, 0x9c1e, 0x0, 0x1);
        gbc.writeMem(0xe458, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5869);
        EXPECT(gbc.pc(), 0xe45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe458), 0xcb);
        EXPECT(gbc.readMem(0xe459), 0x50);
        // CB 50 034D
        gbc.setState(0xc96e, 0xa797, 0x9f10, 0xd0a8, 0x1785, 0x9285, 0x1, 0x1);
        gbc.writeMem(0xc96e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa797);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96e), 0xcb);
        EXPECT(gbc.readMem(0xc96f), 0x50);
        // CB 50 034E
        gbc.setState(0x75c2, 0xef71, 0x6030, 0x8e1d, 0xe543, 0xaaf0, 0x1, 0x1);
        gbc.writeMem(0x75c2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xef71);
        EXPECT(gbc.pc(), 0x75c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 034F
        gbc.setState(0x28af, 0x2a1b, 0x72c0, 0x3126, 0xff8, 0xe9ee, 0x1, 0x1);
        gbc.writeMem(0x28af, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2a1b);
        EXPECT(gbc.pc(), 0x28b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0350
        gbc.setState(0x1ce6, 0x285, 0xc3f0, 0x8770, 0x366c, 0x3167, 0x0, 0x1);
        gbc.writeMem(0x1ce6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x285);
        EXPECT(gbc.pc(), 0x1ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0351
        gbc.setState(0xe156, 0x8951, 0xc2e0, 0xdca3, 0xb2ef, 0xeb64, 0x1, 0x0);
        gbc.writeMem(0xe156, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8951);
        EXPECT(gbc.pc(), 0xe158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe156), 0xcb);
        EXPECT(gbc.readMem(0xe157), 0x50);
        // CB 50 0352
        gbc.setState(0x88b5, 0xa231, 0x1750, 0x3a60, 0x4b5b, 0x9bd, 0x0, 0x0);
        gbc.writeMem(0x88b5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa231);
        EXPECT(gbc.pc(), 0x88b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b5), 0xcb);
        EXPECT(gbc.readMem(0x88b6), 0x50);
        // CB 50 0353
        gbc.setState(0xa890, 0x5d1c, 0xbc00, 0x6df0, 0x7509, 0x27f9, 0x1, 0x1);
        gbc.writeMem(0xa890, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5d1c);
        EXPECT(gbc.pc(), 0xa892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0xcb);
        EXPECT(gbc.readMem(0xa891), 0x50);
        // CB 50 0354
        gbc.setState(0x734a, 0x4c70, 0xfc20, 0x1fe4, 0xe1c4, 0x74f6, 0x1, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4c70);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0355
        gbc.setState(0x5500, 0x3ae2, 0xe1a0, 0xa656, 0xd6fe, 0x8584, 0x1, 0x0);
        gbc.writeMem(0x5500, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3ae2);
        EXPECT(gbc.pc(), 0x5502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0356
        gbc.setState(0xc4eb, 0xbd64, 0x60b0, 0x1d09, 0xa3be, 0x7019, 0x0, 0x0);
        gbc.writeMem(0xc4eb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0xc4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4eb), 0xcb);
        EXPECT(gbc.readMem(0xc4ec), 0x50);
        // CB 50 0357
        gbc.setState(0x701a, 0xf378, 0xcf50, 0xfca9, 0xf6ca, 0x39ae, 0x0, 0x1);
        gbc.writeMem(0x701a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf378);
        EXPECT(gbc.pc(), 0x701c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0358
        gbc.setState(0xcedd, 0x27d1, 0x950, 0xdcc1, 0x5a48, 0xfa55, 0x1, 0x0);
        gbc.writeMem(0xcedd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x27d1);
        EXPECT(gbc.pc(), 0xcedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedd), 0xcb);
        EXPECT(gbc.readMem(0xcede), 0x50);
        // CB 50 0359
        gbc.setState(0x4200, 0xbdcd, 0xeae0, 0xee9b, 0x7778, 0x5fb8, 0x1, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbdcd);
        EXPECT(gbc.pc(), 0x4202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 035A
        gbc.setState(0xbb01, 0xd4f0, 0x4cf0, 0xe9f3, 0x35e0, 0xc573, 0x1, 0x0);
        gbc.writeMem(0xbb01, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0xbb03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb01), 0xcb);
        EXPECT(gbc.readMem(0xbb02), 0x50);
        // CB 50 035B
        gbc.setState(0x8913, 0xa856, 0xd090, 0xd11e, 0xd7b, 0xdaa7, 0x1, 0x1);
        gbc.writeMem(0x8913, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa856);
        EXPECT(gbc.pc(), 0x8915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8913), 0xcb);
        EXPECT(gbc.readMem(0x8914), 0x50);
        // CB 50 035C
        gbc.setState(0x65bb, 0x4f49, 0x15d0, 0x204c, 0x48a9, 0xdc06, 0x1, 0x0);
        gbc.writeMem(0x65bb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4f49);
        EXPECT(gbc.pc(), 0x65bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 035D
        gbc.setState(0xae39, 0xfb61, 0x3ac0, 0x4d14, 0xa63a, 0xf826, 0x1, 0x1);
        gbc.writeMem(0xae39, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfb61);
        EXPECT(gbc.pc(), 0xae3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae39), 0xcb);
        EXPECT(gbc.readMem(0xae3a), 0x50);
        // CB 50 035E
        gbc.setState(0xb23f, 0x8db5, 0xc980, 0x8d30, 0x97c1, 0x99db, 0x1, 0x1);
        gbc.writeMem(0xb23f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8db5);
        EXPECT(gbc.pc(), 0xb241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23f), 0xcb);
        EXPECT(gbc.readMem(0xb240), 0x50);
        // CB 50 035F
        gbc.setState(0x30c9, 0x2392, 0xabb0, 0xf943, 0x2ab3, 0x5cda, 0x1, 0x1);
        gbc.writeMem(0x30c9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0x30cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0360
        gbc.setState(0xe88d, 0xb9d6, 0xe5d0, 0x61f4, 0xc592, 0xc2bc, 0x1, 0x0);
        gbc.writeMem(0xe88d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb9d6);
        EXPECT(gbc.pc(), 0xe88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88d), 0xcb);
        EXPECT(gbc.readMem(0xe88e), 0x50);
        // CB 50 0361
        gbc.setState(0x7fa9, 0xe4c4, 0x6f40, 0xe824, 0xe949, 0x1bb5, 0x1, 0x1);
        gbc.writeMem(0x7fa9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe4c4);
        EXPECT(gbc.pc(), 0x7fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0362
        gbc.setState(0x73f9, 0x6ac, 0x7470, 0x800c, 0xda10, 0xc7ab, 0x0, 0x1);
        gbc.writeMem(0x73f9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6ac);
        EXPECT(gbc.pc(), 0x73fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0363
        gbc.setState(0xa33, 0x3886, 0xb380, 0x47e7, 0xb935, 0x8975, 0x1, 0x0);
        gbc.writeMem(0xa33, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3886);
        EXPECT(gbc.pc(), 0xa35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0364
        gbc.setState(0xa4ed, 0x1cfb, 0x4ae0, 0x8e1f, 0x2956, 0xb5a3, 0x0, 0x1);
        gbc.writeMem(0xa4ed, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1cfb);
        EXPECT(gbc.pc(), 0xa4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ed), 0xcb);
        EXPECT(gbc.readMem(0xa4ee), 0x50);
        // CB 50 0365
        gbc.setState(0x5854, 0xccf6, 0x8720, 0x2847, 0xb3db, 0xf0c5, 0x0, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xccf6);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0366
        gbc.setState(0xa921, 0x303e, 0xb700, 0xdd87, 0x304e, 0xbf9e, 0x1, 0x0);
        gbc.writeMem(0xa921, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x303e);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa921), 0xcb);
        EXPECT(gbc.readMem(0xa922), 0x50);
        // CB 50 0367
        gbc.setState(0xad36, 0x27c3, 0xb4e0, 0x881c, 0x2143, 0x3236, 0x0, 0x1);
        gbc.writeMem(0xad36, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x27c3);
        EXPECT(gbc.pc(), 0xad38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad36), 0xcb);
        EXPECT(gbc.readMem(0xad37), 0x50);
        // CB 50 0369
        gbc.setState(0xeb29, 0x477d, 0x8e80, 0x3fd4, 0x41b8, 0x878d, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x477d);
        EXPECT(gbc.pc(), 0xeb2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb29), 0xcb);
        EXPECT(gbc.readMem(0xeb2a), 0x50);
        // CB 50 036A
        gbc.setState(0x9af5, 0x5c68, 0xa510, 0x83b7, 0x6878, 0x5465, 0x0, 0x0);
        gbc.writeMem(0x9af5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5c68);
        EXPECT(gbc.pc(), 0x9af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af5), 0xcb);
        EXPECT(gbc.readMem(0x9af6), 0x50);
        // CB 50 036B
        gbc.setState(0xa4a4, 0x986b, 0x6fe0, 0x14df, 0x2430, 0xa8f8, 0x1, 0x0);
        gbc.writeMem(0xa4a4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x986b);
        EXPECT(gbc.pc(), 0xa4a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a4), 0xcb);
        EXPECT(gbc.readMem(0xa4a5), 0x50);
        // CB 50 036C
        gbc.setState(0x8595, 0x2659, 0xc2a0, 0xa460, 0xf4c, 0xa842, 0x0, 0x0);
        gbc.writeMem(0x8595, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2659);
        EXPECT(gbc.pc(), 0x8597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8595), 0xcb);
        EXPECT(gbc.readMem(0x8596), 0x50);
        // CB 50 036D
        gbc.setState(0x4bfb, 0x252c, 0x4960, 0x4c86, 0x1380, 0x9a88, 0x0, 0x1);
        gbc.writeMem(0x4bfb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x252c);
        EXPECT(gbc.pc(), 0x4bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 036E
        gbc.setState(0xafa3, 0x42f1, 0xcf20, 0x5ea6, 0x9524, 0xee6a, 0x1, 0x0);
        gbc.writeMem(0xafa3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x42f1);
        EXPECT(gbc.pc(), 0xafa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa3), 0xcb);
        EXPECT(gbc.readMem(0xafa4), 0x50);
        // CB 50 036F
        gbc.setState(0xa8b5, 0xbe51, 0xe540, 0x8031, 0xc710, 0xbc0a, 0x1, 0x0);
        gbc.writeMem(0xa8b5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbe51);
        EXPECT(gbc.pc(), 0xa8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b5), 0xcb);
        EXPECT(gbc.readMem(0xa8b6), 0x50);
        // CB 50 0370
        gbc.setState(0x42b3, 0x6efc, 0xea20, 0xf1f0, 0xb306, 0x47b2, 0x1, 0x0);
        gbc.writeMem(0x42b3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6efc);
        EXPECT(gbc.pc(), 0x42b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0371
        gbc.setState(0x601c, 0xca61, 0xa2d0, 0xc378, 0x9a0a, 0x552f, 0x0, 0x1);
        gbc.writeMem(0x601c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xca61);
        EXPECT(gbc.pc(), 0x601e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0372
        gbc.setState(0x50e6, 0xb25b, 0x2b90, 0xa0f7, 0xcd33, 0xc431, 0x0, 0x1);
        gbc.writeMem(0x50e6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb25b);
        EXPECT(gbc.pc(), 0x50e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0373
        gbc.setState(0xe7da, 0x9b83, 0x2a00, 0xe45b, 0x5231, 0x9113, 0x1, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9b83);
        EXPECT(gbc.pc(), 0xe7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7da), 0xcb);
        EXPECT(gbc.readMem(0xe7db), 0x50);
        // CB 50 0374
        gbc.setState(0x332, 0x24fd, 0x2620, 0xd474, 0x8064, 0xe13f, 0x0, 0x1);
        gbc.writeMem(0x332, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x24fd);
        EXPECT(gbc.pc(), 0x334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0375
        gbc.setState(0xbd30, 0x51df, 0x1140, 0x5f17, 0x8ef3, 0xd1f3, 0x0, 0x1);
        gbc.writeMem(0xbd30, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x51df);
        EXPECT(gbc.pc(), 0xbd32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd30), 0xcb);
        EXPECT(gbc.readMem(0xbd31), 0x50);
        // CB 50 0376
        gbc.setState(0xab94, 0x91a4, 0xfb70, 0x56d0, 0x72af, 0xcfab, 0x0, 0x0);
        gbc.writeMem(0xab94, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x91a4);
        EXPECT(gbc.pc(), 0xab96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab94), 0xcb);
        EXPECT(gbc.readMem(0xab95), 0x50);
        // CB 50 0377
        gbc.setState(0x7454, 0xf099, 0xe900, 0x1abb, 0xe693, 0xa8c2, 0x0, 0x0);
        gbc.writeMem(0x7454, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf099);
        EXPECT(gbc.pc(), 0x7456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0378
        gbc.setState(0xcb35, 0x2ce3, 0xf460, 0xbc96, 0x8411, 0x316c, 0x1, 0x0);
        gbc.writeMem(0xcb35, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2ce3);
        EXPECT(gbc.pc(), 0xcb37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb35), 0xcb);
        EXPECT(gbc.readMem(0xcb36), 0x50);
        // CB 50 0379
        gbc.setState(0x516c, 0x712a, 0x5ad0, 0x8c5f, 0xee1, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x712a);
        EXPECT(gbc.pc(), 0x516e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 037A
        gbc.setState(0x8006, 0x922e, 0xb100, 0x98ec, 0x7ad8, 0xb404, 0x1, 0x1);
        gbc.writeMem(0x8006, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x922e);
        EXPECT(gbc.pc(), 0x8008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8006), 0xcb);
        EXPECT(gbc.readMem(0x8007), 0x50);
        // CB 50 037B
        gbc.setState(0x52c6, 0xce8e, 0x68f0, 0xf5ff, 0x7a88, 0x1ddd, 0x1, 0x1);
        gbc.writeMem(0x52c6, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xce8e);
        EXPECT(gbc.pc(), 0x52c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 037C
        gbc.setState(0xa7fd, 0xfcdc, 0x2410, 0x6975, 0xece7, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0xa7fd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfcdc);
        EXPECT(gbc.pc(), 0xa7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fd), 0xcb);
        EXPECT(gbc.readMem(0xa7fe), 0x50);
        // CB 50 037D
        gbc.setState(0x7489, 0xacdb, 0xd690, 0xab0f, 0x7883, 0xa21, 0x0, 0x1);
        gbc.writeMem(0x7489, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0x748b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 037E
        gbc.setState(0xbea8, 0xe86e, 0x7f80, 0x27a9, 0xc840, 0x6fc2, 0x0, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe86e);
        EXPECT(gbc.pc(), 0xbeaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea8), 0xcb);
        EXPECT(gbc.readMem(0xbea9), 0x50);
        // CB 50 0380
        gbc.setState(0xd72, 0xc374, 0x5580, 0xaada, 0x764b, 0x17b3, 0x1, 0x0);
        gbc.writeMem(0xd72, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0xd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0381
        gbc.setState(0xda30, 0x8462, 0x7ea0, 0x80e9, 0x266c, 0xa2a2, 0x1, 0x1);
        gbc.writeMem(0xda30, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8462);
        EXPECT(gbc.pc(), 0xda32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        EXPECT(gbc.readMem(0xda31), 0x50);
        // CB 50 0382
        gbc.setState(0x9db3, 0xbd35, 0xa2c0, 0xbec0, 0x5f7, 0x8b68, 0x1, 0x0);
        gbc.writeMem(0x9db3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbd35);
        EXPECT(gbc.pc(), 0x9db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db3), 0xcb);
        EXPECT(gbc.readMem(0x9db4), 0x50);
        // CB 50 0383
        gbc.setState(0x75c7, 0x2163, 0xe9f0, 0x96e3, 0x6bc6, 0x3673, 0x0, 0x1);
        gbc.writeMem(0x75c7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2163);
        EXPECT(gbc.pc(), 0x75c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0384
        gbc.setState(0x7079, 0x7fbd, 0x7750, 0x18f, 0xb41a, 0x1bc2, 0x1, 0x1);
        gbc.writeMem(0x7079, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7fbd);
        EXPECT(gbc.pc(), 0x707b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0385
        gbc.setState(0xe3e3, 0x8765, 0x5d70, 0x1e46, 0x6f57, 0x32f5, 0x0, 0x0);
        gbc.writeMem(0xe3e3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8765);
        EXPECT(gbc.pc(), 0xe3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e3), 0xcb);
        EXPECT(gbc.readMem(0xe3e4), 0x50);
        // CB 50 0386
        gbc.setState(0xcb12, 0x5128, 0x3f20, 0xda03, 0x566d, 0xf4c1, 0x1, 0x0);
        gbc.writeMem(0xcb12, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5128);
        EXPECT(gbc.pc(), 0xcb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb12), 0xcb);
        EXPECT(gbc.readMem(0xcb13), 0x50);
        // CB 50 0387
        gbc.setState(0x4576, 0x1521, 0xf730, 0xb9e5, 0xcf68, 0xb945, 0x0, 0x0);
        gbc.writeMem(0x4576, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1521);
        EXPECT(gbc.pc(), 0x4578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0388
        gbc.setState(0x745d, 0x2829, 0x62e0, 0x2e2, 0xd7f3, 0xe0bd, 0x0, 0x1);
        gbc.writeMem(0x745d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2829);
        EXPECT(gbc.pc(), 0x745f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0389
        gbc.setState(0x94ba, 0x9f9a, 0x7100, 0x5277, 0x6477, 0x378d, 0x1, 0x0);
        gbc.writeMem(0x94ba, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9f9a);
        EXPECT(gbc.pc(), 0x94bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ba), 0xcb);
        EXPECT(gbc.readMem(0x94bb), 0x50);
        // CB 50 038A
        gbc.setState(0x62e0, 0x3530, 0x5f00, 0x6704, 0xfc85, 0x9a91, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3530);
        EXPECT(gbc.pc(), 0x62e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 038B
        gbc.setState(0x31ff, 0x72a5, 0x17b0, 0x2572, 0x744e, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0x31ff, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0x3201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 038C
        gbc.setState(0x6ade, 0xad9, 0x2780, 0x3d92, 0x28de, 0x8f92, 0x0, 0x0);
        gbc.writeMem(0x6ade, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xad9);
        EXPECT(gbc.pc(), 0x6ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 038D
        gbc.setState(0x4b8f, 0x10ae, 0x4f30, 0x11af, 0xedad, 0x7cb2, 0x0, 0x1);
        gbc.writeMem(0x4b8f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x10ae);
        EXPECT(gbc.pc(), 0x4b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 038E
        gbc.setState(0x2be0, 0xcd6d, 0xf770, 0x7218, 0xee28, 0x4aa9, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcd6d);
        EXPECT(gbc.pc(), 0x2be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 038F
        gbc.setState(0x644a, 0x8fc3, 0xd440, 0xe8eb, 0xb895, 0x661a, 0x1, 0x1);
        gbc.writeMem(0x644a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8fc3);
        EXPECT(gbc.pc(), 0x644c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0390
        gbc.setState(0x7e97, 0xd45d, 0x4440, 0x510, 0xf52e, 0x9f62, 0x0, 0x1);
        gbc.writeMem(0x7e97, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd45d);
        EXPECT(gbc.pc(), 0x7e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0391
        gbc.setState(0xe68b, 0x2b38, 0x9f70, 0x562, 0xa7cd, 0xf608, 0x1, 0x1);
        gbc.writeMem(0xe68b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2b38);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0xcb);
        EXPECT(gbc.readMem(0xe68c), 0x50);
        // CB 50 0392
        gbc.setState(0x2e85, 0xc244, 0x41a0, 0x1964, 0x2a7, 0x7457, 0x1, 0x1);
        gbc.writeMem(0x2e85, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0x2e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0393
        gbc.setState(0xc146, 0xfa9c, 0xa3e0, 0x6334, 0xc86c, 0x68bf, 0x1, 0x0);
        gbc.writeMem(0xc146, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfa9c);
        EXPECT(gbc.pc(), 0xc148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc146), 0xcb);
        EXPECT(gbc.readMem(0xc147), 0x50);
        // CB 50 0394
        gbc.setState(0xc17c, 0x3de4, 0x8d60, 0x8ef7, 0x2127, 0x26e2, 0x1, 0x0);
        gbc.writeMem(0xc17c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3de4);
        EXPECT(gbc.pc(), 0xc17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17c), 0xcb);
        EXPECT(gbc.readMem(0xc17d), 0x50);
        // CB 50 0395
        gbc.setState(0x55b5, 0xd15e, 0xc160, 0x4bf, 0xf3ef, 0xef4, 0x0, 0x1);
        gbc.writeMem(0x55b5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd15e);
        EXPECT(gbc.pc(), 0x55b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0396
        gbc.setState(0x3223, 0x3529, 0x1da0, 0x231, 0x8713, 0xc75c, 0x1, 0x1);
        gbc.writeMem(0x3223, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3529);
        EXPECT(gbc.pc(), 0x3225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 0397
        gbc.setState(0xb11a, 0x66ff, 0x5110, 0x6c3b, 0x6b1c, 0xdaf9, 0x1, 0x1);
        gbc.writeMem(0xb11a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x66ff);
        EXPECT(gbc.pc(), 0xb11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11a), 0xcb);
        EXPECT(gbc.readMem(0xb11b), 0x50);
        // CB 50 0398
        gbc.setState(0x49a1, 0x1b55, 0x66d0, 0xb14e, 0x689a, 0x5944, 0x0, 0x0);
        gbc.writeMem(0x49a1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1b55);
        EXPECT(gbc.pc(), 0x49a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 0399
        gbc.setState(0x8fd4, 0xd372, 0x65a0, 0x1955, 0x5116, 0xf97e, 0x0, 0x0);
        gbc.writeMem(0x8fd4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd372);
        EXPECT(gbc.pc(), 0x8fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd4), 0xcb);
        EXPECT(gbc.readMem(0x8fd5), 0x50);
        // CB 50 039A
        gbc.setState(0xbb17, 0x4c0, 0xb380, 0x7464, 0x8828, 0x5cbd, 0x0, 0x0);
        gbc.writeMem(0xbb17, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4c0);
        EXPECT(gbc.pc(), 0xbb19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb17), 0xcb);
        EXPECT(gbc.readMem(0xbb18), 0x50);
        // CB 50 039B
        gbc.setState(0x5135, 0x19c0, 0xee50, 0x8fbb, 0x2c2d, 0x859, 0x0, 0x0);
        gbc.writeMem(0x5135, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x19c0);
        EXPECT(gbc.pc(), 0x5137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 039C
        gbc.setState(0xb7bc, 0x1486, 0x77e0, 0x1c21, 0xd694, 0x97a9, 0x1, 0x1);
        gbc.writeMem(0xb7bc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1486);
        EXPECT(gbc.pc(), 0xb7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7bc), 0xcb);
        EXPECT(gbc.readMem(0xb7bd), 0x50);
        // CB 50 039D
        gbc.setState(0x7bfd, 0xe9d6, 0x750, 0x805e, 0x4256, 0x64cf, 0x0, 0x0);
        gbc.writeMem(0x7bfd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe9d6);
        EXPECT(gbc.pc(), 0x7bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 039E
        gbc.setState(0xe535, 0xdc91, 0x95b0, 0x7ddf, 0xac03, 0x7e7d, 0x1, 0x1);
        gbc.writeMem(0xe535, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xdc91);
        EXPECT(gbc.pc(), 0xe537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe535), 0xcb);
        EXPECT(gbc.readMem(0xe536), 0x50);
        // CB 50 039F
        gbc.setState(0xe308, 0x117f, 0x2fd0, 0x8e77, 0xc253, 0xcf1b, 0x0, 0x1);
        gbc.writeMem(0xe308, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x117f);
        EXPECT(gbc.pc(), 0xe30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe308), 0xcb);
        EXPECT(gbc.readMem(0xe309), 0x50);
        // CB 50 03A0
        gbc.setState(0x8bd7, 0x3f77, 0xdb30, 0x5e6b, 0xd717, 0xe2b6, 0x1, 0x1);
        gbc.writeMem(0x8bd7, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0x8bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd7), 0xcb);
        EXPECT(gbc.readMem(0x8bd8), 0x50);
        // CB 50 03A1
        gbc.setState(0xa381, 0x88dc, 0xa450, 0x3762, 0xf44a, 0xb9c2, 0x0, 0x1);
        gbc.writeMem(0xa381, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x88dc);
        EXPECT(gbc.pc(), 0xa383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa381), 0xcb);
        EXPECT(gbc.readMem(0xa382), 0x50);
        // CB 50 03A2
        gbc.setState(0xd8d4, 0xb21c, 0x6e0, 0xa331, 0xf27f, 0x2e90, 0x1, 0x0);
        gbc.writeMem(0xd8d4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb21c);
        EXPECT(gbc.pc(), 0xd8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d4), 0xcb);
        EXPECT(gbc.readMem(0xd8d5), 0x50);
        // CB 50 03A3
        gbc.setState(0x30fd, 0xd5b9, 0xf6a0, 0x2ee4, 0xe6f4, 0x556d, 0x1, 0x1);
        gbc.writeMem(0x30fd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd5b9);
        EXPECT(gbc.pc(), 0x30ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03A4
        gbc.setState(0x2239, 0x8134, 0xda00, 0x9b49, 0xce42, 0xad29, 0x0, 0x0);
        gbc.writeMem(0x2239, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8134);
        EXPECT(gbc.pc(), 0x223b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03A5
        gbc.setState(0xdf73, 0x7dd5, 0x1600, 0xa38f, 0x6354, 0x9c2c, 0x0, 0x1);
        gbc.writeMem(0xdf73, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7dd5);
        EXPECT(gbc.pc(), 0xdf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf73), 0xcb);
        EXPECT(gbc.readMem(0xdf74), 0x50);
        // CB 50 03A6
        gbc.setState(0xc81d, 0x6419, 0x19e0, 0x1756, 0x52a3, 0xa966, 0x0, 0x1);
        gbc.writeMem(0xc81d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6419);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81d), 0xcb);
        EXPECT(gbc.readMem(0xc81e), 0x50);
        // CB 50 03A7
        gbc.setState(0x3d, 0x8787, 0xdb40, 0x341, 0xd0a9, 0x13e, 0x1, 0x0);
        gbc.writeMem(0x3d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03A8
        gbc.setState(0xda39, 0xaabf, 0x5d40, 0xb15b, 0xb36d, 0x4a91, 0x0, 0x1);
        gbc.writeMem(0xda39, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaabf);
        EXPECT(gbc.pc(), 0xda3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda39), 0xcb);
        EXPECT(gbc.readMem(0xda3a), 0x50);
        // CB 50 03A9
        gbc.setState(0x8786, 0x2f22, 0x3840, 0x65df, 0x1f2f, 0x8179, 0x0, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2f22);
        EXPECT(gbc.pc(), 0x8788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8786), 0xcb);
        EXPECT(gbc.readMem(0x8787), 0x50);
        // CB 50 03AA
        gbc.setState(0x1051, 0x26cb, 0xe550, 0x12df, 0xada3, 0x4022, 0x0, 0x0);
        gbc.writeMem(0x1051, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x26cb);
        EXPECT(gbc.pc(), 0x1053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03AB
        gbc.setState(0x2921, 0x13f5, 0xeca0, 0xa929, 0xac88, 0x3bc8, 0x1, 0x0);
        gbc.writeMem(0x2921, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x13f5);
        EXPECT(gbc.pc(), 0x2923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03AC
        gbc.setState(0xc130, 0x745, 0xf020, 0x20b8, 0x16c3, 0x9808, 0x0, 0x1);
        gbc.writeMem(0xc130, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x745);
        EXPECT(gbc.pc(), 0xc132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc130), 0xcb);
        EXPECT(gbc.readMem(0xc131), 0x50);
        // CB 50 03AD
        gbc.setState(0x75db, 0x831b, 0xbdb0, 0x2616, 0x4e01, 0xec78, 0x1, 0x0);
        gbc.writeMem(0x75db, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x831b);
        EXPECT(gbc.pc(), 0x75dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03AE
        gbc.setState(0x854, 0xdcff, 0x8670, 0xdad, 0x686c, 0x747b, 0x0, 0x0);
        gbc.writeMem(0x854, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdcff);
        EXPECT(gbc.pc(), 0x856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03AF
        gbc.setState(0x3a1f, 0x407a, 0x2cd0, 0x9cc0, 0xccaf, 0x57d2, 0x1, 0x1);
        gbc.writeMem(0x3a1f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0x3a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03B0
        gbc.setState(0x387d, 0x58c4, 0xf00, 0x56a7, 0x87d0, 0x7fae, 0x0, 0x0);
        gbc.writeMem(0x387d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x58c4);
        EXPECT(gbc.pc(), 0x387f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03B1
        gbc.setState(0xbbb2, 0x96b4, 0x3480, 0x7852, 0x741, 0x4569, 0x0, 0x1);
        gbc.writeMem(0xbbb2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x96b4);
        EXPECT(gbc.pc(), 0xbbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb2), 0xcb);
        EXPECT(gbc.readMem(0xbbb3), 0x50);
        // CB 50 03B2
        gbc.setState(0xa1a, 0x50dc, 0x4190, 0x5712, 0xe098, 0xc269, 0x1, 0x1);
        gbc.writeMem(0xa1a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x50dc);
        EXPECT(gbc.pc(), 0xa1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03B3
        gbc.setState(0xbb03, 0x321e, 0x3fa0, 0xa843, 0xe607, 0x4643, 0x1, 0x1);
        gbc.writeMem(0xbb03, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x321e);
        EXPECT(gbc.pc(), 0xbb05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb03), 0xcb);
        EXPECT(gbc.readMem(0xbb04), 0x50);
        // CB 50 03B4
        gbc.setState(0x2b67, 0xaa31, 0x85d0, 0x88b, 0xe23d, 0x30d3, 0x1, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaa31);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03B5
        gbc.setState(0x8ff4, 0xfaf0, 0x4ec0, 0x7e00, 0xc848, 0x4e93, 0x0, 0x1);
        gbc.writeMem(0x8ff4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0x8ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff4), 0xcb);
        EXPECT(gbc.readMem(0x8ff5), 0x50);
        // CB 50 03B6
        gbc.setState(0xc929, 0x88e2, 0x8260, 0x809f, 0x84d, 0x59ed, 0x1, 0x0);
        gbc.writeMem(0xc929, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x88e2);
        EXPECT(gbc.pc(), 0xc92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc929), 0xcb);
        EXPECT(gbc.readMem(0xc92a), 0x50);
        // CB 50 03B7
        gbc.setState(0x8cdb, 0x3067, 0xbe50, 0x417c, 0x3a89, 0xe6be, 0x1, 0x1);
        gbc.writeMem(0x8cdb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3067);
        EXPECT(gbc.pc(), 0x8cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cdb), 0xcb);
        EXPECT(gbc.readMem(0x8cdc), 0x50);
        // CB 50 03B8
        gbc.setState(0x6383, 0xa9c8, 0x61c0, 0x1928, 0xa441, 0xe047, 0x0, 0x0);
        gbc.writeMem(0x6383, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa9c8);
        EXPECT(gbc.pc(), 0x6385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03B9
        gbc.setState(0xeae5, 0x9193, 0x3d60, 0xef85, 0xbc0b, 0xbd1a, 0x0, 0x0);
        gbc.writeMem(0xeae5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9193);
        EXPECT(gbc.pc(), 0xeae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae5), 0xcb);
        EXPECT(gbc.readMem(0xeae6), 0x50);
        // CB 50 03BA
        gbc.setState(0x1fe3, 0xe9cc, 0x8c50, 0xed34, 0xb34e, 0x5138, 0x1, 0x1);
        gbc.writeMem(0x1fe3, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe9cc);
        EXPECT(gbc.pc(), 0x1fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03BB
        gbc.setState(0xe44a, 0xf980, 0xfee0, 0x83e7, 0x17f5, 0x99ff, 0x1, 0x0);
        gbc.writeMem(0xe44a, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf980);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44a), 0xcb);
        EXPECT(gbc.readMem(0xe44b), 0x50);
        // CB 50 03BC
        gbc.setState(0xc433, 0x5c37, 0x7d50, 0xf3f8, 0xa154, 0xde83, 0x1, 0x0);
        gbc.writeMem(0xc433, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5c37);
        EXPECT(gbc.pc(), 0xc435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc433), 0xcb);
        EXPECT(gbc.readMem(0xc434), 0x50);
        // CB 50 03BD
        gbc.setState(0x5b57, 0xdfaf, 0x1d0, 0x6d3d, 0xfca6, 0xfc41, 0x1, 0x1);
        gbc.writeMem(0x5b57, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdfaf);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03BE
        gbc.setState(0xc3d8, 0xde7b, 0xaee0, 0xa5fd, 0xd2d1, 0x71f7, 0x1, 0x0);
        gbc.writeMem(0xc3d8, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0xc3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d8), 0xcb);
        EXPECT(gbc.readMem(0xc3d9), 0x50);
        // CB 50 03BF
        gbc.setState(0x2023, 0x8c81, 0xb4a0, 0xacd4, 0x1601, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8c81);
        EXPECT(gbc.pc(), 0x2025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03C0
        gbc.setState(0x62ae, 0xd9a, 0x7d10, 0x3924, 0x66c2, 0x5395, 0x1, 0x0);
        gbc.writeMem(0x62ae, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd9a);
        EXPECT(gbc.pc(), 0x62b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03C1
        gbc.setState(0x1f71, 0x11d7, 0xbbd0, 0xf4c0, 0x51f3, 0x5d58, 0x0, 0x1);
        gbc.writeMem(0x1f71, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x11d7);
        EXPECT(gbc.pc(), 0x1f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03C3
        gbc.setState(0xa7b2, 0xebe6, 0x8bc0, 0xc56d, 0x3bdc, 0xe4c6, 0x0, 0x0);
        gbc.writeMem(0xa7b2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xebe6);
        EXPECT(gbc.pc(), 0xa7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b2), 0xcb);
        EXPECT(gbc.readMem(0xa7b3), 0x50);
        // CB 50 03C4
        gbc.setState(0x2bfd, 0x2c03, 0x7160, 0xd8f, 0x3d11, 0x34d, 0x0, 0x1);
        gbc.writeMem(0x2bfd, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2c03);
        EXPECT(gbc.pc(), 0x2bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03C5
        gbc.setState(0x553d, 0xcff2, 0xc840, 0xf1ad, 0xed90, 0x2507, 0x0, 0x0);
        gbc.writeMem(0x553d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcff2);
        EXPECT(gbc.pc(), 0x553f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03C6
        gbc.setState(0xf49, 0x9b7d, 0xb490, 0x78cb, 0x13d8, 0x3548, 0x1, 0x1);
        gbc.writeMem(0xf49, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9b7d);
        EXPECT(gbc.pc(), 0xf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03C7
        gbc.setState(0xac45, 0x720d, 0xd190, 0xa7c5, 0xf126, 0xad3b, 0x0, 0x1);
        gbc.writeMem(0xac45, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0xac47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac45), 0xcb);
        EXPECT(gbc.readMem(0xac46), 0x50);
        // CB 50 03C8
        gbc.setState(0x85cb, 0x7bd4, 0x84a0, 0x8418, 0x27ef, 0xf763, 0x1, 0x1);
        gbc.writeMem(0x85cb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7bd4);
        EXPECT(gbc.pc(), 0x85cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cb), 0xcb);
        EXPECT(gbc.readMem(0x85cc), 0x50);
        // CB 50 03C9
        gbc.setState(0x404f, 0xf3b3, 0xc8b0, 0x22d, 0x557f, 0x6d2e, 0x1, 0x1);
        gbc.writeMem(0x404f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf3b3);
        EXPECT(gbc.pc(), 0x4051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03CA
        gbc.setState(0xbb13, 0xfb99, 0x3420, 0x4844, 0xe2f2, 0xa0a0, 0x0, 0x1);
        gbc.writeMem(0xbb13, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfb99);
        EXPECT(gbc.pc(), 0xbb15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb13), 0xcb);
        EXPECT(gbc.readMem(0xbb14), 0x50);
        // CB 50 03CB
        gbc.setState(0x95dc, 0x80b5, 0x4a20, 0x763b, 0xb577, 0x3457, 0x0, 0x1);
        gbc.writeMem(0x95dc, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x80b5);
        EXPECT(gbc.pc(), 0x95de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dc), 0xcb);
        EXPECT(gbc.readMem(0x95dd), 0x50);
        // CB 50 03CC
        gbc.setState(0xbbb9, 0x622b, 0x6550, 0x371b, 0x6015, 0x1d59, 0x1, 0x0);
        gbc.writeMem(0xbbb9, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x622b);
        EXPECT(gbc.pc(), 0xbbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb9), 0xcb);
        EXPECT(gbc.readMem(0xbbba), 0x50);
        // CB 50 03CD
        gbc.setState(0xc4cb, 0x9125, 0xdc00, 0xef8c, 0x420e, 0xe73e, 0x1, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9125);
        EXPECT(gbc.pc(), 0xc4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cb), 0xcb);
        EXPECT(gbc.readMem(0xc4cc), 0x50);
        // CB 50 03CE
        gbc.setState(0xb799, 0xfb91, 0x5500, 0x372b, 0xb2a6, 0xb15f, 0x0, 0x0);
        gbc.writeMem(0xb799, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfb91);
        EXPECT(gbc.pc(), 0xb79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb799), 0xcb);
        EXPECT(gbc.readMem(0xb79a), 0x50);
        // CB 50 03CF
        gbc.setState(0xc304, 0xa5aa, 0x6a90, 0xae29, 0x9bca, 0xfd43, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa5aa);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0x50);
        // CB 50 03D0
        gbc.setState(0x7b6d, 0x3783, 0xd820, 0x44fc, 0x297f, 0x619c, 0x0, 0x0);
        gbc.writeMem(0x7b6d, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3783);
        EXPECT(gbc.pc(), 0x7b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03D1
        gbc.setState(0xb318, 0x79ed, 0x4670, 0xde03, 0xf215, 0x38fa, 0x1, 0x0);
        gbc.writeMem(0xb318, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x79ed);
        EXPECT(gbc.pc(), 0xb31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb318), 0xcb);
        EXPECT(gbc.readMem(0xb319), 0x50);
        // CB 50 03D2
        gbc.setState(0x7922, 0xdc14, 0xd230, 0x40a5, 0x95d3, 0xdd58, 0x1, 0x0);
        gbc.writeMem(0x7922, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdc14);
        EXPECT(gbc.pc(), 0x7924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03D3
        gbc.setState(0xdeae, 0xb6f8, 0xed0, 0xa7b0, 0xcaa9, 0x19ec, 0x1, 0x0);
        gbc.writeMem(0xdeae, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb6f8);
        EXPECT(gbc.pc(), 0xdeb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeae), 0xcb);
        EXPECT(gbc.readMem(0xdeaf), 0x50);
        // CB 50 03D4
        gbc.setState(0xd514, 0xdb56, 0x400, 0xb2ea, 0x749d, 0x8110, 0x0, 0x0);
        gbc.writeMem(0xd514, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0xd516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd514), 0xcb);
        EXPECT(gbc.readMem(0xd515), 0x50);
        // CB 50 03D5
        gbc.setState(0x72f1, 0xe44b, 0xbd50, 0xc583, 0xe31d, 0xe48f, 0x0, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe44b);
        EXPECT(gbc.pc(), 0x72f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03D6
        gbc.setState(0x277f, 0x77ef, 0x3470, 0x9424, 0xd68b, 0x7bbc, 0x1, 0x1);
        gbc.writeMem(0x277f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x77ef);
        EXPECT(gbc.pc(), 0x2781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03D8
        gbc.setState(0xece2, 0x7050, 0xb300, 0xe898, 0x9a65, 0x24ab, 0x0, 0x1);
        gbc.writeMem(0xece2, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7050);
        EXPECT(gbc.pc(), 0xece4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece2), 0xcb);
        EXPECT(gbc.readMem(0xece3), 0x50);
        // CB 50 03DA
        gbc.setState(0x4c64, 0xd068, 0x3130, 0x215f, 0x61f3, 0x95e5, 0x0, 0x0);
        gbc.writeMem(0x4c64, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd068);
        EXPECT(gbc.pc(), 0x4c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03DB
        gbc.setState(0x3995, 0x3a17, 0xd150, 0x1e19, 0x527b, 0x2c3, 0x1, 0x0);
        gbc.writeMem(0x3995, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3a17);
        EXPECT(gbc.pc(), 0x3997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03DC
        gbc.setState(0xe232, 0xee43, 0x7d10, 0x55c8, 0xaf7b, 0xb730, 0x1, 0x0);
        gbc.writeMem(0xe232, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xee43);
        EXPECT(gbc.pc(), 0xe234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe232), 0xcb);
        EXPECT(gbc.readMem(0xe233), 0x50);
        // CB 50 03DD
        gbc.setState(0xc17, 0x94af, 0x9750, 0x3159, 0xad5d, 0xbccf, 0x0, 0x0);
        gbc.writeMem(0xc17, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x94af);
        EXPECT(gbc.pc(), 0xc19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03DE
        gbc.setState(0x8cf4, 0xc30c, 0xc9d0, 0xcc2f, 0x8e52, 0x1dcc, 0x1, 0x0);
        gbc.writeMem(0x8cf4, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc30c);
        EXPECT(gbc.pc(), 0x8cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf4), 0xcb);
        EXPECT(gbc.readMem(0x8cf5), 0x50);
        // CB 50 03DF
        gbc.setState(0x9582, 0x922d, 0x1410, 0x3478, 0x7183, 0x39f, 0x0, 0x1);
        gbc.writeMem(0x9582, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x922d);
        EXPECT(gbc.pc(), 0x9584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9582), 0xcb);
        EXPECT(gbc.readMem(0x9583), 0x50);
        // CB 50 03E0
        gbc.setState(0xa22c, 0xe1c8, 0x880, 0xb958, 0xdd1c, 0xfd3b, 0x1, 0x1);
        gbc.writeMem(0xa22c, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe1c8);
        EXPECT(gbc.pc(), 0xa22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22c), 0xcb);
        EXPECT(gbc.readMem(0xa22d), 0x50);
        // CB 50 03E1
        gbc.setState(0x9a9f, 0xa90b, 0xf7a0, 0x6b83, 0x6d42, 0xfe3e, 0x1, 0x0);
        gbc.writeMem(0x9a9f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa90b);
        EXPECT(gbc.pc(), 0x9aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9f), 0xcb);
        EXPECT(gbc.readMem(0x9aa0), 0x50);
        // CB 50 03E3
        gbc.setState(0x184f, 0xa2c2, 0x28d0, 0xfda3, 0xb22b, 0x1ed1, 0x0, 0x1);
        gbc.writeMem(0x184f, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa2c2);
        EXPECT(gbc.pc(), 0x1851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03E4
        gbc.setState(0xb3ca, 0xa7d4, 0x4080, 0xe1ae, 0x6641, 0x9e20, 0x0, 0x0);
        gbc.writeMem(0xb3ca, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0xb3cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ca), 0xcb);
        EXPECT(gbc.readMem(0xb3cb), 0x50);
        // CB 50 03E5
        gbc.setState(0x184b, 0xafb2, 0x5500, 0x9153, 0x7833, 0x9087, 0x1, 0x0);
        gbc.writeMem(0x184b, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xafb2);
        EXPECT(gbc.pc(), 0x184d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 50 03E6
        gbc.setState(0x623e, 0x23e9, 0x1a30, 0xaeb9, 0x86ad, 0xadc2, 0x0, 0x0);
        gbc.writeMem(0x623e, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0x6240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 50 03E7
        gbc.setState(0x4ef5, 0xa22b, 0xc1e0, 0xc2c, 0x94a9, 0x1a2c, 0x1, 0x0);
        gbc.writeMem(0x4ef5, { 0xcb, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0x4ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
