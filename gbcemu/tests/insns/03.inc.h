    TEST(gbcemu, opcode_03) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 03 0000
        gbc.setState(0xbf86, 0xac41, 0x9700, 0xa564, 0xa221, 0x4202, 0x0, 0x0);
        gbc.writeMem(0xbf86, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac41, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbf86));
        // 03 0001
        gbc.setState(0xe135, 0xe0ff, 0x1010, 0xd3e, 0xdd81, 0xc833, 0x0, 0x1);
        gbc.writeMem(0xe135, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe0ff, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe135));
        // 03 0002
        gbc.setState(0x6533, 0xf9de, 0xc710, 0xee30, 0x8f03, 0x89a3, 0x1, 0x0);
        gbc.writeMem(0x6533, { 0x3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf9de, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0003
        gbc.setState(0xebcd, 0xfb2d, 0xb150, 0x5a3b, 0xc81b, 0xf500, 0x0, 0x1);
        gbc.writeMem(0xebcd, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfb2d, gbc.sp());
        EXPECT(0xebce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebcd));
        // 03 0005
        gbc.setState(0xcf0, 0xeb3e, 0xeba0, 0x8128, 0x2328, 0xac9d, 0x0, 0x0);
        gbc.writeMem(0xcf0, { 0x3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0007
        gbc.setState(0x35fa, 0x55e, 0x1e90, 0x16d9, 0xf4ea, 0x25fa, 0x1, 0x0);
        gbc.writeMem(0x35fa, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0008
        gbc.setState(0xc81, 0x76ec, 0xd5e0, 0x321a, 0x35fa, 0x56b0, 0x1, 0x0);
        gbc.writeMem(0xc81, { 0x3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76ec, gbc.sp());
        EXPECT(0xc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0009
        gbc.setState(0x15b6, 0xe976, 0x5b70, 0x7141, 0xc6b, 0xe3fb, 0x1, 0x1);
        gbc.writeMem(0x15b6, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe976, gbc.sp());
        EXPECT(0x15b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 000A
        gbc.setState(0x1b10, 0xed99, 0x18b0, 0xb56b, 0x3037, 0xee47, 0x0, 0x1);
        gbc.writeMem(0x1b10, { 0x3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xed99, gbc.sp());
        EXPECT(0x1b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 000B
        gbc.setState(0x7a1d, 0xd0d, 0x40c0, 0xd73a, 0x5e48, 0x5b02, 0x0, 0x0);
        gbc.writeMem(0x7a1d, { 0x3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd0d, gbc.sp());
        EXPECT(0x7a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 000C
        gbc.setState(0xc2ab, 0xc668, 0xf640, 0xf82d, 0xcbc6, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0xc2ab, { 0x3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc668, gbc.sp());
        EXPECT(0xc2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc2ab));
        // 03 000D
        gbc.setState(0x82f2, 0x1095, 0xffe0, 0xb19, 0x698f, 0xaa23, 0x1, 0x0);
        gbc.writeMem(0x82f2, { 0x3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1095, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x82f2));
        // 03 000E
        gbc.setState(0x1329, 0xcc10, 0xe640, 0xb1e8, 0x6b66, 0xab8, 0x1, 0x0);
        gbc.writeMem(0x1329, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0x132a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 000F
        gbc.setState(0x65a6, 0xe3e1, 0xde10, 0x104f, 0xc324, 0x2e6d, 0x0, 0x1);
        gbc.writeMem(0x65a6, { 0x3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0010
        gbc.setState(0x3d53, 0x430f, 0x1e10, 0x7f58, 0x1517, 0x584, 0x1, 0x0);
        gbc.writeMem(0x3d53, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0x3d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0011
        gbc.setState(0x2e09, 0x46bd, 0x9c0, 0x53b9, 0xb2f9, 0xed24, 0x0, 0x1);
        gbc.writeMem(0x2e09, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0012
        gbc.setState(0x9910, 0xcd17, 0xbb10, 0xc9d5, 0x29b2, 0xa7c1, 0x1, 0x0);
        gbc.writeMem(0x9910, { 0x3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9910));
        // 03 0013
        gbc.setState(0x303a, 0x9472, 0x5ff0, 0xc149, 0x8633, 0x24f2, 0x0, 0x1);
        gbc.writeMem(0x303a, { 0x3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9472, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0014
        gbc.setState(0x7075, 0x87c, 0x1540, 0x347a, 0x5a, 0xe1ed, 0x1, 0x0);
        gbc.writeMem(0x7075, { 0x3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x87c, gbc.sp());
        EXPECT(0x7076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0015
        gbc.setState(0x1d28, 0xaa3f, 0x1eb0, 0xf800, 0xb3ee, 0x7939, 0x0, 0x1);
        gbc.writeMem(0x1d28, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x1d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0016
        gbc.setState(0x92d7, 0x8b5d, 0xa6d0, 0xf57, 0x9e4a, 0x8520, 0x0, 0x0);
        gbc.writeMem(0x92d7, { 0x3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8b5d, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x92d7));
        // 03 0017
        gbc.setState(0x3744, 0x1183, 0x1c00, 0xb75e, 0x3090, 0x5966, 0x1, 0x0);
        gbc.writeMem(0x3744, { 0x3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0018
        gbc.setState(0x5f7e, 0xf2ba, 0x8590, 0xb56, 0x884e, 0xe4d, 0x0, 0x0);
        gbc.writeMem(0x5f7e, { 0x3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0x5f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0019
        gbc.setState(0xaa1e, 0xe1ac, 0x1280, 0xa262, 0x16ab, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0xaa1e, { 0x3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaa1e));
        // 03 001B
        gbc.setState(0x7b2d, 0xa16a, 0x5c30, 0x246b, 0x97a1, 0x4f2c, 0x1, 0x1);
        gbc.writeMem(0x7b2d, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 001C
        gbc.setState(0x2ce6, 0xaa22, 0x3fa0, 0x530c, 0x64a7, 0xb3, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0x3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaa22, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 001D
        gbc.setState(0x91f9, 0x7d00, 0x6450, 0x91ce, 0xc7a7, 0x4e43, 0x0, 0x0);
        gbc.writeMem(0x91f9, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7d00, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x91f9));
        // 03 001E
        gbc.setState(0x1510, 0xcbd9, 0xf90, 0xf241, 0xbb5d, 0x7a92, 0x0, 0x0);
        gbc.writeMem(0x1510, { 0x3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcbd9, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 001F
        gbc.setState(0x5cdf, 0x1353, 0xf4b0, 0x1a2b, 0x80ea, 0xc463, 0x1, 0x1);
        gbc.writeMem(0x5cdf, { 0x3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0020
        gbc.setState(0x45a7, 0xf507, 0xeac0, 0x1f6e, 0xa1ae, 0x45bb, 0x0, 0x0);
        gbc.writeMem(0x45a7, { 0x3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0x45a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0021
        gbc.setState(0x2b31, 0x3c9f, 0xfde0, 0x9a7f, 0xf648, 0xd392, 0x1, 0x1);
        gbc.writeMem(0x2b31, { 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3c9f, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0022
        gbc.setState(0x8fb8, 0x7c6d, 0x92e0, 0xd794, 0x5d88, 0xabd5, 0x0, 0x0);
        gbc.writeMem(0x8fb8, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0x8fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8fb8));
        // 03 0023
        gbc.setState(0xa209, 0x8c33, 0xa700, 0x4cdc, 0x457c, 0xf4a3, 0x0, 0x0);
        gbc.writeMem(0xa209, { 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8c33, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa209));
        // 03 0025
        gbc.setState(0xed5a, 0x90d4, 0x8520, 0x1c85, 0xfbac, 0xa32e, 0x0, 0x1);
        gbc.writeMem(0xed5a, { 0x3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xed5a));
        // 03 0026
        gbc.setState(0x60c5, 0xd681, 0x6f10, 0x8a90, 0xab5c, 0xf12c, 0x1, 0x0);
        gbc.writeMem(0x60c5, { 0x3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0x60c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0027
        gbc.setState(0xbe1f, 0xb952, 0xd2e0, 0x201b, 0x653e, 0xea7b, 0x0, 0x1);
        gbc.writeMem(0xbe1f, { 0x3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb952, gbc.sp());
        EXPECT(0xbe20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbe1f));
        // 03 0028
        gbc.setState(0xa297, 0x5157, 0xdd70, 0x2d6, 0xe73a, 0x6f9e, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5157, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa297));
        // 03 0029
        gbc.setState(0x56ad, 0xafad, 0x8900, 0x958e, 0x3944, 0x8b6c, 0x0, 0x0);
        gbc.writeMem(0x56ad, { 0x3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xafad, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 002A
        gbc.setState(0xa3a0, 0xf0c7, 0x1fa0, 0x361a, 0xdcb6, 0x36af, 0x0, 0x1);
        gbc.writeMem(0xa3a0, { 0x3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf0c7, gbc.sp());
        EXPECT(0xa3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa3a0));
        // 03 002B
        gbc.setState(0x2aa7, 0x8ed7, 0x7f90, 0xa468, 0x32bd, 0x4bba, 0x1, 0x1);
        gbc.writeMem(0x2aa7, { 0x3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ed7, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 002C
        gbc.setState(0x1d87, 0x56b5, 0x2350, 0xd281, 0xec36, 0xef39, 0x1, 0x1);
        gbc.writeMem(0x1d87, { 0x3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0x1d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 002D
        gbc.setState(0xd40d, 0x9ce4, 0xbd90, 0xe333, 0xdfc6, 0xdf5b, 0x1, 0x0);
        gbc.writeMem(0xd40d, { 0x3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9ce4, gbc.sp());
        EXPECT(0xd40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd40d));
        // 03 002E
        gbc.setState(0x50ea, 0x60e0, 0x7100, 0x8448, 0x3215, 0xc75a, 0x1, 0x0);
        gbc.writeMem(0x50ea, { 0x3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x60e0, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 002F
        gbc.setState(0x58d3, 0xbb33, 0x7090, 0x6686, 0xe554, 0x2f22, 0x0, 0x0);
        gbc.writeMem(0x58d3, { 0x3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbb33, gbc.sp());
        EXPECT(0x58d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0030
        gbc.setState(0x8c08, 0x6b60, 0xdb40, 0x51d9, 0xa47c, 0x250c, 0x0, 0x0);
        gbc.writeMem(0x8c08, { 0x3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0x8c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c08));
        // 03 0031
        gbc.setState(0x949f, 0x3025, 0x2f60, 0xdab7, 0xba2a, 0x65dc, 0x0, 0x0);
        gbc.writeMem(0x949f, { 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x949f));
        // 03 0032
        gbc.setState(0x3dd, 0xc9c, 0x75c0, 0x9562, 0x593, 0x3ad7, 0x0, 0x0);
        gbc.writeMem(0x3dd, { 0x3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc9c, gbc.sp());
        EXPECT(0x3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0033
        gbc.setState(0xcf50, 0xf0c9, 0x9290, 0xcd31, 0xadd6, 0x4c2e, 0x0, 0x1);
        gbc.writeMem(0xcf50, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf0c9, gbc.sp());
        EXPECT(0xcf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcf50));
        // 03 0034
        gbc.setState(0xb9c9, 0x3461, 0x9f10, 0x9647, 0x5244, 0xa1f3, 0x1, 0x1);
        gbc.writeMem(0xb9c9, { 0x3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3461, gbc.sp());
        EXPECT(0xb9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb9c9));
        // 03 0035
        gbc.setState(0xd7a8, 0xddf6, 0x1840, 0xd6f, 0x3458, 0xcc60, 0x0, 0x0);
        gbc.writeMem(0xd7a8, { 0x3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0xd7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd7a8));
        // 03 0036
        gbc.setState(0xc9dd, 0x7fcb, 0x8e70, 0x6668, 0x6edc, 0xc713, 0x1, 0x0);
        gbc.writeMem(0xc9dd, { 0x3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7fcb, gbc.sp());
        EXPECT(0xc9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc9dd));
        // 03 0037
        gbc.setState(0x7199, 0xc34e, 0x6a90, 0xd15, 0xca5c, 0x4a1, 0x0, 0x1);
        gbc.writeMem(0x7199, { 0x3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0038
        gbc.setState(0x17bf, 0x8f3e, 0xa570, 0x3463, 0xd4e0, 0x3bfd, 0x0, 0x0);
        gbc.writeMem(0x17bf, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f3e, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0039
        gbc.setState(0x196b, 0xc0f9, 0xe8c0, 0xc3d7, 0x1582, 0x76db, 0x1, 0x0);
        gbc.writeMem(0x196b, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 003A
        gbc.setState(0x49f1, 0x7b, 0x6e30, 0x183d, 0x861c, 0xbfed, 0x1, 0x1);
        gbc.writeMem(0x49f1, { 0x3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 003B
        gbc.setState(0x2284, 0x2102, 0xac50, 0x381e, 0x6736, 0x20f7, 0x1, 0x0);
        gbc.writeMem(0x2284, { 0x3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2102, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 003C
        gbc.setState(0xa99d, 0xbde1, 0x37f0, 0x64aa, 0x9e75, 0x80ad, 0x1, 0x0);
        gbc.writeMem(0xa99d, { 0x3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa99d));
        // 03 003D
        gbc.setState(0xce61, 0x41aa, 0xc3d0, 0xf0b9, 0xe39f, 0xb883, 0x0, 0x0);
        gbc.writeMem(0xce61, { 0x3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x41aa, gbc.sp());
        EXPECT(0xce62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xce61));
        // 03 003E
        gbc.setState(0x9b1c, 0xbb9b, 0x2130, 0xcbbe, 0x9eab, 0x85e9, 0x1, 0x0);
        gbc.writeMem(0x9b1c, { 0x3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbb9b, gbc.sp());
        EXPECT(0x9b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b1c));
        // 03 003F
        gbc.setState(0xc422, 0x2116, 0x8030, 0x2235, 0x8a2d, 0x1de6, 0x0, 0x0);
        gbc.writeMem(0xc422, { 0x3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2116, gbc.sp());
        EXPECT(0xc423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc422));
        // 03 0040
        gbc.setState(0x33fb, 0xcd0, 0xf390, 0x8826, 0xedf, 0xf365, 0x1, 0x1);
        gbc.writeMem(0x33fb, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcd0, gbc.sp());
        EXPECT(0x33fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0041
        gbc.setState(0xb5f7, 0x6de8, 0x9ba0, 0x9006, 0xf7c1, 0x4084, 0x1, 0x1);
        gbc.writeMem(0xb5f7, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0xb5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb5f7));
        // 03 0042
        gbc.setState(0x29dd, 0x5965, 0x9680, 0x353, 0xef76, 0x556d, 0x1, 0x0);
        gbc.writeMem(0x29dd, { 0x3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5965, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0043
        gbc.setState(0xce8b, 0xd719, 0xc7e0, 0x32e5, 0x21f5, 0x29f9, 0x0, 0x1);
        gbc.writeMem(0xce8b, { 0x3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0xce8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xce8b));
        // 03 0044
        gbc.setState(0x37d5, 0x65e3, 0xa800, 0xe0, 0xdecd, 0x277b, 0x0, 0x0);
        gbc.writeMem(0x37d5, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x65e3, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0045
        gbc.setState(0xe7a7, 0xe96f, 0xa120, 0xf91e, 0xb9ee, 0x5261, 0x1, 0x1);
        gbc.writeMem(0xe7a7, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe96f, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe7a7));
        // 03 0046
        gbc.setState(0xc38e, 0xcc3c, 0xb240, 0x4707, 0xcc87, 0x3e29, 0x0, 0x0);
        gbc.writeMem(0xc38e, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc38e));
        // 03 0047
        gbc.setState(0x9edb, 0x8d7, 0xaa90, 0xfbba, 0xc7a0, 0xa2eb, 0x1, 0x1);
        gbc.writeMem(0x9edb, { 0x3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8d7, gbc.sp());
        EXPECT(0x9edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9edb));
        // 03 0048
        gbc.setState(0xb15, 0x5548, 0x440, 0x34ca, 0x9a5f, 0x3fd8, 0x1, 0x0);
        gbc.writeMem(0xb15, { 0x3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0049
        gbc.setState(0x8687, 0xdd29, 0x82f0, 0x1606, 0xd9b2, 0x402e, 0x0, 0x0);
        gbc.writeMem(0x8687, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0x8688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8687));
        // 03 004A
        gbc.setState(0xd291, 0x90f9, 0x8800, 0xa7d2, 0xbb38, 0x54e6, 0x1, 0x0);
        gbc.writeMem(0xd291, { 0x3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd291));
        // 03 004B
        gbc.setState(0xa140, 0xc1a4, 0x70, 0xcc28, 0x8c11, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0xa140, { 0x3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa140));
        // 03 004C
        gbc.setState(0xeb8e, 0xe8dc, 0x71b0, 0xdcb3, 0x5b9, 0xfca8, 0x1, 0x1);
        gbc.writeMem(0xeb8e, { 0x3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeb8e));
        // 03 004D
        gbc.setState(0x5528, 0x2015, 0x2f0, 0xd0ac, 0xd05d, 0x2916, 0x1, 0x0);
        gbc.writeMem(0x5528, { 0x3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2015, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 004E
        gbc.setState(0x36d4, 0xfdea, 0xd940, 0x2fb8, 0xeb9a, 0xe637, 0x0, 0x1);
        gbc.writeMem(0x36d4, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfdea, gbc.sp());
        EXPECT(0x36d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 004F
        gbc.setState(0x416e, 0x9ce8, 0xcf40, 0xca0b, 0x2f2c, 0x5008, 0x0, 0x0);
        gbc.writeMem(0x416e, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0x416f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0050
        gbc.setState(0x2a32, 0x7c2d, 0x7620, 0x10b1, 0x932c, 0xa95c, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0x3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0051
        gbc.setState(0xead7, 0x1c94, 0x770, 0x52ae, 0xd76d, 0xa5bc, 0x1, 0x0);
        gbc.writeMem(0xead7, { 0x3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0xead8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xead7));
        // 03 0052
        gbc.setState(0x635c, 0x3e58, 0x5070, 0xb4cd, 0xb849, 0x71b3, 0x0, 0x0);
        gbc.writeMem(0x635c, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3e58, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0053
        gbc.setState(0x8e39, 0x3987, 0xfd0, 0xa9fd, 0x2c13, 0x916d, 0x1, 0x0);
        gbc.writeMem(0x8e39, { 0x3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8e39));
        // 03 0054
        gbc.setState(0x321b, 0xf532, 0xe720, 0x7951, 0x553b, 0x76d2, 0x1, 0x0);
        gbc.writeMem(0x321b, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0055
        gbc.setState(0x4def, 0x178, 0xd1c0, 0x44e8, 0x7829, 0x51c1, 0x1, 0x1);
        gbc.writeMem(0x4def, { 0x3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x178, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0056
        gbc.setState(0xd5a0, 0xa66f, 0xa840, 0x13d2, 0x128a, 0x89c1, 0x0, 0x1);
        gbc.writeMem(0xd5a0, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa66f, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd5a0));
        // 03 0057
        gbc.setState(0xa03e, 0x7f95, 0xbfe0, 0x54a7, 0xa2f5, 0xef07, 0x1, 0x1);
        gbc.writeMem(0xa03e, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7f95, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa03e));
        // 03 0058
        gbc.setState(0x766b, 0x1268, 0xc80, 0x77f6, 0x60eb, 0xa75f, 0x0, 0x1);
        gbc.writeMem(0x766b, { 0x3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0x766c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0059
        gbc.setState(0x1abb, 0x7a0c, 0x8dd0, 0xb07a, 0x52c4, 0xca48, 0x0, 0x0);
        gbc.writeMem(0x1abb, { 0x3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 005A
        gbc.setState(0x98b7, 0xe018, 0x3ff0, 0xaf8d, 0x6af3, 0x10c9, 0x1, 0x0);
        gbc.writeMem(0x98b7, { 0x3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe018, gbc.sp());
        EXPECT(0x98b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98b7));
        // 03 005B
        gbc.setState(0x912b, 0xf9be, 0x8f40, 0x4e58, 0x44c2, 0xf7b3, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x912b));
        // 03 005C
        gbc.setState(0x170, 0x71c7, 0x6e0, 0x60e6, 0x48c9, 0x8ca6, 0x0, 0x0);
        gbc.writeMem(0x170, { 0x3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 005D
        gbc.setState(0x479c, 0x76f8, 0x35c0, 0xa049, 0xbd20, 0xc7c9, 0x0, 0x1);
        gbc.writeMem(0x479c, { 0x3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 005E
        gbc.setState(0x3596, 0xe413, 0xbc70, 0xb18c, 0x3377, 0x6b89, 0x1, 0x0);
        gbc.writeMem(0x3596, { 0x3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe413, gbc.sp());
        EXPECT(0x3597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 005F
        gbc.setState(0x1ba8, 0x2e3e, 0xead0, 0x96, 0x3ddc, 0x470d, 0x0, 0x0);
        gbc.writeMem(0x1ba8, { 0x3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2e3e, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0060
        gbc.setState(0xb324, 0x490f, 0xc210, 0xd4, 0x2f56, 0xf0c8, 0x0, 0x0);
        gbc.writeMem(0xb324, { 0x3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x490f, gbc.sp());
        EXPECT(0xb325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb324));
        // 03 0061
        gbc.setState(0xa9ec, 0x77a6, 0xe760, 0x5cc3, 0x761c, 0x7665, 0x1, 0x1);
        gbc.writeMem(0xa9ec, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa9ec));
        // 03 0062
        gbc.setState(0x11, 0x7c80, 0x4c10, 0xb212, 0x54f, 0xf1c5, 0x0, 0x1);
        gbc.writeMem(0x11, { 0x3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7c80, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0063
        gbc.setState(0x5ff9, 0xf230, 0xe1a0, 0xb779, 0x8a18, 0xad98, 0x0, 0x0);
        gbc.writeMem(0x5ff9, { 0x3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0064
        gbc.setState(0x2f57, 0xe58b, 0xf820, 0xa162, 0x33ad, 0xb6fa, 0x1, 0x0);
        gbc.writeMem(0x2f57, { 0x3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe58b, gbc.sp());
        EXPECT(0x2f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0065
        gbc.setState(0xc5dc, 0x6c5e, 0xf5b0, 0x825e, 0x7309, 0xc0a0, 0x1, 0x0);
        gbc.writeMem(0xc5dc, { 0x3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc5dc));
        // 03 0066
        gbc.setState(0xe3a8, 0x5cfe, 0xfdd0, 0xc211, 0xa938, 0x86b1, 0x1, 0x1);
        gbc.writeMem(0xe3a8, { 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0xe3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe3a8));
        // 03 0067
        gbc.setState(0x2b0b, 0xe355, 0x5dd0, 0xd5e5, 0x5a18, 0x9af0, 0x1, 0x1);
        gbc.writeMem(0x2b0b, { 0x3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0069
        gbc.setState(0xa375, 0x63ef, 0xb10, 0xf805, 0xe1c3, 0x8430, 0x1, 0x1);
        gbc.writeMem(0xa375, { 0x3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa375));
        // 03 006A
        gbc.setState(0x58b4, 0x2f72, 0xedd0, 0xcecd, 0xaac3, 0xaa72, 0x1, 0x1);
        gbc.writeMem(0x58b4, { 0x3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2f72, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 006B
        gbc.setState(0xbf1e, 0x746c, 0xb930, 0x396c, 0xc231, 0xfdd7, 0x1, 0x1);
        gbc.writeMem(0xbf1e, { 0x3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x746c, gbc.sp());
        EXPECT(0xbf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbf1e));
        // 03 006C
        gbc.setState(0xb6e5, 0xae50, 0xdde0, 0x81f, 0x52d3, 0x33ba, 0x1, 0x0);
        gbc.writeMem(0xb6e5, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb6e5));
        // 03 006D
        gbc.setState(0x1ba2, 0x6959, 0x6110, 0x7514, 0x1e35, 0x9d08, 0x1, 0x0);
        gbc.writeMem(0x1ba2, { 0x3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0x1ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 006E
        gbc.setState(0x14cd, 0xee24, 0x3290, 0xb4f2, 0x8815, 0xc0d3, 0x0, 0x0);
        gbc.writeMem(0x14cd, { 0x3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xee24, gbc.sp());
        EXPECT(0x14ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 006F
        gbc.setState(0xcd21, 0xb213, 0xe440, 0xd1af, 0x939c, 0x9740, 0x0, 0x0);
        gbc.writeMem(0xcd21, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcd21));
        // 03 0070
        gbc.setState(0xab58, 0xbb45, 0x6a70, 0xd096, 0x292b, 0xcb69, 0x0, 0x0);
        gbc.writeMem(0xab58, { 0x3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbb45, gbc.sp());
        EXPECT(0xab59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xab58));
        // 03 0071
        gbc.setState(0x739f, 0xd5c4, 0x4260, 0xa17e, 0x44ea, 0xab0d, 0x1, 0x0);
        gbc.writeMem(0x739f, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd5c4, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0072
        gbc.setState(0xb0c0, 0xcdee, 0x32f0, 0x3fc4, 0x1dce, 0x840a, 0x1, 0x1);
        gbc.writeMem(0xb0c0, { 0x3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcdee, gbc.sp());
        EXPECT(0xb0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb0c0));
        // 03 0073
        gbc.setState(0x1482, 0x8ba9, 0xd4f0, 0x36a5, 0x96df, 0x6d, 0x1, 0x0);
        gbc.writeMem(0x1482, { 0x3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0x1483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0074
        gbc.setState(0x2df8, 0x815a, 0xec40, 0x80cd, 0xeae5, 0x9005, 0x0, 0x1);
        gbc.writeMem(0x2df8, { 0x3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x815a, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0076
        gbc.setState(0x436f, 0xd3fa, 0x5540, 0x5acc, 0x5a94, 0xbe36, 0x0, 0x0);
        gbc.writeMem(0x436f, { 0x3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0x4370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0077
        gbc.setState(0x5236, 0x62f2, 0x2a10, 0x9f59, 0x9f2a, 0x7d87, 0x1, 0x0);
        gbc.writeMem(0x5236, { 0x3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x62f2, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0078
        gbc.setState(0x2935, 0x2ea2, 0xd9e0, 0xa82e, 0x8559, 0x5a54, 0x1, 0x0);
        gbc.writeMem(0x2935, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0079
        gbc.setState(0x558e, 0x3b53, 0x8570, 0x750d, 0xd24e, 0xd0b3, 0x1, 0x0);
        gbc.writeMem(0x558e, { 0x3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x558f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 007A
        gbc.setState(0x3f4d, 0xa315, 0x2520, 0xebb6, 0x99b7, 0x8087, 0x0, 0x1);
        gbc.writeMem(0x3f4d, { 0x3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 007B
        gbc.setState(0x4e60, 0x4f3a, 0xfc40, 0x4345, 0xf9ed, 0x94a3, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0x3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4f3a, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 007C
        gbc.setState(0x37de, 0xf820, 0x9810, 0x702e, 0xc48b, 0xe3c0, 0x1, 0x1);
        gbc.writeMem(0x37de, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 007D
        gbc.setState(0x1671, 0x3b3, 0x2d60, 0xd297, 0xac2c, 0x70bd, 0x0, 0x0);
        gbc.writeMem(0x1671, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3b3, gbc.sp());
        EXPECT(0x1672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 007E
        gbc.setState(0xb6a8, 0x65de, 0x86e0, 0x966b, 0x6d82, 0x719d, 0x1, 0x1);
        gbc.writeMem(0xb6a8, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0xb6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb6a8));
        // 03 007F
        gbc.setState(0x5d5d, 0xe180, 0xfef0, 0x24a7, 0x25df, 0x9ee1, 0x1, 0x1);
        gbc.writeMem(0x5d5d, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0080
        gbc.setState(0xe258, 0xd203, 0x8460, 0x9c43, 0x82f3, 0x1027, 0x0, 0x0);
        gbc.writeMem(0xe258, { 0x3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0xe259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe258));
        // 03 0081
        gbc.setState(0x7e3f, 0x4858, 0xf600, 0xe105, 0xe0bf, 0xc48a, 0x1, 0x1);
        gbc.writeMem(0x7e3f, { 0x3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x7e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0082
        gbc.setState(0xc472, 0x7057, 0x9270, 0x5cbc, 0xcca8, 0x557a, 0x0, 0x1);
        gbc.writeMem(0xc472, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7057, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc472));
        // 03 0083
        gbc.setState(0xde15, 0x78fb, 0xaee0, 0x267, 0x9754, 0xfc37, 0x0, 0x1);
        gbc.writeMem(0xde15, { 0x3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x78fb, gbc.sp());
        EXPECT(0xde16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xde15));
        // 03 0084
        gbc.setState(0x538e, 0x6426, 0x59b0, 0x5193, 0x754e, 0xe60, 0x0, 0x1);
        gbc.writeMem(0x538e, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0085
        gbc.setState(0xa508, 0x131, 0xf790, 0x10e5, 0xc045, 0xfd05, 0x1, 0x1);
        gbc.writeMem(0xa508, { 0x3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0xa509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa508));
        // 03 0086
        gbc.setState(0x891d, 0x368e, 0xfb30, 0xf40b, 0x81c, 0x9021, 0x1, 0x0);
        gbc.writeMem(0x891d, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x368e, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x891d));
        // 03 0087
        gbc.setState(0x1085, 0x6cf1, 0x7720, 0x4d6, 0xad5e, 0x9c60, 0x0, 0x1);
        gbc.writeMem(0x1085, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6cf1, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0088
        gbc.setState(0x5d25, 0xccee, 0x7d90, 0x55cc, 0x3689, 0x3bbe, 0x0, 0x0);
        gbc.writeMem(0x5d25, { 0x3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xccee, gbc.sp());
        EXPECT(0x5d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0089
        gbc.setState(0x508, 0xcc0, 0x3810, 0xc8af, 0xca7c, 0xc08f, 0x0, 0x1);
        gbc.writeMem(0x508, { 0x3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcc0, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 008A
        gbc.setState(0x7785, 0x946e, 0xa500, 0xa984, 0x7551, 0xc243, 0x1, 0x0);
        gbc.writeMem(0x7785, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x946e, gbc.sp());
        EXPECT(0x7786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 008B
        gbc.setState(0x65dc, 0xfdfb, 0x98b0, 0x362a, 0x5745, 0x8638, 0x1, 0x0);
        gbc.writeMem(0x65dc, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfdfb, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 008C
        gbc.setState(0xd26b, 0xa8d8, 0x8d70, 0x39e2, 0x19, 0x2558, 0x0, 0x0);
        gbc.writeMem(0xd26b, { 0x3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa8d8, gbc.sp());
        EXPECT(0xd26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd26b));
        // 03 008D
        gbc.setState(0x1ee3, 0x55b2, 0x6d70, 0xf7a8, 0xbeb1, 0x5ece, 0x1, 0x1);
        gbc.writeMem(0x1ee3, { 0x3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 008E
        gbc.setState(0x153d, 0x3115, 0xf300, 0x1a6c, 0xced0, 0xe60a, 0x0, 0x1);
        gbc.writeMem(0x153d, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 008F
        gbc.setState(0xdd4d, 0x9db0, 0x4e90, 0x99b1, 0x71e3, 0xa936, 0x0, 0x0);
        gbc.writeMem(0xdd4d, { 0x3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xdd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdd4d));
        // 03 0090
        gbc.setState(0x690, 0x1396, 0xb4f0, 0xed9d, 0xc3bd, 0xa076, 0x1, 0x1);
        gbc.writeMem(0x690, { 0x3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0091
        gbc.setState(0xc5ec, 0x4f01, 0x7610, 0xb224, 0xa50e, 0xc1f8, 0x1, 0x1);
        gbc.writeMem(0xc5ec, { 0x3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4f01, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc5ec));
        // 03 0092
        gbc.setState(0x39c3, 0x3a91, 0xbf80, 0x58e6, 0x4044, 0xd919, 0x1, 0x1);
        gbc.writeMem(0x39c3, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3a91, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0093
        gbc.setState(0xc0f2, 0x9925, 0xd990, 0x499b, 0xcf66, 0xceb8, 0x0, 0x1);
        gbc.writeMem(0xc0f2, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0xc0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc0f2));
        // 03 0094
        gbc.setState(0xd252, 0x1424, 0xbd50, 0x64f5, 0x8ec0, 0x27ca, 0x0, 0x1);
        gbc.writeMem(0xd252, { 0x3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0xd253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd252));
        // 03 0095
        gbc.setState(0xb285, 0xec25, 0x7b50, 0x2d5b, 0x2ab2, 0xc49a, 0x1, 0x1);
        gbc.writeMem(0xb285, { 0x3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0xb286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb285));
        // 03 0096
        gbc.setState(0x6506, 0x17cb, 0xadf0, 0xa020, 0xa09e, 0x2635, 0x0, 0x1);
        gbc.writeMem(0x6506, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x17cb, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0097
        gbc.setState(0xc290, 0x8d83, 0x5f20, 0x3f3, 0xf85, 0x92c8, 0x0, 0x1);
        gbc.writeMem(0xc290, { 0x3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8d83, gbc.sp());
        EXPECT(0xc291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc290));
        // 03 0098
        gbc.setState(0x2ed8, 0xef0d, 0x2750, 0x7a9d, 0x7457, 0xc238, 0x1, 0x0);
        gbc.writeMem(0x2ed8, { 0x3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xef0d, gbc.sp());
        EXPECT(0x2ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0099
        gbc.setState(0x7b75, 0x68c2, 0xb590, 0xc202, 0xb999, 0xba67, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0x3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x68c2, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 009A
        gbc.setState(0x39f2, 0xbc2d, 0x14c0, 0x93ba, 0x83ed, 0xa285, 0x0, 0x1);
        gbc.writeMem(0x39f2, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0x39f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 009B
        gbc.setState(0x68c2, 0x4c11, 0x6280, 0xa57a, 0x539c, 0xd656, 0x1, 0x1);
        gbc.writeMem(0x68c2, { 0x3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c11, gbc.sp());
        EXPECT(0x68c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 009C
        gbc.setState(0x1a04, 0x238c, 0xc9b0, 0x7110, 0xa793, 0x9c2, 0x0, 0x0);
        gbc.writeMem(0x1a04, { 0x3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0x1a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 009D
        gbc.setState(0x56f9, 0xe803, 0x58e0, 0xbe1f, 0x1bce, 0x1bfb, 0x1, 0x0);
        gbc.writeMem(0x56f9, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 009E
        gbc.setState(0xe114, 0x69cc, 0x6690, 0xa7e, 0x2e6d, 0x6ac7, 0x0, 0x1);
        gbc.writeMem(0xe114, { 0x3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x69cc, gbc.sp());
        EXPECT(0xe115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe114));
        // 03 009F
        gbc.setState(0x92af, 0xbdf0, 0x7f40, 0xbcb7, 0x6bb3, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0x92af, { 0x3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbdf0, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x92af));
        // 03 00A0
        gbc.setState(0xed26, 0x8cf8, 0xbe30, 0xaee6, 0x5214, 0x75cf, 0x0, 0x1);
        gbc.writeMem(0xed26, { 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0xed27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xed26));
        // 03 00A1
        gbc.setState(0x56b2, 0xcbc, 0xab40, 0x7fd1, 0xcf4b, 0xacb5, 0x1, 0x1);
        gbc.writeMem(0x56b2, { 0x3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcbc, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00A2
        gbc.setState(0x4a8d, 0x45c5, 0xa90, 0xf24f, 0xe8b4, 0x6c2c, 0x0, 0x0);
        gbc.writeMem(0x4a8d, { 0x3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x45c5, gbc.sp());
        EXPECT(0x4a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00A3
        gbc.setState(0x9259, 0x64b8, 0x5460, 0x7225, 0xd5b0, 0xda33, 0x0, 0x1);
        gbc.writeMem(0x9259, { 0x3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x64b8, gbc.sp());
        EXPECT(0x925a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9259));
        // 03 00A4
        gbc.setState(0x663f, 0xddc5, 0xcdb0, 0x8739, 0x1411, 0xaf51, 0x0, 0x1);
        gbc.writeMem(0x663f, { 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xddc5, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00A5
        gbc.setState(0xcc05, 0xbec8, 0x20e0, 0x14f2, 0xef61, 0x15f4, 0x0, 0x1);
        gbc.writeMem(0xcc05, { 0x3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbec8, gbc.sp());
        EXPECT(0xcc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcc05));
        // 03 00A6
        gbc.setState(0x53e1, 0x4083, 0x9240, 0x19f3, 0x3a55, 0xea47, 0x0, 0x0);
        gbc.writeMem(0x53e1, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0x53e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00A7
        gbc.setState(0xb70a, 0xf48d, 0x4a0, 0x523b, 0x8278, 0xec63, 0x1, 0x1);
        gbc.writeMem(0xb70a, { 0x3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf48d, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb70a));
        // 03 00A8
        gbc.setState(0x7ba3, 0x33c4, 0x9350, 0xadf1, 0x5a26, 0x808f, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0x3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0x7ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00AB
        gbc.setState(0x4cd8, 0x6c43, 0x9e30, 0xfe1d, 0xf784, 0xbe15, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6c43, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00AC
        gbc.setState(0x9c03, 0x8764, 0x8eb0, 0xaa4a, 0x5e6, 0x8c55, 0x0, 0x0);
        gbc.writeMem(0x9c03, { 0x3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0x9c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9c03));
        // 03 00AD
        gbc.setState(0x388c, 0xf00c, 0xadd0, 0xa75f, 0x73f4, 0xe045, 0x0, 0x0);
        gbc.writeMem(0x388c, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf00c, gbc.sp());
        EXPECT(0x388d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00AE
        gbc.setState(0x43e9, 0x1cd3, 0x2a90, 0xaca3, 0x66f5, 0x8f4c, 0x1, 0x0);
        gbc.writeMem(0x43e9, { 0x3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1cd3, gbc.sp());
        EXPECT(0x43ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00AF
        gbc.setState(0xdd54, 0x7a19, 0xbed0, 0x3772, 0x20ff, 0x3fe2, 0x1, 0x1);
        gbc.writeMem(0xdd54, { 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7a19, gbc.sp());
        EXPECT(0xdd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdd54));
        // 03 00B0
        gbc.setState(0x2c3e, 0xf0b7, 0xc9f0, 0x898, 0x4d57, 0x678, 0x1, 0x0);
        gbc.writeMem(0x2c3e, { 0x3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf0b7, gbc.sp());
        EXPECT(0x2c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00B1
        gbc.setState(0x4053, 0x8993, 0x8010, 0xa3c, 0xe551, 0x6a32, 0x1, 0x1);
        gbc.writeMem(0x4053, { 0x3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8993, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00B2
        gbc.setState(0xbcfd, 0xea21, 0xfe30, 0x9f04, 0xe764, 0x2b7c, 0x1, 0x0);
        gbc.writeMem(0xbcfd, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea21, gbc.sp());
        EXPECT(0xbcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbcfd));
        // 03 00B3
        gbc.setState(0xb22a, 0xb81b, 0xf130, 0xf1a9, 0x1c6, 0x108c, 0x0, 0x0);
        gbc.writeMem(0xb22a, { 0x3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb81b, gbc.sp());
        EXPECT(0xb22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb22a));
        // 03 00B4
        gbc.setState(0x9057, 0x6f22, 0xa960, 0xbf7e, 0x7bd5, 0xe4f9, 0x0, 0x1);
        gbc.writeMem(0x9057, { 0x3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6f22, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9057));
        // 03 00B5
        gbc.setState(0x6829, 0xcfc6, 0x9710, 0x9244, 0xa13f, 0x7f0a, 0x0, 0x1);
        gbc.writeMem(0x6829, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0x682a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00B6
        gbc.setState(0xef2b, 0xe978, 0xb870, 0x2069, 0x6abd, 0xff2, 0x1, 0x1);
        gbc.writeMem(0xef2b, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0xef2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xef2b));
        // 03 00B7
        gbc.setState(0x73c3, 0x3aa7, 0xa1b0, 0x4101, 0x49d2, 0xdf16, 0x0, 0x0);
        gbc.writeMem(0x73c3, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3aa7, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00B8
        gbc.setState(0xd7c2, 0x6ad0, 0x7830, 0xa06d, 0x2591, 0x4a98, 0x1, 0x1);
        gbc.writeMem(0xd7c2, { 0x3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd7c2));
        // 03 00B9
        gbc.setState(0x44bc, 0x98d0, 0x2220, 0x4c77, 0x4735, 0xec01, 0x1, 0x1);
        gbc.writeMem(0x44bc, { 0x3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x98d0, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00BA
        gbc.setState(0xecc0, 0x7f18, 0x8a30, 0xf11f, 0x7a30, 0x5dd6, 0x1, 0x0);
        gbc.writeMem(0xecc0, { 0x3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xecc0));
        // 03 00BB
        gbc.setState(0x575e, 0xaab2, 0xc9c0, 0x7f85, 0x15ae, 0xe1b1, 0x0, 0x0);
        gbc.writeMem(0x575e, { 0x3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0x575f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00BC
        gbc.setState(0x7813, 0xb9, 0xd980, 0x4ff5, 0xcea1, 0x86ca, 0x1, 0x0);
        gbc.writeMem(0x7813, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x7814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00BE
        gbc.setState(0xe7af, 0x1670, 0x8140, 0x43ce, 0x4d69, 0x5ef, 0x0, 0x0);
        gbc.writeMem(0xe7af, { 0x3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1670, gbc.sp());
        EXPECT(0xe7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe7af));
        // 03 00BF
        gbc.setState(0xe1fc, 0xe302, 0xc070, 0xc686, 0x9f4c, 0xa716, 0x1, 0x0);
        gbc.writeMem(0xe1fc, { 0x3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe302, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe1fc));
        // 03 00C0
        gbc.setState(0x1429, 0xd908, 0x9410, 0xea2b, 0x509a, 0x1c2b, 0x1, 0x0);
        gbc.writeMem(0x1429, { 0x3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd908, gbc.sp());
        EXPECT(0x142a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00C1
        gbc.setState(0xc5d, 0x54e7, 0x91b0, 0xcc04, 0xbfe, 0xeff2, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0x3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00C2
        gbc.setState(0x59be, 0x94b8, 0x3da0, 0x6fbc, 0xd316, 0x89d4, 0x0, 0x1);
        gbc.writeMem(0x59be, { 0x3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00C3
        gbc.setState(0x2471, 0x569f, 0xc100, 0x9b46, 0x9f9d, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x2471, { 0x3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x569f, gbc.sp());
        EXPECT(0x2472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00C4
        gbc.setState(0x934a, 0x8e76, 0xa910, 0xf5a3, 0xadc8, 0x6f76, 0x0, 0x1);
        gbc.writeMem(0x934a, { 0x3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8e76, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x934a));
        // 03 00C5
        gbc.setState(0x840b, 0x435c, 0xd850, 0xc99c, 0x44f6, 0xf2c6, 0x1, 0x0);
        gbc.writeMem(0x840b, { 0x3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x840b));
        // 03 00C6
        gbc.setState(0x358b, 0x24b1, 0xe430, 0xcc31, 0x39aa, 0x11d7, 0x1, 0x1);
        gbc.writeMem(0x358b, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0x358c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00C7
        gbc.setState(0xcdc6, 0x1752, 0x5090, 0x17c2, 0x58ff, 0xf4ec, 0x1, 0x0);
        gbc.writeMem(0xcdc6, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1752, gbc.sp());
        EXPECT(0xcdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcdc6));
        // 03 00C9
        gbc.setState(0xe9d9, 0x7f4, 0x1740, 0xc781, 0xda6a, 0x75d5, 0x0, 0x0);
        gbc.writeMem(0xe9d9, { 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0xe9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe9d9));
        // 03 00CA
        gbc.setState(0x9863, 0x8763, 0x21d0, 0x1497, 0x8c88, 0x66c9, 0x0, 0x1);
        gbc.writeMem(0x9863, { 0x3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0x9864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9863));
        // 03 00CB
        gbc.setState(0x405f, 0x1a5c, 0x86a0, 0x50d3, 0xdb84, 0x652e, 0x1, 0x0);
        gbc.writeMem(0x405f, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0x4060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00CD
        gbc.setState(0xaedb, 0xaf2e, 0x84c0, 0xbcc1, 0x5aff, 0x5459, 0x0, 0x1);
        gbc.writeMem(0xaedb, { 0x3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaf2e, gbc.sp());
        EXPECT(0xaedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaedb));
        // 03 00CE
        gbc.setState(0x64e9, 0x356a, 0x11a0, 0xb21c, 0x73d3, 0x6c93, 0x1, 0x1);
        gbc.writeMem(0x64e9, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0x64ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00CF
        gbc.setState(0x21b0, 0x5f8f, 0xa890, 0xa396, 0xf9af, 0x498f, 0x0, 0x1);
        gbc.writeMem(0x21b0, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5f8f, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00D0
        gbc.setState(0xa34c, 0x9c6e, 0x55a0, 0x8a79, 0xf95a, 0xa96d, 0x0, 0x1);
        gbc.writeMem(0xa34c, { 0x3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa34c));
        // 03 00D1
        gbc.setState(0xb68c, 0x92cb, 0x44d0, 0xc10c, 0xa978, 0x383d, 0x0, 0x1);
        gbc.writeMem(0xb68c, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x92cb, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb68c));
        // 03 00D3
        gbc.setState(0xb91c, 0xfe7f, 0x8630, 0x45ae, 0xebd5, 0x66c6, 0x0, 0x1);
        gbc.writeMem(0xb91c, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb91c));
        // 03 00D4
        gbc.setState(0x9965, 0x9f16, 0xfee0, 0xb0d0, 0xe05b, 0xb5f2, 0x1, 0x1);
        gbc.writeMem(0x9965, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9965));
        // 03 00D5
        gbc.setState(0x7d99, 0x3ddc, 0x1070, 0xde8, 0x5dbf, 0x9329, 0x1, 0x1);
        gbc.writeMem(0x7d99, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00D6
        gbc.setState(0x8ab3, 0x63a, 0xb950, 0xa960, 0xc5e0, 0xe082, 0x0, 0x1);
        gbc.writeMem(0x8ab3, { 0x3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8ab3));
        // 03 00D7
        gbc.setState(0x826, 0x5e22, 0x5120, 0xedac, 0xb24d, 0xba2f, 0x1, 0x0);
        gbc.writeMem(0x826, { 0x3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e22, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00D8
        gbc.setState(0xe219, 0x916a, 0xd7b0, 0x99e2, 0xbce1, 0xf3ac, 0x0, 0x1);
        gbc.writeMem(0xe219, { 0x3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x916a, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe219));
        // 03 00D9
        gbc.setState(0x8740, 0x9f96, 0x63b0, 0x2b3, 0x41f1, 0x9306, 0x0, 0x0);
        gbc.writeMem(0x8740, { 0x3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0x8741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8740));
        // 03 00DA
        gbc.setState(0x5acc, 0x3a2, 0x5800, 0xbbdd, 0xdba1, 0x1392, 0x1, 0x1);
        gbc.writeMem(0x5acc, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a2, gbc.sp());
        EXPECT(0x5acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00DB
        gbc.setState(0x31fe, 0x6e43, 0xd6f0, 0xb3d0, 0x8361, 0x23ce, 0x1, 0x1);
        gbc.writeMem(0x31fe, { 0x3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6e43, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00DC
        gbc.setState(0xc84c, 0x79c, 0x1470, 0x9400, 0x9d5e, 0x43b3, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x79c, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc84c));
        // 03 00DD
        gbc.setState(0x63e0, 0x7ba3, 0xad90, 0x4c11, 0x6726, 0x5907, 0x1, 0x0);
        gbc.writeMem(0x63e0, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ba3, gbc.sp());
        EXPECT(0x63e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00DE
        gbc.setState(0x92e0, 0x501b, 0xc090, 0x6c6, 0xe74f, 0xf095, 0x0, 0x0);
        gbc.writeMem(0x92e0, { 0x3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0x92e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x92e0));
        // 03 00DF
        gbc.setState(0x30ea, 0x983f, 0x72a0, 0x6df2, 0xd554, 0xeaa5, 0x1, 0x1);
        gbc.writeMem(0x30ea, { 0x3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x983f, gbc.sp());
        EXPECT(0x30eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E0
        gbc.setState(0xd7c6, 0x7093, 0x7510, 0xa91a, 0x1f3a, 0xfaf7, 0x0, 0x1);
        gbc.writeMem(0xd7c6, { 0x3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0xd7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd7c6));
        // 03 00E1
        gbc.setState(0x819, 0x7ddb, 0x5100, 0xf809, 0xbb14, 0xc311, 0x1, 0x0);
        gbc.writeMem(0x819, { 0x3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7ddb, gbc.sp());
        EXPECT(0x81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E2
        gbc.setState(0x40a1, 0x97bd, 0x9570, 0x324f, 0x779f, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0x40a1, { 0x3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x97bd, gbc.sp());
        EXPECT(0x40a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00E3
        gbc.setState(0x372, 0xf2b1, 0x33a0, 0xe045, 0x8bf0, 0xd69d, 0x0, 0x1);
        gbc.writeMem(0x372, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E4
        gbc.setState(0x761d, 0x6d38, 0xec0, 0x6cd5, 0x6695, 0xc742, 0x0, 0x0);
        gbc.writeMem(0x761d, { 0x3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x761e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E5
        gbc.setState(0xa257, 0xe61d, 0xaca0, 0xf221, 0x6763, 0xdbb8, 0x0, 0x1);
        gbc.writeMem(0xa257, { 0x3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe61d, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa257));
        // 03 00E6
        gbc.setState(0x38b2, 0x1e90, 0x3400, 0x72ff, 0x3500, 0xe983, 0x0, 0x0);
        gbc.writeMem(0x38b2, { 0x3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1e90, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E7
        gbc.setState(0x2b7c, 0x7ae9, 0x6fc0, 0x8726, 0x24d5, 0x2482, 0x0, 0x0);
        gbc.writeMem(0x2b7c, { 0x3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ae9, gbc.sp());
        EXPECT(0x2b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00E8
        gbc.setState(0x86d1, 0x2a9d, 0x22d0, 0x4757, 0xb86a, 0x5651, 0x1, 0x0);
        gbc.writeMem(0x86d1, { 0x3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2a9d, gbc.sp());
        EXPECT(0x86d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x86d1));
        // 03 00E9
        gbc.setState(0xe5b4, 0x18e3, 0x3bc0, 0xb7c5, 0x7f08, 0xb6cd, 0x1, 0x1);
        gbc.writeMem(0xe5b4, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x18e3, gbc.sp());
        EXPECT(0xe5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe5b4));
        // 03 00EA
        gbc.setState(0xeecb, 0xae2a, 0x6b60, 0xac8f, 0x2dab, 0x38cb, 0x0, 0x0);
        gbc.writeMem(0xeecb, { 0x3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeecb));
        // 03 00EB
        gbc.setState(0x433e, 0x7aaf, 0x8af0, 0x6a84, 0x3af5, 0x2776, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0x3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x433f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00EC
        gbc.setState(0x4754, 0x6ba4, 0xe9e0, 0x4b29, 0x43fa, 0x994f, 0x0, 0x1);
        gbc.writeMem(0x4754, { 0x3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6ba4, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00ED
        gbc.setState(0x417d, 0xb478, 0x8ab0, 0xa20d, 0xdae4, 0x2333, 0x1, 0x0);
        gbc.writeMem(0x417d, { 0x3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0x417e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00EE
        gbc.setState(0x2b86, 0xc7af, 0x2d50, 0x3bd1, 0x1fa3, 0x32cb, 0x0, 0x1);
        gbc.writeMem(0x2b86, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc7af, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00EF
        gbc.setState(0x791a, 0x174, 0x7c10, 0x220d, 0xff0d, 0xdc51, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0x791b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00F0
        gbc.setState(0x866f, 0x20e3, 0xc8d0, 0x727e, 0x5e51, 0x1284, 0x1, 0x1);
        gbc.writeMem(0x866f, { 0x3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x20e3, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x866f));
        // 03 00F1
        gbc.setState(0x5170, 0x508f, 0xa610, 0xd650, 0x4b85, 0xc19a, 0x0, 0x1);
        gbc.writeMem(0x5170, { 0x3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0x5171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00F2
        gbc.setState(0x7b93, 0x94db, 0x65b0, 0x8ec2, 0x1d4b, 0x7ed7, 0x1, 0x0);
        gbc.writeMem(0x7b93, { 0x3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x7b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00F3
        gbc.setState(0x4532, 0x3921, 0x4870, 0xc565, 0xa3d7, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0x4532, { 0x3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3921, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00F4
        gbc.setState(0x3532, 0xb6c2, 0x6f60, 0xc432, 0x29b8, 0x2a55, 0x0, 0x0);
        gbc.writeMem(0x3532, { 0x3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00F5
        gbc.setState(0x20cb, 0x3cb7, 0xa490, 0xe2ac, 0x9c94, 0x1693, 0x1, 0x0);
        gbc.writeMem(0x20cb, { 0x3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3cb7, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00F7
        gbc.setState(0x911d, 0x96e3, 0x4a0, 0xea37, 0xd405, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x911d, { 0x3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x911d));
        // 03 00F9
        gbc.setState(0xde1b, 0x5569, 0xba10, 0x666b, 0xd6a7, 0x5e5, 0x0, 0x1);
        gbc.writeMem(0xde1b, { 0x3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5569, gbc.sp());
        EXPECT(0xde1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xde1b));
        // 03 00FA
        gbc.setState(0x51c5, 0xdc01, 0x8c30, 0x76a, 0xf6a6, 0xf73f, 0x0, 0x1);
        gbc.writeMem(0x51c5, { 0x3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdc01, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00FB
        gbc.setState(0x7234, 0x9575, 0xd9b0, 0x13bf, 0x76d5, 0x39e1, 0x0, 0x1);
        gbc.writeMem(0x7234, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x7235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 00FC
        gbc.setState(0x5af3, 0xf363, 0x92e0, 0xb2da, 0x8c5d, 0x674b, 0x1, 0x1);
        gbc.writeMem(0x5af3, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0x5af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 00FD
        gbc.setState(0xda30, 0xd6c1, 0xc9b0, 0xc15, 0x81eb, 0x8df9, 0x1, 0x0);
        gbc.writeMem(0xda30, { 0x3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0xda31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda30));
        // 03 00FE
        gbc.setState(0xd169, 0x8516, 0x88a0, 0xa997, 0x9f04, 0x8846, 0x1, 0x0);
        gbc.writeMem(0xd169, { 0x3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0xd16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd169));
        // 03 00FF
        gbc.setState(0x9e1b, 0xaaa2, 0x3b80, 0x6c11, 0x34cb, 0x4e8e, 0x0, 0x0);
        gbc.writeMem(0x9e1b, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9e1b));
        // 03 0100
        gbc.setState(0x45c0, 0x23b9, 0xbec0, 0xa817, 0xfe3a, 0xd03a, 0x0, 0x0);
        gbc.writeMem(0x45c0, { 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x23b9, gbc.sp());
        EXPECT(0x45c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0101
        gbc.setState(0xcf93, 0x2cd2, 0xaa60, 0xcd60, 0xe21d, 0xda5c, 0x0, 0x1);
        gbc.writeMem(0xcf93, { 0x3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2cd2, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcf93));
        // 03 0102
        gbc.setState(0xbebe, 0xa3de, 0xd010, 0xe208, 0xa96a, 0xc5e1, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0x3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbebe));
        // 03 0103
        gbc.setState(0x2791, 0x720e, 0xef70, 0x6c35, 0xa3c7, 0xc289, 0x0, 0x0);
        gbc.writeMem(0x2791, { 0x3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0x2792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0104
        gbc.setState(0x2588, 0xa2a9, 0xa150, 0x23ac, 0xf69b, 0x5b9a, 0x1, 0x0);
        gbc.writeMem(0x2588, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0105
        gbc.setState(0x1dd, 0x5fb5, 0x9ca0, 0x136, 0xfba, 0x2c12, 0x0, 0x0);
        gbc.writeMem(0x1dd, { 0x3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5fb5, gbc.sp());
        EXPECT(0x1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0106
        gbc.setState(0xda1f, 0x245f, 0x7a30, 0xe1f8, 0x950e, 0xb45f, 0x0, 0x0);
        gbc.writeMem(0xda1f, { 0x3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0xda20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda1f));
        // 03 0107
        gbc.setState(0x1140, 0xa166, 0x10f0, 0x8979, 0x998c, 0x2d05, 0x0, 0x0);
        gbc.writeMem(0x1140, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa166, gbc.sp());
        EXPECT(0x1141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0108
        gbc.setState(0x603a, 0xebf0, 0x39f0, 0xf311, 0xc99e, 0xa885, 0x1, 0x1);
        gbc.writeMem(0x603a, { 0x3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xebf0, gbc.sp());
        EXPECT(0x603b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0109
        gbc.setState(0xe817, 0xdce0, 0x1160, 0xbdd0, 0x8dac, 0x657d, 0x1, 0x1);
        gbc.writeMem(0xe817, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0xe818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe817));
        // 03 010A
        gbc.setState(0xebcf, 0x334d, 0x2580, 0x78d, 0x14fb, 0x6e64, 0x1, 0x0);
        gbc.writeMem(0xebcf, { 0x3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0xebd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebcf));
        // 03 010B
        gbc.setState(0x951c, 0xfb19, 0x4280, 0xff02, 0xb92b, 0x777f, 0x1, 0x0);
        gbc.writeMem(0x951c, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0x951d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x951c));
        // 03 010C
        gbc.setState(0x24ab, 0x5daa, 0xcb50, 0x40ac, 0xdb43, 0x2472, 0x1, 0x0);
        gbc.writeMem(0x24ab, { 0x3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 010D
        gbc.setState(0x2dab, 0xa7f5, 0xe40, 0xd255, 0x8356, 0x96dd, 0x0, 0x0);
        gbc.writeMem(0x2dab, { 0x3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa7f5, gbc.sp());
        EXPECT(0x2dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 010E
        gbc.setState(0xa90d, 0xeab5, 0x9560, 0x9c84, 0x4be4, 0xf70, 0x1, 0x0);
        gbc.writeMem(0xa90d, { 0x3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa90d));
        // 03 010F
        gbc.setState(0xc4f8, 0xbff0, 0x5cc0, 0xadd7, 0xed37, 0xfc29, 0x0, 0x0);
        gbc.writeMem(0xc4f8, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbff0, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc4f8));
        // 03 0110
        gbc.setState(0xad6e, 0x3aea, 0x41a0, 0x4af8, 0xff92, 0x26a8, 0x1, 0x1);
        gbc.writeMem(0xad6e, { 0x3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3aea, gbc.sp());
        EXPECT(0xad6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xad6e));
        // 03 0111
        gbc.setState(0xb9be, 0xc93d, 0xe5c0, 0x3483, 0xabcb, 0x6747, 0x0, 0x1);
        gbc.writeMem(0xb9be, { 0x3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc93d, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb9be));
        // 03 0112
        gbc.setState(0xcb84, 0x598e, 0xa020, 0x9db9, 0xdb38, 0xe03f, 0x0, 0x0);
        gbc.writeMem(0xcb84, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0xcb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcb84));
        // 03 0113
        gbc.setState(0xcd2b, 0xd59, 0x8ce0, 0x6f10, 0x81e0, 0x38d9, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0x3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd59, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcd2b));
        // 03 0114
        gbc.setState(0x2f0f, 0x26ab, 0x9ad0, 0x3587, 0xa80, 0xcd52, 0x0, 0x0);
        gbc.writeMem(0x2f0f, { 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0x2f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0115
        gbc.setState(0x6227, 0x5aa8, 0x5ad0, 0x38c1, 0x1bf9, 0xc93, 0x1, 0x0);
        gbc.writeMem(0x6227, { 0x3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0116
        gbc.setState(0x622e, 0x41b1, 0xbae0, 0x1725, 0x68c7, 0x7369, 0x1, 0x0);
        gbc.writeMem(0x622e, { 0x3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x41b1, gbc.sp());
        EXPECT(0x622f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0118
        gbc.setState(0xd83, 0x5168, 0x52a0, 0x23b0, 0xeeb7, 0xe36a, 0x1, 0x0);
        gbc.writeMem(0xd83, { 0x3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 011A
        gbc.setState(0x1415, 0x609, 0x6320, 0x6033, 0xe2ec, 0x3a6b, 0x1, 0x1);
        gbc.writeMem(0x1415, { 0x3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 011B
        gbc.setState(0xdb70, 0x90a, 0x7b60, 0x9c26, 0x2834, 0xb48b, 0x1, 0x0);
        gbc.writeMem(0xdb70, { 0x3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x90a, gbc.sp());
        EXPECT(0xdb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdb70));
        // 03 011C
        gbc.setState(0xec55, 0x61ac, 0xb030, 0xd7cd, 0xd34, 0xc5e9, 0x0, 0x1);
        gbc.writeMem(0xec55, { 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x61ac, gbc.sp());
        EXPECT(0xec56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xec55));
        // 03 011D
        gbc.setState(0x614f, 0x30bc, 0x960, 0x1dfe, 0x35dc, 0x812b, 0x0, 0x0);
        gbc.writeMem(0x614f, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 011E
        gbc.setState(0x3e3b, 0x8eff, 0xf300, 0xfdba, 0x2cf0, 0xce95, 0x0, 0x1);
        gbc.writeMem(0x3e3b, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 011F
        gbc.setState(0x9392, 0x9253, 0xfb00, 0x7706, 0x64b3, 0x743d, 0x0, 0x1);
        gbc.writeMem(0x9392, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9253, gbc.sp());
        EXPECT(0x9393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9392));
        // 03 0121
        gbc.setState(0x630f, 0x3013, 0x4d00, 0xb9bc, 0x4e1a, 0x9688, 0x1, 0x0);
        gbc.writeMem(0x630f, { 0x3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0122
        gbc.setState(0xd2cb, 0x9792, 0xe8c0, 0x922c, 0x1f50, 0x2077, 0x0, 0x1);
        gbc.writeMem(0xd2cb, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd2cb));
        // 03 0123
        gbc.setState(0xdcbe, 0x2eb7, 0x9e50, 0xd859, 0x1a1f, 0xdda4, 0x1, 0x0);
        gbc.writeMem(0xdcbe, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2eb7, gbc.sp());
        EXPECT(0xdcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdcbe));
        // 03 0124
        gbc.setState(0x7341, 0xd09e, 0x82b0, 0xc431, 0xe2e5, 0x944c, 0x0, 0x1);
        gbc.writeMem(0x7341, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x7342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0126
        gbc.setState(0x3ed8, 0x34f, 0x3dd0, 0x550f, 0x12e6, 0xb786, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0x3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0127
        gbc.setState(0x7f34, 0xbf40, 0x59c0, 0x547f, 0xc2ac, 0xbd44, 0x1, 0x0);
        gbc.writeMem(0x7f34, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbf40, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0128
        gbc.setState(0x9d79, 0xc6c2, 0x7100, 0x113c, 0x9c99, 0x4c12, 0x1, 0x1);
        gbc.writeMem(0x9d79, { 0x3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc6c2, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d79));
        // 03 0129
        gbc.setState(0xccdb, 0x3999, 0x6720, 0x5f6a, 0x61d9, 0x40e2, 0x0, 0x0);
        gbc.writeMem(0xccdb, { 0x3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0xccdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xccdb));
        // 03 012A
        gbc.setState(0x66fa, 0x3376, 0xe050, 0x4218, 0x351f, 0x5ef8, 0x1, 0x0);
        gbc.writeMem(0x66fa, { 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0x66fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 012B
        gbc.setState(0x599e, 0xf307, 0x8210, 0xbf87, 0x1171, 0x8916, 0x1, 0x1);
        gbc.writeMem(0x599e, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf307, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 012C
        gbc.setState(0x714c, 0xcd30, 0xa390, 0x22b5, 0x955a, 0xea2b, 0x1, 0x0);
        gbc.writeMem(0x714c, { 0x3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcd30, gbc.sp());
        EXPECT(0x714d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 012D
        gbc.setState(0x4fe5, 0xfa7f, 0x17a0, 0x28b9, 0x26db, 0x18d0, 0x1, 0x0);
        gbc.writeMem(0x4fe5, { 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0x4fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 012E
        gbc.setState(0xc72f, 0xc687, 0xb590, 0xc7f7, 0x8b25, 0x37f2, 0x0, 0x0);
        gbc.writeMem(0xc72f, { 0x3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0xc730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc72f));
        // 03 012F
        gbc.setState(0xc40d, 0x7b03, 0x8420, 0x6da7, 0x542b, 0x4a83, 0x0, 0x0);
        gbc.writeMem(0xc40d, { 0x3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0xc40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc40d));
        // 03 0130
        gbc.setState(0x2c1b, 0x8ec, 0xf3f0, 0x6a14, 0x7ce9, 0x655, 0x0, 0x0);
        gbc.writeMem(0x2c1b, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8ec, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0131
        gbc.setState(0x991c, 0x3727, 0x6480, 0x26f5, 0x61bd, 0x6a1, 0x0, 0x1);
        gbc.writeMem(0x991c, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3727, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x991c));
        // 03 0133
        gbc.setState(0x38a9, 0xacfb, 0x8770, 0x2e25, 0x96f9, 0x88a4, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0x3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0134
        gbc.setState(0xe155, 0x3bcb, 0xeb90, 0x9593, 0xc8c9, 0x9f97, 0x1, 0x1);
        gbc.writeMem(0xe155, { 0x3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0xe156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe155));
        // 03 0135
        gbc.setState(0x1dd0, 0xdf6a, 0x1400, 0x7eb4, 0xb6be, 0xb337, 0x0, 0x0);
        gbc.writeMem(0x1dd0, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0136
        gbc.setState(0x9446, 0xe025, 0xe390, 0x7e56, 0x3803, 0x47ea, 0x1, 0x1);
        gbc.writeMem(0x9446, { 0x3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9446));
        // 03 0138
        gbc.setState(0x9823, 0x56d9, 0x1190, 0x5923, 0xb00, 0xe16, 0x0, 0x1);
        gbc.writeMem(0x9823, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x56d9, gbc.sp());
        EXPECT(0x9824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9823));
        // 03 0139
        gbc.setState(0xad15, 0xcf7c, 0x3770, 0xa89e, 0xb1c4, 0x7acb, 0x0, 0x0);
        gbc.writeMem(0xad15, { 0x3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xad15));
        // 03 013A
        gbc.setState(0xb9a1, 0xc750, 0xff90, 0x3d01, 0xf051, 0x4b2f, 0x0, 0x0);
        gbc.writeMem(0xb9a1, { 0x3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0xb9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb9a1));
        // 03 013B
        gbc.setState(0xa98b, 0x8c2d, 0x9180, 0x33c5, 0x7d27, 0x2707, 0x1, 0x1);
        gbc.writeMem(0xa98b, { 0x3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8c2d, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa98b));
        // 03 013C
        gbc.setState(0x1847, 0x6480, 0x2750, 0xb483, 0xc8ed, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x1847, { 0x3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 013D
        gbc.setState(0xd3fc, 0x55ae, 0x9d30, 0xb0ed, 0x13a7, 0x72c5, 0x0, 0x0);
        gbc.writeMem(0xd3fc, { 0x3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x55ae, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3fc));
        // 03 013E
        gbc.setState(0x8f7b, 0xae9d, 0x68b0, 0x8fec, 0xe312, 0x9851, 0x1, 0x0);
        gbc.writeMem(0x8f7b, { 0x3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xae9d, gbc.sp());
        EXPECT(0x8f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8f7b));
        // 03 013F
        gbc.setState(0xda21, 0x4fc2, 0xa870, 0x8880, 0xc99a, 0xe542, 0x1, 0x1);
        gbc.writeMem(0xda21, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda21));
        // 03 0140
        gbc.setState(0x754f, 0x11bd, 0x6b70, 0x7c50, 0x8eeb, 0x8eba, 0x0, 0x0);
        gbc.writeMem(0x754f, { 0x3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0x7550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0141
        gbc.setState(0xdf1c, 0xdfc9, 0x2a20, 0xfb66, 0xd57b, 0xb042, 0x0, 0x0);
        gbc.writeMem(0xdf1c, { 0x3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0xdf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdf1c));
        // 03 0142
        gbc.setState(0x357c, 0xae44, 0x74f0, 0x6761, 0xddb3, 0xbde3, 0x0, 0x0);
        gbc.writeMem(0x357c, { 0x3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0143
        gbc.setState(0x8f27, 0x5e24, 0xa280, 0xac5b, 0x81f0, 0x9c24, 0x1, 0x0);
        gbc.writeMem(0x8f27, { 0x3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5e24, gbc.sp());
        EXPECT(0x8f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8f27));
        // 03 0144
        gbc.setState(0x171, 0x72d5, 0x4290, 0xd106, 0x85cf, 0xf26b, 0x1, 0x1);
        gbc.writeMem(0x171, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0145
        gbc.setState(0xd64d, 0xd0ee, 0xf600, 0x92b4, 0x150e, 0xd0de, 0x0, 0x0);
        gbc.writeMem(0xd64d, { 0x3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd0ee, gbc.sp());
        EXPECT(0xd64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd64d));
        // 03 0146
        gbc.setState(0xe00a, 0x125d, 0x7e40, 0xa286, 0xc205, 0x14e2, 0x0, 0x0);
        gbc.writeMem(0xe00a, { 0x3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe00a));
        // 03 0147
        gbc.setState(0xb8bf, 0x5707, 0x21c0, 0x4d9, 0x6b22, 0xd12e, 0x1, 0x1);
        gbc.writeMem(0xb8bf, { 0x3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb8bf));
        // 03 0148
        gbc.setState(0x27c9, 0xaa96, 0xfc10, 0x9906, 0x47bd, 0xfe44, 0x1, 0x0);
        gbc.writeMem(0x27c9, { 0x3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0x27ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0149
        gbc.setState(0x7565, 0x88aa, 0x45c0, 0xa72b, 0x852f, 0xdb3d, 0x0, 0x0);
        gbc.writeMem(0x7565, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x88aa, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 014B
        gbc.setState(0x5add, 0x67b9, 0x5e30, 0xf4a3, 0x5735, 0xa7eb, 0x0, 0x1);
        gbc.writeMem(0x5add, { 0x3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0x5ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 014C
        gbc.setState(0x6c52, 0xf585, 0x64f0, 0x6c93, 0xb22c, 0xeff4, 0x0, 0x1);
        gbc.writeMem(0x6c52, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf585, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 014D
        gbc.setState(0x6971, 0x2748, 0x3f0, 0x50f9, 0x307f, 0xf6a7, 0x0, 0x1);
        gbc.writeMem(0x6971, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2748, gbc.sp());
        EXPECT(0x6972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 014E
        gbc.setState(0xe4a1, 0x446e, 0x1210, 0x5106, 0xf1b7, 0x77e8, 0x1, 0x0);
        gbc.writeMem(0xe4a1, { 0x3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x446e, gbc.sp());
        EXPECT(0xe4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe4a1));
        // 03 014F
        gbc.setState(0xd616, 0x7b85, 0xb150, 0x1d5, 0xf993, 0xf746, 0x1, 0x0);
        gbc.writeMem(0xd616, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7b85, gbc.sp());
        EXPECT(0xd617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd616));
        // 03 0150
        gbc.setState(0x1f44, 0x54de, 0x5fd0, 0xe821, 0xd79b, 0xcff9, 0x1, 0x0);
        gbc.writeMem(0x1f44, { 0x3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x54de, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0151
        gbc.setState(0x15ca, 0xad95, 0x6c00, 0x37a6, 0x6a73, 0x34fb, 0x0, 0x1);
        gbc.writeMem(0x15ca, { 0x3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xad95, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0152
        gbc.setState(0xb720, 0x2092, 0xc30, 0x8fb5, 0x944f, 0x8057, 0x0, 0x1);
        gbc.writeMem(0xb720, { 0x3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb720));
        // 03 0153
        gbc.setState(0x7a8a, 0xa675, 0xa5a0, 0x8e16, 0xf9b5, 0x334b, 0x0, 0x1);
        gbc.writeMem(0x7a8a, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x7a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0154
        gbc.setState(0x975b, 0x524e, 0xa170, 0xb6c0, 0xdbe0, 0xd103, 0x0, 0x1);
        gbc.writeMem(0x975b, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x524e, gbc.sp());
        EXPECT(0x975c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x975b));
        // 03 0155
        gbc.setState(0xb816, 0xec29, 0x9310, 0x31e8, 0x4c53, 0x9be2, 0x0, 0x0);
        gbc.writeMem(0xb816, { 0x3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb816));
        // 03 0156
        gbc.setState(0x84e0, 0xca03, 0xb430, 0x205c, 0x4841, 0xf2c5, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0x3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0x84e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x84e0));
        // 03 0157
        gbc.setState(0x4923, 0x5be0, 0x9860, 0x17e6, 0x3ee, 0xeeed, 0x0, 0x0);
        gbc.writeMem(0x4923, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5be0, gbc.sp());
        EXPECT(0x4924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0158
        gbc.setState(0xece8, 0xa792, 0x5980, 0xb558, 0x7e71, 0xe295, 0x0, 0x1);
        gbc.writeMem(0xece8, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0xece9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xece8));
        // 03 0159
        gbc.setState(0xcc9a, 0x6e44, 0x7710, 0xe93c, 0xfd20, 0x95d5, 0x1, 0x0);
        gbc.writeMem(0xcc9a, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e44, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcc9a));
        // 03 015A
        gbc.setState(0x77e5, 0x303c, 0x6510, 0x14ef, 0x967e, 0xe27d, 0x1, 0x1);
        gbc.writeMem(0x77e5, { 0x3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x303c, gbc.sp());
        EXPECT(0x77e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 015B
        gbc.setState(0xc5ae, 0xd6e2, 0x8640, 0x7db, 0x247c, 0xb93a, 0x1, 0x1);
        gbc.writeMem(0xc5ae, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd6e2, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc5ae));
        // 03 015C
        gbc.setState(0x112c, 0x5360, 0x3e60, 0x91d3, 0xd1c3, 0x106f, 0x1, 0x1);
        gbc.writeMem(0x112c, { 0x3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5360, gbc.sp());
        EXPECT(0x112d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 015D
        gbc.setState(0x211c, 0xdd70, 0xa920, 0xefc1, 0x28c1, 0x651f, 0x1, 0x0);
        gbc.writeMem(0x211c, { 0x3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdd70, gbc.sp());
        EXPECT(0x211d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 015F
        gbc.setState(0xce34, 0x6db0, 0xd3c0, 0x8898, 0x8c77, 0x8f7a, 0x1, 0x0);
        gbc.writeMem(0xce34, { 0x3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6db0, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xce34));
        // 03 0160
        gbc.setState(0x6334, 0x4a20, 0x2af0, 0x5c2e, 0x6528, 0x425e, 0x0, 0x0);
        gbc.writeMem(0x6334, { 0x3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a20, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0161
        gbc.setState(0x53f0, 0x553e, 0x4c20, 0xfac0, 0x43bf, 0x3c80, 0x0, 0x1);
        gbc.writeMem(0x53f0, { 0x3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0162
        gbc.setState(0x7eac, 0x5de1, 0x9b0, 0x8571, 0x512e, 0xd68b, 0x0, 0x0);
        gbc.writeMem(0x7eac, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5de1, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0163
        gbc.setState(0xd13c, 0xe630, 0xf10, 0x41c6, 0x59c9, 0xe086, 0x1, 0x1);
        gbc.writeMem(0xd13c, { 0x3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd13c));
        // 03 0164
        gbc.setState(0x7c27, 0x16bd, 0xd9b0, 0x5a33, 0x33f4, 0x9eca, 0x0, 0x1);
        gbc.writeMem(0x7c27, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x16bd, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0165
        gbc.setState(0x51e2, 0xb169, 0x5e50, 0xe45d, 0xd452, 0x8283, 0x0, 0x0);
        gbc.writeMem(0x51e2, { 0x3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb169, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0166
        gbc.setState(0x30dc, 0x23a2, 0x25c0, 0xd0d0, 0x423f, 0x96f9, 0x1, 0x0);
        gbc.writeMem(0x30dc, { 0x3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23a2, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0167
        gbc.setState(0x13fa, 0xb599, 0x2db0, 0x4d03, 0x6c52, 0x43f4, 0x1, 0x1);
        gbc.writeMem(0x13fa, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0168
        gbc.setState(0x3502, 0x7c93, 0x39f0, 0x993b, 0x614b, 0x9de2, 0x0, 0x0);
        gbc.writeMem(0x3502, { 0x3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0169
        gbc.setState(0x31a, 0x703, 0xbaa0, 0x3ae7, 0xaf36, 0xe2ec, 0x0, 0x0);
        gbc.writeMem(0x31a, { 0x3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 016A
        gbc.setState(0x9ddd, 0x6e0c, 0x7930, 0x3ca2, 0x1450, 0x2a99, 0x0, 0x1);
        gbc.writeMem(0x9ddd, { 0x3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6e0c, gbc.sp());
        EXPECT(0x9dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9ddd));
        // 03 016B
        gbc.setState(0x184f, 0xb0, 0x8de0, 0x6f08, 0xdd37, 0x5b35, 0x1, 0x1);
        gbc.writeMem(0x184f, { 0x3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0x1850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 016C
        gbc.setState(0x9cfc, 0x2035, 0xb1e0, 0xb6e7, 0x9094, 0x8549, 0x1, 0x0);
        gbc.writeMem(0x9cfc, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2035, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9cfc));
        // 03 016D
        gbc.setState(0xb9f3, 0xe266, 0x9e00, 0x2ce4, 0x5292, 0x7641, 0x1, 0x1);
        gbc.writeMem(0xb9f3, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb9f3));
        // 03 016E
        gbc.setState(0xef7, 0x5312, 0xb0b0, 0xe166, 0x31e7, 0xca39, 0x1, 0x1);
        gbc.writeMem(0xef7, { 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5312, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 016F
        gbc.setState(0x70e7, 0xa1e1, 0xec70, 0x49a4, 0x57ad, 0xd1eb, 0x1, 0x1);
        gbc.writeMem(0x70e7, { 0x3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa1e1, gbc.sp());
        EXPECT(0x70e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0170
        gbc.setState(0xd40e, 0xf03f, 0x4080, 0xb432, 0x5ad, 0x9b82, 0x1, 0x0);
        gbc.writeMem(0xd40e, { 0x3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf03f, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd40e));
        // 03 0173
        gbc.setState(0x3c8a, 0xee66, 0x3250, 0xa803, 0x7a0e, 0x7d37, 0x1, 0x1);
        gbc.writeMem(0x3c8a, { 0x3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee66, gbc.sp());
        EXPECT(0x3c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0174
        gbc.setState(0xfce, 0xb1e4, 0xa3f0, 0x6d82, 0xea5d, 0x1556, 0x1, 0x0);
        gbc.writeMem(0xfce, { 0x3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb1e4, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0175
        gbc.setState(0x6249, 0x4249, 0xe510, 0xaadf, 0x9ba, 0x9820, 0x0, 0x0);
        gbc.writeMem(0x6249, { 0x3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4249, gbc.sp());
        EXPECT(0x624a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0176
        gbc.setState(0x6dd7, 0x2bd8, 0xce70, 0x514c, 0x78ae, 0x4123, 0x0, 0x1);
        gbc.writeMem(0x6dd7, { 0x3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0177
        gbc.setState(0x960c, 0xdba5, 0xddf0, 0x9bb, 0x46bb, 0xb2dd, 0x0, 0x0);
        gbc.writeMem(0x960c, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdba5, gbc.sp());
        EXPECT(0x960d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x960c));
        // 03 0178
        gbc.setState(0x16b6, 0x388c, 0x8fd0, 0x7ae0, 0xf1c3, 0xcae2, 0x1, 0x0);
        gbc.writeMem(0x16b6, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x388c, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 017A
        gbc.setState(0x68a, 0xaa70, 0x530, 0xb1c6, 0x3ef8, 0x8c96, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0x3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaa70, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 017B
        gbc.setState(0x2a23, 0xd958, 0xe200, 0xe013, 0x4e95, 0x499a, 0x1, 0x0);
        gbc.writeMem(0x2a23, { 0x3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd958, gbc.sp());
        EXPECT(0x2a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 017D
        gbc.setState(0x97a7, 0x91d8, 0xb2f0, 0x2c31, 0xf582, 0xa25b, 0x1, 0x1);
        gbc.writeMem(0x97a7, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x91d8, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x97a7));
        // 03 017E
        gbc.setState(0xe69b, 0x5864, 0xf0c0, 0x166c, 0x2bb, 0xf49, 0x1, 0x0);
        gbc.writeMem(0xe69b, { 0x3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0xe69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe69b));
        // 03 017F
        gbc.setState(0xd593, 0xd2f0, 0xe350, 0x1061, 0x1e2e, 0x9083, 0x1, 0x1);
        gbc.writeMem(0xd593, { 0x3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd2f0, gbc.sp());
        EXPECT(0xd594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd593));
        // 03 0180
        gbc.setState(0x65f8, 0x1555, 0xa310, 0xa1f5, 0x8c33, 0xa655, 0x0, 0x1);
        gbc.writeMem(0x65f8, { 0x3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0181
        gbc.setState(0x4679, 0x9fb2, 0x83d0, 0xb93c, 0x9792, 0x1a46, 0x0, 0x0);
        gbc.writeMem(0x4679, { 0x3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0182
        gbc.setState(0x4dcf, 0x28c8, 0xc4b0, 0x10fb, 0xd77d, 0xf5ba, 0x1, 0x0);
        gbc.writeMem(0x4dcf, { 0x3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0183
        gbc.setState(0xd4c5, 0x65eb, 0xba90, 0xe200, 0xee52, 0x923c, 0x1, 0x0);
        gbc.writeMem(0xd4c5, { 0x3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x65eb, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd4c5));
        // 03 0184
        gbc.setState(0xb9e0, 0x831f, 0x6c60, 0x584, 0x72be, 0x74d2, 0x1, 0x0);
        gbc.writeMem(0xb9e0, { 0x3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x831f, gbc.sp());
        EXPECT(0xb9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb9e0));
        // 03 0185
        gbc.setState(0x75c5, 0xb442, 0x8920, 0x3191, 0xe762, 0x84b7, 0x0, 0x1);
        gbc.writeMem(0x75c5, { 0x3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0186
        gbc.setState(0xcb44, 0x56a, 0x9ed0, 0xa4e2, 0x5b50, 0xb73e, 0x1, 0x1);
        gbc.writeMem(0xcb44, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x56a, gbc.sp());
        EXPECT(0xcb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcb44));
        // 03 0187
        gbc.setState(0x34f6, 0xfc68, 0xd940, 0x3dfd, 0x1963, 0x9d3b, 0x0, 0x0);
        gbc.writeMem(0x34f6, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfc68, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0189
        gbc.setState(0x62d6, 0xc83, 0x23e0, 0xf7a5, 0x3aca, 0x59bc, 0x0, 0x1);
        gbc.writeMem(0x62d6, { 0x3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 018A
        gbc.setState(0x4ac, 0x4f37, 0x5940, 0x52b6, 0xd5da, 0x2e39, 0x1, 0x1);
        gbc.writeMem(0x4ac, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 018B
        gbc.setState(0xbc5b, 0x3ab0, 0x1000, 0x52cf, 0x7a8f, 0x48ff, 0x1, 0x0);
        gbc.writeMem(0xbc5b, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3ab0, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbc5b));
        // 03 018C
        gbc.setState(0x5ace, 0xb8b7, 0xb70, 0x3f87, 0x3c53, 0xf69d, 0x1, 0x0);
        gbc.writeMem(0x5ace, { 0x3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x5acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 018D
        gbc.setState(0x5bd2, 0x4fe6, 0xf610, 0xc169, 0x4f4c, 0x1c6b, 0x1, 0x1);
        gbc.writeMem(0x5bd2, { 0x3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4fe6, gbc.sp());
        EXPECT(0x5bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 018E
        gbc.setState(0xcf2b, 0x1c80, 0x6940, 0xcf34, 0x7b84, 0xfec4, 0x1, 0x1);
        gbc.writeMem(0xcf2b, { 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcf2b));
        // 03 018F
        gbc.setState(0x869, 0xfeba, 0x7de0, 0xdbae, 0xe1c5, 0x185c, 0x0, 0x0);
        gbc.writeMem(0x869, { 0x3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfeba, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0191
        gbc.setState(0x814f, 0x2368, 0x5a10, 0x3ae7, 0x9065, 0xab77, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0x3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2368, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x814f));
        // 03 0192
        gbc.setState(0x8fc, 0x946d, 0x5ab0, 0xb804, 0x2caf, 0x3a7e, 0x0, 0x0);
        gbc.writeMem(0x8fc, { 0x3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0193
        gbc.setState(0x33e9, 0x2316, 0xad0, 0xf50a, 0x73b5, 0x987c, 0x0, 0x0);
        gbc.writeMem(0x33e9, { 0x3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0194
        gbc.setState(0x8bb4, 0x29aa, 0xb060, 0x88a9, 0x1cab, 0x1c29, 0x0, 0x1);
        gbc.writeMem(0x8bb4, { 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x8bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8bb4));
        // 03 0195
        gbc.setState(0x9826, 0x7d7f, 0x4480, 0xf494, 0xdf4b, 0xc25a, 0x0, 0x1);
        gbc.writeMem(0x9826, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9826));
        // 03 0196
        gbc.setState(0x7238, 0x2dd2, 0xcfd0, 0x1510, 0xc296, 0xa30f, 0x0, 0x0);
        gbc.writeMem(0x7238, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2dd2, gbc.sp());
        EXPECT(0x7239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0198
        gbc.setState(0x55f2, 0x2982, 0xad50, 0x6896, 0xb597, 0x25e7, 0x0, 0x1);
        gbc.writeMem(0x55f2, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2982, gbc.sp());
        EXPECT(0x55f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0199
        gbc.setState(0xc846, 0x67dd, 0x85b0, 0x3462, 0xaf92, 0x1dd5, 0x0, 0x1);
        gbc.writeMem(0xc846, { 0x3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc846));
        // 03 019A
        gbc.setState(0x7291, 0xb865, 0x1150, 0x83c9, 0xfa95, 0x5df2, 0x0, 0x1);
        gbc.writeMem(0x7291, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb865, gbc.sp());
        EXPECT(0x7292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 019B
        gbc.setState(0x931c, 0x436b, 0x6910, 0xda85, 0xf7a7, 0x654b, 0x0, 0x1);
        gbc.writeMem(0x931c, { 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x931c));
        // 03 019C
        gbc.setState(0x3891, 0xcc4, 0x1660, 0xbb90, 0xbb18, 0x8cba, 0x0, 0x1);
        gbc.writeMem(0x3891, { 0x3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0x3892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 019D
        gbc.setState(0xee8f, 0x4442, 0x5410, 0xb41f, 0xa161, 0xd4dc, 0x1, 0x1);
        gbc.writeMem(0xee8f, { 0x3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0xee90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xee8f));
        // 03 019E
        gbc.setState(0xe919, 0x462a, 0x9c50, 0x7f99, 0x46ce, 0xa965, 0x0, 0x1);
        gbc.writeMem(0xe919, { 0x3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x462a, gbc.sp());
        EXPECT(0xe91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe919));
        // 03 019F
        gbc.setState(0x4903, 0xb3a1, 0xe750, 0x29d5, 0xce35, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x4903, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb3a1, gbc.sp());
        EXPECT(0x4904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01A0
        gbc.setState(0x7362, 0x5e08, 0xe2e0, 0x78a3, 0x7ff0, 0x274c, 0x1, 0x0);
        gbc.writeMem(0x7362, { 0x3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x7363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01A1
        gbc.setState(0xb4b9, 0x2b30, 0xf450, 0x576d, 0xdcf3, 0xc237, 0x0, 0x1);
        gbc.writeMem(0xb4b9, { 0x3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0xb4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb4b9));
        // 03 01A2
        gbc.setState(0x24e, 0x40dd, 0xbfe0, 0xde5d, 0x87a, 0xaedf, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0x24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01A3
        gbc.setState(0x2a3f, 0x4376, 0x46a0, 0x507b, 0x2692, 0x491e, 0x1, 0x0);
        gbc.writeMem(0x2a3f, { 0x3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4376, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01A4
        gbc.setState(0x971d, 0x2ece, 0x60c0, 0x5d15, 0x8c66, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0x971d, { 0x3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2ece, gbc.sp());
        EXPECT(0x971e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x971d));
        // 03 01A5
        gbc.setState(0x4ebd, 0x121c, 0x1650, 0x9a6c, 0x9c89, 0x8a2, 0x1, 0x1);
        gbc.writeMem(0x4ebd, { 0x3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0x4ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01A6
        gbc.setState(0x593c, 0x886f, 0x10e0, 0x5e3d, 0x3f90, 0x28b, 0x0, 0x1);
        gbc.writeMem(0x593c, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0x593d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01A7
        gbc.setState(0x1b68, 0xa9c3, 0xfba0, 0x115f, 0x3726, 0xd247, 0x0, 0x0);
        gbc.writeMem(0x1b68, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01A8
        gbc.setState(0xe067, 0x1c6c, 0x2f00, 0x1013, 0x5337, 0x7588, 0x1, 0x1);
        gbc.writeMem(0xe067, { 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xe068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe067));
        // 03 01AA
        gbc.setState(0x3f1d, 0x2b6e, 0x8f20, 0x187e, 0x89a4, 0xff21, 0x0, 0x0);
        gbc.writeMem(0x3f1d, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x3f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01AB
        gbc.setState(0xca0c, 0x1c24, 0x90e0, 0xf28d, 0x8606, 0x9ba9, 0x0, 0x0);
        gbc.writeMem(0xca0c, { 0x3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c24, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xca0c));
        // 03 01AC
        gbc.setState(0x86c1, 0xc0f4, 0xb350, 0xa91a, 0xc5e6, 0xc5b0, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0x3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x86c1));
        // 03 01AD
        gbc.setState(0x8c7f, 0x55c0, 0xe470, 0x9f09, 0x33b1, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0x8c7f, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x55c0, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c7f));
        // 03 01AE
        gbc.setState(0xc654, 0xea12, 0xc1d0, 0x7240, 0x3afb, 0x62a7, 0x1, 0x1);
        gbc.writeMem(0xc654, { 0x3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xea12, gbc.sp());
        EXPECT(0xc655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc654));
        // 03 01AF
        gbc.setState(0x36ab, 0x3891, 0x2de0, 0x1c8f, 0x5f1, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0x36ab, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0x36ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01B0
        gbc.setState(0xc27f, 0x3907, 0xf9f0, 0xd539, 0x3a7f, 0xdc4b, 0x1, 0x0);
        gbc.writeMem(0xc27f, { 0x3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3907, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc27f));
        // 03 01B1
        gbc.setState(0x33b9, 0xbf1b, 0x6020, 0x52da, 0xc4d9, 0xb16b, 0x0, 0x0);
        gbc.writeMem(0x33b9, { 0x3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbf1b, gbc.sp());
        EXPECT(0x33ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01B2
        gbc.setState(0xd84d, 0xb331, 0xf280, 0xde1d, 0x4083, 0xd210, 0x0, 0x1);
        gbc.writeMem(0xd84d, { 0x3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb331, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd84d));
        // 03 01B3
        gbc.setState(0x5498, 0xf432, 0x80a0, 0xf2b, 0x8b8f, 0xe189, 0x0, 0x1);
        gbc.writeMem(0x5498, { 0x3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01B4
        gbc.setState(0xde99, 0x265a, 0x9f40, 0x67df, 0x96b9, 0x5c68, 0x1, 0x1);
        gbc.writeMem(0xde99, { 0x3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x265a, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xde99));
        // 03 01B5
        gbc.setState(0xaad0, 0x112b, 0xa430, 0xa4ad, 0x74c7, 0xd369, 0x0, 0x1);
        gbc.writeMem(0xaad0, { 0x3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x112b, gbc.sp());
        EXPECT(0xaad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaad0));
        // 03 01B6
        gbc.setState(0x68d0, 0xde4a, 0xd40, 0x2d4, 0x1ad1, 0x20c4, 0x0, 0x0);
        gbc.writeMem(0x68d0, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde4a, gbc.sp());
        EXPECT(0x68d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01B7
        gbc.setState(0x15d0, 0x7563, 0xdc80, 0x6b25, 0x9614, 0xa18f, 0x0, 0x0);
        gbc.writeMem(0x15d0, { 0x3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7563, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01B8
        gbc.setState(0xb726, 0x60c0, 0xcec0, 0x3ad0, 0xe208, 0xe9a6, 0x1, 0x0);
        gbc.writeMem(0xb726, { 0x3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x60c0, gbc.sp());
        EXPECT(0xb727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb726));
        // 03 01BA
        gbc.setState(0x139b, 0xfb62, 0x4f30, 0xdb2e, 0x53e5, 0x8962, 0x1, 0x0);
        gbc.writeMem(0x139b, { 0x3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfb62, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01BC
        gbc.setState(0xa180, 0xd725, 0x97c0, 0x6b21, 0x4f9d, 0xeffc, 0x0, 0x1);
        gbc.writeMem(0xa180, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0xa181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa180));
        // 03 01BD
        gbc.setState(0xbd8f, 0x11c7, 0xe910, 0x6470, 0xa289, 0x439e, 0x1, 0x1);
        gbc.writeMem(0xbd8f, { 0x3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x11c7, gbc.sp());
        EXPECT(0xbd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbd8f));
        // 03 01BE
        gbc.setState(0xc873, 0xba30, 0xbee0, 0x7ff0, 0x2d19, 0x30ef, 0x1, 0x0);
        gbc.writeMem(0xc873, { 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xba30, gbc.sp());
        EXPECT(0xc874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc873));
        // 03 01BF
        gbc.setState(0xc636, 0x73b1, 0x6530, 0xdff4, 0x788e, 0xc322, 0x0, 0x1);
        gbc.writeMem(0xc636, { 0x3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0xc637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc636));
        // 03 01C0
        gbc.setState(0x92fd, 0x8926, 0xabb0, 0x1bb0, 0x57cb, 0xc973, 0x0, 0x1);
        gbc.writeMem(0x92fd, { 0x3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0x92fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x92fd));
        // 03 01C1
        gbc.setState(0xcdeb, 0x4e68, 0x9c10, 0x227a, 0x8e22, 0x533c, 0x1, 0x1);
        gbc.writeMem(0xcdeb, { 0x3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4e68, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcdeb));
        // 03 01C2
        gbc.setState(0xccc9, 0x7550, 0xb110, 0x6b26, 0x3f10, 0x9f38, 0x1, 0x1);
        gbc.writeMem(0xccc9, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xccc9));
        // 03 01C3
        gbc.setState(0x7d2c, 0x19b2, 0x4560, 0x1803, 0xb17a, 0x7da0, 0x0, 0x1);
        gbc.writeMem(0x7d2c, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0x7d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01C4
        gbc.setState(0x8eb1, 0xa631, 0xb770, 0x810e, 0x56a9, 0x371e, 0x0, 0x1);
        gbc.writeMem(0x8eb1, { 0x3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa631, gbc.sp());
        EXPECT(0x8eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8eb1));
        // 03 01C5
        gbc.setState(0x4cfd, 0x2e9a, 0x1820, 0x7348, 0xdde4, 0x10d4, 0x0, 0x0);
        gbc.writeMem(0x4cfd, { 0x3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01C6
        gbc.setState(0xd07e, 0xca02, 0x7e80, 0x4018, 0x59d8, 0x90a6, 0x0, 0x1);
        gbc.writeMem(0xd07e, { 0x3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xca02, gbc.sp());
        EXPECT(0xd07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd07e));
        // 03 01C7
        gbc.setState(0x37ea, 0x6a3a, 0x3380, 0x4e6e, 0x8c1c, 0x2d1e, 0x1, 0x1);
        gbc.writeMem(0x37ea, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01C8
        gbc.setState(0xa190, 0x1b67, 0xb1b0, 0x637, 0x897, 0x3b82, 0x1, 0x0);
        gbc.writeMem(0xa190, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1b67, gbc.sp());
        EXPECT(0xa191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa190));
        // 03 01C9
        gbc.setState(0xa6d5, 0xb6bb, 0xad90, 0x49c7, 0x3fd2, 0xce88, 0x0, 0x0);
        gbc.writeMem(0xa6d5, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb6bb, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa6d5));
        // 03 01CA
        gbc.setState(0x86f9, 0x622e, 0x7b90, 0x138d, 0xb695, 0x6c20, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0x3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x622e, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x86f9));
        // 03 01CB
        gbc.setState(0x4be5, 0x8f91, 0x7880, 0x4061, 0x36e3, 0x3b59, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0x3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8f91, gbc.sp());
        EXPECT(0x4be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01CC
        gbc.setState(0x6375, 0x19c2, 0x2690, 0xf74e, 0x4b17, 0x45d7, 0x1, 0x1);
        gbc.writeMem(0x6375, { 0x3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01CD
        gbc.setState(0x446b, 0xb9b2, 0x72f0, 0xcc6, 0xd033, 0xbc3, 0x0, 0x1);
        gbc.writeMem(0x446b, { 0x3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0x446c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01CE
        gbc.setState(0x88e, 0xed9d, 0x5000, 0x3f7a, 0xce9e, 0x7e90, 0x0, 0x0);
        gbc.writeMem(0x88e, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed9d, gbc.sp());
        EXPECT(0x88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01CF
        gbc.setState(0xa685, 0x9338, 0x14c0, 0x5442, 0xf994, 0xf139, 0x1, 0x0);
        gbc.writeMem(0xa685, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9338, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa685));
        // 03 01D0
        gbc.setState(0x1be6, 0x56a9, 0xe3f0, 0x55ab, 0xce4, 0x2c9d, 0x0, 0x1);
        gbc.writeMem(0x1be6, { 0x3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01D1
        gbc.setState(0x83b1, 0x7cfd, 0x4a00, 0x38ec, 0x7e32, 0xa724, 0x1, 0x1);
        gbc.writeMem(0x83b1, { 0x3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7cfd, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x83b1));
        // 03 01D3
        gbc.setState(0x8dde, 0xb9a7, 0xa270, 0x508c, 0xf579, 0x586f, 0x1, 0x0);
        gbc.writeMem(0x8dde, { 0x3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb9a7, gbc.sp());
        EXPECT(0x8ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8dde));
        // 03 01D4
        gbc.setState(0x183a, 0xaf42, 0x8060, 0x4e70, 0x182b, 0x601f, 0x0, 0x0);
        gbc.writeMem(0x183a, { 0x3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaf42, gbc.sp());
        EXPECT(0x183b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01D5
        gbc.setState(0x7d8c, 0xcab2, 0xad00, 0xfeef, 0xd95d, 0x2be5, 0x0, 0x0);
        gbc.writeMem(0x7d8c, { 0x3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0x7d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01D6
        gbc.setState(0xadc4, 0x9563, 0xaa60, 0xc1a7, 0xa484, 0x8884, 0x1, 0x1);
        gbc.writeMem(0xadc4, { 0x3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xadc4));
        // 03 01D7
        gbc.setState(0x722c, 0xaf38, 0x9980, 0x7527, 0x7b22, 0xeb2, 0x0, 0x1);
        gbc.writeMem(0x722c, { 0x3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaf38, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01D8
        gbc.setState(0xc4ef, 0xff44, 0x63c0, 0x8f2e, 0x7ae6, 0xafb0, 0x0, 0x0);
        gbc.writeMem(0xc4ef, { 0x3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0xc4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc4ef));
        // 03 01D9
        gbc.setState(0xe4c8, 0xcdf3, 0x82e0, 0x6c1e, 0xd59c, 0xa55f, 0x1, 0x1);
        gbc.writeMem(0xe4c8, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcdf3, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe4c8));
        // 03 01DA
        gbc.setState(0x90ef, 0x6f5a, 0xd970, 0x32bb, 0xd549, 0x45af, 0x1, 0x0);
        gbc.writeMem(0x90ef, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f5a, gbc.sp());
        EXPECT(0x90f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x90ef));
        // 03 01DB
        gbc.setState(0x5c93, 0x1985, 0x5d70, 0xfca1, 0xa5ac, 0x8445, 0x0, 0x0);
        gbc.writeMem(0x5c93, { 0x3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1985, gbc.sp());
        EXPECT(0x5c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01DC
        gbc.setState(0x51c, 0xcd25, 0x4ca0, 0xb9ed, 0xd135, 0x9838, 0x0, 0x0);
        gbc.writeMem(0x51c, { 0x3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcd25, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01DD
        gbc.setState(0x733e, 0xa7c6, 0x16c0, 0x24d0, 0x7450, 0x9741, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0x3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa7c6, gbc.sp());
        EXPECT(0x733f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01DE
        gbc.setState(0xefd4, 0xa048, 0x6c00, 0xccb8, 0xd3db, 0x332a, 0x1, 0x0);
        gbc.writeMem(0xefd4, { 0x3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xefd4));
        // 03 01DF
        gbc.setState(0x84c2, 0x9015, 0x6170, 0x9e07, 0xde2f, 0xcaaf, 0x0, 0x1);
        gbc.writeMem(0x84c2, { 0x3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9015, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x84c2));
        // 03 01E0
        gbc.setState(0xd713, 0xe3f8, 0x3130, 0xa540, 0xdd6d, 0xf772, 0x1, 0x0);
        gbc.writeMem(0xd713, { 0x3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd713));
        // 03 01E1
        gbc.setState(0xdf97, 0x359f, 0xa550, 0xf4ad, 0x28d, 0x5b57, 0x0, 0x1);
        gbc.writeMem(0xdf97, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0xdf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdf97));
        // 03 01E3
        gbc.setState(0x9129, 0x897a, 0x2b90, 0xa22a, 0x9aa9, 0x10a0, 0x1, 0x0);
        gbc.writeMem(0x9129, { 0x3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9129));
        // 03 01E4
        gbc.setState(0x4d6b, 0x8ef, 0x1190, 0x7c0, 0x2248, 0x8687, 0x0, 0x0);
        gbc.writeMem(0x4d6b, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ef, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01E5
        gbc.setState(0xa8ff, 0x6300, 0x5940, 0xb032, 0xa7ac, 0xfc0a, 0x1, 0x1);
        gbc.writeMem(0xa8ff, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6300, gbc.sp());
        EXPECT(0xa900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa8ff));
        // 03 01E6
        gbc.setState(0x1378, 0x5fa3, 0x3680, 0xd762, 0xc78, 0xffb7, 0x1, 0x0);
        gbc.writeMem(0x1378, { 0x3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5fa3, gbc.sp());
        EXPECT(0x1379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01E7
        gbc.setState(0x3372, 0x15f5, 0x8450, 0xf392, 0x697c, 0xa94a, 0x0, 0x0);
        gbc.writeMem(0x3372, { 0x3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0x3373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01E8
        gbc.setState(0x6032, 0x9740, 0x7030, 0x2ca6, 0xf0d3, 0x9f84, 0x1, 0x1);
        gbc.writeMem(0x6032, { 0x3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9740, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01E9
        gbc.setState(0x6661, 0x9257, 0x1330, 0x7e9b, 0x2131, 0xccae, 0x0, 0x0);
        gbc.writeMem(0x6661, { 0x3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01EA
        gbc.setState(0x40e6, 0xcbd6, 0xa070, 0x5da0, 0x9023, 0x783a, 0x0, 0x0);
        gbc.writeMem(0x40e6, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01EB
        gbc.setState(0x83af, 0x1e75, 0xa780, 0xbe05, 0x7419, 0x9b25, 0x0, 0x0);
        gbc.writeMem(0x83af, { 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0x83b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x83af));
        // 03 01EC
        gbc.setState(0xe40e, 0xc309, 0xf0c0, 0xbf3c, 0xda34, 0x5b6c, 0x1, 0x0);
        gbc.writeMem(0xe40e, { 0x3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc309, gbc.sp());
        EXPECT(0xe40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe40e));
        // 03 01ED
        gbc.setState(0x2390, 0x1145, 0x87b0, 0xb236, 0xeb9a, 0x6623, 0x0, 0x0);
        gbc.writeMem(0x2390, { 0x3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1145, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01EE
        gbc.setState(0x75e7, 0x391f, 0x7040, 0x57f, 0x130b, 0x3acb, 0x0, 0x0);
        gbc.writeMem(0x75e7, { 0x3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x75e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01EF
        gbc.setState(0x268, 0x69d8, 0xcdc0, 0x5abd, 0x1451, 0x82f5, 0x1, 0x0);
        gbc.writeMem(0x268, { 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x69d8, gbc.sp());
        EXPECT(0x269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01F0
        gbc.setState(0xcd3, 0x7448, 0x1460, 0x5ddb, 0x6536, 0x410, 0x1, 0x1);
        gbc.writeMem(0xcd3, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7448, gbc.sp());
        EXPECT(0xcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01F1
        gbc.setState(0x77cf, 0xce87, 0xfa00, 0xbf75, 0x35d, 0xcb24, 0x0, 0x0);
        gbc.writeMem(0x77cf, { 0x3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xce87, gbc.sp());
        EXPECT(0x77d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01F2
        gbc.setState(0xe7a3, 0xa789, 0x8f00, 0xb6d2, 0xe14e, 0x880c, 0x1, 0x0);
        gbc.writeMem(0xe7a3, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa789, gbc.sp());
        EXPECT(0xe7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe7a3));
        // 03 01F3
        gbc.setState(0x4760, 0x284e, 0x6880, 0xca2, 0x278b, 0x9048, 0x0, 0x1);
        gbc.writeMem(0x4760, { 0x3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01F4
        gbc.setState(0xabbd, 0x4f8b, 0x3230, 0x3b26, 0x1b16, 0x393b, 0x0, 0x1);
        gbc.writeMem(0xabbd, { 0x3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4f8b, gbc.sp());
        EXPECT(0xabbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xabbd));
        // 03 01F5
        gbc.setState(0x8c0a, 0xd159, 0x4c50, 0xf3a, 0x6fc7, 0xf275, 0x1, 0x0);
        gbc.writeMem(0x8c0a, { 0x3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd159, gbc.sp());
        EXPECT(0x8c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c0a));
        // 03 01F6
        gbc.setState(0xa1c3, 0xd5e3, 0xcb70, 0xd21, 0xa25f, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0xa1c3, { 0x3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd5e3, gbc.sp());
        EXPECT(0xa1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa1c3));
        // 03 01F7
        gbc.setState(0x7caa, 0x47f6, 0xfb70, 0x9b09, 0xebe3, 0xea2b, 0x1, 0x0);
        gbc.writeMem(0x7caa, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x47f6, gbc.sp());
        EXPECT(0x7cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 01F8
        gbc.setState(0x3f32, 0xa0e0, 0xfbc0, 0x55db, 0xa6c4, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x3f32, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa0e0, gbc.sp());
        EXPECT(0x3f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01F9
        gbc.setState(0x9cf, 0xc73, 0x2e20, 0x7d8c, 0x3e7f, 0x9011, 0x0, 0x0);
        gbc.writeMem(0x9cf, { 0x3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0x9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01FA
        gbc.setState(0xa81e, 0xccf3, 0x6470, 0x3efb, 0xed15, 0xe8a2, 0x0, 0x1);
        gbc.writeMem(0xa81e, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xccf3, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa81e));
        // 03 01FB
        gbc.setState(0x3780, 0x7c6, 0xbb20, 0x84d9, 0xb2bf, 0x3ceb, 0x1, 0x0);
        gbc.writeMem(0x3780, { 0x3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7c6, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01FC
        gbc.setState(0x2fc9, 0x1d40, 0xc440, 0x56ed, 0xa899, 0x49ef, 0x1, 0x1);
        gbc.writeMem(0x2fc9, { 0x3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1d40, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 01FE
        gbc.setState(0x8596, 0xd383, 0xe310, 0x1136, 0x51bd, 0xa495, 0x1, 0x0);
        gbc.writeMem(0x8596, { 0x3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd383, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8596));
        // 03 01FF
        gbc.setState(0x2a6b, 0x5d6c, 0x3330, 0x5cd1, 0x530, 0x40d9, 0x1, 0x0);
        gbc.writeMem(0x2a6b, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0x2a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0200
        gbc.setState(0xde14, 0x8555, 0x1a90, 0x596c, 0x9a46, 0x8e09, 0x0, 0x1);
        gbc.writeMem(0xde14, { 0x3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8555, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xde14));
        // 03 0201
        gbc.setState(0x40de, 0x99e4, 0xf2b0, 0xa319, 0x5eec, 0xa4be, 0x0, 0x0);
        gbc.writeMem(0x40de, { 0x3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x99e4, gbc.sp());
        EXPECT(0x40df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0202
        gbc.setState(0xc77a, 0xfdd0, 0x4980, 0xded0, 0x839e, 0x1f2a, 0x0, 0x0);
        gbc.writeMem(0xc77a, { 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfdd0, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc77a));
        // 03 0203
        gbc.setState(0x6321, 0xe429, 0xb290, 0x79d9, 0x53b7, 0xadf4, 0x1, 0x0);
        gbc.writeMem(0x6321, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe429, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0204
        gbc.setState(0x6ed3, 0x7b05, 0x9210, 0xe198, 0x38b8, 0xb3bb, 0x0, 0x1);
        gbc.writeMem(0x6ed3, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7b05, gbc.sp());
        EXPECT(0x6ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0205
        gbc.setState(0x73c5, 0x61a9, 0xb170, 0x3fa1, 0xed2c, 0x9099, 0x1, 0x1);
        gbc.writeMem(0x73c5, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x61a9, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0206
        gbc.setState(0x3b13, 0xe799, 0xed20, 0xf9e, 0xe6a4, 0x1990, 0x0, 0x0);
        gbc.writeMem(0x3b13, { 0x3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe799, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0207
        gbc.setState(0x688, 0x1ef1, 0x9ab0, 0xb526, 0xa53b, 0x187, 0x1, 0x1);
        gbc.writeMem(0x688, { 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0208
        gbc.setState(0x1bd2, 0xb2c6, 0x4f50, 0x42c9, 0x3f56, 0x65d8, 0x0, 0x1);
        gbc.writeMem(0x1bd2, { 0x3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb2c6, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0209
        gbc.setState(0x9d58, 0x1e28, 0x9b40, 0x51e2, 0xc542, 0x2a6e, 0x0, 0x1);
        gbc.writeMem(0x9d58, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1e28, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d58));
        // 03 020A
        gbc.setState(0xed0a, 0xb2d2, 0xbf70, 0xd738, 0xa6b0, 0x311d, 0x0, 0x0);
        gbc.writeMem(0xed0a, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0xed0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xed0a));
        // 03 020B
        gbc.setState(0x6094, 0x4cb8, 0x2f10, 0x58c3, 0xcc90, 0x6303, 0x0, 0x0);
        gbc.writeMem(0x6094, { 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4cb8, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 020C
        gbc.setState(0xb182, 0x96d8, 0xd30, 0x3915, 0x41fd, 0x8e9d, 0x1, 0x1);
        gbc.writeMem(0xb182, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0xb183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb182));
        // 03 020D
        gbc.setState(0x1781, 0x7411, 0x9bc0, 0x4952, 0xd239, 0x65cb, 0x1, 0x0);
        gbc.writeMem(0x1781, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7411, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 020E
        gbc.setState(0x7d85, 0x7294, 0xe610, 0x8feb, 0x9c12, 0x6153, 0x1, 0x0);
        gbc.writeMem(0x7d85, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7294, gbc.sp());
        EXPECT(0x7d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 020F
        gbc.setState(0x7894, 0x6e08, 0xfab0, 0x5d13, 0xa041, 0x7127, 0x0, 0x0);
        gbc.writeMem(0x7894, { 0x3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6e08, gbc.sp());
        EXPECT(0x7895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0210
        gbc.setState(0x5c53, 0xd623, 0x930, 0xee99, 0x944c, 0xbb84, 0x1, 0x1);
        gbc.writeMem(0x5c53, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd623, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0211
        gbc.setState(0x6145, 0x2e68, 0x1910, 0x4f8e, 0x95b7, 0x72b7, 0x0, 0x0);
        gbc.writeMem(0x6145, { 0x3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2e68, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0212
        gbc.setState(0x67ee, 0x5619, 0x1770, 0x3eb6, 0x20fe, 0x9444, 0x0, 0x1);
        gbc.writeMem(0x67ee, { 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5619, gbc.sp());
        EXPECT(0x67ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0213
        gbc.setState(0x6e62, 0x225c, 0x7850, 0x49d1, 0xfbc3, 0xc660, 0x0, 0x1);
        gbc.writeMem(0x6e62, { 0x3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x6e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0214
        gbc.setState(0x45fe, 0x54e1, 0xa520, 0xa2b1, 0xff2d, 0xc93f, 0x1, 0x0);
        gbc.writeMem(0x45fe, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x45ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0215
        gbc.setState(0x1b87, 0xa219, 0x3700, 0x8363, 0x1dce, 0x6aae, 0x1, 0x1);
        gbc.writeMem(0x1b87, { 0x3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa219, gbc.sp());
        EXPECT(0x1b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0216
        gbc.setState(0x9bd9, 0xea2c, 0x46f0, 0x8a6, 0xd19f, 0xe92a, 0x0, 0x1);
        gbc.writeMem(0x9bd9, { 0x3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0x9bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9bd9));
        // 03 0217
        gbc.setState(0xcdd, 0xdd54, 0xb290, 0xb6f, 0x1f7b, 0x606, 0x0, 0x0);
        gbc.writeMem(0xcdd, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0xcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0218
        gbc.setState(0xa280, 0x3c15, 0xa420, 0x8622, 0xedad, 0xa7d2, 0x0, 0x0);
        gbc.writeMem(0xa280, { 0x3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3c15, gbc.sp());
        EXPECT(0xa281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa280));
        // 03 0219
        gbc.setState(0x77ef, 0x23f4, 0x2270, 0x8ab4, 0xd62e, 0x411, 0x0, 0x1);
        gbc.writeMem(0x77ef, { 0x3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0x77f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 021A
        gbc.setState(0xd679, 0x5501, 0x3e80, 0x3bd0, 0x24f7, 0x9734, 0x1, 0x1);
        gbc.writeMem(0xd679, { 0x3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0xd67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd679));
        // 03 021B
        gbc.setState(0xd79f, 0xfaae, 0x62f0, 0x8ad, 0xea99, 0xfc75, 0x1, 0x1);
        gbc.writeMem(0xd79f, { 0x3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfaae, gbc.sp());
        EXPECT(0xd7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd79f));
        // 03 021C
        gbc.setState(0x8190, 0x6fbd, 0xb2f0, 0xe463, 0xa301, 0x484, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6fbd, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8190));
        // 03 021D
        gbc.setState(0x6f81, 0x8e18, 0x71a0, 0x947d, 0xba02, 0x44ed, 0x1, 0x0);
        gbc.writeMem(0x6f81, { 0x3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8e18, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 021E
        gbc.setState(0xb05d, 0x3953, 0x7020, 0xa803, 0xb06c, 0xe2e1, 0x1, 0x0);
        gbc.writeMem(0xb05d, { 0x3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb05d));
        // 03 021F
        gbc.setState(0xb076, 0xfcd4, 0x6230, 0x451, 0x9df7, 0x13de, 0x1, 0x0);
        gbc.writeMem(0xb076, { 0x3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfcd4, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb076));
        // 03 0220
        gbc.setState(0xd347, 0x581b, 0xb810, 0x1181, 0x1f52, 0xff4c, 0x1, 0x0);
        gbc.writeMem(0xd347, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x581b, gbc.sp());
        EXPECT(0xd348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd347));
        // 03 0222
        gbc.setState(0xd121, 0x371c, 0x640, 0x331, 0xcce9, 0x6885, 0x0, 0x1);
        gbc.writeMem(0xd121, { 0x3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x371c, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd121));
        // 03 0225
        gbc.setState(0xaeb5, 0x3d08, 0x8220, 0xda9d, 0x9926, 0x922a, 0x0, 0x0);
        gbc.writeMem(0xaeb5, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0xaeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaeb5));
        // 03 0226
        gbc.setState(0x734c, 0x2841, 0x9330, 0xb398, 0x7f51, 0xb842, 0x1, 0x1);
        gbc.writeMem(0x734c, { 0x3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0x734d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0227
        gbc.setState(0xe6c2, 0x7c6c, 0xb2d0, 0xb11f, 0xd827, 0xc968, 0x1, 0x0);
        gbc.writeMem(0xe6c2, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7c6c, gbc.sp());
        EXPECT(0xe6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe6c2));
        // 03 0229
        gbc.setState(0x35cb, 0x8475, 0x4430, 0x2e39, 0xbe99, 0xa208, 0x0, 0x1);
        gbc.writeMem(0x35cb, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8475, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 022A
        gbc.setState(0xdfd3, 0x8ba0, 0xd970, 0x4c6b, 0xf820, 0xdb67, 0x1, 0x1);
        gbc.writeMem(0xdfd3, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8ba0, gbc.sp());
        EXPECT(0xdfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdfd3));
        // 03 022B
        gbc.setState(0x3967, 0x8e69, 0x4210, 0x3f33, 0x2ac0, 0x2316, 0x1, 0x1);
        gbc.writeMem(0x3967, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e69, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 022C
        gbc.setState(0x81a8, 0xae40, 0xcea0, 0xe78c, 0x44a7, 0xd392, 0x0, 0x0);
        gbc.writeMem(0x81a8, { 0x3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xae40, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x81a8));
        // 03 022D
        gbc.setState(0xa8f, 0xa3de, 0x47e0, 0x2459, 0x553a, 0x17d9, 0x1, 0x0);
        gbc.writeMem(0xa8f, { 0x3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0xa90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 022E
        gbc.setState(0x446c, 0xb460, 0x6090, 0xc592, 0xc099, 0xd958, 0x0, 0x1);
        gbc.writeMem(0x446c, { 0x3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb460, gbc.sp());
        EXPECT(0x446d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 022F
        gbc.setState(0x3e87, 0xa790, 0xa990, 0xbbaa, 0xddc9, 0xdac4, 0x1, 0x1);
        gbc.writeMem(0x3e87, { 0x3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa790, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0230
        gbc.setState(0x144d, 0x298e, 0x7d20, 0x64fd, 0x4a88, 0x850e, 0x0, 0x0);
        gbc.writeMem(0x144d, { 0x3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x298e, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0231
        gbc.setState(0x9395, 0xe4f2, 0x4ea0, 0x6b55, 0x83b5, 0x74c8, 0x1, 0x1);
        gbc.writeMem(0x9395, { 0x3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0x9396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9395));
        // 03 0232
        gbc.setState(0x7fb3, 0x5f, 0x4520, 0xb490, 0xc4b1, 0xae9d, 0x0, 0x0);
        gbc.writeMem(0x7fb3, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5f, gbc.sp());
        EXPECT(0x7fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0233
        gbc.setState(0xd9fa, 0xf03e, 0x6e00, 0x773c, 0x6dc0, 0x65d4, 0x1, 0x1);
        gbc.writeMem(0xd9fa, { 0x3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf03e, gbc.sp());
        EXPECT(0xd9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd9fa));
        // 03 0234
        gbc.setState(0x9e2f, 0x2acd, 0x7c30, 0x7c46, 0x9a33, 0x15a3, 0x1, 0x1);
        gbc.writeMem(0x9e2f, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2acd, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9e2f));
        // 03 0235
        gbc.setState(0x6305, 0xbe3, 0xd810, 0xc4d3, 0x7f8c, 0x162e, 0x0, 0x1);
        gbc.writeMem(0x6305, { 0x3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbe3, gbc.sp());
        EXPECT(0x6306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0236
        gbc.setState(0x515a, 0xd55a, 0x4060, 0xd208, 0x2d65, 0xaad5, 0x1, 0x1);
        gbc.writeMem(0x515a, { 0x3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd55a, gbc.sp());
        EXPECT(0x515b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0237
        gbc.setState(0xe404, 0x720a, 0xf1d0, 0x72de, 0x2c3, 0xa274, 0x0, 0x0);
        gbc.writeMem(0xe404, { 0x3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x720a, gbc.sp());
        EXPECT(0xe405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe404));
        // 03 0238
        gbc.setState(0xa76f, 0x7a09, 0x2ba0, 0xa433, 0x6b82, 0x4d45, 0x1, 0x0);
        gbc.writeMem(0xa76f, { 0x3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0xa770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa76f));
        // 03 0239
        gbc.setState(0x8e1b, 0xb3ef, 0x3fa0, 0xce60, 0xcc, 0x2528, 0x0, 0x1);
        gbc.writeMem(0x8e1b, { 0x3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8e1b));
        // 03 023A
        gbc.setState(0x36ad, 0x5862, 0x8710, 0x7c66, 0x4b1a, 0xf32f, 0x0, 0x0);
        gbc.writeMem(0x36ad, { 0x3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5862, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 023B
        gbc.setState(0x4fb8, 0x2031, 0x4b40, 0xe539, 0x2daa, 0xddbb, 0x0, 0x0);
        gbc.writeMem(0x4fb8, { 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2031, gbc.sp());
        EXPECT(0x4fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 023C
        gbc.setState(0x27eb, 0x2f14, 0xd250, 0x1dc0, 0x75b2, 0xd15d, 0x1, 0x1);
        gbc.writeMem(0x27eb, { 0x3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2f14, gbc.sp());
        EXPECT(0x27ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 023D
        gbc.setState(0x591b, 0x8337, 0x5c30, 0x8b56, 0xd883, 0xeb8c, 0x1, 0x0);
        gbc.writeMem(0x591b, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0x591c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 023E
        gbc.setState(0x9f9e, 0x6436, 0x59d0, 0xfbaa, 0x5ade, 0x810b, 0x0, 0x0);
        gbc.writeMem(0x9f9e, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9f9e));
        // 03 023F
        gbc.setState(0x7a6b, 0xe6fa, 0xa870, 0xbe92, 0x1854, 0x99a2, 0x1, 0x0);
        gbc.writeMem(0x7a6b, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x7a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0240
        gbc.setState(0xb5c9, 0xb186, 0xce0, 0x5da0, 0xca63, 0x6d85, 0x0, 0x1);
        gbc.writeMem(0xb5c9, { 0x3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb186, gbc.sp());
        EXPECT(0xb5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb5c9));
        // 03 0241
        gbc.setState(0x5fd1, 0xff5c, 0x920, 0x3700, 0x46a9, 0x21a0, 0x0, 0x0);
        gbc.writeMem(0x5fd1, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0242
        gbc.setState(0x2a3b, 0x39b, 0x6580, 0x5daf, 0x55eb, 0xdcc4, 0x1, 0x1);
        gbc.writeMem(0x2a3b, { 0x3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0x2a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0243
        gbc.setState(0x5fce, 0x55ce, 0x5330, 0x3ff9, 0xf46e, 0xfe24, 0x1, 0x0);
        gbc.writeMem(0x5fce, { 0x3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0x5fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0244
        gbc.setState(0x359, 0xaf69, 0x83c0, 0x5fdd, 0xb0be, 0x5b6a, 0x1, 0x1);
        gbc.writeMem(0x359, { 0x3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0x35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0245
        gbc.setState(0x744d, 0xe634, 0x8d80, 0x1228, 0x2d83, 0xeb5f, 0x0, 0x1);
        gbc.writeMem(0x744d, { 0x3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe634, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0246
        gbc.setState(0x8e31, 0x7aab, 0x2550, 0x2bd9, 0xe950, 0xaa1, 0x0, 0x1);
        gbc.writeMem(0x8e31, { 0x3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7aab, gbc.sp());
        EXPECT(0x8e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8e31));
        // 03 0248
        gbc.setState(0x3c03, 0xb66e, 0x47b0, 0x3632, 0xb14f, 0x11c8, 0x1, 0x0);
        gbc.writeMem(0x3c03, { 0x3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb66e, gbc.sp());
        EXPECT(0x3c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0249
        gbc.setState(0xa79a, 0x1718, 0x380, 0x6a28, 0x41ae, 0x7e29, 0x0, 0x1);
        gbc.writeMem(0xa79a, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1718, gbc.sp());
        EXPECT(0xa79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa79a));
        // 03 024A
        gbc.setState(0x4888, 0x84cf, 0x5c10, 0xabab, 0x91b8, 0xe5d5, 0x1, 0x1);
        gbc.writeMem(0x4888, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x4889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 024C
        gbc.setState(0xd6fd, 0xa06c, 0x11e0, 0x5e33, 0xfabd, 0x8edc, 0x1, 0x1);
        gbc.writeMem(0xd6fd, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd6fd));
        // 03 024D
        gbc.setState(0x76ce, 0xe9a1, 0x49b0, 0xfaf7, 0xb35, 0xe0f6, 0x1, 0x0);
        gbc.writeMem(0x76ce, { 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe9a1, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 024E
        gbc.setState(0xa2ae, 0x1911, 0x750, 0xd87a, 0xdad4, 0x286, 0x0, 0x1);
        gbc.writeMem(0xa2ae, { 0x3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1911, gbc.sp());
        EXPECT(0xa2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa2ae));
        // 03 024F
        gbc.setState(0x4852, 0x86a0, 0x3c70, 0x8792, 0x1960, 0x85ef, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0x3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0250
        gbc.setState(0x7bd7, 0x2b41, 0x1800, 0xd310, 0xbc6f, 0x62ef, 0x0, 0x1);
        gbc.writeMem(0x7bd7, { 0x3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0x7bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0251
        gbc.setState(0xc93a, 0x45a8, 0xfbc0, 0xa8b8, 0x4c5a, 0x85be, 0x1, 0x1);
        gbc.writeMem(0xc93a, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc93a));
        // 03 0252
        gbc.setState(0x873f, 0xb21e, 0xd30, 0xdda7, 0x6a6f, 0xba12, 0x1, 0x0);
        gbc.writeMem(0x873f, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x873f));
        // 03 0253
        gbc.setState(0x3db3, 0x6ee7, 0x12e0, 0x2d26, 0xfd57, 0x4c7, 0x0, 0x1);
        gbc.writeMem(0x3db3, { 0x3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0x3db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0255
        gbc.setState(0x374a, 0xea9c, 0xb10, 0x3f4d, 0xa619, 0x9f21, 0x0, 0x0);
        gbc.writeMem(0x374a, { 0x3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0256
        gbc.setState(0x84e, 0xe9d6, 0xeea0, 0x416b, 0x66b3, 0x78f4, 0x0, 0x1);
        gbc.writeMem(0x84e, { 0x3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0257
        gbc.setState(0x9cce, 0xc20f, 0xe9c0, 0x4617, 0xb1a3, 0x1ec0, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0x3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9cce));
        // 03 0258
        gbc.setState(0x4b86, 0xc97b, 0x3710, 0x7394, 0x3f70, 0xafb, 0x0, 0x1);
        gbc.writeMem(0x4b86, { 0x3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0259
        gbc.setState(0x6209, 0x3e77, 0x80e0, 0x1103, 0x7ada, 0x573b, 0x0, 0x1);
        gbc.writeMem(0x6209, { 0x3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0x620a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 025B
        gbc.setState(0xe8fc, 0x2f, 0x2000, 0x1b1c, 0x570a, 0x5fef, 0x0, 0x1);
        gbc.writeMem(0xe8fc, { 0x3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe8fc));
        // 03 025C
        gbc.setState(0xecba, 0x55ac, 0x7270, 0x99ed, 0xf8b9, 0xcf1a, 0x1, 0x1);
        gbc.writeMem(0xecba, { 0x3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x55ac, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xecba));
        // 03 025D
        gbc.setState(0xe998, 0xb0c9, 0x9510, 0x5dd1, 0x48bb, 0x71ef, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0x3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb0c9, gbc.sp());
        EXPECT(0xe999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe998));
        // 03 025E
        gbc.setState(0x4e, 0x48a9, 0x7c60, 0x7aa0, 0xcf96, 0xe7a7, 0x0, 0x0);
        gbc.writeMem(0x4e, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x48a9, gbc.sp());
        EXPECT(0x4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 025F
        gbc.setState(0xba33, 0xd18f, 0x3340, 0x1936, 0x5c4c, 0x5a4c, 0x0, 0x1);
        gbc.writeMem(0xba33, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd18f, gbc.sp());
        EXPECT(0xba34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xba33));
        // 03 0260
        gbc.setState(0x4c1f, 0x57e6, 0x1b10, 0x4492, 0x8274, 0x1fbc, 0x1, 0x0);
        gbc.writeMem(0x4c1f, { 0x3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x57e6, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0261
        gbc.setState(0x7870, 0xb200, 0x2490, 0x4a26, 0x94de, 0xe18c, 0x0, 0x0);
        gbc.writeMem(0x7870, { 0x3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x7871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0262
        gbc.setState(0x19fc, 0x70, 0xfa50, 0x2b58, 0x94dd, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0x19fc, { 0x3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0263
        gbc.setState(0x7a5e, 0x5b94, 0x56d0, 0x1e0d, 0xc924, 0xedc, 0x1, 0x1);
        gbc.writeMem(0x7a5e, { 0x3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5b94, gbc.sp());
        EXPECT(0x7a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0264
        gbc.setState(0x721c, 0xce7, 0x9250, 0x43ee, 0x15a7, 0x1899, 0x1, 0x0);
        gbc.writeMem(0x721c, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0265
        gbc.setState(0x7c9d, 0xaa0a, 0x64c0, 0x326b, 0xeb28, 0xe265, 0x0, 0x0);
        gbc.writeMem(0x7c9d, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaa0a, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0266
        gbc.setState(0xe70f, 0xf08d, 0xa090, 0x476e, 0xdff1, 0x273a, 0x1, 0x0);
        gbc.writeMem(0xe70f, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe70f));
        // 03 0267
        gbc.setState(0xc8fe, 0x648b, 0xb7a0, 0x8002, 0xf8db, 0x11c8, 0x1, 0x1);
        gbc.writeMem(0xc8fe, { 0x3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x648b, gbc.sp());
        EXPECT(0xc8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc8fe));
        // 03 0268
        gbc.setState(0xd97b, 0xef31, 0x8660, 0xfd0d, 0x19ba, 0x446a, 0x1, 0x1);
        gbc.writeMem(0xd97b, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xef31, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd97b));
        // 03 0269
        gbc.setState(0xd213, 0xf807, 0x2e70, 0xaa4f, 0xb234, 0xa2a0, 0x1, 0x1);
        gbc.writeMem(0xd213, { 0x3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf807, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd213));
        // 03 026A
        gbc.setState(0x3707, 0x28f5, 0xb7a0, 0xd238, 0x4960, 0xbef9, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0x3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 026B
        gbc.setState(0x31ae, 0x3973, 0xcf40, 0x8c19, 0xa134, 0x7efb, 0x0, 0x1);
        gbc.writeMem(0x31ae, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3973, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 026C
        gbc.setState(0x1cd6, 0x882f, 0xccf0, 0xacae, 0x33dc, 0xdf1b, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0x3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x882f, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 026D
        gbc.setState(0xe40f, 0x2ce6, 0xaea0, 0xbef5, 0xdda0, 0x3fb4, 0x1, 0x1);
        gbc.writeMem(0xe40f, { 0x3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe40f));
        // 03 026E
        gbc.setState(0xaf1e, 0x5ea1, 0x140, 0x4415, 0xcfb4, 0x70ae, 0x1, 0x0);
        gbc.writeMem(0xaf1e, { 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5ea1, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaf1e));
        // 03 026F
        gbc.setState(0xb134, 0x3368, 0x6dd0, 0x830f, 0xa046, 0x3c00, 0x1, 0x1);
        gbc.writeMem(0xb134, { 0x3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0xb135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb134));
        // 03 0270
        gbc.setState(0xc1dc, 0x33ca, 0x8c50, 0x8e19, 0x759a, 0xe588, 0x0, 0x1);
        gbc.writeMem(0xc1dc, { 0x3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x33ca, gbc.sp());
        EXPECT(0xc1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc1dc));
        // 03 0271
        gbc.setState(0xe0e, 0xf92a, 0xa410, 0xe75d, 0x53d, 0xfdc9, 0x0, 0x1);
        gbc.writeMem(0xe0e, { 0x3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf92a, gbc.sp());
        EXPECT(0xe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0272
        gbc.setState(0x8e24, 0x5f73, 0x83d0, 0xe3b2, 0x9b2a, 0x3ca3, 0x0, 0x0);
        gbc.writeMem(0x8e24, { 0x3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5f73, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8e24));
        // 03 0273
        gbc.setState(0x5a11, 0x4334, 0x5660, 0xe3bf, 0x4d71, 0xa4b8, 0x1, 0x1);
        gbc.writeMem(0x5a11, { 0x3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0275
        gbc.setState(0xe20b, 0x1b5b, 0x99b0, 0x3b6c, 0x2b90, 0xd014, 0x1, 0x0);
        gbc.writeMem(0xe20b, { 0x3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0xe20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe20b));
        // 03 0276
        gbc.setState(0x48e8, 0x44a9, 0x1010, 0x4d62, 0x4035, 0x9360, 0x0, 0x0);
        gbc.writeMem(0x48e8, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x44a9, gbc.sp());
        EXPECT(0x48e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0277
        gbc.setState(0x7b1d, 0xddea, 0x97f0, 0x238c, 0xe46c, 0x19f8, 0x1, 0x0);
        gbc.writeMem(0x7b1d, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xddea, gbc.sp());
        EXPECT(0x7b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0278
        gbc.setState(0xacc9, 0x5f7d, 0x4520, 0x62b6, 0x8e48, 0x56bb, 0x0, 0x1);
        gbc.writeMem(0xacc9, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5f7d, gbc.sp());
        EXPECT(0xacca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xacc9));
        // 03 0279
        gbc.setState(0xd407, 0x5b67, 0x7dc0, 0xeec3, 0x344, 0x8f2c, 0x0, 0x1);
        gbc.writeMem(0xd407, { 0x3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0xd408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd407));
        // 03 027B
        gbc.setState(0x238, 0xda2, 0xddb0, 0xbdc9, 0x3dac, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0x238, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xda2, gbc.sp());
        EXPECT(0x239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 027C
        gbc.setState(0x98d5, 0xc454, 0xc9e0, 0x305b, 0xbba7, 0x5225, 0x1, 0x1);
        gbc.writeMem(0x98d5, { 0x3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc454, gbc.sp());
        EXPECT(0x98d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98d5));
        // 03 027D
        gbc.setState(0x5be7, 0xe307, 0xcab0, 0xd028, 0xf396, 0x5aaa, 0x1, 0x0);
        gbc.writeMem(0x5be7, { 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe307, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 027E
        gbc.setState(0x3941, 0x6938, 0x5010, 0xae2c, 0xff1, 0xb3e4, 0x1, 0x1);
        gbc.writeMem(0x3941, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6938, gbc.sp());
        EXPECT(0x3942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 027F
        gbc.setState(0xf1e, 0x1c2d, 0x7010, 0x9a35, 0x8a5c, 0x9254, 0x0, 0x1);
        gbc.writeMem(0xf1e, { 0x3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1c2d, gbc.sp());
        EXPECT(0xf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0280
        gbc.setState(0x9b6a, 0xe9ef, 0x6950, 0xc9e4, 0x5531, 0xb387, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe9ef, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b6a));
        // 03 0281
        gbc.setState(0xcc4e, 0xdddc, 0xf970, 0x3494, 0xe8b7, 0x6b7c, 0x1, 0x0);
        gbc.writeMem(0xcc4e, { 0x3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0xcc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcc4e));
        // 03 0282
        gbc.setState(0xc5d, 0x3625, 0x43c0, 0xc0a6, 0xe45d, 0x850b, 0x0, 0x0);
        gbc.writeMem(0xc5d, { 0x3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0283
        gbc.setState(0xe1db, 0x6e35, 0x7cd0, 0xe426, 0xe110, 0xfc87, 0x0, 0x0);
        gbc.writeMem(0xe1db, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe1db));
        // 03 0284
        gbc.setState(0xde39, 0x53f0, 0x7a10, 0x78e9, 0x19f6, 0xa490, 0x0, 0x0);
        gbc.writeMem(0xde39, { 0x3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xde39));
        // 03 0285
        gbc.setState(0x98b3, 0x674d, 0x9b90, 0x659d, 0x1ecc, 0x2475, 0x1, 0x1);
        gbc.writeMem(0x98b3, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98b3));
        // 03 0286
        gbc.setState(0x188e, 0xdb83, 0xdca0, 0xf94, 0x2e3e, 0xccef, 0x1, 0x1);
        gbc.writeMem(0x188e, { 0x3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0287
        gbc.setState(0x9df6, 0xb1f1, 0x2d70, 0x4ced, 0xcc14, 0x65e, 0x0, 0x1);
        gbc.writeMem(0x9df6, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x9df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9df6));
        // 03 0288
        gbc.setState(0x86c0, 0x6df0, 0x7a90, 0xb709, 0xf636, 0xb42e, 0x0, 0x0);
        gbc.writeMem(0x86c0, { 0x3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x86c0));
        // 03 0289
        gbc.setState(0xd077, 0xa4ec, 0x8610, 0xfeb7, 0xa946, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0xd077, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0xd078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd077));
        // 03 028A
        gbc.setState(0x8cd5, 0xe6c9, 0x5430, 0xc67f, 0x5bf2, 0x97ae, 0x1, 0x0);
        gbc.writeMem(0x8cd5, { 0x3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0x8cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8cd5));
        // 03 028B
        gbc.setState(0xc369, 0x1676, 0x3ba0, 0xbadc, 0xd81, 0x6e1d, 0x1, 0x0);
        gbc.writeMem(0xc369, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1676, gbc.sp());
        EXPECT(0xc36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc369));
        // 03 028C
        gbc.setState(0xc7f4, 0x47fe, 0x3680, 0xa8b, 0xecf0, 0x2514, 0x1, 0x1);
        gbc.writeMem(0xc7f4, { 0x3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x47fe, gbc.sp());
        EXPECT(0xc7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc7f4));
        // 03 028D
        gbc.setState(0x1c18, 0x6cf2, 0x7b00, 0x2bc0, 0x2627, 0x4542, 0x0, 0x0);
        gbc.writeMem(0x1c18, { 0x3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x1c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 028E
        gbc.setState(0x3365, 0x520a, 0xa400, 0x8aa9, 0xe39b, 0x9c35, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0x3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 028F
        gbc.setState(0xc9b5, 0xe0ed, 0xddf0, 0xfacf, 0x5a99, 0xa6cf, 0x1, 0x1);
        gbc.writeMem(0xc9b5, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe0ed, gbc.sp());
        EXPECT(0xc9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc9b5));
        // 03 0290
        gbc.setState(0x1262, 0xa84b, 0x9ac0, 0xfa64, 0x6253, 0xa25b, 0x1, 0x1);
        gbc.writeMem(0x1262, { 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0291
        gbc.setState(0x89b8, 0xde22, 0xbb00, 0xb9d2, 0x30d7, 0x488, 0x1, 0x0);
        gbc.writeMem(0x89b8, { 0x3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0x89b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x89b8));
        // 03 0292
        gbc.setState(0x76de, 0x7b20, 0xa260, 0xe60e, 0x820e, 0xb1a9, 0x1, 0x0);
        gbc.writeMem(0x76de, { 0x3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0294
        gbc.setState(0x8ed7, 0xbacc, 0xa770, 0x15b0, 0x42bf, 0xbd58, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8ed7));
        // 03 0295
        gbc.setState(0xb2ed, 0xb17d, 0xa0c0, 0xbda9, 0x4fd, 0xdf34, 0x0, 0x1);
        gbc.writeMem(0xb2ed, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0xb2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb2ed));
        // 03 0296
        gbc.setState(0x2208, 0x501d, 0x4780, 0x389, 0xb375, 0xaf7a, 0x1, 0x1);
        gbc.writeMem(0x2208, { 0x3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x501d, gbc.sp());
        EXPECT(0x2209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0297
        gbc.setState(0xc90d, 0x32e0, 0xff10, 0xc238, 0x1534, 0x3915, 0x1, 0x0);
        gbc.writeMem(0xc90d, { 0x3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x32e0, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc90d));
        // 03 0298
        gbc.setState(0xa3d1, 0xaa46, 0x8e10, 0xbc55, 0xc37d, 0x9f06, 0x0, 0x0);
        gbc.writeMem(0xa3d1, { 0x3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0xa3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa3d1));
        // 03 0299
        gbc.setState(0xda93, 0x9a83, 0xbed0, 0x6e53, 0x84e4, 0x7b97, 0x0, 0x0);
        gbc.writeMem(0xda93, { 0x3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9a83, gbc.sp());
        EXPECT(0xda94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda93));
        // 03 029A
        gbc.setState(0x2b5b, 0xed63, 0xe620, 0x6b2, 0x1eb5, 0xa637, 0x0, 0x0);
        gbc.writeMem(0x2b5b, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed63, gbc.sp());
        EXPECT(0x2b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 029B
        gbc.setState(0xcfb1, 0x5f75, 0xd260, 0x9ed6, 0x8d22, 0xe72, 0x0, 0x1);
        gbc.writeMem(0xcfb1, { 0x3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5f75, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcfb1));
        // 03 029C
        gbc.setState(0x4d5e, 0x5285, 0x8bd0, 0x49fc, 0x77d5, 0x6d9a, 0x1, 0x1);
        gbc.writeMem(0x4d5e, { 0x3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5285, gbc.sp());
        EXPECT(0x4d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 029D
        gbc.setState(0x1866, 0x5144, 0x2680, 0x4200, 0x57d3, 0x2082, 0x1, 0x0);
        gbc.writeMem(0x1866, { 0x3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5144, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 029E
        gbc.setState(0x68f2, 0x5670, 0x70, 0xf5a7, 0xb7e, 0x3cfe, 0x0, 0x1);
        gbc.writeMem(0x68f2, { 0x3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5670, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 029F
        gbc.setState(0x450a, 0xc387, 0xc330, 0xcd05, 0x8dc6, 0xc615, 0x0, 0x0);
        gbc.writeMem(0x450a, { 0x3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc387, gbc.sp());
        EXPECT(0x450b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02A1
        gbc.setState(0xba7, 0xbdaf, 0x78e0, 0x262b, 0x90, 0x36a0, 0x1, 0x0);
        gbc.writeMem(0xba7, { 0x3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbdaf, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02A2
        gbc.setState(0x4914, 0x7f52, 0xe7e0, 0x6ee6, 0xc3c, 0x28e, 0x1, 0x0);
        gbc.writeMem(0x4914, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0x4915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02A3
        gbc.setState(0x2986, 0xa070, 0xc280, 0x9300, 0x211e, 0x29fb, 0x1, 0x0);
        gbc.writeMem(0x2986, { 0x3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa070, gbc.sp());
        EXPECT(0x2987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02A4
        gbc.setState(0x37c, 0x3489, 0xe1e0, 0x43ce, 0xe9bb, 0xec83, 0x0, 0x0);
        gbc.writeMem(0x37c, { 0x3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3489, gbc.sp());
        EXPECT(0x37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02A5
        gbc.setState(0xbe84, 0xa886, 0x5b10, 0x9007, 0xf594, 0x88bb, 0x0, 0x1);
        gbc.writeMem(0xbe84, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa886, gbc.sp());
        EXPECT(0xbe85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbe84));
        // 03 02A6
        gbc.setState(0x5b74, 0xacef, 0x45c0, 0x1a2c, 0x888c, 0x63, 0x0, 0x1);
        gbc.writeMem(0x5b74, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xacef, gbc.sp());
        EXPECT(0x5b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02A7
        gbc.setState(0xb451, 0xf933, 0xabd0, 0x7ef0, 0x365, 0xe4e8, 0x0, 0x1);
        gbc.writeMem(0xb451, { 0x3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf933, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb451));
        // 03 02A8
        gbc.setState(0x50b1, 0xfce2, 0x8f70, 0x7527, 0xe89, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0x50b1, { 0x3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfce2, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02A9
        gbc.setState(0xdf62, 0xd95c, 0xcf70, 0xac2b, 0x5fd1, 0xabec, 0x0, 0x0);
        gbc.writeMem(0xdf62, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd95c, gbc.sp());
        EXPECT(0xdf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdf62));
        // 03 02AA
        gbc.setState(0xec52, 0x437f, 0x3970, 0xafd0, 0x8a52, 0x5f88, 0x1, 0x0);
        gbc.writeMem(0xec52, { 0x3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0xec53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xec52));
        // 03 02AB
        gbc.setState(0x91e5, 0xef96, 0xe40, 0xa642, 0x5d68, 0x192b, 0x0, 0x0);
        gbc.writeMem(0x91e5, { 0x3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0x91e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x91e5));
        // 03 02AC
        gbc.setState(0xdf9b, 0xdfc, 0xd9a0, 0xa39f, 0x802b, 0xaeec, 0x1, 0x0);
        gbc.writeMem(0xdf9b, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdfc, gbc.sp());
        EXPECT(0xdf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdf9b));
        // 03 02AD
        gbc.setState(0x26ba, 0x2240, 0xe580, 0xcd2e, 0xfe6c, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x26ba, { 0x3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2240, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02AF
        gbc.setState(0x6c96, 0x7328, 0x5da0, 0x49bc, 0x1d6b, 0xbe16, 0x1, 0x0);
        gbc.writeMem(0x6c96, { 0x3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0x6c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02B0
        gbc.setState(0x8164, 0xeee9, 0xee50, 0x883e, 0xfea5, 0x39ae, 0x1, 0x0);
        gbc.writeMem(0x8164, { 0x3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0x8165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8164));
        // 03 02B1
        gbc.setState(0x58a0, 0x6cb9, 0x6ce0, 0x5b9f, 0x46f6, 0xe57d, 0x0, 0x1);
        gbc.writeMem(0x58a0, { 0x3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02B2
        gbc.setState(0x6527, 0xc2e9, 0xb160, 0xf617, 0x9d72, 0xc107, 0x0, 0x1);
        gbc.writeMem(0x6527, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02B3
        gbc.setState(0xa76, 0x28a7, 0x4b30, 0x87e5, 0xd3bd, 0x7873, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x28a7, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02B4
        gbc.setState(0x7835, 0x64c8, 0xfba0, 0xedc9, 0x4cbd, 0x3910, 0x1, 0x1);
        gbc.writeMem(0x7835, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x64c8, gbc.sp());
        EXPECT(0x7836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02B5
        gbc.setState(0x906d, 0x3afe, 0x4540, 0x44aa, 0xef35, 0xde03, 0x0, 0x0);
        gbc.writeMem(0x906d, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3afe, gbc.sp());
        EXPECT(0x906e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x906d));
        // 03 02B6
        gbc.setState(0xd4b7, 0x682f, 0x8ca0, 0x70b2, 0x9bcf, 0x3e3b, 0x1, 0x1);
        gbc.writeMem(0xd4b7, { 0x3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x682f, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd4b7));
        // 03 02B7
        gbc.setState(0xef99, 0xd6e9, 0xc6a0, 0xc592, 0x722d, 0xa162, 0x1, 0x1);
        gbc.writeMem(0xef99, { 0x3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd6e9, gbc.sp());
        EXPECT(0xef9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xef99));
        // 03 02B8
        gbc.setState(0xe2e2, 0x1fc9, 0xbfa0, 0xf844, 0x17f1, 0x35e8, 0x1, 0x1);
        gbc.writeMem(0xe2e2, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1fc9, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe2e2));
        // 03 02B9
        gbc.setState(0x4ea5, 0xd06e, 0x5b80, 0x38c2, 0x54be, 0xceb1, 0x1, 0x1);
        gbc.writeMem(0x4ea5, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0x4ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02BA
        gbc.setState(0xa88b, 0x96b1, 0x4f80, 0x2b1, 0x5b4d, 0xe56e, 0x1, 0x0);
        gbc.writeMem(0xa88b, { 0x3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x96b1, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa88b));
        // 03 02BC
        gbc.setState(0xd6b4, 0x92ac, 0x10a0, 0x769, 0xda15, 0x5f89, 0x0, 0x0);
        gbc.writeMem(0xd6b4, { 0x3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x92ac, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd6b4));
        // 03 02BD
        gbc.setState(0x68e0, 0x9e9a, 0x33e0, 0xec4, 0x9b2a, 0x6552, 0x0, 0x1);
        gbc.writeMem(0x68e0, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9e9a, gbc.sp());
        EXPECT(0x68e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02BE
        gbc.setState(0x5dd1, 0xe156, 0xe960, 0x53c5, 0x77a5, 0x160, 0x0, 0x1);
        gbc.writeMem(0x5dd1, { 0x3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe156, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02BF
        gbc.setState(0xc3d1, 0x9558, 0x77f0, 0xe0f3, 0x3ec2, 0x9686, 0x0, 0x1);
        gbc.writeMem(0xc3d1, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9558, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc3d1));
        // 03 02C0
        gbc.setState(0x88b0, 0x229a, 0xca00, 0xe243, 0xd644, 0x85c5, 0x0, 0x0);
        gbc.writeMem(0x88b0, { 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x229a, gbc.sp());
        EXPECT(0x88b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x88b0));
        // 03 02C1
        gbc.setState(0xcdb1, 0xfe2, 0xe4a0, 0xb80c, 0x7dbe, 0xc51d, 0x1, 0x0);
        gbc.writeMem(0xcdb1, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe2, gbc.sp());
        EXPECT(0xcdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcdb1));
        // 03 02C2
        gbc.setState(0xcfd7, 0xd2c8, 0x99a0, 0x641e, 0x727e, 0xf8a4, 0x0, 0x1);
        gbc.writeMem(0xcfd7, { 0x3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd2c8, gbc.sp());
        EXPECT(0xcfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcfd7));
        // 03 02C4
        gbc.setState(0xd4ec, 0xeae6, 0xa7b0, 0x974f, 0x96e6, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0xd4ec, { 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0xd4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd4ec));
        // 03 02C5
        gbc.setState(0xdd69, 0x2bfc, 0x2b70, 0xca34, 0xadb1, 0xc590, 0x0, 0x0);
        gbc.writeMem(0xdd69, { 0x3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2bfc, gbc.sp());
        EXPECT(0xdd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdd69));
        // 03 02C6
        gbc.setState(0xa452, 0x30f3, 0x5c50, 0x9c1d, 0x4a2d, 0x8201, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x30f3, gbc.sp());
        EXPECT(0xa453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa452));
        // 03 02C7
        gbc.setState(0x8c15, 0x23ff, 0x4900, 0x5236, 0x6c5e, 0x7754, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c15));
        // 03 02C8
        gbc.setState(0xaafe, 0x8499, 0xa5b0, 0xb92e, 0x9f64, 0x4a3c, 0x0, 0x1);
        gbc.writeMem(0xaafe, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0xaaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaafe));
        // 03 02CA
        gbc.setState(0x9be8, 0xbf00, 0x3c50, 0x64a6, 0x8d24, 0xe6c1, 0x1, 0x0);
        gbc.writeMem(0x9be8, { 0x3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbf00, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9be8));
        // 03 02CB
        gbc.setState(0xe046, 0x94d9, 0xcf30, 0x4a4, 0x2115, 0x759f, 0x1, 0x1);
        gbc.writeMem(0xe046, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x94d9, gbc.sp());
        EXPECT(0xe047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe046));
        // 03 02CC
        gbc.setState(0x6dff, 0x6276, 0xcaa0, 0xf0a0, 0x2677, 0x2ff6, 0x1, 0x1);
        gbc.writeMem(0x6dff, { 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6276, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02CD
        gbc.setState(0xc222, 0x729a, 0xedb0, 0x1580, 0x3224, 0xf92c, 0x0, 0x1);
        gbc.writeMem(0xc222, { 0x3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x729a, gbc.sp());
        EXPECT(0xc223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc222));
        // 03 02CE
        gbc.setState(0x1ffe, 0xba87, 0xb8d0, 0x345f, 0x4c0a, 0x2fd8, 0x1, 0x0);
        gbc.writeMem(0x1ffe, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02CF
        gbc.setState(0xb974, 0x7d9a, 0xa120, 0x2125, 0x2022, 0x6a7b, 0x1, 0x1);
        gbc.writeMem(0xb974, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0xb975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb974));
        // 03 02D0
        gbc.setState(0x5ea9, 0xa9ec, 0xa0d0, 0xc124, 0x800, 0xe575, 0x0, 0x1);
        gbc.writeMem(0x5ea9, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02D1
        gbc.setState(0xc0f9, 0xd5f6, 0x3900, 0x3269, 0xfd9c, 0x6d20, 0x1, 0x1);
        gbc.writeMem(0xc0f9, { 0x3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd5f6, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc0f9));
        // 03 02D2
        gbc.setState(0x3cf9, 0xf1f5, 0x6b20, 0xbf6a, 0x7b64, 0xddc3, 0x1, 0x0);
        gbc.writeMem(0x3cf9, { 0x3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0x3cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02D3
        gbc.setState(0x557c, 0x8f10, 0x4550, 0x2e1d, 0x675f, 0xae60, 0x1, 0x0);
        gbc.writeMem(0x557c, { 0x3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0x557d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02D4
        gbc.setState(0x95e5, 0xe323, 0x43e0, 0x9065, 0xbf5c, 0x6e0, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0x3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0x95e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x95e5));
        // 03 02D5
        gbc.setState(0x8a54, 0xd5cb, 0xc400, 0x8f06, 0xbe99, 0xc1cd, 0x1, 0x1);
        gbc.writeMem(0x8a54, { 0x3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd5cb, gbc.sp());
        EXPECT(0x8a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8a54));
        // 03 02D6
        gbc.setState(0xe934, 0x4b3e, 0x9ed0, 0x9739, 0xc34a, 0x9f29, 0x0, 0x1);
        gbc.writeMem(0xe934, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4b3e, gbc.sp());
        EXPECT(0xe935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe934));
        // 03 02D7
        gbc.setState(0x4ee9, 0x8c88, 0xf560, 0xd9df, 0x2f21, 0x6dbb, 0x1, 0x1);
        gbc.writeMem(0x4ee9, { 0x3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0x4eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02D8
        gbc.setState(0xc3c3, 0xdaa1, 0xb870, 0x695f, 0xa6e9, 0x4402, 0x0, 0x0);
        gbc.writeMem(0xc3c3, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0xc3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc3c3));
        // 03 02D9
        gbc.setState(0xbea3, 0x3fdf, 0xb2e0, 0x2d6c, 0x9fe5, 0xa59b, 0x1, 0x1);
        gbc.writeMem(0xbea3, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3fdf, gbc.sp());
        EXPECT(0xbea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbea3));
        // 03 02DB
        gbc.setState(0x36c3, 0x336f, 0xcc50, 0xa2b4, 0x1a69, 0x4b2a, 0x0, 0x1);
        gbc.writeMem(0x36c3, { 0x3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x336f, gbc.sp());
        EXPECT(0x36c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02DC
        gbc.setState(0x56e, 0xa388, 0x93d0, 0xea49, 0x8f26, 0x11be, 0x0, 0x1);
        gbc.writeMem(0x56e, { 0x3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0x56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02DD
        gbc.setState(0xdbf6, 0x3428, 0x82f0, 0x202e, 0xc26, 0xab7e, 0x0, 0x0);
        gbc.writeMem(0xdbf6, { 0x3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdbf6));
        // 03 02DE
        gbc.setState(0x9d48, 0x5c6e, 0x18a0, 0x8256, 0xd816, 0xfca1, 0x1, 0x0);
        gbc.writeMem(0x9d48, { 0x3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x9d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d48));
        // 03 02DF
        gbc.setState(0x613e, 0x3f8d, 0xfd60, 0x5901, 0xac4c, 0x8949, 0x1, 0x1);
        gbc.writeMem(0x613e, { 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3f8d, gbc.sp());
        EXPECT(0x613f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02E0
        gbc.setState(0x2a81, 0xa8a6, 0x3b50, 0xc639, 0x8e4e, 0x22eb, 0x1, 0x1);
        gbc.writeMem(0x2a81, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02E1
        gbc.setState(0xe043, 0x5bd7, 0x6e70, 0xc04, 0xaf26, 0xdf98, 0x0, 0x0);
        gbc.writeMem(0xe043, { 0x3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5bd7, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe043));
        // 03 02E2
        gbc.setState(0xd5c8, 0x6425, 0xb170, 0xd0a1, 0xeb30, 0x1390, 0x0, 0x0);
        gbc.writeMem(0xd5c8, { 0x3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6425, gbc.sp());
        EXPECT(0xd5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd5c8));
        // 03 02E3
        gbc.setState(0xb815, 0xa30c, 0x2c90, 0x7a0, 0x26b7, 0xfcab, 0x1, 0x1);
        gbc.writeMem(0xb815, { 0x3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa30c, gbc.sp());
        EXPECT(0xb816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb815));
        // 03 02E4
        gbc.setState(0x7ec3, 0x13a0, 0xcd70, 0x2976, 0xe266, 0x4bd9, 0x1, 0x0);
        gbc.writeMem(0x7ec3, { 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x13a0, gbc.sp());
        EXPECT(0x7ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02E5
        gbc.setState(0xe89b, 0x870c, 0xa820, 0x4074, 0xa3ed, 0xa938, 0x0, 0x1);
        gbc.writeMem(0xe89b, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0xe89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe89b));
        // 03 02E6
        gbc.setState(0xe7a1, 0x31b4, 0x2460, 0xe22e, 0x3ad5, 0x6bf1, 0x1, 0x1);
        gbc.writeMem(0xe7a1, { 0x3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe7a1));
        // 03 02E8
        gbc.setState(0x402c, 0xef9c, 0x9670, 0x50d5, 0x8dd4, 0xff29, 0x0, 0x1);
        gbc.writeMem(0x402c, { 0x3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xef9c, gbc.sp());
        EXPECT(0x402d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02E9
        gbc.setState(0x4d7e, 0xaf9b, 0xa3a0, 0xbdc4, 0x4867, 0xd762, 0x0, 0x0);
        gbc.writeMem(0x4d7e, { 0x3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02EA
        gbc.setState(0x8a53, 0x787, 0xe060, 0x54bd, 0x504, 0x2ad2, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x787, gbc.sp());
        EXPECT(0x8a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8a53));
        // 03 02EB
        gbc.setState(0x1cda, 0x2b37, 0x5390, 0x8075, 0xf395, 0x20ef, 0x1, 0x0);
        gbc.writeMem(0x1cda, { 0x3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0x1cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02ED
        gbc.setState(0x1c5c, 0x3556, 0x1eb0, 0xfb7e, 0x424c, 0x9ec5, 0x0, 0x1);
        gbc.writeMem(0x1c5c, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3556, gbc.sp());
        EXPECT(0x1c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02EE
        gbc.setState(0xe772, 0xb044, 0xd380, 0x3f96, 0x7c93, 0xdce1, 0x1, 0x1);
        gbc.writeMem(0xe772, { 0x3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb044, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe772));
        // 03 02EF
        gbc.setState(0x17ff, 0x7a36, 0x1bd0, 0xff6d, 0xd7f4, 0x2c23, 0x1, 0x1);
        gbc.writeMem(0x17ff, { 0x3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0x1800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02F0
        gbc.setState(0x47d8, 0xfcba, 0x7e30, 0x8fac, 0xd350, 0x202c, 0x0, 0x0);
        gbc.writeMem(0x47d8, { 0x3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0x47d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02F1
        gbc.setState(0x61b, 0x615b, 0x4710, 0x314e, 0x849d, 0x94d1, 0x0, 0x0);
        gbc.writeMem(0x61b, { 0x3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x615b, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02F3
        gbc.setState(0x78f2, 0x69ba, 0xb500, 0xb1a, 0x5f7e, 0x9452, 0x0, 0x0);
        gbc.writeMem(0x78f2, { 0x3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x69ba, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02F4
        gbc.setState(0x3453, 0x7e84, 0x9420, 0xd0b1, 0x36c5, 0x3607, 0x0, 0x0);
        gbc.writeMem(0x3453, { 0x3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7e84, gbc.sp());
        EXPECT(0x3454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 02F5
        gbc.setState(0x9969, 0x8149, 0xa6c0, 0x4d0a, 0x8d6f, 0x663, 0x1, 0x1);
        gbc.writeMem(0x9969, { 0x3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9969));
        // 03 02F6
        gbc.setState(0xdbc1, 0x6498, 0x9df0, 0x9efd, 0xf779, 0x22fa, 0x0, 0x1);
        gbc.writeMem(0xdbc1, { 0x3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdbc1));
        // 03 02F7
        gbc.setState(0x83c8, 0x4630, 0xfb30, 0xdc54, 0x6d68, 0x557e, 0x1, 0x1);
        gbc.writeMem(0x83c8, { 0x3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4630, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x83c8));
        // 03 02F8
        gbc.setState(0x4d84, 0x9ee0, 0x3d90, 0x7328, 0x627e, 0x21f, 0x0, 0x0);
        gbc.writeMem(0x4d84, { 0x3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9ee0, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02F9
        gbc.setState(0x9a6b, 0x7264, 0xca70, 0x45da, 0x8e68, 0x3d80, 0x0, 0x0);
        gbc.writeMem(0x9a6b, { 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7264, gbc.sp());
        EXPECT(0x9a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9a6b));
        // 03 02FA
        gbc.setState(0x3ba9, 0x4595, 0xe4d0, 0x35e3, 0x6db8, 0x4f05, 0x0, 0x0);
        gbc.writeMem(0x3ba9, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4595, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02FB
        gbc.setState(0x831, 0x2b8, 0x38b0, 0x8c06, 0x28f0, 0x670c, 0x0, 0x1);
        gbc.writeMem(0x831, { 0x3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02FC
        gbc.setState(0xd14, 0xc66b, 0x9cf0, 0x8bbf, 0xd731, 0x5d7a, 0x0, 0x1);
        gbc.writeMem(0xd14, { 0x3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02FE
        gbc.setState(0x19a2, 0x9f1e, 0xe750, 0x9d92, 0xddae, 0xa43e, 0x1, 0x0);
        gbc.writeMem(0x19a2, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9f1e, gbc.sp());
        EXPECT(0x19a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 02FF
        gbc.setState(0x35c2, 0x4125, 0x4660, 0xead6, 0xf06d, 0xdec2, 0x1, 0x0);
        gbc.writeMem(0x35c2, { 0x3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0300
        gbc.setState(0x36b9, 0xd9ee, 0x38f0, 0x90ab, 0x8a33, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x36b9, { 0x3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0301
        gbc.setState(0x4af2, 0x7d34, 0x13a0, 0x79a1, 0x87dd, 0x871f, 0x1, 0x0);
        gbc.writeMem(0x4af2, { 0x3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7d34, gbc.sp());
        EXPECT(0x4af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0303
        gbc.setState(0xcb10, 0x3023, 0x1ce0, 0x6700, 0xf8, 0x6a91, 0x0, 0x0);
        gbc.writeMem(0xcb10, { 0x3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3023, gbc.sp());
        EXPECT(0xcb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcb10));
        // 03 0304
        gbc.setState(0x3a67, 0x1d08, 0xe0d0, 0x62a6, 0x5378, 0x8f76, 0x0, 0x1);
        gbc.writeMem(0x3a67, { 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1d08, gbc.sp());
        EXPECT(0x3a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0305
        gbc.setState(0x8368, 0x7773, 0xcfe0, 0xad5e, 0x9e1b, 0x6222, 0x1, 0x1);
        gbc.writeMem(0x8368, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x8369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8368));
        // 03 0306
        gbc.setState(0xe50e, 0xc68d, 0x2f30, 0x7e76, 0x2549, 0xfef9, 0x0, 0x1);
        gbc.writeMem(0xe50e, { 0x3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xe50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe50e));
        // 03 0307
        gbc.setState(0xb03d, 0xe41b, 0x2320, 0xad8c, 0xcb52, 0xe63e, 0x0, 0x1);
        gbc.writeMem(0xb03d, { 0x3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0xb03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb03d));
        // 03 0308
        gbc.setState(0x2797, 0x9371, 0x4230, 0x8bca, 0x35b3, 0xd642, 0x1, 0x0);
        gbc.writeMem(0x2797, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9371, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0309
        gbc.setState(0xbe47, 0x524d, 0xe830, 0x69fb, 0xe4a4, 0x9db5, 0x1, 0x1);
        gbc.writeMem(0xbe47, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x524d, gbc.sp());
        EXPECT(0xbe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbe47));
        // 03 030A
        gbc.setState(0x7b14, 0x14c, 0x44e0, 0xc5c9, 0x5d79, 0xa1c1, 0x0, 0x0);
        gbc.writeMem(0x7b14, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x14c, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 030B
        gbc.setState(0xec1e, 0x124a, 0xd690, 0xf62, 0xd8e7, 0x8b66, 0x0, 0x0);
        gbc.writeMem(0xec1e, { 0x3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0xec1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xec1e));
        // 03 030C
        gbc.setState(0x4108, 0x387e, 0x7ce0, 0xff8d, 0xe435, 0xdc03, 0x0, 0x0);
        gbc.writeMem(0x4108, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0x4109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 030D
        gbc.setState(0xa906, 0xf042, 0x9af0, 0x3a97, 0x7818, 0x3af3, 0x1, 0x0);
        gbc.writeMem(0xa906, { 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf042, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa906));
        // 03 030E
        gbc.setState(0xd66f, 0x8c3a, 0xe0f0, 0x3085, 0x3a3, 0x3835, 0x1, 0x1);
        gbc.writeMem(0xd66f, { 0x3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd66f));
        // 03 030F
        gbc.setState(0xb99d, 0x10d6, 0x9ae0, 0x4e37, 0xa021, 0x3e2d, 0x0, 0x0);
        gbc.writeMem(0xb99d, { 0x3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0xb99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb99d));
        // 03 0310
        gbc.setState(0x5b1c, 0x41ab, 0x91b0, 0x9cda, 0x99fd, 0xf598, 0x1, 0x1);
        gbc.writeMem(0x5b1c, { 0x3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0311
        gbc.setState(0x50ad, 0x9345, 0x6420, 0x724d, 0x2f80, 0x1cd1, 0x1, 0x0);
        gbc.writeMem(0x50ad, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9345, gbc.sp());
        EXPECT(0x50ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0312
        gbc.setState(0x4c8a, 0xb812, 0xaae0, 0xccbf, 0xcf12, 0x70a7, 0x1, 0x1);
        gbc.writeMem(0x4c8a, { 0x3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb812, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0313
        gbc.setState(0xb191, 0x1355, 0x3d50, 0x9d5d, 0xd168, 0x62a9, 0x0, 0x0);
        gbc.writeMem(0xb191, { 0x3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1355, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb191));
        // 03 0314
        gbc.setState(0x1ee1, 0xe2e2, 0xc050, 0x53b4, 0x4b58, 0x7aee, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0x3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0x1ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0315
        gbc.setState(0x22b6, 0x72db, 0x7c20, 0x5c, 0xd6bf, 0xfec8, 0x0, 0x0);
        gbc.writeMem(0x22b6, { 0x3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x72db, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0316
        gbc.setState(0x8200, 0xb989, 0x3320, 0xb893, 0x6fe6, 0xbfc3, 0x1, 0x0);
        gbc.writeMem(0x8200, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb989, gbc.sp());
        EXPECT(0x8201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8200));
        // 03 0317
        gbc.setState(0xbc25, 0xf396, 0x1ea0, 0xac27, 0xb437, 0xd2df, 0x1, 0x0);
        gbc.writeMem(0xbc25, { 0x3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbc25));
        // 03 0319
        gbc.setState(0x4c8e, 0x25ec, 0x98b0, 0x57b8, 0xec33, 0xa82c, 0x0, 0x1);
        gbc.writeMem(0x4c8e, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 031A
        gbc.setState(0x3232, 0xe00d, 0x1f80, 0xa3c0, 0x63a0, 0x5784, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0x3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x3233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 031B
        gbc.setState(0xd6e9, 0xb1f, 0x59d0, 0xfdf9, 0x1e59, 0x886b, 0x1, 0x1);
        gbc.writeMem(0xd6e9, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd6e9));
        // 03 031C
        gbc.setState(0x8e64, 0xddb1, 0x77c0, 0x541c, 0x69b1, 0x2281, 0x0, 0x1);
        gbc.writeMem(0x8e64, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xddb1, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8e64));
        // 03 031D
        gbc.setState(0x8891, 0x2c63, 0xacc0, 0xe7a6, 0x672e, 0x3262, 0x0, 0x1);
        gbc.writeMem(0x8891, { 0x3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8891));
        // 03 031E
        gbc.setState(0x6a8, 0x7b7f, 0xe490, 0x14ca, 0x2d30, 0x99d0, 0x0, 0x1);
        gbc.writeMem(0x6a8, { 0x3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7b7f, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 031F
        gbc.setState(0x7fe1, 0x662a, 0x23c0, 0xeffe, 0x3d87, 0x7835, 0x1, 0x1);
        gbc.writeMem(0x7fe1, { 0x3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x662a, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0320
        gbc.setState(0x4b4b, 0x63cc, 0x4ef0, 0x9a44, 0x3461, 0xb41c, 0x1, 0x0);
        gbc.writeMem(0x4b4b, { 0x3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x63cc, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0322
        gbc.setState(0x724a, 0xfd34, 0xca80, 0x1a5c, 0xc3aa, 0xa325, 0x0, 0x1);
        gbc.writeMem(0x724a, { 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x724b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0323
        gbc.setState(0xb897, 0x17ec, 0x4480, 0xa0a7, 0xb0ac, 0xce02, 0x0, 0x1);
        gbc.writeMem(0xb897, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x17ec, gbc.sp());
        EXPECT(0xb898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb897));
        // 03 0324
        gbc.setState(0x347e, 0x74c, 0xd60, 0xd75, 0xcde3, 0x9bf8, 0x0, 0x0);
        gbc.writeMem(0x347e, { 0x3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0326
        gbc.setState(0x98d8, 0x69a2, 0x4cf0, 0x8d64, 0xe441, 0x83be, 0x1, 0x0);
        gbc.writeMem(0x98d8, { 0x3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x69a2, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98d8));
        // 03 0327
        gbc.setState(0xa98e, 0xeea7, 0xcf40, 0x91cf, 0x57c7, 0x45a, 0x0, 0x0);
        gbc.writeMem(0xa98e, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeea7, gbc.sp());
        EXPECT(0xa98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa98e));
        // 03 0328
        gbc.setState(0xe68c, 0xbc52, 0x49c0, 0x57f1, 0xf534, 0xb2ca, 0x0, 0x1);
        gbc.writeMem(0xe68c, { 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe68c));
        // 03 0329
        gbc.setState(0xd6cf, 0x4894, 0x920, 0xfd47, 0x446b, 0x7194, 0x1, 0x0);
        gbc.writeMem(0xd6cf, { 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4894, gbc.sp());
        EXPECT(0xd6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd6cf));
        // 03 032A
        gbc.setState(0x1737, 0x7883, 0xcdb0, 0x4804, 0x5575, 0x31f5, 0x0, 0x0);
        gbc.writeMem(0x1737, { 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 032B
        gbc.setState(0x8d4d, 0x6366, 0xdfe0, 0x54ee, 0x21ab, 0xe38b, 0x1, 0x1);
        gbc.writeMem(0x8d4d, { 0x3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8d4d));
        // 03 032C
        gbc.setState(0x9ccd, 0x2f7a, 0x30a0, 0xd696, 0x28b3, 0xa732, 0x1, 0x0);
        gbc.writeMem(0x9ccd, { 0x3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9ccd));
        // 03 032D
        gbc.setState(0x9122, 0x2afe, 0x6e20, 0xcab5, 0xd4e1, 0x2bfa, 0x0, 0x0);
        gbc.writeMem(0x9122, { 0x3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2afe, gbc.sp());
        EXPECT(0x9123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9122));
        // 03 032E
        gbc.setState(0x153c, 0x13c6, 0x5890, 0x2aab, 0xc00b, 0xad6b, 0x0, 0x0);
        gbc.writeMem(0x153c, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13c6, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 032F
        gbc.setState(0xc2c9, 0x4f60, 0x50f0, 0x4b08, 0x860d, 0x8e2d, 0x1, 0x0);
        gbc.writeMem(0xc2c9, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0xc2ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc2c9));
        // 03 0330
        gbc.setState(0x3446, 0x850f, 0xd1a0, 0x43a0, 0xb78e, 0xf041, 0x0, 0x1);
        gbc.writeMem(0x3446, { 0x3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0331
        gbc.setState(0x309a, 0x6893, 0xfe30, 0xd375, 0xe284, 0xd459, 0x0, 0x1);
        gbc.writeMem(0x309a, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6893, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0332
        gbc.setState(0xe1a5, 0xb4bc, 0xf330, 0x7043, 0x994e, 0x3e9, 0x1, 0x1);
        gbc.writeMem(0xe1a5, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb4bc, gbc.sp());
        EXPECT(0xe1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe1a5));
        // 03 0333
        gbc.setState(0x2f53, 0x781d, 0x92e0, 0xc0a3, 0x842c, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0x2f53, { 0x3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x781d, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0334
        gbc.setState(0x8c9e, 0x71b6, 0x8800, 0x4df8, 0xad59, 0xddde, 0x0, 0x1);
        gbc.writeMem(0x8c9e, { 0x3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c9e));
        // 03 0335
        gbc.setState(0x359c, 0x8e0c, 0xeb90, 0x1c76, 0x2987, 0x9eb2, 0x1, 0x0);
        gbc.writeMem(0x359c, { 0x3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e0c, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0337
        gbc.setState(0x48a6, 0x4a63, 0x47c0, 0xe13c, 0x607b, 0xeb6d, 0x0, 0x1);
        gbc.writeMem(0x48a6, { 0x3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4a63, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0338
        gbc.setState(0xcaf, 0xd4e5, 0x9bb0, 0xb38, 0xc24e, 0xef0b, 0x1, 0x0);
        gbc.writeMem(0xcaf, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0xcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 033A
        gbc.setState(0x4d3, 0xdc43, 0xcb10, 0x7e24, 0x8cfb, 0x91c6, 0x0, 0x1);
        gbc.writeMem(0x4d3, { 0x3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdc43, gbc.sp());
        EXPECT(0x4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 033B
        gbc.setState(0x27ad, 0x6df5, 0x7740, 0x7a7c, 0x77e3, 0xff8e, 0x1, 0x1);
        gbc.writeMem(0x27ad, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6df5, gbc.sp());
        EXPECT(0x27ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 033C
        gbc.setState(0x78f9, 0xf58b, 0xc350, 0x37a, 0xaa32, 0x20e6, 0x1, 0x1);
        gbc.writeMem(0x78f9, { 0x3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x78fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 033D
        gbc.setState(0xac3d, 0x40e9, 0xa080, 0x1414, 0x4762, 0x6f99, 0x1, 0x1);
        gbc.writeMem(0xac3d, { 0x3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x40e9, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xac3d));
        // 03 033E
        gbc.setState(0x81ce, 0x9ff8, 0x8e60, 0x426f, 0xa2db, 0x59a2, 0x0, 0x1);
        gbc.writeMem(0x81ce, { 0x3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ff8, gbc.sp());
        EXPECT(0x81cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x81ce));
        // 03 033F
        gbc.setState(0x6e12, 0x1ee3, 0x5bb0, 0xa511, 0xf6b9, 0x58cd, 0x0, 0x1);
        gbc.writeMem(0x6e12, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ee3, gbc.sp());
        EXPECT(0x6e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0340
        gbc.setState(0x4705, 0x311, 0xa90, 0x392a, 0xa440, 0xd861, 0x1, 0x0);
        gbc.writeMem(0x4705, { 0x3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0x4706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0341
        gbc.setState(0xa873, 0x7ad8, 0x17d0, 0x71aa, 0x4d35, 0x1729, 0x1, 0x1);
        gbc.writeMem(0xa873, { 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7ad8, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa873));
        // 03 0342
        gbc.setState(0x2bb3, 0x4e93, 0x6920, 0x3b99, 0x71dc, 0x3eeb, 0x1, 0x0);
        gbc.writeMem(0x2bb3, { 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e93, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0343
        gbc.setState(0x3e78, 0x77d5, 0xd9a0, 0xb042, 0x2898, 0xabe, 0x1, 0x1);
        gbc.writeMem(0x3e78, { 0x3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x77d5, gbc.sp());
        EXPECT(0x3e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0344
        gbc.setState(0xbf0d, 0xfec2, 0xb070, 0x669e, 0x6c3c, 0x7ca9, 0x1, 0x1);
        gbc.writeMem(0xbf0d, { 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbf0d));
        // 03 0345
        gbc.setState(0x5355, 0x1391, 0x8930, 0x56ab, 0xa08, 0xd4d6, 0x1, 0x1);
        gbc.writeMem(0x5355, { 0x3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0x5356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0346
        gbc.setState(0xa7a, 0x7017, 0x6750, 0xd80a, 0x4bf2, 0xee89, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0x3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7017, gbc.sp());
        EXPECT(0xa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0347
        gbc.setState(0xe856, 0x996a, 0xcfa0, 0xa06b, 0x18b0, 0xdf90, 0x0, 0x0);
        gbc.writeMem(0xe856, { 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x996a, gbc.sp());
        EXPECT(0xe857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe856));
        // 03 0348
        gbc.setState(0x544e, 0x3c7, 0xb840, 0xbc54, 0xa9a5, 0x2ad, 0x1, 0x1);
        gbc.writeMem(0x544e, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0x544f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0349
        gbc.setState(0x75fd, 0x58b4, 0x3b80, 0xe3c4, 0xdb1e, 0x185c, 0x0, 0x0);
        gbc.writeMem(0x75fd, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0x75fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 034A
        gbc.setState(0x9d09, 0x2c55, 0xff60, 0x5d1f, 0x5611, 0xf8b3, 0x0, 0x0);
        gbc.writeMem(0x9d09, { 0x3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d09));
        // 03 034B
        gbc.setState(0xa36d, 0x2e78, 0xff0, 0x2159, 0x3743, 0xb56a, 0x1, 0x1);
        gbc.writeMem(0xa36d, { 0x3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2e78, gbc.sp());
        EXPECT(0xa36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa36d));
        // 03 034C
        gbc.setState(0xe24, 0x95ce, 0x2cf0, 0x147b, 0x68f3, 0xb0f7, 0x1, 0x0);
        gbc.writeMem(0xe24, { 0x3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x95ce, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 034D
        gbc.setState(0x1b80, 0x1d91, 0x97d0, 0x9a7c, 0x9b30, 0x99ef, 0x0, 0x0);
        gbc.writeMem(0x1b80, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1d91, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 034E
        gbc.setState(0x4860, 0x1517, 0x68c0, 0xa9ac, 0x4196, 0x1abd, 0x0, 0x1);
        gbc.writeMem(0x4860, { 0x3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1517, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 034F
        gbc.setState(0x95d6, 0x7183, 0x1720, 0x3f6e, 0x4478, 0x2800, 0x0, 0x0);
        gbc.writeMem(0x95d6, { 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7183, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x95d6));
        // 03 0350
        gbc.setState(0xd028, 0xe61d, 0x2330, 0xabc7, 0x496e, 0xb804, 0x1, 0x0);
        gbc.writeMem(0xd028, { 0x3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe61d, gbc.sp());
        EXPECT(0xd029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd028));
        // 03 0351
        gbc.setState(0x3843, 0x457b, 0x1210, 0x9710, 0xd0ad, 0xc488, 0x0, 0x0);
        gbc.writeMem(0x3843, { 0x3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0352
        gbc.setState(0xcb74, 0xd112, 0x1430, 0x4598, 0x3db1, 0xc2b3, 0x0, 0x1);
        gbc.writeMem(0xcb74, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcb74));
        // 03 0353
        gbc.setState(0x52c, 0xc390, 0xb580, 0x1d83, 0x2430, 0xad9e, 0x1, 0x1);
        gbc.writeMem(0x52c, { 0x3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc390, gbc.sp());
        EXPECT(0x52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0354
        gbc.setState(0x4f0a, 0x5cd3, 0x64e0, 0xabd3, 0x720a, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0x4f0a, { 0x3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5cd3, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0355
        gbc.setState(0x2995, 0x961c, 0xe590, 0x7ded, 0xb29f, 0xab2c, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0x3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0356
        gbc.setState(0x425f, 0xe01b, 0x58b0, 0xaa67, 0xcf4a, 0x416e, 0x1, 0x0);
        gbc.writeMem(0x425f, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0357
        gbc.setState(0xeace, 0xa442, 0xb720, 0x2e31, 0xf862, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0xeace, { 0x3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa442, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeace));
        // 03 0359
        gbc.setState(0x7d3d, 0x6a63, 0xde90, 0x1035, 0xbf2c, 0x371f, 0x0, 0x0);
        gbc.writeMem(0x7d3d, { 0x3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a63, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 035A
        gbc.setState(0x9b1d, 0x9582, 0x2d00, 0xb8c0, 0x7ff7, 0x121b, 0x0, 0x0);
        gbc.writeMem(0x9b1d, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9582, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b1d));
        // 03 035B
        gbc.setState(0xdc0b, 0x23a6, 0xe690, 0x23f5, 0x89ca, 0xc97a, 0x0, 0x1);
        gbc.writeMem(0xdc0b, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23a6, gbc.sp());
        EXPECT(0xdc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdc0b));
        // 03 035C
        gbc.setState(0x5a9b, 0x8a5a, 0x4680, 0x6e17, 0x4cb0, 0x39ca, 0x0, 0x0);
        gbc.writeMem(0x5a9b, { 0x3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8a5a, gbc.sp());
        EXPECT(0x5a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 035D
        gbc.setState(0xede9, 0x3ec3, 0xacb0, 0xab1d, 0xdb5, 0xe2d2, 0x0, 0x0);
        gbc.writeMem(0xede9, { 0x3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3ec3, gbc.sp());
        EXPECT(0xedea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xede9));
        // 03 035E
        gbc.setState(0x5e0d, 0x9399, 0x7a0, 0xd38c, 0x7db6, 0x31a1, 0x1, 0x1);
        gbc.writeMem(0x5e0d, { 0x3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x5e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 035F
        gbc.setState(0x1a0e, 0x619, 0x6350, 0x16b4, 0xe550, 0x67e1, 0x1, 0x1);
        gbc.writeMem(0x1a0e, { 0x3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x1a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0360
        gbc.setState(0xc233, 0x7e9b, 0x1dd0, 0x818f, 0x6ef6, 0xf2b, 0x1, 0x1);
        gbc.writeMem(0xc233, { 0x3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7e9b, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc233));
        // 03 0362
        gbc.setState(0x783d, 0x4b1b, 0xa5a0, 0x3e42, 0xc93f, 0xf3c3, 0x1, 0x1);
        gbc.writeMem(0x783d, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b1b, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0363
        gbc.setState(0xa4bf, 0x2466, 0x5130, 0x5beb, 0x9bc, 0x9af6, 0x1, 0x0);
        gbc.writeMem(0xa4bf, { 0x3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa4bf));
        // 03 0364
        gbc.setState(0x8879, 0x5067, 0xf6d0, 0x59ec, 0xf305, 0x5990, 0x1, 0x1);
        gbc.writeMem(0x8879, { 0x3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x887a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8879));
        // 03 0365
        gbc.setState(0xbab7, 0xb1ed, 0x7dd0, 0x8bb0, 0xa1ff, 0x915c, 0x1, 0x1);
        gbc.writeMem(0xbab7, { 0x3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbab7));
        // 03 0366
        gbc.setState(0x37e5, 0x589d, 0x1100, 0x52a5, 0x8f3f, 0x33fe, 0x1, 0x0);
        gbc.writeMem(0x37e5, { 0x3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x589d, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0367
        gbc.setState(0x2e69, 0xe0a, 0xe7e0, 0xd61f, 0xc5d8, 0xdd61, 0x0, 0x1);
        gbc.writeMem(0x2e69, { 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe0a, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0368
        gbc.setState(0xb0d, 0x490, 0xecd0, 0x7909, 0xc4ae, 0x5118, 0x1, 0x0);
        gbc.writeMem(0xb0d, { 0x3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0369
        gbc.setState(0x9e37, 0x31fc, 0xfff0, 0x965e, 0x5bb3, 0xd4d3, 0x1, 0x1);
        gbc.writeMem(0x9e37, { 0x3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x31fc, gbc.sp());
        EXPECT(0x9e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9e37));
        // 03 036A
        gbc.setState(0x6853, 0x4780, 0x1d40, 0xe85f, 0xf974, 0xbd9a, 0x1, 0x0);
        gbc.writeMem(0x6853, { 0x3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4780, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 036B
        gbc.setState(0xc7db, 0xc794, 0x9860, 0xdd56, 0x3701, 0x91d9, 0x1, 0x1);
        gbc.writeMem(0xc7db, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc794, gbc.sp());
        EXPECT(0xc7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc7db));
        // 03 036C
        gbc.setState(0xfd0, 0x963d, 0x2b70, 0xbbf1, 0x2816, 0x7e33, 0x1, 0x1);
        gbc.writeMem(0xfd0, { 0x3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 036D
        gbc.setState(0xc096, 0xd9fc, 0xa9a0, 0x13ee, 0xbd5, 0x37b2, 0x0, 0x0);
        gbc.writeMem(0xc096, { 0x3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd9fc, gbc.sp());
        EXPECT(0xc097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc096));
        // 03 036E
        gbc.setState(0x78c3, 0x5ffc, 0x5a10, 0x7c79, 0x619d, 0xbca4, 0x1, 0x0);
        gbc.writeMem(0x78c3, { 0x3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5ffc, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 036F
        gbc.setState(0x5b8d, 0xe178, 0xe180, 0x42b4, 0x2da1, 0x8b31, 0x0, 0x1);
        gbc.writeMem(0x5b8d, { 0x3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0x5b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0371
        gbc.setState(0x29a8, 0x3b61, 0x5000, 0xd4a8, 0x2519, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x29a8, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3b61, gbc.sp());
        EXPECT(0x29a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0372
        gbc.setState(0x49ec, 0x53c2, 0x55a0, 0x70fc, 0x1802, 0x1228, 0x0, 0x1);
        gbc.writeMem(0x49ec, { 0x3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x53c2, gbc.sp());
        EXPECT(0x49ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0373
        gbc.setState(0x246f, 0x4e6c, 0x3490, 0x939a, 0xd5ca, 0xfe39, 0x1, 0x1);
        gbc.writeMem(0x246f, { 0x3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4e6c, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0374
        gbc.setState(0x3801, 0x546d, 0xa7e0, 0xfc05, 0x32d, 0xaee6, 0x0, 0x0);
        gbc.writeMem(0x3801, { 0x3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0376
        gbc.setState(0x6ff6, 0x124c, 0x3bb0, 0xd910, 0x70a8, 0x7cff, 0x0, 0x0);
        gbc.writeMem(0x6ff6, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0x6ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0377
        gbc.setState(0xa61b, 0x5f79, 0xe40, 0xa71a, 0xa7e9, 0x2832, 0x0, 0x0);
        gbc.writeMem(0xa61b, { 0x3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5f79, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa61b));
        // 03 0378
        gbc.setState(0xee26, 0x2b96, 0x9f40, 0xef3e, 0xa32f, 0x2a11, 0x0, 0x0);
        gbc.writeMem(0xee26, { 0x3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xee26));
        // 03 0379
        gbc.setState(0xdf29, 0xebce, 0x5df0, 0xa556, 0xcd5, 0x19ba, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xdf29));
        // 03 037A
        gbc.setState(0xd3a9, 0x2011, 0x38e0, 0x270a, 0x6afb, 0xd51a, 0x0, 0x0);
        gbc.writeMem(0xd3a9, { 0x3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0xd3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3a9));
        // 03 037B
        gbc.setState(0x9b0c, 0x36c3, 0xdfa0, 0xe17f, 0xfdf3, 0xe558, 0x0, 0x1);
        gbc.writeMem(0x9b0c, { 0x3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x36c3, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b0c));
        // 03 037C
        gbc.setState(0xda3b, 0xa58e, 0xec0, 0x1eff, 0x4139, 0x4bad, 0x1, 0x0);
        gbc.writeMem(0xda3b, { 0x3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa58e, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xda3b));
        // 03 037D
        gbc.setState(0xc692, 0xe881, 0x7680, 0x58ce, 0x9154, 0xa14a, 0x0, 0x1);
        gbc.writeMem(0xc692, { 0x3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe881, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc692));
        // 03 037E
        gbc.setState(0x75ee, 0xd0ae, 0x1410, 0xccff, 0x3b01, 0x9189, 0x1, 0x0);
        gbc.writeMem(0x75ee, { 0x3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd0ae, gbc.sp());
        EXPECT(0x75ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 037F
        gbc.setState(0x9656, 0x2e4a, 0xe660, 0x75c1, 0x5383, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0x9656, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2e4a, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9656));
        // 03 0380
        gbc.setState(0xbfed, 0x227b, 0xde60, 0x7752, 0xe588, 0x944f, 0x1, 0x0);
        gbc.writeMem(0xbfed, { 0x3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x227b, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbfed));
        // 03 0381
        gbc.setState(0x1886, 0x1286, 0xfee0, 0x511c, 0xdc20, 0xc09f, 0x1, 0x0);
        gbc.writeMem(0x1886, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1286, gbc.sp());
        EXPECT(0x1887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0382
        gbc.setState(0x8d4e, 0x49d3, 0x7500, 0xf936, 0x17b2, 0xc4f5, 0x1, 0x1);
        gbc.writeMem(0x8d4e, { 0x3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x49d3, gbc.sp());
        EXPECT(0x8d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8d4e));
        // 03 0383
        gbc.setState(0xef9f, 0xeb84, 0xb7d0, 0xd05, 0xf66c, 0xbba3, 0x1, 0x0);
        gbc.writeMem(0xef9f, { 0x3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xeb84, gbc.sp());
        EXPECT(0xefa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xef9f));
        // 03 0384
        gbc.setState(0x5ccf, 0x32fe, 0x9730, 0x9fae, 0xdaa8, 0x7f9e, 0x1, 0x0);
        gbc.writeMem(0x5ccf, { 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x32fe, gbc.sp());
        EXPECT(0x5cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0385
        gbc.setState(0xd610, 0xccbc, 0x5550, 0x1572, 0x101c, 0x4e44, 0x1, 0x1);
        gbc.writeMem(0xd610, { 0x3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xccbc, gbc.sp());
        EXPECT(0xd611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd610));
        // 03 0386
        gbc.setState(0x4d30, 0x4fa9, 0x3310, 0x3f73, 0x5e7, 0x96f9, 0x0, 0x0);
        gbc.writeMem(0x4d30, { 0x3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x4d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0387
        gbc.setState(0xa1ad, 0xd6fa, 0x1a0, 0xc31b, 0xbad3, 0xbb10, 0x1, 0x0);
        gbc.writeMem(0xa1ad, { 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd6fa, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa1ad));
        // 03 0388
        gbc.setState(0xeb42, 0xea7c, 0x5040, 0x7687, 0x8319, 0xd94b, 0x0, 0x0);
        gbc.writeMem(0xeb42, { 0x3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0xeb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeb42));
        // 03 0389
        gbc.setState(0xc9ac, 0xb0e, 0x1ad0, 0xb290, 0xf820, 0x44ff, 0x0, 0x0);
        gbc.writeMem(0xc9ac, { 0x3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb0e, gbc.sp());
        EXPECT(0xc9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc9ac));
        // 03 038A
        gbc.setState(0x85ed, 0x53bd, 0x9f20, 0xdda5, 0xc93f, 0xf8d0, 0x0, 0x1);
        gbc.writeMem(0x85ed, { 0x3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x53bd, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x85ed));
        // 03 038B
        gbc.setState(0x6339, 0x2a45, 0x1660, 0x6bb0, 0xa334, 0x832a, 0x1, 0x0);
        gbc.writeMem(0x6339, { 0x3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2a45, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 038C
        gbc.setState(0x859a, 0x6a7d, 0xb6e0, 0xe60b, 0xd10e, 0xc12d, 0x0, 0x1);
        gbc.writeMem(0x859a, { 0x3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6a7d, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x859a));
        // 03 038D
        gbc.setState(0xa09a, 0x16de, 0xfdd0, 0xc1c0, 0x4433, 0x249f, 0x0, 0x1);
        gbc.writeMem(0xa09a, { 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x16de, gbc.sp());
        EXPECT(0xa09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa09a));
        // 03 038E
        gbc.setState(0x87a9, 0xc4d8, 0xfa50, 0x888a, 0xb192, 0x54ff, 0x1, 0x1);
        gbc.writeMem(0x87a9, { 0x3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0x87aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x87a9));
        // 03 038F
        gbc.setState(0x7714, 0xfcac, 0x8ce0, 0xce88, 0x3f2f, 0x9d94, 0x0, 0x0);
        gbc.writeMem(0x7714, { 0x3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfcac, gbc.sp());
        EXPECT(0x7715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0391
        gbc.setState(0x6455, 0xcb9e, 0x4a80, 0x96e0, 0xf68f, 0x2f9e, 0x1, 0x1);
        gbc.writeMem(0x6455, { 0x3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcb9e, gbc.sp());
        EXPECT(0x6456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0392
        gbc.setState(0x3a0e, 0x3688, 0xad0, 0xc0d1, 0x81c7, 0x2e1d, 0x1, 0x0);
        gbc.writeMem(0x3a0e, { 0x3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3688, gbc.sp());
        EXPECT(0x3a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 0393
        gbc.setState(0xb392, 0x9464, 0xd720, 0x63f, 0x2ba1, 0x93ae, 0x1, 0x1);
        gbc.writeMem(0xb392, { 0x3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9464, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb392));
        // 03 0394
        gbc.setState(0x94b6, 0x9702, 0x3050, 0xf6d1, 0xeac7, 0x4ef1, 0x0, 0x1);
        gbc.writeMem(0x94b6, { 0x3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9702, gbc.sp());
        EXPECT(0x94b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x94b6));
        // 03 0395
        gbc.setState(0x132d, 0xeb81, 0x9bc0, 0xe8c1, 0x49f8, 0x867e, 0x0, 0x0);
        gbc.writeMem(0x132d, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 0396
        gbc.setState(0x98b6, 0x6dea, 0x3700, 0xe7f9, 0x39fd, 0x97f5, 0x0, 0x0);
        gbc.writeMem(0x98b6, { 0x3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0x98b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x98b6));
        // 03 0397
        gbc.setState(0x96ea, 0x2a7, 0x6540, 0x1c9a, 0x9f9a, 0xcd3c, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0x3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2a7, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x96ea));
        // 03 0398
        gbc.setState(0x8036, 0xe01e, 0x5920, 0x9501, 0xa3fa, 0x317a, 0x0, 0x0);
        gbc.writeMem(0x8036, { 0x3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe01e, gbc.sp());
        EXPECT(0x8037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8036));
        // 03 0399
        gbc.setState(0xe040, 0x4cba, 0xd680, 0x96d, 0x84e0, 0x8348, 0x0, 0x0);
        gbc.writeMem(0xe040, { 0x3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4cba, gbc.sp());
        EXPECT(0xe041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe040));
        // 03 039A
        gbc.setState(0x4949, 0x53f4, 0xfd90, 0xeac3, 0x1c6b, 0xd661, 0x0, 0x0);
        gbc.writeMem(0x4949, { 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x53f4, gbc.sp());
        EXPECT(0x494a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 039B
        gbc.setState(0x91db, 0xbf40, 0x7480, 0xfd65, 0x712c, 0xe709, 0x0, 0x1);
        gbc.writeMem(0x91db, { 0x3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbf40, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x91db));
        // 03 039D
        gbc.setState(0x1675, 0xd952, 0x9610, 0x7081, 0xc0ff, 0x6834, 0x1, 0x0);
        gbc.writeMem(0x1675, { 0x3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd952, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 039E
        gbc.setState(0x97db, 0xa2c8, 0x42d0, 0xa6fe, 0x6b6f, 0x6132, 0x0, 0x0);
        gbc.writeMem(0x97db, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x97db));
        // 03 039F
        gbc.setState(0x149, 0x6934, 0xb90, 0x28f8, 0x82cb, 0x90c9, 0x0, 0x0);
        gbc.writeMem(0x149, { 0x3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6934, gbc.sp());
        EXPECT(0x14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03A0
        gbc.setState(0x47de, 0x3f3e, 0xeac0, 0x1e30, 0x1cf5, 0xc652, 0x1, 0x0);
        gbc.writeMem(0x47de, { 0x3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3f3e, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03A1
        gbc.setState(0x8194, 0x519a, 0x4420, 0xdeaa, 0xcb2c, 0x6e8e, 0x1, 0x1);
        gbc.writeMem(0x8194, { 0x3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x519a, gbc.sp());
        EXPECT(0x8195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8194));
        // 03 03A2
        gbc.setState(0x79e2, 0x8941, 0x120, 0xcd8d, 0xbd0b, 0xd561, 0x0, 0x1);
        gbc.writeMem(0x79e2, { 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x79e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03A3
        gbc.setState(0xbdc0, 0xa181, 0x5320, 0x798c, 0xdfe8, 0x91c8, 0x1, 0x0);
        gbc.writeMem(0xbdc0, { 0x3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbdc0));
        // 03 03A4
        gbc.setState(0x7ec7, 0xfb55, 0xf930, 0xa98d, 0x90d, 0xa0d9, 0x1, 0x0);
        gbc.writeMem(0x7ec7, { 0x3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfb55, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03A5
        gbc.setState(0xa7ad, 0x1921, 0xba00, 0x4b68, 0x5d66, 0x5aa5, 0x1, 0x0);
        gbc.writeMem(0xa7ad, { 0x3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1921, gbc.sp());
        EXPECT(0xa7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa7ad));
        // 03 03A6
        gbc.setState(0x2a7f, 0x39f2, 0x2ea0, 0xb636, 0x2a49, 0x5239, 0x0, 0x0);
        gbc.writeMem(0x2a7f, { 0x3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x2a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03A7
        gbc.setState(0x588a, 0x8f47, 0x5880, 0x5161, 0xf58d, 0x36d, 0x1, 0x0);
        gbc.writeMem(0x588a, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8f47, gbc.sp());
        EXPECT(0x588b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03A8
        gbc.setState(0x134c, 0x8fe9, 0xb830, 0xf24b, 0x62ed, 0x5ad3, 0x0, 0x0);
        gbc.writeMem(0x134c, { 0x3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8fe9, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03A9
        gbc.setState(0x26a1, 0xc8d6, 0xc7b0, 0x2779, 0x9527, 0x1ed9, 0x1, 0x0);
        gbc.writeMem(0x26a1, { 0x3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03AA
        gbc.setState(0xc34c, 0xb908, 0x7e80, 0x568d, 0x2a3a, 0x1bee, 0x0, 0x0);
        gbc.writeMem(0xc34c, { 0x3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb908, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc34c));
        // 03 03AB
        gbc.setState(0xc707, 0x78f9, 0xc7a0, 0x1c8c, 0x578d, 0x125e, 0x1, 0x0);
        gbc.writeMem(0xc707, { 0x3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x78f9, gbc.sp());
        EXPECT(0xc708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc707));
        // 03 03AC
        gbc.setState(0xd3ee, 0xad03, 0x3b40, 0xb66, 0x5dbb, 0x1754, 0x1, 0x0);
        gbc.writeMem(0xd3ee, { 0x3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3ee));
        // 03 03AD
        gbc.setState(0x4dde, 0xb76a, 0x4bd0, 0xa2ee, 0x259b, 0x2202, 0x1, 0x1);
        gbc.writeMem(0x4dde, { 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb76a, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03AE
        gbc.setState(0xbc48, 0xc3ca, 0x19d0, 0x8f72, 0xa1e6, 0x4aab, 0x1, 0x0);
        gbc.writeMem(0xbc48, { 0x3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbc48));
        // 03 03AF
        gbc.setState(0x21a, 0xa39e, 0x4a80, 0xd05c, 0x53e1, 0x90da, 0x0, 0x0);
        gbc.writeMem(0x21a, { 0x3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03B0
        gbc.setState(0xa57c, 0x8b4c, 0x4290, 0x9161, 0xf002, 0x28eb, 0x0, 0x0);
        gbc.writeMem(0xa57c, { 0x3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0xa57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa57c));
        // 03 03B1
        gbc.setState(0x61e1, 0xe672, 0xa5f0, 0x3e2d, 0xd0ff, 0x1de0, 0x1, 0x1);
        gbc.writeMem(0x61e1, { 0x3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03B3
        gbc.setState(0xd623, 0x3ea, 0x2870, 0x78dd, 0x4561, 0xd930, 0x1, 0x0);
        gbc.writeMem(0xd623, { 0x3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3ea, gbc.sp());
        EXPECT(0xd624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd623));
        // 03 03B4
        gbc.setState(0x742, 0x250f, 0x80, 0x99b6, 0xce43, 0xefa3, 0x0, 0x1);
        gbc.writeMem(0x742, { 0x3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x250f, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03B5
        gbc.setState(0xeb6e, 0xbc5c, 0xdac0, 0xab4f, 0x37f5, 0x1a61, 0x1, 0x1);
        gbc.writeMem(0xeb6e, { 0x3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0xeb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeb6e));
        // 03 03B6
        gbc.setState(0x9ef6, 0xfbc5, 0xc6a0, 0xe6ea, 0xd0d3, 0x3259, 0x0, 0x1);
        gbc.writeMem(0x9ef6, { 0x3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfbc5, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9ef6));
        // 03 03B7
        gbc.setState(0x79cc, 0x3087, 0xee60, 0x794e, 0x56ba, 0x6161, 0x0, 0x1);
        gbc.writeMem(0x79cc, { 0x3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3087, gbc.sp());
        EXPECT(0x79cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03B9
        gbc.setState(0x8c43, 0x7f0e, 0x3ce0, 0xc249, 0xf01, 0x704, 0x0, 0x1);
        gbc.writeMem(0x8c43, { 0x3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f0e, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8c43));
        // 03 03BA
        gbc.setState(0x924a, 0xd08f, 0xe670, 0xdae2, 0x389f, 0xf1e0, 0x1, 0x0);
        gbc.writeMem(0x924a, { 0x3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd08f, gbc.sp());
        EXPECT(0x924b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x924a));
        // 03 03BB
        gbc.setState(0xe4eb, 0xa006, 0x2030, 0x23cc, 0x24cd, 0xca86, 0x1, 0x0);
        gbc.writeMem(0xe4eb, { 0x3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe4eb));
        // 03 03BC
        gbc.setState(0x852d, 0xae12, 0x9b90, 0x6a2b, 0x8a6b, 0xeeb1, 0x0, 0x1);
        gbc.writeMem(0x852d, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xae12, gbc.sp());
        EXPECT(0x852e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x852d));
        // 03 03BD
        gbc.setState(0xc887, 0xae77, 0x8610, 0xb618, 0xae91, 0x6b3, 0x1, 0x1);
        gbc.writeMem(0xc887, { 0x3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0xc888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc887));
        // 03 03BE
        gbc.setState(0xd036, 0x6420, 0xb070, 0xee66, 0x7b5c, 0xb183, 0x0, 0x1);
        gbc.writeMem(0xd036, { 0x3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6420, gbc.sp());
        EXPECT(0xd037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd036));
        // 03 03BF
        gbc.setState(0xebed, 0xd8e2, 0x590, 0x406a, 0x56f9, 0x9975, 0x0, 0x1);
        gbc.writeMem(0xebed, { 0x3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebed));
        // 03 03C0
        gbc.setState(0xb952, 0xac04, 0xf750, 0x7a65, 0x3acb, 0x35fc, 0x0, 0x1);
        gbc.writeMem(0xb952, { 0x3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0xb953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb952));
        // 03 03C1
        gbc.setState(0xe07a, 0x53f6, 0x3f00, 0xa0d1, 0xcac1, 0x4c59, 0x1, 0x0);
        gbc.writeMem(0xe07a, { 0x3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0xe07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe07a));
        // 03 03C2
        gbc.setState(0x2be6, 0x6dc2, 0x9960, 0x4d84, 0xdd73, 0x4863, 0x1, 0x0);
        gbc.writeMem(0x2be6, { 0x3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03C3
        gbc.setState(0xc242, 0xb9e5, 0x2d90, 0x5c70, 0xe948, 0x6ef, 0x1, 0x0);
        gbc.writeMem(0xc242, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc242));
        // 03 03C4
        gbc.setState(0xebdf, 0x353b, 0x9de0, 0x720f, 0x1261, 0x6e91, 0x0, 0x0);
        gbc.writeMem(0xebdf, { 0x3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x353b, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xebdf));
        // 03 03C5
        gbc.setState(0xb7ba, 0xd4cc, 0x9b90, 0x3648, 0xce64, 0x1da5, 0x0, 0x0);
        gbc.writeMem(0xb7ba, { 0x3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb7ba));
        // 03 03C6
        gbc.setState(0x3daf, 0xf511, 0xdd20, 0xcde0, 0x4b7, 0x29e2, 0x0, 0x1);
        gbc.writeMem(0x3daf, { 0x3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03C7
        gbc.setState(0x4adc, 0x2214, 0x9880, 0x5cb4, 0x67cd, 0x3dc2, 0x0, 0x1);
        gbc.writeMem(0x4adc, { 0x3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x4add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03C8
        gbc.setState(0x11ab, 0x5c34, 0x7f10, 0xd15c, 0xf756, 0x9071, 0x0, 0x0);
        gbc.writeMem(0x11ab, { 0x3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5c34, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03C9
        gbc.setState(0x345a, 0x80be, 0x73f0, 0x8cc6, 0x67e9, 0x9117, 0x0, 0x0);
        gbc.writeMem(0x345a, { 0x3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03CA
        gbc.setState(0xa57, 0x31af, 0xf390, 0x16b9, 0x8871, 0xe85d, 0x0, 0x1);
        gbc.writeMem(0xa57, { 0x3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03CB
        gbc.setState(0x4445, 0xb610, 0xa890, 0xa77e, 0xbed7, 0x7e25, 0x1, 0x0);
        gbc.writeMem(0x4445, { 0x3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03CC
        gbc.setState(0xc8ce, 0x462b, 0x96c0, 0xc146, 0x25c8, 0xb1d8, 0x1, 0x1);
        gbc.writeMem(0xc8ce, { 0x3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x462b, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc8ce));
        // 03 03CD
        gbc.setState(0xa6a6, 0xde7c, 0x36a0, 0x2daf, 0x5292, 0x59b5, 0x0, 0x0);
        gbc.writeMem(0xa6a6, { 0x3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xde7c, gbc.sp());
        EXPECT(0xa6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa6a6));
        // 03 03CE
        gbc.setState(0x917c, 0xef72, 0x4990, 0xe323, 0xf392, 0x5325, 0x0, 0x0);
        gbc.writeMem(0x917c, { 0x3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xef72, gbc.sp());
        EXPECT(0x917d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x917c));
        // 03 03CF
        gbc.setState(0xa64d, 0x8e88, 0x4640, 0xffcc, 0xfd06, 0xc7b8, 0x0, 0x1);
        gbc.writeMem(0xa64d, { 0x3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa64d));
        // 03 03D0
        gbc.setState(0xe4ec, 0x54fe, 0x5b40, 0x684d, 0x761, 0x3aca, 0x1, 0x0);
        gbc.writeMem(0xe4ec, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x54fe, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe4ec));
        // 03 03D1
        gbc.setState(0x51a, 0xca7f, 0xc00, 0x1a61, 0x393, 0x7180, 0x0, 0x0);
        gbc.writeMem(0x51a, { 0x3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xca7f, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03D2
        gbc.setState(0x442f, 0xd447, 0xf940, 0x927f, 0xdb26, 0x2aca, 0x0, 0x1);
        gbc.writeMem(0x442f, { 0x3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd447, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03D3
        gbc.setState(0x268, 0x69b7, 0x2880, 0x32de, 0xe25c, 0x1bd3, 0x0, 0x0);
        gbc.writeMem(0x268, { 0x3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03D4
        gbc.setState(0xaf6a, 0x2273, 0x8bd0, 0x243d, 0x174a, 0x1545, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0x3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2273, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xaf6a));
        // 03 03D5
        gbc.setState(0x571b, 0x5d6d, 0x7870, 0x42a9, 0x5e8a, 0x8124, 0x0, 0x1);
        gbc.writeMem(0x571b, { 0x3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5d6d, gbc.sp());
        EXPECT(0x571c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03D6
        gbc.setState(0x846b, 0xaf6d, 0xbca0, 0x53a3, 0x49ff, 0xc6a2, 0x1, 0x1);
        gbc.writeMem(0x846b, { 0x3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaf6d, gbc.sp());
        EXPECT(0x846c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x846b));
        // 03 03D7
        gbc.setState(0x992f, 0x60d6, 0xf780, 0xde98, 0xf9c8, 0x4134, 0x1, 0x1);
        gbc.writeMem(0x992f, { 0x3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x60d6, gbc.sp());
        EXPECT(0x9930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x992f));
        // 03 03D8
        gbc.setState(0x8b0e, 0x9844, 0xf060, 0x4fa3, 0x53e0, 0xa7c4, 0x1, 0x1);
        gbc.writeMem(0x8b0e, { 0x3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8b0e));
        // 03 03D9
        gbc.setState(0xad3, 0x5135, 0x41d0, 0xfbbd, 0x3db9, 0xb6f, 0x0, 0x1);
        gbc.writeMem(0xad3, { 0x3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5135, gbc.sp());
        EXPECT(0xad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 03 03DB
        gbc.setState(0x40b, 0xb942, 0x8d00, 0xcd65, 0xdb9c, 0x857b, 0x0, 0x1);
        gbc.writeMem(0x40b, { 0x3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb942, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03DC
        gbc.setState(0x2b5b, 0x37e4, 0x90a0, 0x36fe, 0x8707, 0xed42, 0x1, 0x0);
        gbc.writeMem(0x2b5b, { 0x3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0x2b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03DD
        gbc.setState(0x575c, 0xf256, 0xe8e0, 0x3f7c, 0xd65c, 0xa0fd, 0x1, 0x1);
        gbc.writeMem(0x575c, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf256, gbc.sp());
        EXPECT(0x575d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03DE
        gbc.setState(0xd6bb, 0xf2aa, 0xeb70, 0x60db, 0xe54, 0xa5cd, 0x0, 0x1);
        gbc.writeMem(0xd6bb, { 0x3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf2aa, gbc.sp());
        EXPECT(0xd6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd6bb));
        // 03 03DF
        gbc.setState(0x3048, 0xba8b, 0x9f20, 0xb06c, 0x5ffa, 0x9e4e, 0x1, 0x1);
        gbc.writeMem(0x3048, { 0x3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x3049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03E0
        gbc.setState(0x2d46, 0xb443, 0x4d40, 0x60ce, 0x5640, 0x8d5d, 0x1, 0x0);
        gbc.writeMem(0x2d46, { 0x3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0x2d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 03 03E1
        gbc.setState(0x9458, 0x7e02, 0x2db0, 0xff87, 0x6f17, 0xb6b5, 0x1, 0x0);
        gbc.writeMem(0x9458, { 0x3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0x9459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9458));
        // 03 03E2
        gbc.setState(0xd1e5, 0xc0a8, 0x1e0, 0x23f2, 0xe4d8, 0xa877, 0x1, 0x0);
        gbc.writeMem(0xd1e5, { 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc0a8, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd1e5));
        // 03 03E4
        gbc.setState(0xe24b, 0x14e3, 0xa1c0, 0xf2f4, 0x9363, 0xddb8, 0x0, 0x1);
        gbc.writeMem(0xe24b, { 0x3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0xe24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe24b));
        // 03 03E5
        gbc.setState(0x9d37, 0xd8de, 0x81b0, 0xd403, 0xf934, 0x2c0f, 0x0, 0x0);
        gbc.writeMem(0x9d37, { 0x3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd8de, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d37));
        // 03 03E6
        gbc.setState(0x829d, 0xc6d8, 0xe8b0, 0xd8c, 0x1be1, 0x162f, 0x1, 0x0);
        gbc.writeMem(0x829d, { 0x3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc6d8, gbc.sp());
        EXPECT(0x829e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x829d));
        // 03 03E7
        gbc.setState(0xd4a6, 0x1024, 0xf4d0, 0x2612, 0x764b, 0xb4c2, 0x0, 0x0);
        gbc.writeMem(0xd4a6, { 0x3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0xd4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd4a6));
    }
