    TEST(gbcemu, opcode_cb_ec) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB EC 0000
        gbc.setState(0xde64, 0x7477, 0xbde0, 0x9db1, 0x240, 0x8968, 0x1, 0x0);
        gbc.writeMem(0xde64, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7477, gbc.sp());
        EXPECT(0xde66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde64));
        EXPECT(0xec, gbc.readMem(0xde65));
        // CB EC 0001
        gbc.setState(0x74d9, 0x6f6e, 0x2850, 0x8d78, 0x861e, 0x7e91, 0x1, 0x1);
        gbc.writeMem(0x74d9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6f6e, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0002
        gbc.setState(0x4fb1, 0x271e, 0xb9d0, 0x943e, 0xd960, 0x7fed, 0x0, 0x0);
        gbc.writeMem(0x4fb1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0x4fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0003
        gbc.setState(0x6b7a, 0x708b, 0x8cd0, 0xaddb, 0xe025, 0x49bf, 0x1, 0x1);
        gbc.writeMem(0x6b7a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x708b, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0004
        gbc.setState(0xbb2e, 0x20d9, 0xcfd0, 0x6c2c, 0x84b2, 0xf66c, 0x0, 0x1);
        gbc.writeMem(0xbb2e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x20d9, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2e));
        EXPECT(0xec, gbc.readMem(0xbb2f));
        // CB EC 0005
        gbc.setState(0x42ec, 0x4db3, 0xf160, 0x2839, 0xf503, 0x7a63, 0x0, 0x1);
        gbc.writeMem(0x42ec, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4db3, gbc.sp());
        EXPECT(0x42ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0006
        gbc.setState(0xc23f, 0xa687, 0x4010, 0x942a, 0x3f0, 0x9849, 0x1, 0x1);
        gbc.writeMem(0xc23f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0xc241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23f));
        EXPECT(0xec, gbc.readMem(0xc240));
        // CB EC 0007
        gbc.setState(0x1485, 0x5b81, 0x1e70, 0xd073, 0x2d57, 0x60a3, 0x1, 0x0);
        gbc.writeMem(0x1485, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5b81, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0008
        gbc.setState(0xcd27, 0xfa1, 0x2120, 0x234f, 0xc758, 0x6376, 0x1, 0x0);
        gbc.writeMem(0xcd27, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0xcd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd27));
        EXPECT(0xec, gbc.readMem(0xcd28));
        // CB EC 000A
        gbc.setState(0x992c, 0x3c2f, 0xe1b0, 0x15b3, 0xac22, 0xa3e6, 0x1, 0x0);
        gbc.writeMem(0x992c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3c2f, gbc.sp());
        EXPECT(0x992e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992c));
        EXPECT(0xec, gbc.readMem(0x992d));
        // CB EC 000B
        gbc.setState(0x8ba2, 0x8891, 0xd610, 0x5ff9, 0xac8a, 0x2815, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0x8ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba2));
        EXPECT(0xec, gbc.readMem(0x8ba3));
        // CB EC 000C
        gbc.setState(0xa125, 0xefda, 0xbde0, 0xacdd, 0x6c91, 0x2dca, 0x1, 0x0);
        gbc.writeMem(0xa125, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xefda, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa125));
        EXPECT(0xec, gbc.readMem(0xa126));
        // CB EC 000D
        gbc.setState(0x4c89, 0xe933, 0x87c0, 0x3291, 0xadd8, 0xc0cc, 0x0, 0x1);
        gbc.writeMem(0x4c89, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe933, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 000E
        gbc.setState(0x3fee, 0x3727, 0x4ff0, 0xa09d, 0x2199, 0x3ffb, 0x0, 0x1);
        gbc.writeMem(0x3fee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3727, gbc.sp());
        EXPECT(0x3ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 000F
        gbc.setState(0xdd46, 0xa106, 0x5120, 0x9804, 0xd90c, 0xa479, 0x1, 0x0);
        gbc.writeMem(0xdd46, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa106, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd46));
        EXPECT(0xec, gbc.readMem(0xdd47));
        // CB EC 0010
        gbc.setState(0x7bce, 0x3bd4, 0xfd60, 0xa6af, 0xe16f, 0x901c, 0x0, 0x0);
        gbc.writeMem(0x7bce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3bd4, gbc.sp());
        EXPECT(0x7bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0011
        gbc.setState(0x708a, 0x6997, 0x3290, 0x8e0, 0x71f8, 0x2, 0x0, 0x0);
        gbc.writeMem(0x708a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6997, gbc.sp());
        EXPECT(0x708c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0012
        gbc.setState(0x3569, 0x2466, 0x63e0, 0x8ad4, 0xed7f, 0x1713, 0x1, 0x0);
        gbc.writeMem(0x3569, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0013
        gbc.setState(0xbe4f, 0x47c, 0xb5c0, 0x781f, 0x2f7f, 0x850f, 0x1, 0x1);
        gbc.writeMem(0xbe4f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x47c, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4f));
        EXPECT(0xec, gbc.readMem(0xbe50));
        // CB EC 0014
        gbc.setState(0xdb0e, 0xf565, 0x1d60, 0x14dc, 0xf72b, 0x1262, 0x0, 0x1);
        gbc.writeMem(0xdb0e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0e));
        EXPECT(0xec, gbc.readMem(0xdb0f));
        // CB EC 0015
        gbc.setState(0xd8e2, 0x2662, 0x6aa0, 0x3836, 0x93fa, 0x8063, 0x1, 0x1);
        gbc.writeMem(0xd8e2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e2));
        EXPECT(0xec, gbc.readMem(0xd8e3));
        // CB EC 0016
        gbc.setState(0x2201, 0xd8ee, 0x25a0, 0x1875, 0x4c7a, 0x15a7, 0x1, 0x1);
        gbc.writeMem(0x2201, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0017
        gbc.setState(0xdc68, 0x95db, 0x7330, 0xa29f, 0x5c10, 0xbe3e, 0x0, 0x0);
        gbc.writeMem(0xdc68, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x95db, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc68));
        EXPECT(0xec, gbc.readMem(0xdc69));
        // CB EC 0018
        gbc.setState(0x9892, 0xb5f3, 0x5320, 0x8ec0, 0x4626, 0xbf80, 0x1, 0x1);
        gbc.writeMem(0x9892, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb5f3, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9892));
        EXPECT(0xec, gbc.readMem(0x9893));
        // CB EC 0019
        gbc.setState(0xbb89, 0xc8c4, 0xac50, 0xf0c7, 0x8f0, 0xa8a1, 0x0, 0x1);
        gbc.writeMem(0xbb89, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc8c4, gbc.sp());
        EXPECT(0xbb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb89));
        EXPECT(0xec, gbc.readMem(0xbb8a));
        // CB EC 001B
        gbc.setState(0xa821, 0x989f, 0x1540, 0x8eaa, 0x3fe5, 0xff3d, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x989f, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa821));
        EXPECT(0xec, gbc.readMem(0xa822));
        // CB EC 001C
        gbc.setState(0xe1d0, 0x3d67, 0x1060, 0x961e, 0xef95, 0x565, 0x1, 0x0);
        gbc.writeMem(0xe1d0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3d67, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d0));
        EXPECT(0xec, gbc.readMem(0xe1d1));
        // CB EC 001D
        gbc.setState(0x67a, 0xdab, 0xb600, 0xf138, 0x5c65, 0x60c3, 0x1, 0x0);
        gbc.writeMem(0x67a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 001E
        gbc.setState(0xc20, 0x1a58, 0xf640, 0x1204, 0xabc, 0x8bb3, 0x0, 0x0);
        gbc.writeMem(0xc20, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1a58, gbc.sp());
        EXPECT(0xc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 001F
        gbc.setState(0x6c3d, 0x9dc, 0x3ad0, 0x861a, 0xf0be, 0x9e6d, 0x0, 0x1);
        gbc.writeMem(0x6c3d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9dc, gbc.sp());
        EXPECT(0x6c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0020
        gbc.setState(0x2efa, 0x4cdd, 0xc210, 0x923d, 0x18bd, 0xf1b6, 0x0, 0x1);
        gbc.writeMem(0x2efa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x2efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0021
        gbc.setState(0x79bb, 0xc139, 0xf950, 0x77ec, 0xa8da, 0x86ae, 0x1, 0x1);
        gbc.writeMem(0x79bb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc139, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0022
        gbc.setState(0xb54c, 0x95c5, 0x500, 0xbf97, 0x57d0, 0x4a40, 0x0, 0x1);
        gbc.writeMem(0xb54c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x95c5, gbc.sp());
        EXPECT(0xb54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54c));
        EXPECT(0xec, gbc.readMem(0xb54d));
        // CB EC 0023
        gbc.setState(0x8ed4, 0xf6b3, 0xf930, 0x1dd9, 0x81f3, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x8ed4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x8ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed4));
        EXPECT(0xec, gbc.readMem(0x8ed5));
        // CB EC 0024
        gbc.setState(0x9a5, 0x4fe4, 0xfcb0, 0xaadb, 0x7f35, 0xcc20, 0x0, 0x0);
        gbc.writeMem(0x9a5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4fe4, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0025
        gbc.setState(0x44cb, 0xd289, 0xe100, 0x2eea, 0x9ce4, 0x3777, 0x1, 0x0);
        gbc.writeMem(0x44cb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd289, gbc.sp());
        EXPECT(0x44cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0026
        gbc.setState(0x8897, 0x76bf, 0x8710, 0x1dfc, 0x6f5f, 0xc239, 0x1, 0x0);
        gbc.writeMem(0x8897, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x76bf, gbc.sp());
        EXPECT(0x8899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8897));
        EXPECT(0xec, gbc.readMem(0x8898));
        // CB EC 0027
        gbc.setState(0x1298, 0x455f, 0x3790, 0xfc67, 0xcb7c, 0x3ddd, 0x1, 0x0);
        gbc.writeMem(0x1298, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x455f, gbc.sp());
        EXPECT(0x129a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0028
        gbc.setState(0xb0da, 0xb7b6, 0x4c0, 0xbb22, 0x2b1, 0x6a12, 0x0, 0x0);
        gbc.writeMem(0xb0da, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0xb0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0da));
        EXPECT(0xec, gbc.readMem(0xb0db));
        // CB EC 0029
        gbc.setState(0x2fb9, 0xcb86, 0xbf60, 0xce6e, 0xec66, 0xe55d, 0x1, 0x0);
        gbc.writeMem(0x2fb9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb86, gbc.sp());
        EXPECT(0x2fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 002A
        gbc.setState(0xe42, 0xe245, 0x7c20, 0xdb29, 0xaedf, 0x7b9b, 0x1, 0x1);
        gbc.writeMem(0xe42, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe245, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 002B
        gbc.setState(0x1058, 0xfa29, 0xf020, 0x9cd2, 0x1de1, 0xf5c8, 0x0, 0x0);
        gbc.writeMem(0x1058, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 002C
        gbc.setState(0xceba, 0xcdee, 0x6c30, 0x5f71, 0x3385, 0x9cac, 0x0, 0x1);
        gbc.writeMem(0xceba, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcdee, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceba));
        EXPECT(0xec, gbc.readMem(0xcebb));
        // CB EC 002D
        gbc.setState(0x7f95, 0x4d8, 0xca50, 0x6e7, 0x7dcc, 0x8c2e, 0x1, 0x0);
        gbc.writeMem(0x7f95, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 002F
        gbc.setState(0x9622, 0x8075, 0x2cf0, 0xf96, 0x7950, 0xb7a8, 0x0, 0x0);
        gbc.writeMem(0x9622, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8075, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0xec, gbc.readMem(0x9623));
        // CB EC 0030
        gbc.setState(0xb1d8, 0x871c, 0xf790, 0xcccc, 0xac71, 0x6dec, 0x0, 0x1);
        gbc.writeMem(0xb1d8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0xb1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d8));
        EXPECT(0xec, gbc.readMem(0xb1d9));
        // CB EC 0032
        gbc.setState(0x9435, 0xc7c5, 0x2e50, 0x22e, 0x5c04, 0xf020, 0x0, 0x0);
        gbc.writeMem(0x9435, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc7c5, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9435));
        EXPECT(0xec, gbc.readMem(0x9436));
        // CB EC 0033
        gbc.setState(0x3051, 0x69e8, 0xfe10, 0x2190, 0xa5a0, 0xc159, 0x0, 0x1);
        gbc.writeMem(0x3051, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x3053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0034
        gbc.setState(0xe3cd, 0xdc9d, 0xcd00, 0x1347, 0x7061, 0x6025, 0x1, 0x1);
        gbc.writeMem(0xe3cd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdc9d, gbc.sp());
        EXPECT(0xe3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3cd));
        EXPECT(0xec, gbc.readMem(0xe3ce));
        // CB EC 0035
        gbc.setState(0x513a, 0x20d5, 0x8500, 0xebb4, 0x870a, 0xa70c, 0x1, 0x1);
        gbc.writeMem(0x513a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0x513c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0036
        gbc.setState(0x7c3f, 0x73bc, 0x7fb0, 0xa32e, 0x5ab2, 0xa361, 0x0, 0x0);
        gbc.writeMem(0x7c3f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0x7c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0037
        gbc.setState(0x98e9, 0x1372, 0xde50, 0x9d3b, 0xe74, 0x2cfd, 0x1, 0x0);
        gbc.writeMem(0x98e9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0x98eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e9));
        EXPECT(0xec, gbc.readMem(0x98ea));
        // CB EC 0038
        gbc.setState(0x3ac0, 0xffa0, 0x5cd0, 0xade6, 0xf5a3, 0x7ee3, 0x0, 0x0);
        gbc.writeMem(0x3ac0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0039
        gbc.setState(0xa501, 0x28de, 0x1860, 0x9b8e, 0xdc62, 0x3f8, 0x0, 0x1);
        gbc.writeMem(0xa501, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa501));
        EXPECT(0xec, gbc.readMem(0xa502));
        // CB EC 003B
        gbc.setState(0xcb2f, 0x5978, 0xe9a0, 0x1c51, 0xa416, 0xe66c, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0xec, gbc.readMem(0xcb30));
        // CB EC 003E
        gbc.setState(0x6955, 0xff81, 0xb2c0, 0xefaa, 0x5e30, 0xa1c9, 0x0, 0x0);
        gbc.writeMem(0x6955, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xff81, gbc.sp());
        EXPECT(0x6957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 003F
        gbc.setState(0xdafd, 0xdb6c, 0xed10, 0xe0c5, 0x6074, 0xf0d1, 0x0, 0x1);
        gbc.writeMem(0xdafd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafd));
        EXPECT(0xec, gbc.readMem(0xdafe));
        // CB EC 0040
        gbc.setState(0x925b, 0x5217, 0x4880, 0x25ad, 0xc40b, 0xdfc1, 0x1, 0x1);
        gbc.writeMem(0x925b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925b));
        EXPECT(0xec, gbc.readMem(0x925c));
        // CB EC 0041
        gbc.setState(0xc012, 0x1f50, 0x4e10, 0xb947, 0x92cb, 0xd86b, 0x0, 0x1);
        gbc.writeMem(0xc012, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1f50, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc012));
        EXPECT(0xec, gbc.readMem(0xc013));
        // CB EC 0042
        gbc.setState(0x8812, 0x277f, 0x3af0, 0xcc2d, 0x3916, 0x2fbb, 0x0, 0x1);
        gbc.writeMem(0x8812, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8812));
        EXPECT(0xec, gbc.readMem(0x8813));
        // CB EC 0043
        gbc.setState(0x74f6, 0x64d0, 0x2c80, 0x8dfb, 0x9f4b, 0x755c, 0x1, 0x0);
        gbc.writeMem(0x74f6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x64d0, gbc.sp());
        EXPECT(0x74f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0044
        gbc.setState(0x7435, 0xba60, 0x3600, 0x1a06, 0x1695, 0xe42a, 0x1, 0x0);
        gbc.writeMem(0x7435, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xba60, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0045
        gbc.setState(0xab0a, 0x7d65, 0x2c20, 0x47e0, 0xa556, 0xc6ad, 0x0, 0x0);
        gbc.writeMem(0xab0a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7d65, gbc.sp());
        EXPECT(0xab0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0a));
        EXPECT(0xec, gbc.readMem(0xab0b));
        // CB EC 0046
        gbc.setState(0x1d2c, 0x6b4c, 0x58d0, 0x38d7, 0x42ae, 0x8b14, 0x0, 0x0);
        gbc.writeMem(0x1d2c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6b4c, gbc.sp());
        EXPECT(0x1d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0047
        gbc.setState(0x7f3b, 0xf229, 0xe300, 0xcf4c, 0xa385, 0x4964, 0x1, 0x1);
        gbc.writeMem(0x7f3b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf229, gbc.sp());
        EXPECT(0x7f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0048
        gbc.setState(0xdb3, 0xcbef, 0x7a0, 0x5e23, 0xd2b, 0xa72e, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0049
        gbc.setState(0xda87, 0x13e1, 0xa580, 0xa8bd, 0x8a63, 0xcf0d, 0x1, 0x0);
        gbc.writeMem(0xda87, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x13e1, gbc.sp());
        EXPECT(0xda89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda87));
        EXPECT(0xec, gbc.readMem(0xda88));
        // CB EC 004A
        gbc.setState(0xdee, 0xf6f8, 0x11e0, 0x139, 0xd518, 0x98a0, 0x1, 0x1);
        gbc.writeMem(0xdee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf6f8, gbc.sp());
        EXPECT(0xdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 004B
        gbc.setState(0x2dce, 0x6237, 0xeac0, 0xf559, 0x270b, 0x6a88, 0x1, 0x1);
        gbc.writeMem(0x2dce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6237, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 004C
        gbc.setState(0xc9f8, 0x22e3, 0x570, 0xb2de, 0xd284, 0x16f5, 0x0, 0x1);
        gbc.writeMem(0xc9f8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x22e3, gbc.sp());
        EXPECT(0xc9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f8));
        EXPECT(0xec, gbc.readMem(0xc9f9));
        // CB EC 004D
        gbc.setState(0x198c, 0xf395, 0x2e50, 0xd0b7, 0xca7, 0x7199, 0x1, 0x1);
        gbc.writeMem(0x198c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0x198e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 004E
        gbc.setState(0x2614, 0x383a, 0x1890, 0x2505, 0x55a0, 0xd2da, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 004F
        gbc.setState(0x86c5, 0x954a, 0xcd70, 0xe8c2, 0xb872, 0xb243, 0x1, 0x0);
        gbc.writeMem(0x86c5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x954a, gbc.sp());
        EXPECT(0x86c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c5));
        EXPECT(0xec, gbc.readMem(0x86c6));
        // CB EC 0050
        gbc.setState(0xe0a2, 0xffb8, 0xcad0, 0x46fc, 0x98c4, 0x2585, 0x0, 0x0);
        gbc.writeMem(0xe0a2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xffb8, gbc.sp());
        EXPECT(0xe0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a2));
        EXPECT(0xec, gbc.readMem(0xe0a3));
        // CB EC 0051
        gbc.setState(0x5cb0, 0xb93e, 0xeda0, 0xbd71, 0x622e, 0xc335, 0x0, 0x0);
        gbc.writeMem(0x5cb0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb93e, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0052
        gbc.setState(0x2b04, 0x8ce7, 0xd330, 0x63cf, 0xa201, 0x528a, 0x1, 0x0);
        gbc.writeMem(0x2b04, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ce7, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0053
        gbc.setState(0xe5ac, 0xe5ff, 0xed50, 0xbd25, 0x13ed, 0xb4d1, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe5ff, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0xec, gbc.readMem(0xe5ad));
        // CB EC 0054
        gbc.setState(0x4621, 0xf9b9, 0x6020, 0x33e2, 0x53c6, 0xfa43, 0x1, 0x0);
        gbc.writeMem(0x4621, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x4623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0055
        gbc.setState(0x4f41, 0x882, 0x2570, 0xe1, 0x24a, 0x843a, 0x0, 0x1);
        gbc.writeMem(0x4f41, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0056
        gbc.setState(0x7503, 0xe1df, 0x89d0, 0xf8bb, 0x729b, 0xce1d, 0x0, 0x1);
        gbc.writeMem(0x7503, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe1df, gbc.sp());
        EXPECT(0x7505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0057
        gbc.setState(0x22f4, 0xbe0, 0x59a0, 0x522d, 0x3ca2, 0xcad5, 0x1, 0x0);
        gbc.writeMem(0x22f4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbe0, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0059
        gbc.setState(0x2d27, 0xcb93, 0x17d0, 0xa976, 0x26c3, 0xb520, 0x0, 0x0);
        gbc.writeMem(0x2d27, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcb93, gbc.sp());
        EXPECT(0x2d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 005A
        gbc.setState(0x2b02, 0x4348, 0x65f0, 0xff07, 0xb4b1, 0xa8ac, 0x1, 0x1);
        gbc.writeMem(0x2b02, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4348, gbc.sp());
        EXPECT(0x2b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 005B
        gbc.setState(0x5dd9, 0x4d9a, 0x2ce0, 0xc887, 0xfaf0, 0x9fda, 0x1, 0x0);
        gbc.writeMem(0x5dd9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x5ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 005C
        gbc.setState(0x9341, 0x6b41, 0xb020, 0xe858, 0x6130, 0x66dd, 0x1, 0x0);
        gbc.writeMem(0x9341, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6b41, gbc.sp());
        EXPECT(0x9343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9341));
        EXPECT(0xec, gbc.readMem(0x9342));
        // CB EC 005D
        gbc.setState(0x5aaf, 0x86ad, 0x2d90, 0xe866, 0x7e65, 0xef54, 0x1, 0x1);
        gbc.writeMem(0x5aaf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x86ad, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 005E
        gbc.setState(0x592d, 0xccad, 0x9f30, 0xd6a5, 0x6c92, 0x7c45, 0x1, 0x0);
        gbc.writeMem(0x592d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xccad, gbc.sp());
        EXPECT(0x592f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 005F
        gbc.setState(0x28ee, 0xe10c, 0xc140, 0x485e, 0x810, 0xe5fb, 0x1, 0x1);
        gbc.writeMem(0x28ee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0x28f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0060
        gbc.setState(0x8d, 0x30d8, 0xbac0, 0x4e5c, 0x4aae, 0x8dbf, 0x1, 0x0);
        gbc.writeMem(0x8d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0061
        gbc.setState(0x114e, 0xc8fd, 0xab00, 0x47fe, 0xec4, 0x8a7a, 0x1, 0x1);
        gbc.writeMem(0x114e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0062
        gbc.setState(0x93f9, 0x3257, 0xb1f0, 0x456f, 0x8031, 0x7590, 0x0, 0x1);
        gbc.writeMem(0x93f9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3257, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0xec, gbc.readMem(0x93fa));
        // CB EC 0063
        gbc.setState(0x83dc, 0x68e8, 0x8340, 0x8d5b, 0x5749, 0x2a37, 0x1, 0x0);
        gbc.writeMem(0x83dc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x68e8, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dc));
        EXPECT(0xec, gbc.readMem(0x83dd));
        // CB EC 0064
        gbc.setState(0x8f, 0xf4da, 0xfb10, 0x7b3a, 0xdda7, 0x732a, 0x1, 0x1);
        gbc.writeMem(0x8f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0065
        gbc.setState(0xe7a, 0x41cb, 0xd2c0, 0xae2d, 0x7bca, 0x3dcd, 0x0, 0x0);
        gbc.writeMem(0xe7a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0xe7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0066
        gbc.setState(0xbc79, 0x1511, 0x96a0, 0x4c87, 0x7b8d, 0x4bd6, 0x1, 0x0);
        gbc.writeMem(0xbc79, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1511, gbc.sp());
        EXPECT(0xbc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc79));
        EXPECT(0xec, gbc.readMem(0xbc7a));
        // CB EC 0067
        gbc.setState(0xa2cf, 0x993f, 0x9220, 0xecac, 0x1e5d, 0x5a4f, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0xa2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cf));
        EXPECT(0xec, gbc.readMem(0xa2d0));
        // CB EC 0068
        gbc.setState(0xb701, 0x40fd, 0xb4a0, 0x4d53, 0xfea3, 0xbcf9, 0x0, 0x0);
        gbc.writeMem(0xb701, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x40fd, gbc.sp());
        EXPECT(0xb703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb701));
        EXPECT(0xec, gbc.readMem(0xb702));
        // CB EC 0069
        gbc.setState(0x5cc, 0x6cff, 0xe7b0, 0xe5fc, 0x185, 0x3252, 0x1, 0x0);
        gbc.writeMem(0x5cc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6cff, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 006A
        gbc.setState(0xe6f0, 0x5142, 0x1bc0, 0x3466, 0xee4a, 0x44be, 0x0, 0x1);
        gbc.writeMem(0xe6f0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5142, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f0));
        EXPECT(0xec, gbc.readMem(0xe6f1));
        // CB EC 006B
        gbc.setState(0xa7f4, 0xdfd8, 0xb690, 0xc2f7, 0xf5d9, 0xec28, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdfd8, gbc.sp());
        EXPECT(0xa7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f4));
        EXPECT(0xec, gbc.readMem(0xa7f5));
        // CB EC 006C
        gbc.setState(0x7b9, 0x8616, 0xc2c0, 0xff94, 0xd29f, 0xeeaa, 0x0, 0x1);
        gbc.writeMem(0x7b9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8616, gbc.sp());
        EXPECT(0x7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 006D
        gbc.setState(0x387f, 0xcefe, 0x1df0, 0x58cd, 0xd577, 0xc9a0, 0x0, 0x1);
        gbc.writeMem(0x387f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 006E
        gbc.setState(0x55ad, 0xee70, 0x9d40, 0x7e8d, 0x42d, 0xc345, 0x0, 0x1);
        gbc.writeMem(0x55ad, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 006F
        gbc.setState(0x7f52, 0x227, 0x5d0, 0x3895, 0x1e95, 0xa4d4, 0x0, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x227, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0071
        gbc.setState(0xa98, 0xb4ae, 0x5d00, 0xe98d, 0xf0bd, 0xe6, 0x1, 0x0);
        gbc.writeMem(0xa98, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb4ae, gbc.sp());
        EXPECT(0xa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0072
        gbc.setState(0x589b, 0x3a37, 0x8880, 0x4ac5, 0xb5a3, 0x23d1, 0x1, 0x0);
        gbc.writeMem(0x589b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x589d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0073
        gbc.setState(0x4bf6, 0x7584, 0xd8c0, 0x933, 0x1926, 0xbab7, 0x1, 0x1);
        gbc.writeMem(0x4bf6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7584, gbc.sp());
        EXPECT(0x4bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0074
        gbc.setState(0x19d3, 0x1430, 0x5890, 0xecc4, 0xe6d9, 0xa514, 0x0, 0x0);
        gbc.writeMem(0x19d3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1430, gbc.sp());
        EXPECT(0x19d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0075
        gbc.setState(0xe60c, 0xea2f, 0xf7b0, 0xbb4, 0xd1b7, 0x3a2c, 0x0, 0x0);
        gbc.writeMem(0xe60c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60c));
        EXPECT(0xec, gbc.readMem(0xe60d));
        // CB EC 0076
        gbc.setState(0xb712, 0x801c, 0x5380, 0x394a, 0xef0f, 0xd74c, 0x1, 0x1);
        gbc.writeMem(0xb712, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0xb714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb712));
        EXPECT(0xec, gbc.readMem(0xb713));
        // CB EC 0077
        gbc.setState(0x5c7f, 0xa0ed, 0x6aa0, 0xee57, 0x4ff0, 0xe6ab, 0x1, 0x1);
        gbc.writeMem(0x5c7f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0078
        gbc.setState(0xdfa7, 0xa311, 0xbb0, 0xa19b, 0xecc, 0x94e9, 0x1, 0x0);
        gbc.writeMem(0xdfa7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa311, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa7));
        EXPECT(0xec, gbc.readMem(0xdfa8));
        // CB EC 007A
        gbc.setState(0xe178, 0xe683, 0x5260, 0x5778, 0x8113, 0xa11a, 0x1, 0x1);
        gbc.writeMem(0xe178, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe683, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe178));
        EXPECT(0xec, gbc.readMem(0xe179));
        // CB EC 007B
        gbc.setState(0xc485, 0x7a8b, 0x70b0, 0x8758, 0x6482, 0x1430, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7a8b, gbc.sp());
        EXPECT(0xc487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc485));
        EXPECT(0xec, gbc.readMem(0xc486));
        // CB EC 007C
        gbc.setState(0x4fc1, 0x3647, 0x78b0, 0x270a, 0xdb1d, 0x267a, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 007D
        gbc.setState(0xebb2, 0x7bee, 0x95c0, 0x3dda, 0xae42, 0xd3d5, 0x1, 0x0);
        gbc.writeMem(0xebb2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7bee, gbc.sp());
        EXPECT(0xebb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb2));
        EXPECT(0xec, gbc.readMem(0xebb3));
        // CB EC 007E
        gbc.setState(0xc832, 0x137f, 0x640, 0xba0e, 0xc1e4, 0xc6c, 0x0, 0x0);
        gbc.writeMem(0xc832, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0xc834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc832));
        EXPECT(0xec, gbc.readMem(0xc833));
        // CB EC 007F
        gbc.setState(0xe8ca, 0x788a, 0xd360, 0x98c1, 0x7d99, 0xe421, 0x1, 0x0);
        gbc.writeMem(0xe8ca, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x788a, gbc.sp());
        EXPECT(0xe8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ca));
        EXPECT(0xec, gbc.readMem(0xe8cb));
        // CB EC 0080
        gbc.setState(0x2804, 0x5b76, 0xca60, 0x9784, 0x3f76, 0x8f20, 0x1, 0x1);
        gbc.writeMem(0x2804, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b76, gbc.sp());
        EXPECT(0x2806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0081
        gbc.setState(0xd67b, 0xfb6e, 0xe6d0, 0x654e, 0x7c49, 0xd395, 0x0, 0x1);
        gbc.writeMem(0xd67b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0xd67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67b));
        EXPECT(0xec, gbc.readMem(0xd67c));
        // CB EC 0082
        gbc.setState(0x84f6, 0x431a, 0x7f90, 0x4914, 0xcc4c, 0x509b, 0x1, 0x1);
        gbc.writeMem(0x84f6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f6));
        EXPECT(0xec, gbc.readMem(0x84f7));
        // CB EC 0083
        gbc.setState(0x5a60, 0x4d35, 0xf9b0, 0x9f0e, 0x31f4, 0xe5c2, 0x0, 0x0);
        gbc.writeMem(0x5a60, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d35, gbc.sp());
        EXPECT(0x5a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0084
        gbc.setState(0xef4e, 0x37b1, 0x91c0, 0x3037, 0xd645, 0x630a, 0x0, 0x0);
        gbc.writeMem(0xef4e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x37b1, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4e));
        EXPECT(0xec, gbc.readMem(0xef4f));
        // CB EC 0085
        gbc.setState(0xb961, 0xf422, 0x3130, 0x753c, 0x3ddb, 0xd9bc, 0x1, 0x0);
        gbc.writeMem(0xb961, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0xb963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb961));
        EXPECT(0xec, gbc.readMem(0xb962));
        // CB EC 0086
        gbc.setState(0xb616, 0x8d64, 0x2190, 0x3bbe, 0x9af7, 0x81f4, 0x0, 0x1);
        gbc.writeMem(0xb616, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8d64, gbc.sp());
        EXPECT(0xb618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb616));
        EXPECT(0xec, gbc.readMem(0xb617));
        // CB EC 0087
        gbc.setState(0x8cca, 0xb17d, 0x4940, 0xe261, 0x4446, 0x7fd1, 0x0, 0x0);
        gbc.writeMem(0x8cca, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0x8ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cca));
        EXPECT(0xec, gbc.readMem(0x8ccb));
        // CB EC 0088
        gbc.setState(0xe75, 0x8e82, 0xae20, 0xd2bd, 0xc5a9, 0x5936, 0x0, 0x0);
        gbc.writeMem(0xe75, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0089
        gbc.setState(0xd6e6, 0xd146, 0x3300, 0xf9dd, 0x7b22, 0x66c1, 0x1, 0x1);
        gbc.writeMem(0xd6e6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd146, gbc.sp());
        EXPECT(0xd6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e6));
        EXPECT(0xec, gbc.readMem(0xd6e7));
        // CB EC 008A
        gbc.setState(0xd28a, 0x221f, 0xd980, 0xbe83, 0xa63a, 0x67c5, 0x0, 0x1);
        gbc.writeMem(0xd28a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0xd28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28a));
        EXPECT(0xec, gbc.readMem(0xd28b));
        // CB EC 008B
        gbc.setState(0x2544, 0x7be9, 0x86c0, 0x6b52, 0x236c, 0x819d, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7be9, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 008C
        gbc.setState(0x3219, 0x1796, 0x9cc0, 0x5a49, 0x3e77, 0x3e29, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 008E
        gbc.setState(0xb355, 0xd059, 0x4c30, 0x27a3, 0xcedc, 0xdf65, 0x0, 0x0);
        gbc.writeMem(0xb355, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb355));
        EXPECT(0xec, gbc.readMem(0xb356));
        // CB EC 008F
        gbc.setState(0xb0c9, 0x22a4, 0xf770, 0x149b, 0xf2c1, 0xc759, 0x1, 0x0);
        gbc.writeMem(0xb0c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0xb0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c9));
        EXPECT(0xec, gbc.readMem(0xb0ca));
        // CB EC 0090
        gbc.setState(0xeadb, 0xdda7, 0x9c80, 0x5ecd, 0x958e, 0xc925, 0x1, 0x0);
        gbc.writeMem(0xeadb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdda7, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0xec, gbc.readMem(0xeadc));
        // CB EC 0091
        gbc.setState(0xe2eb, 0xd25b, 0xc0f0, 0x2069, 0x6992, 0xf4e3, 0x0, 0x1);
        gbc.writeMem(0xe2eb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd25b, gbc.sp());
        EXPECT(0xe2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2eb));
        EXPECT(0xec, gbc.readMem(0xe2ec));
        // CB EC 0092
        gbc.setState(0x15f2, 0x3d0e, 0xaf20, 0x93c2, 0xb2b3, 0x3dfb, 0x0, 0x0);
        gbc.writeMem(0x15f2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x15f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0093
        gbc.setState(0xa96c, 0xcf31, 0x8b40, 0x5db2, 0xd656, 0x6ba5, 0x1, 0x0);
        gbc.writeMem(0xa96c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcf31, gbc.sp());
        EXPECT(0xa96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96c));
        EXPECT(0xec, gbc.readMem(0xa96d));
        // CB EC 0094
        gbc.setState(0x88cb, 0xa6d7, 0xe00, 0xac94, 0x8c60, 0x2a92, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0xec, gbc.readMem(0x88cc));
        // CB EC 0095
        gbc.setState(0xdc1b, 0x91c2, 0x2830, 0x7a66, 0x6282, 0x5874, 0x1, 0x1);
        gbc.writeMem(0xdc1b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x91c2, gbc.sp());
        EXPECT(0xdc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1b));
        EXPECT(0xec, gbc.readMem(0xdc1c));
        // CB EC 0096
        gbc.setState(0xe0a7, 0xe17a, 0xa9d0, 0x97a, 0xc82c, 0xdd17, 0x1, 0x1);
        gbc.writeMem(0xe0a7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe17a, gbc.sp());
        EXPECT(0xe0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a7));
        EXPECT(0xec, gbc.readMem(0xe0a8));
        // CB EC 0097
        gbc.setState(0xc936, 0xdb4b, 0xfe20, 0xcc67, 0x5f9, 0x9498, 0x1, 0x1);
        gbc.writeMem(0xc936, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0xc938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc936));
        EXPECT(0xec, gbc.readMem(0xc937));
        // CB EC 0098
        gbc.setState(0x4dc1, 0x278, 0x7610, 0x2440, 0xce35, 0x2780, 0x1, 0x1);
        gbc.writeMem(0x4dc1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x278, gbc.sp());
        EXPECT(0x4dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0099
        gbc.setState(0x5321, 0x3980, 0xe3a0, 0xc2c, 0x61dd, 0x11d, 0x1, 0x1);
        gbc.writeMem(0x5321, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0x5323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 009A
        gbc.setState(0x6652, 0xa00f, 0x9100, 0x4b7, 0xcbee, 0x768a, 0x1, 0x1);
        gbc.writeMem(0x6652, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0x6654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 009B
        gbc.setState(0x9999, 0xee7d, 0xfe00, 0x1eeb, 0xc49c, 0x653e, 0x1, 0x1);
        gbc.writeMem(0x9999, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0x999b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9999));
        EXPECT(0xec, gbc.readMem(0x999a));
        // CB EC 009C
        gbc.setState(0x84ce, 0x647a, 0x8b00, 0x1553, 0x27cf, 0xf9e8, 0x0, 0x1);
        gbc.writeMem(0x84ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x647a, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ce));
        EXPECT(0xec, gbc.readMem(0x84cf));
        // CB EC 009D
        gbc.setState(0x208e, 0xcb3b, 0x2830, 0x90f2, 0x2732, 0x2c55, 0x1, 0x0);
        gbc.writeMem(0x208e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcb3b, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 009F
        gbc.setState(0x29a2, 0x8beb, 0xe090, 0xd55e, 0xb1, 0x6040, 0x0, 0x1);
        gbc.writeMem(0x29a2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8beb, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00A0
        gbc.setState(0x873d, 0xc614, 0x2cf0, 0xb594, 0x8301, 0x185d, 0x1, 0x0);
        gbc.writeMem(0x873d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc614, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873d));
        EXPECT(0xec, gbc.readMem(0x873e));
        // CB EC 00A1
        gbc.setState(0x7353, 0xae66, 0x1310, 0xbc23, 0xd75f, 0x57d8, 0x1, 0x1);
        gbc.writeMem(0x7353, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0x7355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00A2
        gbc.setState(0x3ff8, 0xf631, 0x1a40, 0xce8b, 0x16b, 0x2a20, 0x0, 0x0);
        gbc.writeMem(0x3ff8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf631, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00A3
        gbc.setState(0xa083, 0x944f, 0x8bd0, 0x2a28, 0x1ed1, 0xce0, 0x1, 0x1);
        gbc.writeMem(0xa083, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x944f, gbc.sp());
        EXPECT(0xa085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa083));
        EXPECT(0xec, gbc.readMem(0xa084));
        // CB EC 00A4
        gbc.setState(0x8c18, 0x7a7c, 0x8640, 0xb20a, 0x4652, 0x5ae5, 0x0, 0x1);
        gbc.writeMem(0x8c18, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a7c, gbc.sp());
        EXPECT(0x8c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c18));
        EXPECT(0xec, gbc.readMem(0x8c19));
        // CB EC 00A5
        gbc.setState(0xe4c7, 0x45e0, 0x60a0, 0x6baf, 0xf734, 0x5b55, 0x1, 0x1);
        gbc.writeMem(0xe4c7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c7));
        EXPECT(0xec, gbc.readMem(0xe4c8));
        // CB EC 00A6
        gbc.setState(0x48d4, 0xd235, 0x4cd0, 0xa927, 0xf528, 0xccba, 0x1, 0x0);
        gbc.writeMem(0x48d4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd235, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00A7
        gbc.setState(0x35cb, 0x180e, 0xa650, 0xa2c9, 0x91, 0x7047, 0x1, 0x1);
        gbc.writeMem(0x35cb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00A8
        gbc.setState(0xd2e8, 0x449c, 0xff90, 0xd10e, 0xac64, 0x4b04, 0x1, 0x0);
        gbc.writeMem(0xd2e8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x449c, gbc.sp());
        EXPECT(0xd2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e8));
        EXPECT(0xec, gbc.readMem(0xd2e9));
        // CB EC 00A9
        gbc.setState(0x1c64, 0xb6f0, 0xfa80, 0xc7b1, 0xcbb3, 0x4719, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb6f0, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00AA
        gbc.setState(0x43f, 0xa12e, 0x9700, 0xff1e, 0xed70, 0xd3f7, 0x0, 0x0);
        gbc.writeMem(0x43f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00AB
        gbc.setState(0x7ab3, 0x78d8, 0xdbd0, 0x3e27, 0x8f06, 0xe16f, 0x1, 0x1);
        gbc.writeMem(0x7ab3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x78d8, gbc.sp());
        EXPECT(0x7ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00AC
        gbc.setState(0xeac5, 0xf588, 0xb060, 0xc884, 0x1dd0, 0x7394, 0x0, 0x0);
        gbc.writeMem(0xeac5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf588, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac5));
        EXPECT(0xec, gbc.readMem(0xeac6));
        // CB EC 00AD
        gbc.setState(0x898d, 0x665d, 0xb1b0, 0xbbce, 0xf8fb, 0x2cb6, 0x1, 0x0);
        gbc.writeMem(0x898d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x665d, gbc.sp());
        EXPECT(0x898f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898d));
        EXPECT(0xec, gbc.readMem(0x898e));
        // CB EC 00AE
        gbc.setState(0x2de5, 0xe6f7, 0x520, 0x75ee, 0xf51, 0x5650, 0x0, 0x0);
        gbc.writeMem(0x2de5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0x2de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00AF
        gbc.setState(0x9f97, 0x270b, 0x2e70, 0x2175, 0x9d34, 0x1cf3, 0x0, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x270b, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0xec, gbc.readMem(0x9f98));
        // CB EC 00B0
        gbc.setState(0x8fef, 0x65f5, 0xfef0, 0x29e, 0x36d0, 0x37ce, 0x0, 0x1);
        gbc.writeMem(0x8fef, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x8ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fef));
        EXPECT(0xec, gbc.readMem(0x8ff0));
        // CB EC 00B1
        gbc.setState(0x13ec, 0x6bfc, 0x9900, 0xe3b6, 0x2855, 0x22da, 0x0, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6bfc, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00B2
        gbc.setState(0xbd82, 0x6a9f, 0xdc0, 0xc59c, 0x7640, 0x3b5e, 0x0, 0x1);
        gbc.writeMem(0xbd82, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6a9f, gbc.sp());
        EXPECT(0xbd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd82));
        EXPECT(0xec, gbc.readMem(0xbd83));
        // CB EC 00B3
        gbc.setState(0x1ca1, 0xab71, 0x6dd0, 0xe1b4, 0x8e07, 0x8b3e, 0x1, 0x0);
        gbc.writeMem(0x1ca1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00B4
        gbc.setState(0x6462, 0x281b, 0x1f00, 0x227c, 0x9011, 0x5cb4, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x281b, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00B5
        gbc.setState(0x2791, 0x1514, 0x86d0, 0x6b35, 0xbdcf, 0x114e, 0x1, 0x0);
        gbc.writeMem(0x2791, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0x2793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00B6
        gbc.setState(0x75a, 0xbc27, 0xb6e0, 0xfb48, 0x3112, 0xa895, 0x1, 0x1);
        gbc.writeMem(0x75a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0x75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00B7
        gbc.setState(0x364, 0x5ebd, 0x4a90, 0x7c79, 0x83b2, 0x3e6, 0x1, 0x0);
        gbc.writeMem(0x364, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5ebd, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00B8
        gbc.setState(0xa788, 0xbced, 0x8940, 0x5aa0, 0xa17d, 0x5ebb, 0x0, 0x0);
        gbc.writeMem(0xa788, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbced, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0xec, gbc.readMem(0xa789));
        // CB EC 00B9
        gbc.setState(0xb59d, 0x9a4d, 0xa990, 0xea23, 0x175a, 0xdcae, 0x0, 0x1);
        gbc.writeMem(0xb59d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9a4d, gbc.sp());
        EXPECT(0xb59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59d));
        EXPECT(0xec, gbc.readMem(0xb59e));
        // CB EC 00BA
        gbc.setState(0x4549, 0xef7d, 0x1a80, 0xba59, 0x93d8, 0xea2c, 0x0, 0x0);
        gbc.writeMem(0x4549, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xef7d, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00BB
        gbc.setState(0x9c1b, 0xa122, 0x9270, 0xfb24, 0x281a, 0x13ee, 0x1, 0x1);
        gbc.writeMem(0x9c1b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0x9c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1b));
        EXPECT(0xec, gbc.readMem(0x9c1c));
        // CB EC 00BC
        gbc.setState(0x1474, 0x536f, 0xf890, 0xf53a, 0x1167, 0x7ef, 0x0, 0x0);
        gbc.writeMem(0x1474, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x536f, gbc.sp());
        EXPECT(0x1476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00BD
        gbc.setState(0xd36, 0x2fbb, 0x5da0, 0x77e3, 0x5c47, 0xa001, 0x0, 0x0);
        gbc.writeMem(0xd36, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2fbb, gbc.sp());
        EXPECT(0xd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00BE
        gbc.setState(0xc94f, 0xe8a7, 0x2960, 0x282e, 0xb59b, 0x96a0, 0x1, 0x0);
        gbc.writeMem(0xc94f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0xc951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94f));
        EXPECT(0xec, gbc.readMem(0xc950));
        // CB EC 00BF
        gbc.setState(0xc926, 0x5097, 0xedd0, 0x73fb, 0x435f, 0x8590, 0x1, 0x1);
        gbc.writeMem(0xc926, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5097, gbc.sp());
        EXPECT(0xc928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc926));
        EXPECT(0xec, gbc.readMem(0xc927));
        // CB EC 00C0
        gbc.setState(0x572a, 0x5c5c, 0x7d40, 0x4028, 0xdd4c, 0xdb3, 0x0, 0x0);
        gbc.writeMem(0x572a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5c5c, gbc.sp());
        EXPECT(0x572c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00C1
        gbc.setState(0xc27f, 0x614b, 0x7a60, 0x5984, 0xe5b, 0xde15, 0x0, 0x1);
        gbc.writeMem(0xc27f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x614b, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27f));
        EXPECT(0xec, gbc.readMem(0xc280));
        // CB EC 00C2
        gbc.setState(0x5da, 0x1ca7, 0x4fc0, 0xd59a, 0x3206, 0xe740, 0x0, 0x0);
        gbc.writeMem(0x5da, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ca7, gbc.sp());
        EXPECT(0x5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00C3
        gbc.setState(0xb89e, 0x733a, 0xd0d0, 0xf4fa, 0x70bd, 0x1831, 0x0, 0x0);
        gbc.writeMem(0xb89e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x733a, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89e));
        EXPECT(0xec, gbc.readMem(0xb89f));
        // CB EC 00C5
        gbc.setState(0xb6bf, 0x24c2, 0x2230, 0x15d4, 0xc6e2, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0xb6bf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x24c2, gbc.sp());
        EXPECT(0xb6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bf));
        EXPECT(0xec, gbc.readMem(0xb6c0));
        // CB EC 00C6
        gbc.setState(0xb87, 0x805c, 0x9800, 0xf92a, 0x6f9a, 0x28ae, 0x0, 0x1);
        gbc.writeMem(0xb87, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0xb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00C7
        gbc.setState(0xcb6, 0xbded, 0xa1b0, 0x642, 0x95d5, 0x1e03, 0x1, 0x1);
        gbc.writeMem(0xcb6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0xcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00C8
        gbc.setState(0x6f46, 0x2c61, 0x2500, 0x1706, 0xacd3, 0x983b, 0x0, 0x0);
        gbc.writeMem(0x6f46, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2c61, gbc.sp());
        EXPECT(0x6f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00C9
        gbc.setState(0x59c6, 0xbbe9, 0x79c0, 0xe945, 0xef8c, 0x9e14, 0x1, 0x0);
        gbc.writeMem(0x59c6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbbe9, gbc.sp());
        EXPECT(0x59c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00CA
        gbc.setState(0xa4da, 0x5627, 0xb060, 0x482c, 0xeee, 0x8576, 0x1, 0x0);
        gbc.writeMem(0xa4da, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0xa4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4da));
        EXPECT(0xec, gbc.readMem(0xa4db));
        // CB EC 00CB
        gbc.setState(0xd64d, 0x4089, 0xe6f0, 0x996d, 0x85b4, 0x2299, 0x1, 0x1);
        gbc.writeMem(0xd64d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4089, gbc.sp());
        EXPECT(0xd64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64d));
        EXPECT(0xec, gbc.readMem(0xd64e));
        // CB EC 00CC
        gbc.setState(0x248f, 0x4202, 0xa890, 0xaf3c, 0x9915, 0xf63a, 0x1, 0x0);
        gbc.writeMem(0x248f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4202, gbc.sp());
        EXPECT(0x2491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00CD
        gbc.setState(0x692c, 0x7140, 0x3fe0, 0x24fc, 0xa0c3, 0xd2d8, 0x1, 0x1);
        gbc.writeMem(0x692c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00CE
        gbc.setState(0x5ee5, 0x4dc1, 0xc880, 0xf5dc, 0xc773, 0xb889, 0x1, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00D0
        gbc.setState(0xaa65, 0x8a38, 0xfd50, 0xa00b, 0x8536, 0x69af, 0x1, 0x1);
        gbc.writeMem(0xaa65, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0xaa67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa65));
        EXPECT(0xec, gbc.readMem(0xaa66));
        // CB EC 00D1
        gbc.setState(0x7314, 0x62cf, 0x17a0, 0x5518, 0x9f2, 0x39d9, 0x1, 0x0);
        gbc.writeMem(0x7314, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x62cf, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00D2
        gbc.setState(0x7f10, 0x5e0c, 0xa190, 0x345e, 0x9a15, 0xecf8, 0x0, 0x0);
        gbc.writeMem(0x7f10, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5e0c, gbc.sp());
        EXPECT(0x7f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00D3
        gbc.setState(0x5a0, 0x8263, 0x3e40, 0x1134, 0x66eb, 0xb104, 0x0, 0x1);
        gbc.writeMem(0x5a0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0x5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00D4
        gbc.setState(0x7dbe, 0xf0fc, 0x8890, 0x3b8a, 0x5cc3, 0x105d, 0x1, 0x1);
        gbc.writeMem(0x7dbe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00D5
        gbc.setState(0xdf89, 0x590f, 0xd8a0, 0x6da2, 0xbdab, 0xdd1a, 0x0, 0x1);
        gbc.writeMem(0xdf89, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x590f, gbc.sp());
        EXPECT(0xdf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf89));
        EXPECT(0xec, gbc.readMem(0xdf8a));
        // CB EC 00D6
        gbc.setState(0x9175, 0x6955, 0xad90, 0xe310, 0xce50, 0xd409, 0x0, 0x0);
        gbc.writeMem(0x9175, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9175));
        EXPECT(0xec, gbc.readMem(0x9176));
        // CB EC 00D7
        gbc.setState(0x176a, 0x1353, 0x4f0, 0x93a, 0x8e68, 0x495, 0x1, 0x1);
        gbc.writeMem(0x176a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0x176c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00D8
        gbc.setState(0xc044, 0xa0ef, 0x51c0, 0xb5dc, 0x8d56, 0xbdb, 0x1, 0x0);
        gbc.writeMem(0xc044, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0xc046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc044));
        EXPECT(0xec, gbc.readMem(0xc045));
        // CB EC 00D9
        gbc.setState(0x20ce, 0xdb09, 0xb10, 0xedd3, 0x9077, 0x8a04, 0x1, 0x0);
        gbc.writeMem(0x20ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdb09, gbc.sp());
        EXPECT(0x20d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00DA
        gbc.setState(0x921d, 0xaada, 0xe340, 0x994a, 0x7e9e, 0x42ae, 0x1, 0x0);
        gbc.writeMem(0x921d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaada, gbc.sp());
        EXPECT(0x921f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921d));
        EXPECT(0xec, gbc.readMem(0x921e));
        // CB EC 00DB
        gbc.setState(0x532a, 0xb10, 0x4b30, 0x65c7, 0xcda, 0x6ee0, 0x1, 0x0);
        gbc.writeMem(0x532a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00DC
        gbc.setState(0x518c, 0xbc43, 0x8e30, 0x619c, 0xd404, 0x42ae, 0x1, 0x0);
        gbc.writeMem(0x518c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x518e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00DD
        gbc.setState(0x61df, 0x97dd, 0x33f0, 0x33eb, 0xbe68, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x61df, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0x61e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00DE
        gbc.setState(0xb5ce, 0x380, 0x13c0, 0x6cf6, 0xbf71, 0xe072, 0x1, 0x0);
        gbc.writeMem(0xb5ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ce));
        EXPECT(0xec, gbc.readMem(0xb5cf));
        // CB EC 00DF
        gbc.setState(0x5046, 0xf9a, 0x74c0, 0x2d60, 0xa25c, 0xcf76, 0x1, 0x0);
        gbc.writeMem(0x5046, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf9a, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00E0
        gbc.setState(0x24b9, 0xe5b5, 0xe3d0, 0x4693, 0x397d, 0x31f7, 0x1, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe5b5, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00E1
        gbc.setState(0xef85, 0x38ec, 0xc400, 0x9aec, 0xdef6, 0x94b5, 0x1, 0x1);
        gbc.writeMem(0xef85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x38ec, gbc.sp());
        EXPECT(0xef87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef85));
        EXPECT(0xec, gbc.readMem(0xef86));
        // CB EC 00E2
        gbc.setState(0x2da, 0x29e5, 0x7dc0, 0x8ea7, 0xd978, 0x73f2, 0x0, 0x1);
        gbc.writeMem(0x2da, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x29e5, gbc.sp());
        EXPECT(0x2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00E3
        gbc.setState(0xddf, 0x61cb, 0x4320, 0x2750, 0xf65, 0x7cb6, 0x0, 0x1);
        gbc.writeMem(0xddf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x61cb, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00E4
        gbc.setState(0x7a0a, 0x3104, 0xa9b0, 0xf726, 0xe327, 0x5080, 0x1, 0x1);
        gbc.writeMem(0x7a0a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3104, gbc.sp());
        EXPECT(0x7a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00E6
        gbc.setState(0x3e09, 0x2222, 0xf3e0, 0x54b7, 0x93c1, 0xf6fb, 0x0, 0x0);
        gbc.writeMem(0x3e09, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2222, gbc.sp());
        EXPECT(0x3e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00E7
        gbc.setState(0xdf81, 0x5b72, 0x6f10, 0x928e, 0x46c1, 0x8ffd, 0x1, 0x1);
        gbc.writeMem(0xdf81, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf81));
        EXPECT(0xec, gbc.readMem(0xdf82));
        // CB EC 00E8
        gbc.setState(0x68d2, 0x557d, 0x9ba0, 0xcbc3, 0xa9ab, 0xb029, 0x1, 0x0);
        gbc.writeMem(0x68d2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0x68d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00E9
        gbc.setState(0xe77a, 0x62ac, 0xbb80, 0xdde1, 0x2720, 0x90ee, 0x1, 0x0);
        gbc.writeMem(0xe77a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0xe77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77a));
        EXPECT(0xec, gbc.readMem(0xe77b));
        // CB EC 00EA
        gbc.setState(0xdf13, 0x7675, 0x6250, 0x4703, 0x4c0e, 0x549f, 0x1, 0x1);
        gbc.writeMem(0xdf13, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0xdf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf13));
        EXPECT(0xec, gbc.readMem(0xdf14));
        // CB EC 00EB
        gbc.setState(0xea0b, 0xfe43, 0x7d00, 0x51fd, 0xb3f0, 0x40a, 0x0, 0x1);
        gbc.writeMem(0xea0b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0xea0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0b));
        EXPECT(0xec, gbc.readMem(0xea0c));
        // CB EC 00EC
        gbc.setState(0xbad9, 0xd48b, 0xe650, 0x8eca, 0x30e0, 0x828b, 0x1, 0x0);
        gbc.writeMem(0xbad9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0xbadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad9));
        EXPECT(0xec, gbc.readMem(0xbada));
        // CB EC 00ED
        gbc.setState(0xa730, 0x2086, 0xd080, 0x734b, 0x6aa6, 0x4e13, 0x1, 0x1);
        gbc.writeMem(0xa730, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa730));
        EXPECT(0xec, gbc.readMem(0xa731));
        // CB EC 00EE
        gbc.setState(0xbf24, 0x6a53, 0x7e30, 0x8ef6, 0x5225, 0xdc65, 0x0, 0x0);
        gbc.writeMem(0xbf24, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0xec, gbc.readMem(0xbf25));
        // CB EC 00EF
        gbc.setState(0x8f42, 0xd943, 0xf840, 0xb132, 0xa666, 0x86f2, 0x1, 0x0);
        gbc.writeMem(0x8f42, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd943, gbc.sp());
        EXPECT(0x8f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f42));
        EXPECT(0xec, gbc.readMem(0x8f43));
        // CB EC 00F0
        gbc.setState(0xa58d, 0xad9a, 0x2f20, 0x254b, 0x6a91, 0x8d37, 0x0, 0x0);
        gbc.writeMem(0xa58d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58d));
        EXPECT(0xec, gbc.readMem(0xa58e));
        // CB EC 00F1
        gbc.setState(0x2d49, 0x6536, 0x2b60, 0x291c, 0xca0a, 0x1709, 0x1, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6536, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00F2
        gbc.setState(0x1523, 0x1c0e, 0x2c80, 0xd1b8, 0x93d3, 0xc187, 0x1, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1c0e, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00F3
        gbc.setState(0xef4d, 0x4309, 0xf00, 0xd295, 0x153e, 0xfbcb, 0x1, 0x0);
        gbc.writeMem(0xef4d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4309, gbc.sp());
        EXPECT(0xef4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4d));
        EXPECT(0xec, gbc.readMem(0xef4e));
        // CB EC 00F4
        gbc.setState(0x3aca, 0xdd7f, 0xd690, 0xc609, 0x8f72, 0x1384, 0x0, 0x0);
        gbc.writeMem(0x3aca, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0x3acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00F5
        gbc.setState(0xd0e0, 0xa15c, 0x5540, 0x5a4c, 0x9fb, 0x14a8, 0x1, 0x1);
        gbc.writeMem(0xd0e0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0xd0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e0));
        EXPECT(0xec, gbc.readMem(0xd0e1));
        // CB EC 00F6
        gbc.setState(0x33b4, 0x4cca, 0xd230, 0x905d, 0xb16c, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x33b4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4cca, gbc.sp());
        EXPECT(0x33b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00F7
        gbc.setState(0x9279, 0x9473, 0x1f70, 0xa2fd, 0xdb71, 0x8c43, 0x0, 0x0);
        gbc.writeMem(0x9279, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0x927b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9279));
        EXPECT(0xec, gbc.readMem(0x927a));
        // CB EC 00F8
        gbc.setState(0x4430, 0x2508, 0xcc80, 0x1fe4, 0xf947, 0xf66f, 0x1, 0x1);
        gbc.writeMem(0x4430, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00F9
        gbc.setState(0x9462, 0x5b7e, 0x9900, 0x41cc, 0xa7dc, 0xfdde, 0x1, 0x0);
        gbc.writeMem(0x9462, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b7e, gbc.sp());
        EXPECT(0x9464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9462));
        EXPECT(0xec, gbc.readMem(0x9463));
        // CB EC 00FA
        gbc.setState(0x9636, 0x8eaa, 0xb950, 0x6cc8, 0xf31c, 0x203d, 0x0, 0x1);
        gbc.writeMem(0x9636, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9636));
        EXPECT(0xec, gbc.readMem(0x9637));
        // CB EC 00FB
        gbc.setState(0x526d, 0x1c52, 0x3bf0, 0x6f79, 0x8031, 0x8758, 0x1, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1c52, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 00FC
        gbc.setState(0xbe76, 0xab03, 0xf600, 0x7f95, 0x8090, 0xccc3, 0x0, 0x1);
        gbc.writeMem(0xbe76, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xab03, gbc.sp());
        EXPECT(0xbe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe76));
        EXPECT(0xec, gbc.readMem(0xbe77));
        // CB EC 00FD
        gbc.setState(0x5cfd, 0xa4f6, 0x9a40, 0x6d44, 0xd680, 0x6aab, 0x0, 0x1);
        gbc.writeMem(0x5cfd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa4f6, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 00FE
        gbc.setState(0x82fc, 0xc4ff, 0x6400, 0xb84c, 0x811e, 0xdac3, 0x1, 0x0);
        gbc.writeMem(0x82fc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc4ff, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fc));
        EXPECT(0xec, gbc.readMem(0x82fd));
        // CB EC 00FF
        gbc.setState(0x3cd5, 0xb3e0, 0x8090, 0x7ff1, 0xff01, 0x15e2, 0x1, 0x1);
        gbc.writeMem(0x3cd5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0100
        gbc.setState(0x5a98, 0x759a, 0x9d70, 0x6f47, 0xdf93, 0xe4c8, 0x0, 0x0);
        gbc.writeMem(0x5a98, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0x5a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0101
        gbc.setState(0xe88e, 0xcb62, 0x45d0, 0xa968, 0x6f1a, 0xd2e9, 0x1, 0x1);
        gbc.writeMem(0xe88e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb62, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88e));
        EXPECT(0xec, gbc.readMem(0xe88f));
        // CB EC 0102
        gbc.setState(0x65c9, 0x52c9, 0x7b0, 0xec85, 0xa293, 0x40f8, 0x1, 0x0);
        gbc.writeMem(0x65c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0103
        gbc.setState(0x5ec0, 0x8a86, 0x5630, 0x7690, 0x1d27, 0xc64d, 0x1, 0x1);
        gbc.writeMem(0x5ec0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0x5ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0104
        gbc.setState(0xe326, 0xb41a, 0x4840, 0x596c, 0xaf7d, 0x5b7b, 0x0, 0x1);
        gbc.writeMem(0xe326, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb41a, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe326));
        EXPECT(0xec, gbc.readMem(0xe327));
        // CB EC 0105
        gbc.setState(0x6199, 0x57af, 0x5250, 0x834b, 0xd052, 0xeb18, 0x0, 0x1);
        gbc.writeMem(0x6199, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x57af, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0106
        gbc.setState(0x147a, 0xc80e, 0xadd0, 0x9bf7, 0xf336, 0xebf7, 0x0, 0x1);
        gbc.writeMem(0x147a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc80e, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0107
        gbc.setState(0xe63f, 0x6161, 0xc4e0, 0x6609, 0xe323, 0x372b, 0x1, 0x1);
        gbc.writeMem(0xe63f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6161, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63f));
        EXPECT(0xec, gbc.readMem(0xe640));
        // CB EC 0108
        gbc.setState(0x5093, 0x459c, 0x2990, 0xfd9c, 0x6bf1, 0x17cf, 0x1, 0x1);
        gbc.writeMem(0x5093, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x459c, gbc.sp());
        EXPECT(0x5095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0109
        gbc.setState(0x2297, 0x155, 0x85b0, 0xf4e2, 0x4aff, 0x17b0, 0x1, 0x1);
        gbc.writeMem(0x2297, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x155, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 010A
        gbc.setState(0xbb56, 0xfc3, 0xc6a0, 0xea89, 0x1746, 0xb4fb, 0x0, 0x0);
        gbc.writeMem(0xbb56, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc3, gbc.sp());
        EXPECT(0xbb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb56));
        EXPECT(0xec, gbc.readMem(0xbb57));
        // CB EC 010B
        gbc.setState(0xbd85, 0xf9ff, 0xc810, 0x3bac, 0x14f, 0x8afa, 0x1, 0x0);
        gbc.writeMem(0xbd85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0xbd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd85));
        EXPECT(0xec, gbc.readMem(0xbd86));
        // CB EC 010C
        gbc.setState(0x6a1e, 0xe903, 0xf430, 0x85c7, 0xf30a, 0x94fe, 0x0, 0x1);
        gbc.writeMem(0x6a1e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe903, gbc.sp());
        EXPECT(0x6a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 010D
        gbc.setState(0xe55b, 0xe4d9, 0x1530, 0xa58f, 0xb303, 0xff36, 0x0, 0x1);
        gbc.writeMem(0xe55b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55b));
        EXPECT(0xec, gbc.readMem(0xe55c));
        // CB EC 010E
        gbc.setState(0x3d5c, 0xeeea, 0xe5c0, 0xd04e, 0xb6d2, 0x9df8, 0x0, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeeea, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 010F
        gbc.setState(0x4a39, 0x5d06, 0x5440, 0x62d3, 0x44ee, 0x4b6b, 0x0, 0x0);
        gbc.writeMem(0x4a39, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5d06, gbc.sp());
        EXPECT(0x4a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0110
        gbc.setState(0x4cee, 0x37c4, 0x49d0, 0x4b73, 0x5f43, 0x2b81, 0x1, 0x0);
        gbc.writeMem(0x4cee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0x4cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0111
        gbc.setState(0xea8e, 0x84bd, 0xd610, 0x288, 0xa097, 0xcb63, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x84bd, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8e));
        EXPECT(0xec, gbc.readMem(0xea8f));
        // CB EC 0112
        gbc.setState(0x62b2, 0x9076, 0x7500, 0x5533, 0x381, 0x270d, 0x1, 0x1);
        gbc.writeMem(0x62b2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9076, gbc.sp());
        EXPECT(0x62b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0113
        gbc.setState(0x6ec0, 0x8f6f, 0x8dc0, 0x6f83, 0xc7a0, 0x3ed4, 0x0, 0x0);
        gbc.writeMem(0x6ec0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0114
        gbc.setState(0xa07, 0x68c2, 0xa930, 0x63ce, 0xaeb9, 0x425f, 0x1, 0x0);
        gbc.writeMem(0xa07, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x68c2, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0115
        gbc.setState(0x93c9, 0xedb2, 0x7370, 0x4957, 0x9bd8, 0x59ee, 0x1, 0x0);
        gbc.writeMem(0x93c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xedb2, gbc.sp());
        EXPECT(0x93cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c9));
        EXPECT(0xec, gbc.readMem(0x93ca));
        // CB EC 0116
        gbc.setState(0xb2dd, 0xea6, 0x25f0, 0x27d9, 0xbedf, 0x1ee0, 0x0, 0x1);
        gbc.writeMem(0xb2dd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0xb2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2dd));
        EXPECT(0xec, gbc.readMem(0xb2de));
        // CB EC 0117
        gbc.setState(0xa1, 0x84e3, 0x70d0, 0x8cf2, 0xe336, 0x1982, 0x0, 0x1);
        gbc.writeMem(0xa1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x84e3, gbc.sp());
        EXPECT(0xa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0118
        gbc.setState(0xa651, 0xadc2, 0x98f0, 0xd5b7, 0x5aa8, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa651));
        EXPECT(0xec, gbc.readMem(0xa652));
        // CB EC 0119
        gbc.setState(0xa4e9, 0x7f4d, 0xb20, 0x24df, 0x7cd6, 0x2442, 0x0, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7f4d, gbc.sp());
        EXPECT(0xa4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e9));
        EXPECT(0xec, gbc.readMem(0xa4ea));
        // CB EC 011A
        gbc.setState(0x1883, 0xd94e, 0x9b00, 0xe3f7, 0xde64, 0x6500, 0x0, 0x1);
        gbc.writeMem(0x1883, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd94e, gbc.sp());
        EXPECT(0x1885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 011B
        gbc.setState(0x9629, 0xa48e, 0x1b70, 0x7bb0, 0xff6f, 0x61b7, 0x1, 0x0);
        gbc.writeMem(0x9629, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9629));
        EXPECT(0xec, gbc.readMem(0x962a));
        // CB EC 011C
        gbc.setState(0x8bf3, 0xd7f0, 0x4190, 0x5cba, 0xe566, 0x6355, 0x0, 0x0);
        gbc.writeMem(0x8bf3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd7f0, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf3));
        EXPECT(0xec, gbc.readMem(0x8bf4));
        // CB EC 011D
        gbc.setState(0x4ca5, 0xbd1f, 0x38f0, 0xaed1, 0x7dbb, 0x8971, 0x0, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 011E
        gbc.setState(0xb0a9, 0xd726, 0x7800, 0x6aca, 0xc45, 0x438a, 0x1, 0x0);
        gbc.writeMem(0xb0a9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0xb0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a9));
        EXPECT(0xec, gbc.readMem(0xb0aa));
        // CB EC 011F
        gbc.setState(0x2ff6, 0x4392, 0x30e0, 0xc393, 0xadd3, 0x99c2, 0x0, 0x0);
        gbc.writeMem(0x2ff6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4392, gbc.sp());
        EXPECT(0x2ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0120
        gbc.setState(0xe41b, 0xb713, 0xbb70, 0xb1cc, 0x9697, 0xcd27, 0x0, 0x1);
        gbc.writeMem(0xe41b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41b));
        EXPECT(0xec, gbc.readMem(0xe41c));
        // CB EC 0121
        gbc.setState(0x1ec5, 0xf666, 0xde80, 0xe1ea, 0xa064, 0x57ea, 0x0, 0x0);
        gbc.writeMem(0x1ec5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf666, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0122
        gbc.setState(0x767b, 0x3fc0, 0x8450, 0x2e03, 0x1072, 0xb37e, 0x0, 0x0);
        gbc.writeMem(0x767b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3fc0, gbc.sp());
        EXPECT(0x767d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0123
        gbc.setState(0xb369, 0x9f8e, 0x8d30, 0xf107, 0x1768, 0xa59, 0x0, 0x0);
        gbc.writeMem(0xb369, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0xb36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb369));
        EXPECT(0xec, gbc.readMem(0xb36a));
        // CB EC 0124
        gbc.setState(0x2ba1, 0x8f65, 0x14a0, 0xb673, 0x1509, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0x2ba1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f65, gbc.sp());
        EXPECT(0x2ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0125
        gbc.setState(0x4260, 0xad5, 0x64c0, 0x9983, 0x2549, 0xb4f8, 0x0, 0x0);
        gbc.writeMem(0x4260, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x4262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0126
        gbc.setState(0xd73d, 0xdb31, 0x6e80, 0x3571, 0xa1f3, 0xc79, 0x1, 0x1);
        gbc.writeMem(0xd73d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb31, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73d));
        EXPECT(0xec, gbc.readMem(0xd73e));
        // CB EC 0127
        gbc.setState(0x8de, 0x5f2e, 0x8700, 0x6b1e, 0x7af2, 0x4af9, 0x0, 0x1);
        gbc.writeMem(0x8de, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5f2e, gbc.sp());
        EXPECT(0x8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0128
        gbc.setState(0x8b72, 0x22b, 0x6620, 0x9728, 0xe058, 0x3291, 0x0, 0x1);
        gbc.writeMem(0x8b72, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0x8b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b72));
        EXPECT(0xec, gbc.readMem(0x8b73));
        // CB EC 0129
        gbc.setState(0xdc88, 0x421e, 0x70c0, 0xbf88, 0xc848, 0x2a64, 0x1, 0x1);
        gbc.writeMem(0xdc88, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0xdc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc88));
        EXPECT(0xec, gbc.readMem(0xdc89));
        // CB EC 012A
        gbc.setState(0x6b18, 0x3216, 0x8c80, 0xea9f, 0x8a9c, 0x2148, 0x1, 0x1);
        gbc.writeMem(0x6b18, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3216, gbc.sp());
        EXPECT(0x6b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 012B
        gbc.setState(0x3b18, 0xdfe6, 0xdfd0, 0xa3fc, 0xd406, 0x9aee, 0x0, 0x0);
        gbc.writeMem(0x3b18, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 012C
        gbc.setState(0x53fb, 0x11c4, 0xe120, 0x49ea, 0xd73, 0x2075, 0x1, 0x1);
        gbc.writeMem(0x53fb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 012D
        gbc.setState(0xdbe1, 0xd59, 0x7390, 0x662d, 0xaa06, 0x553d, 0x1, 0x0);
        gbc.writeMem(0xdbe1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd59, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe1));
        EXPECT(0xec, gbc.readMem(0xdbe2));
        // CB EC 012E
        gbc.setState(0x6e89, 0x991d, 0xb5f0, 0x4188, 0xfbb4, 0x8e83, 0x0, 0x0);
        gbc.writeMem(0x6e89, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x991d, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 012F
        gbc.setState(0x261, 0xf885, 0x3a30, 0xcbae, 0x62a6, 0xf595, 0x1, 0x1);
        gbc.writeMem(0x261, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf885, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0130
        gbc.setState(0xd3de, 0x2531, 0x39a0, 0xfe9, 0x5125, 0xa1ab, 0x0, 0x0);
        gbc.writeMem(0xd3de, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0xd3e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3de));
        EXPECT(0xec, gbc.readMem(0xd3df));
        // CB EC 0131
        gbc.setState(0x53f3, 0x3151, 0xf3b0, 0x594c, 0x4aed, 0x63c9, 0x1, 0x0);
        gbc.writeMem(0x53f3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3151, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0132
        gbc.setState(0x7992, 0x69a2, 0xdde0, 0x1664, 0xb6e6, 0x1b2c, 0x0, 0x1);
        gbc.writeMem(0x7992, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x69a2, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0133
        gbc.setState(0x1446, 0x47bf, 0xc580, 0xd8c7, 0x80f0, 0xa2, 0x1, 0x1);
        gbc.writeMem(0x1446, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x47bf, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0134
        gbc.setState(0xde1, 0x3289, 0x9530, 0x2523, 0x786e, 0xe29b, 0x0, 0x1);
        gbc.writeMem(0xde1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3289, gbc.sp());
        EXPECT(0xde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0135
        gbc.setState(0xb4d9, 0xb4eb, 0xdc10, 0x6b31, 0x42e8, 0xa5fb, 0x1, 0x0);
        gbc.writeMem(0xb4d9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0xb4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d9));
        EXPECT(0xec, gbc.readMem(0xb4da));
        // CB EC 0136
        gbc.setState(0x870a, 0x7c1c, 0x2f40, 0x1309, 0xf7d3, 0x1731, 0x0, 0x0);
        gbc.writeMem(0x870a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c1c, gbc.sp());
        EXPECT(0x870c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870a));
        EXPECT(0xec, gbc.readMem(0x870b));
        // CB EC 0138
        gbc.setState(0x89d8, 0xf9e, 0xe1c0, 0xb6da, 0x2717, 0x1a04, 0x1, 0x0);
        gbc.writeMem(0x89d8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d8));
        EXPECT(0xec, gbc.readMem(0x89d9));
        // CB EC 0139
        gbc.setState(0x60d1, 0x7e94, 0x8be0, 0x2e71, 0xc13b, 0x21b1, 0x1, 0x1);
        gbc.writeMem(0x60d1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7e94, gbc.sp());
        EXPECT(0x60d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 013A
        gbc.setState(0xcb9f, 0xce6a, 0x4e90, 0x48fd, 0x670b, 0x8f25, 0x1, 0x1);
        gbc.writeMem(0xcb9f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xce6a, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9f));
        EXPECT(0xec, gbc.readMem(0xcba0));
        // CB EC 013C
        gbc.setState(0x8bbd, 0x8866, 0x97c0, 0xe66d, 0x1010, 0x744b, 0x1, 0x1);
        gbc.writeMem(0x8bbd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0x8bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbd));
        EXPECT(0xec, gbc.readMem(0x8bbe));
        // CB EC 013D
        gbc.setState(0x6b99, 0xdf42, 0xd900, 0xae0d, 0x5f98, 0x3167, 0x1, 0x0);
        gbc.writeMem(0x6b99, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdf42, gbc.sp());
        EXPECT(0x6b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 013E
        gbc.setState(0xca95, 0xa9a5, 0x2dc0, 0x4af2, 0x9d15, 0x406e, 0x0, 0x0);
        gbc.writeMem(0xca95, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa9a5, gbc.sp());
        EXPECT(0xca97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca95));
        EXPECT(0xec, gbc.readMem(0xca96));
        // CB EC 013F
        gbc.setState(0x184e, 0x8b12, 0x35f0, 0xb0ec, 0x6099, 0xa717, 0x1, 0x0);
        gbc.writeMem(0x184e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0x1850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0140
        gbc.setState(0xa13e, 0x12f7, 0xd800, 0xfb9d, 0x80d, 0x25c0, 0x0, 0x0);
        gbc.writeMem(0xa13e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x12f7, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13e));
        EXPECT(0xec, gbc.readMem(0xa13f));
        // CB EC 0141
        gbc.setState(0x96d2, 0x2f31, 0x6470, 0x2770, 0xa17a, 0x7cc6, 0x1, 0x0);
        gbc.writeMem(0x96d2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2f31, gbc.sp());
        EXPECT(0x96d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d2));
        EXPECT(0xec, gbc.readMem(0x96d3));
        // CB EC 0142
        gbc.setState(0xacb4, 0xf0cf, 0x27b0, 0x7ca8, 0x9815, 0x6722, 0x0, 0x0);
        gbc.writeMem(0xacb4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0xacb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb4));
        EXPECT(0xec, gbc.readMem(0xacb5));
        // CB EC 0143
        gbc.setState(0xeea3, 0x85e0, 0x41d0, 0x35ea, 0x9171, 0xe9b6, 0x1, 0x1);
        gbc.writeMem(0xeea3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea3));
        EXPECT(0xec, gbc.readMem(0xeea4));
        // CB EC 0144
        gbc.setState(0x2ab9, 0xfdec, 0xf150, 0xd8c6, 0x2032, 0x2cbf, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0145
        gbc.setState(0x57fe, 0xaae6, 0x94e0, 0x2499, 0x91f6, 0x9ed, 0x0, 0x1);
        gbc.writeMem(0x57fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0146
        gbc.setState(0x7b4f, 0xa4cd, 0x5150, 0x5bbf, 0x4ee7, 0x3422, 0x1, 0x1);
        gbc.writeMem(0x7b4f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0x7b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0147
        gbc.setState(0xe248, 0x7159, 0x53d0, 0x671c, 0x5ae6, 0x2bc7, 0x1, 0x1);
        gbc.writeMem(0xe248, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7159, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0xec, gbc.readMem(0xe249));
        // CB EC 0148
        gbc.setState(0x6c3f, 0x61b6, 0xd760, 0x28e2, 0x8627, 0x78c, 0x1, 0x1);
        gbc.writeMem(0x6c3f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0x6c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0149
        gbc.setState(0x7e36, 0xf737, 0xe280, 0xb3c0, 0x1303, 0xa923, 0x0, 0x0);
        gbc.writeMem(0x7e36, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf737, gbc.sp());
        EXPECT(0x7e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 014A
        gbc.setState(0xc189, 0x836f, 0xeeb0, 0xc216, 0xb7e3, 0xe43, 0x1, 0x0);
        gbc.writeMem(0xc189, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc189));
        EXPECT(0xec, gbc.readMem(0xc18a));
        // CB EC 014B
        gbc.setState(0x7b57, 0xfc8e, 0xb240, 0x6c16, 0x5406, 0xb8fa, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 014C
        gbc.setState(0x5da6, 0x7776, 0xee0, 0xd147, 0xedea, 0xc00, 0x0, 0x0);
        gbc.writeMem(0x5da6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0x5da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 014D
        gbc.setState(0x5ae2, 0x4812, 0xafd0, 0x1ab0, 0xeee8, 0xe3ec, 0x0, 0x1);
        gbc.writeMem(0x5ae2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4812, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0150
        gbc.setState(0x5777, 0x5a3b, 0x45b0, 0x18fb, 0x5edb, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0x5777, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5a3b, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0151
        gbc.setState(0xd3c0, 0xb900, 0xe760, 0x1cea, 0x7f74, 0xcb18, 0x1, 0x0);
        gbc.writeMem(0xd3c0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c0));
        EXPECT(0xec, gbc.readMem(0xd3c1));
        // CB EC 0152
        gbc.setState(0xbc2a, 0xf7eb, 0x80c0, 0x42d7, 0x30ca, 0xbb49, 0x1, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf7eb, gbc.sp());
        EXPECT(0xbc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2a));
        EXPECT(0xec, gbc.readMem(0xbc2b));
        // CB EC 0153
        gbc.setState(0x627f, 0x5f42, 0xde60, 0x275e, 0x4181, 0x61e, 0x1, 0x1);
        gbc.writeMem(0x627f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x6281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0155
        gbc.setState(0x8cf1, 0x3108, 0xa1b0, 0xa9a8, 0x73b1, 0x2c04, 0x0, 0x1);
        gbc.writeMem(0x8cf1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3108, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf1));
        EXPECT(0xec, gbc.readMem(0x8cf2));
        // CB EC 0156
        gbc.setState(0x893c, 0xc44d, 0x9e50, 0x7669, 0xd9df, 0xcd5d, 0x1, 0x0);
        gbc.writeMem(0x893c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc44d, gbc.sp());
        EXPECT(0x893e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893c));
        EXPECT(0xec, gbc.readMem(0x893d));
        // CB EC 0157
        gbc.setState(0xed47, 0x76c4, 0x5e00, 0xd008, 0xcc73, 0x5300, 0x0, 0x0);
        gbc.writeMem(0xed47, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x76c4, gbc.sp());
        EXPECT(0xed49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed47));
        EXPECT(0xec, gbc.readMem(0xed48));
        // CB EC 0158
        gbc.setState(0x4da7, 0x77ee, 0x2f20, 0x8d98, 0x736f, 0xf7e, 0x0, 0x1);
        gbc.writeMem(0x4da7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 015A
        gbc.setState(0x267e, 0x2b6e, 0xa300, 0xd148, 0x557e, 0x3845, 0x0, 0x1);
        gbc.writeMem(0x267e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x2680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 015B
        gbc.setState(0xe9ac, 0xceaa, 0x9000, 0xfbcc, 0xda59, 0x7252, 0x0, 0x1);
        gbc.writeMem(0xe9ac, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ac));
        EXPECT(0xec, gbc.readMem(0xe9ad));
        // CB EC 015C
        gbc.setState(0x2e55, 0x8f9c, 0xc690, 0xaec8, 0x75a0, 0x6c92, 0x0, 0x0);
        gbc.writeMem(0x2e55, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f9c, gbc.sp());
        EXPECT(0x2e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 015D
        gbc.setState(0x73b4, 0xc4a9, 0xca0, 0x9765, 0x1103, 0xd294, 0x0, 0x0);
        gbc.writeMem(0x73b4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 015E
        gbc.setState(0xc7a1, 0x265a, 0x9740, 0x3509, 0x177, 0x54bc, 0x1, 0x0);
        gbc.writeMem(0xc7a1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x265a, gbc.sp());
        EXPECT(0xc7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a1));
        EXPECT(0xec, gbc.readMem(0xc7a2));
        // CB EC 015F
        gbc.setState(0xc68b, 0xca5c, 0x670, 0x6827, 0xdad9, 0xe2b5, 0x0, 0x1);
        gbc.writeMem(0xc68b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xca5c, gbc.sp());
        EXPECT(0xc68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68b));
        EXPECT(0xec, gbc.readMem(0xc68c));
        // CB EC 0160
        gbc.setState(0x8f76, 0x5f44, 0x4af0, 0x6d55, 0xb5c7, 0x24b5, 0x0, 0x0);
        gbc.writeMem(0x8f76, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5f44, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f76));
        EXPECT(0xec, gbc.readMem(0x8f77));
        // CB EC 0161
        gbc.setState(0x86d4, 0xa107, 0x7880, 0x6d63, 0x4614, 0xf240, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d4));
        EXPECT(0xec, gbc.readMem(0x86d5));
        // CB EC 0162
        gbc.setState(0x755a, 0xda92, 0x5040, 0x1f2d, 0x8335, 0xfb13, 0x0, 0x0);
        gbc.writeMem(0x755a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0163
        gbc.setState(0xad88, 0xb40d, 0x27a0, 0x9d2e, 0xe318, 0xf4ee, 0x0, 0x1);
        gbc.writeMem(0xad88, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad88));
        EXPECT(0xec, gbc.readMem(0xad89));
        // CB EC 0164
        gbc.setState(0x1300, 0xfc77, 0x5d80, 0xf32c, 0x7a39, 0xd1d, 0x1, 0x1);
        gbc.writeMem(0x1300, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfc77, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0165
        gbc.setState(0xa48e, 0x21fd, 0x8050, 0xe483, 0x8db3, 0x1a59, 0x0, 0x0);
        gbc.writeMem(0xa48e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x21fd, gbc.sp());
        EXPECT(0xa490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48e));
        EXPECT(0xec, gbc.readMem(0xa48f));
        // CB EC 0166
        gbc.setState(0xe285, 0x2961, 0xa600, 0x9240, 0x52a0, 0x3545, 0x1, 0x1);
        gbc.writeMem(0xe285, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0xe287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe285));
        EXPECT(0xec, gbc.readMem(0xe286));
        // CB EC 0167
        gbc.setState(0x2808, 0xddff, 0x4db0, 0x22f1, 0x18b7, 0xd0cf, 0x0, 0x1);
        gbc.writeMem(0x2808, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0169
        gbc.setState(0xd21, 0x4be7, 0x4b00, 0x3a5a, 0x8fb0, 0x1f6, 0x0, 0x0);
        gbc.writeMem(0xd21, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0xd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 016A
        gbc.setState(0xa4dd, 0x2dcc, 0x8fa0, 0x4777, 0xa47a, 0xf219, 0x1, 0x0);
        gbc.writeMem(0xa4dd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0xa4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4dd));
        EXPECT(0xec, gbc.readMem(0xa4de));
        // CB EC 016B
        gbc.setState(0x884, 0xa7d1, 0xd190, 0x94c2, 0xbaab, 0x5464, 0x0, 0x1);
        gbc.writeMem(0x884, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 016C
        gbc.setState(0x5860, 0xf2f, 0x5170, 0x36d7, 0xf3fd, 0x9b7b, 0x1, 0x1);
        gbc.writeMem(0x5860, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf2f, gbc.sp());
        EXPECT(0x5862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 016D
        gbc.setState(0xa78c, 0x3822, 0x6130, 0x442c, 0x69c4, 0xb110, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0xa78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78c));
        EXPECT(0xec, gbc.readMem(0xa78d));
        // CB EC 016E
        gbc.setState(0x37cf, 0xd30d, 0x4d80, 0xe49a, 0xbe4c, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0x37cf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd30d, gbc.sp());
        EXPECT(0x37d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 016F
        gbc.setState(0x5ead, 0x64da, 0xd2f0, 0x649f, 0x15b, 0x79f6, 0x1, 0x0);
        gbc.writeMem(0x5ead, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0170
        gbc.setState(0xac15, 0x7694, 0x1df0, 0x992b, 0x175e, 0x2b5a, 0x0, 0x1);
        gbc.writeMem(0xac15, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7694, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac15));
        EXPECT(0xec, gbc.readMem(0xac16));
        // CB EC 0172
        gbc.setState(0x4c48, 0xfa54, 0xa0c0, 0x5a00, 0xc79, 0x7357, 0x0, 0x0);
        gbc.writeMem(0x4c48, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0x4c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0173
        gbc.setState(0xe86a, 0xa682, 0x3900, 0x50a2, 0xf5e3, 0xc72b, 0x0, 0x0);
        gbc.writeMem(0xe86a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa682, gbc.sp());
        EXPECT(0xe86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86a));
        EXPECT(0xec, gbc.readMem(0xe86b));
        // CB EC 0174
        gbc.setState(0xcbe7, 0xccda, 0xb990, 0xc5ca, 0xad0f, 0xd9a8, 0x0, 0x1);
        gbc.writeMem(0xcbe7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0xcbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe7));
        EXPECT(0xec, gbc.readMem(0xcbe8));
        // CB EC 0175
        gbc.setState(0x961d, 0xb68d, 0xe4b0, 0xb4ec, 0x9296, 0x739d, 0x1, 0x0);
        gbc.writeMem(0x961d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961d));
        EXPECT(0xec, gbc.readMem(0x961e));
        // CB EC 0176
        gbc.setState(0x7e41, 0x787e, 0xfc20, 0xfdd, 0xd144, 0xb1f4, 0x0, 0x0);
        gbc.writeMem(0x7e41, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x787e, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0177
        gbc.setState(0x4d58, 0x54f8, 0x9cc0, 0x6e80, 0xd09c, 0xb833, 0x1, 0x0);
        gbc.writeMem(0x4d58, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x54f8, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0178
        gbc.setState(0x203f, 0xfb41, 0x260, 0x32de, 0x3491, 0x4f7a, 0x0, 0x0);
        gbc.writeMem(0x203f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfb41, gbc.sp());
        EXPECT(0x2041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0179
        gbc.setState(0xdf9e, 0x9bb2, 0x5cd0, 0xc55b, 0x90dc, 0x23a9, 0x1, 0x0);
        gbc.writeMem(0xdf9e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9bb2, gbc.sp());
        EXPECT(0xdfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9e));
        EXPECT(0xec, gbc.readMem(0xdf9f));
        // CB EC 017A
        gbc.setState(0xeeda, 0x917b, 0x6060, 0xb455, 0x85e, 0xdc76, 0x1, 0x1);
        gbc.writeMem(0xeeda, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeda));
        EXPECT(0xec, gbc.readMem(0xeedb));
        // CB EC 017B
        gbc.setState(0x4d6a, 0x7726, 0xc520, 0x4aa9, 0xfa74, 0xb344, 0x1, 0x0);
        gbc.writeMem(0x4d6a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7726, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 017C
        gbc.setState(0xc5a4, 0x6c1d, 0x9480, 0xee7d, 0x4e81, 0xcd80, 0x1, 0x1);
        gbc.writeMem(0xc5a4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xc5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a4));
        EXPECT(0xec, gbc.readMem(0xc5a5));
        // CB EC 017D
        gbc.setState(0x50db, 0xfa73, 0x2820, 0xa600, 0x3e19, 0xaa2d, 0x1, 0x0);
        gbc.writeMem(0x50db, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfa73, gbc.sp());
        EXPECT(0x50dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 017E
        gbc.setState(0xe4b4, 0xccc, 0x4f90, 0x3932, 0xc026, 0x11c4, 0x1, 0x1);
        gbc.writeMem(0xe4b4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xccc, gbc.sp());
        EXPECT(0xe4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b4));
        EXPECT(0xec, gbc.readMem(0xe4b5));
        // CB EC 017F
        gbc.setState(0x51f2, 0xe18, 0x64a0, 0xd95e, 0xaed0, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0x51f2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0180
        gbc.setState(0x9e40, 0xf9b5, 0xbea0, 0x36ae, 0x1d7c, 0x187b, 0x1, 0x0);
        gbc.writeMem(0x9e40, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf9b5, gbc.sp());
        EXPECT(0x9e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e40));
        EXPECT(0xec, gbc.readMem(0x9e41));
        // CB EC 0181
        gbc.setState(0xc50e, 0x9881, 0x3a40, 0xb524, 0x8d66, 0x485c, 0x1, 0x1);
        gbc.writeMem(0xc50e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0xc510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50e));
        EXPECT(0xec, gbc.readMem(0xc50f));
        // CB EC 0182
        gbc.setState(0x1e41, 0x43d6, 0x7d60, 0x72d9, 0xf839, 0x2baa, 0x0, 0x1);
        gbc.writeMem(0x1e41, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x43d6, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0183
        gbc.setState(0x9e72, 0xee79, 0xf60, 0x8276, 0x9c22, 0x95ec, 0x0, 0x0);
        gbc.writeMem(0x9e72, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e72));
        EXPECT(0xec, gbc.readMem(0x9e73));
        // CB EC 0184
        gbc.setState(0x8c7a, 0xcd94, 0x9360, 0x7dec, 0x87a4, 0x7c0a, 0x0, 0x0);
        gbc.writeMem(0x8c7a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7a));
        EXPECT(0xec, gbc.readMem(0x8c7b));
        // CB EC 0185
        gbc.setState(0xc14f, 0x5490, 0x7ce0, 0x1c5c, 0xb99e, 0x7837, 0x0, 0x1);
        gbc.writeMem(0xc14f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5490, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14f));
        EXPECT(0xec, gbc.readMem(0xc150));
        // CB EC 0186
        gbc.setState(0x4efe, 0x453c, 0x7e50, 0xeb13, 0x675b, 0xdc2, 0x0, 0x0);
        gbc.writeMem(0x4efe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x4f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0187
        gbc.setState(0x3a10, 0x4380, 0x560, 0x6ccf, 0x423b, 0x6925, 0x0, 0x1);
        gbc.writeMem(0x3a10, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4380, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0188
        gbc.setState(0x83fa, 0x1c38, 0x2a90, 0xd9a8, 0x9666, 0x81aa, 0x1, 0x1);
        gbc.writeMem(0x83fa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0xec, gbc.readMem(0x83fb));
        // CB EC 0189
        gbc.setState(0x1c8a, 0xab2b, 0xcf30, 0x6d21, 0x6018, 0x6fe6, 0x1, 0x0);
        gbc.writeMem(0x1c8a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab2b, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 018A
        gbc.setState(0x34d6, 0x8f45, 0xa700, 0xa2ef, 0x9391, 0x88c0, 0x0, 0x0);
        gbc.writeMem(0x34d6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0x34d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 018B
        gbc.setState(0x7bec, 0xea4a, 0xc6d0, 0x9bdd, 0xeca0, 0xac24, 0x1, 0x1);
        gbc.writeMem(0x7bec, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea4a, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 018C
        gbc.setState(0x3730, 0xe704, 0x6610, 0x42f2, 0x14ae, 0x54d3, 0x0, 0x0);
        gbc.writeMem(0x3730, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe704, gbc.sp());
        EXPECT(0x3732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 018D
        gbc.setState(0x1ca8, 0x2264, 0x1630, 0x35a2, 0x7728, 0x6367, 0x1, 0x1);
        gbc.writeMem(0x1ca8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0x1caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 018E
        gbc.setState(0xdf11, 0xebea, 0x34b0, 0xfeca, 0xdad3, 0x777b, 0x0, 0x1);
        gbc.writeMem(0xdf11, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0xdf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf11));
        EXPECT(0xec, gbc.readMem(0xdf12));
        // CB EC 018F
        gbc.setState(0x5359, 0x8a62, 0xd200, 0x7703, 0x3699, 0x6d7b, 0x1, 0x1);
        gbc.writeMem(0x5359, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8a62, gbc.sp());
        EXPECT(0x535b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0190
        gbc.setState(0xb5e1, 0x64dc, 0xc6a0, 0xcdd1, 0xd2fd, 0x65fb, 0x0, 0x0);
        gbc.writeMem(0xb5e1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x64dc, gbc.sp());
        EXPECT(0xb5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e1));
        EXPECT(0xec, gbc.readMem(0xb5e2));
        // CB EC 0191
        gbc.setState(0x4b85, 0x931a, 0xa200, 0x7a64, 0x2752, 0x69e4, 0x0, 0x0);
        gbc.writeMem(0x4b85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0192
        gbc.setState(0x824f, 0xe132, 0xf5e0, 0x422, 0x1c45, 0xed06, 0x0, 0x1);
        gbc.writeMem(0x824f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0x8251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824f));
        EXPECT(0xec, gbc.readMem(0x8250));
        // CB EC 0194
        gbc.setState(0x82b0, 0x60ab, 0x9140, 0xaedf, 0xc2a4, 0x7c7d, 0x1, 0x0);
        gbc.writeMem(0x82b0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x60ab, gbc.sp());
        EXPECT(0x82b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b0));
        EXPECT(0xec, gbc.readMem(0x82b1));
        // CB EC 0195
        gbc.setState(0xcfd1, 0x3b72, 0xd310, 0xe89d, 0xc409, 0xd80f, 0x0, 0x1);
        gbc.writeMem(0xcfd1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3b72, gbc.sp());
        EXPECT(0xcfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd1));
        EXPECT(0xec, gbc.readMem(0xcfd2));
        // CB EC 0196
        gbc.setState(0x2a2d, 0x6941, 0x8880, 0xc6ca, 0xf17d, 0x19f8, 0x0, 0x1);
        gbc.writeMem(0x2a2d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6941, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0197
        gbc.setState(0x6d6a, 0x516b, 0x1e10, 0x1c1d, 0x6b4f, 0x8fa4, 0x1, 0x0);
        gbc.writeMem(0x6d6a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0198
        gbc.setState(0xbe9, 0xecce, 0x2dd0, 0xed8e, 0xf92b, 0x7beb, 0x0, 0x0);
        gbc.writeMem(0xbe9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xecce, gbc.sp());
        EXPECT(0xbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0199
        gbc.setState(0x5578, 0x463f, 0x46f0, 0x17db, 0x890e, 0x80c5, 0x0, 0x1);
        gbc.writeMem(0x5578, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0x557a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 019A
        gbc.setState(0x2902, 0xfcda, 0x9840, 0x7e5d, 0xb08a, 0x34bc, 0x1, 0x0);
        gbc.writeMem(0x2902, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfcda, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 019B
        gbc.setState(0x2227, 0x17f6, 0x8440, 0x36b, 0xfebc, 0xe5a1, 0x1, 0x1);
        gbc.writeMem(0x2227, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x17f6, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 019C
        gbc.setState(0x5426, 0x5d53, 0xca20, 0x94a9, 0x361b, 0x59d7, 0x1, 0x0);
        gbc.writeMem(0x5426, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d53, gbc.sp());
        EXPECT(0x5428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 019D
        gbc.setState(0xdfa6, 0x9b08, 0x530, 0xd7e6, 0x9427, 0x48cc, 0x1, 0x0);
        gbc.writeMem(0xdfa6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa6));
        EXPECT(0xec, gbc.readMem(0xdfa7));
        // CB EC 019E
        gbc.setState(0x442b, 0x1e2b, 0xc1d0, 0x2108, 0xd806, 0x2fb2, 0x0, 0x1);
        gbc.writeMem(0x442b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1e2b, gbc.sp());
        EXPECT(0x442d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 019F
        gbc.setState(0x853f, 0x6141, 0x1150, 0xc6c9, 0xda22, 0xe2ec, 0x0, 0x1);
        gbc.writeMem(0x853f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0x8541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853f));
        EXPECT(0xec, gbc.readMem(0x8540));
        // CB EC 01A0
        gbc.setState(0x21c3, 0x5cef, 0x3140, 0x5e8f, 0x19a7, 0x7a51, 0x0, 0x1);
        gbc.writeMem(0x21c3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0x21c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01A1
        gbc.setState(0x3059, 0x743b, 0xbd00, 0xc44, 0xd48c, 0x6874, 0x0, 0x0);
        gbc.writeMem(0x3059, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01A2
        gbc.setState(0x757f, 0xb3ab, 0xf580, 0x7dad, 0x4059, 0x2b3f, 0x1, 0x1);
        gbc.writeMem(0x757f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb3ab, gbc.sp());
        EXPECT(0x7581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01A4
        gbc.setState(0x2d30, 0x4abd, 0xec40, 0x7eb, 0xf5, 0xccd3, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01A5
        gbc.setState(0x5cbb, 0x1cf2, 0x3af0, 0xa9f6, 0x3141, 0xe9e4, 0x0, 0x1);
        gbc.writeMem(0x5cbb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1cf2, gbc.sp());
        EXPECT(0x5cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01A6
        gbc.setState(0xeb00, 0xc594, 0xc60, 0x3ce5, 0x205b, 0x3a62, 0x1, 0x0);
        gbc.writeMem(0xeb00, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc594, gbc.sp());
        EXPECT(0xeb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb00));
        EXPECT(0xec, gbc.readMem(0xeb01));
        // CB EC 01A7
        gbc.setState(0x7047, 0x190e, 0xb040, 0xfa7, 0x9cfd, 0xdd3e, 0x0, 0x0);
        gbc.writeMem(0x7047, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0x7049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01A8
        gbc.setState(0x8f1a, 0x6e51, 0x7b90, 0xfa85, 0x8063, 0xc51e, 0x0, 0x0);
        gbc.writeMem(0x8f1a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0x8f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1a));
        EXPECT(0xec, gbc.readMem(0x8f1b));
        // CB EC 01A9
        gbc.setState(0x3de, 0xd098, 0xfbe0, 0xb06e, 0x9bb7, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0x3de, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd098, gbc.sp());
        EXPECT(0x3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01AA
        gbc.setState(0xe907, 0xb0a0, 0x3cf0, 0x6c9b, 0x66d2, 0xcf8, 0x1, 0x1);
        gbc.writeMem(0xe907, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb0a0, gbc.sp());
        EXPECT(0xe909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe907));
        EXPECT(0xec, gbc.readMem(0xe908));
        // CB EC 01AB
        gbc.setState(0xc3e, 0x2319, 0xfe80, 0xa210, 0xe369, 0xb0e4, 0x0, 0x0);
        gbc.writeMem(0xc3e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2319, gbc.sp());
        EXPECT(0xc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01AC
        gbc.setState(0x56c7, 0xe7c5, 0xb9f0, 0x5183, 0x7676, 0x4441, 0x0, 0x1);
        gbc.writeMem(0x56c7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0x56c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01AD
        gbc.setState(0xd5ec, 0xc277, 0x9030, 0x9757, 0x4e2c, 0x3889, 0x1, 0x0);
        gbc.writeMem(0xd5ec, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0xec, gbc.readMem(0xd5ed));
        // CB EC 01AE
        gbc.setState(0xedaf, 0x6f65, 0x6ff0, 0x2017, 0x49ee, 0x6ae6, 0x1, 0x0);
        gbc.writeMem(0xedaf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0xedb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaf));
        EXPECT(0xec, gbc.readMem(0xedb0));
        // CB EC 01AF
        gbc.setState(0x608f, 0xd167, 0xd7b0, 0x98f4, 0x3c73, 0x4566, 0x0, 0x0);
        gbc.writeMem(0x608f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd167, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01B0
        gbc.setState(0x71a8, 0xed88, 0x60a0, 0x60fa, 0x1850, 0x213, 0x0, 0x1);
        gbc.writeMem(0x71a8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xed88, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01B2
        gbc.setState(0x73f5, 0x5e4f, 0x3ed0, 0x3d52, 0xa259, 0x3a90, 0x0, 0x1);
        gbc.writeMem(0x73f5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5e4f, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01B3
        gbc.setState(0x2e2e, 0x1fb0, 0x2300, 0xa43a, 0x1b4f, 0xcea2, 0x0, 0x0);
        gbc.writeMem(0x2e2e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1fb0, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01B4
        gbc.setState(0x8377, 0x135, 0x51b0, 0xc3c5, 0xb0d4, 0xc733, 0x1, 0x1);
        gbc.writeMem(0x8377, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x8379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8377));
        EXPECT(0xec, gbc.readMem(0x8378));
        // CB EC 01B5
        gbc.setState(0x739a, 0x446f, 0x8f60, 0xeaad, 0xb81d, 0x5897, 0x0, 0x1);
        gbc.writeMem(0x739a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01B6
        gbc.setState(0x5d90, 0xc130, 0x93a0, 0xfdf2, 0x5fea, 0x9514, 0x0, 0x0);
        gbc.writeMem(0x5d90, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc130, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01B7
        gbc.setState(0x1978, 0xb185, 0xc0f0, 0x152, 0xb765, 0xd21d, 0x1, 0x0);
        gbc.writeMem(0x1978, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01B8
        gbc.setState(0xefc1, 0x372d, 0x7f0, 0x80dc, 0xbeb6, 0xdd1b, 0x0, 0x0);
        gbc.writeMem(0xefc1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x372d, gbc.sp());
        EXPECT(0xefc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc1));
        EXPECT(0xec, gbc.readMem(0xefc2));
        // CB EC 01B9
        gbc.setState(0xbbe0, 0x761d, 0x54c0, 0x3a4a, 0x16ac, 0x2e88, 0x1, 0x1);
        gbc.writeMem(0xbbe0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x761d, gbc.sp());
        EXPECT(0xbbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe0));
        EXPECT(0xec, gbc.readMem(0xbbe1));
        // CB EC 01BA
        gbc.setState(0x23a2, 0x120a, 0x830, 0x1d50, 0xe852, 0xc404, 0x0, 0x1);
        gbc.writeMem(0x23a2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x120a, gbc.sp());
        EXPECT(0x23a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01BB
        gbc.setState(0x498, 0xbbda, 0x7a80, 0x6748, 0x8c36, 0xd756, 0x1, 0x0);
        gbc.writeMem(0x498, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01BC
        gbc.setState(0x3b0b, 0xb921, 0xd240, 0x71e, 0xfd15, 0x84e0, 0x1, 0x1);
        gbc.writeMem(0x3b0b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x3b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01BD
        gbc.setState(0x1ea5, 0x9a16, 0x2360, 0x2b1f, 0x6d2f, 0xb355, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01BE
        gbc.setState(0x77d7, 0xf103, 0x9ee0, 0x6bea, 0x9a29, 0x41ee, 0x0, 0x0);
        gbc.writeMem(0x77d7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf103, gbc.sp());
        EXPECT(0x77d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01BF
        gbc.setState(0x1990, 0xa099, 0x8550, 0xcc0e, 0xaa93, 0xfe3a, 0x0, 0x1);
        gbc.writeMem(0x1990, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa099, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01C0
        gbc.setState(0x5006, 0x9058, 0x9490, 0xd5c7, 0x40c4, 0x1b7c, 0x1, 0x1);
        gbc.writeMem(0x5006, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9058, gbc.sp());
        EXPECT(0x5008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01C1
        gbc.setState(0x1be5, 0xad65, 0x1fb0, 0x2fdd, 0x43c4, 0x4b3c, 0x1, 0x0);
        gbc.writeMem(0x1be5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01C2
        gbc.setState(0x4f9d, 0xf0b, 0xf8a0, 0x9d16, 0x2c23, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0x4f9d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01C3
        gbc.setState(0x7d99, 0x485, 0x6870, 0x416b, 0xf1ad, 0x663e, 0x1, 0x1);
        gbc.writeMem(0x7d99, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01C4
        gbc.setState(0x77a, 0xa999, 0x94e0, 0xb086, 0xe0f3, 0x650d, 0x0, 0x1);
        gbc.writeMem(0x77a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01C5
        gbc.setState(0xa349, 0xefb, 0x2130, 0x68f5, 0x8af0, 0x57a5, 0x0, 0x0);
        gbc.writeMem(0xa349, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xefb, gbc.sp());
        EXPECT(0xa34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa349));
        EXPECT(0xec, gbc.readMem(0xa34a));
        // CB EC 01C6
        gbc.setState(0x1520, 0x1fe, 0xa630, 0x9740, 0x4f78, 0x12b3, 0x0, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1fe, gbc.sp());
        EXPECT(0x1522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01C7
        gbc.setState(0xab, 0xe87a, 0x11c0, 0xd294, 0xbaa9, 0x218, 0x1, 0x1);
        gbc.writeMem(0xab, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe87a, gbc.sp());
        EXPECT(0xad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01C8
        gbc.setState(0x400e, 0x2303, 0xffe0, 0x86b0, 0x43b1, 0x8906, 0x1, 0x0);
        gbc.writeMem(0x400e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2303, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01C9
        gbc.setState(0x26be, 0xa54e, 0xe260, 0x3d3e, 0x6df6, 0xf2d5, 0x0, 0x0);
        gbc.writeMem(0x26be, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01CA
        gbc.setState(0xd451, 0x2307, 0x1190, 0x41c4, 0xbc39, 0x9cfd, 0x1, 0x1);
        gbc.writeMem(0xd451, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2307, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd451));
        EXPECT(0xec, gbc.readMem(0xd452));
        // CB EC 01CB
        gbc.setState(0xa1c7, 0x9c0a, 0xc710, 0x1002, 0xbc1e, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0xa1c7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0xa1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c7));
        EXPECT(0xec, gbc.readMem(0xa1c8));
        // CB EC 01CC
        gbc.setState(0x5e1, 0x707, 0xc360, 0x2cff, 0xd4e3, 0x20dc, 0x1, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x707, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01CE
        gbc.setState(0xe438, 0xad5b, 0x2340, 0x99bc, 0x529a, 0x4624, 0x0, 0x1);
        gbc.writeMem(0xe438, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xad5b, gbc.sp());
        EXPECT(0xe43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe438));
        EXPECT(0xec, gbc.readMem(0xe439));
        // CB EC 01CF
        gbc.setState(0xa2ac, 0xb713, 0x2a0, 0x93f1, 0x5468, 0x180f, 0x1, 0x0);
        gbc.writeMem(0xa2ac, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb713, gbc.sp());
        EXPECT(0xa2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ac));
        EXPECT(0xec, gbc.readMem(0xa2ad));
        // CB EC 01D0
        gbc.setState(0x6f86, 0xbc9b, 0x62c0, 0x3399, 0x7073, 0x8e00, 0x1, 0x0);
        gbc.writeMem(0x6f86, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0x6f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01D1
        gbc.setState(0x2492, 0x75c4, 0x8690, 0xf21, 0x52e0, 0xb270, 0x1, 0x0);
        gbc.writeMem(0x2492, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0x2494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01D2
        gbc.setState(0x8927, 0x41e8, 0x950, 0x2c40, 0x228a, 0x1c3, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0xec, gbc.readMem(0x8928));
        // CB EC 01D3
        gbc.setState(0x34e4, 0x500, 0x9660, 0x715b, 0xd6b2, 0xa16, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x500, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01D4
        gbc.setState(0x719f, 0xa053, 0x5a80, 0x8fde, 0xd951, 0xde6e, 0x1, 0x0);
        gbc.writeMem(0x719f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa053, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01D5
        gbc.setState(0x8fd8, 0x956f, 0x1270, 0x4b67, 0x830e, 0xab1e, 0x1, 0x0);
        gbc.writeMem(0x8fd8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x956f, gbc.sp());
        EXPECT(0x8fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd8));
        EXPECT(0xec, gbc.readMem(0x8fd9));
        // CB EC 01D6
        gbc.setState(0x6602, 0x2840, 0x6a10, 0x6808, 0x6844, 0x8b06, 0x1, 0x0);
        gbc.writeMem(0x6602, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x6604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01D7
        gbc.setState(0x6a64, 0xec64, 0x92e0, 0xce1e, 0xb485, 0xbc43, 0x0, 0x1);
        gbc.writeMem(0x6a64, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xec64, gbc.sp());
        EXPECT(0x6a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01D8
        gbc.setState(0xcfd7, 0xd208, 0xa0d0, 0xecef, 0xaa6f, 0x3815, 0x1, 0x0);
        gbc.writeMem(0xcfd7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd7));
        EXPECT(0xec, gbc.readMem(0xcfd8));
        // CB EC 01D9
        gbc.setState(0x84c6, 0xf20b, 0xe170, 0x92a8, 0xcc59, 0xff86, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0xec, gbc.readMem(0x84c7));
        // CB EC 01DA
        gbc.setState(0x9e4a, 0xda59, 0xb950, 0x6e2e, 0x30c9, 0x8f89, 0x0, 0x0);
        gbc.writeMem(0x9e4a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xda59, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4a));
        EXPECT(0xec, gbc.readMem(0x9e4b));
        // CB EC 01DB
        gbc.setState(0xb146, 0x1189, 0xce40, 0xfe6d, 0x2b4a, 0xe501, 0x0, 0x1);
        gbc.writeMem(0xb146, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1189, gbc.sp());
        EXPECT(0xb148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb146));
        EXPECT(0xec, gbc.readMem(0xb147));
        // CB EC 01DC
        gbc.setState(0xdf36, 0x689, 0x16a0, 0xc5dc, 0xc4a3, 0x389a, 0x1, 0x1);
        gbc.writeMem(0xdf36, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf36));
        EXPECT(0xec, gbc.readMem(0xdf37));
        // CB EC 01DD
        gbc.setState(0x239f, 0x3050, 0xe020, 0x13c, 0x529d, 0x4221, 0x0, 0x1);
        gbc.writeMem(0x239f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01DE
        gbc.setState(0x9c60, 0x2caa, 0x4ea0, 0x8954, 0x31dc, 0xb4b2, 0x1, 0x0);
        gbc.writeMem(0x9c60, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2caa, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c60));
        EXPECT(0xec, gbc.readMem(0x9c61));
        // CB EC 01DF
        gbc.setState(0x3351, 0xad4f, 0x5830, 0xfeaf, 0x1259, 0x3bca, 0x0, 0x0);
        gbc.writeMem(0x3351, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xad4f, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E0
        gbc.setState(0x4e48, 0x5114, 0x9e00, 0x958f, 0xcadb, 0xc4dc, 0x0, 0x0);
        gbc.writeMem(0x4e48, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5114, gbc.sp());
        EXPECT(0x4e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01E1
        gbc.setState(0xae17, 0xa31f, 0xed30, 0x9242, 0xde86, 0x4df, 0x1, 0x0);
        gbc.writeMem(0xae17, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0xae19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae17));
        EXPECT(0xec, gbc.readMem(0xae18));
        // CB EC 01E2
        gbc.setState(0x6eb4, 0x211e, 0xa8c0, 0xec56, 0xff2e, 0xb366, 0x1, 0x1);
        gbc.writeMem(0x6eb4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x211e, gbc.sp());
        EXPECT(0x6eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01E3
        gbc.setState(0x2a8, 0xcb6a, 0x7590, 0xeeac, 0xa645, 0xbc79, 0x1, 0x0);
        gbc.writeMem(0x2a8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E4
        gbc.setState(0x231a, 0x830, 0x4f70, 0x619b, 0xa24f, 0xf4b7, 0x0, 0x0);
        gbc.writeMem(0x231a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x830, gbc.sp());
        EXPECT(0x231c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E5
        gbc.setState(0x67f8, 0xf933, 0x12b0, 0x6861, 0x9864, 0x632, 0x0, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf933, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E6
        gbc.setState(0x3632, 0x72c, 0x320, 0x6487, 0xa1f8, 0xf48, 0x0, 0x0);
        gbc.writeMem(0x3632, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01E7
        gbc.setState(0x7cbd, 0x9690, 0xd9f0, 0x3bca, 0x8850, 0x803, 0x1, 0x0);
        gbc.writeMem(0x7cbd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0x7cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E8
        gbc.setState(0x4ac0, 0xa362, 0x4d90, 0xd1ef, 0xca7d, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0x4ac0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa362, gbc.sp());
        EXPECT(0x4ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01E9
        gbc.setState(0x48c0, 0xc9e0, 0xdf20, 0x2668, 0xae29, 0x6b66, 0x1, 0x0);
        gbc.writeMem(0x48c0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x48c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01EA
        gbc.setState(0x738b, 0xcf30, 0x8c80, 0xd6b2, 0x188c, 0x49aa, 0x1, 0x0);
        gbc.writeMem(0x738b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcf30, gbc.sp());
        EXPECT(0x738d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01EB
        gbc.setState(0x85d0, 0xeaab, 0xc080, 0x3ccb, 0x8265, 0x912f, 0x1, 0x1);
        gbc.writeMem(0x85d0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xeaab, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d0));
        EXPECT(0xec, gbc.readMem(0x85d1));
        // CB EC 01EC
        gbc.setState(0xb3c3, 0x15de, 0x7bb0, 0x62f3, 0x4a3e, 0x944f, 0x1, 0x1);
        gbc.writeMem(0xb3c3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c3));
        EXPECT(0xec, gbc.readMem(0xb3c4));
        // CB EC 01ED
        gbc.setState(0xda42, 0x1d53, 0xec90, 0xf94c, 0xe3f0, 0x45ba, 0x1, 0x0);
        gbc.writeMem(0xda42, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1d53, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0xec, gbc.readMem(0xda43));
        // CB EC 01EE
        gbc.setState(0x5aa9, 0xe736, 0x4000, 0x1105, 0xd41c, 0x9df3, 0x1, 0x0);
        gbc.writeMem(0x5aa9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe736, gbc.sp());
        EXPECT(0x5aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01EF
        gbc.setState(0x1bc4, 0xc3dd, 0xbfd0, 0x481d, 0x9cb4, 0x1e53, 0x0, 0x1);
        gbc.writeMem(0x1bc4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0x1bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01F0
        gbc.setState(0x9925, 0x4200, 0xcd10, 0xb4db, 0x1b23, 0x1275, 0x0, 0x1);
        gbc.writeMem(0x9925, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9925));
        EXPECT(0xec, gbc.readMem(0x9926));
        // CB EC 01F1
        gbc.setState(0x99b8, 0xa7c3, 0x2ca0, 0x578, 0x8c49, 0xc82d, 0x0, 0x0);
        gbc.writeMem(0x99b8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa7c3, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b8));
        EXPECT(0xec, gbc.readMem(0x99b9));
        // CB EC 01F2
        gbc.setState(0xb571, 0x1050, 0x9ee0, 0x5064, 0x8d90, 0x926, 0x1, 0x0);
        gbc.writeMem(0xb571, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1050, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb571));
        EXPECT(0xec, gbc.readMem(0xb572));
        // CB EC 01F3
        gbc.setState(0x1e3a, 0xfeab, 0xc80, 0xe3b6, 0x4cd1, 0x83b4, 0x1, 0x1);
        gbc.writeMem(0x1e3a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01F4
        gbc.setState(0x7438, 0x8754, 0x45a0, 0xd83e, 0xf4ac, 0xe12e, 0x0, 0x1);
        gbc.writeMem(0x7438, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8754, gbc.sp());
        EXPECT(0x743a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01F5
        gbc.setState(0x9e61, 0x3b55, 0xc80, 0xf5b1, 0x8dcb, 0x519e, 0x1, 0x1);
        gbc.writeMem(0x9e61, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b55, gbc.sp());
        EXPECT(0x9e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e61));
        EXPECT(0xec, gbc.readMem(0x9e62));
        // CB EC 01F7
        gbc.setState(0x940e, 0xf30f, 0xcf60, 0xee21, 0x6084, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x940e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf30f, gbc.sp());
        EXPECT(0x9410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940e));
        EXPECT(0xec, gbc.readMem(0x940f));
        // CB EC 01F8
        gbc.setState(0xac9c, 0x633c, 0x17a0, 0x1ccd, 0xf4dd, 0xb890, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0xac9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9c));
        EXPECT(0xec, gbc.readMem(0xac9d));
        // CB EC 01F9
        gbc.setState(0x7239, 0xcf45, 0x1a0, 0xa144, 0x66f4, 0x3cf5, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf45, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01FA
        gbc.setState(0x67ea, 0x46e3, 0xfb30, 0x5646, 0xfb65, 0xea88, 0x1, 0x1);
        gbc.writeMem(0x67ea, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x46e3, gbc.sp());
        EXPECT(0x67ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 01FB
        gbc.setState(0x3e43, 0x11fd, 0xd600, 0x9a2e, 0x6db3, 0x8abd, 0x0, 0x0);
        gbc.writeMem(0x3e43, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x11fd, gbc.sp());
        EXPECT(0x3e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 01FC
        gbc.setState(0x8240, 0xb3d3, 0xd270, 0xbd36, 0xa52d, 0xee1f, 0x0, 0x1);
        gbc.writeMem(0x8240, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb3d3, gbc.sp());
        EXPECT(0x8242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8240));
        EXPECT(0xec, gbc.readMem(0x8241));
        // CB EC 01FD
        gbc.setState(0xe2ce, 0x54d2, 0xb4b0, 0xd52e, 0x2c18, 0x8d73, 0x1, 0x1);
        gbc.writeMem(0xe2ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0xe2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ce));
        EXPECT(0xec, gbc.readMem(0xe2cf));
        // CB EC 01FE
        gbc.setState(0xd73a, 0x8d6a, 0xb510, 0x215c, 0xca29, 0x5c0d, 0x1, 0x0);
        gbc.writeMem(0xd73a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0xd73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73a));
        EXPECT(0xec, gbc.readMem(0xd73b));
        // CB EC 01FF
        gbc.setState(0xbec0, 0x3f87, 0x57c0, 0xe6d6, 0x6cc6, 0x2175, 0x1, 0x0);
        gbc.writeMem(0xbec0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0xbec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec0));
        EXPECT(0xec, gbc.readMem(0xbec1));
        // CB EC 0200
        gbc.setState(0x437f, 0x3b0f, 0x1b10, 0x3ef8, 0xe513, 0x7351, 0x0, 0x1);
        gbc.writeMem(0x437f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b0f, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0201
        gbc.setState(0xec61, 0xc4f3, 0x19a0, 0x10b4, 0x55cf, 0xcab9, 0x0, 0x1);
        gbc.writeMem(0xec61, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc4f3, gbc.sp());
        EXPECT(0xec63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec61));
        EXPECT(0xec, gbc.readMem(0xec62));
        // CB EC 0202
        gbc.setState(0x2200, 0xe82a, 0xffa0, 0x9c6d, 0x806d, 0x188d, 0x0, 0x0);
        gbc.writeMem(0x2200, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0x2202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0203
        gbc.setState(0xc5fe, 0x6e40, 0x3920, 0x8de2, 0xd5bf, 0x99e7, 0x0, 0x1);
        gbc.writeMem(0xc5fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0xc600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fe));
        EXPECT(0xec, gbc.readMem(0xc5ff));
        // CB EC 0204
        gbc.setState(0x4539, 0x24ad, 0x8120, 0xbbbd, 0x5d30, 0x48ad, 0x0, 0x0);
        gbc.writeMem(0x4539, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0205
        gbc.setState(0xdb2f, 0x5091, 0x1770, 0x1a8, 0x988e, 0xdd6, 0x0, 0x0);
        gbc.writeMem(0xdb2f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0xdb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2f));
        EXPECT(0xec, gbc.readMem(0xdb30));
        // CB EC 0206
        gbc.setState(0xcae0, 0x139d, 0x4b50, 0xdc4b, 0xe4f, 0x9608, 0x0, 0x0);
        gbc.writeMem(0xcae0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae0));
        EXPECT(0xec, gbc.readMem(0xcae1));
        // CB EC 0207
        gbc.setState(0x5c5e, 0x1c58, 0x340, 0x71ec, 0xb6e0, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0x5c5e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1c58, gbc.sp());
        EXPECT(0x5c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0208
        gbc.setState(0x4f99, 0xe054, 0x2810, 0x9374, 0xbf8a, 0xff06, 0x0, 0x0);
        gbc.writeMem(0x4f99, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe054, gbc.sp());
        EXPECT(0x4f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0209
        gbc.setState(0x281d, 0x4318, 0x8fa0, 0xaf3, 0x176, 0x574, 0x0, 0x1);
        gbc.writeMem(0x281d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0x281f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 020A
        gbc.setState(0x206e, 0xf7c3, 0x6290, 0x6560, 0xf64c, 0x2e32, 0x1, 0x1);
        gbc.writeMem(0x206e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf7c3, gbc.sp());
        EXPECT(0x2070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 020C
        gbc.setState(0x235c, 0xff8c, 0xb10, 0x37cc, 0x9a08, 0xa105, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff8c, gbc.sp());
        EXPECT(0x235e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 020D
        gbc.setState(0x642e, 0x3695, 0x51f0, 0x7893, 0x8cb6, 0x9a05, 0x0, 0x1);
        gbc.writeMem(0x642e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 020E
        gbc.setState(0xb8bc, 0x46ec, 0x69e0, 0x2cae, 0x6aa4, 0xb1f2, 0x0, 0x0);
        gbc.writeMem(0xb8bc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x46ec, gbc.sp());
        EXPECT(0xb8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bc));
        EXPECT(0xec, gbc.readMem(0xb8bd));
        // CB EC 020F
        gbc.setState(0xaeaf, 0x5ab3, 0xfb70, 0x919e, 0x1b8f, 0xa594, 0x1, 0x1);
        gbc.writeMem(0xaeaf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0xaeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeaf));
        EXPECT(0xec, gbc.readMem(0xaeb0));
        // CB EC 0210
        gbc.setState(0x9f9, 0xf499, 0x11f0, 0x6766, 0x6ffd, 0x60da, 0x1, 0x1);
        gbc.writeMem(0x9f9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0211
        gbc.setState(0xcefa, 0x2633, 0xb940, 0x54f0, 0xefa9, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0xcefa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2633, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefa));
        EXPECT(0xec, gbc.readMem(0xcefb));
        // CB EC 0212
        gbc.setState(0xe977, 0xe190, 0xd5d0, 0xc39c, 0x5b20, 0x4d10, 0x1, 0x1);
        gbc.writeMem(0xe977, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe977));
        EXPECT(0xec, gbc.readMem(0xe978));
        // CB EC 0213
        gbc.setState(0x3fbc, 0xbc9, 0xf6a0, 0xd644, 0x3455, 0xa4a5, 0x0, 0x0);
        gbc.writeMem(0x3fbc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbc9, gbc.sp());
        EXPECT(0x3fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0214
        gbc.setState(0xb238, 0x8af, 0x7740, 0xafe4, 0x6707, 0xeed0, 0x1, 0x0);
        gbc.writeMem(0xb238, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8af, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0xec, gbc.readMem(0xb239));
        // CB EC 0215
        gbc.setState(0xc41f, 0x889c, 0x5af0, 0x8274, 0xf217, 0x9c5f, 0x0, 0x0);
        gbc.writeMem(0xc41f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x889c, gbc.sp());
        EXPECT(0xc421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41f));
        EXPECT(0xec, gbc.readMem(0xc420));
        // CB EC 0216
        gbc.setState(0x64b6, 0x8e82, 0xd2e0, 0xa94c, 0x5aac, 0x835a, 0x0, 0x1);
        gbc.writeMem(0x64b6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0x64b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0217
        gbc.setState(0xb940, 0x798b, 0xb090, 0x92c5, 0x4cf8, 0xd5bb, 0x1, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb940));
        EXPECT(0xec, gbc.readMem(0xb941));
        // CB EC 0218
        gbc.setState(0xa934, 0xec0e, 0xd4c0, 0x2792, 0x5433, 0x9867, 0x1, 0x1);
        gbc.writeMem(0xa934, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0xa936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa934));
        EXPECT(0xec, gbc.readMem(0xa935));
        // CB EC 0219
        gbc.setState(0xc3fe, 0xf3a1, 0xf3a0, 0x868, 0xf7b1, 0x1d2b, 0x1, 0x0);
        gbc.writeMem(0xc3fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf3a1, gbc.sp());
        EXPECT(0xc400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fe));
        EXPECT(0xec, gbc.readMem(0xc3ff));
        // CB EC 021A
        gbc.setState(0xdf5d, 0x3919, 0x4f00, 0x909e, 0x414d, 0xcde2, 0x0, 0x0);
        gbc.writeMem(0xdf5d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3919, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5d));
        EXPECT(0xec, gbc.readMem(0xdf5e));
        // CB EC 021B
        gbc.setState(0x86e0, 0x7ade, 0x1020, 0x82e8, 0xa8d4, 0xa79f, 0x1, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7ade, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e0));
        EXPECT(0xec, gbc.readMem(0x86e1));
        // CB EC 021C
        gbc.setState(0x879a, 0x3c27, 0xfb30, 0xda1c, 0xb802, 0xdeca, 0x0, 0x0);
        gbc.writeMem(0x879a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879a));
        EXPECT(0xec, gbc.readMem(0x879b));
        // CB EC 021D
        gbc.setState(0x9f95, 0xa29b, 0x1870, 0x85f0, 0xa0ec, 0xb0f9, 0x1, 0x0);
        gbc.writeMem(0x9f95, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0x9f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f95));
        EXPECT(0xec, gbc.readMem(0x9f96));
        // CB EC 021E
        gbc.setState(0xa0fa, 0x426b, 0xe930, 0x37b8, 0x4a39, 0xc068, 0x1, 0x1);
        gbc.writeMem(0xa0fa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x426b, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fa));
        EXPECT(0xec, gbc.readMem(0xa0fb));
        // CB EC 021F
        gbc.setState(0xa899, 0xc68d, 0x15a0, 0xc491, 0x8f90, 0xdf10, 0x1, 0x1);
        gbc.writeMem(0xa899, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc68d, gbc.sp());
        EXPECT(0xa89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa899));
        EXPECT(0xec, gbc.readMem(0xa89a));
        // CB EC 0220
        gbc.setState(0x2341, 0x749d, 0x1fa0, 0x537c, 0x50f, 0x2373, 0x1, 0x0);
        gbc.writeMem(0x2341, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x749d, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0221
        gbc.setState(0x11b2, 0x4bdb, 0x1c20, 0xa6e3, 0x6070, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x11b2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4bdb, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0222
        gbc.setState(0xa9bc, 0x88a0, 0x25b0, 0xf6f9, 0x5738, 0x3f1f, 0x1, 0x0);
        gbc.writeMem(0xa9bc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x88a0, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bc));
        EXPECT(0xec, gbc.readMem(0xa9bd));
        // CB EC 0223
        gbc.setState(0x5d43, 0x7e6, 0xe60, 0x8fa9, 0x68a5, 0xbdd2, 0x1, 0x1);
        gbc.writeMem(0x5d43, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7e6, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0224
        gbc.setState(0x3c76, 0xff3f, 0x2920, 0xead3, 0xee68, 0x9eef, 0x1, 0x1);
        gbc.writeMem(0x3c76, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xff3f, gbc.sp());
        EXPECT(0x3c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0225
        gbc.setState(0x949c, 0x7289, 0xacb0, 0xed94, 0x4910, 0x47c2, 0x1, 0x0);
        gbc.writeMem(0x949c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7289, gbc.sp());
        EXPECT(0x949e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949c));
        EXPECT(0xec, gbc.readMem(0x949d));
        // CB EC 0226
        gbc.setState(0x4fa3, 0x94c4, 0xf9c0, 0x15d9, 0xf08d, 0x1437, 0x0, 0x1);
        gbc.writeMem(0x4fa3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0227
        gbc.setState(0x9ce1, 0xc167, 0x8fc0, 0x1bfc, 0x94a0, 0x4d78, 0x1, 0x0);
        gbc.writeMem(0x9ce1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0x9ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce1));
        EXPECT(0xec, gbc.readMem(0x9ce2));
        // CB EC 0229
        gbc.setState(0x78e0, 0x962, 0xcfb0, 0xc27f, 0x824c, 0x567f, 0x0, 0x0);
        gbc.writeMem(0x78e0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x962, gbc.sp());
        EXPECT(0x78e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 022A
        gbc.setState(0xab2d, 0x5e62, 0x4b20, 0x9929, 0x745, 0xf2f1, 0x1, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2d));
        EXPECT(0xec, gbc.readMem(0xab2e));
        // CB EC 022B
        gbc.setState(0x9502, 0x5955, 0x7fd0, 0x375e, 0xf49d, 0xb08e, 0x0, 0x1);
        gbc.writeMem(0x9502, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5955, gbc.sp());
        EXPECT(0x9504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9502));
        EXPECT(0xec, gbc.readMem(0x9503));
        // CB EC 022C
        gbc.setState(0x60f6, 0x70a3, 0x9b20, 0xb99a, 0x1986, 0x3073, 0x0, 0x0);
        gbc.writeMem(0x60f6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x70a3, gbc.sp());
        EXPECT(0x60f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 022D
        gbc.setState(0x34db, 0x3bcc, 0x8530, 0x2ade, 0x4021, 0x3bc6, 0x0, 0x1);
        gbc.writeMem(0x34db, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0x34dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 022E
        gbc.setState(0x3e3e, 0xd82c, 0xad00, 0x336c, 0xde11, 0xaf9f, 0x0, 0x1);
        gbc.writeMem(0x3e3e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0x3e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 022F
        gbc.setState(0x98ae, 0xc128, 0x3ae0, 0xbea1, 0xfba, 0x67d8, 0x0, 0x1);
        gbc.writeMem(0x98ae, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0xec, gbc.readMem(0x98af));
        // CB EC 0230
        gbc.setState(0x108e, 0x1651, 0xca30, 0x5bc9, 0xef86, 0x33fb, 0x1, 0x1);
        gbc.writeMem(0x108e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1651, gbc.sp());
        EXPECT(0x1090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0231
        gbc.setState(0x7c58, 0x1d05, 0x99c0, 0x1e7c, 0x35ef, 0x40f8, 0x0, 0x0);
        gbc.writeMem(0x7c58, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0x7c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0232
        gbc.setState(0x639c, 0xcbda, 0x5700, 0x27ce, 0x36e, 0x33b9, 0x1, 0x0);
        gbc.writeMem(0x639c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcbda, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0233
        gbc.setState(0x8841, 0xc8e2, 0x69a0, 0xec8a, 0xea05, 0xa2fe, 0x1, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0xec, gbc.readMem(0x8842));
        // CB EC 0234
        gbc.setState(0xcf6, 0x6698, 0xbd30, 0x870f, 0xa9d8, 0x5a5b, 0x1, 0x1);
        gbc.writeMem(0xcf6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6698, gbc.sp());
        EXPECT(0xcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0235
        gbc.setState(0x2ede, 0x9515, 0xa8d0, 0x5322, 0x5a2, 0x4af8, 0x1, 0x1);
        gbc.writeMem(0x2ede, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9515, gbc.sp());
        EXPECT(0x2ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0236
        gbc.setState(0x57e0, 0x56ad, 0xdb0, 0x325, 0x8a20, 0xe7d0, 0x1, 0x0);
        gbc.writeMem(0x57e0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x56ad, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0237
        gbc.setState(0xc0a4, 0x454, 0xb9f0, 0x9375, 0xc12e, 0x4ba2, 0x0, 0x1);
        gbc.writeMem(0xc0a4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a4));
        EXPECT(0xec, gbc.readMem(0xc0a5));
        // CB EC 0238
        gbc.setState(0xc7df, 0x4644, 0x27a0, 0x2b74, 0x9cb7, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0xc7df, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7df));
        EXPECT(0xec, gbc.readMem(0xc7e0));
        // CB EC 0239
        gbc.setState(0x138, 0x48ed, 0x5c0, 0x344, 0x8761, 0xcf5f, 0x0, 0x1);
        gbc.writeMem(0x138, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x48ed, gbc.sp());
        EXPECT(0x13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 023A
        gbc.setState(0x2af9, 0xe016, 0xcdb0, 0x3140, 0xb991, 0xeb0b, 0x1, 0x1);
        gbc.writeMem(0x2af9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe016, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 023B
        gbc.setState(0x9190, 0x506e, 0xa100, 0xf022, 0x53a4, 0xc5d1, 0x1, 0x0);
        gbc.writeMem(0x9190, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x506e, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9190));
        EXPECT(0xec, gbc.readMem(0x9191));
        // CB EC 023C
        gbc.setState(0xa2cb, 0x5c5, 0x58a0, 0xb7c0, 0xaa6a, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0xa2cb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5c5, gbc.sp());
        EXPECT(0xa2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cb));
        EXPECT(0xec, gbc.readMem(0xa2cc));
        // CB EC 023E
        gbc.setState(0x5945, 0xf23f, 0x6430, 0xb2e1, 0x92ee, 0xa361, 0x0, 0x0);
        gbc.writeMem(0x5945, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf23f, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 023F
        gbc.setState(0xc85, 0xc557, 0xf6d0, 0x69f7, 0x5097, 0x1a, 0x0, 0x1);
        gbc.writeMem(0xc85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0240
        gbc.setState(0x6f1c, 0xc00a, 0xcbf0, 0x9983, 0x810e, 0xf512, 0x1, 0x0);
        gbc.writeMem(0x6f1c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc00a, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0241
        gbc.setState(0x8543, 0xbf26, 0x30, 0xd6eb, 0x1ca5, 0xe810, 0x1, 0x0);
        gbc.writeMem(0x8543, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbf26, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8543));
        EXPECT(0xec, gbc.readMem(0x8544));
        // CB EC 0242
        gbc.setState(0x80d2, 0xaaea, 0xa2a0, 0xe644, 0xd8a8, 0xaa99, 0x0, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0x80d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d2));
        EXPECT(0xec, gbc.readMem(0x80d3));
        // CB EC 0243
        gbc.setState(0x261a, 0x340f, 0x8d50, 0xccb7, 0x758b, 0x5c5f, 0x0, 0x0);
        gbc.writeMem(0x261a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0244
        gbc.setState(0x38c, 0xb104, 0xeb00, 0x6a4a, 0xe4da, 0xf315, 0x0, 0x1);
        gbc.writeMem(0x38c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb104, gbc.sp());
        EXPECT(0x38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0245
        gbc.setState(0x3524, 0x4243, 0xf7d0, 0xb454, 0xbfb8, 0x144e, 0x0, 0x1);
        gbc.writeMem(0x3524, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0246
        gbc.setState(0xc1ee, 0x241e, 0xd460, 0xe147, 0x8b01, 0xd62, 0x1, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x241e, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0xec, gbc.readMem(0xc1ef));
        // CB EC 0247
        gbc.setState(0x7a78, 0xb0da, 0x78d0, 0x854c, 0xee61, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0x7a78, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb0da, gbc.sp());
        EXPECT(0x7a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0248
        gbc.setState(0x2007, 0xd946, 0x23c0, 0xe68b, 0xfb30, 0x7c74, 0x1, 0x1);
        gbc.writeMem(0x2007, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd946, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0249
        gbc.setState(0x87c2, 0x520a, 0x5400, 0x706, 0x6ab3, 0x158, 0x1, 0x1);
        gbc.writeMem(0x87c2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c2));
        EXPECT(0xec, gbc.readMem(0x87c3));
        // CB EC 024A
        gbc.setState(0xb5ed, 0xa9ec, 0x9060, 0x802f, 0xa179, 0xeee0, 0x1, 0x1);
        gbc.writeMem(0xb5ed, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ed));
        EXPECT(0xec, gbc.readMem(0xb5ee));
        // CB EC 024B
        gbc.setState(0x550b, 0x19bf, 0xe740, 0x65b0, 0xcda3, 0x923d, 0x1, 0x0);
        gbc.writeMem(0x550b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x19bf, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 024C
        gbc.setState(0xde7b, 0xe15e, 0xc440, 0x894c, 0x3a48, 0xf553, 0x1, 0x0);
        gbc.writeMem(0xde7b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe15e, gbc.sp());
        EXPECT(0xde7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7b));
        EXPECT(0xec, gbc.readMem(0xde7c));
        // CB EC 024D
        gbc.setState(0x4a72, 0x47d4, 0x5cc0, 0x5f2e, 0x52ed, 0x76f6, 0x0, 0x1);
        gbc.writeMem(0x4a72, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 024F
        gbc.setState(0xdda3, 0x32d3, 0xec30, 0x10e2, 0xe078, 0xd0a6, 0x1, 0x1);
        gbc.writeMem(0xdda3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0xdda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda3));
        EXPECT(0xec, gbc.readMem(0xdda4));
        // CB EC 0250
        gbc.setState(0x464c, 0x7469, 0x2ff0, 0x7ede, 0x4ebb, 0xc32d, 0x1, 0x1);
        gbc.writeMem(0x464c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7469, gbc.sp());
        EXPECT(0x464e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0251
        gbc.setState(0x457b, 0xbf79, 0x47d0, 0x5139, 0x4830, 0x7be8, 0x1, 0x0);
        gbc.writeMem(0x457b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0x457d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0252
        gbc.setState(0x6b30, 0xba1b, 0xc4f0, 0x563e, 0x1305, 0xaa65, 0x0, 0x0);
        gbc.writeMem(0x6b30, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xba1b, gbc.sp());
        EXPECT(0x6b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0253
        gbc.setState(0xd984, 0x9ec4, 0x3a80, 0x2a25, 0x6d86, 0x8c9e, 0x0, 0x0);
        gbc.writeMem(0xd984, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9ec4, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0xec, gbc.readMem(0xd985));
        // CB EC 0254
        gbc.setState(0xcc47, 0x3660, 0x9980, 0x37b, 0x74e7, 0x5c94, 0x0, 0x1);
        gbc.writeMem(0xcc47, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc47));
        EXPECT(0xec, gbc.readMem(0xcc48));
        // CB EC 0255
        gbc.setState(0x5ba2, 0x26b5, 0x2c20, 0x5065, 0x598c, 0x9da3, 0x0, 0x1);
        gbc.writeMem(0x5ba2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0256
        gbc.setState(0x1daf, 0x76f, 0xd750, 0xf292, 0xf841, 0x6aad, 0x1, 0x1);
        gbc.writeMem(0x1daf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x1db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0257
        gbc.setState(0x43b, 0xf5e0, 0xe70, 0x75be, 0x1533, 0xae3b, 0x1, 0x0);
        gbc.writeMem(0x43b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf5e0, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0258
        gbc.setState(0x5408, 0xb481, 0xd830, 0x3a3f, 0x775c, 0xd313, 0x0, 0x0);
        gbc.writeMem(0x5408, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb481, gbc.sp());
        EXPECT(0x540a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0259
        gbc.setState(0x700b, 0xcf72, 0x4390, 0x3d12, 0xf996, 0x93f6, 0x0, 0x1);
        gbc.writeMem(0x700b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0x700d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 025A
        gbc.setState(0x4e81, 0x47f1, 0xb710, 0xbf39, 0xf94a, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x4e81, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x47f1, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 025B
        gbc.setState(0xd2e, 0x76a7, 0xf010, 0x2185, 0x2076, 0x5f98, 0x1, 0x0);
        gbc.writeMem(0xd2e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x76a7, gbc.sp());
        EXPECT(0xd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 025C
        gbc.setState(0x4558, 0x7461, 0x94e0, 0xafa8, 0x11b2, 0xbd82, 0x0, 0x1);
        gbc.writeMem(0x4558, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7461, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 025D
        gbc.setState(0x29a8, 0x21d9, 0xfae0, 0x328c, 0xcaca, 0x3fd7, 0x0, 0x0);
        gbc.writeMem(0x29a8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x21d9, gbc.sp());
        EXPECT(0x29aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 025E
        gbc.setState(0x5916, 0xf74e, 0xea20, 0x69c3, 0x19d2, 0x2142, 0x0, 0x1);
        gbc.writeMem(0x5916, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 025F
        gbc.setState(0x4868, 0x5784, 0x7490, 0xacf4, 0x4eba, 0x33b5, 0x0, 0x1);
        gbc.writeMem(0x4868, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0x486a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0260
        gbc.setState(0x2e95, 0xf41a, 0x6e0, 0xc33, 0xe1f6, 0xb8e, 0x1, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0261
        gbc.setState(0x59c9, 0x48d8, 0x4e60, 0x994b, 0xd2f0, 0x47f, 0x0, 0x1);
        gbc.writeMem(0x59c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0x59cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0262
        gbc.setState(0xa344, 0x970a, 0x5140, 0x6b57, 0x829a, 0xcf8c, 0x1, 0x1);
        gbc.writeMem(0xa344, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xec, gbc.readMem(0xa345));
        // CB EC 0263
        gbc.setState(0x3823, 0x8988, 0x90a0, 0xd1c1, 0xed09, 0xff72, 0x0, 0x1);
        gbc.writeMem(0x3823, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0264
        gbc.setState(0x820b, 0x9e0a, 0x45f0, 0xfed5, 0x2f40, 0x8013, 0x1, 0x1);
        gbc.writeMem(0x820b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0x820d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820b));
        EXPECT(0xec, gbc.readMem(0x820c));
        // CB EC 0265
        gbc.setState(0xd875, 0xb090, 0xa340, 0xa1a7, 0x4e8c, 0x9595, 0x0, 0x0);
        gbc.writeMem(0xd875, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb090, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0xec, gbc.readMem(0xd876));
        // CB EC 0266
        gbc.setState(0x269c, 0x7ba9, 0xdb30, 0x62b3, 0xa50c, 0xec4f, 0x0, 0x1);
        gbc.writeMem(0x269c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7ba9, gbc.sp());
        EXPECT(0x269e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0267
        gbc.setState(0x672c, 0xb48f, 0x8470, 0x1a9e, 0x2988, 0xcbf7, 0x1, 0x0);
        gbc.writeMem(0x672c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb48f, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0268
        gbc.setState(0x482d, 0x796f, 0x7f10, 0x11f8, 0x7074, 0x9933, 0x0, 0x1);
        gbc.writeMem(0x482d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x796f, gbc.sp());
        EXPECT(0x482f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0269
        gbc.setState(0x3b, 0x2569, 0x7590, 0x86b3, 0x67c1, 0x5fbe, 0x0, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2569, gbc.sp());
        EXPECT(0x3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 026A
        gbc.setState(0x49af, 0x7eec, 0xfb00, 0xc7b8, 0x5ac6, 0x1be, 0x1, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7eec, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 026C
        gbc.setState(0xd76e, 0xac67, 0x6400, 0xdeb9, 0x1ce, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0xd76e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76e));
        EXPECT(0xec, gbc.readMem(0xd76f));
        // CB EC 026D
        gbc.setState(0xdb72, 0x7368, 0x3b90, 0xe926, 0xd1cd, 0x8277, 0x0, 0x1);
        gbc.writeMem(0xdb72, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7368, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb72));
        EXPECT(0xec, gbc.readMem(0xdb73));
        // CB EC 026E
        gbc.setState(0x243b, 0x258d, 0x5ee0, 0xb77d, 0x20fa, 0x3ff6, 0x0, 0x0);
        gbc.writeMem(0x243b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x258d, gbc.sp());
        EXPECT(0x243d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 026F
        gbc.setState(0x5eab, 0x4efa, 0x180, 0x334, 0x7048, 0x6cd3, 0x1, 0x0);
        gbc.writeMem(0x5eab, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4efa, gbc.sp());
        EXPECT(0x5ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0270
        gbc.setState(0xa210, 0xa5c8, 0x1110, 0x5d60, 0x8855, 0xbaf8, 0x0, 0x0);
        gbc.writeMem(0xa210, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa5c8, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa210));
        EXPECT(0xec, gbc.readMem(0xa211));
        // CB EC 0272
        gbc.setState(0xd62e, 0x2c74, 0x5ee0, 0x9fb3, 0xd9f2, 0xdaa, 0x1, 0x1);
        gbc.writeMem(0xd62e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2c74, gbc.sp());
        EXPECT(0xd630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62e));
        EXPECT(0xec, gbc.readMem(0xd62f));
        // CB EC 0273
        gbc.setState(0xe5d4, 0x1918, 0xfd30, 0xa1a1, 0x466b, 0x26e2, 0x0, 0x1);
        gbc.writeMem(0xe5d4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d4));
        EXPECT(0xec, gbc.readMem(0xe5d5));
        // CB EC 0274
        gbc.setState(0x2067, 0xb44c, 0x70d0, 0x19ae, 0xccc6, 0x96a3, 0x0, 0x0);
        gbc.writeMem(0x2067, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb44c, gbc.sp());
        EXPECT(0x2069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0275
        gbc.setState(0x997d, 0x2ef3, 0x75f0, 0xb80d, 0x3e56, 0xa983, 0x0, 0x1);
        gbc.writeMem(0x997d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x997f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997d));
        EXPECT(0xec, gbc.readMem(0x997e));
        // CB EC 0276
        gbc.setState(0x3b3a, 0x3fb, 0xc7c0, 0xbace, 0x7e43, 0xf11c, 0x1, 0x1);
        gbc.writeMem(0x3b3a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0x3b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0277
        gbc.setState(0xcef7, 0xfc88, 0x8fc0, 0xb72d, 0x4c0, 0xcf64, 0x1, 0x1);
        gbc.writeMem(0xcef7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef7));
        EXPECT(0xec, gbc.readMem(0xcef8));
        // CB EC 0279
        gbc.setState(0x24b9, 0x58de, 0x7890, 0x7a15, 0x5139, 0x89ef, 0x0, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 027A
        gbc.setState(0xb4c9, 0x1b8a, 0x54e0, 0x5f10, 0xba05, 0x2797, 0x1, 0x1);
        gbc.writeMem(0xb4c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1b8a, gbc.sp());
        EXPECT(0xb4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c9));
        EXPECT(0xec, gbc.readMem(0xb4ca));
        // CB EC 027B
        gbc.setState(0xa438, 0x15e2, 0x98c0, 0x63e6, 0x4e9d, 0xf35f, 0x0, 0x0);
        gbc.writeMem(0xa438, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x15e2, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa438));
        EXPECT(0xec, gbc.readMem(0xa439));
        // CB EC 027C
        gbc.setState(0xacf3, 0xcb61, 0xe210, 0x7acc, 0x2a4a, 0x6ded, 0x1, 0x1);
        gbc.writeMem(0xacf3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcb61, gbc.sp());
        EXPECT(0xacf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf3));
        EXPECT(0xec, gbc.readMem(0xacf4));
        // CB EC 027D
        gbc.setState(0x98af, 0x4134, 0x7240, 0x9af9, 0xb635, 0x484f, 0x1, 0x0);
        gbc.writeMem(0x98af, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0x98b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98af));
        EXPECT(0xec, gbc.readMem(0x98b0));
        // CB EC 027E
        gbc.setState(0xa3bc, 0x5d7c, 0xc940, 0x325a, 0xbf24, 0x4b66, 0x1, 0x0);
        gbc.writeMem(0xa3bc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5d7c, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bc));
        EXPECT(0xec, gbc.readMem(0xa3bd));
        // CB EC 027F
        gbc.setState(0x11f, 0xe0e3, 0xff70, 0x8f76, 0xf5f8, 0xd3, 0x0, 0x0);
        gbc.writeMem(0x11f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe0e3, gbc.sp());
        EXPECT(0x121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0280
        gbc.setState(0x642b, 0x8f2a, 0xf730, 0xbe6c, 0x8458, 0x6f1, 0x1, 0x1);
        gbc.writeMem(0x642b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0281
        gbc.setState(0x471b, 0x1781, 0x7150, 0xf398, 0x5a82, 0x37f7, 0x0, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1781, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0282
        gbc.setState(0xd6ae, 0xe961, 0xe270, 0x37c3, 0x3404, 0x4a47, 0x1, 0x0);
        gbc.writeMem(0xd6ae, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0xd6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ae));
        EXPECT(0xec, gbc.readMem(0xd6af));
        // CB EC 0283
        gbc.setState(0x7db5, 0x8516, 0xf0b0, 0x2948, 0x4857, 0xe14e, 0x0, 0x0);
        gbc.writeMem(0x7db5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0x7db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0284
        gbc.setState(0x187a, 0x3f98, 0x62b0, 0x69a7, 0x83e1, 0xd304, 0x1, 0x1);
        gbc.writeMem(0x187a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3f98, gbc.sp());
        EXPECT(0x187c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0285
        gbc.setState(0x8990, 0x5eb6, 0xfbe0, 0xfdc2, 0x4590, 0x3e34, 0x1, 0x0);
        gbc.writeMem(0x8990, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5eb6, gbc.sp());
        EXPECT(0x8992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8990));
        EXPECT(0xec, gbc.readMem(0x8991));
        // CB EC 0286
        gbc.setState(0xfb3, 0xf5d6, 0x1490, 0xacd9, 0x9f65, 0x719b, 0x1, 0x1);
        gbc.writeMem(0xfb3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf5d6, gbc.sp());
        EXPECT(0xfb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0287
        gbc.setState(0x2b22, 0x9c0f, 0x9da0, 0x89c0, 0x4eee, 0x20c3, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9c0f, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0288
        gbc.setState(0x5c35, 0x6c63, 0x3630, 0x7fe1, 0x5de6, 0x2c00, 0x1, 0x0);
        gbc.writeMem(0x5c35, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0x5c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0289
        gbc.setState(0xab01, 0x3106, 0x37f0, 0xa3d2, 0xb976, 0x848b, 0x0, 0x1);
        gbc.writeMem(0xab01, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3106, gbc.sp());
        EXPECT(0xab03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab01));
        EXPECT(0xec, gbc.readMem(0xab02));
        // CB EC 028A
        gbc.setState(0x9649, 0xac9, 0xb090, 0xd25f, 0x3b15, 0x42b0, 0x0, 0x1);
        gbc.writeMem(0x9649, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xac9, gbc.sp());
        EXPECT(0x964b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9649));
        EXPECT(0xec, gbc.readMem(0x964a));
        // CB EC 028B
        gbc.setState(0x4338, 0xb64, 0x90, 0x7552, 0xbc9, 0x176a, 0x1, 0x1);
        gbc.writeMem(0x4338, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb64, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 028C
        gbc.setState(0x85b, 0x17c6, 0x90a0, 0xe6ff, 0xc580, 0x6589, 0x0, 0x0);
        gbc.writeMem(0x85b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x17c6, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 028D
        gbc.setState(0x6986, 0x454d, 0x1bf0, 0x16b9, 0x8447, 0x9cde, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x454d, gbc.sp());
        EXPECT(0x6988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 028E
        gbc.setState(0x70a5, 0xeba2, 0x9b80, 0xec84, 0x3c6c, 0x2dd, 0x0, 0x0);
        gbc.writeMem(0x70a5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 028F
        gbc.setState(0x10b0, 0xe6b4, 0x1f60, 0x66af, 0xce73, 0x8142, 0x1, 0x0);
        gbc.writeMem(0x10b0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6b4, gbc.sp());
        EXPECT(0x10b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0290
        gbc.setState(0x3d55, 0x46f1, 0xe9b0, 0x5dab, 0x24bf, 0xb72f, 0x0, 0x0);
        gbc.writeMem(0x3d55, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0291
        gbc.setState(0xb477, 0x2dd3, 0x3090, 0xfa39, 0x57c0, 0xfe9f, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2dd3, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0xec, gbc.readMem(0xb478));
        // CB EC 0292
        gbc.setState(0x292, 0x9556, 0xb390, 0xfb13, 0xd0da, 0x889a, 0x0, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0x294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0293
        gbc.setState(0x44ae, 0x7a9d, 0x43c0, 0xddb6, 0x4de5, 0x5850, 0x0, 0x0);
        gbc.writeMem(0x44ae, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7a9d, gbc.sp());
        EXPECT(0x44b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0294
        gbc.setState(0xbb76, 0xca03, 0x7b90, 0xadee, 0x4b3f, 0x9e78, 0x0, 0x0);
        gbc.writeMem(0xbb76, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0xbb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb76));
        EXPECT(0xec, gbc.readMem(0xbb77));
        // CB EC 0295
        gbc.setState(0xb36b, 0x933a, 0xa130, 0xcc3f, 0xf3f6, 0xe5a1, 0x1, 0x1);
        gbc.writeMem(0xb36b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36b));
        EXPECT(0xec, gbc.readMem(0xb36c));
        // CB EC 0296
        gbc.setState(0xe6e4, 0xf2ab, 0x1040, 0x706f, 0xdbbb, 0x4bf5, 0x1, 0x1);
        gbc.writeMem(0xe6e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf2ab, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e4));
        EXPECT(0xec, gbc.readMem(0xe6e5));
        // CB EC 0298
        gbc.setState(0xb72c, 0xe6b4, 0x9fb0, 0x7129, 0x8ade, 0x584b, 0x0, 0x1);
        gbc.writeMem(0xb72c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe6b4, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72c));
        EXPECT(0xec, gbc.readMem(0xb72d));
        // CB EC 0299
        gbc.setState(0x486a, 0x6e42, 0x9630, 0xead1, 0xe64, 0x4e6a, 0x0, 0x1);
        gbc.writeMem(0x486a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6e42, gbc.sp());
        EXPECT(0x486c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 029A
        gbc.setState(0x135f, 0xe546, 0x2390, 0xc909, 0x1a73, 0xced4, 0x1, 0x0);
        gbc.writeMem(0x135f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0x1361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 029B
        gbc.setState(0xd9dc, 0x262, 0x5bf0, 0x98ea, 0xcb17, 0x4b01, 0x0, 0x1);
        gbc.writeMem(0xd9dc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x262, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dc));
        EXPECT(0xec, gbc.readMem(0xd9dd));
        // CB EC 029C
        gbc.setState(0xc2f0, 0xe1c0, 0xe210, 0x8afa, 0x6aa7, 0xe62d, 0x0, 0x1);
        gbc.writeMem(0xc2f0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f0));
        EXPECT(0xec, gbc.readMem(0xc2f1));
        // CB EC 029D
        gbc.setState(0x12ff, 0xe914, 0x7cc0, 0x949d, 0x98ca, 0xce11, 0x0, 0x1);
        gbc.writeMem(0x12ff, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0x1301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 029E
        gbc.setState(0x3973, 0xd16c, 0xcf90, 0x40cb, 0x6bb1, 0xfd0d, 0x1, 0x0);
        gbc.writeMem(0x3973, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x3975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 029F
        gbc.setState(0x5d29, 0x2107, 0x57c0, 0x1a0, 0x6865, 0x52e4, 0x0, 0x0);
        gbc.writeMem(0x5d29, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02A0
        gbc.setState(0xdc14, 0x380f, 0x2820, 0xb2b8, 0xb158, 0xe87a, 0x1, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x380f, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc14));
        EXPECT(0xec, gbc.readMem(0xdc15));
        // CB EC 02A1
        gbc.setState(0x6594, 0x2171, 0x9070, 0x2a28, 0x3a10, 0x3192, 0x1, 0x0);
        gbc.writeMem(0x6594, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2171, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02A2
        gbc.setState(0x8eb5, 0x804, 0x3a10, 0xb0fd, 0xfb1b, 0xdbd8, 0x1, 0x1);
        gbc.writeMem(0x8eb5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x804, gbc.sp());
        EXPECT(0x8eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb5));
        EXPECT(0xec, gbc.readMem(0x8eb6));
        // CB EC 02A3
        gbc.setState(0xcd8c, 0xd922, 0x780, 0xaacf, 0xf49b, 0x121, 0x1, 0x0);
        gbc.writeMem(0xcd8c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd922, gbc.sp());
        EXPECT(0xcd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8c));
        EXPECT(0xec, gbc.readMem(0xcd8d));
        // CB EC 02A4
        gbc.setState(0x334d, 0xd965, 0x9300, 0x61d, 0x7906, 0xd05, 0x0, 0x1);
        gbc.writeMem(0x334d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0x334f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02A5
        gbc.setState(0xeef3, 0xdf2, 0x5000, 0x9ed4, 0x6964, 0xbfdf, 0x1, 0x1);
        gbc.writeMem(0xeef3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0xeef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef3));
        EXPECT(0xec, gbc.readMem(0xeef4));
        // CB EC 02A6
        gbc.setState(0x7414, 0xc344, 0x2570, 0xe6d8, 0x5922, 0x547e, 0x1, 0x1);
        gbc.writeMem(0x7414, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc344, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02A7
        gbc.setState(0x34a1, 0xd02d, 0x9430, 0x52d6, 0xe053, 0x8864, 0x0, 0x1);
        gbc.writeMem(0x34a1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd02d, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02A8
        gbc.setState(0xbadc, 0xada7, 0x8df0, 0xba08, 0x4d17, 0xd9a2, 0x1, 0x0);
        gbc.writeMem(0xbadc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0xbade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadc));
        EXPECT(0xec, gbc.readMem(0xbadd));
        // CB EC 02A9
        gbc.setState(0xb399, 0xb40e, 0x1ff0, 0x88b0, 0xb864, 0xafef, 0x0, 0x0);
        gbc.writeMem(0xb399, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb40e, gbc.sp());
        EXPECT(0xb39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb399));
        EXPECT(0xec, gbc.readMem(0xb39a));
        // CB EC 02AA
        gbc.setState(0xe833, 0xdee1, 0xc400, 0x5cdb, 0xa913, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0xe833, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdee1, gbc.sp());
        EXPECT(0xe835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe833));
        EXPECT(0xec, gbc.readMem(0xe834));
        // CB EC 02AB
        gbc.setState(0x5887, 0xd3d4, 0xeb10, 0x2004, 0x7c83, 0xb6d0, 0x1, 0x0);
        gbc.writeMem(0x5887, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd3d4, gbc.sp());
        EXPECT(0x5889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02AC
        gbc.setState(0x91f1, 0x11ac, 0xc350, 0x8f8a, 0xe2eb, 0x91fa, 0x0, 0x1);
        gbc.writeMem(0x91f1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0x91f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f1));
        EXPECT(0xec, gbc.readMem(0x91f2));
        // CB EC 02AD
        gbc.setState(0xd384, 0x7553, 0x4a00, 0xe5e5, 0x305d, 0x263f, 0x1, 0x1);
        gbc.writeMem(0xd384, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7553, gbc.sp());
        EXPECT(0xd386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd384));
        EXPECT(0xec, gbc.readMem(0xd385));
        // CB EC 02AE
        gbc.setState(0xe16e, 0xa2a8, 0xcb40, 0x4e8d, 0xda3, 0x4c5, 0x1, 0x1);
        gbc.writeMem(0xe16e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16e));
        EXPECT(0xec, gbc.readMem(0xe16f));
        // CB EC 02AF
        gbc.setState(0xa29f, 0x9929, 0x4690, 0x6217, 0x4301, 0x9a2d, 0x1, 0x1);
        gbc.writeMem(0xa29f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29f));
        EXPECT(0xec, gbc.readMem(0xa2a0));
        // CB EC 02B0
        gbc.setState(0x6a26, 0xa327, 0x1110, 0x310, 0x9d5d, 0x13c3, 0x1, 0x1);
        gbc.writeMem(0x6a26, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa327, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02B1
        gbc.setState(0x418d, 0x6287, 0x2360, 0xea0b, 0xb73d, 0xb712, 0x1, 0x1);
        gbc.writeMem(0x418d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6287, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02B2
        gbc.setState(0xefd3, 0x3f74, 0xb210, 0x2248, 0x93ac, 0xf511, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3f74, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd3));
        EXPECT(0xec, gbc.readMem(0xefd4));
        // CB EC 02B3
        gbc.setState(0x1293, 0xc3a0, 0xd7f0, 0x5db6, 0x7132, 0xb1b4, 0x1, 0x1);
        gbc.writeMem(0x1293, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc3a0, gbc.sp());
        EXPECT(0x1295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02B4
        gbc.setState(0x8281, 0x3e8e, 0x99d0, 0x447c, 0xaaf4, 0x8020, 0x1, 0x1);
        gbc.writeMem(0x8281, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0xec, gbc.readMem(0x8282));
        // CB EC 02B5
        gbc.setState(0x6bde, 0xfc63, 0xd00, 0xc146, 0x6575, 0x875, 0x0, 0x1);
        gbc.writeMem(0x6bde, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc63, gbc.sp());
        EXPECT(0x6be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02B6
        gbc.setState(0xc89a, 0x1b7e, 0x1570, 0x874d, 0x7af7, 0x9dc1, 0x0, 0x1);
        gbc.writeMem(0xc89a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1b7e, gbc.sp());
        EXPECT(0xc89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89a));
        EXPECT(0xec, gbc.readMem(0xc89b));
        // CB EC 02B7
        gbc.setState(0xb06, 0x5765, 0x6750, 0xc88d, 0xd39a, 0x22be, 0x0, 0x1);
        gbc.writeMem(0xb06, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5765, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02B8
        gbc.setState(0x7b08, 0xd1a6, 0x3f20, 0x79b1, 0xb15a, 0xc7b8, 0x0, 0x1);
        gbc.writeMem(0x7b08, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd1a6, gbc.sp());
        EXPECT(0x7b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02B9
        gbc.setState(0x334f, 0x7a1b, 0xef60, 0xe1c, 0x8b1b, 0x243b, 0x0, 0x1);
        gbc.writeMem(0x334f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7a1b, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02BA
        gbc.setState(0x2953, 0x371e, 0xd580, 0xdda0, 0xb956, 0x2c1d, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x2955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02BB
        gbc.setState(0x1122, 0x4e22, 0x64c0, 0x366b, 0x6038, 0xdc63, 0x1, 0x1);
        gbc.writeMem(0x1122, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4e22, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02BC
        gbc.setState(0x205c, 0x79e4, 0xc5f0, 0x7725, 0x8cca, 0xf97, 0x1, 0x1);
        gbc.writeMem(0x205c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x79e4, gbc.sp());
        EXPECT(0x205e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02BD
        gbc.setState(0xd260, 0xf9c9, 0x4120, 0x8c4b, 0xafe2, 0xb157, 0x1, 0x0);
        gbc.writeMem(0xd260, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf9c9, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd260));
        EXPECT(0xec, gbc.readMem(0xd261));
        // CB EC 02BE
        gbc.setState(0xcc4f, 0xfe3a, 0xb7f0, 0x1446, 0x4c0d, 0x575, 0x1, 0x0);
        gbc.writeMem(0xcc4f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe3a, gbc.sp());
        EXPECT(0xcc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4f));
        EXPECT(0xec, gbc.readMem(0xcc50));
        // CB EC 02BF
        gbc.setState(0xda8c, 0x514b, 0x8730, 0xfc37, 0x5af4, 0xed9f, 0x0, 0x0);
        gbc.writeMem(0xda8c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8c));
        EXPECT(0xec, gbc.readMem(0xda8d));
        // CB EC 02C0
        gbc.setState(0xbc5e, 0x1320, 0x4990, 0x9991, 0x6c59, 0x6968, 0x0, 0x0);
        gbc.writeMem(0xbc5e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1320, gbc.sp());
        EXPECT(0xbc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5e));
        EXPECT(0xec, gbc.readMem(0xbc5f));
        // CB EC 02C1
        gbc.setState(0xce6a, 0xc61e, 0x93a0, 0x8e6e, 0x202a, 0x33be, 0x0, 0x0);
        gbc.writeMem(0xce6a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc61e, gbc.sp());
        EXPECT(0xce6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6a));
        EXPECT(0xec, gbc.readMem(0xce6b));
        // CB EC 02C3
        gbc.setState(0x39d6, 0xed14, 0x4960, 0x32b3, 0xa507, 0x2389, 0x1, 0x0);
        gbc.writeMem(0x39d6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0x39d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02C4
        gbc.setState(0x4c46, 0x6bd8, 0x7d30, 0xaafa, 0x5179, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0x4c46, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6bd8, gbc.sp());
        EXPECT(0x4c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02C7
        gbc.setState(0x6a92, 0x898f, 0x73e0, 0x516f, 0xb7dc, 0x6629, 0x1, 0x0);
        gbc.writeMem(0x6a92, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x898f, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02C8
        gbc.setState(0x45ba, 0x4fd7, 0xbe90, 0x2bac, 0xac9f, 0x28b2, 0x0, 0x1);
        gbc.writeMem(0x45ba, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4fd7, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02C9
        gbc.setState(0x9e57, 0x6d03, 0x3fa0, 0x7718, 0x605f, 0xf9cd, 0x1, 0x0);
        gbc.writeMem(0x9e57, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0x9e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e57));
        EXPECT(0xec, gbc.readMem(0x9e58));
        // CB EC 02CA
        gbc.setState(0x3f64, 0xcae6, 0x78a0, 0x90ea, 0xe210, 0x5137, 0x0, 0x0);
        gbc.writeMem(0x3f64, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcae6, gbc.sp());
        EXPECT(0x3f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02CB
        gbc.setState(0x641e, 0xb931, 0x1320, 0x2242, 0x11f5, 0x5025, 0x1, 0x0);
        gbc.writeMem(0x641e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0x6420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02CC
        gbc.setState(0x1b82, 0x28cc, 0xa1d0, 0x6d72, 0x9e15, 0xb39, 0x1, 0x1);
        gbc.writeMem(0x1b82, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x28cc, gbc.sp());
        EXPECT(0x1b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02CD
        gbc.setState(0xd905, 0x743f, 0xf160, 0xe99c, 0xd9f3, 0x361f, 0x1, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd905));
        EXPECT(0xec, gbc.readMem(0xd906));
        // CB EC 02CE
        gbc.setState(0x72fc, 0x6, 0xfdf0, 0xc4aa, 0x368c, 0xd8ee, 0x1, 0x0);
        gbc.writeMem(0x72fc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6, gbc.sp());
        EXPECT(0x72fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02CF
        gbc.setState(0xeb0d, 0xa55d, 0x6a90, 0xce4f, 0xc728, 0xd820, 0x1, 0x0);
        gbc.writeMem(0xeb0d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0xeb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0d));
        EXPECT(0xec, gbc.readMem(0xeb0e));
        // CB EC 02D0
        gbc.setState(0x2aa7, 0xaeb3, 0x2ea0, 0x5dc, 0xb9ad, 0xe693, 0x0, 0x1);
        gbc.writeMem(0x2aa7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaeb3, gbc.sp());
        EXPECT(0x2aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02D1
        gbc.setState(0x48dc, 0x563b, 0x7f10, 0x8364, 0xccf7, 0xde84, 0x1, 0x1);
        gbc.writeMem(0x48dc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x563b, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02D2
        gbc.setState(0xaa9e, 0x4f4c, 0x1a00, 0xff86, 0x8a4, 0x505f, 0x1, 0x0);
        gbc.writeMem(0xaa9e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0xaaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9e));
        EXPECT(0xec, gbc.readMem(0xaa9f));
        // CB EC 02D3
        gbc.setState(0x4f6f, 0x3466, 0x140, 0xa18c, 0x4c, 0x47a1, 0x0, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3466, gbc.sp());
        EXPECT(0x4f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02D4
        gbc.setState(0x2ddc, 0xb06, 0x3f70, 0x1ae0, 0x55ba, 0x13f3, 0x0, 0x0);
        gbc.writeMem(0x2ddc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0x2dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02D5
        gbc.setState(0x6d12, 0x6e8d, 0x8470, 0x7719, 0xa0e9, 0x96a4, 0x1, 0x1);
        gbc.writeMem(0x6d12, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0x6d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02D6
        gbc.setState(0xb6bb, 0x4900, 0x4d30, 0x855c, 0x8ee2, 0x5036, 0x1, 0x0);
        gbc.writeMem(0xb6bb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0xb6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bb));
        EXPECT(0xec, gbc.readMem(0xb6bc));
        // CB EC 02D7
        gbc.setState(0x7fdf, 0x6a4f, 0x4260, 0x6b7e, 0x6c2e, 0x634a, 0x1, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6a4f, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02D8
        gbc.setState(0x40a, 0x51ba, 0x3f90, 0xd65c, 0x8445, 0x6680, 0x0, 0x1);
        gbc.writeMem(0x40a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x51ba, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02D9
        gbc.setState(0x9d23, 0xd260, 0xd6a0, 0xfd2f, 0xa79, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0x9d23, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd260, gbc.sp());
        EXPECT(0x9d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d23));
        EXPECT(0xec, gbc.readMem(0x9d24));
        // CB EC 02DA
        gbc.setState(0x2c8f, 0xba9b, 0x870, 0xa689, 0x778c, 0xb6b6, 0x1, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba9b, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02DB
        gbc.setState(0x55fe, 0xa421, 0x7130, 0xe202, 0xd98f, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0x55fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa421, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02DC
        gbc.setState(0x7ec0, 0x207e, 0x7520, 0x6f57, 0x8142, 0x67ea, 0x1, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02DD
        gbc.setState(0x2ea3, 0xa947, 0x7c10, 0xb0f8, 0x6d3e, 0x27db, 0x1, 0x0);
        gbc.writeMem(0x2ea3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa947, gbc.sp());
        EXPECT(0x2ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02DE
        gbc.setState(0x6e2, 0x2266, 0x3100, 0x8426, 0x66ac, 0x3303, 0x0, 0x1);
        gbc.writeMem(0x6e2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0x6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02E0
        gbc.setState(0x4578, 0x6631, 0xcba0, 0xf74, 0x1cb1, 0x8384, 0x1, 0x0);
        gbc.writeMem(0x4578, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02E1
        gbc.setState(0xdcd7, 0x7493, 0x4ef0, 0xf1b0, 0xb49d, 0x78ef, 0x0, 0x1);
        gbc.writeMem(0xdcd7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7493, gbc.sp());
        EXPECT(0xdcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd7));
        EXPECT(0xec, gbc.readMem(0xdcd8));
        // CB EC 02E2
        gbc.setState(0xc34b, 0x8a26, 0x9bc0, 0x89e9, 0x99de, 0xc6be, 0x0, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0xec, gbc.readMem(0xc34c));
        // CB EC 02E3
        gbc.setState(0x8e5e, 0xa9f0, 0x7040, 0xed33, 0x2ac4, 0x1781, 0x0, 0x0);
        gbc.writeMem(0x8e5e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa9f0, gbc.sp());
        EXPECT(0x8e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5e));
        EXPECT(0xec, gbc.readMem(0x8e5f));
        // CB EC 02E4
        gbc.setState(0x7ad0, 0x9e82, 0xa3f0, 0x72ee, 0x81fa, 0x17e, 0x0, 0x0);
        gbc.writeMem(0x7ad0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02E5
        gbc.setState(0x24fe, 0xef0c, 0xa0c0, 0x1e22, 0xea8c, 0x7856, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xef0c, gbc.sp());
        EXPECT(0x2500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02E6
        gbc.setState(0xd45f, 0x7a3a, 0x3f10, 0xdeef, 0x3815, 0xa870, 0x1, 0x0);
        gbc.writeMem(0xd45f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a3a, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45f));
        EXPECT(0xec, gbc.readMem(0xd460));
        // CB EC 02E7
        gbc.setState(0x2d5f, 0x672a, 0xbf50, 0x328b, 0xb475, 0x8ef6, 0x0, 0x1);
        gbc.writeMem(0x2d5f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x672a, gbc.sp());
        EXPECT(0x2d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 02E8
        gbc.setState(0x86f2, 0x24c7, 0x8750, 0x68a8, 0x8d11, 0x1f87, 0x1, 0x1);
        gbc.writeMem(0x86f2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0x86f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f2));
        EXPECT(0xec, gbc.readMem(0x86f3));
        // CB EC 02E9
        gbc.setState(0x8824, 0xc860, 0xbb40, 0x7525, 0x437, 0xac22, 0x1, 0x0);
        gbc.writeMem(0x8824, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0xec, gbc.readMem(0x8825));
        // CB EC 02EA
        gbc.setState(0x5ddb, 0x1baa, 0x4fc0, 0x9a14, 0x6d37, 0x930c, 0x0, 0x0);
        gbc.writeMem(0x5ddb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1baa, gbc.sp());
        EXPECT(0x5ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02EC
        gbc.setState(0xe6a9, 0xa86a, 0xc080, 0x19bb, 0xde41, 0xa534, 0x1, 0x0);
        gbc.writeMem(0xe6a9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa86a, gbc.sp());
        EXPECT(0xe6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a9));
        EXPECT(0xec, gbc.readMem(0xe6aa));
        // CB EC 02ED
        gbc.setState(0xbde5, 0x796a, 0xc790, 0x1c48, 0xa3a7, 0xb7a8, 0x0, 0x0);
        gbc.writeMem(0xbde5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xbde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde5));
        EXPECT(0xec, gbc.readMem(0xbde6));
        // CB EC 02EE
        gbc.setState(0x94d4, 0x87d6, 0x5c00, 0x72a3, 0x42f3, 0xdc3d, 0x1, 0x1);
        gbc.writeMem(0x94d4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0xec, gbc.readMem(0x94d5));
        // CB EC 02F0
        gbc.setState(0x5764, 0x4b07, 0xad80, 0xa5b5, 0xbf1e, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0x5764, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02F1
        gbc.setState(0xc269, 0xc0c3, 0xf490, 0x41e, 0xe854, 0x1b9, 0x0, 0x1);
        gbc.writeMem(0xc269, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc0c3, gbc.sp());
        EXPECT(0xc26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc269));
        EXPECT(0xec, gbc.readMem(0xc26a));
        // CB EC 02F2
        gbc.setState(0xabfa, 0xf7e1, 0x5030, 0x35cd, 0x4d9, 0xe3ca, 0x0, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfa));
        EXPECT(0xec, gbc.readMem(0xabfb));
        // CB EC 02F3
        gbc.setState(0xd1ae, 0x60f0, 0x50a0, 0x19f, 0x3d01, 0x87a0, 0x1, 0x0);
        gbc.writeMem(0xd1ae, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x60f0, gbc.sp());
        EXPECT(0xd1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ae));
        EXPECT(0xec, gbc.readMem(0xd1af));
        // CB EC 02F4
        gbc.setState(0xafb3, 0x85f4, 0x8e10, 0x62f4, 0x619f, 0xc3a6, 0x0, 0x0);
        gbc.writeMem(0xafb3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x85f4, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0xec, gbc.readMem(0xafb4));
        // CB EC 02F5
        gbc.setState(0x9fce, 0xa25, 0x7380, 0x59e4, 0xc4f1, 0xcb13, 0x1, 0x1);
        gbc.writeMem(0x9fce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fce));
        EXPECT(0xec, gbc.readMem(0x9fcf));
        // CB EC 02F7
        gbc.setState(0x43f6, 0x6724, 0x7620, 0x4815, 0xd798, 0x210e, 0x0, 0x1);
        gbc.writeMem(0x43f6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6724, gbc.sp());
        EXPECT(0x43f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02F8
        gbc.setState(0x2a68, 0x2788, 0x4f80, 0xf051, 0x72b7, 0x3811, 0x1, 0x0);
        gbc.writeMem(0x2a68, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2788, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02F9
        gbc.setState(0xd139, 0x87c2, 0x2940, 0xa35b, 0x800e, 0x3c0b, 0x1, 0x1);
        gbc.writeMem(0xd139, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x87c2, gbc.sp());
        EXPECT(0xd13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd139));
        EXPECT(0xec, gbc.readMem(0xd13a));
        // CB EC 02FA
        gbc.setState(0x5ec7, 0xa53e, 0x7dc0, 0xcb1d, 0x6db0, 0xb039, 0x1, 0x0);
        gbc.writeMem(0x5ec7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa53e, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 02FB
        gbc.setState(0xc3f5, 0x3fc3, 0x9920, 0x7da, 0xfc68, 0x1b56, 0x0, 0x0);
        gbc.writeMem(0xc3f5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0xc3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f5));
        EXPECT(0xec, gbc.readMem(0xc3f6));
        // CB EC 02FC
        gbc.setState(0xcd0e, 0x38a2, 0xefa0, 0x4571, 0x150c, 0x6c3f, 0x1, 0x1);
        gbc.writeMem(0xcd0e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x38a2, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0e));
        EXPECT(0xec, gbc.readMem(0xcd0f));
        // CB EC 02FD
        gbc.setState(0xd506, 0x134f, 0x19d0, 0xbf2d, 0x8355, 0x5d4e, 0x0, 0x0);
        gbc.writeMem(0xd506, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x134f, gbc.sp());
        EXPECT(0xd508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd506));
        EXPECT(0xec, gbc.readMem(0xd507));
        // CB EC 02FF
        gbc.setState(0x628f, 0x9328, 0x51f0, 0xc6b7, 0xad61, 0x4ddd, 0x0, 0x0);
        gbc.writeMem(0x628f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9328, gbc.sp());
        EXPECT(0x6291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0300
        gbc.setState(0x1c69, 0x9e9c, 0xfef0, 0xd426, 0x9074, 0xebf4, 0x0, 0x1);
        gbc.writeMem(0x1c69, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9e9c, gbc.sp());
        EXPECT(0x1c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0301
        gbc.setState(0x9128, 0x42f4, 0x9e70, 0xedde, 0xf0c3, 0x388a, 0x1, 0x1);
        gbc.writeMem(0x9128, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x42f4, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9128));
        EXPECT(0xec, gbc.readMem(0x9129));
        // CB EC 0302
        gbc.setState(0xdbf0, 0x3dd3, 0xc2e0, 0x7a3c, 0xc467, 0xcd64, 0x0, 0x0);
        gbc.writeMem(0xdbf0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3dd3, gbc.sp());
        EXPECT(0xdbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf0));
        EXPECT(0xec, gbc.readMem(0xdbf1));
        // CB EC 0303
        gbc.setState(0x57b2, 0x513d, 0x8c50, 0x650, 0x3255, 0xf2e4, 0x0, 0x1);
        gbc.writeMem(0x57b2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x513d, gbc.sp());
        EXPECT(0x57b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0305
        gbc.setState(0x8dec, 0x68f1, 0x4a50, 0x26ab, 0xcf44, 0xe41c, 0x1, 0x0);
        gbc.writeMem(0x8dec, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dec));
        EXPECT(0xec, gbc.readMem(0x8ded));
        // CB EC 0306
        gbc.setState(0x8087, 0xbf7e, 0x1ae0, 0xfb1a, 0x1743, 0x785f, 0x1, 0x0);
        gbc.writeMem(0x8087, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbf7e, gbc.sp());
        EXPECT(0x8089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8087));
        EXPECT(0xec, gbc.readMem(0x8088));
        // CB EC 0307
        gbc.setState(0x8f64, 0x579e, 0xa760, 0xe4d0, 0x3b53, 0xef6b, 0x0, 0x0);
        gbc.writeMem(0x8f64, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x8f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f64));
        EXPECT(0xec, gbc.readMem(0x8f65));
        // CB EC 0308
        gbc.setState(0x215e, 0xd1dc, 0x4d50, 0x323, 0x6118, 0x9d61, 0x1, 0x1);
        gbc.writeMem(0x215e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd1dc, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0309
        gbc.setState(0x1ede, 0x1ce2, 0xe170, 0x85e8, 0x2545, 0x9bdc, 0x1, 0x1);
        gbc.writeMem(0x1ede, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1ce2, gbc.sp());
        EXPECT(0x1ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 030A
        gbc.setState(0x33ee, 0x3850, 0x43b0, 0x8165, 0x57fa, 0x55b, 0x1, 0x1);
        gbc.writeMem(0x33ee, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0x33f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 030B
        gbc.setState(0xbd70, 0x5445, 0x3320, 0xb372, 0x5b2b, 0x19b0, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0xbd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd70));
        EXPECT(0xec, gbc.readMem(0xbd71));
        // CB EC 030C
        gbc.setState(0x9d3, 0xf08f, 0x8fc0, 0xec76, 0xc95a, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0x9d3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf08f, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 030D
        gbc.setState(0x35a3, 0xf02d, 0x9d50, 0xa04d, 0xef60, 0xd066, 0x1, 0x0);
        gbc.writeMem(0x35a3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 030E
        gbc.setState(0x7997, 0xbe9c, 0x93c0, 0xc6d7, 0x9502, 0x3b56, 0x0, 0x1);
        gbc.writeMem(0x7997, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbe9c, gbc.sp());
        EXPECT(0x7999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 030F
        gbc.setState(0x5496, 0xa60a, 0xcca0, 0x670b, 0x94f1, 0xb122, 0x1, 0x1);
        gbc.writeMem(0x5496, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0310
        gbc.setState(0xacf6, 0x99a1, 0xd8e0, 0x8d07, 0x206c, 0x9913, 0x0, 0x0);
        gbc.writeMem(0xacf6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x99a1, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0xec, gbc.readMem(0xacf7));
        // CB EC 0311
        gbc.setState(0x639d, 0xe22d, 0xfee0, 0x2af1, 0x3a61, 0xa8ce, 0x1, 0x0);
        gbc.writeMem(0x639d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0312
        gbc.setState(0xef6f, 0x38a6, 0x5630, 0xa7e5, 0x9692, 0xf2a6, 0x0, 0x1);
        gbc.writeMem(0xef6f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x38a6, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6f));
        EXPECT(0xec, gbc.readMem(0xef70));
        // CB EC 0313
        gbc.setState(0xbea, 0xc19e, 0xac20, 0xb54c, 0x468f, 0x45b, 0x1, 0x0);
        gbc.writeMem(0xbea, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc19e, gbc.sp());
        EXPECT(0xbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0314
        gbc.setState(0xac2d, 0xfbb1, 0x1120, 0xd9bc, 0x5dde, 0x573, 0x0, 0x1);
        gbc.writeMem(0xac2d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfbb1, gbc.sp());
        EXPECT(0xac2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2d));
        EXPECT(0xec, gbc.readMem(0xac2e));
        // CB EC 0318
        gbc.setState(0xb091, 0xf6d7, 0x6210, 0x71d8, 0x8cb3, 0xa5f5, 0x0, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0xec, gbc.readMem(0xb092));
        // CB EC 0319
        gbc.setState(0x4ac3, 0x26e6, 0x83b0, 0xecd, 0xe07e, 0x1aeb, 0x0, 0x0);
        gbc.writeMem(0x4ac3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 031B
        gbc.setState(0x5e1b, 0xb2b1, 0xf390, 0xe156, 0x2a90, 0xaac2, 0x1, 0x1);
        gbc.writeMem(0x5e1b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 031C
        gbc.setState(0xd04d, 0x353c, 0x88b0, 0xbd57, 0xe7a0, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0xd04d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x353c, gbc.sp());
        EXPECT(0xd04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04d));
        EXPECT(0xec, gbc.readMem(0xd04e));
        // CB EC 031D
        gbc.setState(0x50bd, 0xb480, 0x88a0, 0x23a5, 0x7696, 0x9d10, 0x0, 0x0);
        gbc.writeMem(0x50bd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0x50bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 031E
        gbc.setState(0x38ef, 0x3f5a, 0x8e40, 0x4b3c, 0xc392, 0xee07, 0x0, 0x1);
        gbc.writeMem(0x38ef, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3f5a, gbc.sp());
        EXPECT(0x38f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 031F
        gbc.setState(0x7509, 0xfe05, 0x1090, 0xb9d8, 0xa88, 0x5321, 0x1, 0x1);
        gbc.writeMem(0x7509, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0320
        gbc.setState(0x56fb, 0xfb21, 0x8870, 0x32db, 0x7770, 0x822d, 0x1, 0x0);
        gbc.writeMem(0x56fb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfb21, gbc.sp());
        EXPECT(0x56fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0321
        gbc.setState(0x66e3, 0xbe34, 0xac50, 0x69b5, 0x2606, 0xd857, 0x1, 0x0);
        gbc.writeMem(0x66e3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbe34, gbc.sp());
        EXPECT(0x66e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0322
        gbc.setState(0x8ac8, 0x3133, 0x57e0, 0x1ae7, 0xc20, 0x1c17, 0x0, 0x1);
        gbc.writeMem(0x8ac8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0xec, gbc.readMem(0x8ac9));
        // CB EC 0323
        gbc.setState(0xec7e, 0xcbd6, 0x1220, 0x50a7, 0x6a4b, 0x92b9, 0x1, 0x0);
        gbc.writeMem(0xec7e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0xec80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7e));
        EXPECT(0xec, gbc.readMem(0xec7f));
        // CB EC 0324
        gbc.setState(0x4053, 0xb6f2, 0x7910, 0x57b0, 0x8d2f, 0x8628, 0x1, 0x0);
        gbc.writeMem(0x4053, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0x4055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0325
        gbc.setState(0x5079, 0xd05c, 0xfa60, 0xfc4b, 0xab2, 0x5360, 0x1, 0x1);
        gbc.writeMem(0x5079, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0x507b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0326
        gbc.setState(0x23c4, 0xecb9, 0x4320, 0xc3e8, 0x5cca, 0x2f47, 0x0, 0x1);
        gbc.writeMem(0x23c4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0327
        gbc.setState(0x1ecc, 0x66d4, 0x15d0, 0x6ea6, 0x92a0, 0x1871, 0x0, 0x0);
        gbc.writeMem(0x1ecc, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x66d4, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0328
        gbc.setState(0xde1d, 0xe480, 0x2460, 0x8ce3, 0xe865, 0xbf1, 0x1, 0x0);
        gbc.writeMem(0xde1d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe480, gbc.sp());
        EXPECT(0xde1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1d));
        EXPECT(0xec, gbc.readMem(0xde1e));
        // CB EC 0329
        gbc.setState(0xca00, 0x20fb, 0x1600, 0x3366, 0xa023, 0xb705, 0x0, 0x0);
        gbc.writeMem(0xca00, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x20fb, gbc.sp());
        EXPECT(0xca02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca00));
        EXPECT(0xec, gbc.readMem(0xca01));
        // CB EC 032A
        gbc.setState(0x71d6, 0x5b15, 0xbc90, 0xc7d3, 0x93ef, 0x93f4, 0x0, 0x0);
        gbc.writeMem(0x71d6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 032B
        gbc.setState(0x8fb4, 0xf5d3, 0x7480, 0x2b6e, 0xf684, 0x5f76, 0x1, 0x0);
        gbc.writeMem(0x8fb4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf5d3, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0xec, gbc.readMem(0x8fb5));
        // CB EC 032C
        gbc.setState(0x55d1, 0x4240, 0x6360, 0x95f3, 0x7f09, 0xc1d7, 0x1, 0x0);
        gbc.writeMem(0x55d1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4240, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 032D
        gbc.setState(0x80c9, 0x695b, 0xd50, 0xdb64, 0x9b35, 0xf19, 0x1, 0x0);
        gbc.writeMem(0x80c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x695b, gbc.sp());
        EXPECT(0x80cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c9));
        EXPECT(0xec, gbc.readMem(0x80ca));
        // CB EC 032E
        gbc.setState(0x6996, 0x4874, 0x5c20, 0x2057, 0xb8d4, 0xa3ea, 0x1, 0x0);
        gbc.writeMem(0x6996, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0x6998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 032F
        gbc.setState(0x6606, 0x28c1, 0xaca0, 0x2737, 0x6e75, 0x60d, 0x0, 0x0);
        gbc.writeMem(0x6606, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x28c1, gbc.sp());
        EXPECT(0x6608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0330
        gbc.setState(0xef13, 0x792a, 0xb8e0, 0x8b2b, 0xf0f7, 0xf84b, 0x1, 0x1);
        gbc.writeMem(0xef13, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x792a, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef13));
        EXPECT(0xec, gbc.readMem(0xef14));
        // CB EC 0331
        gbc.setState(0xc1cf, 0x17c8, 0x4c10, 0x8192, 0x9e5e, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0xc1cf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x17c8, gbc.sp());
        EXPECT(0xc1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cf));
        EXPECT(0xec, gbc.readMem(0xc1d0));
        // CB EC 0332
        gbc.setState(0xebd6, 0xaf0b, 0x6540, 0x6d2a, 0xa127, 0xd0b6, 0x1, 0x0);
        gbc.writeMem(0xebd6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf0b, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd6));
        EXPECT(0xec, gbc.readMem(0xebd7));
        // CB EC 0333
        gbc.setState(0xe844, 0x32e5, 0x3bf0, 0x2205, 0xa50b, 0xb992, 0x0, 0x0);
        gbc.writeMem(0xe844, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0xe846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe844));
        EXPECT(0xec, gbc.readMem(0xe845));
        // CB EC 0334
        gbc.setState(0x1532, 0xc27e, 0x4e00, 0xacd, 0xdf64, 0x15bc, 0x0, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc27e, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0335
        gbc.setState(0xa871, 0xd303, 0xd2e0, 0x275c, 0x6982, 0xdd1, 0x1, 0x1);
        gbc.writeMem(0xa871, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd303, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0xec, gbc.readMem(0xa872));
        // CB EC 0336
        gbc.setState(0x266e, 0x4e93, 0x8bb0, 0xc496, 0xa0aa, 0x7c85, 0x1, 0x1);
        gbc.writeMem(0x266e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4e93, gbc.sp());
        EXPECT(0x2670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0337
        gbc.setState(0x2eab, 0x8a6b, 0xf030, 0x578d, 0x4284, 0x3075, 0x1, 0x0);
        gbc.writeMem(0x2eab, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8a6b, gbc.sp());
        EXPECT(0x2ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0338
        gbc.setState(0x64e3, 0x7cac, 0xf030, 0xebf3, 0xb89f, 0xe722, 0x1, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0339
        gbc.setState(0x8b96, 0x9459, 0xd6f0, 0x9d10, 0xabd9, 0xcc2d, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b96));
        EXPECT(0xec, gbc.readMem(0x8b97));
        // CB EC 033A
        gbc.setState(0xcf31, 0xde33, 0xdb60, 0x9b6e, 0xc15, 0xac7a, 0x1, 0x0);
        gbc.writeMem(0xcf31, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xde33, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf31));
        EXPECT(0xec, gbc.readMem(0xcf32));
        // CB EC 033B
        gbc.setState(0x8668, 0x58e3, 0xb80, 0xb415, 0xfaa9, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x8668, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0x866a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8668));
        EXPECT(0xec, gbc.readMem(0x8669));
        // CB EC 033C
        gbc.setState(0x924f, 0x3575, 0xd920, 0x7c50, 0x3e4b, 0x3756, 0x1, 0x1);
        gbc.writeMem(0x924f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x9251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924f));
        EXPECT(0xec, gbc.readMem(0x9250));
        // CB EC 033D
        gbc.setState(0x4024, 0x55b7, 0x9600, 0xd9fa, 0x45f0, 0xab47, 0x1, 0x1);
        gbc.writeMem(0x4024, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0x4026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 033F
        gbc.setState(0xb999, 0xa5e1, 0x6800, 0xaf54, 0x1eec, 0x690a, 0x1, 0x0);
        gbc.writeMem(0xb999, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa5e1, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb999));
        EXPECT(0xec, gbc.readMem(0xb99a));
        // CB EC 0340
        gbc.setState(0x4b1c, 0x1d80, 0x8b70, 0xdaae, 0x682a, 0x8ebc, 0x0, 0x1);
        gbc.writeMem(0x4b1c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1d80, gbc.sp());
        EXPECT(0x4b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0341
        gbc.setState(0x4100, 0xb404, 0x1750, 0x32e5, 0x8d21, 0x9a03, 0x0, 0x1);
        gbc.writeMem(0x4100, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb404, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0342
        gbc.setState(0x430f, 0xb3a7, 0x2500, 0xb046, 0x16a0, 0xcd8c, 0x0, 0x0);
        gbc.writeMem(0x430f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb3a7, gbc.sp());
        EXPECT(0x4311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0343
        gbc.setState(0x2592, 0xa455, 0x9e0, 0x858c, 0x32c8, 0xf789, 0x0, 0x1);
        gbc.writeMem(0x2592, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa455, gbc.sp());
        EXPECT(0x2594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0344
        gbc.setState(0x8c8d, 0xf629, 0xbd60, 0x3c1c, 0x9a86, 0x4cea, 0x1, 0x0);
        gbc.writeMem(0x8c8d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf629, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8d));
        EXPECT(0xec, gbc.readMem(0x8c8e));
        // CB EC 0345
        gbc.setState(0x1c3a, 0x8e82, 0xc400, 0x928b, 0xefbd, 0x9d16, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0346
        gbc.setState(0x74c0, 0x3328, 0xb240, 0xe1d8, 0x117f, 0xa0be, 0x1, 0x0);
        gbc.writeMem(0x74c0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3328, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0347
        gbc.setState(0x64ff, 0xae86, 0xf190, 0x80ab, 0x5439, 0xfc14, 0x1, 0x0);
        gbc.writeMem(0x64ff, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0348
        gbc.setState(0xc705, 0x55ec, 0x5da0, 0x379e, 0x5f7a, 0x2b29, 0x1, 0x1);
        gbc.writeMem(0xc705, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0xc707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc705));
        EXPECT(0xec, gbc.readMem(0xc706));
        // CB EC 0349
        gbc.setState(0x39a1, 0x45e0, 0xb130, 0xa095, 0x136c, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 034A
        gbc.setState(0xc017, 0xa526, 0xee50, 0x758b, 0x7ad4, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0xc017, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa526, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc017));
        EXPECT(0xec, gbc.readMem(0xc018));
        // CB EC 034B
        gbc.setState(0x9d8b, 0xce7e, 0xf910, 0x4add, 0x5676, 0xd96a, 0x1, 0x1);
        gbc.writeMem(0x9d8b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xce7e, gbc.sp());
        EXPECT(0x9d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8b));
        EXPECT(0xec, gbc.readMem(0x9d8c));
        // CB EC 034C
        gbc.setState(0xdeda, 0x9f79, 0xf6e0, 0x235d, 0xa61c, 0x1ee9, 0x1, 0x1);
        gbc.writeMem(0xdeda, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0xdedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeda));
        EXPECT(0xec, gbc.readMem(0xdedb));
        // CB EC 034D
        gbc.setState(0xb25b, 0x30b7, 0x80b0, 0x5974, 0x6361, 0x8ef2, 0x1, 0x1);
        gbc.writeMem(0xb25b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x30b7, gbc.sp());
        EXPECT(0xb25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25b));
        EXPECT(0xec, gbc.readMem(0xb25c));
        // CB EC 034E
        gbc.setState(0x137b, 0x43ae, 0x490, 0xd3e, 0x9d9a, 0xfb14, 0x0, 0x1);
        gbc.writeMem(0x137b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x43ae, gbc.sp());
        EXPECT(0x137d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 034F
        gbc.setState(0x334e, 0x66ab, 0x4c80, 0xfc65, 0x57b8, 0x5f1, 0x1, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0350
        gbc.setState(0x3dff, 0xebf, 0x6660, 0xd4e9, 0x1142, 0x3199, 0x1, 0x1);
        gbc.writeMem(0x3dff, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0351
        gbc.setState(0xf4e, 0x3ef6, 0x1070, 0xd801, 0xf7b7, 0xeb1c, 0x1, 0x0);
        gbc.writeMem(0xf4e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3ef6, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0352
        gbc.setState(0x5292, 0xdb06, 0xc650, 0x658d, 0xac95, 0x8c1c, 0x0, 0x0);
        gbc.writeMem(0x5292, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdb06, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0353
        gbc.setState(0x5f7f, 0xccc8, 0x9b00, 0xf41a, 0x6b7, 0x677f, 0x0, 0x1);
        gbc.writeMem(0x5f7f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xccc8, gbc.sp());
        EXPECT(0x5f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0354
        gbc.setState(0x7a0e, 0x56ba, 0xa270, 0xfbcb, 0x657d, 0x16b1, 0x1, 0x1);
        gbc.writeMem(0x7a0e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x56ba, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0355
        gbc.setState(0xc244, 0xae3e, 0xc4b0, 0xe882, 0x9fda, 0x19a2, 0x0, 0x1);
        gbc.writeMem(0xc244, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xc246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc244));
        EXPECT(0xec, gbc.readMem(0xc245));
        // CB EC 0356
        gbc.setState(0xc1f, 0xa9c6, 0x4740, 0x4e1f, 0x126b, 0xece9, 0x1, 0x0);
        gbc.writeMem(0xc1f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0xc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0357
        gbc.setState(0x7889, 0xd923, 0x49a0, 0x28aa, 0x249f, 0xd24f, 0x1, 0x1);
        gbc.writeMem(0x7889, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd923, gbc.sp());
        EXPECT(0x788b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0358
        gbc.setState(0x19ca, 0x1c6b, 0x8e70, 0x4aec, 0x5d4d, 0x8b41, 0x1, 0x1);
        gbc.writeMem(0x19ca, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0x19cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0359
        gbc.setState(0x5ff3, 0x859e, 0x6100, 0xfb1e, 0x8172, 0x8369, 0x0, 0x1);
        gbc.writeMem(0x5ff3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x5ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 035A
        gbc.setState(0x8525, 0x556d, 0x8840, 0x59a0, 0x1f11, 0x6d66, 0x1, 0x1);
        gbc.writeMem(0x8525, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8525));
        EXPECT(0xec, gbc.readMem(0x8526));
        // CB EC 035B
        gbc.setState(0x6bba, 0xd738, 0x5c00, 0x4290, 0x8e3e, 0x4f85, 0x1, 0x0);
        gbc.writeMem(0x6bba, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd738, gbc.sp());
        EXPECT(0x6bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 035C
        gbc.setState(0x8fc6, 0xb7b9, 0x1e90, 0xf079, 0x82a8, 0x74bd, 0x1, 0x1);
        gbc.writeMem(0x8fc6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb7b9, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0xec, gbc.readMem(0x8fc7));
        // CB EC 035D
        gbc.setState(0x5a5a, 0x9e36, 0x5330, 0x526, 0x6ef4, 0x370e, 0x0, 0x1);
        gbc.writeMem(0x5a5a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9e36, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 035E
        gbc.setState(0x18e2, 0xc76d, 0x24c0, 0xa4c2, 0xa16, 0xbfdc, 0x1, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc76d, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 035F
        gbc.setState(0x1b0d, 0xf58f, 0xc8c0, 0x329c, 0x2237, 0x2226, 0x0, 0x1);
        gbc.writeMem(0x1b0d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf58f, gbc.sp());
        EXPECT(0x1b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0360
        gbc.setState(0xda0c, 0xbebd, 0x6d80, 0xa2fa, 0x4e07, 0xdf76, 0x0, 0x1);
        gbc.writeMem(0xda0c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0xda0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0c));
        EXPECT(0xec, gbc.readMem(0xda0d));
        // CB EC 0361
        gbc.setState(0x6847, 0x4113, 0x6b20, 0x8b66, 0x2106, 0xa5ed, 0x1, 0x0);
        gbc.writeMem(0x6847, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4113, gbc.sp());
        EXPECT(0x6849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0362
        gbc.setState(0xacc4, 0x8f9e, 0x6830, 0x566b, 0xfe80, 0xac41, 0x1, 0x0);
        gbc.writeMem(0xacc4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8f9e, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0xec, gbc.readMem(0xacc5));
        // CB EC 0363
        gbc.setState(0x4645, 0xd344, 0xa00, 0x5734, 0xc6b3, 0x55b1, 0x1, 0x0);
        gbc.writeMem(0x4645, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd344, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0364
        gbc.setState(0x3469, 0xc6fc, 0x3700, 0x2165, 0xa098, 0x31d8, 0x0, 0x0);
        gbc.writeMem(0x3469, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc6fc, gbc.sp());
        EXPECT(0x346b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0365
        gbc.setState(0x6de1, 0x562, 0xe480, 0x1169, 0x63ef, 0x2a96, 0x0, 0x0);
        gbc.writeMem(0x6de1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x562, gbc.sp());
        EXPECT(0x6de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0366
        gbc.setState(0x859b, 0x2bd8, 0x7b0, 0x1a63, 0x60a6, 0x84ad, 0x1, 0x1);
        gbc.writeMem(0x859b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859b));
        EXPECT(0xec, gbc.readMem(0x859c));
        // CB EC 0367
        gbc.setState(0xad06, 0x11af, 0x60f0, 0xd6bf, 0x9c05, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0xad06, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x11af, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad06));
        EXPECT(0xec, gbc.readMem(0xad07));
        // CB EC 0368
        gbc.setState(0x9506, 0x1839, 0x1c0, 0xc14f, 0xd3ba, 0xe607, 0x0, 0x1);
        gbc.writeMem(0x9506, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1839, gbc.sp());
        EXPECT(0x9508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9506));
        EXPECT(0xec, gbc.readMem(0x9507));
        // CB EC 0369
        gbc.setState(0x6505, 0xc926, 0x57e0, 0xb7d0, 0x3d3e, 0xa55f, 0x0, 0x1);
        gbc.writeMem(0x6505, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc926, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 036A
        gbc.setState(0xc03, 0xf150, 0xdf0, 0xc89f, 0xacf8, 0xb68e, 0x0, 0x0);
        gbc.writeMem(0xc03, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0xc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 036B
        gbc.setState(0x234, 0x44a2, 0x4c60, 0xe25b, 0x17d2, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0x234, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0x236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 036C
        gbc.setState(0x308f, 0xa9de, 0x9320, 0x23c9, 0xd9c3, 0x4fa5, 0x1, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa9de, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 036D
        gbc.setState(0xc7e4, 0x198e, 0xa660, 0xe52a, 0xa4d2, 0x2adc, 0x0, 0x1);
        gbc.writeMem(0xc7e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x198e, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e4));
        EXPECT(0xec, gbc.readMem(0xc7e5));
        // CB EC 036E
        gbc.setState(0xac, 0xf98d, 0x7ee0, 0x26c1, 0x3544, 0x2ff4, 0x1, 0x0);
        gbc.writeMem(0xac, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 036F
        gbc.setState(0x84c8, 0x54fb, 0x9710, 0xfd31, 0x147d, 0xb108, 0x0, 0x1);
        gbc.writeMem(0x84c8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x54fb, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c8));
        EXPECT(0xec, gbc.readMem(0x84c9));
        // CB EC 0370
        gbc.setState(0xb4d9, 0x6509, 0x6320, 0xa127, 0xb468, 0xa758, 0x1, 0x0);
        gbc.writeMem(0xb4d9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6509, gbc.sp());
        EXPECT(0xb4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d9));
        EXPECT(0xec, gbc.readMem(0xb4da));
        // CB EC 0371
        gbc.setState(0x7598, 0x4b71, 0xe350, 0xa5f1, 0x5e9c, 0xa2a9, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0x759a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0372
        gbc.setState(0x4349, 0xba63, 0x5d10, 0xc753, 0x38f0, 0x5c2b, 0x1, 0x0);
        gbc.writeMem(0x4349, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xba63, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0373
        gbc.setState(0x9449, 0x3ce6, 0x9020, 0x4182, 0x21f7, 0x70d5, 0x1, 0x1);
        gbc.writeMem(0x9449, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3ce6, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9449));
        EXPECT(0xec, gbc.readMem(0x944a));
        // CB EC 0374
        gbc.setState(0x8726, 0x9321, 0xdf60, 0x4128, 0xf817, 0xe322, 0x0, 0x1);
        gbc.writeMem(0x8726, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8726));
        EXPECT(0xec, gbc.readMem(0x8727));
        // CB EC 0375
        gbc.setState(0x6072, 0x9963, 0x8a0, 0x597f, 0x7bdf, 0x79a6, 0x1, 0x0);
        gbc.writeMem(0x6072, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9963, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0376
        gbc.setState(0xa7ad, 0xac09, 0x3ad0, 0x4992, 0xfc22, 0xf593, 0x0, 0x1);
        gbc.writeMem(0xa7ad, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xac09, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ad));
        EXPECT(0xec, gbc.readMem(0xa7ae));
        // CB EC 0377
        gbc.setState(0xc9d8, 0x3606, 0x2e00, 0xf4b7, 0x22fe, 0xf795, 0x0, 0x0);
        gbc.writeMem(0xc9d8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3606, gbc.sp());
        EXPECT(0xc9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d8));
        EXPECT(0xec, gbc.readMem(0xc9d9));
        // CB EC 0378
        gbc.setState(0xa012, 0xbd4b, 0x2ca0, 0x5506, 0x161e, 0x3eb3, 0x1, 0x0);
        gbc.writeMem(0xa012, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa012));
        EXPECT(0xec, gbc.readMem(0xa013));
        // CB EC 0379
        gbc.setState(0xa273, 0x4359, 0x32f0, 0xf492, 0xa534, 0x23b2, 0x1, 0x0);
        gbc.writeMem(0xa273, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4359, gbc.sp());
        EXPECT(0xa275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa273));
        EXPECT(0xec, gbc.readMem(0xa274));
        // CB EC 037A
        gbc.setState(0xde22, 0x79ef, 0xc9b0, 0xaa82, 0xcc09, 0xb7ad, 0x1, 0x1);
        gbc.writeMem(0xde22, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde22));
        EXPECT(0xec, gbc.readMem(0xde23));
        // CB EC 037B
        gbc.setState(0xd7b0, 0x942d, 0x2e60, 0x5c1a, 0xf50d, 0x82a5, 0x1, 0x0);
        gbc.writeMem(0xd7b0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x942d, gbc.sp());
        EXPECT(0xd7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b0));
        EXPECT(0xec, gbc.readMem(0xd7b1));
        // CB EC 037C
        gbc.setState(0x9d8e, 0xe5b0, 0xa430, 0xf997, 0x3f14, 0xe4a7, 0x0, 0x0);
        gbc.writeMem(0x9d8e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8e));
        EXPECT(0xec, gbc.readMem(0x9d8f));
        // CB EC 037D
        gbc.setState(0xb891, 0x9c06, 0x8990, 0x172e, 0xc0ba, 0xdd5a, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9c06, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb891));
        EXPECT(0xec, gbc.readMem(0xb892));
        // CB EC 037E
        gbc.setState(0x5117, 0x1a22, 0x6170, 0xcf3d, 0x9f62, 0xf5bc, 0x1, 0x1);
        gbc.writeMem(0x5117, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1a22, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0380
        gbc.setState(0x4e4, 0xe301, 0xa540, 0x1c3b, 0x4771, 0xca76, 0x0, 0x1);
        gbc.writeMem(0x4e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe301, gbc.sp());
        EXPECT(0x4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0381
        gbc.setState(0x131f, 0x21f, 0x5f80, 0x92c6, 0xe466, 0xce12, 0x0, 0x1);
        gbc.writeMem(0x131f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x21f, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0382
        gbc.setState(0xce85, 0x3fac, 0xe250, 0x2f08, 0xbde4, 0xf753, 0x0, 0x1);
        gbc.writeMem(0xce85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3fac, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce85));
        EXPECT(0xec, gbc.readMem(0xce86));
        // CB EC 0384
        gbc.setState(0x4a58, 0x7515, 0xf300, 0x473a, 0x118c, 0x5bfc, 0x1, 0x0);
        gbc.writeMem(0x4a58, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7515, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0386
        gbc.setState(0xa7e3, 0x8bf6, 0xbdf0, 0x1b90, 0x7e6d, 0x82c8, 0x1, 0x0);
        gbc.writeMem(0xa7e3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8bf6, gbc.sp());
        EXPECT(0xa7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e3));
        EXPECT(0xec, gbc.readMem(0xa7e4));
        // CB EC 0387
        gbc.setState(0xec81, 0x64c2, 0xd1c0, 0xed01, 0xbcfc, 0x4fc7, 0x1, 0x1);
        gbc.writeMem(0xec81, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x64c2, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec81));
        EXPECT(0xec, gbc.readMem(0xec82));
        // CB EC 0388
        gbc.setState(0x1f4, 0xd6de, 0xc40, 0x7739, 0x7476, 0x821b, 0x1, 0x1);
        gbc.writeMem(0x1f4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0389
        gbc.setState(0x954, 0xa83f, 0x6a50, 0xeae7, 0x5ddd, 0xee1e, 0x1, 0x0);
        gbc.writeMem(0x954, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 038A
        gbc.setState(0x9c4d, 0xe17b, 0x10b0, 0x6eb1, 0x51bd, 0x5d85, 0x1, 0x0);
        gbc.writeMem(0x9c4d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0x9c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4d));
        EXPECT(0xec, gbc.readMem(0x9c4e));
        // CB EC 038B
        gbc.setState(0x9a85, 0xd075, 0x4570, 0xb301, 0x11a4, 0xf0dd, 0x0, 0x1);
        gbc.writeMem(0x9a85, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a85));
        EXPECT(0xec, gbc.readMem(0x9a86));
        // CB EC 038C
        gbc.setState(0x29cf, 0x513a, 0x4120, 0xc99, 0xa95c, 0x9cd9, 0x0, 0x0);
        gbc.writeMem(0x29cf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 038D
        gbc.setState(0xc2e7, 0x1ba3, 0x93b0, 0xd6cd, 0x8eb, 0x1e78, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1ba3, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e7));
        EXPECT(0xec, gbc.readMem(0xc2e8));
        // CB EC 038E
        gbc.setState(0xb488, 0x94c2, 0xbbf0, 0xc96c, 0x2dad, 0xb10, 0x0, 0x1);
        gbc.writeMem(0xb488, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x94c2, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb488));
        EXPECT(0xec, gbc.readMem(0xb489));
        // CB EC 038F
        gbc.setState(0xb8c0, 0xbba9, 0xfc70, 0xc83d, 0x9ec6, 0x7e1a, 0x0, 0x0);
        gbc.writeMem(0xb8c0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xb8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c0));
        EXPECT(0xec, gbc.readMem(0xb8c1));
        // CB EC 0390
        gbc.setState(0x9bfe, 0xf870, 0x5ad0, 0xf1b1, 0x8eca, 0x2fbb, 0x1, 0x1);
        gbc.writeMem(0x9bfe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf870, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfe));
        EXPECT(0xec, gbc.readMem(0x9bff));
        // CB EC 0391
        gbc.setState(0x4b3d, 0x7e74, 0x8e00, 0xab65, 0x119d, 0xbee2, 0x0, 0x1);
        gbc.writeMem(0x4b3d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7e74, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0392
        gbc.setState(0xa6dd, 0xe498, 0xd730, 0xa9ca, 0xfa72, 0x483f, 0x1, 0x0);
        gbc.writeMem(0xa6dd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe498, gbc.sp());
        EXPECT(0xa6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6dd));
        EXPECT(0xec, gbc.readMem(0xa6de));
        // CB EC 0393
        gbc.setState(0xabde, 0x42fd, 0x5350, 0xf896, 0x7bfc, 0xfd8c, 0x0, 0x1);
        gbc.writeMem(0xabde, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x42fd, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabde));
        EXPECT(0xec, gbc.readMem(0xabdf));
        // CB EC 0394
        gbc.setState(0x2167, 0x86b0, 0xba20, 0x544d, 0xfc97, 0x46c0, 0x1, 0x1);
        gbc.writeMem(0x2167, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x86b0, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 0395
        gbc.setState(0xb3f7, 0x8fd3, 0xd290, 0x5a20, 0x6bb2, 0xd75c, 0x0, 0x1);
        gbc.writeMem(0xb3f7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fd3, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f7));
        EXPECT(0xec, gbc.readMem(0xb3f8));
        // CB EC 0396
        gbc.setState(0xdd1f, 0x1062, 0x4ed0, 0x42a8, 0x1499, 0x22bb, 0x0, 0x1);
        gbc.writeMem(0xdd1f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1f));
        EXPECT(0xec, gbc.readMem(0xdd20));
        // CB EC 0397
        gbc.setState(0x74e7, 0x6f08, 0xe790, 0xa0d0, 0x6ff3, 0xa470, 0x1, 0x1);
        gbc.writeMem(0x74e7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0398
        gbc.setState(0x5b01, 0x610a, 0xcb30, 0x152d, 0xb87e, 0xb55d, 0x1, 0x0);
        gbc.writeMem(0x5b01, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x610a, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 0399
        gbc.setState(0x408c, 0xfa4, 0xd210, 0xd327, 0xd37a, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x408c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa4, gbc.sp());
        EXPECT(0x408e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 039A
        gbc.setState(0xcffe, 0x7391, 0x4960, 0x4c32, 0x1f72, 0x4216, 0x0, 0x1);
        gbc.writeMem(0xcffe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7391, gbc.sp());
        EXPECT(0xd000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffe));
        EXPECT(0xec, gbc.readMem(0xcfff));
        // CB EC 039B
        gbc.setState(0xb7b1, 0x2fae, 0x42f0, 0xa7b3, 0xf240, 0x37e2, 0x1, 0x0);
        gbc.writeMem(0xb7b1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2fae, gbc.sp());
        EXPECT(0xb7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b1));
        EXPECT(0xec, gbc.readMem(0xb7b2));
        // CB EC 039C
        gbc.setState(0x82ca, 0xa0d3, 0x1bb0, 0xcc31, 0xab7f, 0xf0a8, 0x1, 0x0);
        gbc.writeMem(0x82ca, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa0d3, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ca));
        EXPECT(0xec, gbc.readMem(0x82cb));
        // CB EC 039D
        gbc.setState(0x722e, 0xf296, 0xa40, 0x1fed, 0x5b43, 0x1114, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf296, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 039E
        gbc.setState(0x8857, 0xe96d, 0xbe0, 0x9f9f, 0x4256, 0x6288, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8857));
        EXPECT(0xec, gbc.readMem(0x8858));
        // CB EC 039F
        gbc.setState(0x7d9, 0x539d, 0x45f0, 0x4a99, 0x58e, 0x95, 0x1, 0x1);
        gbc.writeMem(0x7d9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x539d, gbc.sp());
        EXPECT(0x7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03A0
        gbc.setState(0xdc24, 0x1fc8, 0xb300, 0x7f80, 0xb3fc, 0xc247, 0x1, 0x0);
        gbc.writeMem(0xdc24, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1fc8, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc24));
        EXPECT(0xec, gbc.readMem(0xdc25));
        // CB EC 03A1
        gbc.setState(0x40f5, 0x1aef, 0x9960, 0xae05, 0xab42, 0x871, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03A2
        gbc.setState(0x423e, 0xe05, 0x2c10, 0x90e8, 0x9ed1, 0x2a95, 0x1, 0x1);
        gbc.writeMem(0x423e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe05, gbc.sp());
        EXPECT(0x4240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03A3
        gbc.setState(0xd6c9, 0x54e5, 0xb060, 0x4612, 0x5f97, 0x21a9, 0x1, 0x1);
        gbc.writeMem(0xd6c9, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c9));
        EXPECT(0xec, gbc.readMem(0xd6ca));
        // CB EC 03A4
        gbc.setState(0x2c63, 0x6649, 0x3830, 0x47ae, 0x78fe, 0xab4a, 0x1, 0x0);
        gbc.writeMem(0x2c63, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6649, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03A5
        gbc.setState(0x1671, 0xd39c, 0x32c0, 0x5449, 0x250f, 0x59f, 0x1, 0x1);
        gbc.writeMem(0x1671, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x1673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03A6
        gbc.setState(0xe9eb, 0xac7d, 0x3500, 0xdde2, 0xc53d, 0x15e4, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9eb));
        EXPECT(0xec, gbc.readMem(0xe9ec));
        // CB EC 03A7
        gbc.setState(0x9778, 0x6912, 0xa180, 0xd9e4, 0x1d61, 0x5e82, 0x0, 0x1);
        gbc.writeMem(0x9778, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6912, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9778));
        EXPECT(0xec, gbc.readMem(0x9779));
        // CB EC 03A8
        gbc.setState(0x3242, 0xfc2a, 0xde90, 0x5922, 0x57bb, 0x5cfb, 0x1, 0x0);
        gbc.writeMem(0x3242, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03A9
        gbc.setState(0x5b66, 0xb9c4, 0x7b00, 0x1435, 0x53ff, 0x5fc2, 0x1, 0x1);
        gbc.writeMem(0x5b66, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb9c4, gbc.sp());
        EXPECT(0x5b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03AA
        gbc.setState(0xe330, 0xe943, 0x43a0, 0x453e, 0xac30, 0xeaec, 0x0, 0x0);
        gbc.writeMem(0xe330, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0xe332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe330));
        EXPECT(0xec, gbc.readMem(0xe331));
        // CB EC 03AB
        gbc.setState(0x9709, 0x8089, 0x1960, 0x3a3c, 0xfa5a, 0x7bb, 0x0, 0x0);
        gbc.writeMem(0x9709, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0x970b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9709));
        EXPECT(0xec, gbc.readMem(0x970a));
        // CB EC 03AC
        gbc.setState(0x81e, 0x804e, 0xcce0, 0xf14e, 0xbee9, 0xa546, 0x1, 0x0);
        gbc.writeMem(0x81e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x804e, gbc.sp());
        EXPECT(0x820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03AD
        gbc.setState(0xa2e2, 0x5747, 0x1310, 0x1003, 0x1e6f, 0xd45d, 0x0, 0x1);
        gbc.writeMem(0xa2e2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5747, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e2));
        EXPECT(0xec, gbc.readMem(0xa2e3));
        // CB EC 03AE
        gbc.setState(0xa75c, 0xc191, 0x2ed0, 0x8146, 0x2e22, 0x49f6, 0x0, 0x1);
        gbc.writeMem(0xa75c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0xa75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75c));
        EXPECT(0xec, gbc.readMem(0xa75d));
        // CB EC 03AF
        gbc.setState(0x9bbf, 0xf1db, 0x14a0, 0xa184, 0x90fa, 0xddee, 0x0, 0x0);
        gbc.writeMem(0x9bbf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf1db, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0xec, gbc.readMem(0x9bc0));
        // CB EC 03B0
        gbc.setState(0x29d4, 0xe46f, 0x6a70, 0xd9bb, 0x213a, 0x8e32, 0x0, 0x0);
        gbc.writeMem(0x29d4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe46f, gbc.sp());
        EXPECT(0x29d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03B1
        gbc.setState(0xd6ce, 0x406b, 0xd510, 0x7e13, 0xde9f, 0x5a02, 0x1, 0x1);
        gbc.writeMem(0xd6ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x406b, gbc.sp());
        EXPECT(0xd6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ce));
        EXPECT(0xec, gbc.readMem(0xd6cf));
        // CB EC 03B2
        gbc.setState(0x228d, 0x439e, 0xc520, 0xd78e, 0x4691, 0xed4b, 0x0, 0x0);
        gbc.writeMem(0x228d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x439e, gbc.sp());
        EXPECT(0x228f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03B3
        gbc.setState(0xab6c, 0x5630, 0xe4b0, 0x4dda, 0xd9fb, 0x784b, 0x1, 0x1);
        gbc.writeMem(0xab6c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5630, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6c));
        EXPECT(0xec, gbc.readMem(0xab6d));
        // CB EC 03B4
        gbc.setState(0x5b89, 0xb15e, 0xb190, 0x6527, 0xc1ec, 0xb002, 0x1, 0x0);
        gbc.writeMem(0x5b89, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03B5
        gbc.setState(0x20fa, 0xf421, 0xe370, 0x3f43, 0xa22d, 0x64fb, 0x0, 0x1);
        gbc.writeMem(0x20fa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf421, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03B6
        gbc.setState(0x1d0, 0x2fe0, 0xa7f0, 0x781a, 0x5f43, 0xf6b6, 0x1, 0x0);
        gbc.writeMem(0x1d0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2fe0, gbc.sp());
        EXPECT(0x1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03B7
        gbc.setState(0xc13e, 0xccbd, 0xc870, 0x9cb5, 0xab38, 0x8902, 0x0, 0x1);
        gbc.writeMem(0xc13e, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xccbd, gbc.sp());
        EXPECT(0xc140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13e));
        EXPECT(0xec, gbc.readMem(0xc13f));
        // CB EC 03B8
        gbc.setState(0x568c, 0x66f7, 0xa120, 0x923, 0x280b, 0x6a73, 0x0, 0x0);
        gbc.writeMem(0x568c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03B9
        gbc.setState(0xe52d, 0xc6db, 0xfd70, 0xde28, 0x6d10, 0x66ff, 0x0, 0x1);
        gbc.writeMem(0xe52d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc6db, gbc.sp());
        EXPECT(0xe52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52d));
        EXPECT(0xec, gbc.readMem(0xe52e));
        // CB EC 03BA
        gbc.setState(0x6af1, 0x9d3b, 0x6260, 0x688d, 0x47c0, 0xffb2, 0x1, 0x0);
        gbc.writeMem(0x6af1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x6af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03BB
        gbc.setState(0x2d4d, 0xe487, 0x8f0, 0x3506, 0xf060, 0xef87, 0x1, 0x0);
        gbc.writeMem(0x2d4d, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe487, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03BC
        gbc.setState(0x968c, 0x6be0, 0xfa40, 0xe798, 0x726a, 0x5f4a, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6be0, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xec, gbc.readMem(0x968d));
        // CB EC 03BD
        gbc.setState(0x14c, 0xa750, 0xf80, 0x1a22, 0xc750, 0x9d8, 0x1, 0x0);
        gbc.writeMem(0x14c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0x14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03BE
        gbc.setState(0x8bb1, 0x91e8, 0xecf0, 0x6b65, 0x227d, 0x50f, 0x0, 0x1);
        gbc.writeMem(0x8bb1, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x8bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb1));
        EXPECT(0xec, gbc.readMem(0x8bb2));
        // CB EC 03BF
        gbc.setState(0xdf6b, 0xed09, 0xbec0, 0x9c99, 0xcf6b, 0xa665, 0x0, 0x1);
        gbc.writeMem(0xdf6b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xed09, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6b));
        EXPECT(0xec, gbc.readMem(0xdf6c));
        // CB EC 03C0
        gbc.setState(0xea2, 0xfe28, 0x4ee0, 0xfade, 0x5c38, 0xd616, 0x1, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfe28, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03C1
        gbc.setState(0x16ce, 0x7ca5, 0x46b0, 0xaf00, 0xb576, 0x49fc, 0x1, 0x0);
        gbc.writeMem(0x16ce, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7ca5, gbc.sp());
        EXPECT(0x16d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03C2
        gbc.setState(0xe81, 0x893d, 0xd4e0, 0xcc4a, 0xa2ef, 0xa2ed, 0x1, 0x1);
        gbc.writeMem(0xe81, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x893d, gbc.sp());
        EXPECT(0xe83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03C3
        gbc.setState(0x35fa, 0x29d0, 0x96d0, 0x646a, 0x1dc, 0xe8f6, 0x0, 0x0);
        gbc.writeMem(0x35fa, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x29d0, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03C4
        gbc.setState(0x4bb8, 0xb05c, 0xcd0, 0xdb99, 0xfaab, 0xee74, 0x0, 0x0);
        gbc.writeMem(0x4bb8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb05c, gbc.sp());
        EXPECT(0x4bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03C5
        gbc.setState(0x51a6, 0xa0fc, 0xfae0, 0xf7c9, 0x6287, 0x3ba5, 0x0, 0x1);
        gbc.writeMem(0x51a6, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03C6
        gbc.setState(0xd3e3, 0x11e3, 0xb790, 0x56ba, 0xfc75, 0x843, 0x1, 0x0);
        gbc.writeMem(0xd3e3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e3));
        EXPECT(0xec, gbc.readMem(0xd3e4));
        // CB EC 03C7
        gbc.setState(0x9486, 0xbbd5, 0xcf60, 0xc3cc, 0xd375, 0x8e56, 0x0, 0x0);
        gbc.writeMem(0x9486, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbbd5, gbc.sp());
        EXPECT(0x9488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9486));
        EXPECT(0xec, gbc.readMem(0x9487));
        // CB EC 03C8
        gbc.setState(0x259f, 0xbf1a, 0x3170, 0x52f, 0xdb67, 0xdd2, 0x0, 0x1);
        gbc.writeMem(0x259f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0x25a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03C9
        gbc.setState(0xe938, 0x114a, 0x300, 0x5557, 0x9a4a, 0x2727, 0x0, 0x0);
        gbc.writeMem(0xe938, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe938));
        EXPECT(0xec, gbc.readMem(0xe939));
        // CB EC 03CA
        gbc.setState(0xdc86, 0x4db0, 0x99b0, 0x813, 0xee9, 0x5fa0, 0x1, 0x1);
        gbc.writeMem(0xdc86, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4db0, gbc.sp());
        EXPECT(0xdc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc86));
        EXPECT(0xec, gbc.readMem(0xdc87));
        // CB EC 03CB
        gbc.setState(0x29c2, 0x1d89, 0x9e10, 0xdc6d, 0x4b62, 0x3142, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1d89, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03CC
        gbc.setState(0xa0af, 0xd694, 0xbdc0, 0x96c5, 0x4dd, 0x6e53, 0x0, 0x1);
        gbc.writeMem(0xa0af, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0af));
        EXPECT(0xec, gbc.readMem(0xa0b0));
        // CB EC 03CD
        gbc.setState(0x9e0a, 0xd82d, 0xed60, 0x518c, 0xff14, 0x928d, 0x0, 0x1);
        gbc.writeMem(0x9e0a, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd82d, gbc.sp());
        EXPECT(0x9e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0a));
        EXPECT(0xec, gbc.readMem(0x9e0b));
        // CB EC 03CE
        gbc.setState(0xd230, 0x93c5, 0xb160, 0x46b2, 0xcda6, 0xdafe, 0x1, 0x0);
        gbc.writeMem(0xd230, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x93c5, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd230));
        EXPECT(0xec, gbc.readMem(0xd231));
        // CB EC 03CF
        gbc.setState(0x2329, 0xa3b5, 0x9940, 0xd298, 0x2122, 0xaf53, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03D0
        gbc.setState(0x674b, 0x5095, 0xda80, 0x2f24, 0x333, 0x568f, 0x0, 0x1);
        gbc.writeMem(0x674b, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5095, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03D1
        gbc.setState(0xd128, 0xe6f8, 0xdf90, 0x1bba, 0xd2bd, 0xef1b, 0x0, 0x1);
        gbc.writeMem(0xd128, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0xd12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd128));
        EXPECT(0xec, gbc.readMem(0xd129));
        // CB EC 03D2
        gbc.setState(0xcc31, 0x9a0a, 0x1160, 0xcb39, 0x992f, 0xa4b6, 0x1, 0x0);
        gbc.writeMem(0xcc31, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc31));
        EXPECT(0xec, gbc.readMem(0xcc32));
        // CB EC 03D3
        gbc.setState(0x4adf, 0xdc29, 0x4170, 0x546a, 0x7f05, 0xff1, 0x1, 0x0);
        gbc.writeMem(0x4adf, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdc29, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03D4
        gbc.setState(0xc7fb, 0xb42b, 0x1e30, 0x7193, 0xdf65, 0x72a8, 0x0, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0xec, gbc.readMem(0xc7fc));
        // CB EC 03D5
        gbc.setState(0x194f, 0xfd1c, 0x3b50, 0x479d, 0xfac7, 0xa51b, 0x1, 0x1);
        gbc.writeMem(0x194f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd1c, gbc.sp());
        EXPECT(0x1951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03D6
        gbc.setState(0x18ea, 0x6552, 0x6b40, 0x1312, 0x49c2, 0x540, 0x0, 0x1);
        gbc.writeMem(0x18ea, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6552, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03D7
        gbc.setState(0xa81, 0x201a, 0x8700, 0x9af1, 0x55af, 0xf34f, 0x0, 0x0);
        gbc.writeMem(0xa81, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03D8
        gbc.setState(0x78eb, 0xcb6c, 0xd400, 0xcbf4, 0xba85, 0xcc22, 0x1, 0x1);
        gbc.writeMem(0x78eb, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcb6c, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03D9
        gbc.setState(0xd1d8, 0xfc42, 0x3ec0, 0x7979, 0xa808, 0xd406, 0x0, 0x1);
        gbc.writeMem(0xd1d8, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc42, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d8));
        EXPECT(0xec, gbc.readMem(0xd1d9));
        // CB EC 03DA
        gbc.setState(0x9240, 0xb88e, 0xcf20, 0x54c1, 0x3ea1, 0x131e, 0x1, 0x1);
        gbc.writeMem(0x9240, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0x9242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9240));
        EXPECT(0xec, gbc.readMem(0x9241));
        // CB EC 03DB
        gbc.setState(0x528f, 0x9d5f, 0x7c80, 0x3e56, 0x5fbc, 0xdae4, 0x0, 0x1);
        gbc.writeMem(0x528f, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x5291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03DC
        gbc.setState(0xa5fe, 0x378b, 0x95c0, 0x6b11, 0xa4fb, 0x4ed0, 0x1, 0x1);
        gbc.writeMem(0xa5fe, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x378b, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0xec, gbc.readMem(0xa5ff));
        // CB EC 03DD
        gbc.setState(0x7c, 0xbdbb, 0xce00, 0x281e, 0x7100, 0x2baf, 0x0, 0x0);
        gbc.writeMem(0x7c, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03DE
        gbc.setState(0x4e4, 0xe553, 0x6ad0, 0x976d, 0x933f, 0xefdd, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe553, gbc.sp());
        EXPECT(0x4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03DF
        gbc.setState(0xb3d0, 0xdf61, 0xac10, 0xcd9, 0x78d3, 0x86e2, 0x1, 0x0);
        gbc.writeMem(0xb3d0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d0));
        EXPECT(0xec, gbc.readMem(0xb3d1));
        // CB EC 03E0
        gbc.setState(0x67e7, 0xb260, 0x50c0, 0x6179, 0xd673, 0x3fa, 0x1, 0x0);
        gbc.writeMem(0x67e7, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x67e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03E1
        gbc.setState(0x30e4, 0x72b9, 0xe8f0, 0x9481, 0xdd43, 0xd5dc, 0x0, 0x0);
        gbc.writeMem(0x30e4, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x72b9, gbc.sp());
        EXPECT(0x30e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EC 03E2
        gbc.setState(0x4fa5, 0xc20d, 0x75c0, 0x553c, 0xd9ab, 0x2630, 0x1, 0x0);
        gbc.writeMem(0x4fa5, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc20d, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03E3
        gbc.setState(0x8c68, 0xeb50, 0x8c0, 0xd266, 0x1c2c, 0x493b, 0x1, 0x1);
        gbc.writeMem(0x8c68, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0x8c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c68));
        EXPECT(0xec, gbc.readMem(0x8c69));
        // CB EC 03E4
        gbc.setState(0x4a79, 0x3b32, 0x7860, 0x3e23, 0xe359, 0x8048, 0x1, 0x0);
        gbc.writeMem(0x4a79, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3b32, gbc.sp());
        EXPECT(0x4a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EC 03E5
        gbc.setState(0xa3fd, 0xbf38, 0xc9f0, 0xdae, 0x29fb, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0xec, gbc.readMem(0xa3fe));
        // CB EC 03E6
        gbc.setState(0x8ed0, 0x7f8d, 0x2040, 0xce56, 0x38d1, 0x132b, 0x1, 0x0);
        gbc.writeMem(0x8ed0, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7f8d, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed0));
        EXPECT(0xec, gbc.readMem(0x8ed1));
        // CB EC 03E7
        gbc.setState(0xe6f3, 0xe6ab, 0xa580, 0x5a41, 0xc4b1, 0xcda1, 0x0, 0x1);
        gbc.writeMem(0xe6f3, { 0xcb, 0xec });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0xec, gbc.readMem(0xe6f4));
    }
