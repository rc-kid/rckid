    TEST(gbcemu, opcode_cb_ff) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FF 0000
        gbc.setState(0xcf63, 0x5472, 0x4a00, 0xc84e, 0xb08a, 0xe4b1, 0x0, 0x0);
        gbc.writeMem(0xcf63, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf63));
        EXPECT(0xff, gbc.readMem(0xcf64));
        // CB FF 0001
        gbc.setState(0x7780, 0x327e, 0xe6a0, 0x2638, 0x6dfd, 0x7af4, 0x0, 0x1);
        gbc.writeMem(0x7780, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x327e, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0002
        gbc.setState(0x723a, 0x50f9, 0xf520, 0x4900, 0x5bd4, 0x7d9e, 0x0, 0x0);
        gbc.writeMem(0x723a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x723c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0003
        gbc.setState(0xdff3, 0x67f3, 0x2d90, 0x11a3, 0xb612, 0x5971, 0x1, 0x0);
        gbc.writeMem(0xdff3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0xdff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff3));
        EXPECT(0xff, gbc.readMem(0xdff4));
        // CB FF 0004
        gbc.setState(0x1697, 0x73a3, 0xe2c0, 0xd515, 0x1344, 0xd056, 0x0, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x73a3, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0005
        gbc.setState(0x74b1, 0xba74, 0x37f0, 0xc9ee, 0x69d0, 0x9b51, 0x0, 0x0);
        gbc.writeMem(0x74b1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0x74b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0006
        gbc.setState(0x3125, 0xdf7c, 0x9bd0, 0xea22, 0x36f6, 0x9137, 0x1, 0x0);
        gbc.writeMem(0x3125, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0x3127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0007
        gbc.setState(0x895, 0x80f, 0xbff0, 0x32d6, 0x7ebb, 0x2854, 0x0, 0x1);
        gbc.writeMem(0x895, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0008
        gbc.setState(0xccd, 0x2fa6, 0xd840, 0xdac4, 0x8498, 0xa538, 0x1, 0x0);
        gbc.writeMem(0xccd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2fa6, gbc.sp());
        EXPECT(0xccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 000A
        gbc.setState(0xdc33, 0xeb9a, 0x2ed0, 0xe3f4, 0x3517, 0xcb04, 0x1, 0x0);
        gbc.writeMem(0xdc33, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeb9a, gbc.sp());
        EXPECT(0xdc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc33));
        EXPECT(0xff, gbc.readMem(0xdc34));
        // CB FF 000B
        gbc.setState(0x8f4e, 0x9e05, 0x9340, 0x5f32, 0xfc3, 0xe680, 0x0, 0x0);
        gbc.writeMem(0x8f4e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x8f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4e));
        EXPECT(0xff, gbc.readMem(0x8f4f));
        // CB FF 000C
        gbc.setState(0x2820, 0x52ca, 0xe050, 0x66ca, 0x5d06, 0xb1ec, 0x1, 0x0);
        gbc.writeMem(0x2820, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x52ca, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 000D
        gbc.setState(0x9917, 0x5377, 0x2100, 0xf62, 0x484c, 0x6d5e, 0x0, 0x0);
        gbc.writeMem(0x9917, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5377, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9917));
        EXPECT(0xff, gbc.readMem(0x9918));
        // CB FF 000E
        gbc.setState(0x5a6d, 0x9a27, 0xa940, 0xae6b, 0x5adc, 0xbb03, 0x1, 0x1);
        gbc.writeMem(0x5a6d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 000F
        gbc.setState(0x14c5, 0xb3b9, 0x31c0, 0x5279, 0x6431, 0x996f, 0x0, 0x1);
        gbc.writeMem(0x14c5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0010
        gbc.setState(0x928e, 0xcc60, 0xfb0, 0x5304, 0x942a, 0xc481, 0x1, 0x1);
        gbc.writeMem(0x928e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcc60, gbc.sp());
        EXPECT(0x9290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928e));
        EXPECT(0xff, gbc.readMem(0x928f));
        // CB FF 0011
        gbc.setState(0xc32, 0x3d89, 0xf960, 0x4b11, 0xe53f, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0xc32, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0xc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0012
        gbc.setState(0xc948, 0x52c9, 0xb9c0, 0x468b, 0xeb75, 0x55f7, 0x0, 0x0);
        gbc.writeMem(0xc948, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0xc94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc948));
        EXPECT(0xff, gbc.readMem(0xc949));
        // CB FF 0013
        gbc.setState(0xa9fd, 0x1b36, 0xc430, 0xdcbf, 0x91c9, 0xb4bf, 0x1, 0x1);
        gbc.writeMem(0xa9fd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0xa9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fd));
        EXPECT(0xff, gbc.readMem(0xa9fe));
        // CB FF 0014
        gbc.setState(0x8761, 0xf143, 0xeae0, 0x3356, 0x179c, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0x8761, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf143, gbc.sp());
        EXPECT(0x8763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8761));
        EXPECT(0xff, gbc.readMem(0x8762));
        // CB FF 0015
        gbc.setState(0x5456, 0xf207, 0xd430, 0xd02a, 0x9398, 0x3480, 0x0, 0x1);
        gbc.writeMem(0x5456, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0016
        gbc.setState(0xe83, 0xf78, 0xec0, 0xf602, 0x566a, 0xcbd9, 0x0, 0x1);
        gbc.writeMem(0xe83, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0017
        gbc.setState(0x1450, 0x531b, 0xcac0, 0xbcb2, 0x23ec, 0x5971, 0x1, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x531b, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0018
        gbc.setState(0x3953, 0xa799, 0xe4e0, 0x4831, 0x637f, 0x649b, 0x0, 0x0);
        gbc.writeMem(0x3953, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0x3955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0019
        gbc.setState(0x64f2, 0x8953, 0xf450, 0x370a, 0x562b, 0xa26f, 0x0, 0x1);
        gbc.writeMem(0x64f2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 001A
        gbc.setState(0xa303, 0x6220, 0x1f60, 0x2443, 0xe98, 0xd722, 0x0, 0x0);
        gbc.writeMem(0xa303, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6220, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa303));
        EXPECT(0xff, gbc.readMem(0xa304));
        // CB FF 001B
        gbc.setState(0x2cfb, 0x2e47, 0x1890, 0x2e7d, 0x2304, 0x9ba, 0x1, 0x0);
        gbc.writeMem(0x2cfb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x2cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 001C
        gbc.setState(0x471, 0xdf5d, 0x3180, 0xcc1d, 0x7122, 0x9dbb, 0x1, 0x1);
        gbc.writeMem(0x471, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf5d, gbc.sp());
        EXPECT(0x473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 001D
        gbc.setState(0x9ebd, 0xad5, 0x99f0, 0x3c5a, 0x9899, 0xe18d, 0x1, 0x0);
        gbc.writeMem(0x9ebd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x9ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebd));
        EXPECT(0xff, gbc.readMem(0x9ebe));
        // CB FF 001E
        gbc.setState(0xa044, 0x1d46, 0xb9f0, 0xafa, 0x629c, 0x3ccf, 0x1, 0x1);
        gbc.writeMem(0xa044, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1d46, gbc.sp());
        EXPECT(0xa046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa044));
        EXPECT(0xff, gbc.readMem(0xa045));
        // CB FF 001F
        gbc.setState(0xe82e, 0x8938, 0x3b10, 0x50da, 0xa91, 0xa59a, 0x0, 0x0);
        gbc.writeMem(0xe82e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0xe830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82e));
        EXPECT(0xff, gbc.readMem(0xe82f));
        // CB FF 0020
        gbc.setState(0xe7a0, 0x16ad, 0x5320, 0xe928, 0x20c1, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0xe7a0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a0));
        EXPECT(0xff, gbc.readMem(0xe7a1));
        // CB FF 0021
        gbc.setState(0xecc9, 0x458b, 0xb8f0, 0xf1cf, 0xdc60, 0x3548, 0x1, 0x1);
        gbc.writeMem(0xecc9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x458b, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc9));
        EXPECT(0xff, gbc.readMem(0xecca));
        // CB FF 0022
        gbc.setState(0x4e19, 0x3be4, 0x3210, 0x65e9, 0xf8dd, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x4e19, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0x4e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0023
        gbc.setState(0x202a, 0x135b, 0x2150, 0x8fd5, 0x2bd2, 0x9a5c, 0x0, 0x0);
        gbc.writeMem(0x202a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0024
        gbc.setState(0xb3d9, 0x369d, 0xd7e0, 0x9a8, 0x262d, 0xa1b6, 0x0, 0x0);
        gbc.writeMem(0xb3d9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0xb3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d9));
        EXPECT(0xff, gbc.readMem(0xb3da));
        // CB FF 0025
        gbc.setState(0xc9af, 0x929c, 0x7860, 0x40a1, 0x49a9, 0x6c2d, 0x1, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0xff, gbc.readMem(0xc9b0));
        // CB FF 0026
        gbc.setState(0x7388, 0x8bc2, 0x7170, 0x3f4, 0x9d19, 0x4be1, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8bc2, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0027
        gbc.setState(0xd5e9, 0x2e85, 0xac70, 0x10b2, 0xfa17, 0x651b, 0x1, 0x1);
        gbc.writeMem(0xd5e9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e9));
        EXPECT(0xff, gbc.readMem(0xd5ea));
        // CB FF 0028
        gbc.setState(0x5c80, 0x4d01, 0xb220, 0xd161, 0xee71, 0x9a64, 0x1, 0x1);
        gbc.writeMem(0x5c80, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4d01, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0029
        gbc.setState(0xc6b3, 0xfc6f, 0xcdb0, 0xdd2, 0x49c2, 0x992c, 0x1, 0x0);
        gbc.writeMem(0xc6b3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0xc6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b3));
        EXPECT(0xff, gbc.readMem(0xc6b4));
        // CB FF 002A
        gbc.setState(0xa2d7, 0xc9c7, 0xaf00, 0xa44c, 0x940, 0xc58f, 0x0, 0x1);
        gbc.writeMem(0xa2d7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d7));
        EXPECT(0xff, gbc.readMem(0xa2d8));
        // CB FF 002B
        gbc.setState(0x8a46, 0x6cf2, 0x72d0, 0xb7c4, 0xedb3, 0xa06d, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x8a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a46));
        EXPECT(0xff, gbc.readMem(0x8a47));
        // CB FF 002C
        gbc.setState(0x5c53, 0x8e23, 0x6340, 0x1994, 0xf6d4, 0x45a3, 0x1, 0x1);
        gbc.writeMem(0x5c53, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0x5c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 002D
        gbc.setState(0x69ef, 0x8ba9, 0x8470, 0x992, 0x9b39, 0xcb7c, 0x1, 0x0);
        gbc.writeMem(0x69ef, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 002E
        gbc.setState(0x430e, 0xbefa, 0x780, 0x8c53, 0x78ca, 0x79ee, 0x0, 0x1);
        gbc.writeMem(0x430e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbefa, gbc.sp());
        EXPECT(0x4310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 002F
        gbc.setState(0x2545, 0x7edc, 0x84b0, 0x7bcd, 0x82f, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0x2545, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7edc, gbc.sp());
        EXPECT(0x2547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0030
        gbc.setState(0x72b7, 0x429f, 0x52c0, 0x22f5, 0xaab5, 0xb6f5, 0x1, 0x0);
        gbc.writeMem(0x72b7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x429f, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0031
        gbc.setState(0xd05a, 0x2161, 0x2490, 0xdbea, 0x9950, 0x35fe, 0x1, 0x0);
        gbc.writeMem(0xd05a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2161, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05a));
        EXPECT(0xff, gbc.readMem(0xd05b));
        // CB FF 0032
        gbc.setState(0xb45c, 0xab59, 0x19e0, 0x714, 0x5a56, 0x1952, 0x1, 0x0);
        gbc.writeMem(0xb45c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45c));
        EXPECT(0xff, gbc.readMem(0xb45d));
        // CB FF 0033
        gbc.setState(0xd655, 0xf4ff, 0xe580, 0x4124, 0xb86b, 0x4e11, 0x1, 0x1);
        gbc.writeMem(0xd655, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0xd657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd655));
        EXPECT(0xff, gbc.readMem(0xd656));
        // CB FF 0035
        gbc.setState(0x7d7e, 0x164f, 0xb930, 0xc5a6, 0x4db7, 0xc62c, 0x1, 0x0);
        gbc.writeMem(0x7d7e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x7d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0036
        gbc.setState(0xa33f, 0xf62a, 0x38d0, 0xe9b0, 0x86b, 0x54b5, 0x0, 0x1);
        gbc.writeMem(0xa33f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf62a, gbc.sp());
        EXPECT(0xa341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33f));
        EXPECT(0xff, gbc.readMem(0xa340));
        // CB FF 0037
        gbc.setState(0x896b, 0x9ae6, 0x33e0, 0x5f80, 0xaae2, 0x40fc, 0x1, 0x1);
        gbc.writeMem(0x896b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0x896d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896b));
        EXPECT(0xff, gbc.readMem(0x896c));
        // CB FF 0038
        gbc.setState(0xb6ff, 0xe619, 0x5970, 0x7cb8, 0x5aca, 0x7b05, 0x0, 0x1);
        gbc.writeMem(0xb6ff, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ff));
        EXPECT(0xff, gbc.readMem(0xb700));
        // CB FF 0039
        gbc.setState(0xe432, 0xdcd, 0x1c60, 0x8e23, 0x1ee9, 0x26c9, 0x1, 0x0);
        gbc.writeMem(0xe432, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdcd, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe432));
        EXPECT(0xff, gbc.readMem(0xe433));
        // CB FF 003A
        gbc.setState(0x8853, 0xbace, 0x2950, 0x297d, 0x45eb, 0xbff, 0x0, 0x1);
        gbc.writeMem(0x8853, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x8855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8853));
        EXPECT(0xff, gbc.readMem(0x8854));
        // CB FF 003B
        gbc.setState(0x9fe6, 0x71a7, 0xa0c0, 0xf8ae, 0x30f, 0x5b7e, 0x1, 0x0);
        gbc.writeMem(0x9fe6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x71a7, gbc.sp());
        EXPECT(0x9fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe6));
        EXPECT(0xff, gbc.readMem(0x9fe7));
        // CB FF 003C
        gbc.setState(0x7741, 0x85e6, 0x1d0, 0x7289, 0x155a, 0x3f47, 0x1, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x85e6, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 003D
        gbc.setState(0xad7, 0xbec3, 0xc4b0, 0x8c2c, 0x1b0a, 0x467f, 0x0, 0x0);
        gbc.writeMem(0xad7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0xad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 003E
        gbc.setState(0x22c4, 0xf233, 0x9900, 0x76d5, 0x3824, 0x603e, 0x0, 0x0);
        gbc.writeMem(0x22c4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0x22c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 003F
        gbc.setState(0xc1b2, 0x37c4, 0xb7a0, 0x42c5, 0xfa9c, 0xe1a3, 0x0, 0x0);
        gbc.writeMem(0xc1b2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x37c4, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b2));
        EXPECT(0xff, gbc.readMem(0xc1b3));
        // CB FF 0040
        gbc.setState(0x403d, 0x1c28, 0x4960, 0x50ad, 0x4444, 0xe114, 0x0, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1c28, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0041
        gbc.setState(0x6b18, 0xe0a1, 0x81c0, 0xb54f, 0x27b6, 0x92a1, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x6b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0042
        gbc.setState(0xef3a, 0x768c, 0x87b0, 0xaf72, 0xf6c2, 0x484b, 0x1, 0x0);
        gbc.writeMem(0xef3a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x768c, gbc.sp());
        EXPECT(0xef3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3a));
        EXPECT(0xff, gbc.readMem(0xef3b));
        // CB FF 0043
        gbc.setState(0x6e72, 0x3398, 0x4f40, 0xe8b1, 0x2dd, 0xe2b4, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0044
        gbc.setState(0xc9ca, 0x2f34, 0xd740, 0xa68c, 0x436c, 0xe0d0, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0xff, gbc.readMem(0xc9cb));
        // CB FF 0046
        gbc.setState(0xe5cc, 0x10b5, 0xfcc0, 0x1052, 0x493a, 0xbc1a, 0x1, 0x0);
        gbc.writeMem(0xe5cc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x10b5, gbc.sp());
        EXPECT(0xe5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cc));
        EXPECT(0xff, gbc.readMem(0xe5cd));
        // CB FF 0047
        gbc.setState(0xb3aa, 0x53d7, 0x4e70, 0x90d0, 0x14f6, 0x1933, 0x1, 0x1);
        gbc.writeMem(0xb3aa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x53d7, gbc.sp());
        EXPECT(0xb3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3aa));
        EXPECT(0xff, gbc.readMem(0xb3ab));
        // CB FF 0048
        gbc.setState(0x3b69, 0x786f, 0xc6e0, 0x8cb2, 0xb82, 0x34fe, 0x1, 0x1);
        gbc.writeMem(0x3b69, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x786f, gbc.sp());
        EXPECT(0x3b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0049
        gbc.setState(0xcc54, 0x5d5a, 0xa4c0, 0x7b9e, 0x8989, 0x49a, 0x0, 0x0);
        gbc.writeMem(0xcc54, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5d5a, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc54));
        EXPECT(0xff, gbc.readMem(0xcc55));
        // CB FF 004A
        gbc.setState(0xe190, 0x7e48, 0x3c60, 0xd0eb, 0x66a0, 0x7771, 0x1, 0x0);
        gbc.writeMem(0xe190, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7e48, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe190));
        EXPECT(0xff, gbc.readMem(0xe191));
        // CB FF 004B
        gbc.setState(0x5132, 0x50c7, 0xffa0, 0x56f0, 0x4121, 0x69a9, 0x1, 0x0);
        gbc.writeMem(0x5132, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x50c7, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 004C
        gbc.setState(0xe283, 0xf77e, 0xce40, 0xe6b, 0xfe49, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0xe283, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf77e, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe283));
        EXPECT(0xff, gbc.readMem(0xe284));
        // CB FF 004D
        gbc.setState(0x9ae1, 0x2a40, 0xab0, 0x6ef4, 0xeb0c, 0x1c6e, 0x0, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2a40, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae1));
        EXPECT(0xff, gbc.readMem(0x9ae2));
        // CB FF 004E
        gbc.setState(0xc85, 0x1b7f, 0x44f0, 0x8a81, 0x5efb, 0x5e1d, 0x1, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 004F
        gbc.setState(0x6caf, 0xdc4d, 0xf700, 0x9754, 0xd0bc, 0x78c7, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdc4d, gbc.sp());
        EXPECT(0x6cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0050
        gbc.setState(0xe9c6, 0x223a, 0x7270, 0xa85f, 0x725a, 0x804b, 0x0, 0x0);
        gbc.writeMem(0xe9c6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x223a, gbc.sp());
        EXPECT(0xe9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c6));
        EXPECT(0xff, gbc.readMem(0xe9c7));
        // CB FF 0051
        gbc.setState(0xc448, 0x1dd8, 0x7b0, 0x30d1, 0xd2e, 0x3b38, 0x0, 0x0);
        gbc.writeMem(0xc448, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc448));
        EXPECT(0xff, gbc.readMem(0xc449));
        // CB FF 0052
        gbc.setState(0xe234, 0xa725, 0x4e90, 0xe685, 0x6dcb, 0xba, 0x1, 0x1);
        gbc.writeMem(0xe234, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa725, gbc.sp());
        EXPECT(0xe236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe234));
        EXPECT(0xff, gbc.readMem(0xe235));
        // CB FF 0053
        gbc.setState(0xd24a, 0xe2fd, 0x1f00, 0xb510, 0xc290, 0xebad, 0x1, 0x0);
        gbc.writeMem(0xd24a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe2fd, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24a));
        EXPECT(0xff, gbc.readMem(0xd24b));
        // CB FF 0054
        gbc.setState(0x9fd8, 0x82ef, 0xa960, 0xb16d, 0x659a, 0x7228, 0x0, 0x1);
        gbc.writeMem(0x9fd8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0x9fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd8));
        EXPECT(0xff, gbc.readMem(0x9fd9));
        // CB FF 0055
        gbc.setState(0x4766, 0x1b2c, 0x6a90, 0xfed3, 0xd7aa, 0x2b51, 0x0, 0x0);
        gbc.writeMem(0x4766, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1b2c, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0056
        gbc.setState(0x6e9, 0x9712, 0x3740, 0xdb64, 0x616d, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0x6e9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9712, gbc.sp());
        EXPECT(0x6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0057
        gbc.setState(0xcd6d, 0x1682, 0x93a0, 0x8a35, 0x1db3, 0x2ad7, 0x0, 0x0);
        gbc.writeMem(0xcd6d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1682, gbc.sp());
        EXPECT(0xcd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6d));
        EXPECT(0xff, gbc.readMem(0xcd6e));
        // CB FF 0058
        gbc.setState(0x2af1, 0x6046, 0xfe70, 0x959b, 0xc5cc, 0xb2a4, 0x1, 0x0);
        gbc.writeMem(0x2af1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6046, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0059
        gbc.setState(0xac25, 0x5e76, 0x180, 0x4af8, 0x31dc, 0x1921, 0x1, 0x1);
        gbc.writeMem(0xac25, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e76, gbc.sp());
        EXPECT(0xac27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac25));
        EXPECT(0xff, gbc.readMem(0xac26));
        // CB FF 005A
        gbc.setState(0xe752, 0x6e36, 0x8ec0, 0xb994, 0xd697, 0xbaf5, 0x0, 0x1);
        gbc.writeMem(0xe752, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0xe754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe752));
        EXPECT(0xff, gbc.readMem(0xe753));
        // CB FF 005B
        gbc.setState(0xc4d0, 0x9cf3, 0x4af0, 0x8555, 0x27e1, 0x50c1, 0x1, 0x1);
        gbc.writeMem(0xc4d0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d0));
        EXPECT(0xff, gbc.readMem(0xc4d1));
        // CB FF 005C
        gbc.setState(0x415d, 0xaf0d, 0x5c60, 0x2009, 0x8d6e, 0x437, 0x1, 0x1);
        gbc.writeMem(0x415d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0x415f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 005D
        gbc.setState(0x4c20, 0x654b, 0xddf0, 0x9ccf, 0xf386, 0x7f04, 0x0, 0x0);
        gbc.writeMem(0x4c20, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x654b, gbc.sp());
        EXPECT(0x4c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 005E
        gbc.setState(0x3f69, 0x264, 0x9310, 0x6620, 0xe783, 0x8d00, 0x0, 0x1);
        gbc.writeMem(0x3f69, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x264, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 005F
        gbc.setState(0x1e9a, 0xfb02, 0xde30, 0xf5b2, 0x7461, 0x5684, 0x0, 0x0);
        gbc.writeMem(0x1e9a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0x1e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0060
        gbc.setState(0xefb1, 0x31ba, 0xaa10, 0x320b, 0xb959, 0x4e1, 0x0, 0x1);
        gbc.writeMem(0xefb1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31ba, gbc.sp());
        EXPECT(0xefb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb1));
        EXPECT(0xff, gbc.readMem(0xefb2));
        // CB FF 0061
        gbc.setState(0xd983, 0x6ebb, 0xbee0, 0x952e, 0xe7af, 0xebd8, 0x0, 0x1);
        gbc.writeMem(0xd983, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6ebb, gbc.sp());
        EXPECT(0xd985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd983));
        EXPECT(0xff, gbc.readMem(0xd984));
        // CB FF 0062
        gbc.setState(0x10e0, 0x419d, 0x96e0, 0xb816, 0x6d44, 0x5fae, 0x1, 0x1);
        gbc.writeMem(0x10e0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x10e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0063
        gbc.setState(0x61c4, 0x9f62, 0x4e00, 0xbdce, 0x7259, 0x5379, 0x0, 0x1);
        gbc.writeMem(0x61c4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x61c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0064
        gbc.setState(0x301d, 0x6581, 0x65a0, 0x10f, 0x2b16, 0x2912, 0x0, 0x0);
        gbc.writeMem(0x301d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6581, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0065
        gbc.setState(0x48df, 0xbec9, 0x87f0, 0x978, 0xb730, 0x8b35, 0x0, 0x1);
        gbc.writeMem(0x48df, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbec9, gbc.sp());
        EXPECT(0x48e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0066
        gbc.setState(0x3506, 0x8be0, 0xc5d0, 0x893f, 0x72f, 0xd7eb, 0x0, 0x0);
        gbc.writeMem(0x3506, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8be0, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0067
        gbc.setState(0x8374, 0x1a51, 0x4770, 0x3139, 0xbfd7, 0x5f4c, 0x1, 0x0);
        gbc.writeMem(0x8374, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8374));
        EXPECT(0xff, gbc.readMem(0x8375));
        // CB FF 0068
        gbc.setState(0x54fd, 0x4369, 0x8bc0, 0x838c, 0xac00, 0x40f2, 0x0, 0x0);
        gbc.writeMem(0x54fd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 006A
        gbc.setState(0x3750, 0x7f05, 0x49c0, 0x87e0, 0xcc33, 0xaf24, 0x1, 0x1);
        gbc.writeMem(0x3750, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f05, gbc.sp());
        EXPECT(0x3752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 006B
        gbc.setState(0x572c, 0x20e7, 0xaca0, 0x2676, 0xc027, 0x3ba8, 0x0, 0x1);
        gbc.writeMem(0x572c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x20e7, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 006C
        gbc.setState(0x3fc8, 0xc563, 0x6a30, 0x6336, 0x3acf, 0x7b89, 0x0, 0x1);
        gbc.writeMem(0x3fc8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 006D
        gbc.setState(0x75ab, 0x8f83, 0xadd0, 0xb49, 0x5475, 0x567e, 0x0, 0x0);
        gbc.writeMem(0x75ab, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0x75ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 006E
        gbc.setState(0x3ea2, 0xa5ce, 0x34d0, 0x8b55, 0x66a1, 0xaac2, 0x1, 0x0);
        gbc.writeMem(0x3ea2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa5ce, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 006F
        gbc.setState(0x3096, 0x4f9c, 0x200, 0x1c80, 0x3ac8, 0xa8f8, 0x0, 0x0);
        gbc.writeMem(0x3096, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0070
        gbc.setState(0xb2e, 0x9027, 0x7c00, 0x6574, 0x74f4, 0x8d7d, 0x0, 0x0);
        gbc.writeMem(0xb2e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9027, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0071
        gbc.setState(0x1f75, 0xa8c8, 0x8650, 0x93dc, 0x2988, 0xa18a, 0x0, 0x0);
        gbc.writeMem(0x1f75, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa8c8, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0072
        gbc.setState(0xda56, 0xa574, 0xc1f0, 0x8b23, 0xf2ee, 0x3177, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa574, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda56));
        EXPECT(0xff, gbc.readMem(0xda57));
        // CB FF 0073
        gbc.setState(0x61c0, 0xe8fc, 0x9e20, 0x5263, 0x70f2, 0xce17, 0x0, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0074
        gbc.setState(0x7038, 0x2e6e, 0xe5d0, 0x7a07, 0xcddc, 0x27f9, 0x0, 0x0);
        gbc.writeMem(0x7038, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2e6e, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0075
        gbc.setState(0x9abe, 0xc884, 0xc370, 0x8c97, 0xcb31, 0x6cb6, 0x0, 0x0);
        gbc.writeMem(0x9abe, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc884, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0xff, gbc.readMem(0x9abf));
        // CB FF 0076
        gbc.setState(0x3dc4, 0xa83e, 0x7a0, 0xd68e, 0xb582, 0xec95, 0x0, 0x0);
        gbc.writeMem(0x3dc4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa83e, gbc.sp());
        EXPECT(0x3dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0077
        gbc.setState(0x422f, 0xdc2c, 0x32d0, 0x110f, 0x155f, 0xf0d2, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc2c, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0078
        gbc.setState(0x8055, 0x4b48, 0x11f0, 0xd096, 0x650f, 0x53fd, 0x1, 0x1);
        gbc.writeMem(0x8055, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8055));
        EXPECT(0xff, gbc.readMem(0x8056));
        // CB FF 0079
        gbc.setState(0xdffc, 0xedee, 0x6d40, 0x2c59, 0x45e9, 0xd132, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xedee, gbc.sp());
        EXPECT(0xdffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdffc));
        EXPECT(0xff, gbc.readMem(0xdffd));
        // CB FF 007A
        gbc.setState(0x31d1, 0xa06e, 0x43a0, 0x2d74, 0x75b, 0xd5f, 0x0, 0x0);
        gbc.writeMem(0x31d1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x31d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 007B
        gbc.setState(0x52de, 0xe731, 0xc10, 0x666d, 0x137e, 0x2b4b, 0x1, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe731, gbc.sp());
        EXPECT(0x52e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 007C
        gbc.setState(0x86c7, 0xee04, 0xd6d0, 0x18e0, 0x26d1, 0x47bc, 0x1, 0x1);
        gbc.writeMem(0x86c7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c7));
        EXPECT(0xff, gbc.readMem(0x86c8));
        // CB FF 007D
        gbc.setState(0x29fa, 0x5a40, 0xfe40, 0x1ea6, 0xf99b, 0x808f, 0x1, 0x0);
        gbc.writeMem(0x29fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5a40, gbc.sp());
        EXPECT(0x29fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 007E
        gbc.setState(0xdc87, 0x714f, 0xf8b0, 0x304d, 0xe63e, 0x46d9, 0x1, 0x0);
        gbc.writeMem(0xdc87, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x714f, gbc.sp());
        EXPECT(0xdc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc87));
        EXPECT(0xff, gbc.readMem(0xdc88));
        // CB FF 007F
        gbc.setState(0x7705, 0x79b3, 0x9b30, 0x5431, 0xace7, 0xa8a8, 0x1, 0x1);
        gbc.writeMem(0x7705, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x79b3, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0080
        gbc.setState(0xbc8d, 0xbbd0, 0xc910, 0xb134, 0x76a2, 0x2586, 0x1, 0x0);
        gbc.writeMem(0xbc8d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbbd0, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0xff, gbc.readMem(0xbc8e));
        // CB FF 0081
        gbc.setState(0x2065, 0x83f8, 0x9d0, 0xf301, 0xd650, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0x2065, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x83f8, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0082
        gbc.setState(0xb0a, 0x7969, 0x3d70, 0xdb21, 0x8c42, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0xb0a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7969, gbc.sp());
        EXPECT(0xb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0083
        gbc.setState(0xd7fa, 0x205c, 0x2160, 0x738e, 0x384d, 0xee6, 0x0, 0x0);
        gbc.writeMem(0xd7fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fa));
        EXPECT(0xff, gbc.readMem(0xd7fb));
        // CB FF 0084
        gbc.setState(0x1f66, 0xbc6f, 0x14b0, 0xcd89, 0x158b, 0xa007, 0x1, 0x0);
        gbc.writeMem(0x1f66, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbc6f, gbc.sp());
        EXPECT(0x1f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0085
        gbc.setState(0x5bd, 0xa1c9, 0x6660, 0xf4d, 0x56ea, 0xda01, 0x0, 0x0);
        gbc.writeMem(0x5bd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0x5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0086
        gbc.setState(0x8fe5, 0x9354, 0xcfb0, 0x9ec4, 0x1f04, 0x825d, 0x1, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe5));
        EXPECT(0xff, gbc.readMem(0x8fe6));
        // CB FF 0087
        gbc.setState(0x4df0, 0x44ca, 0xc880, 0x3b67, 0x442b, 0x94cd, 0x0, 0x1);
        gbc.writeMem(0x4df0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x44ca, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0088
        gbc.setState(0xdbae, 0xa909, 0x49b0, 0xd87a, 0x79ea, 0x25ec, 0x0, 0x1);
        gbc.writeMem(0xdbae, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa909, gbc.sp());
        EXPECT(0xdbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbae));
        EXPECT(0xff, gbc.readMem(0xdbaf));
        // CB FF 0089
        gbc.setState(0x7b3, 0xc355, 0x60, 0x21bf, 0xa42a, 0xd8f8, 0x0, 0x0);
        gbc.writeMem(0x7b3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc355, gbc.sp());
        EXPECT(0x7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 008A
        gbc.setState(0xd352, 0x7fff, 0x2530, 0xaaff, 0xb8ea, 0xc86, 0x0, 0x0);
        gbc.writeMem(0xd352, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7fff, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd352));
        EXPECT(0xff, gbc.readMem(0xd353));
        // CB FF 008B
        gbc.setState(0xee88, 0xa488, 0xd2a0, 0x2d1f, 0xadf3, 0x41f1, 0x1, 0x1);
        gbc.writeMem(0xee88, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0xee8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee88));
        EXPECT(0xff, gbc.readMem(0xee89));
        // CB FF 008C
        gbc.setState(0x95a, 0x83ef, 0x4720, 0xa9c9, 0x56fe, 0xe62d, 0x1, 0x1);
        gbc.writeMem(0x95a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0x95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 008D
        gbc.setState(0x1689, 0x6fae, 0x6200, 0x1e52, 0xb3ca, 0x86e1, 0x1, 0x1);
        gbc.writeMem(0x1689, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 008E
        gbc.setState(0x76b9, 0xc143, 0x4320, 0x81d8, 0xb448, 0xf628, 0x0, 0x0);
        gbc.writeMem(0x76b9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0x76bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 008F
        gbc.setState(0x6d6f, 0x34d7, 0xfa60, 0xe8d7, 0xf3d6, 0xa808, 0x1, 0x0);
        gbc.writeMem(0x6d6f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x34d7, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0090
        gbc.setState(0x5a27, 0xfc12, 0xfcd0, 0xe923, 0x3850, 0x60b, 0x1, 0x0);
        gbc.writeMem(0x5a27, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x5a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0091
        gbc.setState(0x9c3d, 0x7139, 0xeb60, 0x6733, 0x7299, 0xebab, 0x1, 0x1);
        gbc.writeMem(0x9c3d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3d));
        EXPECT(0xff, gbc.readMem(0x9c3e));
        // CB FF 0092
        gbc.setState(0x5283, 0xcf06, 0x3d20, 0xf52e, 0xe55e, 0x25b5, 0x1, 0x0);
        gbc.writeMem(0x5283, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcf06, gbc.sp());
        EXPECT(0x5285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0093
        gbc.setState(0x95a3, 0x5b9b, 0x5330, 0x25b, 0xdebd, 0x2132, 0x1, 0x1);
        gbc.writeMem(0x95a3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5b9b, gbc.sp());
        EXPECT(0x95a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a3));
        EXPECT(0xff, gbc.readMem(0x95a4));
        // CB FF 0094
        gbc.setState(0x93ea, 0x9caf, 0xa900, 0x67e3, 0x8435, 0xcada, 0x1, 0x0);
        gbc.writeMem(0x93ea, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9caf, gbc.sp());
        EXPECT(0x93ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ea));
        EXPECT(0xff, gbc.readMem(0x93eb));
        // CB FF 0096
        gbc.setState(0x5bdb, 0x20e7, 0x6670, 0x6534, 0x188, 0x982d, 0x1, 0x1);
        gbc.writeMem(0x5bdb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x20e7, gbc.sp());
        EXPECT(0x5bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0097
        gbc.setState(0xa08d, 0x1fb9, 0x5870, 0x6c15, 0x8c2d, 0xc81a, 0x0, 0x1);
        gbc.writeMem(0xa08d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1fb9, gbc.sp());
        EXPECT(0xa08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08d));
        EXPECT(0xff, gbc.readMem(0xa08e));
        // CB FF 0098
        gbc.setState(0xb14b, 0x2089, 0x41e0, 0xf6de, 0x69aa, 0x1e02, 0x0, 0x1);
        gbc.writeMem(0xb14b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2089, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14b));
        EXPECT(0xff, gbc.readMem(0xb14c));
        // CB FF 0099
        gbc.setState(0x6013, 0x9f7b, 0x27a0, 0x1f7, 0x2c05, 0x8ac4, 0x0, 0x1);
        gbc.writeMem(0x6013, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9f7b, gbc.sp());
        EXPECT(0x6015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 009A
        gbc.setState(0x115, 0x5663, 0x10b0, 0x7cce, 0x79d5, 0xba92, 0x1, 0x0);
        gbc.writeMem(0x115, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0x117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 009B
        gbc.setState(0x2bb7, 0xe6, 0x7e10, 0x6bac, 0x2b04, 0x400f, 0x1, 0x0);
        gbc.writeMem(0x2bb7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe6, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 009C
        gbc.setState(0xad4, 0xcf1, 0x3be0, 0xd7e, 0xa1d2, 0xf8db, 0x1, 0x1);
        gbc.writeMem(0xad4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 009D
        gbc.setState(0x1803, 0x2458, 0x6130, 0x3872, 0x3e70, 0x1b59, 0x0, 0x0);
        gbc.writeMem(0x1803, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2458, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 009E
        gbc.setState(0xd47d, 0x3025, 0x1030, 0xb953, 0xe25f, 0xd441, 0x0, 0x1);
        gbc.writeMem(0xd47d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3025, gbc.sp());
        EXPECT(0xd47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47d));
        EXPECT(0xff, gbc.readMem(0xd47e));
        // CB FF 009F
        gbc.setState(0xbcca, 0x6d45, 0x1dd0, 0x28fe, 0x97b9, 0x17a1, 0x0, 0x0);
        gbc.writeMem(0xbcca, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0xbccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcca));
        EXPECT(0xff, gbc.readMem(0xbccb));
        // CB FF 00A0
        gbc.setState(0x3219, 0x181a, 0x8310, 0x815e, 0x8336, 0x525c, 0x0, 0x1);
        gbc.writeMem(0x3219, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00A1
        gbc.setState(0xad7f, 0xe9d9, 0xf20, 0x5961, 0x283e, 0xdec1, 0x0, 0x0);
        gbc.writeMem(0xad7f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0xad81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7f));
        EXPECT(0xff, gbc.readMem(0xad80));
        // CB FF 00A2
        gbc.setState(0xc15b, 0x5701, 0x34d0, 0x245f, 0x4380, 0xbdc4, 0x1, 0x0);
        gbc.writeMem(0xc15b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5701, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15b));
        EXPECT(0xff, gbc.readMem(0xc15c));
        // CB FF 00A3
        gbc.setState(0x2257, 0xd2b1, 0x1a40, 0x568e, 0x82b9, 0x843b, 0x1, 0x0);
        gbc.writeMem(0x2257, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0x2259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00A4
        gbc.setState(0x2f87, 0xe582, 0xa910, 0x2455, 0x2879, 0x8f1, 0x0, 0x0);
        gbc.writeMem(0x2f87, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x2f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00A5
        gbc.setState(0x59b8, 0x8225, 0x960, 0x716f, 0xba98, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x59b8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0x59ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00A7
        gbc.setState(0x2259, 0xaedc, 0x8670, 0xdeb7, 0x9e60, 0x5671, 0x0, 0x1);
        gbc.writeMem(0x2259, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaedc, gbc.sp());
        EXPECT(0x225b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00A8
        gbc.setState(0x61b5, 0x5fce, 0x3b60, 0x94b1, 0x4cf4, 0x4520, 0x1, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5fce, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00A9
        gbc.setState(0x4aa7, 0x2c6e, 0x7370, 0x9b2a, 0x6b79, 0xb211, 0x0, 0x1);
        gbc.writeMem(0x4aa7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2c6e, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00AA
        gbc.setState(0xe6d3, 0x6639, 0x6930, 0x7060, 0x1f36, 0x429b, 0x0, 0x1);
        gbc.writeMem(0xe6d3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d3));
        EXPECT(0xff, gbc.readMem(0xe6d4));
        // CB FF 00AB
        gbc.setState(0x9410, 0x6522, 0x17a0, 0xa152, 0xf0b6, 0xc90c, 0x1, 0x0);
        gbc.writeMem(0x9410, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x9412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9410));
        EXPECT(0xff, gbc.readMem(0x9411));
        // CB FF 00AC
        gbc.setState(0x7cda, 0x50fd, 0x62a0, 0xed7, 0xcd38, 0x24d3, 0x1, 0x0);
        gbc.writeMem(0x7cda, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0x7cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00AD
        gbc.setState(0x41b6, 0xd9b8, 0xdab0, 0x1dd4, 0x79ea, 0x6ab1, 0x0, 0x0);
        gbc.writeMem(0x41b6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd9b8, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00AE
        gbc.setState(0x86f0, 0x8c05, 0xbc60, 0x8a38, 0x75f, 0xcfdd, 0x0, 0x1);
        gbc.writeMem(0x86f0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c05, gbc.sp());
        EXPECT(0x86f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f0));
        EXPECT(0xff, gbc.readMem(0x86f1));
        // CB FF 00AF
        gbc.setState(0x38f, 0xc92d, 0x4680, 0xfe3, 0x8501, 0x7b19, 0x1, 0x0);
        gbc.writeMem(0x38f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0x391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00B0
        gbc.setState(0x18bb, 0x8ca6, 0x6110, 0x7abf, 0x7bbb, 0xac3, 0x0, 0x1);
        gbc.writeMem(0x18bb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0x18bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00B1
        gbc.setState(0x9257, 0xface, 0x6980, 0xb0e7, 0x943b, 0x8dc8, 0x0, 0x0);
        gbc.writeMem(0x9257, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xface, gbc.sp());
        EXPECT(0x9259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9257));
        EXPECT(0xff, gbc.readMem(0x9258));
        // CB FF 00B2
        gbc.setState(0x29c7, 0x9bd5, 0x39f0, 0xc104, 0xf3ce, 0xffde, 0x1, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9bd5, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00B3
        gbc.setState(0x5218, 0x55a, 0x42a0, 0x9f0d, 0x67ce, 0x6790, 0x0, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0x521a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00B4
        gbc.setState(0x9a6e, 0xbd0e, 0xd480, 0xab73, 0x1976, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x9a6e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbd0e, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6e));
        EXPECT(0xff, gbc.readMem(0x9a6f));
        // CB FF 00B5
        gbc.setState(0x2e90, 0xae4e, 0xcfe0, 0xf989, 0xf9cf, 0xb172, 0x0, 0x0);
        gbc.writeMem(0x2e90, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xae4e, gbc.sp());
        EXPECT(0x2e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00B6
        gbc.setState(0x943d, 0x74dd, 0xd4a0, 0x1d40, 0xb212, 0xe18b, 0x1, 0x1);
        gbc.writeMem(0x943d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x74dd, gbc.sp());
        EXPECT(0x943f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943d));
        EXPECT(0xff, gbc.readMem(0x943e));
        // CB FF 00B7
        gbc.setState(0xdd85, 0x2485, 0xa8b0, 0xca43, 0xa730, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0xdd85, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2485, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd85));
        EXPECT(0xff, gbc.readMem(0xdd86));
        // CB FF 00B8
        gbc.setState(0x2e1a, 0x59c1, 0x38c0, 0x2039, 0xe7ab, 0x176e, 0x0, 0x0);
        gbc.writeMem(0x2e1a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x59c1, gbc.sp());
        EXPECT(0x2e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00B9
        gbc.setState(0x89e3, 0xa224, 0xb750, 0xfb1e, 0xd4d, 0xa2b0, 0x0, 0x1);
        gbc.writeMem(0x89e3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa224, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e3));
        EXPECT(0xff, gbc.readMem(0x89e4));
        // CB FF 00BA
        gbc.setState(0x859d, 0x177e, 0x6610, 0xbc83, 0x2692, 0xfff6, 0x1, 0x1);
        gbc.writeMem(0x859d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x177e, gbc.sp());
        EXPECT(0x859f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859d));
        EXPECT(0xff, gbc.readMem(0x859e));
        // CB FF 00BB
        gbc.setState(0x4627, 0x3d53, 0xb980, 0x85cf, 0x9107, 0x61da, 0x0, 0x1);
        gbc.writeMem(0x4627, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00BC
        gbc.setState(0xe842, 0x4283, 0xb9a0, 0x6a72, 0x5f2f, 0xc4d3, 0x1, 0x0);
        gbc.writeMem(0xe842, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4283, gbc.sp());
        EXPECT(0xe844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe842));
        EXPECT(0xff, gbc.readMem(0xe843));
        // CB FF 00BD
        gbc.setState(0x9369, 0x4828, 0xa650, 0x17a1, 0xbec8, 0x315a, 0x1, 0x0);
        gbc.writeMem(0x9369, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x936b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9369));
        EXPECT(0xff, gbc.readMem(0x936a));
        // CB FF 00BE
        gbc.setState(0x3d4e, 0x8086, 0xf140, 0x1be5, 0xd25f, 0xab3, 0x1, 0x1);
        gbc.writeMem(0x3d4e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8086, gbc.sp());
        EXPECT(0x3d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00BF
        gbc.setState(0x1cbd, 0x9f12, 0x2010, 0x8da8, 0x1e26, 0x54ec, 0x1, 0x1);
        gbc.writeMem(0x1cbd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9f12, gbc.sp());
        EXPECT(0x1cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00C0
        gbc.setState(0xd3b5, 0x293e, 0xc660, 0x31ad, 0x39dd, 0x58bd, 0x0, 0x0);
        gbc.writeMem(0xd3b5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0xd3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b5));
        EXPECT(0xff, gbc.readMem(0xd3b6));
        // CB FF 00C1
        gbc.setState(0xc6a5, 0x2e0a, 0xb380, 0x6fbb, 0x7422, 0x5bca, 0x0, 0x0);
        gbc.writeMem(0xc6a5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a5));
        EXPECT(0xff, gbc.readMem(0xc6a6));
        // CB FF 00C2
        gbc.setState(0x2df3, 0x297d, 0x5b30, 0x9dd3, 0xbb97, 0xaafb, 0x1, 0x0);
        gbc.writeMem(0x2df3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0x2df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00C3
        gbc.setState(0x5fd1, 0xfd72, 0xd080, 0x5b43, 0x2ba1, 0xb732, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00C4
        gbc.setState(0x4401, 0x1bfe, 0x7ef0, 0x95de, 0x6eae, 0xa550, 0x1, 0x1);
        gbc.writeMem(0x4401, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x4403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00C5
        gbc.setState(0x54ea, 0x5c57, 0xe950, 0x270, 0x97a9, 0xbc92, 0x1, 0x1);
        gbc.writeMem(0x54ea, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c57, gbc.sp());
        EXPECT(0x54ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00C6
        gbc.setState(0x9712, 0x72cd, 0x5fa0, 0xe431, 0xf885, 0xba6, 0x1, 0x1);
        gbc.writeMem(0x9712, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x9714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9712));
        EXPECT(0xff, gbc.readMem(0x9713));
        // CB FF 00C7
        gbc.setState(0x928a, 0x10a7, 0x8a80, 0x5ae9, 0xcca1, 0x23c2, 0x0, 0x1);
        gbc.writeMem(0x928a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x10a7, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928a));
        EXPECT(0xff, gbc.readMem(0x928b));
        // CB FF 00C8
        gbc.setState(0xddfa, 0x2fcd, 0x2750, 0xf6af, 0x20b3, 0x223a, 0x1, 0x0);
        gbc.writeMem(0xddfa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2fcd, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfa));
        EXPECT(0xff, gbc.readMem(0xddfb));
        // CB FF 00C9
        gbc.setState(0xbe7e, 0x5e92, 0x4240, 0xe0db, 0x5698, 0xc0ad, 0x0, 0x1);
        gbc.writeMem(0xbe7e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5e92, gbc.sp());
        EXPECT(0xbe80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7e));
        EXPECT(0xff, gbc.readMem(0xbe7f));
        // CB FF 00CA
        gbc.setState(0x48d2, 0x467d, 0xc2d0, 0x12b8, 0x3636, 0x7f59, 0x0, 0x0);
        gbc.writeMem(0x48d2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x467d, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00CB
        gbc.setState(0xd9c6, 0x52b1, 0xd150, 0xde3d, 0x7b87, 0xe27c, 0x1, 0x0);
        gbc.writeMem(0xd9c6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0xd9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c6));
        EXPECT(0xff, gbc.readMem(0xd9c7));
        // CB FF 00CC
        gbc.setState(0x1a33, 0xcf12, 0x4480, 0x879b, 0x98f3, 0x71cb, 0x0, 0x0);
        gbc.writeMem(0x1a33, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00CD
        gbc.setState(0xa34f, 0xd98b, 0x1c40, 0xad3, 0x880, 0x8cee, 0x1, 0x1);
        gbc.writeMem(0xa34f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0xa351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34f));
        EXPECT(0xff, gbc.readMem(0xa350));
        // CB FF 00CE
        gbc.setState(0x1d35, 0x5bcb, 0xfb50, 0x8dfe, 0xca64, 0xee60, 0x0, 0x1);
        gbc.writeMem(0x1d35, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x1d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00CF
        gbc.setState(0x42a4, 0x9c1b, 0x7d0, 0xfe38, 0xc281, 0x9538, 0x0, 0x1);
        gbc.writeMem(0x42a4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9c1b, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00D0
        gbc.setState(0x21e7, 0x9904, 0xe0c0, 0x3231, 0x8649, 0xcd85, 0x0, 0x0);
        gbc.writeMem(0x21e7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9904, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00D1
        gbc.setState(0x77c4, 0x17c6, 0xd630, 0xb499, 0x7946, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x77c4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x17c6, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00D2
        gbc.setState(0x8564, 0x58f6, 0xd0d0, 0xbe2c, 0x2836, 0x7c06, 0x0, 0x1);
        gbc.writeMem(0x8564, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0x8566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8564));
        EXPECT(0xff, gbc.readMem(0x8565));
        // CB FF 00D4
        gbc.setState(0x8194, 0x6115, 0x8650, 0x2262, 0x8c00, 0x811e, 0x1, 0x0);
        gbc.writeMem(0x8194, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x8196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8194));
        EXPECT(0xff, gbc.readMem(0x8195));
        // CB FF 00D5
        gbc.setState(0xa464, 0xa784, 0xd060, 0x1438, 0x4064, 0x1c83, 0x1, 0x1);
        gbc.writeMem(0xa464, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa784, gbc.sp());
        EXPECT(0xa466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa464));
        EXPECT(0xff, gbc.readMem(0xa465));
        // CB FF 00D6
        gbc.setState(0xce0e, 0xf597, 0xc4d0, 0x9f7c, 0x924, 0x1fe5, 0x0, 0x0);
        gbc.writeMem(0xce0e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf597, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0e));
        EXPECT(0xff, gbc.readMem(0xce0f));
        // CB FF 00D7
        gbc.setState(0x7134, 0x31f6, 0x4640, 0xbd6a, 0x422, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x7134, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x31f6, gbc.sp());
        EXPECT(0x7136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00D8
        gbc.setState(0x4db, 0xccae, 0x24e0, 0xd2f3, 0xafdd, 0xa6ce, 0x0, 0x1);
        gbc.writeMem(0x4db, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0x4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00D9
        gbc.setState(0xa2ca, 0x62f0, 0x6e70, 0x606c, 0x1d0f, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xa2ca, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x62f0, gbc.sp());
        EXPECT(0xa2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ca));
        EXPECT(0xff, gbc.readMem(0xa2cb));
        // CB FF 00DA
        gbc.setState(0x9769, 0x535c, 0x27b0, 0x2e1b, 0xd7e2, 0x777d, 0x1, 0x0);
        gbc.writeMem(0x9769, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x976b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9769));
        EXPECT(0xff, gbc.readMem(0x976a));
        // CB FF 00DB
        gbc.setState(0x76fc, 0xdfa8, 0x7b00, 0x3ddc, 0x3da4, 0x5d2f, 0x0, 0x1);
        gbc.writeMem(0x76fc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdfa8, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00DC
        gbc.setState(0xca6b, 0x7f49, 0xa3c0, 0x88aa, 0x8566, 0x208b, 0x1, 0x1);
        gbc.writeMem(0xca6b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f49, gbc.sp());
        EXPECT(0xca6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6b));
        EXPECT(0xff, gbc.readMem(0xca6c));
        // CB FF 00DD
        gbc.setState(0xfc1, 0x148e, 0x9930, 0xcc7c, 0xcf14, 0x5bb4, 0x1, 0x0);
        gbc.writeMem(0xfc1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0xfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00DE
        gbc.setState(0x9d78, 0x2928, 0x80, 0x81fe, 0xe781, 0xe88e, 0x0, 0x1);
        gbc.writeMem(0x9d78, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2928, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0xff, gbc.readMem(0x9d79));
        // CB FF 00E0
        gbc.setState(0xd271, 0x93cb, 0x6990, 0x22cb, 0xc6a, 0x47e7, 0x1, 0x0);
        gbc.writeMem(0xd271, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93cb, gbc.sp());
        EXPECT(0xd273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd271));
        EXPECT(0xff, gbc.readMem(0xd272));
        // CB FF 00E1
        gbc.setState(0x6cb6, 0xbc40, 0x2780, 0xac9a, 0x9158, 0xc24d, 0x1, 0x0);
        gbc.writeMem(0x6cb6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbc40, gbc.sp());
        EXPECT(0x6cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00E2
        gbc.setState(0xdb70, 0x9a4e, 0xfdf0, 0xca3c, 0x67c4, 0x828f, 0x1, 0x0);
        gbc.writeMem(0xdb70, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9a4e, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb70));
        EXPECT(0xff, gbc.readMem(0xdb71));
        // CB FF 00E3
        gbc.setState(0x32da, 0x6899, 0xc430, 0xbcc1, 0x3fe3, 0x2c1d, 0x1, 0x1);
        gbc.writeMem(0x32da, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6899, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00E4
        gbc.setState(0xb141, 0xa51c, 0x7e70, 0xe143, 0x2035, 0xd205, 0x1, 0x0);
        gbc.writeMem(0xb141, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb141));
        EXPECT(0xff, gbc.readMem(0xb142));
        // CB FF 00E5
        gbc.setState(0x9e60, 0x6b0, 0x5850, 0xf153, 0x5f1b, 0x747f, 0x1, 0x0);
        gbc.writeMem(0x9e60, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6b0, gbc.sp());
        EXPECT(0x9e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e60));
        EXPECT(0xff, gbc.readMem(0x9e61));
        // CB FF 00E6
        gbc.setState(0xfd7, 0xa8ca, 0xd990, 0x575, 0x22a0, 0x351f, 0x0, 0x0);
        gbc.writeMem(0xfd7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa8ca, gbc.sp());
        EXPECT(0xfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00E8
        gbc.setState(0x1e69, 0x39ff, 0x5270, 0x5c01, 0xfa04, 0xdab, 0x1, 0x0);
        gbc.writeMem(0x1e69, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0x1e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00E9
        gbc.setState(0x432d, 0xc3c1, 0xeeb0, 0xc2fa, 0x2a70, 0x7790, 0x0, 0x0);
        gbc.writeMem(0x432d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc3c1, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00EA
        gbc.setState(0xda95, 0x1d17, 0x8eb0, 0x99c8, 0x3702, 0x3a6c, 0x1, 0x0);
        gbc.writeMem(0xda95, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1d17, gbc.sp());
        EXPECT(0xda97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda95));
        EXPECT(0xff, gbc.readMem(0xda96));
        // CB FF 00EC
        gbc.setState(0xd525, 0xb86, 0xa150, 0xa15f, 0xc84e, 0xe261, 0x0, 0x1);
        gbc.writeMem(0xd525, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb86, gbc.sp());
        EXPECT(0xd527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd525));
        EXPECT(0xff, gbc.readMem(0xd526));
        // CB FF 00ED
        gbc.setState(0x3142, 0x8b4a, 0xdf90, 0x63f6, 0x3beb, 0xe0d3, 0x1, 0x0);
        gbc.writeMem(0x3142, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8b4a, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00EE
        gbc.setState(0x7913, 0xa21b, 0xde0, 0x8ccb, 0x2082, 0x93b4, 0x0, 0x0);
        gbc.writeMem(0x7913, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00EF
        gbc.setState(0x24a2, 0xf26e, 0xf450, 0x8140, 0x37ca, 0xb039, 0x0, 0x0);
        gbc.writeMem(0x24a2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf26e, gbc.sp());
        EXPECT(0x24a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00F0
        gbc.setState(0x945d, 0x2be, 0xb550, 0xebf7, 0xfbb4, 0x2a08, 0x1, 0x1);
        gbc.writeMem(0x945d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x945f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945d));
        EXPECT(0xff, gbc.readMem(0x945e));
        // CB FF 00F1
        gbc.setState(0x3291, 0xeb0c, 0x3370, 0x5c58, 0x9f1f, 0x2deb, 0x0, 0x1);
        gbc.writeMem(0x3291, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb0c, gbc.sp());
        EXPECT(0x3293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00F2
        gbc.setState(0x907f, 0xf244, 0xd650, 0xddba, 0x9960, 0x5a50, 0x0, 0x1);
        gbc.writeMem(0x907f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907f));
        EXPECT(0xff, gbc.readMem(0x9080));
        // CB FF 00F3
        gbc.setState(0xdbd3, 0x9c6e, 0xf9b0, 0x80cd, 0x7d51, 0xeb4c, 0x1, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0xff, gbc.readMem(0xdbd4));
        // CB FF 00F4
        gbc.setState(0xad3a, 0xa862, 0x42c0, 0xd892, 0x2d8a, 0x1a55, 0x0, 0x1);
        gbc.writeMem(0xad3a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa862, gbc.sp());
        EXPECT(0xad3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3a));
        EXPECT(0xff, gbc.readMem(0xad3b));
        // CB FF 00F6
        gbc.setState(0x9d7f, 0xa653, 0x9df0, 0x375, 0xccc7, 0xde40, 0x0, 0x1);
        gbc.writeMem(0x9d7f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa653, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7f));
        EXPECT(0xff, gbc.readMem(0x9d80));
        // CB FF 00F7
        gbc.setState(0x3d58, 0x51fe, 0xd2e0, 0x935, 0x537, 0x62d4, 0x0, 0x0);
        gbc.writeMem(0x3d58, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x3d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00F8
        gbc.setState(0xa86c, 0xff18, 0x4f10, 0xf49f, 0x5893, 0x65cd, 0x1, 0x1);
        gbc.writeMem(0xa86c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0xa86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86c));
        EXPECT(0xff, gbc.readMem(0xa86d));
        // CB FF 00F9
        gbc.setState(0x6f1f, 0x44a3, 0xd070, 0xccf7, 0x8c4b, 0x2245, 0x1, 0x0);
        gbc.writeMem(0x6f1f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x44a3, gbc.sp());
        EXPECT(0x6f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 00FA
        gbc.setState(0xbdaf, 0x1691, 0x45b0, 0xfc14, 0x311b, 0x8559, 0x1, 0x0);
        gbc.writeMem(0xbdaf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0xbdb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdaf));
        EXPECT(0xff, gbc.readMem(0xbdb0));
        // CB FF 00FB
        gbc.setState(0x9ba, 0x2e1e, 0xedc0, 0x4844, 0x79ef, 0x72c6, 0x1, 0x0);
        gbc.writeMem(0x9ba, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2e1e, gbc.sp());
        EXPECT(0x9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00FC
        gbc.setState(0xa493, 0xfb06, 0x9670, 0x4d9, 0x6b65, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0xa493, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0xa495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa493));
        EXPECT(0xff, gbc.readMem(0xa494));
        // CB FF 00FD
        gbc.setState(0x2688, 0xd8da, 0xd740, 0x75be, 0x5102, 0x33b3, 0x1, 0x1);
        gbc.writeMem(0x2688, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0x268a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00FE
        gbc.setState(0x7f3d, 0xfde5, 0x9ae0, 0xe560, 0x92ad, 0xba95, 0x1, 0x1);
        gbc.writeMem(0x7f3d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0x7f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 00FF
        gbc.setState(0xe920, 0xedb4, 0xd7f0, 0xa59c, 0xce7f, 0xa809, 0x1, 0x0);
        gbc.writeMem(0xe920, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xedb4, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe920));
        EXPECT(0xff, gbc.readMem(0xe921));
        // CB FF 0100
        gbc.setState(0xe3e4, 0x8285, 0x3d30, 0xe12c, 0x1177, 0x37bf, 0x0, 0x0);
        gbc.writeMem(0xe3e4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8285, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e4));
        EXPECT(0xff, gbc.readMem(0xe3e5));
        // CB FF 0101
        gbc.setState(0x56f2, 0x804e, 0x86e0, 0x9cb9, 0x73c9, 0x8628, 0x1, 0x0);
        gbc.writeMem(0x56f2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x804e, gbc.sp());
        EXPECT(0x56f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0102
        gbc.setState(0x1dfc, 0xf429, 0x8de0, 0x1272, 0x33c7, 0x50eb, 0x1, 0x1);
        gbc.writeMem(0x1dfc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf429, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0103
        gbc.setState(0x4ec0, 0xbfd0, 0x4b40, 0xcb5c, 0x7b09, 0xeafb, 0x1, 0x0);
        gbc.writeMem(0x4ec0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbfd0, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0104
        gbc.setState(0xd580, 0xc4de, 0x7260, 0x5f1f, 0xefaf, 0xf928, 0x1, 0x0);
        gbc.writeMem(0xd580, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0xd582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd580));
        EXPECT(0xff, gbc.readMem(0xd581));
        // CB FF 0105
        gbc.setState(0x85a3, 0xe6e, 0xab00, 0x28cb, 0xc747, 0x13a, 0x1, 0x1);
        gbc.writeMem(0x85a3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe6e, gbc.sp());
        EXPECT(0x85a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a3));
        EXPECT(0xff, gbc.readMem(0x85a4));
        // CB FF 0106
        gbc.setState(0x8196, 0x2423, 0xfcb0, 0x8419, 0x1deb, 0x29d5, 0x0, 0x1);
        gbc.writeMem(0x8196, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2423, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0xff, gbc.readMem(0x8197));
        // CB FF 0107
        gbc.setState(0x54c0, 0x3265, 0xcd80, 0x6467, 0xd8c5, 0x1d11, 0x1, 0x0);
        gbc.writeMem(0x54c0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3265, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0108
        gbc.setState(0x2155, 0x4782, 0xd7f0, 0xa98e, 0x9030, 0xc477, 0x1, 0x1);
        gbc.writeMem(0x2155, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0x2157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0109
        gbc.setState(0x90a8, 0x209c, 0xfb40, 0x702d, 0x19a6, 0xe6ea, 0x1, 0x0);
        gbc.writeMem(0x90a8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x209c, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a8));
        EXPECT(0xff, gbc.readMem(0x90a9));
        // CB FF 010B
        gbc.setState(0xa33b, 0x6798, 0x77c0, 0x9dcf, 0x69ad, 0x2f40, 0x0, 0x1);
        gbc.writeMem(0xa33b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6798, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33b));
        EXPECT(0xff, gbc.readMem(0xa33c));
        // CB FF 010C
        gbc.setState(0x2447, 0x6902, 0x3ab0, 0x1bbd, 0x2e88, 0x60b6, 0x0, 0x0);
        gbc.writeMem(0x2447, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 010D
        gbc.setState(0x333, 0x23d1, 0xbcc0, 0x32fc, 0x57f7, 0x8b91, 0x1, 0x0);
        gbc.writeMem(0x333, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 010E
        gbc.setState(0x4d53, 0xbd59, 0x27f0, 0x33cc, 0xaef5, 0x5c86, 0x1, 0x0);
        gbc.writeMem(0x4d53, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbd59, gbc.sp());
        EXPECT(0x4d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 010F
        gbc.setState(0xe129, 0x219d, 0x5ae0, 0x764, 0xbd89, 0x773c, 0x0, 0x1);
        gbc.writeMem(0xe129, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x219d, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe129));
        EXPECT(0xff, gbc.readMem(0xe12a));
        // CB FF 0110
        gbc.setState(0x6530, 0xf1ac, 0x9170, 0xc2cf, 0xdfc1, 0x87dc, 0x1, 0x1);
        gbc.writeMem(0x6530, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf1ac, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0111
        gbc.setState(0x8667, 0x759e, 0xd060, 0xfc69, 0x7f78, 0xd55c, 0x1, 0x1);
        gbc.writeMem(0x8667, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x759e, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8667));
        EXPECT(0xff, gbc.readMem(0x8668));
        // CB FF 0112
        gbc.setState(0xa61b, 0x63c9, 0xf5a0, 0x8f68, 0x57f6, 0x3ffa, 0x0, 0x0);
        gbc.writeMem(0xa61b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61b));
        EXPECT(0xff, gbc.readMem(0xa61c));
        // CB FF 0113
        gbc.setState(0xee1d, 0x95fa, 0x6550, 0x5ae7, 0x546b, 0xf157, 0x0, 0x0);
        gbc.writeMem(0xee1d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0xee1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1d));
        EXPECT(0xff, gbc.readMem(0xee1e));
        // CB FF 0114
        gbc.setState(0xbe24, 0xd661, 0x71d0, 0x8fea, 0x66bd, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd661, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0xff, gbc.readMem(0xbe25));
        // CB FF 0115
        gbc.setState(0x7c00, 0x7a55, 0xc7f0, 0xeadc, 0x65d1, 0xea69, 0x1, 0x0);
        gbc.writeMem(0x7c00, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7a55, gbc.sp());
        EXPECT(0x7c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0117
        gbc.setState(0xc313, 0x47da, 0xf340, 0x41c8, 0x216a, 0x6b08, 0x1, 0x0);
        gbc.writeMem(0xc313, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x47da, gbc.sp());
        EXPECT(0xc315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc313));
        EXPECT(0xff, gbc.readMem(0xc314));
        // CB FF 0119
        gbc.setState(0x3b69, 0x3583, 0x88c0, 0x4ad0, 0x62bd, 0x3563, 0x0, 0x0);
        gbc.writeMem(0x3b69, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x3b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 011A
        gbc.setState(0xd6b5, 0x3465, 0x5ae0, 0x16b8, 0x377a, 0x854a, 0x1, 0x1);
        gbc.writeMem(0xd6b5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3465, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b5));
        EXPECT(0xff, gbc.readMem(0xd6b6));
        // CB FF 011D
        gbc.setState(0xef6e, 0xac90, 0x8610, 0x3647, 0xfae5, 0x469d, 0x1, 0x1);
        gbc.writeMem(0xef6e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xac90, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6e));
        EXPECT(0xff, gbc.readMem(0xef6f));
        // CB FF 011E
        gbc.setState(0xd13e, 0x6e2e, 0x6b90, 0x84, 0xd255, 0xefd8, 0x0, 0x0);
        gbc.writeMem(0xd13e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13e));
        EXPECT(0xff, gbc.readMem(0xd13f));
        // CB FF 011F
        gbc.setState(0x9b67, 0xc5d8, 0x4060, 0x9106, 0x8357, 0x9883, 0x0, 0x0);
        gbc.writeMem(0x9b67, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b67));
        EXPECT(0xff, gbc.readMem(0x9b68));
        // CB FF 0120
        gbc.setState(0x247b, 0xe2fb, 0x87c0, 0xaad0, 0xdfa9, 0xaef0, 0x1, 0x0);
        gbc.writeMem(0x247b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe2fb, gbc.sp());
        EXPECT(0x247d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0121
        gbc.setState(0x182d, 0x63f5, 0x260, 0xc74f, 0x4c19, 0xb7de, 0x0, 0x1);
        gbc.writeMem(0x182d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x182f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0122
        gbc.setState(0xed55, 0xcba4, 0x5450, 0x1cfb, 0xaaac, 0xe729, 0x1, 0x1);
        gbc.writeMem(0xed55, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcba4, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0xff, gbc.readMem(0xed56));
        // CB FF 0123
        gbc.setState(0xb6f, 0x5d8e, 0x9240, 0x1332, 0xb652, 0xe9c2, 0x1, 0x1);
        gbc.writeMem(0xb6f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0xb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0124
        gbc.setState(0x8d2d, 0xdc39, 0xd3f0, 0xaf2b, 0x8553, 0x22c1, 0x1, 0x1);
        gbc.writeMem(0x8d2d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0x8d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d2d));
        EXPECT(0xff, gbc.readMem(0x8d2e));
        // CB FF 0125
        gbc.setState(0xc62e, 0xde1e, 0x2dc0, 0xe1ec, 0xe435, 0x7472, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0xc630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62e));
        EXPECT(0xff, gbc.readMem(0xc62f));
        // CB FF 0126
        gbc.setState(0x5afc, 0x2bfe, 0xfed0, 0x3bfc, 0x322e, 0xd856, 0x1, 0x1);
        gbc.writeMem(0x5afc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0128
        gbc.setState(0x38bb, 0x8f6c, 0x9580, 0xddb3, 0x6639, 0xb99c, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f6c, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0129
        gbc.setState(0xa5a7, 0x9cbd, 0x1cd0, 0xf88e, 0x6272, 0x47fa, 0x1, 0x0);
        gbc.writeMem(0xa5a7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9cbd, gbc.sp());
        EXPECT(0xa5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a7));
        EXPECT(0xff, gbc.readMem(0xa5a8));
        // CB FF 012A
        gbc.setState(0xb15b, 0xadb8, 0xc730, 0x97e1, 0x64f7, 0xbc49, 0x1, 0x0);
        gbc.writeMem(0xb15b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15b));
        EXPECT(0xff, gbc.readMem(0xb15c));
        // CB FF 012B
        gbc.setState(0xcbac, 0xf768, 0x1270, 0x15f9, 0x8f2d, 0x9281, 0x1, 0x0);
        gbc.writeMem(0xcbac, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf768, gbc.sp());
        EXPECT(0xcbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbac));
        EXPECT(0xff, gbc.readMem(0xcbad));
        // CB FF 012C
        gbc.setState(0x3f3, 0x9b08, 0xb6f0, 0xdb28, 0xb6d8, 0x5bef, 0x0, 0x0);
        gbc.writeMem(0x3f3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 012D
        gbc.setState(0xcbf9, 0x44d5, 0xfc10, 0x805f, 0x9927, 0x2970, 0x0, 0x0);
        gbc.writeMem(0xcbf9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf9));
        EXPECT(0xff, gbc.readMem(0xcbfa));
        // CB FF 012E
        gbc.setState(0x5436, 0x9d86, 0xed30, 0x1129, 0x2438, 0x11ce, 0x0, 0x1);
        gbc.writeMem(0x5436, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x5438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 012F
        gbc.setState(0xa35b, 0xc279, 0x7180, 0x717d, 0xf364, 0x6f80, 0x0, 0x0);
        gbc.writeMem(0xa35b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc279, gbc.sp());
        EXPECT(0xa35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35b));
        EXPECT(0xff, gbc.readMem(0xa35c));
        // CB FF 0130
        gbc.setState(0x2620, 0x6f00, 0x8c0, 0x42c6, 0x6f5f, 0x2c7, 0x0, 0x0);
        gbc.writeMem(0x2620, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6f00, gbc.sp());
        EXPECT(0x2622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0131
        gbc.setState(0xdf04, 0x8a5d, 0xafa0, 0xea7c, 0xe5d5, 0xefec, 0x1, 0x0);
        gbc.writeMem(0xdf04, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf04));
        EXPECT(0xff, gbc.readMem(0xdf05));
        // CB FF 0132
        gbc.setState(0xd7df, 0x41ae, 0xc370, 0x3a8c, 0x736d, 0x3446, 0x0, 0x0);
        gbc.writeMem(0xd7df, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x41ae, gbc.sp());
        EXPECT(0xd7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7df));
        EXPECT(0xff, gbc.readMem(0xd7e0));
        // CB FF 0133
        gbc.setState(0xd56a, 0x8647, 0x7f00, 0x6e70, 0xf1f5, 0x7215, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56a));
        EXPECT(0xff, gbc.readMem(0xd56b));
        // CB FF 0134
        gbc.setState(0x416d, 0xb074, 0x5100, 0x1834, 0x2ca0, 0x21c5, 0x0, 0x0);
        gbc.writeMem(0x416d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x416f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0135
        gbc.setState(0x1df5, 0x4d2f, 0xc2d0, 0xa11e, 0x9f45, 0x7b72, 0x0, 0x1);
        gbc.writeMem(0x1df5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0136
        gbc.setState(0x5e21, 0xc483, 0xab20, 0x8f10, 0x340a, 0xac7d, 0x0, 0x1);
        gbc.writeMem(0x5e21, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x5e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0137
        gbc.setState(0x500c, 0x63a8, 0xd9a0, 0xddc1, 0x5ba1, 0xb4b6, 0x1, 0x0);
        gbc.writeMem(0x500c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x63a8, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0138
        gbc.setState(0xdf09, 0xac51, 0x8b80, 0x5093, 0x8b36, 0x6656, 0x1, 0x1);
        gbc.writeMem(0xdf09, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xdf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf09));
        EXPECT(0xff, gbc.readMem(0xdf0a));
        // CB FF 0139
        gbc.setState(0x83e8, 0x48b6, 0xfe10, 0x4eaf, 0x5273, 0xf75e, 0x1, 0x1);
        gbc.writeMem(0x83e8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e8));
        EXPECT(0xff, gbc.readMem(0x83e9));
        // CB FF 013A
        gbc.setState(0x8ace, 0x5cee, 0x2b10, 0x6967, 0x7093, 0xafe, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5cee, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0xff, gbc.readMem(0x8acf));
        // CB FF 013B
        gbc.setState(0xd7ee, 0xd4a2, 0xd340, 0x7132, 0x9a53, 0x7376, 0x0, 0x0);
        gbc.writeMem(0xd7ee, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd4a2, gbc.sp());
        EXPECT(0xd7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ee));
        EXPECT(0xff, gbc.readMem(0xd7ef));
        // CB FF 013C
        gbc.setState(0xda59, 0x2e02, 0x92c0, 0xf4de, 0x9b68, 0x558a, 0x0, 0x1);
        gbc.writeMem(0xda59, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2e02, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda59));
        EXPECT(0xff, gbc.readMem(0xda5a));
        // CB FF 013D
        gbc.setState(0x2407, 0x5ef6, 0x6f00, 0xf042, 0x8fe4, 0xd2d3, 0x0, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5ef6, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 013E
        gbc.setState(0xc0a6, 0x1b6d, 0x1ce0, 0xc3cd, 0x8a1c, 0xd761, 0x1, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1b6d, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0xff, gbc.readMem(0xc0a7));
        // CB FF 013F
        gbc.setState(0x5666, 0xabdc, 0x470, 0xc57e, 0x1df6, 0x7b46, 0x1, 0x0);
        gbc.writeMem(0x5666, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xabdc, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0140
        gbc.setState(0x784e, 0xbba8, 0x6ed0, 0x6d59, 0x9d65, 0xdb81, 0x1, 0x1);
        gbc.writeMem(0x784e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0141
        gbc.setState(0x92e, 0x492d, 0x3c0, 0x33f5, 0xbeb3, 0x4186, 0x1, 0x1);
        gbc.writeMem(0x92e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x492d, gbc.sp());
        EXPECT(0x930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0142
        gbc.setState(0x9159, 0x76d8, 0xb420, 0xf44c, 0xcb8f, 0xb9eb, 0x0, 0x0);
        gbc.writeMem(0x9159, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x76d8, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9159));
        EXPECT(0xff, gbc.readMem(0x915a));
        // CB FF 0143
        gbc.setState(0x6767, 0xee29, 0xa6d0, 0x59d8, 0x513c, 0x8310, 0x0, 0x0);
        gbc.writeMem(0x6767, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0x6769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0144
        gbc.setState(0xc1f6, 0xdc88, 0x7170, 0x36ea, 0xc72e, 0xd01f, 0x1, 0x0);
        gbc.writeMem(0xc1f6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0xc1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f6));
        EXPECT(0xff, gbc.readMem(0xc1f7));
        // CB FF 0145
        gbc.setState(0xe98, 0x1462, 0x5af0, 0x7101, 0x766b, 0xadee, 0x0, 0x1);
        gbc.writeMem(0xe98, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1462, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0146
        gbc.setState(0x798b, 0x9d73, 0xe6f0, 0xb792, 0xf8f9, 0xcdc, 0x1, 0x0);
        gbc.writeMem(0x798b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d73, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0147
        gbc.setState(0x4ab2, 0xf714, 0x7a40, 0x9687, 0x2f78, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0x4ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0148
        gbc.setState(0xed1c, 0xa377, 0x6810, 0x846e, 0x5205, 0x6925, 0x1, 0x0);
        gbc.writeMem(0xed1c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa377, gbc.sp());
        EXPECT(0xed1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1c));
        EXPECT(0xff, gbc.readMem(0xed1d));
        // CB FF 014A
        gbc.setState(0x625d, 0xdd12, 0xc250, 0x4611, 0xca7d, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0x625d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd12, gbc.sp());
        EXPECT(0x625f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 014B
        gbc.setState(0x8a56, 0x5ecf, 0x6e80, 0x2395, 0x506a, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0x8a56, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ecf, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a56));
        EXPECT(0xff, gbc.readMem(0x8a57));
        // CB FF 014C
        gbc.setState(0x1525, 0x8390, 0xef20, 0xcfd5, 0xdb30, 0x9895, 0x0, 0x1);
        gbc.writeMem(0x1525, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8390, gbc.sp());
        EXPECT(0x1527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 014D
        gbc.setState(0x2c56, 0xe2db, 0x7670, 0xb999, 0xdda, 0xc300, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe2db, gbc.sp());
        EXPECT(0x2c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 014E
        gbc.setState(0x4818, 0x8f9d, 0x1670, 0x7cc7, 0xb55c, 0x5505, 0x0, 0x0);
        gbc.writeMem(0x4818, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0x481a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 014F
        gbc.setState(0x1aa0, 0x3dda, 0x430, 0x46c3, 0x8611, 0x7ddd, 0x1, 0x0);
        gbc.writeMem(0x1aa0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3dda, gbc.sp());
        EXPECT(0x1aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0150
        gbc.setState(0x6287, 0xa15a, 0xe180, 0x3800, 0x8eb5, 0x837c, 0x1, 0x0);
        gbc.writeMem(0x6287, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0151
        gbc.setState(0x4131, 0x5616, 0xa6e0, 0xfd76, 0xbe97, 0x11e4, 0x0, 0x0);
        gbc.writeMem(0x4131, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5616, gbc.sp());
        EXPECT(0x4133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0152
        gbc.setState(0x5e07, 0xa968, 0x72a0, 0x7483, 0x60fe, 0x4aa7, 0x0, 0x1);
        gbc.writeMem(0x5e07, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa968, gbc.sp());
        EXPECT(0x5e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0155
        gbc.setState(0xc32b, 0xdf32, 0x32c0, 0x9f87, 0xbd93, 0xe0db, 0x1, 0x1);
        gbc.writeMem(0xc32b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf32, gbc.sp());
        EXPECT(0xc32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32b));
        EXPECT(0xff, gbc.readMem(0xc32c));
        // CB FF 0156
        gbc.setState(0x7c2a, 0xa785, 0x9c0, 0xdeda, 0xd665, 0x756a, 0x0, 0x0);
        gbc.writeMem(0x7c2a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa785, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0157
        gbc.setState(0xcbc1, 0x2b5f, 0x6930, 0x999d, 0x7d0a, 0xedec, 0x1, 0x1);
        gbc.writeMem(0xcbc1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b5f, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc1));
        EXPECT(0xff, gbc.readMem(0xcbc2));
        // CB FF 0158
        gbc.setState(0xb79e, 0xe797, 0x1630, 0x7fee, 0xa989, 0xba2d, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe797, gbc.sp());
        EXPECT(0xb7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79e));
        EXPECT(0xff, gbc.readMem(0xb79f));
        // CB FF 0159
        gbc.setState(0x788c, 0x9731, 0x36d0, 0x6d90, 0x89ac, 0x44c2, 0x1, 0x0);
        gbc.writeMem(0x788c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9731, gbc.sp());
        EXPECT(0x788e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 015A
        gbc.setState(0x4d47, 0x7d30, 0xd4e0, 0x697e, 0x9b4f, 0x3571, 0x0, 0x0);
        gbc.writeMem(0x4d47, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7d30, gbc.sp());
        EXPECT(0x4d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 015B
        gbc.setState(0xb318, 0x86e6, 0xe700, 0x57c8, 0x79e3, 0xd035, 0x0, 0x0);
        gbc.writeMem(0xb318, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0xb31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb318));
        EXPECT(0xff, gbc.readMem(0xb319));
        // CB FF 015C
        gbc.setState(0x742, 0x7db2, 0xa310, 0x2112, 0xe60f, 0x63d5, 0x1, 0x1);
        gbc.writeMem(0x742, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0x744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 015D
        gbc.setState(0xcaf3, 0xb34, 0x360, 0x9916, 0xa196, 0x7465, 0x1, 0x0);
        gbc.writeMem(0xcaf3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb34, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0xff, gbc.readMem(0xcaf4));
        // CB FF 015E
        gbc.setState(0xa000, 0x13fd, 0xf940, 0x4191, 0x80e, 0x442d, 0x0, 0x0);
        gbc.writeMem(0xa000, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x13fd, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0xff, gbc.readMem(0xa001));
        // CB FF 015F
        gbc.setState(0x3df8, 0xab18, 0xebe0, 0xba99, 0x4f82, 0xcb6c, 0x0, 0x1);
        gbc.writeMem(0x3df8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xab18, gbc.sp());
        EXPECT(0x3dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0160
        gbc.setState(0x334c, 0xd489, 0x8440, 0xaf6c, 0x1aa6, 0x1cc7, 0x1, 0x1);
        gbc.writeMem(0x334c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x334e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0161
        gbc.setState(0x58cb, 0x3518, 0xa430, 0x89f1, 0x184f, 0x27a7, 0x1, 0x0);
        gbc.writeMem(0x58cb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3518, gbc.sp());
        EXPECT(0x58cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0162
        gbc.setState(0xdec8, 0x8b04, 0x5840, 0x21c0, 0x9728, 0x2de3, 0x1, 0x1);
        gbc.writeMem(0xdec8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8b04, gbc.sp());
        EXPECT(0xdeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec8));
        EXPECT(0xff, gbc.readMem(0xdec9));
        // CB FF 0163
        gbc.setState(0xb777, 0x906e, 0x7fa0, 0x7c68, 0x37b1, 0x5499, 0x0, 0x0);
        gbc.writeMem(0xb777, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x906e, gbc.sp());
        EXPECT(0xb779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb777));
        EXPECT(0xff, gbc.readMem(0xb778));
        // CB FF 0165
        gbc.setState(0x25cc, 0x235, 0xb880, 0x2272, 0xb6b2, 0x9446, 0x1, 0x0);
        gbc.writeMem(0x25cc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0x25ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0166
        gbc.setState(0x1888, 0xff66, 0x8290, 0x1b01, 0x1399, 0x58c0, 0x1, 0x1);
        gbc.writeMem(0x1888, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xff66, gbc.sp());
        EXPECT(0x188a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0167
        gbc.setState(0x288f, 0x2521, 0xea20, 0x57a5, 0x47fd, 0x33e3, 0x0, 0x1);
        gbc.writeMem(0x288f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0x2891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0168
        gbc.setState(0x571d, 0xd3f6, 0x7d40, 0xac1a, 0xe1e9, 0x5bad, 0x0, 0x0);
        gbc.writeMem(0x571d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd3f6, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0169
        gbc.setState(0xbb45, 0x24c1, 0xc620, 0x1c51, 0xb56e, 0x9c0c, 0x0, 0x0);
        gbc.writeMem(0xbb45, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x24c1, gbc.sp());
        EXPECT(0xbb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb45));
        EXPECT(0xff, gbc.readMem(0xbb46));
        // CB FF 016A
        gbc.setState(0x5466, 0x5c07, 0x4190, 0xc7c4, 0xed28, 0x8b3b, 0x1, 0x1);
        gbc.writeMem(0x5466, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5c07, gbc.sp());
        EXPECT(0x5468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 016B
        gbc.setState(0x112c, 0x35d9, 0x9130, 0x92ba, 0x9381, 0x27cd, 0x0, 0x1);
        gbc.writeMem(0x112c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0x112e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 016C
        gbc.setState(0xaff1, 0x49d0, 0xfbb0, 0x6c3f, 0x46a1, 0xd194, 0x0, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x49d0, gbc.sp());
        EXPECT(0xaff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff1));
        EXPECT(0xff, gbc.readMem(0xaff2));
        // CB FF 016E
        gbc.setState(0x65b7, 0xaac1, 0xd750, 0x4231, 0xd9d6, 0x9a7, 0x1, 0x0);
        gbc.writeMem(0x65b7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaac1, gbc.sp());
        EXPECT(0x65b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 016F
        gbc.setState(0x1d91, 0xd2b4, 0x2ed0, 0x395c, 0x6ef6, 0x9662, 0x1, 0x0);
        gbc.writeMem(0x1d91, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd2b4, gbc.sp());
        EXPECT(0x1d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0170
        gbc.setState(0xd3cf, 0xc1e8, 0x6b0, 0xdeda, 0x924e, 0x740, 0x0, 0x1);
        gbc.writeMem(0xd3cf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0xd3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cf));
        EXPECT(0xff, gbc.readMem(0xd3d0));
        // CB FF 0171
        gbc.setState(0xe3c2, 0x26e0, 0x4b60, 0x7911, 0x109f, 0x424f, 0x0, 0x0);
        gbc.writeMem(0xe3c2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x26e0, gbc.sp());
        EXPECT(0xe3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c2));
        EXPECT(0xff, gbc.readMem(0xe3c3));
        // CB FF 0172
        gbc.setState(0x3160, 0x49cf, 0xc6e0, 0x3333, 0xf19d, 0xd1b4, 0x1, 0x0);
        gbc.writeMem(0x3160, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x49cf, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0173
        gbc.setState(0x6324, 0xc45, 0x2ad0, 0xf8c0, 0x385f, 0xc2fb, 0x0, 0x0);
        gbc.writeMem(0x6324, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0174
        gbc.setState(0x2b9, 0x11d0, 0x2950, 0x8493, 0x26a7, 0x3a8c, 0x0, 0x0);
        gbc.writeMem(0x2b9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x11d0, gbc.sp());
        EXPECT(0x2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0175
        gbc.setState(0x9498, 0x7e3, 0x7c50, 0xa01a, 0x1142, 0xe07c, 0x1, 0x1);
        gbc.writeMem(0x9498, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7e3, gbc.sp());
        EXPECT(0x949a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9498));
        EXPECT(0xff, gbc.readMem(0x9499));
        // CB FF 0176
        gbc.setState(0xda09, 0x9e39, 0x1ad0, 0x2ea5, 0xa130, 0xf2ad, 0x0, 0x1);
        gbc.writeMem(0xda09, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0xda0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda09));
        EXPECT(0xff, gbc.readMem(0xda0a));
        // CB FF 0177
        gbc.setState(0x3190, 0x6fd2, 0x4650, 0xce83, 0xf08e, 0xf651, 0x1, 0x0);
        gbc.writeMem(0x3190, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0178
        gbc.setState(0x2702, 0x954e, 0x1680, 0x2707, 0x851c, 0x5475, 0x1, 0x0);
        gbc.writeMem(0x2702, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x954e, gbc.sp());
        EXPECT(0x2704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0179
        gbc.setState(0x7239, 0xb206, 0x24f0, 0x6a90, 0x89b3, 0x44e5, 0x0, 0x1);
        gbc.writeMem(0x7239, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 017B
        gbc.setState(0x9f94, 0x7d6b, 0x6680, 0x2746, 0xd6a9, 0x87d7, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7d6b, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f94));
        EXPECT(0xff, gbc.readMem(0x9f95));
        // CB FF 017C
        gbc.setState(0xe94e, 0xa2b3, 0x1e50, 0x1a99, 0x2068, 0x11cc, 0x0, 0x0);
        gbc.writeMem(0xe94e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa2b3, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94e));
        EXPECT(0xff, gbc.readMem(0xe94f));
        // CB FF 017D
        gbc.setState(0x4105, 0xb2a, 0x1230, 0xbfa0, 0xf4d1, 0x91ba, 0x1, 0x1);
        gbc.writeMem(0x4105, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 017E
        gbc.setState(0x6732, 0xcae0, 0xf150, 0xe95b, 0xdb67, 0xba85, 0x0, 0x0);
        gbc.writeMem(0x6732, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcae0, gbc.sp());
        EXPECT(0x6734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0180
        gbc.setState(0x2588, 0xfb18, 0x95e0, 0xc9ae, 0xfb1f, 0x2180, 0x0, 0x0);
        gbc.writeMem(0x2588, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfb18, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0181
        gbc.setState(0x191a, 0xe5bc, 0x5ed0, 0xcf16, 0xc7a, 0xbd7b, 0x1, 0x1);
        gbc.writeMem(0x191a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe5bc, gbc.sp());
        EXPECT(0x191c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0182
        gbc.setState(0xc1a, 0xea67, 0x8680, 0x11b7, 0xcc85, 0x4a24, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0183
        gbc.setState(0x4cc9, 0xc8dd, 0x43a0, 0xeee1, 0x6fd6, 0xb349, 0x1, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0184
        gbc.setState(0xb060, 0xa31f, 0xeff0, 0xc1d6, 0xe8, 0xc6d2, 0x1, 0x0);
        gbc.writeMem(0xb060, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0xb062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb060));
        EXPECT(0xff, gbc.readMem(0xb061));
        // CB FF 0185
        gbc.setState(0xe768, 0x613d, 0x8560, 0x1bca, 0x5e2f, 0x38c9, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x613d, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe768));
        EXPECT(0xff, gbc.readMem(0xe769));
        // CB FF 0186
        gbc.setState(0x9851, 0xd039, 0x8d20, 0xbc07, 0x47d3, 0x311c, 0x0, 0x0);
        gbc.writeMem(0x9851, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9851));
        EXPECT(0xff, gbc.readMem(0x9852));
        // CB FF 0187
        gbc.setState(0xd868, 0xb560, 0x240, 0xf7e0, 0x7dac, 0x3e46, 0x0, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb560, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd868));
        EXPECT(0xff, gbc.readMem(0xd869));
        // CB FF 0188
        gbc.setState(0x2fd4, 0x7c09, 0xb2f0, 0xf3b1, 0x6f3b, 0x42a1, 0x0, 0x0);
        gbc.writeMem(0x2fd4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7c09, gbc.sp());
        EXPECT(0x2fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0189
        gbc.setState(0xc636, 0xd256, 0x9de0, 0x3923, 0xc75d, 0x9379, 0x0, 0x1);
        gbc.writeMem(0xc636, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd256, gbc.sp());
        EXPECT(0xc638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc636));
        EXPECT(0xff, gbc.readMem(0xc637));
        // CB FF 018A
        gbc.setState(0x621b, 0x4cc5, 0x2050, 0x735f, 0xf8c3, 0x25da, 0x0, 0x1);
        gbc.writeMem(0x621b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4cc5, gbc.sp());
        EXPECT(0x621d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 018B
        gbc.setState(0x5be0, 0xc6c8, 0xfea0, 0x2914, 0xe99f, 0x3316, 0x1, 0x1);
        gbc.writeMem(0x5be0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc6c8, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 018C
        gbc.setState(0xd219, 0xe79f, 0xa740, 0x3a98, 0xfb39, 0x1293, 0x0, 0x1);
        gbc.writeMem(0xd219, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe79f, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd219));
        EXPECT(0xff, gbc.readMem(0xd21a));
        // CB FF 018D
        gbc.setState(0xb0f6, 0x5645, 0x76f0, 0x2974, 0xaa0e, 0x9994, 0x1, 0x1);
        gbc.writeMem(0xb0f6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0xb0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f6));
        EXPECT(0xff, gbc.readMem(0xb0f7));
        // CB FF 018E
        gbc.setState(0x517f, 0x847d, 0xc130, 0x7ad3, 0x69b0, 0xccdb, 0x0, 0x0);
        gbc.writeMem(0x517f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0x5181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 018F
        gbc.setState(0x3f50, 0xdd56, 0x4fe0, 0xc535, 0x8536, 0x1d10, 0x0, 0x0);
        gbc.writeMem(0x3f50, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdd56, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0190
        gbc.setState(0x6f81, 0x2d64, 0xff00, 0xef1, 0xc4ae, 0x8e09, 0x1, 0x1);
        gbc.writeMem(0x6f81, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d64, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0191
        gbc.setState(0x5503, 0x50ee, 0x8e60, 0xc122, 0x7828, 0x5ec, 0x0, 0x0);
        gbc.writeMem(0x5503, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0192
        gbc.setState(0x7aa1, 0xc5ca, 0x9b70, 0x8d08, 0xa641, 0x8188, 0x1, 0x0);
        gbc.writeMem(0x7aa1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc5ca, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0193
        gbc.setState(0x9e4e, 0x8533, 0xc610, 0xed71, 0xe56f, 0xcc9b, 0x1, 0x1);
        gbc.writeMem(0x9e4e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0x9e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4e));
        EXPECT(0xff, gbc.readMem(0x9e4f));
        // CB FF 0194
        gbc.setState(0xb0e0, 0x3e8f, 0x92b0, 0xd5cf, 0x3c0b, 0x9e6d, 0x0, 0x1);
        gbc.writeMem(0xb0e0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3e8f, gbc.sp());
        EXPECT(0xb0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e0));
        EXPECT(0xff, gbc.readMem(0xb0e1));
        // CB FF 0195
        gbc.setState(0x53cc, 0xf85d, 0x2b30, 0xf2a9, 0xcac5, 0x86e7, 0x1, 0x1);
        gbc.writeMem(0x53cc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf85d, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0196
        gbc.setState(0x8c6b, 0x8a30, 0xa270, 0x1ac9, 0xc187, 0x434b, 0x1, 0x1);
        gbc.writeMem(0x8c6b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8a30, gbc.sp());
        EXPECT(0x8c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6b));
        EXPECT(0xff, gbc.readMem(0x8c6c));
        // CB FF 0197
        gbc.setState(0x3763, 0x8d8d, 0xca30, 0x91cd, 0x5d67, 0x8e8a, 0x0, 0x0);
        gbc.writeMem(0x3763, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8d8d, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0199
        gbc.setState(0xed68, 0x37e9, 0xfd50, 0x271f, 0x7c7e, 0x66fe, 0x0, 0x1);
        gbc.writeMem(0xed68, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x37e9, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed68));
        EXPECT(0xff, gbc.readMem(0xed69));
        // CB FF 019A
        gbc.setState(0x2a1b, 0x2d6e, 0x8640, 0x7063, 0xb6d7, 0x5474, 0x1, 0x1);
        gbc.writeMem(0x2a1b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x2a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 019B
        gbc.setState(0x3252, 0x3353, 0xf460, 0x5600, 0xf3cf, 0x96e3, 0x1, 0x1);
        gbc.writeMem(0x3252, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3353, gbc.sp());
        EXPECT(0x3254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 019D
        gbc.setState(0x89e1, 0x8a24, 0x7e90, 0xc7c4, 0xfe20, 0x412d, 0x0, 0x0);
        gbc.writeMem(0x89e1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8a24, gbc.sp());
        EXPECT(0x89e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e1));
        EXPECT(0xff, gbc.readMem(0x89e2));
        // CB FF 019E
        gbc.setState(0xa211, 0x5026, 0x8f70, 0x7387, 0xaded, 0x1bc8, 0x1, 0x1);
        gbc.writeMem(0xa211, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5026, gbc.sp());
        EXPECT(0xa213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa211));
        EXPECT(0xff, gbc.readMem(0xa212));
        // CB FF 019F
        gbc.setState(0xbea6, 0x9f0f, 0x980, 0x16a9, 0xe6c3, 0x3109, 0x1, 0x1);
        gbc.writeMem(0xbea6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9f0f, gbc.sp());
        EXPECT(0xbea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea6));
        EXPECT(0xff, gbc.readMem(0xbea7));
        // CB FF 01A0
        gbc.setState(0x1f6a, 0x5e8a, 0xfa50, 0xb9eb, 0x4bea, 0xf8, 0x0, 0x1);
        gbc.writeMem(0x1f6a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5e8a, gbc.sp());
        EXPECT(0x1f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01A1
        gbc.setState(0xe4a9, 0x93a8, 0x91a0, 0x6b50, 0x604b, 0x6439, 0x0, 0x1);
        gbc.writeMem(0xe4a9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0xff, gbc.readMem(0xe4aa));
        // CB FF 01A2
        gbc.setState(0x9219, 0x1dfe, 0xfa0, 0xa7e1, 0xfdd9, 0x829e, 0x0, 0x0);
        gbc.writeMem(0x9219, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1dfe, gbc.sp());
        EXPECT(0x921b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9219));
        EXPECT(0xff, gbc.readMem(0x921a));
        // CB FF 01A3
        gbc.setState(0x4fcc, 0x4b8a, 0x40a0, 0x96f5, 0x9313, 0xed99, 0x1, 0x1);
        gbc.writeMem(0x4fcc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0x4fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01A4
        gbc.setState(0xc766, 0x5810, 0xd1a0, 0xc4f2, 0xcf69, 0x4425, 0x0, 0x0);
        gbc.writeMem(0xc766, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5810, gbc.sp());
        EXPECT(0xc768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc766));
        EXPECT(0xff, gbc.readMem(0xc767));
        // CB FF 01A5
        gbc.setState(0x212f, 0xac74, 0x4b0, 0xb4a0, 0x713, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x212f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xac74, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01A6
        gbc.setState(0xbefe, 0x3798, 0xbc50, 0x30b5, 0x2234, 0x4f22, 0x0, 0x0);
        gbc.writeMem(0xbefe, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0xbf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefe));
        EXPECT(0xff, gbc.readMem(0xbeff));
        // CB FF 01A7
        gbc.setState(0x4541, 0xe7b6, 0x5f70, 0x56e, 0x4d4d, 0x5945, 0x1, 0x0);
        gbc.writeMem(0x4541, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01A8
        gbc.setState(0xc1b2, 0x9e87, 0x4df0, 0xf422, 0xd726, 0xf7cc, 0x1, 0x0);
        gbc.writeMem(0xc1b2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9e87, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b2));
        EXPECT(0xff, gbc.readMem(0xc1b3));
        // CB FF 01A9
        gbc.setState(0xddc9, 0xd136, 0xfc50, 0xa356, 0x7952, 0xf7d, 0x0, 0x0);
        gbc.writeMem(0xddc9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd136, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0xff, gbc.readMem(0xddca));
        // CB FF 01AA
        gbc.setState(0x1347, 0x25c7, 0x4550, 0x846a, 0x6ab, 0xc586, 0x1, 0x1);
        gbc.writeMem(0x1347, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x25c7, gbc.sp());
        EXPECT(0x1349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01AB
        gbc.setState(0xcc5f, 0xf500, 0xc9e0, 0x6124, 0xfbea, 0x1cd9, 0x1, 0x0);
        gbc.writeMem(0xcc5f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf500, gbc.sp());
        EXPECT(0xcc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5f));
        EXPECT(0xff, gbc.readMem(0xcc60));
        // CB FF 01AC
        gbc.setState(0xa1ad, 0x19e5, 0x2a10, 0x1d3f, 0x4904, 0x1f08, 0x0, 0x0);
        gbc.writeMem(0xa1ad, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ad));
        EXPECT(0xff, gbc.readMem(0xa1ae));
        // CB FF 01AD
        gbc.setState(0x222f, 0xd84c, 0xc070, 0x7fda, 0x8c6a, 0x6430, 0x0, 0x1);
        gbc.writeMem(0x222f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd84c, gbc.sp());
        EXPECT(0x2231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01AE
        gbc.setState(0x8864, 0x6085, 0x4ad0, 0x8eb6, 0xbea, 0x9980, 0x0, 0x0);
        gbc.writeMem(0x8864, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6085, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8864));
        EXPECT(0xff, gbc.readMem(0x8865));
        // CB FF 01B0
        gbc.setState(0x8ee9, 0xf83e, 0x83f0, 0xdcc9, 0x630f, 0xa9ae, 0x0, 0x0);
        gbc.writeMem(0x8ee9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf83e, gbc.sp());
        EXPECT(0x8eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee9));
        EXPECT(0xff, gbc.readMem(0x8eea));
        // CB FF 01B1
        gbc.setState(0x9b8f, 0x2530, 0x7870, 0xcf8f, 0xc367, 0xe2a0, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2530, gbc.sp());
        EXPECT(0x9b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8f));
        EXPECT(0xff, gbc.readMem(0x9b90));
        // CB FF 01B2
        gbc.setState(0x2c72, 0xd49a, 0x9760, 0x611d, 0xf7de, 0x4db6, 0x0, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd49a, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01B3
        gbc.setState(0x7e50, 0xe213, 0x2030, 0xc0ee, 0x41e1, 0x742f, 0x0, 0x0);
        gbc.writeMem(0x7e50, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01B4
        gbc.setState(0x1ab1, 0x4d27, 0xfb20, 0xe7f9, 0x3ac3, 0x589b, 0x0, 0x0);
        gbc.writeMem(0x1ab1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4d27, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01B5
        gbc.setState(0x7a87, 0x6b71, 0x9c0, 0xe9af, 0xe51f, 0x4016, 0x0, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6b71, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01B6
        gbc.setState(0x5a3d, 0x6bac, 0x6470, 0x600b, 0x8e8d, 0x55fd, 0x0, 0x1);
        gbc.writeMem(0x5a3d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01B8
        gbc.setState(0x91e6, 0xaa7c, 0xe1b0, 0xc59, 0x11b4, 0x3a8a, 0x0, 0x0);
        gbc.writeMem(0x91e6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa7c, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e6));
        EXPECT(0xff, gbc.readMem(0x91e7));
        // CB FF 01B9
        gbc.setState(0xdce9, 0xc613, 0x3a40, 0xcbf3, 0xf37f, 0x2a26, 0x1, 0x1);
        gbc.writeMem(0xdce9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc613, gbc.sp());
        EXPECT(0xdceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce9));
        EXPECT(0xff, gbc.readMem(0xdcea));
        // CB FF 01BA
        gbc.setState(0xdb99, 0x91da, 0x92d0, 0xf024, 0xa4ea, 0x6c11, 0x1, 0x1);
        gbc.writeMem(0xdb99, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x91da, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb99));
        EXPECT(0xff, gbc.readMem(0xdb9a));
        // CB FF 01BB
        gbc.setState(0xbbf7, 0x5b06, 0x8c60, 0xd483, 0xa070, 0x9340, 0x0, 0x1);
        gbc.writeMem(0xbbf7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5b06, gbc.sp());
        EXPECT(0xbbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf7));
        EXPECT(0xff, gbc.readMem(0xbbf8));
        // CB FF 01BC
        gbc.setState(0x56ae, 0x37a9, 0x3c30, 0x779a, 0x9d62, 0x4e21, 0x1, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01BE
        gbc.setState(0x67be, 0xf80d, 0xd3c0, 0x2c98, 0x60a7, 0xf2ba, 0x0, 0x0);
        gbc.writeMem(0x67be, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf80d, gbc.sp());
        EXPECT(0x67c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01BF
        gbc.setState(0x37f8, 0xafc0, 0xfe50, 0xb044, 0x262d, 0x679, 0x0, 0x0);
        gbc.writeMem(0x37f8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0x37fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01C0
        gbc.setState(0x76d, 0x5dfd, 0x8b20, 0x34ed, 0x9874, 0x2f57, 0x1, 0x1);
        gbc.writeMem(0x76d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01C2
        gbc.setState(0xa2e4, 0x7fd4, 0x5e00, 0xb163, 0x9a9f, 0xcba, 0x0, 0x1);
        gbc.writeMem(0xa2e4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0xa2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e4));
        EXPECT(0xff, gbc.readMem(0xa2e5));
        // CB FF 01C3
        gbc.setState(0xedbd, 0xb02f, 0x810, 0xb9d4, 0x5668, 0xd3fe, 0x0, 0x1);
        gbc.writeMem(0xedbd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb02f, gbc.sp());
        EXPECT(0xedbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbd));
        EXPECT(0xff, gbc.readMem(0xedbe));
        // CB FF 01C4
        gbc.setState(0x979d, 0xed8a, 0x3d10, 0xdda2, 0xab7e, 0x4c0c, 0x1, 0x0);
        gbc.writeMem(0x979d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xed8a, gbc.sp());
        EXPECT(0x979f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979d));
        EXPECT(0xff, gbc.readMem(0x979e));
        // CB FF 01C5
        gbc.setState(0x4a58, 0x89ce, 0xce20, 0x3920, 0x830, 0xd881, 0x0, 0x1);
        gbc.writeMem(0x4a58, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01C6
        gbc.setState(0xc965, 0xda5d, 0x3a00, 0xfce4, 0xedad, 0x4b1a, 0x1, 0x1);
        gbc.writeMem(0xc965, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0xc967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc965));
        EXPECT(0xff, gbc.readMem(0xc966));
        // CB FF 01C7
        gbc.setState(0x30f7, 0xbfe7, 0x94a0, 0x5592, 0xb688, 0xa578, 0x0, 0x0);
        gbc.writeMem(0x30f7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01C8
        gbc.setState(0x3f1a, 0xd63c, 0xc540, 0xfecb, 0x5a5b, 0xa1b2, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01C9
        gbc.setState(0xdc82, 0xdb16, 0x7e0, 0xe311, 0x420c, 0x2e92, 0x1, 0x1);
        gbc.writeMem(0xdc82, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdb16, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc82));
        EXPECT(0xff, gbc.readMem(0xdc83));
        // CB FF 01CA
        gbc.setState(0x5549, 0x623c, 0x3430, 0xaa48, 0xeb6d, 0x7c19, 0x0, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01CB
        gbc.setState(0x187b, 0xab77, 0x4bf0, 0x73e8, 0x8980, 0xd14e, 0x0, 0x0);
        gbc.writeMem(0x187b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab77, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01CC
        gbc.setState(0x4d13, 0xab3a, 0x6710, 0x65de, 0x93e9, 0xb12b, 0x1, 0x0);
        gbc.writeMem(0x4d13, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab3a, gbc.sp());
        EXPECT(0x4d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01CD
        gbc.setState(0x68f1, 0xa36, 0x64c0, 0xcacf, 0x6403, 0x7ffe, 0x1, 0x0);
        gbc.writeMem(0x68f1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01CE
        gbc.setState(0x6e56, 0x9c4e, 0x3cb0, 0xee0b, 0xee8e, 0x2180, 0x1, 0x1);
        gbc.writeMem(0x6e56, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01CF
        gbc.setState(0xe156, 0xc818, 0x4140, 0x4da5, 0x68b4, 0xb286, 0x1, 0x0);
        gbc.writeMem(0xe156, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc818, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0xff, gbc.readMem(0xe157));
        // CB FF 01D0
        gbc.setState(0xbc6, 0x69e9, 0x4120, 0xaf66, 0x2963, 0x6ce1, 0x1, 0x0);
        gbc.writeMem(0xbc6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x69e9, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01D1
        gbc.setState(0xa72b, 0x8765, 0xc640, 0xe8df, 0xa3c7, 0x6627, 0x0, 0x0);
        gbc.writeMem(0xa72b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8765, gbc.sp());
        EXPECT(0xa72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72b));
        EXPECT(0xff, gbc.readMem(0xa72c));
        // CB FF 01D2
        gbc.setState(0x570a, 0xd535, 0xdb80, 0xacab, 0x9deb, 0xddea, 0x1, 0x0);
        gbc.writeMem(0x570a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0x570c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01D3
        gbc.setState(0xb3d4, 0x1215, 0xa4c0, 0x3ea0, 0x78d4, 0xbc5f, 0x0, 0x0);
        gbc.writeMem(0xb3d4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1215, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d4));
        EXPECT(0xff, gbc.readMem(0xb3d5));
        // CB FF 01D4
        gbc.setState(0xae5a, 0xb40b, 0x6530, 0x3e0d, 0x7b0c, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0xae5a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb40b, gbc.sp());
        EXPECT(0xae5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5a));
        EXPECT(0xff, gbc.readMem(0xae5b));
        // CB FF 01D5
        gbc.setState(0x911e, 0x6de9, 0x25a0, 0xfeca, 0xd102, 0x5fce, 0x0, 0x0);
        gbc.writeMem(0x911e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6de9, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911e));
        EXPECT(0xff, gbc.readMem(0x911f));
        // CB FF 01D6
        gbc.setState(0x1718, 0xb727, 0x5370, 0xc32b, 0x8b97, 0xed69, 0x1, 0x0);
        gbc.writeMem(0x1718, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb727, gbc.sp());
        EXPECT(0x171a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01D7
        gbc.setState(0x65d3, 0xa3b4, 0x8d80, 0x49a6, 0x9886, 0xc62d, 0x0, 0x0);
        gbc.writeMem(0x65d3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x65d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01D8
        gbc.setState(0x88b0, 0xcda9, 0x3ad0, 0xcdfa, 0x8cef, 0x484b, 0x0, 0x1);
        gbc.writeMem(0x88b0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b0));
        EXPECT(0xff, gbc.readMem(0x88b1));
        // CB FF 01D9
        gbc.setState(0xbfa8, 0xceae, 0x77c0, 0xc124, 0x2fba, 0xd8b7, 0x1, 0x1);
        gbc.writeMem(0xbfa8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0xbfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa8));
        EXPECT(0xff, gbc.readMem(0xbfa9));
        // CB FF 01DA
        gbc.setState(0x368e, 0x8e, 0xca60, 0x1f34, 0x8839, 0x8db, 0x1, 0x0);
        gbc.writeMem(0x368e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01DB
        gbc.setState(0xa8bb, 0x10f8, 0x1150, 0xacad, 0x561b, 0xec55, 0x0, 0x0);
        gbc.writeMem(0xa8bb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x10f8, gbc.sp());
        EXPECT(0xa8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bb));
        EXPECT(0xff, gbc.readMem(0xa8bc));
        // CB FF 01DC
        gbc.setState(0xe026, 0x4f6b, 0xd7f0, 0x8c46, 0x44c0, 0x89fa, 0x1, 0x1);
        gbc.writeMem(0xe026, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe026));
        EXPECT(0xff, gbc.readMem(0xe027));
        // CB FF 01DD
        gbc.setState(0x349a, 0x3063, 0x6f80, 0xe556, 0xd2fa, 0xa026, 0x0, 0x1);
        gbc.writeMem(0x349a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0x349c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01DE
        gbc.setState(0x8222, 0x4039, 0x6520, 0x2c72, 0x95ec, 0x1afa, 0x0, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0xff, gbc.readMem(0x8223));
        // CB FF 01DF
        gbc.setState(0x9411, 0x961d, 0xce50, 0x7177, 0x9a61, 0xa67, 0x1, 0x1);
        gbc.writeMem(0x9411, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9411));
        EXPECT(0xff, gbc.readMem(0x9412));
        // CB FF 01E0
        gbc.setState(0x9c51, 0x2b1c, 0xe760, 0xda7d, 0xb436, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x9c51, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2b1c, gbc.sp());
        EXPECT(0x9c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c51));
        EXPECT(0xff, gbc.readMem(0x9c52));
        // CB FF 01E1
        gbc.setState(0x7705, 0x6a0a, 0x28f0, 0x38c5, 0xd9ae, 0x6844, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01E2
        gbc.setState(0x997b, 0x58b1, 0x4b00, 0xdab7, 0x8d95, 0x241f, 0x0, 0x0);
        gbc.writeMem(0x997b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x58b1, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0xff, gbc.readMem(0x997c));
        // CB FF 01E3
        gbc.setState(0xa86e, 0x6f06, 0x9b00, 0x46ee, 0xac4e, 0xcaf9, 0x1, 0x0);
        gbc.writeMem(0xa86e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6f06, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86e));
        EXPECT(0xff, gbc.readMem(0xa86f));
        // CB FF 01E4
        gbc.setState(0x7571, 0x879d, 0xc240, 0x8753, 0xdb32, 0x925b, 0x0, 0x0);
        gbc.writeMem(0x7571, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x879d, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01E5
        gbc.setState(0x4b8, 0x89af, 0x1b30, 0x43cf, 0xbddb, 0x14ea, 0x1, 0x0);
        gbc.writeMem(0x4b8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x89af, gbc.sp());
        EXPECT(0x4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01E7
        gbc.setState(0xe356, 0x7cbf, 0x4d00, 0xc1be, 0x4d9f, 0x4dce, 0x0, 0x1);
        gbc.writeMem(0xe356, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7cbf, gbc.sp());
        EXPECT(0xe358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe356));
        EXPECT(0xff, gbc.readMem(0xe357));
        // CB FF 01E8
        gbc.setState(0x8c8b, 0x88b2, 0x4860, 0x4cb, 0x2311, 0x7ad7, 0x0, 0x1);
        gbc.writeMem(0x8c8b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x88b2, gbc.sp());
        EXPECT(0x8c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8b));
        EXPECT(0xff, gbc.readMem(0x8c8c));
        // CB FF 01E9
        gbc.setState(0xdcc7, 0x87f, 0x9d90, 0x9e22, 0xcbc2, 0x9e28, 0x0, 0x1);
        gbc.writeMem(0xdcc7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x87f, gbc.sp());
        EXPECT(0xdcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc7));
        EXPECT(0xff, gbc.readMem(0xdcc8));
        // CB FF 01EB
        gbc.setState(0x9c87, 0xc780, 0x28f0, 0xa7e5, 0xf288, 0xe57b, 0x0, 0x0);
        gbc.writeMem(0x9c87, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc780, gbc.sp());
        EXPECT(0x9c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c87));
        EXPECT(0xff, gbc.readMem(0x9c88));
        // CB FF 01EC
        gbc.setState(0xc1ee, 0xb2ad, 0xcea0, 0x8891, 0xeacf, 0xdb8e, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0xff, gbc.readMem(0xc1ef));
        // CB FF 01EE
        gbc.setState(0x8fa, 0x7ce4, 0xa1d0, 0xe6a0, 0xd47e, 0xc686, 0x1, 0x0);
        gbc.writeMem(0x8fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7ce4, gbc.sp());
        EXPECT(0x8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01EF
        gbc.setState(0x2f74, 0x23ef, 0xff70, 0x31d0, 0x4a0d, 0xaf65, 0x0, 0x0);
        gbc.writeMem(0x2f74, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01F0
        gbc.setState(0x6d60, 0x8880, 0x4260, 0x7399, 0x2388, 0x6448, 0x1, 0x0);
        gbc.writeMem(0x6d60, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0x6d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01F2
        gbc.setState(0x5a5d, 0xb70c, 0xfde0, 0x3b7e, 0x32e, 0xeecf, 0x0, 0x0);
        gbc.writeMem(0x5a5d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb70c, gbc.sp());
        EXPECT(0x5a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01F3
        gbc.setState(0x3673, 0x2bc7, 0xc290, 0x732b, 0x30a4, 0xf06d, 0x1, 0x0);
        gbc.writeMem(0x3673, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2bc7, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01F4
        gbc.setState(0x477e, 0x88c4, 0xd30, 0x7360, 0x2b5a, 0x3cd7, 0x1, 0x1);
        gbc.writeMem(0x477e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x88c4, gbc.sp());
        EXPECT(0x4780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01F5
        gbc.setState(0xdae9, 0x57bc, 0x1bf0, 0xbecf, 0xaabd, 0x79d0, 0x1, 0x1);
        gbc.writeMem(0xdae9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0xdaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae9));
        EXPECT(0xff, gbc.readMem(0xdaea));
        // CB FF 01F6
        gbc.setState(0xd53f, 0xbe6a, 0x4a00, 0xb61e, 0x4c9c, 0x86a0, 0x0, 0x1);
        gbc.writeMem(0xd53f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbe6a, gbc.sp());
        EXPECT(0xd541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53f));
        EXPECT(0xff, gbc.readMem(0xd540));
        // CB FF 01F7
        gbc.setState(0xae43, 0xbe7c, 0x9f00, 0x93bf, 0x16ca, 0x3df7, 0x1, 0x0);
        gbc.writeMem(0xae43, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe7c, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae43));
        EXPECT(0xff, gbc.readMem(0xae44));
        // CB FF 01F9
        gbc.setState(0x10cd, 0x2f9f, 0x17e0, 0x3fb, 0x3da5, 0x9611, 0x1, 0x0);
        gbc.writeMem(0x10cd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2f9f, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01FA
        gbc.setState(0x4bf5, 0x6e50, 0xe290, 0xc17c, 0x5308, 0x9625, 0x1, 0x0);
        gbc.writeMem(0x4bf5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x4bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01FB
        gbc.setState(0xe82, 0x9daa, 0x9a20, 0xf17a, 0x7dd9, 0x3a96, 0x0, 0x1);
        gbc.writeMem(0xe82, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 01FC
        gbc.setState(0x7052, 0xbf37, 0xa3f0, 0xa38a, 0xddb2, 0xa0dc, 0x0, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 01FD
        gbc.setState(0xa806, 0x4646, 0xfec0, 0xe15b, 0x12a3, 0x2118, 0x1, 0x1);
        gbc.writeMem(0xa806, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0xa808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa806));
        EXPECT(0xff, gbc.readMem(0xa807));
        // CB FF 01FE
        gbc.setState(0xc76d, 0xd918, 0x3d40, 0xd82d, 0xd710, 0x1541, 0x1, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0xff, gbc.readMem(0xc76e));
        // CB FF 01FF
        gbc.setState(0xab88, 0x9095, 0x5cc0, 0x9ff9, 0x6d56, 0xac, 0x1, 0x1);
        gbc.writeMem(0xab88, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0xab8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab88));
        EXPECT(0xff, gbc.readMem(0xab89));
        // CB FF 0200
        gbc.setState(0x8769, 0xf072, 0x86a0, 0xa577, 0xd154, 0xcc20, 0x1, 0x0);
        gbc.writeMem(0x8769, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf072, gbc.sp());
        EXPECT(0x876b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8769));
        EXPECT(0xff, gbc.readMem(0x876a));
        // CB FF 0201
        gbc.setState(0x8e5d, 0xb1f4, 0x6cb0, 0x4353, 0xe2b0, 0xa71, 0x0, 0x1);
        gbc.writeMem(0x8e5d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb1f4, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5d));
        EXPECT(0xff, gbc.readMem(0x8e5e));
        // CB FF 0202
        gbc.setState(0x135, 0x62a4, 0xd510, 0x4e2c, 0x43a5, 0xf659, 0x0, 0x0);
        gbc.writeMem(0x135, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0x137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0203
        gbc.setState(0xb590, 0x98b4, 0x9fa0, 0xef5d, 0x6ad5, 0x9bd0, 0x1, 0x1);
        gbc.writeMem(0xb590, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0xb592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb590));
        EXPECT(0xff, gbc.readMem(0xb591));
        // CB FF 0204
        gbc.setState(0x392f, 0x64ea, 0x60e0, 0x797a, 0xa9e9, 0x3cb0, 0x1, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x64ea, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0205
        gbc.setState(0xd9d2, 0x544, 0xa830, 0x1bf4, 0x8e5a, 0x9948, 0x1, 0x1);
        gbc.writeMem(0xd9d2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x544, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d2));
        EXPECT(0xff, gbc.readMem(0xd9d3));
        // CB FF 0206
        gbc.setState(0x4700, 0xa0b7, 0xb220, 0x7ac8, 0x6035, 0xd934, 0x0, 0x0);
        gbc.writeMem(0x4700, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa0b7, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0207
        gbc.setState(0x66d3, 0xb587, 0xbcb0, 0xd034, 0x1e88, 0xbec2, 0x0, 0x0);
        gbc.writeMem(0x66d3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0208
        gbc.setState(0xe867, 0x49c2, 0x9110, 0xa597, 0xeef9, 0x9cdd, 0x0, 0x1);
        gbc.writeMem(0xe867, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x49c2, gbc.sp());
        EXPECT(0xe869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe867));
        EXPECT(0xff, gbc.readMem(0xe868));
        // CB FF 0209
        gbc.setState(0x8cae, 0xba7d, 0xe490, 0xaa24, 0xb0ac, 0xc098, 0x0, 0x0);
        gbc.writeMem(0x8cae, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0x8cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cae));
        EXPECT(0xff, gbc.readMem(0x8caf));
        // CB FF 020B
        gbc.setState(0x3fc1, 0x46ea, 0xec20, 0xd8fe, 0xd124, 0xacca, 0x1, 0x0);
        gbc.writeMem(0x3fc1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x46ea, gbc.sp());
        EXPECT(0x3fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 020C
        gbc.setState(0xd404, 0x1ca3, 0x2f0, 0xddf6, 0xae1e, 0xa064, 0x0, 0x1);
        gbc.writeMem(0xd404, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1ca3, gbc.sp());
        EXPECT(0xd406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd404));
        EXPECT(0xff, gbc.readMem(0xd405));
        // CB FF 020D
        gbc.setState(0xa531, 0x64ed, 0xc580, 0x46de, 0xcfff, 0xd890, 0x1, 0x0);
        gbc.writeMem(0xa531, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x64ed, gbc.sp());
        EXPECT(0xa533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa531));
        EXPECT(0xff, gbc.readMem(0xa532));
        // CB FF 020E
        gbc.setState(0xc22b, 0xe4d7, 0x8ad0, 0x2d65, 0x1c60, 0xfe69, 0x0, 0x0);
        gbc.writeMem(0xc22b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe4d7, gbc.sp());
        EXPECT(0xc22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22b));
        EXPECT(0xff, gbc.readMem(0xc22c));
        // CB FF 0210
        gbc.setState(0x5c90, 0x368d, 0xe110, 0xddd0, 0x45ac, 0x7582, 0x1, 0x1);
        gbc.writeMem(0x5c90, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0x5c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0211
        gbc.setState(0xcc63, 0x35, 0x2a70, 0x77d6, 0x86d4, 0x184, 0x0, 0x0);
        gbc.writeMem(0xcc63, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x35, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc63));
        EXPECT(0xff, gbc.readMem(0xcc64));
        // CB FF 0212
        gbc.setState(0x6eb2, 0x9d91, 0xdfd0, 0xa925, 0x3960, 0x1933, 0x0, 0x0);
        gbc.writeMem(0x6eb2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9d91, gbc.sp());
        EXPECT(0x6eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0213
        gbc.setState(0x9be8, 0xc1ad, 0x87c0, 0xa287, 0x1c93, 0xc5d7, 0x0, 0x1);
        gbc.writeMem(0x9be8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc1ad, gbc.sp());
        EXPECT(0x9bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be8));
        EXPECT(0xff, gbc.readMem(0x9be9));
        // CB FF 0214
        gbc.setState(0xb844, 0xd433, 0x420, 0x32c9, 0xd428, 0x358c, 0x1, 0x0);
        gbc.writeMem(0xb844, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd433, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb844));
        EXPECT(0xff, gbc.readMem(0xb845));
        // CB FF 0215
        gbc.setState(0x1bde, 0xf63, 0x2a20, 0x2d17, 0xb7ca, 0x130d, 0x1, 0x0);
        gbc.writeMem(0x1bde, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf63, gbc.sp());
        EXPECT(0x1be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0216
        gbc.setState(0x332d, 0x5282, 0x6eb0, 0x6cea, 0x6eb2, 0xdb16, 0x0, 0x0);
        gbc.writeMem(0x332d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5282, gbc.sp());
        EXPECT(0x332f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0217
        gbc.setState(0xabc0, 0x8ffe, 0xb5c0, 0xfba, 0xb26, 0x6e76, 0x1, 0x0);
        gbc.writeMem(0xabc0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8ffe, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc0));
        EXPECT(0xff, gbc.readMem(0xabc1));
        // CB FF 0218
        gbc.setState(0x935, 0xc7fe, 0x4eb0, 0xf348, 0xe9fa, 0x8a3d, 0x0, 0x0);
        gbc.writeMem(0x935, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0219
        gbc.setState(0x8d93, 0xef8, 0xf960, 0x9940, 0xd2f6, 0x9d3c, 0x0, 0x1);
        gbc.writeMem(0x8d93, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d93));
        EXPECT(0xff, gbc.readMem(0x8d94));
        // CB FF 021A
        gbc.setState(0x1a68, 0xb72b, 0x87d0, 0x1a30, 0x770f, 0xe0c7, 0x0, 0x1);
        gbc.writeMem(0x1a68, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 021B
        gbc.setState(0xd46c, 0xe05e, 0xf790, 0xbd45, 0xdc7f, 0x1c9f, 0x0, 0x1);
        gbc.writeMem(0xd46c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe05e, gbc.sp());
        EXPECT(0xd46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46c));
        EXPECT(0xff, gbc.readMem(0xd46d));
        // CB FF 021C
        gbc.setState(0xd9b1, 0xdc2b, 0x1ad0, 0x438, 0x3a72, 0xa412, 0x1, 0x1);
        gbc.writeMem(0xd9b1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0xd9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b1));
        EXPECT(0xff, gbc.readMem(0xd9b2));
        // CB FF 021D
        gbc.setState(0xe52b, 0x61c0, 0xd6c0, 0x4d0a, 0xd22b, 0xdbd2, 0x1, 0x0);
        gbc.writeMem(0xe52b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0xe52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52b));
        EXPECT(0xff, gbc.readMem(0xe52c));
        // CB FF 021E
        gbc.setState(0x1abc, 0xd45, 0x5110, 0x9988, 0xc235, 0x56b8, 0x1, 0x1);
        gbc.writeMem(0x1abc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd45, gbc.sp());
        EXPECT(0x1abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 021F
        gbc.setState(0xc9f6, 0x47c5, 0x5890, 0x50f2, 0x6b1b, 0x23d, 0x0, 0x1);
        gbc.writeMem(0xc9f6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0xc9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f6));
        EXPECT(0xff, gbc.readMem(0xc9f7));
        // CB FF 0220
        gbc.setState(0xc34e, 0xf07b, 0xd690, 0xec44, 0x35f9, 0x1d35, 0x0, 0x1);
        gbc.writeMem(0xc34e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf07b, gbc.sp());
        EXPECT(0xc350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34e));
        EXPECT(0xff, gbc.readMem(0xc34f));
        // CB FF 0221
        gbc.setState(0x2dd2, 0x21c9, 0x1670, 0x5c1f, 0xd97a, 0x931e, 0x1, 0x1);
        gbc.writeMem(0x2dd2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0x2dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0222
        gbc.setState(0x2872, 0xd26d, 0xdc60, 0xa60d, 0x745c, 0x9396, 0x0, 0x1);
        gbc.writeMem(0x2872, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd26d, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0223
        gbc.setState(0x18c9, 0x405f, 0x9750, 0x752, 0x2cbf, 0xb129, 0x1, 0x1);
        gbc.writeMem(0x18c9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0x18cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0224
        gbc.setState(0xc57e, 0x4e53, 0xbcb0, 0x29a8, 0x7609, 0xc7d4, 0x1, 0x0);
        gbc.writeMem(0xc57e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0xc580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57e));
        EXPECT(0xff, gbc.readMem(0xc57f));
        // CB FF 0225
        gbc.setState(0x5759, 0xc0eb, 0x6de0, 0x4ec7, 0x1eef, 0x2b5a, 0x1, 0x0);
        gbc.writeMem(0x5759, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc0eb, gbc.sp());
        EXPECT(0x575b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0226
        gbc.setState(0xe515, 0x9425, 0x51f0, 0x2afe, 0x2a94, 0xd1a9, 0x1, 0x1);
        gbc.writeMem(0xe515, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0xe517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe515));
        EXPECT(0xff, gbc.readMem(0xe516));
        // CB FF 0227
        gbc.setState(0x3490, 0x6a9a, 0xadd0, 0x8113, 0x8b69, 0xac9a, 0x0, 0x1);
        gbc.writeMem(0x3490, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6a9a, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0228
        gbc.setState(0x84a8, 0x4640, 0xbbc0, 0xf614, 0xb7a9, 0xd13d, 0x0, 0x0);
        gbc.writeMem(0x84a8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4640, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0xff, gbc.readMem(0x84a9));
        // CB FF 0229
        gbc.setState(0x42a2, 0x7a42, 0xc230, 0x295, 0x645, 0x871f, 0x0, 0x1);
        gbc.writeMem(0x42a2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0x42a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 022A
        gbc.setState(0x45, 0x3e54, 0x8a90, 0xbcee, 0xc2a6, 0xe6dc, 0x0, 0x1);
        gbc.writeMem(0x45, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3e54, gbc.sp());
        EXPECT(0x47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 022B
        gbc.setState(0xb283, 0xde8e, 0x7840, 0xbd1c, 0x998b, 0x24ee, 0x0, 0x1);
        gbc.writeMem(0xb283, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xde8e, gbc.sp());
        EXPECT(0xb285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb283));
        EXPECT(0xff, gbc.readMem(0xb284));
        // CB FF 022C
        gbc.setState(0x2db9, 0x3f94, 0xa70, 0x8f0f, 0x3cb7, 0x81a7, 0x0, 0x0);
        gbc.writeMem(0x2db9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0x2dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 022D
        gbc.setState(0x2e22, 0xcb1c, 0x2df0, 0x3c02, 0x1d7e, 0x70c8, 0x1, 0x1);
        gbc.writeMem(0x2e22, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcb1c, gbc.sp());
        EXPECT(0x2e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 022E
        gbc.setState(0x7e9b, 0x2b66, 0x36e0, 0x62fa, 0xea08, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0x7e9b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2b66, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 022F
        gbc.setState(0xa837, 0xd8ad, 0x2e10, 0x8b48, 0x31dc, 0xcb28, 0x0, 0x1);
        gbc.writeMem(0xa837, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd8ad, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa837));
        EXPECT(0xff, gbc.readMem(0xa838));
        // CB FF 0230
        gbc.setState(0xbb6e, 0xd3b1, 0xaa30, 0xb578, 0x9eff, 0x41c9, 0x1, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd3b1, gbc.sp());
        EXPECT(0xbb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6e));
        EXPECT(0xff, gbc.readMem(0xbb6f));
        // CB FF 0231
        gbc.setState(0x7145, 0x579a, 0xc660, 0x28a1, 0xa4a7, 0x13ef, 0x0, 0x1);
        gbc.writeMem(0x7145, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x579a, gbc.sp());
        EXPECT(0x7147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0233
        gbc.setState(0xae19, 0xd317, 0xd940, 0xe498, 0x7ab3, 0xe767, 0x0, 0x1);
        gbc.writeMem(0xae19, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0xae1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae19));
        EXPECT(0xff, gbc.readMem(0xae1a));
        // CB FF 0234
        gbc.setState(0x1174, 0xcef7, 0x2060, 0xaa36, 0xae10, 0x82a2, 0x0, 0x0);
        gbc.writeMem(0x1174, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0235
        gbc.setState(0xc4d5, 0xb12b, 0xf1b0, 0xef97, 0x41ba, 0x5f2a, 0x1, 0x0);
        gbc.writeMem(0xc4d5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb12b, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d5));
        EXPECT(0xff, gbc.readMem(0xc4d6));
        // CB FF 0236
        gbc.setState(0xe842, 0x57c, 0xa630, 0x380f, 0xa18f, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0xe842, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0xe844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe842));
        EXPECT(0xff, gbc.readMem(0xe843));
        // CB FF 0237
        gbc.setState(0x8af1, 0x7282, 0xdd70, 0x2c45, 0x48a0, 0xb32f, 0x0, 0x0);
        gbc.writeMem(0x8af1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af1));
        EXPECT(0xff, gbc.readMem(0x8af2));
        // CB FF 0238
        gbc.setState(0xe741, 0x6461, 0x3a70, 0xf875, 0x384e, 0x6be2, 0x0, 0x0);
        gbc.writeMem(0xe741, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6461, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe741));
        EXPECT(0xff, gbc.readMem(0xe742));
        // CB FF 0239
        gbc.setState(0xaeea, 0x91fd, 0x8c50, 0x6118, 0x5433, 0x1f41, 0x0, 0x0);
        gbc.writeMem(0xaeea, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0xaeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeea));
        EXPECT(0xff, gbc.readMem(0xaeeb));
        // CB FF 023A
        gbc.setState(0x212c, 0xa15a, 0x2cf0, 0xac86, 0xaa51, 0xcb1b, 0x0, 0x1);
        gbc.writeMem(0x212c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 023B
        gbc.setState(0x97, 0x1e1e, 0xc5b0, 0x18d2, 0xedec, 0xac4d, 0x1, 0x0);
        gbc.writeMem(0x97, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1e1e, gbc.sp());
        EXPECT(0x99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 023D
        gbc.setState(0x1920, 0xbfbc, 0x8380, 0x866e, 0xc7d0, 0x7c27, 0x1, 0x1);
        gbc.writeMem(0x1920, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbfbc, gbc.sp());
        EXPECT(0x1922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 023E
        gbc.setState(0x57d0, 0x299b, 0xc520, 0x724e, 0xc0c0, 0xf6de, 0x0, 0x1);
        gbc.writeMem(0x57d0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x299b, gbc.sp());
        EXPECT(0x57d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 023F
        gbc.setState(0x3630, 0x69a8, 0xf060, 0x18a5, 0xe532, 0x4483, 0x0, 0x1);
        gbc.writeMem(0x3630, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x69a8, gbc.sp());
        EXPECT(0x3632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0241
        gbc.setState(0x6db, 0xeab4, 0x8e0, 0xf896, 0x1b1b, 0xaea, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0242
        gbc.setState(0xa200, 0xc890, 0x74d0, 0x7eda, 0xd90c, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xa200, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc890, gbc.sp());
        EXPECT(0xa202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa200));
        EXPECT(0xff, gbc.readMem(0xa201));
        // CB FF 0243
        gbc.setState(0xb2e3, 0x8603, 0x8eb0, 0x57fe, 0x8b73, 0x11c4, 0x0, 0x1);
        gbc.writeMem(0xb2e3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8603, gbc.sp());
        EXPECT(0xb2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e3));
        EXPECT(0xff, gbc.readMem(0xb2e4));
        // CB FF 0244
        gbc.setState(0x9fe9, 0xdd2f, 0xb010, 0xae81, 0x7f12, 0x2194, 0x1, 0x1);
        gbc.writeMem(0x9fe9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0x9feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe9));
        EXPECT(0xff, gbc.readMem(0x9fea));
        // CB FF 0245
        gbc.setState(0x5c0e, 0x949a, 0xf6b0, 0x51f0, 0x2eb0, 0x10d0, 0x1, 0x0);
        gbc.writeMem(0x5c0e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x5c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0246
        gbc.setState(0x479b, 0xda4b, 0xeca0, 0x76a8, 0x978f, 0xbb7e, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0247
        gbc.setState(0xca0b, 0xe595, 0xfe50, 0x98ee, 0x84d3, 0xd8bc, 0x1, 0x1);
        gbc.writeMem(0xca0b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0b));
        EXPECT(0xff, gbc.readMem(0xca0c));
        // CB FF 0248
        gbc.setState(0xcb8b, 0x597, 0x1720, 0xe865, 0x272, 0xd900, 0x1, 0x0);
        gbc.writeMem(0xcb8b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x597, gbc.sp());
        EXPECT(0xcb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8b));
        EXPECT(0xff, gbc.readMem(0xcb8c));
        // CB FF 0249
        gbc.setState(0x2a02, 0xdb1, 0xd550, 0x972a, 0xd667, 0x8050, 0x1, 0x0);
        gbc.writeMem(0x2a02, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdb1, gbc.sp());
        EXPECT(0x2a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 024A
        gbc.setState(0xaa2c, 0xbc9b, 0xa6d0, 0x7ceb, 0xbe12, 0xf062, 0x0, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0xff, gbc.readMem(0xaa2d));
        // CB FF 024C
        gbc.setState(0x1f80, 0x304b, 0xcec0, 0x69a1, 0x677b, 0x4d87, 0x0, 0x0);
        gbc.writeMem(0x1f80, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x304b, gbc.sp());
        EXPECT(0x1f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 024D
        gbc.setState(0x3842, 0xfc59, 0xab50, 0x2dd, 0xd8b4, 0xf5e3, 0x1, 0x1);
        gbc.writeMem(0x3842, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 024E
        gbc.setState(0x1122, 0x3543, 0x64e0, 0xc58f, 0x96c7, 0xc671, 0x1, 0x0);
        gbc.writeMem(0x1122, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3543, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 024F
        gbc.setState(0x7cff, 0x8357, 0x2350, 0x91c5, 0xcd5b, 0x1c5, 0x0, 0x0);
        gbc.writeMem(0x7cff, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8357, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0250
        gbc.setState(0xc3f8, 0x60ff, 0x1ee0, 0x2abe, 0x119b, 0x7395, 0x1, 0x1);
        gbc.writeMem(0xc3f8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f8));
        EXPECT(0xff, gbc.readMem(0xc3f9));
        // CB FF 0251
        gbc.setState(0x1d15, 0x60b9, 0x63c0, 0xd572, 0x53c6, 0xfa74, 0x0, 0x1);
        gbc.writeMem(0x1d15, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x60b9, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0252
        gbc.setState(0x171b, 0x3190, 0x7390, 0xa8b2, 0x294c, 0xd79e, 0x0, 0x0);
        gbc.writeMem(0x171b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3190, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0253
        gbc.setState(0x526a, 0x22dc, 0xdf00, 0xa702, 0x3404, 0x407c, 0x0, 0x0);
        gbc.writeMem(0x526a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x22dc, gbc.sp());
        EXPECT(0x526c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0254
        gbc.setState(0x4e3a, 0x39cf, 0xd030, 0x16de, 0xf0fa, 0x15cf, 0x1, 0x0);
        gbc.writeMem(0x4e3a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x39cf, gbc.sp());
        EXPECT(0x4e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0255
        gbc.setState(0xe812, 0x821f, 0x8710, 0x1146, 0x688, 0x399b, 0x0, 0x0);
        gbc.writeMem(0xe812, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x821f, gbc.sp());
        EXPECT(0xe814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe812));
        EXPECT(0xff, gbc.readMem(0xe813));
        // CB FF 0256
        gbc.setState(0xc2ff, 0xae0d, 0x8590, 0xfc1d, 0xdd6c, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0xc2ff, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ff));
        EXPECT(0xff, gbc.readMem(0xc300));
        // CB FF 0257
        gbc.setState(0x9338, 0xd0b0, 0x5e70, 0x3c2a, 0xaf02, 0x1aaa, 0x1, 0x1);
        gbc.writeMem(0x9338, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9338));
        EXPECT(0xff, gbc.readMem(0x9339));
        // CB FF 0258
        gbc.setState(0x77d5, 0xa7f6, 0x8eb0, 0x699b, 0xe794, 0xfd44, 0x0, 0x1);
        gbc.writeMem(0x77d5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa7f6, gbc.sp());
        EXPECT(0x77d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0259
        gbc.setState(0x52f4, 0x164c, 0x93f0, 0x30e5, 0x97e8, 0xe676, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x164c, gbc.sp());
        EXPECT(0x52f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 025A
        gbc.setState(0xdcc2, 0x4bbe, 0x4c70, 0x41f7, 0xffca, 0xa2fb, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4bbe, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc2));
        EXPECT(0xff, gbc.readMem(0xdcc3));
        // CB FF 025C
        gbc.setState(0x6331, 0x865e, 0x2c90, 0x61c5, 0x2594, 0x952f, 0x1, 0x0);
        gbc.writeMem(0x6331, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x865e, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 025D
        gbc.setState(0x42d1, 0x631e, 0x6900, 0xe9d5, 0xd86b, 0x4a36, 0x1, 0x1);
        gbc.writeMem(0x42d1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x631e, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 025F
        gbc.setState(0x4f18, 0x847d, 0x3930, 0xf015, 0x5160, 0xabd9, 0x1, 0x0);
        gbc.writeMem(0x4f18, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0x4f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0260
        gbc.setState(0x900f, 0xa902, 0xa870, 0xa7ca, 0xb9a4, 0x7873, 0x0, 0x1);
        gbc.writeMem(0x900f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900f));
        EXPECT(0xff, gbc.readMem(0x9010));
        // CB FF 0261
        gbc.setState(0x7b2c, 0x4a5d, 0xab10, 0xd384, 0x1927, 0x70e7, 0x1, 0x0);
        gbc.writeMem(0x7b2c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4a5d, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0262
        gbc.setState(0x53e8, 0xe09f, 0x5080, 0x6c81, 0x5158, 0x9b19, 0x0, 0x1);
        gbc.writeMem(0x53e8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0x53ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0264
        gbc.setState(0xa1fb, 0xf79a, 0x6ed0, 0xcaef, 0xbd14, 0xbc7b, 0x1, 0x0);
        gbc.writeMem(0xa1fb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf79a, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fb));
        EXPECT(0xff, gbc.readMem(0xa1fc));
        // CB FF 0265
        gbc.setState(0xed70, 0x517a, 0x75c0, 0x3606, 0xd6fd, 0xe9e, 0x0, 0x0);
        gbc.writeMem(0xed70, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x517a, gbc.sp());
        EXPECT(0xed72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed70));
        EXPECT(0xff, gbc.readMem(0xed71));
        // CB FF 0266
        gbc.setState(0x7f7, 0x903f, 0xa990, 0x6d69, 0x36f7, 0xf66, 0x1, 0x0);
        gbc.writeMem(0x7f7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x903f, gbc.sp());
        EXPECT(0x7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0267
        gbc.setState(0xd5ff, 0x8659, 0x3290, 0x3160, 0x9ae9, 0xb232, 0x1, 0x1);
        gbc.writeMem(0xd5ff, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8659, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0xff, gbc.readMem(0xd600));
        // CB FF 0268
        gbc.setState(0x58c2, 0x74a5, 0xcf00, 0xc797, 0xf65e, 0xddb1, 0x1, 0x0);
        gbc.writeMem(0x58c2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0x58c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0269
        gbc.setState(0x9b4b, 0x73ea, 0x4ca0, 0x8820, 0x922b, 0x6501, 0x0, 0x0);
        gbc.writeMem(0x9b4b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0x9b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4b));
        EXPECT(0xff, gbc.readMem(0x9b4c));
        // CB FF 026A
        gbc.setState(0xe3f, 0xff1e, 0xef10, 0xfc2a, 0xacd3, 0xdf48, 0x0, 0x1);
        gbc.writeMem(0xe3f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0xe41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 026B
        gbc.setState(0x8f65, 0xf089, 0xee90, 0x24d5, 0x1580, 0x2f70, 0x0, 0x1);
        gbc.writeMem(0x8f65, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0x8f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f65));
        EXPECT(0xff, gbc.readMem(0x8f66));
        // CB FF 026C
        gbc.setState(0xc173, 0x47b8, 0xafe0, 0x8313, 0x4d6f, 0xdaa0, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0xff, gbc.readMem(0xc174));
        // CB FF 026D
        gbc.setState(0xdfed, 0xdde1, 0xbad0, 0x1f00, 0x8b35, 0xd65d, 0x0, 0x1);
        gbc.writeMem(0xdfed, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdde1, gbc.sp());
        EXPECT(0xdfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfed));
        EXPECT(0xff, gbc.readMem(0xdfee));
        // CB FF 026E
        gbc.setState(0xbeb3, 0xd76f, 0x7f40, 0xa4c4, 0xdb0a, 0xc42d, 0x1, 0x0);
        gbc.writeMem(0xbeb3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd76f, gbc.sp());
        EXPECT(0xbeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb3));
        EXPECT(0xff, gbc.readMem(0xbeb4));
        // CB FF 026F
        gbc.setState(0xd76c, 0x4d9e, 0x9c90, 0xb3f8, 0x8f2e, 0x6c9d, 0x1, 0x0);
        gbc.writeMem(0xd76c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4d9e, gbc.sp());
        EXPECT(0xd76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76c));
        EXPECT(0xff, gbc.readMem(0xd76d));
        // CB FF 0270
        gbc.setState(0xc3a0, 0xd3ca, 0x20d0, 0xe6b0, 0x40c1, 0x4c63, 0x0, 0x0);
        gbc.writeMem(0xc3a0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a0));
        EXPECT(0xff, gbc.readMem(0xc3a1));
        // CB FF 0271
        gbc.setState(0xc80d, 0x18fd, 0x71e0, 0x1daf, 0xf4a8, 0x2c6e, 0x0, 0x1);
        gbc.writeMem(0xc80d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0xc80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80d));
        EXPECT(0xff, gbc.readMem(0xc80e));
        // CB FF 0272
        gbc.setState(0x8fd5, 0x1540, 0xd8e0, 0x7f7e, 0x3fe7, 0xe5a7, 0x0, 0x0);
        gbc.writeMem(0x8fd5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd5));
        EXPECT(0xff, gbc.readMem(0x8fd6));
        // CB FF 0273
        gbc.setState(0x6fc8, 0x6ab, 0x8e40, 0x2d3a, 0x93e7, 0xe324, 0x0, 0x1);
        gbc.writeMem(0x6fc8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0274
        gbc.setState(0x113, 0x3a08, 0x8bc0, 0xa02a, 0x4a98, 0x3580, 0x1, 0x0);
        gbc.writeMem(0x113, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0275
        gbc.setState(0x5c8c, 0xe5ad, 0xb730, 0x7e58, 0x2891, 0x70ee, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0x5c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0276
        gbc.setState(0x846a, 0x87be, 0x4ac0, 0xb837, 0xf856, 0x6a8b, 0x1, 0x0);
        gbc.writeMem(0x846a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x87be, gbc.sp());
        EXPECT(0x846c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846a));
        EXPECT(0xff, gbc.readMem(0x846b));
        // CB FF 0277
        gbc.setState(0x718c, 0x4529, 0x46b0, 0x11bf, 0xb6a1, 0xe55b, 0x0, 0x0);
        gbc.writeMem(0x718c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4529, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0278
        gbc.setState(0x8f69, 0xba63, 0xade0, 0x3663, 0x6694, 0x43e6, 0x1, 0x1);
        gbc.writeMem(0x8f69, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xba63, gbc.sp());
        EXPECT(0x8f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f69));
        EXPECT(0xff, gbc.readMem(0x8f6a));
        // CB FF 0279
        gbc.setState(0x57e7, 0xa64, 0x9100, 0xaeb5, 0x9cb0, 0xfa50, 0x0, 0x0);
        gbc.writeMem(0x57e7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa64, gbc.sp());
        EXPECT(0x57e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 027A
        gbc.setState(0x6aa4, 0x2803, 0x2ec0, 0x716e, 0x8b32, 0x198d, 0x0, 0x0);
        gbc.writeMem(0x6aa4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2803, gbc.sp());
        EXPECT(0x6aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 027B
        gbc.setState(0x697, 0xdbad, 0x2f20, 0x66e3, 0x7dbc, 0x46dd, 0x0, 0x1);
        gbc.writeMem(0x697, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdbad, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 027C
        gbc.setState(0x95d, 0x1413, 0x6930, 0xcb70, 0x7690, 0xb3f5, 0x1, 0x0);
        gbc.writeMem(0x95d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1413, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 027D
        gbc.setState(0x2902, 0xbfea, 0xb720, 0x4ce4, 0x3fd6, 0x3d1f, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbfea, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 027E
        gbc.setState(0xbe0b, 0xed59, 0x6190, 0x224d, 0x5e91, 0x88ea, 0x1, 0x1);
        gbc.writeMem(0xbe0b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0b));
        EXPECT(0xff, gbc.readMem(0xbe0c));
        // CB FF 027F
        gbc.setState(0x1e79, 0x10a1, 0x7700, 0x5bad, 0xae27, 0x4546, 0x1, 0x0);
        gbc.writeMem(0x1e79, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x10a1, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0280
        gbc.setState(0x14a8, 0xfb87, 0xa60, 0x8818, 0xac7, 0xa92, 0x1, 0x0);
        gbc.writeMem(0x14a8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfb87, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0281
        gbc.setState(0xa51d, 0xd6d4, 0x3460, 0xd06e, 0x39d3, 0x33bc, 0x1, 0x0);
        gbc.writeMem(0xa51d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd6d4, gbc.sp());
        EXPECT(0xa51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51d));
        EXPECT(0xff, gbc.readMem(0xa51e));
        // CB FF 0282
        gbc.setState(0x611b, 0x8b1d, 0x9d20, 0xc917, 0xab1, 0xe34a, 0x1, 0x0);
        gbc.writeMem(0x611b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8b1d, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0283
        gbc.setState(0x57cf, 0x483c, 0x5fc0, 0xbc32, 0x7e53, 0xe340, 0x0, 0x0);
        gbc.writeMem(0x57cf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0x57d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0284
        gbc.setState(0xa196, 0x6730, 0xc090, 0x1c9, 0x3b10, 0x4ddf, 0x1, 0x0);
        gbc.writeMem(0xa196, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6730, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa196));
        EXPECT(0xff, gbc.readMem(0xa197));
        // CB FF 0285
        gbc.setState(0x20f7, 0xbe28, 0x1480, 0xf17e, 0x9653, 0x14ba, 0x1, 0x0);
        gbc.writeMem(0x20f7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0286
        gbc.setState(0x322b, 0x680c, 0xe080, 0x242e, 0xdc9b, 0x50dd, 0x0, 0x0);
        gbc.writeMem(0x322b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x680c, gbc.sp());
        EXPECT(0x322d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0287
        gbc.setState(0x76a3, 0x419c, 0xcc70, 0xb7ca, 0x1869, 0x286a, 0x1, 0x0);
        gbc.writeMem(0x76a3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0288
        gbc.setState(0xb87f, 0xd3a7, 0xabb0, 0x90ab, 0xcf32, 0x8259, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd3a7, gbc.sp());
        EXPECT(0xb881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87f));
        EXPECT(0xff, gbc.readMem(0xb880));
        // CB FF 0289
        gbc.setState(0xd0cc, 0x4f27, 0xebf0, 0x21c1, 0x7999, 0xc218, 0x0, 0x1);
        gbc.writeMem(0xd0cc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f27, gbc.sp());
        EXPECT(0xd0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cc));
        EXPECT(0xff, gbc.readMem(0xd0cd));
        // CB FF 028A
        gbc.setState(0x1200, 0x871d, 0xd710, 0xe19, 0xc6a5, 0xdf17, 0x1, 0x0);
        gbc.writeMem(0x1200, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 028B
        gbc.setState(0xe7aa, 0x238b, 0x54a0, 0xbeb6, 0xf014, 0xcb66, 0x0, 0x1);
        gbc.writeMem(0xe7aa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x238b, gbc.sp());
        EXPECT(0xe7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7aa));
        EXPECT(0xff, gbc.readMem(0xe7ab));
        // CB FF 028C
        gbc.setState(0xcfb, 0xee83, 0x680, 0x6d71, 0xd654, 0xe4b8, 0x0, 0x1);
        gbc.writeMem(0xcfb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0xcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 028D
        gbc.setState(0x8cf4, 0x6bf0, 0x73d0, 0xfafe, 0x37fd, 0x54cd, 0x1, 0x0);
        gbc.writeMem(0x8cf4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6bf0, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0xff, gbc.readMem(0x8cf5));
        // CB FF 028E
        gbc.setState(0x320a, 0xd66c, 0x9d30, 0xf296, 0x3b8c, 0x662c, 0x1, 0x0);
        gbc.writeMem(0x320a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd66c, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 028F
        gbc.setState(0x64e3, 0x9f02, 0x8630, 0x183e, 0x3b9b, 0x6c37, 0x1, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0290
        gbc.setState(0xa9c9, 0x43d, 0xebe0, 0xa5eb, 0xd728, 0xa348, 0x1, 0x1);
        gbc.writeMem(0xa9c9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0xa9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c9));
        EXPECT(0xff, gbc.readMem(0xa9ca));
        // CB FF 0291
        gbc.setState(0x3ad6, 0x25fe, 0x5f70, 0xec92, 0xf454, 0x5c77, 0x1, 0x0);
        gbc.writeMem(0x3ad6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0292
        gbc.setState(0xe39, 0xcf09, 0x920, 0x470b, 0xa9b6, 0xcf49, 0x0, 0x1);
        gbc.writeMem(0xe39, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0xe3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0293
        gbc.setState(0x1a18, 0xcc2f, 0xa7a0, 0xb1bf, 0x53bc, 0xd47e, 0x0, 0x1);
        gbc.writeMem(0x1a18, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcc2f, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0294
        gbc.setState(0x2c21, 0x6efb, 0xe050, 0xc583, 0xd9f, 0x5495, 0x0, 0x1);
        gbc.writeMem(0x2c21, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6efb, gbc.sp());
        EXPECT(0x2c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0295
        gbc.setState(0x12b8, 0x2197, 0xc020, 0x65a1, 0x1c5, 0xbe63, 0x0, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0296
        gbc.setState(0x22ce, 0xd3b, 0xff50, 0x49ca, 0xda49, 0xd988, 0x1, 0x1);
        gbc.writeMem(0x22ce, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd3b, gbc.sp());
        EXPECT(0x22d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0297
        gbc.setState(0xccea, 0x732, 0xd170, 0x2351, 0x6767, 0x9078, 0x1, 0x1);
        gbc.writeMem(0xccea, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0xccec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccea));
        EXPECT(0xff, gbc.readMem(0xcceb));
        // CB FF 0298
        gbc.setState(0xdb6e, 0x40f9, 0x3c80, 0xe982, 0xcdf7, 0x465f, 0x1, 0x0);
        gbc.writeMem(0xdb6e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x40f9, gbc.sp());
        EXPECT(0xdb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6e));
        EXPECT(0xff, gbc.readMem(0xdb6f));
        // CB FF 0299
        gbc.setState(0x847d, 0x8b1f, 0xa030, 0xf16a, 0x6714, 0x8074, 0x1, 0x1);
        gbc.writeMem(0x847d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847d));
        EXPECT(0xff, gbc.readMem(0x847e));
        // CB FF 029A
        gbc.setState(0x2288, 0x48f2, 0xd4a0, 0x3633, 0x12a6, 0xfc4f, 0x1, 0x1);
        gbc.writeMem(0x2288, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x48f2, gbc.sp());
        EXPECT(0x228a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 029B
        gbc.setState(0x5c95, 0xb9cf, 0xb170, 0x9183, 0xa39c, 0xf546, 0x0, 0x1);
        gbc.writeMem(0x5c95, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0x5c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 029C
        gbc.setState(0x3127, 0xbf68, 0x7110, 0xec8a, 0x8b18, 0xc4af, 0x1, 0x0);
        gbc.writeMem(0x3127, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0x3129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 029E
        gbc.setState(0x6595, 0x7b6b, 0x630, 0xdded, 0xadca, 0xdd8f, 0x1, 0x0);
        gbc.writeMem(0x6595, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7b6b, gbc.sp());
        EXPECT(0x6597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 029F
        gbc.setState(0xa2c2, 0xda86, 0x7dd0, 0xc633, 0xbb7e, 0x90e5, 0x1, 0x1);
        gbc.writeMem(0xa2c2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xda86, gbc.sp());
        EXPECT(0xa2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c2));
        EXPECT(0xff, gbc.readMem(0xa2c3));
        // CB FF 02A0
        gbc.setState(0x1c83, 0x2c1f, 0x5600, 0x12a0, 0x359d, 0x2b63, 0x1, 0x0);
        gbc.writeMem(0x1c83, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0x1c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02A1
        gbc.setState(0xa84e, 0x470b, 0xbd40, 0xe4a8, 0xee64, 0x85b7, 0x1, 0x0);
        gbc.writeMem(0xa84e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x470b, gbc.sp());
        EXPECT(0xa850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84e));
        EXPECT(0xff, gbc.readMem(0xa84f));
        // CB FF 02A2
        gbc.setState(0xa7c8, 0x3a35, 0x97a0, 0x495a, 0xf290, 0xa2e0, 0x0, 0x0);
        gbc.writeMem(0xa7c8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0xa7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c8));
        EXPECT(0xff, gbc.readMem(0xa7c9));
        // CB FF 02A3
        gbc.setState(0xd89c, 0x73e9, 0x1ea0, 0x153c, 0x7310, 0xba1, 0x0, 0x1);
        gbc.writeMem(0xd89c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x73e9, gbc.sp());
        EXPECT(0xd89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89c));
        EXPECT(0xff, gbc.readMem(0xd89d));
        // CB FF 02A5
        gbc.setState(0x179c, 0xfc41, 0xe630, 0x8554, 0xcc8f, 0x47e, 0x0, 0x0);
        gbc.writeMem(0x179c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02A6
        gbc.setState(0xc9fa, 0x62d0, 0x4540, 0xb94e, 0x5e13, 0x314e, 0x1, 0x1);
        gbc.writeMem(0xc9fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x62d0, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fa));
        EXPECT(0xff, gbc.readMem(0xc9fb));
        // CB FF 02A7
        gbc.setState(0x1ae1, 0xc97b, 0x2e90, 0xc6be, 0xf326, 0x772d, 0x0, 0x1);
        gbc.writeMem(0x1ae1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x1ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02A8
        gbc.setState(0xd2fa, 0xb414, 0x21d0, 0x8dc4, 0xfc62, 0x1, 0x1, 0x1);
        gbc.writeMem(0xd2fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0xff, gbc.readMem(0xd2fb));
        // CB FF 02A9
        gbc.setState(0x3726, 0x62bf, 0x3af0, 0x6c0e, 0xc555, 0x5e87, 0x1, 0x0);
        gbc.writeMem(0x3726, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x62bf, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02AA
        gbc.setState(0x8dc7, 0xdb43, 0x6860, 0x1ff6, 0x8fb7, 0xa8a2, 0x0, 0x0);
        gbc.writeMem(0x8dc7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc7));
        EXPECT(0xff, gbc.readMem(0x8dc8));
        // CB FF 02AB
        gbc.setState(0x13e9, 0xdb3, 0x52c0, 0xd4d1, 0xe053, 0x8b0d, 0x1, 0x0);
        gbc.writeMem(0x13e9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdb3, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02AC
        gbc.setState(0x5f04, 0xa3a6, 0xef40, 0xecf5, 0x9e, 0x39c2, 0x0, 0x1);
        gbc.writeMem(0x5f04, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa3a6, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02AD
        gbc.setState(0x6e5f, 0x372b, 0xb940, 0xa303, 0x1b1a, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0x6e5f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x372b, gbc.sp());
        EXPECT(0x6e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02AE
        gbc.setState(0x3c94, 0xe652, 0x7e60, 0x2cd0, 0xfb27, 0x45fb, 0x0, 0x0);
        gbc.writeMem(0x3c94, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0x3c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02AF
        gbc.setState(0x5a9a, 0xd3be, 0xb220, 0x3529, 0x298, 0xe2cf, 0x0, 0x1);
        gbc.writeMem(0x5a9a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd3be, gbc.sp());
        EXPECT(0x5a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02B0
        gbc.setState(0xc089, 0x8cf2, 0x6c70, 0x4660, 0x7b88, 0x9d7a, 0x1, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc089));
        EXPECT(0xff, gbc.readMem(0xc08a));
        // CB FF 02B1
        gbc.setState(0xe69d, 0x196d, 0xa600, 0x97f8, 0x672c, 0xde85, 0x0, 0x1);
        gbc.writeMem(0xe69d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x196d, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69d));
        EXPECT(0xff, gbc.readMem(0xe69e));
        // CB FF 02B2
        gbc.setState(0xbca7, 0x9856, 0x6a80, 0x32e3, 0x3239, 0x505e, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9856, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca7));
        EXPECT(0xff, gbc.readMem(0xbca8));
        // CB FF 02B3
        gbc.setState(0xdbad, 0x520a, 0xba70, 0x8867, 0x2d8d, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0xdbad, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0xdbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbad));
        EXPECT(0xff, gbc.readMem(0xdbae));
        // CB FF 02B4
        gbc.setState(0x77a0, 0x4e7, 0xa110, 0x66b8, 0x5c4, 0x9093, 0x1, 0x1);
        gbc.writeMem(0x77a0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4e7, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02B5
        gbc.setState(0x8419, 0x5d21, 0xd0, 0x190b, 0x7528, 0x5a4f, 0x0, 0x0);
        gbc.writeMem(0x8419, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x841b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8419));
        EXPECT(0xff, gbc.readMem(0x841a));
        // CB FF 02B6
        gbc.setState(0xe4a6, 0xd54d, 0xd0b0, 0x1c2b, 0xe47b, 0xadb3, 0x1, 0x1);
        gbc.writeMem(0xe4a6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0xe4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a6));
        EXPECT(0xff, gbc.readMem(0xe4a7));
        // CB FF 02B7
        gbc.setState(0x25e1, 0xa437, 0x87c0, 0xa7f4, 0x4640, 0x6a57, 0x0, 0x1);
        gbc.writeMem(0x25e1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0x25e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02B8
        gbc.setState(0xebf2, 0x2043, 0xb0a0, 0x2a97, 0x4ba, 0xa5ad, 0x1, 0x0);
        gbc.writeMem(0xebf2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0xebf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf2));
        EXPECT(0xff, gbc.readMem(0xebf3));
        // CB FF 02B9
        gbc.setState(0x7525, 0x619a, 0x7bf0, 0x5dd1, 0x9080, 0xfab4, 0x0, 0x0);
        gbc.writeMem(0x7525, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x619a, gbc.sp());
        EXPECT(0x7527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02BA
        gbc.setState(0x306e, 0x76df, 0xa440, 0x2be7, 0xb475, 0x1f57, 0x0, 0x0);
        gbc.writeMem(0x306e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0x3070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02BB
        gbc.setState(0xaa7b, 0xbc6e, 0x9d00, 0xf671, 0x2eb4, 0x2a97, 0x1, 0x1);
        gbc.writeMem(0xaa7b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbc6e, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7b));
        EXPECT(0xff, gbc.readMem(0xaa7c));
        // CB FF 02BC
        gbc.setState(0x2d8d, 0x3174, 0xa8d0, 0x4b7e, 0xe8e8, 0x19c2, 0x0, 0x0);
        gbc.writeMem(0x2d8d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3174, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02BD
        gbc.setState(0x512c, 0x8aa9, 0xc2c0, 0xd97e, 0x62a8, 0x1a8b, 0x1, 0x1);
        gbc.writeMem(0x512c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8aa9, gbc.sp());
        EXPECT(0x512e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02BF
        gbc.setState(0xd463, 0x57a5, 0x83c0, 0x2812, 0x8a91, 0xe665, 0x0, 0x1);
        gbc.writeMem(0xd463, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x57a5, gbc.sp());
        EXPECT(0xd465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd463));
        EXPECT(0xff, gbc.readMem(0xd464));
        // CB FF 02C0
        gbc.setState(0x9b44, 0x9ee4, 0x7b10, 0x2485, 0x436c, 0x812e, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9ee4, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b44));
        EXPECT(0xff, gbc.readMem(0x9b45));
        // CB FF 02C1
        gbc.setState(0xd99a, 0xa15, 0xda00, 0x86de, 0xc7c1, 0x1a9f, 0x0, 0x0);
        gbc.writeMem(0xd99a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa15, gbc.sp());
        EXPECT(0xd99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99a));
        EXPECT(0xff, gbc.readMem(0xd99b));
        // CB FF 02C2
        gbc.setState(0x2c9b, 0xb4f2, 0x1320, 0xaa5a, 0x84ac, 0xdb97, 0x0, 0x0);
        gbc.writeMem(0x2c9b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb4f2, gbc.sp());
        EXPECT(0x2c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02C3
        gbc.setState(0xe545, 0x1787, 0xd5d0, 0xd6a7, 0x9639, 0x8612, 0x0, 0x0);
        gbc.writeMem(0xe545, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1787, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe545));
        EXPECT(0xff, gbc.readMem(0xe546));
        // CB FF 02C4
        gbc.setState(0x5124, 0xbef2, 0x22d0, 0xdc94, 0x8d2, 0x8afd, 0x1, 0x0);
        gbc.writeMem(0x5124, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbef2, gbc.sp());
        EXPECT(0x5126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02C5
        gbc.setState(0xaee9, 0x5b88, 0x7140, 0x5f8c, 0x5a46, 0xe231, 0x1, 0x0);
        gbc.writeMem(0xaee9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5b88, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee9));
        EXPECT(0xff, gbc.readMem(0xaeea));
        // CB FF 02C6
        gbc.setState(0xdc1f, 0x5ab, 0x3080, 0x7778, 0xb43c, 0xd601, 0x0, 0x0);
        gbc.writeMem(0xdc1f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5ab, gbc.sp());
        EXPECT(0xdc21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1f));
        EXPECT(0xff, gbc.readMem(0xdc20));
        // CB FF 02C7
        gbc.setState(0xa96f, 0x685, 0x9f60, 0x1aaf, 0x8ac, 0xcf6f, 0x1, 0x0);
        gbc.writeMem(0xa96f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96f));
        EXPECT(0xff, gbc.readMem(0xa970));
        // CB FF 02C8
        gbc.setState(0x6eab, 0x75a, 0x3830, 0xe43e, 0x9943, 0xebea, 0x0, 0x1);
        gbc.writeMem(0x6eab, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x75a, gbc.sp());
        EXPECT(0x6ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02C9
        gbc.setState(0xc34b, 0x307f, 0x55e0, 0xeef6, 0xb024, 0x692a, 0x0, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x307f, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0xff, gbc.readMem(0xc34c));
        // CB FF 02CA
        gbc.setState(0x4b47, 0xe981, 0x37c0, 0x24a7, 0x1b15, 0xdb2d, 0x1, 0x1);
        gbc.writeMem(0x4b47, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0x4b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02CB
        gbc.setState(0x9078, 0xd91c, 0xacf0, 0x73e7, 0xf99a, 0x3104, 0x0, 0x1);
        gbc.writeMem(0x9078, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd91c, gbc.sp());
        EXPECT(0x907a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9078));
        EXPECT(0xff, gbc.readMem(0x9079));
        // CB FF 02CC
        gbc.setState(0x623e, 0x48f7, 0xad10, 0x9cc6, 0x1aad, 0x2520, 0x1, 0x0);
        gbc.writeMem(0x623e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02CD
        gbc.setState(0x216d, 0xbee6, 0xe5b0, 0x4bf0, 0xcb2e, 0x8a0c, 0x0, 0x0);
        gbc.writeMem(0x216d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbee6, gbc.sp());
        EXPECT(0x216f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02CE
        gbc.setState(0x7780, 0xa7b0, 0x310, 0xce54, 0x8a48, 0xbef6, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa7b0, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02CF
        gbc.setState(0x8651, 0x6d24, 0xf560, 0xc65e, 0x87a6, 0x57f6, 0x1, 0x1);
        gbc.writeMem(0x8651, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6d24, gbc.sp());
        EXPECT(0x8653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8651));
        EXPECT(0xff, gbc.readMem(0x8652));
        // CB FF 02D0
        gbc.setState(0xb00, 0xba26, 0x70e0, 0x799a, 0x85fd, 0x9723, 0x1, 0x1);
        gbc.writeMem(0xb00, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xba26, gbc.sp());
        EXPECT(0xb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02D1
        gbc.setState(0xbf1, 0xa229, 0x43b0, 0x895f, 0x7f55, 0x65ca, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa229, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02D2
        gbc.setState(0x77fb, 0x2fd5, 0x2190, 0x9f98, 0xef8f, 0xcda0, 0x1, 0x0);
        gbc.writeMem(0x77fb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02D3
        gbc.setState(0x3692, 0xe379, 0x7440, 0xc2d, 0x47ba, 0xba50, 0x1, 0x0);
        gbc.writeMem(0x3692, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe379, gbc.sp());
        EXPECT(0x3694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02D4
        gbc.setState(0xe022, 0xc355, 0xddf0, 0xc590, 0x4981, 0xdf1b, 0x0, 0x1);
        gbc.writeMem(0xe022, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc355, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe022));
        EXPECT(0xff, gbc.readMem(0xe023));
        // CB FF 02D5
        gbc.setState(0x49d1, 0xfea5, 0x82d0, 0x4f53, 0xf69e, 0x1b9, 0x1, 0x0);
        gbc.writeMem(0x49d1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02D7
        gbc.setState(0x127c, 0x390, 0xf5c0, 0xa2a3, 0x5b16, 0xb1da, 0x0, 0x0);
        gbc.writeMem(0x127c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0x127e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02D9
        gbc.setState(0x9fbc, 0xdce4, 0x4420, 0x66bc, 0x2d5b, 0xdd95, 0x0, 0x0);
        gbc.writeMem(0x9fbc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x9fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbc));
        EXPECT(0xff, gbc.readMem(0x9fbd));
        // CB FF 02DA
        gbc.setState(0x1b11, 0x1ce1, 0xa1f0, 0x94bd, 0x7018, 0xb8f4, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0x1b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02DB
        gbc.setState(0xe53, 0x84d7, 0x7a0, 0x5d2d, 0xfa18, 0x20ec, 0x0, 0x0);
        gbc.writeMem(0xe53, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02DC
        gbc.setState(0xb70c, 0xd53f, 0xffb0, 0xac2f, 0x4dd1, 0x233b, 0x0, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0xff, gbc.readMem(0xb70d));
        // CB FF 02DD
        gbc.setState(0x4228, 0x45b6, 0xcd70, 0xc677, 0x4cd8, 0xfe71, 0x1, 0x1);
        gbc.writeMem(0x4228, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0x422a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02DE
        gbc.setState(0xef3e, 0x2821, 0x1050, 0x6b2a, 0xc5b2, 0xace2, 0x1, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0xff, gbc.readMem(0xef3f));
        // CB FF 02DF
        gbc.setState(0xe158, 0x324f, 0x6960, 0xbfe, 0x92bf, 0x863a, 0x1, 0x0);
        gbc.writeMem(0xe158, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x324f, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe158));
        EXPECT(0xff, gbc.readMem(0xe159));
        // CB FF 02E0
        gbc.setState(0xbdf8, 0xd0e0, 0x83f0, 0xa1ad, 0x29f2, 0x5f4e, 0x1, 0x0);
        gbc.writeMem(0xbdf8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd0e0, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf8));
        EXPECT(0xff, gbc.readMem(0xbdf9));
        // CB FF 02E1
        gbc.setState(0xa566, 0x5cba, 0xede0, 0xafc8, 0x5bd0, 0x90a4, 0x1, 0x1);
        gbc.writeMem(0xa566, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0xa568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa566));
        EXPECT(0xff, gbc.readMem(0xa567));
        // CB FF 02E2
        gbc.setState(0xe0fd, 0xdc08, 0xc320, 0x5274, 0xf262, 0xaaed, 0x0, 0x1);
        gbc.writeMem(0xe0fd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0xe0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0fd));
        EXPECT(0xff, gbc.readMem(0xe0fe));
        // CB FF 02E3
        gbc.setState(0x6177, 0x5261, 0x81b0, 0x2a30, 0x268e, 0x11fa, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5261, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02E4
        gbc.setState(0x109b, 0xaf1e, 0x8f30, 0xb190, 0x3f90, 0x383e, 0x1, 0x1);
        gbc.writeMem(0x109b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf1e, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02E5
        gbc.setState(0x1c2a, 0x559c, 0x46e0, 0xc223, 0x9e, 0x9a10, 0x1, 0x1);
        gbc.writeMem(0x1c2a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x559c, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02E6
        gbc.setState(0x644e, 0x46ae, 0x7470, 0xf2e7, 0xa7b8, 0x219, 0x1, 0x1);
        gbc.writeMem(0x644e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46ae, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02E7
        gbc.setState(0x3576, 0xaefc, 0xf000, 0xe7b4, 0x61a4, 0x6c39, 0x1, 0x0);
        gbc.writeMem(0x3576, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaefc, gbc.sp());
        EXPECT(0x3578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02E8
        gbc.setState(0xa06d, 0x4838, 0x6400, 0x2280, 0xb448, 0x91e9, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4838, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06d));
        EXPECT(0xff, gbc.readMem(0xa06e));
        // CB FF 02E9
        gbc.setState(0x4b8f, 0xa485, 0xe090, 0x8e0, 0xe4e3, 0x7aa9, 0x1, 0x0);
        gbc.writeMem(0x4b8f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa485, gbc.sp());
        EXPECT(0x4b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02EA
        gbc.setState(0x140b, 0xb739, 0x9130, 0x451e, 0x649a, 0xb9, 0x0, 0x0);
        gbc.writeMem(0x140b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02EB
        gbc.setState(0xde3, 0xf5b1, 0x6b20, 0xcbcc, 0xdf8, 0x59a9, 0x0, 0x0);
        gbc.writeMem(0xde3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf5b1, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02EC
        gbc.setState(0x1a9e, 0x6684, 0xc540, 0xca7a, 0x355e, 0x9924, 0x0, 0x1);
        gbc.writeMem(0x1a9e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0x1aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02ED
        gbc.setState(0xa716, 0x3ecf, 0x8530, 0xd5c3, 0x8c27, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0xa716, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa716));
        EXPECT(0xff, gbc.readMem(0xa717));
        // CB FF 02EE
        gbc.setState(0xc940, 0x4581, 0xea70, 0x1c19, 0x7c6a, 0x1576, 0x1, 0x0);
        gbc.writeMem(0xc940, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc940));
        EXPECT(0xff, gbc.readMem(0xc941));
        // CB FF 02EF
        gbc.setState(0xa0f1, 0xb435, 0x4dd0, 0xeadc, 0x66dd, 0x8ad5, 0x1, 0x1);
        gbc.writeMem(0xa0f1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb435, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f1));
        EXPECT(0xff, gbc.readMem(0xa0f2));
        // CB FF 02F0
        gbc.setState(0xbc32, 0x3030, 0xaed0, 0x9e4, 0xb3ca, 0x5c4d, 0x1, 0x1);
        gbc.writeMem(0xbc32, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc32));
        EXPECT(0xff, gbc.readMem(0xbc33));
        // CB FF 02F1
        gbc.setState(0x9348, 0x41d5, 0x6ed0, 0xddcc, 0xdfc1, 0xb02f, 0x1, 0x1);
        gbc.writeMem(0x9348, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x41d5, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9348));
        EXPECT(0xff, gbc.readMem(0x9349));
        // CB FF 02F2
        gbc.setState(0x50a, 0x34cd, 0x5f00, 0x83ca, 0x89b5, 0xe5ce, 0x0, 0x1);
        gbc.writeMem(0x50a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x34cd, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02F3
        gbc.setState(0xc1c6, 0x6c06, 0x5fe0, 0x3c9a, 0x5171, 0x27, 0x0, 0x0);
        gbc.writeMem(0xc1c6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6c06, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c6));
        EXPECT(0xff, gbc.readMem(0xc1c7));
        // CB FF 02F4
        gbc.setState(0xe0c7, 0x391f, 0xbd90, 0x81c6, 0xadfc, 0x922f, 0x0, 0x1);
        gbc.writeMem(0xe0c7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c7));
        EXPECT(0xff, gbc.readMem(0xe0c8));
        // CB FF 02F5
        gbc.setState(0x3212, 0xefa5, 0xc040, 0xc01f, 0x736d, 0xd60, 0x1, 0x1);
        gbc.writeMem(0x3212, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02F6
        gbc.setState(0xbbe, 0x2d0e, 0x6460, 0xeced, 0xf145, 0x7acc, 0x0, 0x1);
        gbc.writeMem(0xbbe, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0xbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02F7
        gbc.setState(0x50d8, 0xccda, 0x3f60, 0x2086, 0x7e6c, 0x79eb, 0x1, 0x1);
        gbc.writeMem(0x50d8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0x50da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02F8
        gbc.setState(0xc80f, 0xb95d, 0xc820, 0x5072, 0x7c88, 0x9cee, 0x0, 0x1);
        gbc.writeMem(0xc80f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0xc811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80f));
        EXPECT(0xff, gbc.readMem(0xc810));
        // CB FF 02F9
        gbc.setState(0xe92f, 0x3a26, 0xb490, 0x49e8, 0xc8d9, 0x146c, 0x1, 0x0);
        gbc.writeMem(0xe92f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a26, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0xff, gbc.readMem(0xe930));
        // CB FF 02FA
        gbc.setState(0x5b04, 0x36e4, 0x6ce0, 0x46e6, 0x6e44, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0x5b04, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x5b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02FB
        gbc.setState(0x336a, 0xe98c, 0xf7d0, 0xa7f3, 0x9881, 0xe847, 0x0, 0x0);
        gbc.writeMem(0x336a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0x336c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 02FC
        gbc.setState(0x3024, 0x2e28, 0xa6c0, 0x61f2, 0xa319, 0x1f81, 0x0, 0x1);
        gbc.writeMem(0x3024, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0x3026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02FD
        gbc.setState(0xdb0a, 0xbccf, 0xdfd0, 0xed7d, 0x5b2, 0x4389, 0x0, 0x0);
        gbc.writeMem(0xdb0a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0a));
        EXPECT(0xff, gbc.readMem(0xdb0b));
        // CB FF 02FE
        gbc.setState(0x2322, 0x1055, 0xa0e0, 0x6930, 0x7ab7, 0x1f90, 0x1, 0x1);
        gbc.writeMem(0x2322, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0x2324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 02FF
        gbc.setState(0xbcdf, 0x94c3, 0x55d0, 0xf787, 0x4f7a, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0xbcdf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x94c3, gbc.sp());
        EXPECT(0xbce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdf));
        EXPECT(0xff, gbc.readMem(0xbce0));
        // CB FF 0300
        gbc.setState(0x57dc, 0x6dec, 0x2f00, 0x2d19, 0xfd20, 0x7293, 0x1, 0x1);
        gbc.writeMem(0x57dc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6dec, gbc.sp());
        EXPECT(0x57de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0301
        gbc.setState(0x1663, 0x545e, 0xa980, 0x2cbf, 0x929f, 0xb981, 0x0, 0x1);
        gbc.writeMem(0x1663, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x545e, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0302
        gbc.setState(0xcbfd, 0x565, 0x7210, 0x1cff, 0x4195, 0x3e52, 0x1, 0x0);
        gbc.writeMem(0xcbfd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x565, gbc.sp());
        EXPECT(0xcbff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfd));
        EXPECT(0xff, gbc.readMem(0xcbfe));
        // CB FF 0303
        gbc.setState(0x9d25, 0xf39e, 0x5360, 0x241c, 0x25e6, 0x2cfb, 0x0, 0x1);
        gbc.writeMem(0x9d25, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf39e, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d25));
        EXPECT(0xff, gbc.readMem(0x9d26));
        // CB FF 0304
        gbc.setState(0x4824, 0xfc7b, 0x32f0, 0x6136, 0xefcb, 0x4916, 0x0, 0x1);
        gbc.writeMem(0x4824, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfc7b, gbc.sp());
        EXPECT(0x4826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0305
        gbc.setState(0x2802, 0xcafb, 0x9e0, 0xb0a8, 0x5a0b, 0x7219, 0x0, 0x1);
        gbc.writeMem(0x2802, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcafb, gbc.sp());
        EXPECT(0x2804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0306
        gbc.setState(0xcda4, 0xc133, 0x39c0, 0x1989, 0xa647, 0xaa12, 0x1, 0x0);
        gbc.writeMem(0xcda4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc133, gbc.sp());
        EXPECT(0xcda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda4));
        EXPECT(0xff, gbc.readMem(0xcda5));
        // CB FF 0307
        gbc.setState(0xc351, 0xbbf3, 0x5410, 0xa22f, 0xec77, 0x9959, 0x0, 0x0);
        gbc.writeMem(0xc351, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbbf3, gbc.sp());
        EXPECT(0xc353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc351));
        EXPECT(0xff, gbc.readMem(0xc352));
        // CB FF 0308
        gbc.setState(0xd8f8, 0xb064, 0x11d0, 0xd900, 0xc910, 0x8d76, 0x1, 0x1);
        gbc.writeMem(0xd8f8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb064, gbc.sp());
        EXPECT(0xd8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f8));
        EXPECT(0xff, gbc.readMem(0xd8f9));
        // CB FF 0309
        gbc.setState(0x350c, 0xef0f, 0xd5c0, 0x818c, 0x3aa9, 0x198c, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xef0f, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 030A
        gbc.setState(0xee37, 0xed42, 0xc440, 0xf578, 0x5853, 0xbc24, 0x0, 0x0);
        gbc.writeMem(0xee37, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xed42, gbc.sp());
        EXPECT(0xee39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee37));
        EXPECT(0xff, gbc.readMem(0xee38));
        // CB FF 030B
        gbc.setState(0xb54b, 0xeeeb, 0x7710, 0xc20d, 0x9fcb, 0xe114, 0x1, 0x1);
        gbc.writeMem(0xb54b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54b));
        EXPECT(0xff, gbc.readMem(0xb54c));
        // CB FF 030C
        gbc.setState(0x921f, 0xb620, 0xd4a0, 0x4b47, 0xf4ed, 0x141d, 0x0, 0x0);
        gbc.writeMem(0x921f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb620, gbc.sp());
        EXPECT(0x9221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921f));
        EXPECT(0xff, gbc.readMem(0x9220));
        // CB FF 030D
        gbc.setState(0x7c99, 0x130b, 0x6470, 0x9dbd, 0xc0b3, 0x56b8, 0x0, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 030E
        gbc.setState(0xe306, 0xe9af, 0xb950, 0x8bee, 0x4926, 0x6046, 0x1, 0x1);
        gbc.writeMem(0xe306, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0xe308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe306));
        EXPECT(0xff, gbc.readMem(0xe307));
        // CB FF 030F
        gbc.setState(0xaad9, 0xa3c2, 0x3920, 0x224f, 0x3b1a, 0x1563, 0x1, 0x1);
        gbc.writeMem(0xaad9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad9));
        EXPECT(0xff, gbc.readMem(0xaada));
        // CB FF 0310
        gbc.setState(0x11ca, 0x26cf, 0xc560, 0x8652, 0x2b40, 0x6f79, 0x0, 0x0);
        gbc.writeMem(0x11ca, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x26cf, gbc.sp());
        EXPECT(0x11cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0311
        gbc.setState(0x9f7f, 0xaeee, 0xe090, 0x623b, 0xb71, 0x306b, 0x1, 0x0);
        gbc.writeMem(0x9f7f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaeee, gbc.sp());
        EXPECT(0x9f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7f));
        EXPECT(0xff, gbc.readMem(0x9f80));
        // CB FF 0312
        gbc.setState(0x42c6, 0x848e, 0x74b0, 0x478d, 0xd64, 0x1078, 0x1, 0x0);
        gbc.writeMem(0x42c6, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x848e, gbc.sp());
        EXPECT(0x42c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0313
        gbc.setState(0x102c, 0xc13a, 0xa9b0, 0x7d57, 0x5be, 0x6e0a, 0x1, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0314
        gbc.setState(0xe36c, 0x1a1a, 0x9ea0, 0x6f65, 0x3ad, 0xedb, 0x0, 0x1);
        gbc.writeMem(0xe36c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1a1a, gbc.sp());
        EXPECT(0xe36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36c));
        EXPECT(0xff, gbc.readMem(0xe36d));
        // CB FF 0315
        gbc.setState(0x7f17, 0x2efe, 0x6a30, 0xab01, 0xa660, 0xdaf7, 0x0, 0x1);
        gbc.writeMem(0x7f17, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2efe, gbc.sp());
        EXPECT(0x7f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0316
        gbc.setState(0x7c9d, 0x1069, 0xe2d0, 0x5560, 0xa64d, 0xfeec, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0317
        gbc.setState(0x630a, 0x4dc1, 0xf540, 0xb087, 0x1195, 0x8da8, 0x1, 0x0);
        gbc.writeMem(0x630a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0318
        gbc.setState(0x671d, 0xee0e, 0x3bd0, 0xf6a7, 0x10f1, 0x475d, 0x1, 0x0);
        gbc.writeMem(0x671d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0319
        gbc.setState(0x6a38, 0xdf80, 0x7fe0, 0x331a, 0x4cfd, 0x4060, 0x0, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdf80, gbc.sp());
        EXPECT(0x6a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 031A
        gbc.setState(0xe569, 0xe631, 0xfb0, 0x7334, 0x371, 0x84af, 0x1, 0x1);
        gbc.writeMem(0xe569, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xe56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe569));
        EXPECT(0xff, gbc.readMem(0xe56a));
        // CB FF 031B
        gbc.setState(0x9311, 0x5a0c, 0xd970, 0xe519, 0x7361, 0xef4e, 0x1, 0x0);
        gbc.writeMem(0x9311, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x9313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9311));
        EXPECT(0xff, gbc.readMem(0x9312));
        // CB FF 031C
        gbc.setState(0x15a8, 0xeea9, 0xfb30, 0xcf66, 0xc043, 0x27b8, 0x1, 0x0);
        gbc.writeMem(0x15a8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeea9, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 031D
        gbc.setState(0x804, 0x7b17, 0x54c0, 0xc775, 0xc48d, 0x62c1, 0x0, 0x1);
        gbc.writeMem(0x804, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 031E
        gbc.setState(0xa19a, 0x1b1c, 0xaa40, 0x8513, 0x97c5, 0xc0b8, 0x1, 0x1);
        gbc.writeMem(0xa19a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1b1c, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19a));
        EXPECT(0xff, gbc.readMem(0xa19b));
        // CB FF 031F
        gbc.setState(0x343f, 0xf20f, 0xf540, 0x4abb, 0x46e, 0xa38d, 0x1, 0x1);
        gbc.writeMem(0x343f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf20f, gbc.sp());
        EXPECT(0x3441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0320
        gbc.setState(0x6073, 0x3f22, 0xac70, 0x9c69, 0x921e, 0xaff5, 0x0, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3f22, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0321
        gbc.setState(0xc42b, 0xe35c, 0xb120, 0x11f2, 0xc9bd, 0xf4ba, 0x1, 0x1);
        gbc.writeMem(0xc42b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42b));
        EXPECT(0xff, gbc.readMem(0xc42c));
        // CB FF 0322
        gbc.setState(0x2fd3, 0xb3b5, 0xd6c0, 0x24b6, 0x3ba3, 0x77b4, 0x1, 0x0);
        gbc.writeMem(0x2fd3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0323
        gbc.setState(0x651f, 0xabc8, 0xb90, 0xb40a, 0xc5b2, 0x22f5, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xabc8, gbc.sp());
        EXPECT(0x6521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0324
        gbc.setState(0x33ad, 0x928, 0x9790, 0x7c6b, 0x1ce1, 0xb800, 0x0, 0x0);
        gbc.writeMem(0x33ad, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x928, gbc.sp());
        EXPECT(0x33af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0325
        gbc.setState(0x33c3, 0xb285, 0x7fd0, 0x9655, 0xa1e1, 0x58cb, 0x1, 0x1);
        gbc.writeMem(0x33c3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0326
        gbc.setState(0x17b, 0x9ecf, 0x30c0, 0x5d5, 0x6d6d, 0xa67f, 0x1, 0x1);
        gbc.writeMem(0x17b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0x17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0327
        gbc.setState(0x371e, 0x3588, 0x4030, 0xc8e0, 0x8aa3, 0xcc47, 0x0, 0x1);
        gbc.writeMem(0x371e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0329
        gbc.setState(0xe36d, 0x31ab, 0x2090, 0xf3e0, 0x437, 0x65dc, 0x1, 0x1);
        gbc.writeMem(0xe36d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x31ab, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36d));
        EXPECT(0xff, gbc.readMem(0xe36e));
        // CB FF 032A
        gbc.setState(0xd85f, 0xfbc5, 0x1b20, 0xaf5e, 0xed93, 0x8b1a, 0x0, 0x1);
        gbc.writeMem(0xd85f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfbc5, gbc.sp());
        EXPECT(0xd861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85f));
        EXPECT(0xff, gbc.readMem(0xd860));
        // CB FF 032B
        gbc.setState(0x6408, 0xe5e4, 0x1420, 0x86f5, 0x77b7, 0x3bfe, 0x0, 0x0);
        gbc.writeMem(0x6408, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0x640a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 032C
        gbc.setState(0xd23e, 0x3740, 0xca80, 0xdf02, 0x223, 0x73e, 0x1, 0x1);
        gbc.writeMem(0xd23e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23e));
        EXPECT(0xff, gbc.readMem(0xd23f));
        // CB FF 032D
        gbc.setState(0x5a6d, 0x7746, 0x81b0, 0xc7d0, 0xb859, 0x2349, 0x1, 0x1);
        gbc.writeMem(0x5a6d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7746, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 032E
        gbc.setState(0xb0d4, 0xb5c5, 0x2f70, 0x218d, 0xd70e, 0x6c9f, 0x1, 0x0);
        gbc.writeMem(0xb0d4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb5c5, gbc.sp());
        EXPECT(0xb0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d4));
        EXPECT(0xff, gbc.readMem(0xb0d5));
        // CB FF 032F
        gbc.setState(0xe9df, 0x6333, 0xc820, 0x1b3b, 0xf4d8, 0x6f8c, 0x0, 0x1);
        gbc.writeMem(0xe9df, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6333, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9df));
        EXPECT(0xff, gbc.readMem(0xe9e0));
        // CB FF 0330
        gbc.setState(0xd427, 0x878e, 0x25c0, 0x9e35, 0x92e4, 0x6d0c, 0x0, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x878e, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd427));
        EXPECT(0xff, gbc.readMem(0xd428));
        // CB FF 0331
        gbc.setState(0x2157, 0x856d, 0xe5a0, 0xd6c9, 0xc178, 0x9c56, 0x0, 0x1);
        gbc.writeMem(0x2157, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x2159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0332
        gbc.setState(0x8b47, 0x4531, 0xc1d0, 0x5a33, 0x4688, 0x9229, 0x0, 0x0);
        gbc.writeMem(0x8b47, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4531, gbc.sp());
        EXPECT(0x8b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b47));
        EXPECT(0xff, gbc.readMem(0x8b48));
        // CB FF 0333
        gbc.setState(0xd4d8, 0xd890, 0x140, 0xf40b, 0x4730, 0x734b, 0x1, 0x0);
        gbc.writeMem(0xd4d8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd890, gbc.sp());
        EXPECT(0xd4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d8));
        EXPECT(0xff, gbc.readMem(0xd4d9));
        // CB FF 0334
        gbc.setState(0x45df, 0xd852, 0x7dc0, 0x6149, 0x1cd9, 0x3bdb, 0x1, 0x0);
        gbc.writeMem(0x45df, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd852, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0335
        gbc.setState(0x65bf, 0x4801, 0x5ed0, 0x3f48, 0x8ce5, 0x1cd2, 0x0, 0x0);
        gbc.writeMem(0x65bf, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4801, gbc.sp());
        EXPECT(0x65c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0336
        gbc.setState(0x9a50, 0xd6d7, 0x95b0, 0x32bb, 0x148d, 0xf904, 0x1, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a50));
        EXPECT(0xff, gbc.readMem(0x9a51));
        // CB FF 0337
        gbc.setState(0x938d, 0x8d5e, 0xd990, 0x7790, 0x78f4, 0xc7f9, 0x0, 0x0);
        gbc.writeMem(0x938d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8d5e, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938d));
        EXPECT(0xff, gbc.readMem(0x938e));
        // CB FF 0338
        gbc.setState(0x1846, 0xbf4, 0x230, 0xaf5f, 0x5a45, 0xe882, 0x0, 0x0);
        gbc.writeMem(0x1846, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf4, gbc.sp());
        EXPECT(0x1848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0339
        gbc.setState(0x86fa, 0x733f, 0x9fc0, 0x73ed, 0x1f3c, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0x86fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0xff, gbc.readMem(0x86fb));
        // CB FF 033A
        gbc.setState(0x7986, 0x7b8a, 0xa920, 0xdafb, 0x5030, 0x8054, 0x0, 0x1);
        gbc.writeMem(0x7986, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b8a, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 033B
        gbc.setState(0x43d8, 0x2f18, 0x81f0, 0x3f11, 0x2b61, 0x2734, 0x1, 0x0);
        gbc.writeMem(0x43d8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x43da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 033C
        gbc.setState(0xc154, 0x5070, 0x66f0, 0xe0fc, 0xb596, 0x5ff0, 0x1, 0x1);
        gbc.writeMem(0xc154, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5070, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc154));
        EXPECT(0xff, gbc.readMem(0xc155));
        // CB FF 033D
        gbc.setState(0x6216, 0x6f39, 0xac40, 0xeef, 0x91a8, 0x81b, 0x1, 0x0);
        gbc.writeMem(0x6216, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6f39, gbc.sp());
        EXPECT(0x6218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 033E
        gbc.setState(0x8a14, 0xa326, 0xf940, 0xbad7, 0x714c, 0x425b, 0x1, 0x0);
        gbc.writeMem(0x8a14, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a14));
        EXPECT(0xff, gbc.readMem(0x8a15));
        // CB FF 0340
        gbc.setState(0xcd7a, 0xfb24, 0x8f80, 0xb013, 0xdd7d, 0xa0b4, 0x1, 0x0);
        gbc.writeMem(0xcd7a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0xcd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7a));
        EXPECT(0xff, gbc.readMem(0xcd7b));
        // CB FF 0341
        gbc.setState(0xa61f, 0x9d05, 0xd160, 0x6046, 0xa718, 0x7428, 0x1, 0x1);
        gbc.writeMem(0xa61f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0xa621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61f));
        EXPECT(0xff, gbc.readMem(0xa620));
        // CB FF 0342
        gbc.setState(0x4e4a, 0xc525, 0xc190, 0xa1ec, 0x9663, 0x859f, 0x0, 0x1);
        gbc.writeMem(0x4e4a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc525, gbc.sp());
        EXPECT(0x4e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0343
        gbc.setState(0x66ce, 0x1c1d, 0x44b0, 0xb170, 0x27ed, 0x4d05, 0x0, 0x1);
        gbc.writeMem(0x66ce, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1c1d, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0345
        gbc.setState(0xb77e, 0xd17f, 0x15b0, 0x46fc, 0x8410, 0x598f, 0x1, 0x0);
        gbc.writeMem(0xb77e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd17f, gbc.sp());
        EXPECT(0xb780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77e));
        EXPECT(0xff, gbc.readMem(0xb77f));
        // CB FF 0346
        gbc.setState(0x5c1b, 0x80ca, 0x9410, 0xd5ce, 0xb7a0, 0xa2f, 0x0, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x5c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0347
        gbc.setState(0xd05c, 0x70a7, 0xa40, 0x8bfa, 0xf8f1, 0x319d, 0x1, 0x1);
        gbc.writeMem(0xd05c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0xd05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05c));
        EXPECT(0xff, gbc.readMem(0xd05d));
        // CB FF 0348
        gbc.setState(0xb689, 0x7a81, 0xe5a0, 0xb82, 0xcdff, 0x3b6f, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0xb68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb689));
        EXPECT(0xff, gbc.readMem(0xb68a));
        // CB FF 0349
        gbc.setState(0xc679, 0x8bda, 0x1020, 0xdbc3, 0x8a0f, 0x829, 0x1, 0x1);
        gbc.writeMem(0xc679, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0xc67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc679));
        EXPECT(0xff, gbc.readMem(0xc67a));
        // CB FF 034A
        gbc.setState(0x2aa5, 0x6f50, 0xb030, 0x1d9b, 0xf266, 0xf59a, 0x1, 0x0);
        gbc.writeMem(0x2aa5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 034B
        gbc.setState(0x2f39, 0x99f8, 0x9ef0, 0xdfad, 0xaca6, 0xcca9, 0x0, 0x1);
        gbc.writeMem(0x2f39, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x99f8, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 034C
        gbc.setState(0xd4ee, 0x85d, 0xee60, 0x815f, 0x4eaa, 0xdea8, 0x1, 0x1);
        gbc.writeMem(0xd4ee, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ee));
        EXPECT(0xff, gbc.readMem(0xd4ef));
        // CB FF 034D
        gbc.setState(0x1102, 0xe494, 0x7ef0, 0x8641, 0x6381, 0x1fd4, 0x1, 0x0);
        gbc.writeMem(0x1102, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe494, gbc.sp());
        EXPECT(0x1104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 034E
        gbc.setState(0xe732, 0x7f43, 0x78a0, 0xfb0e, 0xcea1, 0xd82d, 0x1, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f43, gbc.sp());
        EXPECT(0xe734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe732));
        EXPECT(0xff, gbc.readMem(0xe733));
        // CB FF 034F
        gbc.setState(0x96d7, 0xffb6, 0x2e20, 0xb677, 0x8b01, 0xaa45, 0x1, 0x0);
        gbc.writeMem(0x96d7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xffb6, gbc.sp());
        EXPECT(0x96d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d7));
        EXPECT(0xff, gbc.readMem(0x96d8));
        // CB FF 0350
        gbc.setState(0x76d4, 0x9387, 0xfe70, 0x7f0a, 0x46c8, 0x7c41, 0x1, 0x0);
        gbc.writeMem(0x76d4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9387, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0351
        gbc.setState(0x28bd, 0x8b78, 0x7520, 0xa789, 0x50dd, 0x519a, 0x1, 0x1);
        gbc.writeMem(0x28bd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8b78, gbc.sp());
        EXPECT(0x28bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0352
        gbc.setState(0x9494, 0x8801, 0x5b20, 0x891, 0xec7a, 0x563a, 0x1, 0x0);
        gbc.writeMem(0x9494, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8801, gbc.sp());
        EXPECT(0x9496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9494));
        EXPECT(0xff, gbc.readMem(0x9495));
        // CB FF 0353
        gbc.setState(0x4a8f, 0xebb1, 0xe1d0, 0x23b3, 0x3ddc, 0x172c, 0x1, 0x0);
        gbc.writeMem(0x4a8f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0354
        gbc.setState(0x3292, 0x7c28, 0xc570, 0xc4a1, 0xd8ca, 0x8457, 0x0, 0x0);
        gbc.writeMem(0x3292, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0355
        gbc.setState(0xc09f, 0x455c, 0x47c0, 0x9f5e, 0xfcac, 0x2863, 0x1, 0x1);
        gbc.writeMem(0xc09f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x455c, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09f));
        EXPECT(0xff, gbc.readMem(0xc0a0));
        // CB FF 0356
        gbc.setState(0xa127, 0xa370, 0x770, 0xa808, 0xb213, 0xf678, 0x0, 0x0);
        gbc.writeMem(0xa127, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0xa129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa127));
        EXPECT(0xff, gbc.readMem(0xa128));
        // CB FF 0357
        gbc.setState(0x8b36, 0xf048, 0x83f0, 0xe6b8, 0x81b6, 0x8217, 0x1, 0x1);
        gbc.writeMem(0x8b36, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b36));
        EXPECT(0xff, gbc.readMem(0x8b37));
        // CB FF 0358
        gbc.setState(0x5e28, 0x9e84, 0xf8e0, 0xfdc5, 0xa26e, 0x8719, 0x0, 0x0);
        gbc.writeMem(0x5e28, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0359
        gbc.setState(0x3b00, 0x5bba, 0x7c80, 0xc0a3, 0x9c78, 0x9e26, 0x1, 0x1);
        gbc.writeMem(0x3b00, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0x3b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 035A
        gbc.setState(0x4302, 0xa66f, 0xd120, 0xacc2, 0x13ad, 0x208e, 0x0, 0x1);
        gbc.writeMem(0x4302, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa66f, gbc.sp());
        EXPECT(0x4304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 035B
        gbc.setState(0x1779, 0x7ee6, 0xe9b0, 0xf2aa, 0xd844, 0x9ec2, 0x0, 0x0);
        gbc.writeMem(0x1779, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7ee6, gbc.sp());
        EXPECT(0x177b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 035C
        gbc.setState(0x7248, 0x68f1, 0x7920, 0xcfbd, 0xc287, 0xc8ba, 0x0, 0x1);
        gbc.writeMem(0x7248, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0x724a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 035D
        gbc.setState(0xea81, 0x8609, 0xfe30, 0x159d, 0xe061, 0x89bf, 0x0, 0x0);
        gbc.writeMem(0xea81, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8609, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea81));
        EXPECT(0xff, gbc.readMem(0xea82));
        // CB FF 035E
        gbc.setState(0x8fdd, 0x1879, 0xaad0, 0xabb3, 0x369b, 0xc359, 0x1, 0x0);
        gbc.writeMem(0x8fdd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1879, gbc.sp());
        EXPECT(0x8fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdd));
        EXPECT(0xff, gbc.readMem(0x8fde));
        // CB FF 035F
        gbc.setState(0xc495, 0xf7ca, 0xbd20, 0x4f78, 0x614f, 0x1af5, 0x0, 0x1);
        gbc.writeMem(0xc495, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf7ca, gbc.sp());
        EXPECT(0xc497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc495));
        EXPECT(0xff, gbc.readMem(0xc496));
        // CB FF 0360
        gbc.setState(0xa6f, 0x6d7f, 0xa420, 0x33b7, 0x3639, 0x42ed, 0x1, 0x0);
        gbc.writeMem(0xa6f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0xa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0361
        gbc.setState(0x3375, 0xed1a, 0xcb70, 0x7790, 0x4478, 0xe7b1, 0x0, 0x0);
        gbc.writeMem(0x3375, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x3377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0362
        gbc.setState(0x7f6d, 0x8072, 0x62f0, 0xb0f7, 0x1ba3, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0x7f6d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8072, gbc.sp());
        EXPECT(0x7f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0363
        gbc.setState(0x4e56, 0xdae2, 0x85b0, 0x588b, 0x977f, 0x80bc, 0x0, 0x1);
        gbc.writeMem(0x4e56, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0364
        gbc.setState(0x7af8, 0x509d, 0x3c50, 0x7497, 0x1a0d, 0xc640, 0x1, 0x0);
        gbc.writeMem(0x7af8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0365
        gbc.setState(0x48d8, 0x585f, 0xf10, 0xfc52, 0xe50e, 0x8b9a, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0366
        gbc.setState(0x8c3, 0xb8c8, 0x7620, 0x55f5, 0x7d92, 0xfa13, 0x0, 0x1);
        gbc.writeMem(0x8c3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb8c8, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0367
        gbc.setState(0xd918, 0x1e9a, 0x3620, 0xd5f8, 0xd890, 0x787d, 0x0, 0x0);
        gbc.writeMem(0xd918, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd918));
        EXPECT(0xff, gbc.readMem(0xd919));
        // CB FF 0368
        gbc.setState(0xca74, 0xfb9f, 0xe500, 0x36b2, 0x53b, 0xfced, 0x1, 0x1);
        gbc.writeMem(0xca74, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca74));
        EXPECT(0xff, gbc.readMem(0xca75));
        // CB FF 0369
        gbc.setState(0x9318, 0xb5dc, 0x5d10, 0xd2a2, 0xccc2, 0xafc, 0x0, 0x0);
        gbc.writeMem(0x9318, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9318));
        EXPECT(0xff, gbc.readMem(0x9319));
        // CB FF 036A
        gbc.setState(0xb336, 0x72fe, 0xe470, 0x6372, 0x16a2, 0x84da, 0x1, 0x1);
        gbc.writeMem(0xb336, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0xb338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb336));
        EXPECT(0xff, gbc.readMem(0xb337));
        // CB FF 036B
        gbc.setState(0x7fab, 0x3a8d, 0x9e40, 0xd15c, 0xfbbb, 0x6208, 0x0, 0x0);
        gbc.writeMem(0x7fab, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3a8d, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 036C
        gbc.setState(0x5203, 0x9a5a, 0x6c00, 0xcb6c, 0xdd3d, 0xfdc5, 0x0, 0x0);
        gbc.writeMem(0x5203, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9a5a, gbc.sp());
        EXPECT(0x5205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 036D
        gbc.setState(0xd40b, 0xf6fe, 0xc550, 0x80d4, 0x33b5, 0xb972, 0x1, 0x0);
        gbc.writeMem(0xd40b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0xd40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40b));
        EXPECT(0xff, gbc.readMem(0xd40c));
        // CB FF 036E
        gbc.setState(0x9790, 0x50e7, 0xba90, 0x5e00, 0x3d10, 0xaa26, 0x1, 0x0);
        gbc.writeMem(0x9790, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x50e7, gbc.sp());
        EXPECT(0x9792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9790));
        EXPECT(0xff, gbc.readMem(0x9791));
        // CB FF 0370
        gbc.setState(0x6a75, 0x93b0, 0x5620, 0xf5e7, 0xe9a8, 0x829d, 0x0, 0x1);
        gbc.writeMem(0x6a75, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0371
        gbc.setState(0xc178, 0xca63, 0xe080, 0x4435, 0x7ede, 0xb092, 0x1, 0x1);
        gbc.writeMem(0xc178, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xca63, gbc.sp());
        EXPECT(0xc17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc178));
        EXPECT(0xff, gbc.readMem(0xc179));
        // CB FF 0372
        gbc.setState(0x5bfe, 0x27e7, 0x8370, 0x58b, 0x7e40, 0xc218, 0x0, 0x1);
        gbc.writeMem(0x5bfe, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0x5c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0373
        gbc.setState(0x74f, 0x35d1, 0x47f0, 0x8afe, 0xe320, 0x5cec, 0x1, 0x1);
        gbc.writeMem(0x74f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x35d1, gbc.sp());
        EXPECT(0x751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0374
        gbc.setState(0xd8ce, 0x3639, 0x23a0, 0xee03, 0x8ab3, 0x8e82, 0x0, 0x0);
        gbc.writeMem(0xd8ce, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0xd8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ce));
        EXPECT(0xff, gbc.readMem(0xd8cf));
        // CB FF 0375
        gbc.setState(0xc99b, 0x98ef, 0xb1a0, 0xe722, 0x41bd, 0x9064, 0x1, 0x0);
        gbc.writeMem(0xc99b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0xc99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99b));
        EXPECT(0xff, gbc.readMem(0xc99c));
        // CB FF 0377
        gbc.setState(0x43c, 0xbd68, 0x74e0, 0xcea5, 0x7e57, 0xd78d, 0x0, 0x1);
        gbc.writeMem(0x43c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbd68, gbc.sp());
        EXPECT(0x43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0378
        gbc.setState(0xb8e7, 0x9636, 0xe3d0, 0x6fb7, 0x2bd8, 0x429e, 0x1, 0x0);
        gbc.writeMem(0xb8e7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0xb8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e7));
        EXPECT(0xff, gbc.readMem(0xb8e8));
        // CB FF 0379
        gbc.setState(0xd58a, 0x58e, 0x6f20, 0x42ca, 0x8908, 0x9dd6, 0x0, 0x0);
        gbc.writeMem(0xd58a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x58e, gbc.sp());
        EXPECT(0xd58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58a));
        EXPECT(0xff, gbc.readMem(0xd58b));
        // CB FF 037A
        gbc.setState(0xb083, 0x1f5a, 0xa850, 0xf5a7, 0xaed3, 0xfafe, 0x0, 0x1);
        gbc.writeMem(0xb083, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1f5a, gbc.sp());
        EXPECT(0xb085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb083));
        EXPECT(0xff, gbc.readMem(0xb084));
        // CB FF 037B
        gbc.setState(0x7bf1, 0x569, 0xa6d0, 0xcdf9, 0x484, 0x6c5f, 0x0, 0x0);
        gbc.writeMem(0x7bf1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x569, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 037D
        gbc.setState(0xc4eb, 0x8e2c, 0xc080, 0xa5ba, 0x39bb, 0x1e38, 0x0, 0x0);
        gbc.writeMem(0xc4eb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8e2c, gbc.sp());
        EXPECT(0xc4ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4eb));
        EXPECT(0xff, gbc.readMem(0xc4ec));
        // CB FF 037E
        gbc.setState(0x21ea, 0xf8ed, 0x1310, 0xae98, 0x931b, 0x2e9f, 0x1, 0x1);
        gbc.writeMem(0x21ea, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf8ed, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0380
        gbc.setState(0xad2e, 0xe7cc, 0x6e30, 0x7bf8, 0xb8b5, 0x4a03, 0x0, 0x1);
        gbc.writeMem(0xad2e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0xff, gbc.readMem(0xad2f));
        // CB FF 0381
        gbc.setState(0x472a, 0x7496, 0x8530, 0x9246, 0x5e05, 0xdab2, 0x1, 0x0);
        gbc.writeMem(0x472a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7496, gbc.sp());
        EXPECT(0x472c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0382
        gbc.setState(0xa96e, 0x1062, 0x2e70, 0xaba5, 0x4a1, 0x8231, 0x1, 0x1);
        gbc.writeMem(0xa96e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0xa970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96e));
        EXPECT(0xff, gbc.readMem(0xa96f));
        // CB FF 0383
        gbc.setState(0x389b, 0xadd7, 0xfda0, 0xde54, 0x1dea, 0x67da, 0x0, 0x0);
        gbc.writeMem(0x389b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xadd7, gbc.sp());
        EXPECT(0x389d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0384
        gbc.setState(0xa5c4, 0x54c, 0xf370, 0x927e, 0xb841, 0xc6b, 0x0, 0x0);
        gbc.writeMem(0xa5c4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x54c, gbc.sp());
        EXPECT(0xa5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c4));
        EXPECT(0xff, gbc.readMem(0xa5c5));
        // CB FF 0385
        gbc.setState(0x83dd, 0xdfda, 0xe1d0, 0xb43b, 0xb884, 0x3a9a, 0x0, 0x1);
        gbc.writeMem(0x83dd, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dd));
        EXPECT(0xff, gbc.readMem(0x83de));
        // CB FF 0386
        gbc.setState(0x555a, 0x7ef7, 0x8db0, 0xe309, 0x6bb2, 0xf6b, 0x0, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ef7, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0387
        gbc.setState(0xa9b3, 0x87bb, 0x9a50, 0x9ed9, 0x219a, 0xdda5, 0x1, 0x0);
        gbc.writeMem(0xa9b3, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x87bb, gbc.sp());
        EXPECT(0xa9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b3));
        EXPECT(0xff, gbc.readMem(0xa9b4));
        // CB FF 0388
        gbc.setState(0x54ed, 0xf9b8, 0xede0, 0x61ec, 0xc6dd, 0x8937, 0x0, 0x0);
        gbc.writeMem(0x54ed, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0x54ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0389
        gbc.setState(0x3a54, 0x2b0c, 0xd220, 0x4725, 0x95df, 0x6df8, 0x0, 0x1);
        gbc.writeMem(0x3a54, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2b0c, gbc.sp());
        EXPECT(0x3a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 038A
        gbc.setState(0x37a5, 0xb6a9, 0x62e0, 0xf5d9, 0xe1cc, 0x99d, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb6a9, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 038B
        gbc.setState(0x4a67, 0x72f9, 0x45d0, 0xffa0, 0xa92c, 0x1bc, 0x1, 0x1);
        gbc.writeMem(0x4a67, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0x4a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 038C
        gbc.setState(0x6611, 0x96d4, 0x97d0, 0x2752, 0x1c02, 0x5b5e, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x96d4, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 038D
        gbc.setState(0x1fac, 0xe38d, 0x50a0, 0x9aaa, 0x753f, 0x5253, 0x1, 0x1);
        gbc.writeMem(0x1fac, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe38d, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 038E
        gbc.setState(0xa1af, 0x4067, 0xf770, 0x54d9, 0x79c3, 0x5cb, 0x1, 0x0);
        gbc.writeMem(0xa1af, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4067, gbc.sp());
        EXPECT(0xa1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1af));
        EXPECT(0xff, gbc.readMem(0xa1b0));
        // CB FF 038F
        gbc.setState(0xa385, 0xd089, 0x90b0, 0x88f5, 0xb29e, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0xa385, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0xa387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa385));
        EXPECT(0xff, gbc.readMem(0xa386));
        // CB FF 0390
        gbc.setState(0x1a9e, 0xae83, 0x7b30, 0x21c3, 0x3c84, 0x68a0, 0x1, 0x1);
        gbc.writeMem(0x1a9e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xae83, gbc.sp());
        EXPECT(0x1aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0391
        gbc.setState(0xb05e, 0xaf2b, 0x2b90, 0x66dd, 0xfed4, 0xcdc5, 0x0, 0x0);
        gbc.writeMem(0xb05e, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaf2b, gbc.sp());
        EXPECT(0xb060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05e));
        EXPECT(0xff, gbc.readMem(0xb05f));
        // CB FF 0392
        gbc.setState(0xa23f, 0xcdc7, 0x1840, 0xd4c9, 0x1a2a, 0xc1ac, 0x1, 0x1);
        gbc.writeMem(0xa23f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0xa241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23f));
        EXPECT(0xff, gbc.readMem(0xa240));
        // CB FF 0393
        gbc.setState(0xcea0, 0xae, 0x2a50, 0xb62f, 0x9434, 0xbb3, 0x0, 0x1);
        gbc.writeMem(0xcea0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae, gbc.sp());
        EXPECT(0xcea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea0));
        EXPECT(0xff, gbc.readMem(0xcea1));
        // CB FF 0394
        gbc.setState(0xac84, 0xbb3e, 0x8860, 0x9e96, 0x2d8b, 0x7a25, 0x0, 0x0);
        gbc.writeMem(0xac84, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbb3e, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac84));
        EXPECT(0xff, gbc.readMem(0xac85));
        // CB FF 0395
        gbc.setState(0x238b, 0xec2f, 0xaaa0, 0x4c99, 0x2c3f, 0x73fd, 0x1, 0x1);
        gbc.writeMem(0x238b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec2f, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0396
        gbc.setState(0x1a32, 0x200d, 0x3a40, 0x645c, 0xd190, 0xb590, 0x0, 0x1);
        gbc.writeMem(0x1a32, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x200d, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 0397
        gbc.setState(0x1df2, 0xdd45, 0x6b10, 0x7633, 0xaf1, 0x59ae, 0x1, 0x1);
        gbc.writeMem(0x1df2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0x1df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 0398
        gbc.setState(0xd210, 0x4137, 0x62a0, 0xb2b4, 0xbbb0, 0xd55a, 0x0, 0x0);
        gbc.writeMem(0xd210, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd210));
        EXPECT(0xff, gbc.readMem(0xd211));
        // CB FF 0399
        gbc.setState(0x4849, 0x8d3a, 0x2f30, 0x1fa4, 0x40fd, 0x534b, 0x0, 0x1);
        gbc.writeMem(0x4849, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8d3a, gbc.sp());
        EXPECT(0x484b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 039A
        gbc.setState(0x7d27, 0x57ed, 0xccd0, 0xf7f3, 0x419e, 0x55, 0x0, 0x0);
        gbc.writeMem(0x7d27, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x57ed, gbc.sp());
        EXPECT(0x7d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 039B
        gbc.setState(0xba63, 0x876c, 0xf890, 0x8bd9, 0x9d41, 0x4fbc, 0x0, 0x1);
        gbc.writeMem(0xba63, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x876c, gbc.sp());
        EXPECT(0xba65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba63));
        EXPECT(0xff, gbc.readMem(0xba64));
        // CB FF 039C
        gbc.setState(0x45e8, 0x5cc4, 0x7c20, 0x844c, 0x5e94, 0x1158, 0x1, 0x1);
        gbc.writeMem(0x45e8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 039D
        gbc.setState(0x3626, 0xf6e7, 0x7cb0, 0x519d, 0x8509, 0x64a4, 0x1, 0x1);
        gbc.writeMem(0x3626, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf6e7, gbc.sp());
        EXPECT(0x3628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 039E
        gbc.setState(0xc8d8, 0xc64d, 0xf970, 0x460e, 0x320c, 0xeb9, 0x1, 0x1);
        gbc.writeMem(0xc8d8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0xc8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d8));
        EXPECT(0xff, gbc.readMem(0xc8d9));
        // CB FF 039F
        gbc.setState(0x98bb, 0xa40b, 0x16c0, 0x7a84, 0x1b81, 0xf2b, 0x0, 0x0);
        gbc.writeMem(0x98bb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0xff, gbc.readMem(0x98bc));
        // CB FF 03A0
        gbc.setState(0xbfd9, 0xebe3, 0x5ff0, 0x41e2, 0x949f, 0xf358, 0x0, 0x0);
        gbc.writeMem(0xbfd9, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xebe3, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd9));
        EXPECT(0xff, gbc.readMem(0xbfda));
        // CB FF 03A1
        gbc.setState(0x5b2d, 0x223b, 0xc090, 0x2477, 0x2f70, 0x40eb, 0x1, 0x0);
        gbc.writeMem(0x5b2d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03A2
        gbc.setState(0xb9dc, 0xdffb, 0x3670, 0x8de1, 0x93db, 0x2d97, 0x1, 0x0);
        gbc.writeMem(0xb9dc, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0xb9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9dc));
        EXPECT(0xff, gbc.readMem(0xb9dd));
        // CB FF 03A5
        gbc.setState(0x998a, 0xcd71, 0x6a50, 0xff7c, 0x274b, 0x5d12, 0x1, 0x1);
        gbc.writeMem(0x998a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd71, gbc.sp());
        EXPECT(0x998c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998a));
        EXPECT(0xff, gbc.readMem(0x998b));
        // CB FF 03A6
        gbc.setState(0x7f08, 0x4aa8, 0x6990, 0x4125, 0xcbe5, 0xd97c, 0x0, 0x0);
        gbc.writeMem(0x7f08, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03A7
        gbc.setState(0x764, 0xe506, 0xb6e0, 0x3bfb, 0x1677, 0xff8d, 0x0, 0x1);
        gbc.writeMem(0x764, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0x766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03A8
        gbc.setState(0x8dba, 0x9a57, 0xce90, 0xb762, 0x5f82, 0x5e6c, 0x1, 0x1);
        gbc.writeMem(0x8dba, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0x8dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dba));
        EXPECT(0xff, gbc.readMem(0x8dbb));
        // CB FF 03A9
        gbc.setState(0x1ea7, 0x6453, 0xd560, 0x56f9, 0x34d2, 0xda41, 0x1, 0x0);
        gbc.writeMem(0x1ea7, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03AA
        gbc.setState(0xd198, 0xcf6a, 0x7c40, 0xa29, 0xedb4, 0x2011, 0x1, 0x1);
        gbc.writeMem(0xd198, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xd19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd198));
        EXPECT(0xff, gbc.readMem(0xd199));
        // CB FF 03AB
        gbc.setState(0x9c6c, 0x10c4, 0xec50, 0x34a6, 0xe369, 0x381c, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x10c4, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6c));
        EXPECT(0xff, gbc.readMem(0x9c6d));
        // CB FF 03AC
        gbc.setState(0xbfb, 0xf7f3, 0x5b30, 0x281c, 0x4b53, 0xa59, 0x1, 0x1);
        gbc.writeMem(0xbfb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0xbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03AD
        gbc.setState(0x6ce8, 0x8986, 0x91a0, 0x2444, 0x3dcf, 0x1618, 0x0, 0x1);
        gbc.writeMem(0x6ce8, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8986, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03AE
        gbc.setState(0x701c, 0x2284, 0x9b50, 0xbd7c, 0x966a, 0xef29, 0x1, 0x1);
        gbc.writeMem(0x701c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2284, gbc.sp());
        EXPECT(0x701e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03AF
        gbc.setState(0x5a9c, 0xa504, 0x3d60, 0xa33b, 0x70e1, 0xc543, 0x0, 0x1);
        gbc.writeMem(0x5a9c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0x5a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B0
        gbc.setState(0x1bd4, 0xeb0d, 0x7f20, 0x3519, 0xc102, 0xc784, 0x1, 0x1);
        gbc.writeMem(0x1bd4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeb0d, gbc.sp());
        EXPECT(0x1bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B1
        gbc.setState(0x43d5, 0x81c2, 0x3b50, 0xaf41, 0x97d8, 0x4c7f, 0x1, 0x0);
        gbc.writeMem(0x43d5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x81c2, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03B2
        gbc.setState(0xc579, 0x2ab1, 0x7a10, 0x3226, 0x7631, 0xa164, 0x1, 0x1);
        gbc.writeMem(0xc579, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2ab1, gbc.sp());
        EXPECT(0xc57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc579));
        EXPECT(0xff, gbc.readMem(0xc57a));
        // CB FF 03B3
        gbc.setState(0x467, 0x4559, 0xbce0, 0xe58, 0xf20e, 0xc296, 0x0, 0x1);
        gbc.writeMem(0x467, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B4
        gbc.setState(0x11fa, 0x5ba, 0xea00, 0x6e23, 0xb1a0, 0x8613, 0x1, 0x1);
        gbc.writeMem(0x11fa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5ba, gbc.sp());
        EXPECT(0x11fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B5
        gbc.setState(0x6541, 0x4a09, 0x49e0, 0xba27, 0x885c, 0x720c, 0x1, 0x0);
        gbc.writeMem(0x6541, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0x6543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B6
        gbc.setState(0x9faa, 0xac5d, 0x1560, 0xdb86, 0xab5e, 0x5bdf, 0x1, 0x1);
        gbc.writeMem(0x9faa, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xac5d, gbc.sp());
        EXPECT(0x9fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9faa));
        EXPECT(0xff, gbc.readMem(0x9fab));
        // CB FF 03B7
        gbc.setState(0x35ec, 0x52a4, 0xf5c0, 0x59ed, 0x3931, 0x14ea, 0x1, 0x0);
        gbc.writeMem(0x35ec, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x52a4, gbc.sp());
        EXPECT(0x35ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03B8
        gbc.setState(0x9253, 0x4a45, 0xaee0, 0xe4c1, 0x4d3f, 0x9986, 0x0, 0x0);
        gbc.writeMem(0x9253, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x9255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9253));
        EXPECT(0xff, gbc.readMem(0x9254));
        // CB FF 03B9
        gbc.setState(0xe4c2, 0x2651, 0x8e0, 0xac17, 0xbc82, 0x920f, 0x0, 0x1);
        gbc.writeMem(0xe4c2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2651, gbc.sp());
        EXPECT(0xe4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c2));
        EXPECT(0xff, gbc.readMem(0xe4c3));
        // CB FF 03BA
        gbc.setState(0x70da, 0x1846, 0x550, 0x2246, 0x4528, 0x7a31, 0x0, 0x0);
        gbc.writeMem(0x70da, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1846, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03BB
        gbc.setState(0xe574, 0x8821, 0x2b50, 0x3415, 0xe102, 0x4c0c, 0x0, 0x1);
        gbc.writeMem(0xe574, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8821, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe574));
        EXPECT(0xff, gbc.readMem(0xe575));
        // CB FF 03BC
        gbc.setState(0xb000, 0x98fb, 0x48a0, 0xcb16, 0x1b63, 0x16af, 0x0, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb000));
        EXPECT(0xff, gbc.readMem(0xb001));
        // CB FF 03BD
        gbc.setState(0x62f1, 0xce79, 0x5790, 0x5d12, 0xa6c8, 0xd78d, 0x1, 0x1);
        gbc.writeMem(0x62f1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce79, gbc.sp());
        EXPECT(0x62f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03BF
        gbc.setState(0xb293, 0xc5d7, 0xb4f0, 0x9856, 0x58a6, 0xcc44, 0x1, 0x1);
        gbc.writeMem(0xb293, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc5d7, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb293));
        EXPECT(0xff, gbc.readMem(0xb294));
        // CB FF 03C0
        gbc.setState(0x7dbb, 0xd43c, 0xe5c0, 0x52a8, 0x8603, 0xc72e, 0x1, 0x1);
        gbc.writeMem(0x7dbb, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd43c, gbc.sp());
        EXPECT(0x7dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03C1
        gbc.setState(0xb4a1, 0x83c8, 0x2340, 0x2532, 0xf1d7, 0xa679, 0x1, 0x1);
        gbc.writeMem(0xb4a1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a1));
        EXPECT(0xff, gbc.readMem(0xb4a2));
        // CB FF 03C2
        gbc.setState(0x8937, 0x88cf, 0xd440, 0xf0bc, 0xe9c9, 0x5f86, 0x0, 0x1);
        gbc.writeMem(0x8937, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8937));
        EXPECT(0xff, gbc.readMem(0x8938));
        // CB FF 03C3
        gbc.setState(0x823d, 0x9ea, 0xf840, 0x2061, 0x1c72, 0xbae4, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0x823f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823d));
        EXPECT(0xff, gbc.readMem(0x823e));
        // CB FF 03C4
        gbc.setState(0x7c, 0x7c43, 0xf600, 0xe0b4, 0x15e1, 0x44e1, 0x1, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03C5
        gbc.setState(0x9166, 0x182d, 0xb710, 0xfed3, 0x414b, 0x221d, 0x1, 0x1);
        gbc.writeMem(0x9166, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x182d, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9166));
        EXPECT(0xff, gbc.readMem(0x9167));
        // CB FF 03C6
        gbc.setState(0x5038, 0xa76e, 0x4520, 0x8571, 0x7aa6, 0xb661, 0x0, 0x0);
        gbc.writeMem(0x5038, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03C7
        gbc.setState(0x59a5, 0x9d2e, 0x2f0, 0xe291, 0x5fff, 0xf936, 0x0, 0x1);
        gbc.writeMem(0x59a5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9d2e, gbc.sp());
        EXPECT(0x59a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03C8
        gbc.setState(0x382a, 0x9558, 0x180, 0xd8ea, 0x5a5d, 0xc19c, 0x0, 0x0);
        gbc.writeMem(0x382a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9558, gbc.sp());
        EXPECT(0x382c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03CA
        gbc.setState(0x4d8f, 0x39ad, 0xc1c0, 0x8083, 0x5970, 0xb563, 0x1, 0x1);
        gbc.writeMem(0x4d8f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x39ad, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03CB
        gbc.setState(0xdab0, 0x7ee3, 0xfb30, 0x1c86, 0x5142, 0x375c, 0x1, 0x0);
        gbc.writeMem(0xdab0, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7ee3, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab0));
        EXPECT(0xff, gbc.readMem(0xdab1));
        // CB FF 03CD
        gbc.setState(0x5583, 0xea64, 0xcfa0, 0xcb59, 0x3d78, 0xb0b3, 0x1, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0x5585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03CF
        gbc.setState(0xd1c5, 0x30a9, 0x8a80, 0x6302, 0xa8c7, 0x90f4, 0x1, 0x1);
        gbc.writeMem(0xd1c5, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c5));
        EXPECT(0xff, gbc.readMem(0xd1c6));
        // CB FF 03D0
        gbc.setState(0x49ec, 0x7f35, 0x86a0, 0x91e2, 0xac07, 0xa3bf, 0x0, 0x0);
        gbc.writeMem(0x49ec, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x49ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03D1
        gbc.setState(0x5c19, 0x64cd, 0x1a00, 0xe8ec, 0xfc8c, 0x6d27, 0x1, 0x1);
        gbc.writeMem(0x5c19, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03D2
        gbc.setState(0xc374, 0xe099, 0xf090, 0x2a23, 0x4052, 0x7044, 0x0, 0x1);
        gbc.writeMem(0xc374, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc374));
        EXPECT(0xff, gbc.readMem(0xc375));
        // CB FF 03D3
        gbc.setState(0xea8a, 0xba04, 0xcc10, 0x6d49, 0x40a1, 0x388e, 0x0, 0x1);
        gbc.writeMem(0xea8a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xba04, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8a));
        EXPECT(0xff, gbc.readMem(0xea8b));
        // CB FF 03D4
        gbc.setState(0xa2de, 0x1586, 0x5890, 0x25b7, 0xe7a9, 0x7a0, 0x1, 0x0);
        gbc.writeMem(0xa2de, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1586, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2de));
        EXPECT(0xff, gbc.readMem(0xa2df));
        // CB FF 03D5
        gbc.setState(0xa617, 0xc451, 0x56d0, 0x22eb, 0x226b, 0x8a95, 0x0, 0x0);
        gbc.writeMem(0xa617, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa617));
        EXPECT(0xff, gbc.readMem(0xa618));
        // CB FF 03D6
        gbc.setState(0xb707, 0x8952, 0xd030, 0x706b, 0x4b7f, 0x851, 0x0, 0x0);
        gbc.writeMem(0xb707, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0xb709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb707));
        EXPECT(0xff, gbc.readMem(0xb708));
        // CB FF 03D7
        gbc.setState(0x803, 0xb010, 0xa5b0, 0x1568, 0x57e6, 0x6f11, 0x0, 0x0);
        gbc.writeMem(0x803, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb010, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03D8
        gbc.setState(0x454b, 0xb2c9, 0x6ee0, 0x1111, 0x9035, 0xae48, 0x1, 0x1);
        gbc.writeMem(0x454b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb2c9, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03D9
        gbc.setState(0x4a, 0xb0ac, 0xa050, 0x797b, 0xd61c, 0x669d, 0x0, 0x0);
        gbc.writeMem(0x4a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb0ac, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03DA
        gbc.setState(0xe401, 0x1df3, 0x2160, 0xfb40, 0xdccd, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0xe401, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1df3, gbc.sp());
        EXPECT(0xe403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe401));
        EXPECT(0xff, gbc.readMem(0xe402));
        // CB FF 03DB
        gbc.setState(0xa065, 0xfadd, 0x7890, 0x7158, 0xea5d, 0xa2f, 0x0, 0x0);
        gbc.writeMem(0xa065, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfadd, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0xff, gbc.readMem(0xa066));
        // CB FF 03DC
        gbc.setState(0x2e87, 0x3b70, 0x5190, 0x3aed, 0x651b, 0x1d56, 0x0, 0x0);
        gbc.writeMem(0x2e87, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3b70, gbc.sp());
        EXPECT(0x2e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03DD
        gbc.setState(0x1983, 0x61a, 0xac70, 0x6856, 0x4e9a, 0xbe11, 0x1, 0x1);
        gbc.writeMem(0x1983, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x61a, gbc.sp());
        EXPECT(0x1985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03DE
        gbc.setState(0x9f8a, 0x2eb5, 0x46e0, 0xe559, 0x28a6, 0x4128, 0x1, 0x1);
        gbc.writeMem(0x9f8a, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2eb5, gbc.sp());
        EXPECT(0x9f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8a));
        EXPECT(0xff, gbc.readMem(0x9f8b));
        // CB FF 03DF
        gbc.setState(0x729f, 0x4f3b, 0xea60, 0xce84, 0xd174, 0x418b, 0x1, 0x0);
        gbc.writeMem(0x729f, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4f3b, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03E0
        gbc.setState(0x645b, 0xcbd1, 0xb520, 0xbc32, 0xccfd, 0x3167, 0x0, 0x1);
        gbc.writeMem(0x645b, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03E1
        gbc.setState(0x8da4, 0xa040, 0xbfd0, 0xd00b, 0x67c5, 0x9b72, 0x1, 0x1);
        gbc.writeMem(0x8da4, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da4));
        EXPECT(0xff, gbc.readMem(0x8da5));
        // CB FF 03E2
        gbc.setState(0x4f06, 0xc54f, 0xf140, 0xdda2, 0x9a5f, 0x8b9f, 0x0, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FF 03E3
        gbc.setState(0x5a05, 0x9dd8, 0x3cb0, 0xe36, 0x4c72, 0x556e, 0x1, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9dd8, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03E4
        gbc.setState(0x5321, 0x22ef, 0x84f0, 0x98f2, 0xcb44, 0x593c, 0x1, 0x1);
        gbc.writeMem(0x5321, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x22ef, gbc.sp());
        EXPECT(0x5323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03E5
        gbc.setState(0x49d2, 0xad3a, 0x44d0, 0x5e59, 0xfdca, 0xf98a, 0x1, 0x0);
        gbc.writeMem(0x49d2, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xad3a, gbc.sp());
        EXPECT(0x49d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FF 03E6
        gbc.setState(0x8996, 0x3c58, 0x1570, 0x1ae, 0xdc15, 0xdcff, 0x0, 0x0);
        gbc.writeMem(0x8996, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3c58, gbc.sp());
        EXPECT(0x8998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8996));
        EXPECT(0xff, gbc.readMem(0x8997));
        // CB FF 03E7
        gbc.setState(0x51e1, 0xd32c, 0xe380, 0x8d9b, 0x11ed, 0x2ae0, 0x1, 0x1);
        gbc.writeMem(0x51e1, { 0xcb, 0xff });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd32c, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
