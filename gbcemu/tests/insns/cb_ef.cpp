#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_ef)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_ef) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB EF 0000
        gbc.setState(0x738a, 0x2ce2, 0x30a0, 0x9a3f, 0x190d, 0x7fde, 0x0, 0x1);
        gbc.writeMem(0x738a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2ce2);
        EXPECT(gbc.pc(), 0x738c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0001
        gbc.setState(0xdb7c, 0x2b55, 0x1150, 0x7860, 0x1023, 0x983b, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2b55);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7c), 0xcb);
        EXPECT(gbc.readMem(0xdb7d), 0xef);
        // CB EF 0002
        gbc.setState(0xaa62, 0xef87, 0x9a50, 0x26a, 0xa309, 0x3f4d, 0x0, 0x1);
        gbc.writeMem(0xaa62, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0xaa64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa62), 0xcb);
        EXPECT(gbc.readMem(0xaa63), 0xef);
        // CB EF 0003
        gbc.setState(0xb614, 0x8689, 0x26c0, 0xc597, 0xf1e9, 0x6b6a, 0x1, 0x0);
        gbc.writeMem(0xb614, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8689);
        EXPECT(gbc.pc(), 0xb616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb614), 0xcb);
        EXPECT(gbc.readMem(0xb615), 0xef);
        // CB EF 0004
        gbc.setState(0x555a, 0xe310, 0x5010, 0x9e02, 0x5ade, 0x1e27, 0x0, 0x1);
        gbc.writeMem(0x555a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe310);
        EXPECT(gbc.pc(), 0x555c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0005
        gbc.setState(0xc8a6, 0x3b9b, 0xf6b0, 0xa90e, 0x63ca, 0x819a, 0x1, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3b9b);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0xef);
        // CB EF 0006
        gbc.setState(0x2cd0, 0xe5ed, 0xb050, 0xcaa6, 0x18ff, 0xe4fa, 0x0, 0x0);
        gbc.writeMem(0x2cd0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe5ed);
        EXPECT(gbc.pc(), 0x2cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0007
        gbc.setState(0x3fd1, 0xf51c, 0xdce0, 0x77f1, 0xb768, 0x66b7, 0x1, 0x0);
        gbc.writeMem(0x3fd1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf51c);
        EXPECT(gbc.pc(), 0x3fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0008
        gbc.setState(0xa1ec, 0xa219, 0xdcb0, 0x46fb, 0xfb5f, 0x6d3f, 0x1, 0x0);
        gbc.writeMem(0xa1ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa219);
        EXPECT(gbc.pc(), 0xa1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ec), 0xcb);
        EXPECT(gbc.readMem(0xa1ed), 0xef);
        // CB EF 0009
        gbc.setState(0xcd22, 0x8ec2, 0x7b40, 0x3297, 0x6f58, 0x9e02, 0x0, 0x0);
        gbc.writeMem(0xcd22, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8ec2);
        EXPECT(gbc.pc(), 0xcd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd22), 0xcb);
        EXPECT(gbc.readMem(0xcd23), 0xef);
        // CB EF 000A
        gbc.setState(0x5f1b, 0xa5cb, 0xf5e0, 0xedb6, 0x46d4, 0x552c, 0x1, 0x0);
        gbc.writeMem(0x5f1b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa5cb);
        EXPECT(gbc.pc(), 0x5f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 000B
        gbc.setState(0x4979, 0xcaf, 0xaa70, 0x3dda, 0x8fe5, 0x74d4, 0x0, 0x0);
        gbc.writeMem(0x4979, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcaf);
        EXPECT(gbc.pc(), 0x497b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 000C
        gbc.setState(0xce10, 0x3d00, 0x93e0, 0xaf10, 0x999b, 0xa917, 0x1, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce10), 0xcb);
        EXPECT(gbc.readMem(0xce11), 0xef);
        // CB EF 000D
        gbc.setState(0x2920, 0x7fc6, 0xdce0, 0x6c35, 0x2dd4, 0x8c4a, 0x1, 0x0);
        gbc.writeMem(0x2920, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7fc6);
        EXPECT(gbc.pc(), 0x2922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 000E
        gbc.setState(0xdcb1, 0xb119, 0xaa40, 0x34ee, 0xc369, 0xc53a, 0x0, 0x0);
        gbc.writeMem(0xdcb1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb119);
        EXPECT(gbc.pc(), 0xdcb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb1), 0xcb);
        EXPECT(gbc.readMem(0xdcb2), 0xef);
        // CB EF 000F
        gbc.setState(0x8d0e, 0xd63f, 0x3d00, 0xfb5f, 0xdeaa, 0xa59d, 0x0, 0x1);
        gbc.writeMem(0x8d0e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd63f);
        EXPECT(gbc.pc(), 0x8d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0e), 0xcb);
        EXPECT(gbc.readMem(0x8d0f), 0xef);
        // CB EF 0010
        gbc.setState(0xc208, 0x8766, 0xe220, 0x1f28, 0xce53, 0xf3b8, 0x0, 0x1);
        gbc.writeMem(0xc208, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8766);
        EXPECT(gbc.pc(), 0xc20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc208), 0xcb);
        EXPECT(gbc.readMem(0xc209), 0xef);
        // CB EF 0011
        gbc.setState(0x5dd1, 0x6cce, 0x7440, 0xf3df, 0x5aee, 0x7e7, 0x1, 0x0);
        gbc.writeMem(0x5dd1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6cce);
        EXPECT(gbc.pc(), 0x5dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0012
        gbc.setState(0xdc24, 0x7cb1, 0xf2e0, 0x6e12, 0x5ba7, 0x9e53, 0x1, 0x1);
        gbc.writeMem(0xdc24, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7cb1);
        EXPECT(gbc.pc(), 0xdc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc24), 0xcb);
        EXPECT(gbc.readMem(0xdc25), 0xef);
        // CB EF 0013
        gbc.setState(0x602, 0xf04f, 0xdee0, 0xf4d9, 0xda73, 0x1e85, 0x0, 0x0);
        gbc.writeMem(0x602, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf04f);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0014
        gbc.setState(0x3eff, 0xd623, 0x8220, 0xafb3, 0xb1d3, 0x577f, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd623);
        EXPECT(gbc.pc(), 0x3f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0015
        gbc.setState(0x4543, 0x4950, 0x8b20, 0xd3c4, 0x1f97, 0x6d45, 0x0, 0x1);
        gbc.writeMem(0x4543, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4950);
        EXPECT(gbc.pc(), 0x4545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0016
        gbc.setState(0x729b, 0xf0d0, 0x4480, 0xf814, 0x544e, 0x56d9, 0x0, 0x0);
        gbc.writeMem(0x729b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf0d0);
        EXPECT(gbc.pc(), 0x729d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0017
        gbc.setState(0x6170, 0xf425, 0xae0, 0x9ceb, 0xb642, 0x3497, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf425);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0019
        gbc.setState(0xe75b, 0x2aab, 0xa150, 0x66cd, 0x3a36, 0xc269, 0x1, 0x0);
        gbc.writeMem(0xe75b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2aab);
        EXPECT(gbc.pc(), 0xe75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75b), 0xcb);
        EXPECT(gbc.readMem(0xe75c), 0xef);
        // CB EF 001B
        gbc.setState(0xd9c2, 0x7fe5, 0x8d70, 0xa2b6, 0xaba, 0x2ab4, 0x0, 0x0);
        gbc.writeMem(0xd9c2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7fe5);
        EXPECT(gbc.pc(), 0xd9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c2), 0xcb);
        EXPECT(gbc.readMem(0xd9c3), 0xef);
        // CB EF 001C
        gbc.setState(0x63c7, 0x6887, 0x5a30, 0xe5ab, 0xb2c9, 0xe1d8, 0x0, 0x0);
        gbc.writeMem(0x63c7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6887);
        EXPECT(gbc.pc(), 0x63c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 001D
        gbc.setState(0x7417, 0x3ac8, 0x270, 0x785d, 0xf0e, 0xb9dd, 0x0, 0x0);
        gbc.writeMem(0x7417, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3ac8);
        EXPECT(gbc.pc(), 0x7419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 001E
        gbc.setState(0x8594, 0x42ea, 0x51f0, 0xe9d7, 0x8c00, 0x115b, 0x1, 0x0);
        gbc.writeMem(0x8594, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x42ea);
        EXPECT(gbc.pc(), 0x8596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8594), 0xcb);
        EXPECT(gbc.readMem(0x8595), 0xef);
        // CB EF 001F
        gbc.setState(0xc715, 0x7d8c, 0xd7f0, 0xce82, 0xdf9d, 0xad4f, 0x1, 0x0);
        gbc.writeMem(0xc715, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7d8c);
        EXPECT(gbc.pc(), 0xc717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc715), 0xcb);
        EXPECT(gbc.readMem(0xc716), 0xef);
        // CB EF 0020
        gbc.setState(0x7ced, 0x12dd, 0xef0, 0x370e, 0xd475, 0x641a, 0x0, 0x0);
        gbc.writeMem(0x7ced, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x12dd);
        EXPECT(gbc.pc(), 0x7cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0021
        gbc.setState(0x9a45, 0x3283, 0xd3c0, 0xb6ea, 0x6f0b, 0x2f1c, 0x0, 0x0);
        gbc.writeMem(0x9a45, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3283);
        EXPECT(gbc.pc(), 0x9a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a45), 0xcb);
        EXPECT(gbc.readMem(0x9a46), 0xef);
        // CB EF 0022
        gbc.setState(0x80ee, 0x52ab, 0x7600, 0xb90d, 0x9468, 0x1163, 0x0, 0x0);
        gbc.writeMem(0x80ee, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0x80f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ee), 0xcb);
        EXPECT(gbc.readMem(0x80ef), 0xef);
        // CB EF 0023
        gbc.setState(0x2045, 0x66df, 0xe7a0, 0xf999, 0x9b3, 0xeb0d, 0x1, 0x0);
        gbc.writeMem(0x2045, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x66df);
        EXPECT(gbc.pc(), 0x2047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0024
        gbc.setState(0x6042, 0x5834, 0x2930, 0xed5d, 0x3f14, 0xa480, 0x0, 0x0);
        gbc.writeMem(0x6042, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5834);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0025
        gbc.setState(0x7020, 0xea0c, 0x26a0, 0x1ff1, 0x99f0, 0x2536, 0x1, 0x1);
        gbc.writeMem(0x7020, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xea0c);
        EXPECT(gbc.pc(), 0x7022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0026
        gbc.setState(0x18b1, 0xfb53, 0xfa90, 0xed11, 0xb6c0, 0x80ea, 0x0, 0x0);
        gbc.writeMem(0x18b1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfb53);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0027
        gbc.setState(0x1264, 0xfae6, 0xa240, 0x9bfe, 0x2de2, 0x8aee, 0x0, 0x0);
        gbc.writeMem(0x1264, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfae6);
        EXPECT(gbc.pc(), 0x1266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0028
        gbc.setState(0xc5a1, 0x2577, 0xf480, 0xba7d, 0xf467, 0x5b34, 0x1, 0x0);
        gbc.writeMem(0xc5a1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2577);
        EXPECT(gbc.pc(), 0xc5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a1), 0xcb);
        EXPECT(gbc.readMem(0xc5a2), 0xef);
        // CB EF 0029
        gbc.setState(0xc307, 0x1bd0, 0xe540, 0x67b8, 0xb9ac, 0xe0fd, 0x0, 0x1);
        gbc.writeMem(0xc307, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1bd0);
        EXPECT(gbc.pc(), 0xc309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc307), 0xcb);
        EXPECT(gbc.readMem(0xc308), 0xef);
        // CB EF 002A
        gbc.setState(0xc880, 0x34f5, 0x9600, 0xb45b, 0xd80f, 0xc572, 0x1, 0x0);
        gbc.writeMem(0xc880, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x34f5);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc880), 0xcb);
        EXPECT(gbc.readMem(0xc881), 0xef);
        // CB EF 002B
        gbc.setState(0x1f17, 0x2257, 0x9010, 0x8639, 0xf40, 0x8ee5, 0x1, 0x0);
        gbc.writeMem(0x1f17, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2257);
        EXPECT(gbc.pc(), 0x1f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 002C
        gbc.setState(0x8397, 0x579, 0xde80, 0xdcf3, 0x26d0, 0x14eb, 0x1, 0x1);
        gbc.writeMem(0x8397, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x579);
        EXPECT(gbc.pc(), 0x8399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8397), 0xcb);
        EXPECT(gbc.readMem(0x8398), 0xef);
        // CB EF 002D
        gbc.setState(0x3fab, 0xecdf, 0x3740, 0x25ac, 0x15af, 0x5a6d, 0x0, 0x1);
        gbc.writeMem(0x3fab, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xecdf);
        EXPECT(gbc.pc(), 0x3fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 002F
        gbc.setState(0xb95a, 0x1043, 0x14c0, 0xf501, 0xe5fa, 0x3968, 0x1, 0x0);
        gbc.writeMem(0xb95a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1043);
        EXPECT(gbc.pc(), 0xb95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95a), 0xcb);
        EXPECT(gbc.readMem(0xb95b), 0xef);
        // CB EF 0030
        gbc.setState(0xdf84, 0x41b7, 0x940, 0xb8b8, 0x484b, 0x86e5, 0x1, 0x0);
        gbc.writeMem(0xdf84, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x41b7);
        EXPECT(gbc.pc(), 0xdf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf84), 0xcb);
        EXPECT(gbc.readMem(0xdf85), 0xef);
        // CB EF 0031
        gbc.setState(0xb0a7, 0x352d, 0x9c60, 0x8dbe, 0x64c8, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0xb0a7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x352d);
        EXPECT(gbc.pc(), 0xb0a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a7), 0xcb);
        EXPECT(gbc.readMem(0xb0a8), 0xef);
        // CB EF 0033
        gbc.setState(0xa18a, 0x458f, 0x7140, 0x2599, 0x4242, 0x9473, 0x1, 0x1);
        gbc.writeMem(0xa18a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x458f);
        EXPECT(gbc.pc(), 0xa18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18a), 0xcb);
        EXPECT(gbc.readMem(0xa18b), 0xef);
        // CB EF 0034
        gbc.setState(0x39dd, 0x89f5, 0x29e0, 0xa062, 0x2c0c, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0x39dd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x89f5);
        EXPECT(gbc.pc(), 0x39df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0035
        gbc.setState(0xb105, 0x6fa2, 0x40d0, 0x523c, 0x9fa1, 0x5c9a, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6fa2);
        EXPECT(gbc.pc(), 0xb107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb105), 0xcb);
        EXPECT(gbc.readMem(0xb106), 0xef);
        // CB EF 0036
        gbc.setState(0xd9be, 0xdd5d, 0xf1c0, 0x1581, 0xe316, 0xe80e, 0x1, 0x1);
        gbc.writeMem(0xd9be, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0xd9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9be), 0xcb);
        EXPECT(gbc.readMem(0xd9bf), 0xef);
        // CB EF 0037
        gbc.setState(0xa38f, 0x55ad, 0x7e10, 0x964, 0x9261, 0x3799, 0x1, 0x0);
        gbc.writeMem(0xa38f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x55ad);
        EXPECT(gbc.pc(), 0xa391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38f), 0xcb);
        EXPECT(gbc.readMem(0xa390), 0xef);
        // CB EF 0038
        gbc.setState(0x850, 0xbcdb, 0x3ea0, 0x8f52, 0xd299, 0x4513, 0x0, 0x0);
        gbc.writeMem(0x850, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbcdb);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0039
        gbc.setState(0x71b3, 0x4eda, 0xad0, 0xfe5a, 0x92a6, 0x15c9, 0x1, 0x1);
        gbc.writeMem(0x71b3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4eda);
        EXPECT(gbc.pc(), 0x71b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 003A
        gbc.setState(0xa37c, 0x150d, 0x4770, 0xd982, 0x631f, 0x6d21, 0x1, 0x0);
        gbc.writeMem(0xa37c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x150d);
        EXPECT(gbc.pc(), 0xa37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37c), 0xcb);
        EXPECT(gbc.readMem(0xa37d), 0xef);
        // CB EF 003B
        gbc.setState(0xd66a, 0x26a8, 0x3360, 0xee7f, 0x3e81, 0x25ba, 0x0, 0x0);
        gbc.writeMem(0xd66a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x26a8);
        EXPECT(gbc.pc(), 0xd66c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66a), 0xcb);
        EXPECT(gbc.readMem(0xd66b), 0xef);
        // CB EF 003C
        gbc.setState(0x8691, 0xb150, 0x8e40, 0xf79a, 0x9d0d, 0xd20e, 0x0, 0x0);
        gbc.writeMem(0x8691, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb150);
        EXPECT(gbc.pc(), 0x8693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8691), 0xcb);
        EXPECT(gbc.readMem(0x8692), 0xef);
        // CB EF 003D
        gbc.setState(0x57a0, 0x2416, 0xcec0, 0xfc92, 0x3b43, 0xe5, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2416);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 003E
        gbc.setState(0xcfd6, 0x4a68, 0xb7e0, 0xc101, 0xcfce, 0x2bfc, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4a68);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd6), 0xcb);
        EXPECT(gbc.readMem(0xcfd7), 0xef);
        // CB EF 003F
        gbc.setState(0x409d, 0xc4ca, 0xd190, 0x855c, 0x56e1, 0x3b96, 0x0, 0x0);
        gbc.writeMem(0x409d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc4ca);
        EXPECT(gbc.pc(), 0x409f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0040
        gbc.setState(0x6b4d, 0xf628, 0x1df0, 0x13bc, 0x7028, 0xfa8a, 0x1, 0x1);
        gbc.writeMem(0x6b4d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf628);
        EXPECT(gbc.pc(), 0x6b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0041
        gbc.setState(0x74b1, 0x8a0e, 0x59c0, 0x415, 0x3eb, 0x3ada, 0x1, 0x1);
        gbc.writeMem(0x74b1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8a0e);
        EXPECT(gbc.pc(), 0x74b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0042
        gbc.setState(0x9a3b, 0xa15, 0x1f50, 0xeeee, 0x58cd, 0xccda, 0x1, 0x0);
        gbc.writeMem(0x9a3b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa15);
        EXPECT(gbc.pc(), 0x9a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3b), 0xcb);
        EXPECT(gbc.readMem(0x9a3c), 0xef);
        // CB EF 0043
        gbc.setState(0xbaf, 0x1630, 0x8c50, 0x78b1, 0x80a0, 0xb427, 0x0, 0x0);
        gbc.writeMem(0xbaf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1630);
        EXPECT(gbc.pc(), 0xbb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0044
        gbc.setState(0xcce0, 0x7023, 0x9450, 0x83f5, 0xc9d0, 0x71cb, 0x1, 0x1);
        gbc.writeMem(0xcce0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7023);
        EXPECT(gbc.pc(), 0xcce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce0), 0xcb);
        EXPECT(gbc.readMem(0xcce1), 0xef);
        // CB EF 0045
        gbc.setState(0xc4ed, 0xca8c, 0x6110, 0x1257, 0x9cab, 0x3e2c, 0x0, 0x0);
        gbc.writeMem(0xc4ed, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0xc4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ed), 0xcb);
        EXPECT(gbc.readMem(0xc4ee), 0xef);
        // CB EF 0046
        gbc.setState(0x88b9, 0xe01b, 0xbfd0, 0x66, 0xa544, 0xcd4f, 0x1, 0x0);
        gbc.writeMem(0x88b9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe01b);
        EXPECT(gbc.pc(), 0x88bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b9), 0xcb);
        EXPECT(gbc.readMem(0x88ba), 0xef);
        // CB EF 0047
        gbc.setState(0xd18e, 0xa678, 0x14d0, 0x46e9, 0xfa32, 0x1e68, 0x0, 0x1);
        gbc.writeMem(0xd18e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa678);
        EXPECT(gbc.pc(), 0xd190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd18e), 0xcb);
        EXPECT(gbc.readMem(0xd18f), 0xef);
        // CB EF 0048
        gbc.setState(0x9b6c, 0xaae9, 0x9370, 0x1fba, 0x514c, 0x91d7, 0x1, 0x1);
        gbc.writeMem(0x9b6c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xaae9);
        EXPECT(gbc.pc(), 0x9b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6c), 0xcb);
        EXPECT(gbc.readMem(0x9b6d), 0xef);
        // CB EF 0049
        gbc.setState(0x2a1f, 0x644b, 0xf580, 0xe80, 0x802f, 0x8660, 0x0, 0x0);
        gbc.writeMem(0x2a1f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x644b);
        EXPECT(gbc.pc(), 0x2a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 004A
        gbc.setState(0xdd53, 0x174f, 0xec10, 0x1c16, 0xbff, 0x12a6, 0x0, 0x1);
        gbc.writeMem(0xdd53, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x174f);
        EXPECT(gbc.pc(), 0xdd55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd53), 0xcb);
        EXPECT(gbc.readMem(0xdd54), 0xef);
        // CB EF 004B
        gbc.setState(0xb61d, 0x6b70, 0xce70, 0x9cca, 0x13b2, 0x2648, 0x1, 0x0);
        gbc.writeMem(0xb61d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6b70);
        EXPECT(gbc.pc(), 0xb61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61d), 0xcb);
        EXPECT(gbc.readMem(0xb61e), 0xef);
        // CB EF 004C
        gbc.setState(0x7c2e, 0xbd5a, 0x5e20, 0x956, 0x69bb, 0x3f0, 0x0, 0x1);
        gbc.writeMem(0x7c2e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0x7c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 004E
        gbc.setState(0x734b, 0xf7d0, 0xb1f0, 0xb5fe, 0x4af8, 0x45ed, 0x0, 0x0);
        gbc.writeMem(0x734b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf7d0);
        EXPECT(gbc.pc(), 0x734d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 004F
        gbc.setState(0x691b, 0x5a74, 0x3c90, 0xbf1a, 0xaf71, 0x70d6, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5a74);
        EXPECT(gbc.pc(), 0x691d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0050
        gbc.setState(0xdc21, 0x8f6e, 0xd440, 0x5e2f, 0x4db1, 0x2163, 0x0, 0x1);
        gbc.writeMem(0xdc21, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8f6e);
        EXPECT(gbc.pc(), 0xdc23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc21), 0xcb);
        EXPECT(gbc.readMem(0xdc22), 0xef);
        // CB EF 0051
        gbc.setState(0xc95b, 0xb28d, 0x2b50, 0xae17, 0x3d4b, 0xf891, 0x0, 0x1);
        gbc.writeMem(0xc95b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0xc95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95b), 0xcb);
        EXPECT(gbc.readMem(0xc95c), 0xef);
        // CB EF 0052
        gbc.setState(0xc8bb, 0xc193, 0x27f0, 0xd4ac, 0x62ee, 0xdcfd, 0x0, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc193);
        EXPECT(gbc.pc(), 0xc8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bb), 0xcb);
        EXPECT(gbc.readMem(0xc8bc), 0xef);
        // CB EF 0053
        gbc.setState(0xad6c, 0x2051, 0x9850, 0x91dd, 0x612d, 0x2bcb, 0x0, 0x0);
        gbc.writeMem(0xad6c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2051);
        EXPECT(gbc.pc(), 0xad6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6c), 0xcb);
        EXPECT(gbc.readMem(0xad6d), 0xef);
        // CB EF 0054
        gbc.setState(0xcb9a, 0xeea6, 0xba10, 0x37b2, 0xb518, 0x2543, 0x0, 0x1);
        gbc.writeMem(0xcb9a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xeea6);
        EXPECT(gbc.pc(), 0xcb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9a), 0xcb);
        EXPECT(gbc.readMem(0xcb9b), 0xef);
        // CB EF 0055
        gbc.setState(0x8f64, 0x312b, 0x3440, 0xb721, 0xc6a8, 0x318a, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x312b);
        EXPECT(gbc.pc(), 0x8f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f64), 0xcb);
        EXPECT(gbc.readMem(0x8f65), 0xef);
        // CB EF 0056
        gbc.setState(0xa25, 0x9290, 0xae90, 0xc1e7, 0xc442, 0xd086, 0x0, 0x1);
        gbc.writeMem(0xa25, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9290);
        EXPECT(gbc.pc(), 0xa27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0057
        gbc.setState(0x88ac, 0x507a, 0x9850, 0xa5e2, 0xa85b, 0x50c1, 0x0, 0x0);
        gbc.writeMem(0x88ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x507a);
        EXPECT(gbc.pc(), 0x88ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ac), 0xcb);
        EXPECT(gbc.readMem(0x88ad), 0xef);
        // CB EF 0058
        gbc.setState(0xed8d, 0xb60e, 0x4cc0, 0x2b83, 0xa225, 0x939a, 0x1, 0x0);
        gbc.writeMem(0xed8d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb60e);
        EXPECT(gbc.pc(), 0xed8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8d), 0xcb);
        EXPECT(gbc.readMem(0xed8e), 0xef);
        // CB EF 0059
        gbc.setState(0xda71, 0x6ccd, 0xbe60, 0x51f9, 0x97b0, 0xf589, 0x0, 0x1);
        gbc.writeMem(0xda71, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6ccd);
        EXPECT(gbc.pc(), 0xda73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda71), 0xcb);
        EXPECT(gbc.readMem(0xda72), 0xef);
        // CB EF 005A
        gbc.setState(0xdf6b, 0x1a11, 0xfd10, 0x927d, 0xf1c3, 0x1326, 0x0, 0x1);
        gbc.writeMem(0xdf6b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1a11);
        EXPECT(gbc.pc(), 0xdf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf6b), 0xcb);
        EXPECT(gbc.readMem(0xdf6c), 0xef);
        // CB EF 005B
        gbc.setState(0xd1d7, 0xe6fb, 0x21f0, 0x9d76, 0x991b, 0x5c16, 0x0, 0x1);
        gbc.writeMem(0xd1d7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe6fb);
        EXPECT(gbc.pc(), 0xd1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d7), 0xcb);
        EXPECT(gbc.readMem(0xd1d8), 0xef);
        // CB EF 005C
        gbc.setState(0x8445, 0x6a84, 0xc970, 0x17b0, 0x3039, 0x371b, 0x1, 0x0);
        gbc.writeMem(0x8445, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6a84);
        EXPECT(gbc.pc(), 0x8447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8445), 0xcb);
        EXPECT(gbc.readMem(0x8446), 0xef);
        // CB EF 005D
        gbc.setState(0x930e, 0x7a8d, 0x4960, 0x8a5e, 0x232d, 0x2619, 0x1, 0x0);
        gbc.writeMem(0x930e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7a8d);
        EXPECT(gbc.pc(), 0x9310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930e), 0xcb);
        EXPECT(gbc.readMem(0x930f), 0xef);
        // CB EF 005E
        gbc.setState(0xef10, 0x4949, 0xb010, 0xcd7e, 0x9b86, 0xa770, 0x0, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0xef12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef10), 0xcb);
        EXPECT(gbc.readMem(0xef11), 0xef);
        // CB EF 005F
        gbc.setState(0x6609, 0x2398, 0xea00, 0x38d2, 0x9739, 0x611a, 0x1, 0x1);
        gbc.writeMem(0x6609, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2398);
        EXPECT(gbc.pc(), 0x660b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0060
        gbc.setState(0xd174, 0x62e9, 0xfea0, 0xd6a7, 0xb03f, 0x8814, 0x1, 0x1);
        gbc.writeMem(0xd174, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x62e9);
        EXPECT(gbc.pc(), 0xd176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd174), 0xcb);
        EXPECT(gbc.readMem(0xd175), 0xef);
        // CB EF 0061
        gbc.setState(0x4ace, 0x8f95, 0x2e20, 0xf8a3, 0x85f7, 0xbe58, 0x0, 0x1);
        gbc.writeMem(0x4ace, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8f95);
        EXPECT(gbc.pc(), 0x4ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0063
        gbc.setState(0x8f04, 0x463b, 0x2140, 0x9be3, 0x53ff, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x8f04, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x463b);
        EXPECT(gbc.pc(), 0x8f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f04), 0xcb);
        EXPECT(gbc.readMem(0x8f05), 0xef);
        // CB EF 0064
        gbc.setState(0x82c2, 0xdbce, 0x8e90, 0xbab, 0x5bb7, 0x6cd7, 0x1, 0x1);
        gbc.writeMem(0x82c2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x82c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c2), 0xcb);
        EXPECT(gbc.readMem(0x82c3), 0xef);
        // CB EF 0065
        gbc.setState(0x78d5, 0x7a89, 0x2a0, 0xc146, 0xc409, 0xe71, 0x1, 0x1);
        gbc.writeMem(0x78d5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a89);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0066
        gbc.setState(0xb2b0, 0x5276, 0xa2e0, 0x1cf9, 0x8ab6, 0x7f8e, 0x0, 0x1);
        gbc.writeMem(0xb2b0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5276);
        EXPECT(gbc.pc(), 0xb2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b0), 0xcb);
        EXPECT(gbc.readMem(0xb2b1), 0xef);
        // CB EF 0067
        gbc.setState(0x1c5c, 0xc53c, 0x5740, 0x6727, 0x6ca2, 0x14a3, 0x1, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc53c);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0068
        gbc.setState(0x5f57, 0x2338, 0x2a00, 0xb74f, 0xaa98, 0xff3a, 0x0, 0x0);
        gbc.writeMem(0x5f57, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2338);
        EXPECT(gbc.pc(), 0x5f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0069
        gbc.setState(0x290d, 0xbd56, 0xa450, 0xf2bd, 0xabc1, 0x2984, 0x1, 0x1);
        gbc.writeMem(0x290d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbd56);
        EXPECT(gbc.pc(), 0x290f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 006A
        gbc.setState(0x7e15, 0x1821, 0xf960, 0x9af0, 0xe8ca, 0x362b, 0x0, 0x0);
        gbc.writeMem(0x7e15, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1821);
        EXPECT(gbc.pc(), 0x7e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 006B
        gbc.setState(0x454a, 0xa268, 0x9f60, 0xf149, 0xfaea, 0xcc62, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa268);
        EXPECT(gbc.pc(), 0x454c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 006C
        gbc.setState(0x7ee2, 0x8e34, 0xbc10, 0x2ed5, 0x8dea, 0x7118, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8e34);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 006D
        gbc.setState(0xdd32, 0x1a06, 0xe690, 0xc801, 0x1f64, 0x3bf, 0x1, 0x0);
        gbc.writeMem(0xdd32, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1a06);
        EXPECT(gbc.pc(), 0xdd34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd32), 0xcb);
        EXPECT(gbc.readMem(0xdd33), 0xef);
        // CB EF 006E
        gbc.setState(0x47c0, 0x2baa, 0xa80, 0x8eec, 0xfd9c, 0xbb3f, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2baa);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 006F
        gbc.setState(0x4b5d, 0xc56b, 0x17d0, 0x7e89, 0xd837, 0x2371, 0x0, 0x0);
        gbc.writeMem(0x4b5d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc56b);
        EXPECT(gbc.pc(), 0x4b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0071
        gbc.setState(0x3ff9, 0x5444, 0xc4c0, 0x4bdd, 0xdbcb, 0x5c68, 0x0, 0x1);
        gbc.writeMem(0x3ff9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5444);
        EXPECT(gbc.pc(), 0x3ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0072
        gbc.setState(0x619d, 0x1f33, 0xb000, 0x471, 0xae06, 0x7110, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1f33);
        EXPECT(gbc.pc(), 0x619f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0073
        gbc.setState(0xad19, 0x59d8, 0xb10, 0x1c80, 0x7d83, 0xbdeb, 0x1, 0x1);
        gbc.writeMem(0xad19, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x59d8);
        EXPECT(gbc.pc(), 0xad1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad19), 0xcb);
        EXPECT(gbc.readMem(0xad1a), 0xef);
        // CB EF 0074
        gbc.setState(0xae42, 0x188b, 0xdfc0, 0xb27d, 0x755, 0xd572, 0x0, 0x0);
        gbc.writeMem(0xae42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x188b);
        EXPECT(gbc.pc(), 0xae44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0xcb);
        EXPECT(gbc.readMem(0xae43), 0xef);
        // CB EF 0075
        gbc.setState(0x4195, 0xb4c8, 0xa020, 0x101a, 0xc5f2, 0x4107, 0x1, 0x0);
        gbc.writeMem(0x4195, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb4c8);
        EXPECT(gbc.pc(), 0x4197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0076
        gbc.setState(0xdbf2, 0x8bb8, 0x8fa0, 0xf96e, 0x79bb, 0x2eb8, 0x1, 0x1);
        gbc.writeMem(0xdbf2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8bb8);
        EXPECT(gbc.pc(), 0xdbf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf2), 0xcb);
        EXPECT(gbc.readMem(0xdbf3), 0xef);
        // CB EF 0077
        gbc.setState(0xb3c4, 0x9f3d, 0x3fb0, 0x2922, 0x61fa, 0x89c1, 0x1, 0x0);
        gbc.writeMem(0xb3c4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9f3d);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0xef);
        // CB EF 0078
        gbc.setState(0x7f88, 0xfba6, 0xb620, 0xa2c, 0x3753, 0x216e, 0x0, 0x0);
        gbc.writeMem(0x7f88, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfba6);
        EXPECT(gbc.pc(), 0x7f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0079
        gbc.setState(0xcbe1, 0xc327, 0xd1b0, 0x8d2f, 0x6c46, 0x100a, 0x0, 0x0);
        gbc.writeMem(0xcbe1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc327);
        EXPECT(gbc.pc(), 0xcbe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe1), 0xcb);
        EXPECT(gbc.readMem(0xcbe2), 0xef);
        // CB EF 007A
        gbc.setState(0xd43a, 0xfd29, 0x9f20, 0x1df6, 0x84e8, 0x9d73, 0x1, 0x1);
        gbc.writeMem(0xd43a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfd29);
        EXPECT(gbc.pc(), 0xd43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43a), 0xcb);
        EXPECT(gbc.readMem(0xd43b), 0xef);
        // CB EF 007B
        gbc.setState(0x311c, 0xba9c, 0xe50, 0x94a4, 0x3d53, 0x4022, 0x0, 0x1);
        gbc.writeMem(0x311c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xba9c);
        EXPECT(gbc.pc(), 0x311e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 007C
        gbc.setState(0xeb78, 0xc283, 0x3cd0, 0x63c1, 0xf267, 0xc4a, 0x0, 0x0);
        gbc.writeMem(0xeb78, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc283);
        EXPECT(gbc.pc(), 0xeb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb78), 0xcb);
        EXPECT(gbc.readMem(0xeb79), 0xef);
        // CB EF 007D
        gbc.setState(0x18e, 0x3b4c, 0x2c50, 0xc817, 0xff08, 0x1bc7, 0x1, 0x0);
        gbc.writeMem(0x18e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3b4c);
        EXPECT(gbc.pc(), 0x190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 007F
        gbc.setState(0x28df, 0x1b4e, 0xbb90, 0x7c16, 0xf78e, 0xa632, 0x1, 0x1);
        gbc.writeMem(0x28df, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0x28e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0080
        gbc.setState(0xaffa, 0x9c7a, 0x2f50, 0x3a40, 0x3f2c, 0x4ee1, 0x1, 0x0);
        gbc.writeMem(0xaffa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0xaffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffa), 0xcb);
        EXPECT(gbc.readMem(0xaffb), 0xef);
        // CB EF 0081
        gbc.setState(0xca0a, 0x37bd, 0xfbb0, 0xe1de, 0x7852, 0x591a, 0x0, 0x0);
        gbc.writeMem(0xca0a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x37bd);
        EXPECT(gbc.pc(), 0xca0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0a), 0xcb);
        EXPECT(gbc.readMem(0xca0b), 0xef);
        // CB EF 0082
        gbc.setState(0xe20f, 0xf78f, 0x2c0, 0xe06a, 0x3e49, 0x17d8, 0x1, 0x1);
        gbc.writeMem(0xe20f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf78f);
        EXPECT(gbc.pc(), 0xe211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20f), 0xcb);
        EXPECT(gbc.readMem(0xe210), 0xef);
        // CB EF 0083
        gbc.setState(0xe94b, 0xc8d0, 0x8960, 0xf489, 0x3236, 0x34d0, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc8d0);
        EXPECT(gbc.pc(), 0xe94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94b), 0xcb);
        EXPECT(gbc.readMem(0xe94c), 0xef);
        // CB EF 0084
        gbc.setState(0x38aa, 0x88ea, 0x2850, 0x7f87, 0x52a7, 0xab5d, 0x1, 0x0);
        gbc.writeMem(0x38aa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x88ea);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0085
        gbc.setState(0x4c7c, 0x8382, 0x5750, 0x7577, 0xe88e, 0x1b12, 0x0, 0x0);
        gbc.writeMem(0x4c7c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8382);
        EXPECT(gbc.pc(), 0x4c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0086
        gbc.setState(0x4403, 0xfa10, 0xddb0, 0x7d3, 0x6b02, 0xbdbd, 0x0, 0x1);
        gbc.writeMem(0x4403, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfa10);
        EXPECT(gbc.pc(), 0x4405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0087
        gbc.setState(0xaebf, 0x67e0, 0x92c0, 0x20ab, 0xb8ce, 0x8e7b, 0x0, 0x0);
        gbc.writeMem(0xaebf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x67e0);
        EXPECT(gbc.pc(), 0xaec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebf), 0xcb);
        EXPECT(gbc.readMem(0xaec0), 0xef);
        // CB EF 0089
        gbc.setState(0xb965, 0x4e9, 0xa3b0, 0xd428, 0x19ce, 0x8d4f, 0x1, 0x0);
        gbc.writeMem(0xb965, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4e9);
        EXPECT(gbc.pc(), 0xb967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb965), 0xcb);
        EXPECT(gbc.readMem(0xb966), 0xef);
        // CB EF 008A
        gbc.setState(0x65ed, 0x53, 0xe430, 0x106b, 0xaeea, 0xe8bc, 0x1, 0x0);
        gbc.writeMem(0x65ed, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x53);
        EXPECT(gbc.pc(), 0x65ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 008B
        gbc.setState(0x47f7, 0x33db, 0x51f0, 0xe44f, 0x2800, 0x84e1, 0x1, 0x0);
        gbc.writeMem(0x47f7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x33db);
        EXPECT(gbc.pc(), 0x47f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 008C
        gbc.setState(0x5e5b, 0x3bcd, 0x46c0, 0x3460, 0x5457, 0x59d, 0x0, 0x0);
        gbc.writeMem(0x5e5b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0x5e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 008D
        gbc.setState(0xd606, 0x3e2, 0x8300, 0x2168, 0x6d0b, 0x7d06, 0x0, 0x1);
        gbc.writeMem(0xd606, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3e2);
        EXPECT(gbc.pc(), 0xd608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd606), 0xcb);
        EXPECT(gbc.readMem(0xd607), 0xef);
        // CB EF 008E
        gbc.setState(0x915d, 0x942a, 0xd940, 0x1604, 0x6773, 0x2805, 0x1, 0x0);
        gbc.writeMem(0x915d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x942a);
        EXPECT(gbc.pc(), 0x915f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915d), 0xcb);
        EXPECT(gbc.readMem(0x915e), 0xef);
        // CB EF 0090
        gbc.setState(0x14a0, 0x8aef, 0x27b0, 0x8957, 0x545c, 0x8245, 0x1, 0x1);
        gbc.writeMem(0x14a0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8aef);
        EXPECT(gbc.pc(), 0x14a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0091
        gbc.setState(0x2927, 0x2f05, 0xe330, 0x7325, 0xe523, 0x22bb, 0x0, 0x1);
        gbc.writeMem(0x2927, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2f05);
        EXPECT(gbc.pc(), 0x2929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0092
        gbc.setState(0x7b3d, 0xd72a, 0x8c60, 0x2639, 0x3806, 0x197b, 0x0, 0x1);
        gbc.writeMem(0x7b3d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd72a);
        EXPECT(gbc.pc(), 0x7b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0093
        gbc.setState(0xad09, 0xeead, 0xb590, 0x12d3, 0x5e61, 0x22d0, 0x1, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeead);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad09), 0xcb);
        EXPECT(gbc.readMem(0xad0a), 0xef);
        // CB EF 0095
        gbc.setState(0xa180, 0xe003, 0x1d60, 0x5db0, 0xd475, 0xa17c, 0x1, 0x1);
        gbc.writeMem(0xa180, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe003);
        EXPECT(gbc.pc(), 0xa182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa180), 0xcb);
        EXPECT(gbc.readMem(0xa181), 0xef);
        // CB EF 0096
        gbc.setState(0x6698, 0x2e1d, 0xe970, 0x9535, 0x5d0d, 0xe5f8, 0x0, 0x0);
        gbc.writeMem(0x6698, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2e1d);
        EXPECT(gbc.pc(), 0x669a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0097
        gbc.setState(0x1e39, 0xb7f2, 0x210, 0x1486, 0xa75, 0xe6d2, 0x1, 0x1);
        gbc.writeMem(0x1e39, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb7f2);
        EXPECT(gbc.pc(), 0x1e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0098
        gbc.setState(0xdff9, 0x7d9d, 0x6430, 0x3ba2, 0xc3f3, 0x3bab, 0x1, 0x1);
        gbc.writeMem(0xdff9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7d9d);
        EXPECT(gbc.pc(), 0xdffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff9), 0xcb);
        EXPECT(gbc.readMem(0xdffa), 0xef);
        // CB EF 0099
        gbc.setState(0x21d2, 0x72ef, 0x7740, 0x925, 0xe0d2, 0xa2b9, 0x1, 0x1);
        gbc.writeMem(0x21d2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x72ef);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 009A
        gbc.setState(0xe662, 0x3cc2, 0x3a50, 0xcc26, 0x15ff, 0x51f9, 0x1, 0x1);
        gbc.writeMem(0xe662, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3cc2);
        EXPECT(gbc.pc(), 0xe664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe662), 0xcb);
        EXPECT(gbc.readMem(0xe663), 0xef);
        // CB EF 009B
        gbc.setState(0xe998, 0xff77, 0x8410, 0x2d5e, 0xabd1, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0xe998, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xff77);
        EXPECT(gbc.pc(), 0xe99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe998), 0xcb);
        EXPECT(gbc.readMem(0xe999), 0xef);
        // CB EF 009C
        gbc.setState(0x4b6c, 0x10aa, 0x8ca0, 0x42da, 0xcabf, 0x5a61, 0x0, 0x1);
        gbc.writeMem(0x4b6c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x10aa);
        EXPECT(gbc.pc(), 0x4b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 009D
        gbc.setState(0x2a6a, 0x1df8, 0x6790, 0x42ac, 0xbce6, 0xc6fe, 0x1, 0x0);
        gbc.writeMem(0x2a6a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1df8);
        EXPECT(gbc.pc(), 0x2a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 009E
        gbc.setState(0xcee5, 0x34d7, 0xc6d0, 0x5d5f, 0x83bf, 0x893c, 0x0, 0x0);
        gbc.writeMem(0xcee5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x34d7);
        EXPECT(gbc.pc(), 0xcee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee5), 0xcb);
        EXPECT(gbc.readMem(0xcee6), 0xef);
        // CB EF 009F
        gbc.setState(0x7ed3, 0xfd34, 0x540, 0x59f5, 0x3f63, 0xb29e, 0x0, 0x0);
        gbc.writeMem(0x7ed3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfd34);
        EXPECT(gbc.pc(), 0x7ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00A0
        gbc.setState(0x8126, 0x1626, 0x5910, 0xca6, 0x464a, 0xf9e9, 0x0, 0x1);
        gbc.writeMem(0x8126, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1626);
        EXPECT(gbc.pc(), 0x8128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8126), 0xcb);
        EXPECT(gbc.readMem(0x8127), 0xef);
        // CB EF 00A2
        gbc.setState(0x110e, 0xbb7a, 0x8a40, 0xa9b5, 0x1c1e, 0x7fd, 0x1, 0x1);
        gbc.writeMem(0x110e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbb7a);
        EXPECT(gbc.pc(), 0x1110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00A3
        gbc.setState(0xe1b0, 0xf5, 0x1cc0, 0xe88c, 0x6f39, 0x42b7, 0x1, 0x1);
        gbc.writeMem(0xe1b0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf5);
        EXPECT(gbc.pc(), 0xe1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b0), 0xcb);
        EXPECT(gbc.readMem(0xe1b1), 0xef);
        // CB EF 00A4
        gbc.setState(0xc1e3, 0xdbb4, 0x5850, 0xa1dd, 0x9e50, 0x159d, 0x0, 0x1);
        gbc.writeMem(0xc1e3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdbb4);
        EXPECT(gbc.pc(), 0xc1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e3), 0xcb);
        EXPECT(gbc.readMem(0xc1e4), 0xef);
        // CB EF 00A5
        gbc.setState(0x215e, 0x6ef7, 0x9790, 0xb483, 0xa3ed, 0xa8d0, 0x1, 0x0);
        gbc.writeMem(0x215e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6ef7);
        EXPECT(gbc.pc(), 0x2160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00A6
        gbc.setState(0xd57b, 0x55e1, 0x3810, 0xed14, 0xbd9e, 0x3c8f, 0x0, 0x0);
        gbc.writeMem(0xd57b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x55e1);
        EXPECT(gbc.pc(), 0xd57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57b), 0xcb);
        EXPECT(gbc.readMem(0xd57c), 0xef);
        // CB EF 00A7
        gbc.setState(0x8a0f, 0x4e24, 0x47c0, 0x59c4, 0x6b7e, 0x1895, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0x8a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0f), 0xcb);
        EXPECT(gbc.readMem(0x8a10), 0xef);
        // CB EF 00A8
        gbc.setState(0x2a6c, 0xf9f0, 0x3410, 0x8dc1, 0xa62c, 0x3346, 0x0, 0x1);
        gbc.writeMem(0x2a6c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf9f0);
        EXPECT(gbc.pc(), 0x2a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00A9
        gbc.setState(0x241d, 0x2c28, 0x5e60, 0xc909, 0x54be, 0xff72, 0x0, 0x1);
        gbc.writeMem(0x241d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2c28);
        EXPECT(gbc.pc(), 0x241f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00AA
        gbc.setState(0x8cb1, 0xcaaa, 0x6600, 0x1876, 0x7da8, 0x5c23, 0x0, 0x1);
        gbc.writeMem(0x8cb1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcaaa);
        EXPECT(gbc.pc(), 0x8cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb1), 0xcb);
        EXPECT(gbc.readMem(0x8cb2), 0xef);
        // CB EF 00AB
        gbc.setState(0x4c9d, 0xd714, 0xe020, 0xea17, 0x1145, 0xac35, 0x0, 0x1);
        gbc.writeMem(0x4c9d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd714);
        EXPECT(gbc.pc(), 0x4c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00AC
        gbc.setState(0x9eaa, 0x7a28, 0x9890, 0x872, 0xc3a, 0x493a, 0x0, 0x1);
        gbc.writeMem(0x9eaa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7a28);
        EXPECT(gbc.pc(), 0x9eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eaa), 0xcb);
        EXPECT(gbc.readMem(0x9eab), 0xef);
        // CB EF 00AD
        gbc.setState(0xf9b, 0x79a8, 0xf4a0, 0x9578, 0xd92b, 0x74e, 0x0, 0x0);
        gbc.writeMem(0xf9b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x79a8);
        EXPECT(gbc.pc(), 0xf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00AE
        gbc.setState(0x3621, 0xd523, 0xcb00, 0xd4b8, 0x9909, 0xa967, 0x1, 0x0);
        gbc.writeMem(0x3621, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd523);
        EXPECT(gbc.pc(), 0x3623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00AF
        gbc.setState(0x93c5, 0xd5a, 0x8e60, 0xf1c6, 0xf180, 0xea65, 0x1, 0x1);
        gbc.writeMem(0x93c5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd5a);
        EXPECT(gbc.pc(), 0x93c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c5), 0xcb);
        EXPECT(gbc.readMem(0x93c6), 0xef);
        // CB EF 00B0
        gbc.setState(0xc014, 0x4e7e, 0xf750, 0x849a, 0xa8f4, 0xf46f, 0x0, 0x0);
        gbc.writeMem(0xc014, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0xc016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc014), 0xcb);
        EXPECT(gbc.readMem(0xc015), 0xef);
        // CB EF 00B1
        gbc.setState(0x2c83, 0x3b03, 0x9970, 0x84a4, 0x29c1, 0x6099, 0x1, 0x1);
        gbc.writeMem(0x2c83, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3b03);
        EXPECT(gbc.pc(), 0x2c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00B3
        gbc.setState(0x72ae, 0xead, 0xb640, 0x711a, 0xc268, 0x8e38, 0x1, 0x0);
        gbc.writeMem(0x72ae, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xead);
        EXPECT(gbc.pc(), 0x72b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00B4
        gbc.setState(0x75b8, 0x47cf, 0xd680, 0x74d7, 0xdf62, 0x85d2, 0x1, 0x1);
        gbc.writeMem(0x75b8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x47cf);
        EXPECT(gbc.pc(), 0x75ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00B6
        gbc.setState(0xe059, 0x60c9, 0x5fb0, 0xff44, 0xa9af, 0xa299, 0x0, 0x0);
        gbc.writeMem(0xe059, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0xe05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe059), 0xcb);
        EXPECT(gbc.readMem(0xe05a), 0xef);
        // CB EF 00B7
        gbc.setState(0xcc3e, 0xb2d2, 0x5260, 0xd0d2, 0x51cd, 0x546, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb2d2);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0xef);
        // CB EF 00B8
        gbc.setState(0x27ae, 0x63a6, 0x860, 0xb141, 0x71be, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x27ae, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0x27b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00B9
        gbc.setState(0x9a99, 0x28b9, 0xf8a0, 0xa4dc, 0xa7fb, 0x45cc, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x28b9);
        EXPECT(gbc.pc(), 0x9a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a99), 0xcb);
        EXPECT(gbc.readMem(0x9a9a), 0xef);
        // CB EF 00BA
        gbc.setState(0x9d8a, 0x59f1, 0x7300, 0x5c3b, 0xe994, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0x9d8a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x59f1);
        EXPECT(gbc.pc(), 0x9d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8a), 0xcb);
        EXPECT(gbc.readMem(0x9d8b), 0xef);
        // CB EF 00BB
        gbc.setState(0x2b5a, 0x7f49, 0x5c00, 0x1d90, 0x8d3f, 0x3079, 0x0, 0x0);
        gbc.writeMem(0x2b5a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7f49);
        EXPECT(gbc.pc(), 0x2b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00BD
        gbc.setState(0x5436, 0x6ca2, 0xda60, 0x8027, 0xb9f7, 0xe97e, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6ca2);
        EXPECT(gbc.pc(), 0x5438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00BE
        gbc.setState(0x4aa9, 0x1edf, 0x2d90, 0xbeaa, 0x850f, 0x9838, 0x1, 0x1);
        gbc.writeMem(0x4aa9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1edf);
        EXPECT(gbc.pc(), 0x4aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00BF
        gbc.setState(0xe5d3, 0x45b7, 0x7c80, 0x813a, 0x839b, 0xff6, 0x0, 0x1);
        gbc.writeMem(0xe5d3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x45b7);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0xef);
        // CB EF 00C0
        gbc.setState(0x992d, 0x6d95, 0xa8f0, 0xb0a3, 0x90df, 0x87dd, 0x0, 0x0);
        gbc.writeMem(0x992d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6d95);
        EXPECT(gbc.pc(), 0x992f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992d), 0xcb);
        EXPECT(gbc.readMem(0x992e), 0xef);
        // CB EF 00C1
        gbc.setState(0xd7f, 0x8010, 0x3fe0, 0x1dea, 0x92e0, 0xb519, 0x1, 0x1);
        gbc.writeMem(0xd7f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8010);
        EXPECT(gbc.pc(), 0xd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00C2
        gbc.setState(0x18ec, 0x9184, 0x86b0, 0xab26, 0xba3e, 0x8711, 0x0, 0x1);
        gbc.writeMem(0x18ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9184);
        EXPECT(gbc.pc(), 0x18ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00C3
        gbc.setState(0x7e96, 0xc236, 0xdeb0, 0xa490, 0x3271, 0x5c7b, 0x0, 0x1);
        gbc.writeMem(0x7e96, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0x7e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00C4
        gbc.setState(0xbae7, 0xd3f6, 0xc340, 0x780b, 0x151d, 0x3efa, 0x0, 0x0);
        gbc.writeMem(0xbae7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd3f6);
        EXPECT(gbc.pc(), 0xbae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae7), 0xcb);
        EXPECT(gbc.readMem(0xbae8), 0xef);
        // CB EF 00C5
        gbc.setState(0x91d1, 0x82e3, 0xc850, 0x73c8, 0x50cd, 0x3240, 0x0, 0x0);
        gbc.writeMem(0x91d1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x82e3);
        EXPECT(gbc.pc(), 0x91d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d1), 0xcb);
        EXPECT(gbc.readMem(0x91d2), 0xef);
        // CB EF 00C6
        gbc.setState(0xcb48, 0x5e41, 0x24b0, 0xa46b, 0x75d5, 0x9c40, 0x1, 0x1);
        gbc.writeMem(0xcb48, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0xcb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb48), 0xcb);
        EXPECT(gbc.readMem(0xcb49), 0xef);
        // CB EF 00C8
        gbc.setState(0x377d, 0x3039, 0xd930, 0x559d, 0x679e, 0xbc24, 0x1, 0x0);
        gbc.writeMem(0x377d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3039);
        EXPECT(gbc.pc(), 0x377f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00C9
        gbc.setState(0xc9a3, 0xe599, 0x7750, 0xdde9, 0x4406, 0x82c2, 0x1, 0x1);
        gbc.writeMem(0xc9a3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe599);
        EXPECT(gbc.pc(), 0xc9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a3), 0xcb);
        EXPECT(gbc.readMem(0xc9a4), 0xef);
        // CB EF 00CA
        gbc.setState(0x8a47, 0x35ae, 0xec0, 0xcd02, 0x1248, 0xc56b, 0x0, 0x0);
        gbc.writeMem(0x8a47, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x35ae);
        EXPECT(gbc.pc(), 0x8a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a47), 0xcb);
        EXPECT(gbc.readMem(0x8a48), 0xef);
        // CB EF 00CB
        gbc.setState(0xce0a, 0xcdd4, 0xa1c0, 0x879, 0xbd68, 0x596a, 0x1, 0x0);
        gbc.writeMem(0xce0a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcdd4);
        EXPECT(gbc.pc(), 0xce0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0a), 0xcb);
        EXPECT(gbc.readMem(0xce0b), 0xef);
        // CB EF 00CD
        gbc.setState(0x4f34, 0xbc94, 0xac40, 0x8d33, 0xd49e, 0xdf33, 0x1, 0x1);
        gbc.writeMem(0x4f34, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbc94);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00CE
        gbc.setState(0x487, 0x1d4a, 0x5170, 0x604a, 0x986d, 0x5a10, 0x0, 0x1);
        gbc.writeMem(0x487, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1d4a);
        EXPECT(gbc.pc(), 0x489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00CF
        gbc.setState(0x35fd, 0xb203, 0x68b0, 0x317c, 0x9543, 0x7032, 0x0, 0x0);
        gbc.writeMem(0x35fd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb203);
        EXPECT(gbc.pc(), 0x35ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00D0
        gbc.setState(0x3abd, 0xa6ed, 0x5880, 0xab5b, 0x3072, 0xd73f, 0x1, 0x1);
        gbc.writeMem(0x3abd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa6ed);
        EXPECT(gbc.pc(), 0x3abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00D1
        gbc.setState(0x9640, 0xb5, 0x4670, 0xdb73, 0x6e70, 0x9fd, 0x1, 0x0);
        gbc.writeMem(0x9640, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5);
        EXPECT(gbc.pc(), 0x9642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9640), 0xcb);
        EXPECT(gbc.readMem(0x9641), 0xef);
        // CB EF 00D2
        gbc.setState(0xe284, 0xb5ec, 0x7540, 0xd35f, 0xe70f, 0x4da2, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb5ec);
        EXPECT(gbc.pc(), 0xe286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe284), 0xcb);
        EXPECT(gbc.readMem(0xe285), 0xef);
        // CB EF 00D3
        gbc.setState(0xb023, 0xe7e6, 0x2af0, 0xc2bf, 0xaa6f, 0x18cd, 0x1, 0x1);
        gbc.writeMem(0xb023, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe7e6);
        EXPECT(gbc.pc(), 0xb025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb023), 0xcb);
        EXPECT(gbc.readMem(0xb024), 0xef);
        // CB EF 00D4
        gbc.setState(0x8f82, 0x7ddf, 0xea10, 0xdb21, 0xae02, 0x9f82, 0x0, 0x0);
        gbc.writeMem(0x8f82, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7ddf);
        EXPECT(gbc.pc(), 0x8f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f82), 0xcb);
        EXPECT(gbc.readMem(0x8f83), 0xef);
        // CB EF 00D5
        gbc.setState(0xf98, 0x6416, 0xf1a0, 0x79f8, 0xd116, 0xab4, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6416);
        EXPECT(gbc.pc(), 0xf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00D6
        gbc.setState(0xaaf0, 0xada8, 0xdbb0, 0xdac6, 0x1f2c, 0xb2ee, 0x1, 0x1);
        gbc.writeMem(0xaaf0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf0), 0xcb);
        EXPECT(gbc.readMem(0xaaf1), 0xef);
        // CB EF 00D7
        gbc.setState(0x535c, 0xc537, 0xf80, 0xcd14, 0x734e, 0xabb1, 0x1, 0x1);
        gbc.writeMem(0x535c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc537);
        EXPECT(gbc.pc(), 0x535e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00D8
        gbc.setState(0x926b, 0x9a20, 0x4c40, 0x5af9, 0x38f7, 0x2064, 0x1, 0x1);
        gbc.writeMem(0x926b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9a20);
        EXPECT(gbc.pc(), 0x926d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926b), 0xcb);
        EXPECT(gbc.readMem(0x926c), 0xef);
        // CB EF 00D9
        gbc.setState(0x29f6, 0x422e, 0xc1b0, 0x8ca, 0x2f8f, 0xc5c6, 0x1, 0x0);
        gbc.writeMem(0x29f6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x422e);
        EXPECT(gbc.pc(), 0x29f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00DA
        gbc.setState(0x93e7, 0xf787, 0x9b80, 0x5c20, 0x7e09, 0x71f1, 0x1, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf787);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e7), 0xcb);
        EXPECT(gbc.readMem(0x93e8), 0xef);
        // CB EF 00DB
        gbc.setState(0x4662, 0x297c, 0x3440, 0x2b0b, 0x37c4, 0x14a9, 0x1, 0x1);
        gbc.writeMem(0x4662, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x297c);
        EXPECT(gbc.pc(), 0x4664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00DC
        gbc.setState(0x130e, 0xb277, 0xebf0, 0xc3b1, 0xf7ba, 0x4686, 0x0, 0x1);
        gbc.writeMem(0x130e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb277);
        EXPECT(gbc.pc(), 0x1310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00DD
        gbc.setState(0xeb3f, 0x2299, 0x5d90, 0x8484, 0xfa26, 0x1d8d, 0x1, 0x0);
        gbc.writeMem(0xeb3f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0xeb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3f), 0xcb);
        EXPECT(gbc.readMem(0xeb40), 0xef);
        // CB EF 00DE
        gbc.setState(0xe9d6, 0xf228, 0x79a0, 0xddce, 0xc934, 0x3216, 0x1, 0x0);
        gbc.writeMem(0xe9d6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf228);
        EXPECT(gbc.pc(), 0xe9d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d6), 0xcb);
        EXPECT(gbc.readMem(0xe9d7), 0xef);
        // CB EF 00DF
        gbc.setState(0x1e79, 0x4b2e, 0x5930, 0xdaf2, 0x1b78, 0x2adc, 0x0, 0x0);
        gbc.writeMem(0x1e79, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4b2e);
        EXPECT(gbc.pc(), 0x1e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00E0
        gbc.setState(0xa0bb, 0xc7c9, 0x2010, 0x5505, 0xe148, 0x7f65, 0x1, 0x0);
        gbc.writeMem(0xa0bb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc7c9);
        EXPECT(gbc.pc(), 0xa0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bb), 0xcb);
        EXPECT(gbc.readMem(0xa0bc), 0xef);
        // CB EF 00E1
        gbc.setState(0xeebe, 0xe585, 0xb850, 0x2ec2, 0xcd9, 0x7133, 0x1, 0x0);
        gbc.writeMem(0xeebe, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe585);
        EXPECT(gbc.pc(), 0xeec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebe), 0xcb);
        EXPECT(gbc.readMem(0xeebf), 0xef);
        // CB EF 00E2
        gbc.setState(0x1a7a, 0xfd4, 0x8e20, 0x8d40, 0xcf74, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfd4);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00E3
        gbc.setState(0xa56a, 0xd891, 0xf9b0, 0x1239, 0xe4ea, 0xe00, 0x1, 0x1);
        gbc.writeMem(0xa56a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd891);
        EXPECT(gbc.pc(), 0xa56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56a), 0xcb);
        EXPECT(gbc.readMem(0xa56b), 0xef);
        // CB EF 00E4
        gbc.setState(0xc9be, 0x44ec, 0xb960, 0x97ea, 0xd09c, 0x6a56, 0x1, 0x0);
        gbc.writeMem(0xc9be, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x44ec);
        EXPECT(gbc.pc(), 0xc9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9be), 0xcb);
        EXPECT(gbc.readMem(0xc9bf), 0xef);
        // CB EF 00E5
        gbc.setState(0x5310, 0x8f9, 0x6fc0, 0x4fa7, 0xe959, 0x935f, 0x0, 0x0);
        gbc.writeMem(0x5310, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8f9);
        EXPECT(gbc.pc(), 0x5312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00E7
        gbc.setState(0x5db6, 0xb7c2, 0xe2c0, 0xd5e1, 0x917f, 0xc4e9, 0x1, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb7c2);
        EXPECT(gbc.pc(), 0x5db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00E8
        gbc.setState(0x1a56, 0xfe03, 0x5a00, 0x1f38, 0x199, 0x867f, 0x1, 0x0);
        gbc.writeMem(0x1a56, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfe03);
        EXPECT(gbc.pc(), 0x1a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00E9
        gbc.setState(0x6902, 0x5eb4, 0x7c40, 0xf2bc, 0xe1d0, 0x93d6, 0x0, 0x1);
        gbc.writeMem(0x6902, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5eb4);
        EXPECT(gbc.pc(), 0x6904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00EA
        gbc.setState(0xe5f3, 0x648e, 0x7750, 0xcc72, 0xae37, 0x4746, 0x1, 0x1);
        gbc.writeMem(0xe5f3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x648e);
        EXPECT(gbc.pc(), 0xe5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f3), 0xcb);
        EXPECT(gbc.readMem(0xe5f4), 0xef);
        // CB EF 00EB
        gbc.setState(0x8149, 0x601d, 0xed00, 0x546, 0xdd7b, 0xfa86, 0x0, 0x1);
        gbc.writeMem(0x8149, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x601d);
        EXPECT(gbc.pc(), 0x814b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8149), 0xcb);
        EXPECT(gbc.readMem(0x814a), 0xef);
        // CB EF 00EC
        gbc.setState(0xa2d0, 0xfff5, 0x1af0, 0x5e35, 0x3b8d, 0x7aad, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfff5);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d0), 0xcb);
        EXPECT(gbc.readMem(0xa2d1), 0xef);
        // CB EF 00ED
        gbc.setState(0xdd1d, 0x7a1, 0xf9c0, 0x1a20, 0x4a26, 0x36cc, 0x0, 0x0);
        gbc.writeMem(0xdd1d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7a1);
        EXPECT(gbc.pc(), 0xdd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1d), 0xcb);
        EXPECT(gbc.readMem(0xdd1e), 0xef);
        // CB EF 00EE
        gbc.setState(0x75ab, 0xc729, 0xf6d0, 0xfa3a, 0xacf, 0xd24b, 0x0, 0x1);
        gbc.writeMem(0x75ab, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc729);
        EXPECT(gbc.pc(), 0x75ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00EF
        gbc.setState(0xc876, 0x84af, 0x82f0, 0x16c2, 0x8698, 0x493a, 0x0, 0x0);
        gbc.writeMem(0xc876, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x84af);
        EXPECT(gbc.pc(), 0xc878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc876), 0xcb);
        EXPECT(gbc.readMem(0xc877), 0xef);
        // CB EF 00F0
        gbc.setState(0x7f43, 0x99c6, 0x9730, 0xc9a7, 0xecda, 0x70f, 0x0, 0x0);
        gbc.writeMem(0x7f43, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x99c6);
        EXPECT(gbc.pc(), 0x7f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00F1
        gbc.setState(0x799, 0x8000, 0xdb60, 0xa130, 0x8d6a, 0xb8a2, 0x0, 0x1);
        gbc.writeMem(0x799, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8000);
        EXPECT(gbc.pc(), 0x79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00F2
        gbc.setState(0x74f, 0x4f90, 0x1d30, 0x7281, 0x8ca6, 0xb6f1, 0x0, 0x1);
        gbc.writeMem(0x74f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4f90);
        EXPECT(gbc.pc(), 0x751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00F3
        gbc.setState(0x30f3, 0x5c97, 0x1700, 0x355e, 0x75e, 0x4ea9, 0x0, 0x0);
        gbc.writeMem(0x30f3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5c97);
        EXPECT(gbc.pc(), 0x30f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00F4
        gbc.setState(0x370e, 0xc3d0, 0xda70, 0xc44a, 0xd98, 0xc8ea, 0x0, 0x1);
        gbc.writeMem(0x370e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc3d0);
        EXPECT(gbc.pc(), 0x3710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 00F5
        gbc.setState(0x23e0, 0x1be0, 0xbf00, 0x7b2a, 0xa1ce, 0xec40, 0x0, 0x1);
        gbc.writeMem(0x23e0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1be0);
        EXPECT(gbc.pc(), 0x23e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00F6
        gbc.setState(0x4efc, 0x90f3, 0x3aa0, 0x4627, 0x8130, 0xa66a, 0x0, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x90f3);
        EXPECT(gbc.pc(), 0x4efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00F7
        gbc.setState(0x9a60, 0xbe35, 0x6030, 0xd529, 0x30e, 0x5b1, 0x1, 0x1);
        gbc.writeMem(0x9a60, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x9a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a60), 0xcb);
        EXPECT(gbc.readMem(0x9a61), 0xef);
        // CB EF 00F8
        gbc.setState(0xc497, 0xe460, 0x2220, 0x1598, 0x29f2, 0xd582, 0x1, 0x0);
        gbc.writeMem(0xc497, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0xc499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc497), 0xcb);
        EXPECT(gbc.readMem(0xc498), 0xef);
        // CB EF 00F9
        gbc.setState(0x32c3, 0x7cc4, 0xc0c0, 0xa42f, 0xbf88, 0xbb46, 0x1, 0x0);
        gbc.writeMem(0x32c3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7cc4);
        EXPECT(gbc.pc(), 0x32c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 00FA
        gbc.setState(0xd644, 0x18b5, 0x87a0, 0x1e15, 0xd026, 0xc4d2, 0x0, 0x0);
        gbc.writeMem(0xd644, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x18b5);
        EXPECT(gbc.pc(), 0xd646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd644), 0xcb);
        EXPECT(gbc.readMem(0xd645), 0xef);
        // CB EF 00FB
        gbc.setState(0xdb4a, 0x8807, 0x9190, 0xfab7, 0xe035, 0xea14, 0x0, 0x0);
        gbc.writeMem(0xdb4a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8807);
        EXPECT(gbc.pc(), 0xdb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb4a), 0xcb);
        EXPECT(gbc.readMem(0xdb4b), 0xef);
        // CB EF 00FC
        gbc.setState(0x8583, 0x1604, 0xaa60, 0x264c, 0x22cb, 0x16a9, 0x1, 0x1);
        gbc.writeMem(0x8583, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1604);
        EXPECT(gbc.pc(), 0x8585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8583), 0xcb);
        EXPECT(gbc.readMem(0x8584), 0xef);
        // CB EF 00FD
        gbc.setState(0xbeaf, 0x6887, 0x5380, 0x8bb9, 0x98dc, 0xbd25, 0x1, 0x0);
        gbc.writeMem(0xbeaf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6887);
        EXPECT(gbc.pc(), 0xbeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeaf), 0xcb);
        EXPECT(gbc.readMem(0xbeb0), 0xef);
        // CB EF 00FE
        gbc.setState(0xd8bf, 0x1b10, 0x8880, 0x430e, 0xaf99, 0x286a, 0x1, 0x0);
        gbc.writeMem(0xd8bf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1b10);
        EXPECT(gbc.pc(), 0xd8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bf), 0xcb);
        EXPECT(gbc.readMem(0xd8c0), 0xef);
        // CB EF 00FF
        gbc.setState(0xdd61, 0xa422, 0x85d0, 0x187e, 0x26a7, 0x3751, 0x0, 0x0);
        gbc.writeMem(0xdd61, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa422);
        EXPECT(gbc.pc(), 0xdd63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd61), 0xcb);
        EXPECT(gbc.readMem(0xdd62), 0xef);
        // CB EF 0100
        gbc.setState(0x8642, 0xede6, 0xf690, 0xe6c5, 0x80b7, 0xdb2c, 0x1, 0x0);
        gbc.writeMem(0x8642, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xede6);
        EXPECT(gbc.pc(), 0x8644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8642), 0xcb);
        EXPECT(gbc.readMem(0x8643), 0xef);
        // CB EF 0101
        gbc.setState(0xd215, 0x6d44, 0xf440, 0x53f3, 0xd78c, 0x1b3, 0x0, 0x0);
        gbc.writeMem(0xd215, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6d44);
        EXPECT(gbc.pc(), 0xd217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd215), 0xcb);
        EXPECT(gbc.readMem(0xd216), 0xef);
        // CB EF 0102
        gbc.setState(0x8ff3, 0xe251, 0xf3c0, 0x2c7e, 0x6746, 0xc94b, 0x1, 0x0);
        gbc.writeMem(0x8ff3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe251);
        EXPECT(gbc.pc(), 0x8ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff3), 0xcb);
        EXPECT(gbc.readMem(0x8ff4), 0xef);
        // CB EF 0103
        gbc.setState(0x7d6f, 0xc995, 0x66f0, 0x130d, 0xda2d, 0x21a6, 0x1, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc995);
        EXPECT(gbc.pc(), 0x7d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0104
        gbc.setState(0x1ede, 0xe706, 0xb2e0, 0xae3a, 0x7f14, 0x8a79, 0x1, 0x0);
        gbc.writeMem(0x1ede, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe706);
        EXPECT(gbc.pc(), 0x1ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0105
        gbc.setState(0xe057, 0x2d0f, 0xbd10, 0xa1e4, 0xb9dd, 0xa905, 0x0, 0x0);
        gbc.writeMem(0xe057, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2d0f);
        EXPECT(gbc.pc(), 0xe059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe057), 0xcb);
        EXPECT(gbc.readMem(0xe058), 0xef);
        // CB EF 0106
        gbc.setState(0xce03, 0xc6ba, 0x2700, 0xd5c0, 0xf07f, 0xb321, 0x0, 0x0);
        gbc.writeMem(0xce03, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc6ba);
        EXPECT(gbc.pc(), 0xce05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce03), 0xcb);
        EXPECT(gbc.readMem(0xce04), 0xef);
        // CB EF 0107
        gbc.setState(0xe633, 0x54b4, 0xf970, 0x54cc, 0x1e19, 0x67a3, 0x1, 0x1);
        gbc.writeMem(0xe633, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x54b4);
        EXPECT(gbc.pc(), 0xe635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe633), 0xcb);
        EXPECT(gbc.readMem(0xe634), 0xef);
        // CB EF 0109
        gbc.setState(0x6ca0, 0xb809, 0x37f0, 0x8c86, 0x9763, 0x429f, 0x1, 0x0);
        gbc.writeMem(0x6ca0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb809);
        EXPECT(gbc.pc(), 0x6ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 010A
        gbc.setState(0x6d04, 0xd5, 0x8c70, 0x18cd, 0x7179, 0xa000, 0x1, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x6d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 010B
        gbc.setState(0x8fa7, 0x4639, 0xf9d0, 0xdc36, 0xfd9f, 0xdb32, 0x1, 0x1);
        gbc.writeMem(0x8fa7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0x8fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa7), 0xcb);
        EXPECT(gbc.readMem(0x8fa8), 0xef);
        // CB EF 010C
        gbc.setState(0x6151, 0x6448, 0xa6a0, 0x4775, 0x8593, 0xe212, 0x0, 0x1);
        gbc.writeMem(0x6151, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6448);
        EXPECT(gbc.pc(), 0x6153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 010D
        gbc.setState(0xea0c, 0x624b, 0x6e70, 0xc7a9, 0x64e7, 0xd2fe, 0x1, 0x0);
        gbc.writeMem(0xea0c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x624b);
        EXPECT(gbc.pc(), 0xea0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea0c), 0xcb);
        EXPECT(gbc.readMem(0xea0d), 0xef);
        // CB EF 010E
        gbc.setState(0xa2a6, 0x9356, 0x7b50, 0xc998, 0x2633, 0x8c2e, 0x0, 0x0);
        gbc.writeMem(0xa2a6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9356);
        EXPECT(gbc.pc(), 0xa2a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a6), 0xcb);
        EXPECT(gbc.readMem(0xa2a7), 0xef);
        // CB EF 010F
        gbc.setState(0xc772, 0xd5a1, 0x9cc0, 0x4b37, 0x286f, 0xa82a, 0x0, 0x0);
        gbc.writeMem(0xc772, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd5a1);
        EXPECT(gbc.pc(), 0xc774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc772), 0xcb);
        EXPECT(gbc.readMem(0xc773), 0xef);
        // CB EF 0111
        gbc.setState(0x1a02, 0x872a, 0xbe30, 0x5466, 0xbc39, 0xe123, 0x0, 0x1);
        gbc.writeMem(0x1a02, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x872a);
        EXPECT(gbc.pc(), 0x1a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0112
        gbc.setState(0x7f13, 0x41bb, 0x30d0, 0x60eb, 0x9441, 0x3f98, 0x0, 0x1);
        gbc.writeMem(0x7f13, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x41bb);
        EXPECT(gbc.pc(), 0x7f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0113
        gbc.setState(0xd509, 0x6c0, 0x57a0, 0xb767, 0x6dde, 0x5d2f, 0x1, 0x0);
        gbc.writeMem(0xd509, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6c0);
        EXPECT(gbc.pc(), 0xd50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd509), 0xcb);
        EXPECT(gbc.readMem(0xd50a), 0xef);
        // CB EF 0114
        gbc.setState(0xc9e9, 0x3692, 0x2ff0, 0x23b9, 0x6f60, 0x133a, 0x1, 0x1);
        gbc.writeMem(0xc9e9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3692);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e9), 0xcb);
        EXPECT(gbc.readMem(0xc9ea), 0xef);
        // CB EF 0115
        gbc.setState(0xaf1, 0x64bc, 0x6220, 0xf66c, 0x6193, 0x3997, 0x1, 0x1);
        gbc.writeMem(0xaf1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x64bc);
        EXPECT(gbc.pc(), 0xaf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0116
        gbc.setState(0xb1c3, 0x1ac5, 0xa430, 0xe213, 0x4c2a, 0x55a5, 0x1, 0x1);
        gbc.writeMem(0xb1c3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1ac5);
        EXPECT(gbc.pc(), 0xb1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c3), 0xcb);
        EXPECT(gbc.readMem(0xb1c4), 0xef);
        // CB EF 0117
        gbc.setState(0x8ecd, 0x508e, 0xa0d0, 0x6ed1, 0xbcc3, 0x9a27, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x508e);
        EXPECT(gbc.pc(), 0x8ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecd), 0xcb);
        EXPECT(gbc.readMem(0x8ece), 0xef);
        // CB EF 0118
        gbc.setState(0x90ce, 0x1d68, 0x77b0, 0x4d8, 0x48fc, 0xe00, 0x0, 0x1);
        gbc.writeMem(0x90ce, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1d68);
        EXPECT(gbc.pc(), 0x90d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ce), 0xcb);
        EXPECT(gbc.readMem(0x90cf), 0xef);
        // CB EF 0119
        gbc.setState(0x48b1, 0x8a00, 0x8950, 0x2927, 0x1f2a, 0x3b5a, 0x0, 0x0);
        gbc.writeMem(0x48b1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0x48b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 011A
        gbc.setState(0xa5d0, 0x901b, 0xa3b0, 0x3245, 0x45eb, 0x3c71, 0x0, 0x1);
        gbc.writeMem(0xa5d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x901b);
        EXPECT(gbc.pc(), 0xa5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d0), 0xcb);
        EXPECT(gbc.readMem(0xa5d1), 0xef);
        // CB EF 011B
        gbc.setState(0x8213, 0x1a12, 0x5be0, 0x7542, 0x696a, 0xff95, 0x1, 0x1);
        gbc.writeMem(0x8213, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1a12);
        EXPECT(gbc.pc(), 0x8215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8213), 0xcb);
        EXPECT(gbc.readMem(0x8214), 0xef);
        // CB EF 011C
        gbc.setState(0x903d, 0x99b5, 0x5ce0, 0x962e, 0xd91d, 0xfe5e, 0x1, 0x0);
        gbc.writeMem(0x903d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x99b5);
        EXPECT(gbc.pc(), 0x903f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903d), 0xcb);
        EXPECT(gbc.readMem(0x903e), 0xef);
        // CB EF 011D
        gbc.setState(0x7bca, 0x6e8b, 0x8990, 0xf5f6, 0xdf12, 0xe044, 0x1, 0x1);
        gbc.writeMem(0x7bca, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x7bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 011E
        gbc.setState(0xa51e, 0xfccb, 0xad50, 0x31a3, 0xeae5, 0x3016, 0x0, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfccb);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0xef);
        // CB EF 011F
        gbc.setState(0x1ec0, 0xc891, 0x5f90, 0x810c, 0xbb8c, 0x9572, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc891);
        EXPECT(gbc.pc(), 0x1ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0120
        gbc.setState(0xde5, 0xe089, 0xf3a0, 0x5660, 0x859a, 0x39ff, 0x1, 0x1);
        gbc.writeMem(0xde5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe089);
        EXPECT(gbc.pc(), 0xde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0121
        gbc.setState(0x8043, 0x7fa5, 0x3af0, 0x764f, 0x738c, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7fa5);
        EXPECT(gbc.pc(), 0x8045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8043), 0xcb);
        EXPECT(gbc.readMem(0x8044), 0xef);
        // CB EF 0122
        gbc.setState(0xb026, 0x931e, 0x2710, 0x6296, 0x2992, 0xdeb1, 0x1, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x931e);
        EXPECT(gbc.pc(), 0xb028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb026), 0xcb);
        EXPECT(gbc.readMem(0xb027), 0xef);
        // CB EF 0124
        gbc.setState(0x25be, 0x856, 0xe440, 0xa630, 0xf30c, 0xb7f9, 0x0, 0x1);
        gbc.writeMem(0x25be, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x856);
        EXPECT(gbc.pc(), 0x25c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0125
        gbc.setState(0x37a8, 0xa73d, 0x89b0, 0xca21, 0x62b3, 0xdfd3, 0x0, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa73d);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0126
        gbc.setState(0xa099, 0x6884, 0xf760, 0x4158, 0x5282, 0x484a, 0x0, 0x0);
        gbc.writeMem(0xa099, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6884);
        EXPECT(gbc.pc(), 0xa09b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa099), 0xcb);
        EXPECT(gbc.readMem(0xa09a), 0xef);
        // CB EF 0127
        gbc.setState(0xb799, 0x2572, 0xe500, 0xf501, 0x8dee, 0x2566, 0x1, 0x1);
        gbc.writeMem(0xb799, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2572);
        EXPECT(gbc.pc(), 0xb79b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb799), 0xcb);
        EXPECT(gbc.readMem(0xb79a), 0xef);
        // CB EF 0128
        gbc.setState(0x9f01, 0xf0c4, 0x2c0, 0x5f94, 0xfc94, 0x488, 0x1, 0x1);
        gbc.writeMem(0x9f01, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf0c4);
        EXPECT(gbc.pc(), 0x9f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f01), 0xcb);
        EXPECT(gbc.readMem(0x9f02), 0xef);
        // CB EF 0129
        gbc.setState(0x52fa, 0xe6b9, 0x1c60, 0x909, 0x8b55, 0x5b81, 0x1, 0x1);
        gbc.writeMem(0x52fa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe6b9);
        EXPECT(gbc.pc(), 0x52fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 012A
        gbc.setState(0x92c1, 0x866b, 0x8c40, 0x46be, 0xe19e, 0xa3bf, 0x1, 0x1);
        gbc.writeMem(0x92c1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x866b);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0xef);
        // CB EF 012B
        gbc.setState(0x46b2, 0x6a9e, 0x5c10, 0x2f06, 0x8e3c, 0x2f9e, 0x1, 0x0);
        gbc.writeMem(0x46b2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6a9e);
        EXPECT(gbc.pc(), 0x46b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 012C
        gbc.setState(0x82a1, 0x1493, 0xb730, 0x489c, 0x885d, 0x75e8, 0x0, 0x1);
        gbc.writeMem(0x82a1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1493);
        EXPECT(gbc.pc(), 0x82a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a1), 0xcb);
        EXPECT(gbc.readMem(0x82a2), 0xef);
        // CB EF 012D
        gbc.setState(0x12c6, 0xbc14, 0xba70, 0x8d9, 0xb020, 0xa436, 0x0, 0x1);
        gbc.writeMem(0x12c6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbc14);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 012E
        gbc.setState(0x9068, 0x17a2, 0x8150, 0xae1a, 0x5a07, 0xd2ed, 0x1, 0x1);
        gbc.writeMem(0x9068, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x17a2);
        EXPECT(gbc.pc(), 0x906a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9068), 0xcb);
        EXPECT(gbc.readMem(0x9069), 0xef);
        // CB EF 012F
        gbc.setState(0x8794, 0x7a2f, 0x50d0, 0xaed7, 0x9fcd, 0xf7ea, 0x0, 0x1);
        gbc.writeMem(0x8794, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7a2f);
        EXPECT(gbc.pc(), 0x8796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8794), 0xcb);
        EXPECT(gbc.readMem(0x8795), 0xef);
        // CB EF 0130
        gbc.setState(0xb809, 0x3e7b, 0x7200, 0x1536, 0x348a, 0x8589, 0x0, 0x0);
        gbc.writeMem(0xb809, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3e7b);
        EXPECT(gbc.pc(), 0xb80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb809), 0xcb);
        EXPECT(gbc.readMem(0xb80a), 0xef);
        // CB EF 0131
        gbc.setState(0x6c3, 0xd882, 0xef90, 0x9de1, 0xdbe9, 0x5c3d, 0x1, 0x0);
        gbc.writeMem(0x6c3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd882);
        EXPECT(gbc.pc(), 0x6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0132
        gbc.setState(0x4c0a, 0xaad6, 0x6bb0, 0x99b2, 0x107, 0x2fcd, 0x0, 0x1);
        gbc.writeMem(0x4c0a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xaad6);
        EXPECT(gbc.pc(), 0x4c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0133
        gbc.setState(0x3b42, 0xfd6b, 0xcf70, 0xf227, 0x4f59, 0x1855, 0x1, 0x1);
        gbc.writeMem(0x3b42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfd6b);
        EXPECT(gbc.pc(), 0x3b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0135
        gbc.setState(0x5018, 0xe379, 0x57b0, 0x9cca, 0x542b, 0xb2a1, 0x0, 0x1);
        gbc.writeMem(0x5018, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe379);
        EXPECT(gbc.pc(), 0x501a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0136
        gbc.setState(0x3b35, 0x32ae, 0x7df0, 0xd4f, 0xad7b, 0x51e0, 0x0, 0x0);
        gbc.writeMem(0x3b35, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x32ae);
        EXPECT(gbc.pc(), 0x3b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0137
        gbc.setState(0x5d11, 0x3c93, 0x1a10, 0xd05c, 0x847c, 0x6e22, 0x0, 0x1);
        gbc.writeMem(0x5d11, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3c93);
        EXPECT(gbc.pc(), 0x5d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0138
        gbc.setState(0x972f, 0xdcca, 0x4970, 0xa353, 0x16d6, 0x9163, 0x0, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdcca);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0xef);
        // CB EF 0139
        gbc.setState(0x351c, 0x2789, 0x27a0, 0xcfe5, 0x6547, 0x8fe5, 0x1, 0x1);
        gbc.writeMem(0x351c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0x351e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 013A
        gbc.setState(0x63c2, 0xbc99, 0x1350, 0xe63a, 0x5b8, 0x360b, 0x1, 0x1);
        gbc.writeMem(0x63c2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbc99);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 013B
        gbc.setState(0x3452, 0x4757, 0x5ff0, 0xd43d, 0x936d, 0x715e, 0x1, 0x0);
        gbc.writeMem(0x3452, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4757);
        EXPECT(gbc.pc(), 0x3454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 013C
        gbc.setState(0xcdac, 0xbbbf, 0xbd00, 0x2e59, 0x302c, 0x516f, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbbbf);
        EXPECT(gbc.pc(), 0xcdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdac), 0xcb);
        EXPECT(gbc.readMem(0xcdad), 0xef);
        // CB EF 013D
        gbc.setState(0x9898, 0xa0b5, 0x9a30, 0x8fbd, 0xe353, 0xa1bd, 0x0, 0x0);
        gbc.writeMem(0x9898, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa0b5);
        EXPECT(gbc.pc(), 0x989a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9898), 0xcb);
        EXPECT(gbc.readMem(0x9899), 0xef);
        // CB EF 013E
        gbc.setState(0xe25a, 0x268f, 0x6550, 0x51a2, 0xaac6, 0x80cd, 0x1, 0x0);
        gbc.writeMem(0xe25a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x268f);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25a), 0xcb);
        EXPECT(gbc.readMem(0xe25b), 0xef);
        // CB EF 013F
        gbc.setState(0x6c8f, 0x13d7, 0xc2a0, 0x6a2, 0x42f3, 0x4f93, 0x1, 0x0);
        gbc.writeMem(0x6c8f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x13d7);
        EXPECT(gbc.pc(), 0x6c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0140
        gbc.setState(0x1ead, 0x2abe, 0xce00, 0x2100, 0xa649, 0x3ab7, 0x1, 0x0);
        gbc.writeMem(0x1ead, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2abe);
        EXPECT(gbc.pc(), 0x1eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0141
        gbc.setState(0xe76, 0xda0c, 0xce30, 0x5800, 0xf474, 0x2534, 0x1, 0x1);
        gbc.writeMem(0xe76, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xda0c);
        EXPECT(gbc.pc(), 0xe78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0142
        gbc.setState(0x86fd, 0x2ecb, 0x1870, 0xbc79, 0xe44f, 0x235e, 0x1, 0x1);
        gbc.writeMem(0x86fd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2ecb);
        EXPECT(gbc.pc(), 0x86ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fd), 0xcb);
        EXPECT(gbc.readMem(0x86fe), 0xef);
        // CB EF 0143
        gbc.setState(0x8178, 0x2f26, 0xaee0, 0xd60a, 0x9a35, 0x5982, 0x0, 0x0);
        gbc.writeMem(0x8178, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2f26);
        EXPECT(gbc.pc(), 0x817a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8178), 0xcb);
        EXPECT(gbc.readMem(0x8179), 0xef);
        // CB EF 0145
        gbc.setState(0x8e28, 0xe5fa, 0xe5f0, 0x5f6f, 0x5b0f, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0x8e28, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe5fa);
        EXPECT(gbc.pc(), 0x8e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e28), 0xcb);
        EXPECT(gbc.readMem(0x8e29), 0xef);
        // CB EF 0146
        gbc.setState(0x89e1, 0x1ef2, 0xa890, 0x1cbe, 0xb4cd, 0x8ea0, 0x1, 0x0);
        gbc.writeMem(0x89e1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1ef2);
        EXPECT(gbc.pc(), 0x89e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e1), 0xcb);
        EXPECT(gbc.readMem(0x89e2), 0xef);
        // CB EF 0147
        gbc.setState(0x8a3b, 0x34be, 0x2070, 0xfe7d, 0x3767, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x8a3b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x34be);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3b), 0xcb);
        EXPECT(gbc.readMem(0x8a3c), 0xef);
        // CB EF 0149
        gbc.setState(0xe173, 0xbeab, 0x78e0, 0xd400, 0xf91c, 0x7e9f, 0x0, 0x0);
        gbc.writeMem(0xe173, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbeab);
        EXPECT(gbc.pc(), 0xe175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe173), 0xcb);
        EXPECT(gbc.readMem(0xe174), 0xef);
        // CB EF 014A
        gbc.setState(0x46b0, 0x715b, 0x3d80, 0xa283, 0x21a6, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0x46b0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x715b);
        EXPECT(gbc.pc(), 0x46b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 014B
        gbc.setState(0xba8c, 0x8ff6, 0x490, 0xc3eb, 0xe368, 0x69b0, 0x1, 0x1);
        gbc.writeMem(0xba8c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0xba8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8c), 0xcb);
        EXPECT(gbc.readMem(0xba8d), 0xef);
        // CB EF 014C
        gbc.setState(0x41ac, 0x4ac4, 0x15d0, 0x87db, 0xbea8, 0x7867, 0x1, 0x1);
        gbc.writeMem(0x41ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4ac4);
        EXPECT(gbc.pc(), 0x41ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 014D
        gbc.setState(0x6f5, 0x1cfc, 0x68d0, 0x9b83, 0x648a, 0x9796, 0x1, 0x0);
        gbc.writeMem(0x6f5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1cfc);
        EXPECT(gbc.pc(), 0x6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 014E
        gbc.setState(0x6a53, 0x3099, 0x50f0, 0xa7dc, 0x8404, 0x1d07, 0x0, 0x0);
        gbc.writeMem(0x6a53, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3099);
        EXPECT(gbc.pc(), 0x6a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 014F
        gbc.setState(0x1b43, 0xb00f, 0x9460, 0x4f90, 0xec30, 0x2ffe, 0x0, 0x1);
        gbc.writeMem(0x1b43, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb00f);
        EXPECT(gbc.pc(), 0x1b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0150
        gbc.setState(0xf55, 0x4aed, 0x4410, 0x2471, 0x3ea5, 0x68db, 0x0, 0x0);
        gbc.writeMem(0xf55, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4aed);
        EXPECT(gbc.pc(), 0xf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0151
        gbc.setState(0x6f85, 0x75d6, 0x96d0, 0x9d86, 0xe477, 0x38d6, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x75d6);
        EXPECT(gbc.pc(), 0x6f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0153
        gbc.setState(0x7d9b, 0x1ef7, 0xf170, 0x628c, 0x90b1, 0x2b41, 0x0, 0x0);
        gbc.writeMem(0x7d9b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1ef7);
        EXPECT(gbc.pc(), 0x7d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0154
        gbc.setState(0x7814, 0x3d6f, 0xc7d0, 0x6e23, 0xb60f, 0xb077, 0x1, 0x0);
        gbc.writeMem(0x7814, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3d6f);
        EXPECT(gbc.pc(), 0x7816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0155
        gbc.setState(0x1d50, 0xe109, 0x76e0, 0x9334, 0x12e0, 0x1b9c, 0x1, 0x0);
        gbc.writeMem(0x1d50, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x1d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0156
        gbc.setState(0x8a95, 0x7a69, 0x7a70, 0x2c90, 0xd930, 0xb592, 0x0, 0x1);
        gbc.writeMem(0x8a95, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0x8a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a95), 0xcb);
        EXPECT(gbc.readMem(0x8a96), 0xef);
        // CB EF 0157
        gbc.setState(0x718e, 0xac7b, 0x18f0, 0x2887, 0xe570, 0x7299, 0x1, 0x1);
        gbc.writeMem(0x718e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xac7b);
        EXPECT(gbc.pc(), 0x7190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0158
        gbc.setState(0xeeb0, 0xaf6, 0xd330, 0xafdc, 0x3d5f, 0x5e0c, 0x1, 0x1);
        gbc.writeMem(0xeeb0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaf6);
        EXPECT(gbc.pc(), 0xeeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb0), 0xcb);
        EXPECT(gbc.readMem(0xeeb1), 0xef);
        // CB EF 0159
        gbc.setState(0x5b66, 0x842b, 0xa070, 0xdcb2, 0xc94e, 0x550d, 0x0, 0x1);
        gbc.writeMem(0x5b66, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x5b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 015A
        gbc.setState(0x8aea, 0x4528, 0x2e70, 0xfdff, 0x199d, 0xc391, 0x1, 0x0);
        gbc.writeMem(0x8aea, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4528);
        EXPECT(gbc.pc(), 0x8aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aea), 0xcb);
        EXPECT(gbc.readMem(0x8aeb), 0xef);
        // CB EF 015B
        gbc.setState(0xdd35, 0xb8b, 0x5250, 0xc912, 0x8916, 0x7a5d, 0x0, 0x1);
        gbc.writeMem(0xdd35, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb8b);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd35), 0xcb);
        EXPECT(gbc.readMem(0xdd36), 0xef);
        // CB EF 015C
        gbc.setState(0xed16, 0x95a5, 0x9f70, 0xa395, 0x3a5c, 0x4006, 0x0, 0x0);
        gbc.writeMem(0xed16, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x95a5);
        EXPECT(gbc.pc(), 0xed18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed16), 0xcb);
        EXPECT(gbc.readMem(0xed17), 0xef);
        // CB EF 015D
        gbc.setState(0x3901, 0x407e, 0xc2b0, 0xdc6a, 0x9f80, 0xbbae, 0x0, 0x1);
        gbc.writeMem(0x3901, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x407e);
        EXPECT(gbc.pc(), 0x3903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 015E
        gbc.setState(0xd794, 0x573b, 0xd9d0, 0x993e, 0x85f5, 0x9b8, 0x1, 0x1);
        gbc.writeMem(0xd794, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x573b);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd794), 0xcb);
        EXPECT(gbc.readMem(0xd795), 0xef);
        // CB EF 015F
        gbc.setState(0x1341, 0x2b07, 0xcdc0, 0x61b9, 0xf935, 0xb68, 0x0, 0x0);
        gbc.writeMem(0x1341, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2b07);
        EXPECT(gbc.pc(), 0x1343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0160
        gbc.setState(0x924a, 0x2f5f, 0x7f60, 0xde13, 0xaf7a, 0xa906, 0x0, 0x0);
        gbc.writeMem(0x924a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2f5f);
        EXPECT(gbc.pc(), 0x924c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924a), 0xcb);
        EXPECT(gbc.readMem(0x924b), 0xef);
        // CB EF 0161
        gbc.setState(0xa6aa, 0x4cc9, 0x2a90, 0x48d6, 0x1345, 0x11e1, 0x0, 0x0);
        gbc.writeMem(0xa6aa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4cc9);
        EXPECT(gbc.pc(), 0xa6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6aa), 0xcb);
        EXPECT(gbc.readMem(0xa6ab), 0xef);
        // CB EF 0162
        gbc.setState(0xc798, 0x1605, 0x740, 0xea49, 0xaae3, 0xeb92, 0x1, 0x0);
        gbc.writeMem(0xc798, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1605);
        EXPECT(gbc.pc(), 0xc79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc798), 0xcb);
        EXPECT(gbc.readMem(0xc799), 0xef);
        // CB EF 0163
        gbc.setState(0x7d9c, 0x6cca, 0x61c0, 0x19a, 0xb141, 0x6ec6, 0x1, 0x1);
        gbc.writeMem(0x7d9c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6cca);
        EXPECT(gbc.pc(), 0x7d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0165
        gbc.setState(0x2de7, 0x2b44, 0xb870, 0xc62, 0xee5d, 0xee9c, 0x0, 0x0);
        gbc.writeMem(0x2de7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2b44);
        EXPECT(gbc.pc(), 0x2de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0166
        gbc.setState(0xdfb4, 0x13c6, 0xddc0, 0x73bb, 0x1e5e, 0x4ab5, 0x1, 0x0);
        gbc.writeMem(0xdfb4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x13c6);
        EXPECT(gbc.pc(), 0xdfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb4), 0xcb);
        EXPECT(gbc.readMem(0xdfb5), 0xef);
        // CB EF 0167
        gbc.setState(0x4f1a, 0x5ef4, 0x5a80, 0x1f79, 0xfa2b, 0xf1d3, 0x1, 0x0);
        gbc.writeMem(0x4f1a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5ef4);
        EXPECT(gbc.pc(), 0x4f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0168
        gbc.setState(0x808f, 0x1e66, 0x240, 0xda19, 0x4a7c, 0xaabd, 0x1, 0x1);
        gbc.writeMem(0x808f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1e66);
        EXPECT(gbc.pc(), 0x8091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x808f), 0xcb);
        EXPECT(gbc.readMem(0x8090), 0xef);
        // CB EF 0169
        gbc.setState(0xad73, 0x7e6, 0x5920, 0x2bc0, 0xd8d3, 0xd605, 0x1, 0x1);
        gbc.writeMem(0xad73, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7e6);
        EXPECT(gbc.pc(), 0xad75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad73), 0xcb);
        EXPECT(gbc.readMem(0xad74), 0xef);
        // CB EF 016B
        gbc.setState(0x26ed, 0xf0f6, 0x10a0, 0xb412, 0xb91b, 0x5546, 0x0, 0x0);
        gbc.writeMem(0x26ed, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf0f6);
        EXPECT(gbc.pc(), 0x26ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 016C
        gbc.setState(0xa3e0, 0x5eea, 0x1e90, 0xe56f, 0x4e66, 0x9113, 0x0, 0x1);
        gbc.writeMem(0xa3e0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5eea);
        EXPECT(gbc.pc(), 0xa3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e0), 0xcb);
        EXPECT(gbc.readMem(0xa3e1), 0xef);
        // CB EF 016D
        gbc.setState(0x67f4, 0xc986, 0x7ab0, 0x4d4a, 0x2150, 0x6795, 0x0, 0x0);
        gbc.writeMem(0x67f4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc986);
        EXPECT(gbc.pc(), 0x67f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 016E
        gbc.setState(0x7289, 0xe06e, 0x95c0, 0xfe66, 0xae0f, 0x8ef6, 0x1, 0x0);
        gbc.writeMem(0x7289, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe06e);
        EXPECT(gbc.pc(), 0x728b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 016F
        gbc.setState(0x4d04, 0xc639, 0x620, 0x4339, 0x6094, 0xc548, 0x0, 0x1);
        gbc.writeMem(0x4d04, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc639);
        EXPECT(gbc.pc(), 0x4d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0170
        gbc.setState(0xd463, 0x8244, 0xbcc0, 0x94eb, 0xf54, 0x664f, 0x0, 0x1);
        gbc.writeMem(0xd463, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8244);
        EXPECT(gbc.pc(), 0xd465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd463), 0xcb);
        EXPECT(gbc.readMem(0xd464), 0xef);
        // CB EF 0171
        gbc.setState(0xcf85, 0x3b81, 0x6640, 0x678c, 0x77ee, 0xdec5, 0x0, 0x0);
        gbc.writeMem(0xcf85, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b81);
        EXPECT(gbc.pc(), 0xcf87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf85), 0xcb);
        EXPECT(gbc.readMem(0xcf86), 0xef);
        // CB EF 0172
        gbc.setState(0xa95a, 0xb9c, 0x7fc0, 0x8a8a, 0xe456, 0x2e8a, 0x0, 0x1);
        gbc.writeMem(0xa95a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb9c);
        EXPECT(gbc.pc(), 0xa95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95a), 0xcb);
        EXPECT(gbc.readMem(0xa95b), 0xef);
        // CB EF 0173
        gbc.setState(0xd594, 0x2fcb, 0x4d40, 0x2ab3, 0x31e3, 0x4269, 0x0, 0x0);
        gbc.writeMem(0xd594, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2fcb);
        EXPECT(gbc.pc(), 0xd596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd594), 0xcb);
        EXPECT(gbc.readMem(0xd595), 0xef);
        // CB EF 0174
        gbc.setState(0x5a64, 0xcffc, 0x8b0, 0x1d58, 0x1c7, 0xbbb5, 0x0, 0x1);
        gbc.writeMem(0x5a64, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcffc);
        EXPECT(gbc.pc(), 0x5a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0175
        gbc.setState(0x4017, 0x9103, 0x51e0, 0x7f11, 0x83f3, 0x5ec7, 0x1, 0x1);
        gbc.writeMem(0x4017, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9103);
        EXPECT(gbc.pc(), 0x4019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0177
        gbc.setState(0x36ec, 0x459e, 0xfe50, 0xbb52, 0x2577, 0xc239, 0x1, 0x1);
        gbc.writeMem(0x36ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x459e);
        EXPECT(gbc.pc(), 0x36ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0178
        gbc.setState(0xa7ae, 0x3fd5, 0xb1b0, 0x145, 0x8f7a, 0x3444, 0x1, 0x1);
        gbc.writeMem(0xa7ae, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3fd5);
        EXPECT(gbc.pc(), 0xa7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ae), 0xcb);
        EXPECT(gbc.readMem(0xa7af), 0xef);
        // CB EF 0179
        gbc.setState(0xc845, 0xc19d, 0xaa10, 0xfda1, 0x868c, 0x716f, 0x0, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc19d);
        EXPECT(gbc.pc(), 0xc847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc845), 0xcb);
        EXPECT(gbc.readMem(0xc846), 0xef);
        // CB EF 017A
        gbc.setState(0x232c, 0x9c23, 0x6440, 0x9f62, 0xfcb3, 0x6e40, 0x0, 0x0);
        gbc.writeMem(0x232c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9c23);
        EXPECT(gbc.pc(), 0x232e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 017B
        gbc.setState(0x1902, 0xa754, 0x7f0, 0x9f40, 0x7326, 0x2c56, 0x0, 0x0);
        gbc.writeMem(0x1902, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa754);
        EXPECT(gbc.pc(), 0x1904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 017C
        gbc.setState(0x2e6e, 0xc13b, 0x8db0, 0x3eac, 0xe703, 0x7994, 0x0, 0x0);
        gbc.writeMem(0x2e6e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc13b);
        EXPECT(gbc.pc(), 0x2e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 017D
        gbc.setState(0x787f, 0x91da, 0x6ee0, 0xb78c, 0x64bb, 0x6c43, 0x0, 0x1);
        gbc.writeMem(0x787f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x91da);
        EXPECT(gbc.pc(), 0x7881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 017E
        gbc.setState(0xd3c0, 0xd171, 0xa240, 0x169f, 0xc8c9, 0x5fb3, 0x1, 0x1);
        gbc.writeMem(0xd3c0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd171);
        EXPECT(gbc.pc(), 0xd3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c0), 0xcb);
        EXPECT(gbc.readMem(0xd3c1), 0xef);
        // CB EF 017F
        gbc.setState(0xe74, 0xabb2, 0x1030, 0xa0bb, 0x264f, 0xc76a, 0x1, 0x1);
        gbc.writeMem(0xe74, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xabb2);
        EXPECT(gbc.pc(), 0xe76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0180
        gbc.setState(0x28ab, 0x88a4, 0x2800, 0x7ffb, 0x384d, 0x204e, 0x0, 0x0);
        gbc.writeMem(0x28ab, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x88a4);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0181
        gbc.setState(0x2b6a, 0xf540, 0x1940, 0x9526, 0xe14, 0x2f99, 0x0, 0x0);
        gbc.writeMem(0x2b6a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0x2b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0182
        gbc.setState(0xef4e, 0x3071, 0x6ff0, 0x578, 0x2a0f, 0x4bc1, 0x0, 0x1);
        gbc.writeMem(0xef4e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3071);
        EXPECT(gbc.pc(), 0xef50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4e), 0xcb);
        EXPECT(gbc.readMem(0xef4f), 0xef);
        // CB EF 0183
        gbc.setState(0x7762, 0xc97b, 0x7c70, 0x6eb8, 0x709, 0xf9b7, 0x1, 0x0);
        gbc.writeMem(0x7762, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc97b);
        EXPECT(gbc.pc(), 0x7764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0185
        gbc.setState(0xc95, 0x4ba0, 0x8d20, 0xa08b, 0x1f86, 0x3568, 0x0, 0x0);
        gbc.writeMem(0xc95, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4ba0);
        EXPECT(gbc.pc(), 0xc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0186
        gbc.setState(0xc621, 0x19d2, 0xc350, 0xac11, 0x5a8, 0xff04, 0x1, 0x0);
        gbc.writeMem(0xc621, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x19d2);
        EXPECT(gbc.pc(), 0xc623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc621), 0xcb);
        EXPECT(gbc.readMem(0xc622), 0xef);
        // CB EF 0187
        gbc.setState(0x9d60, 0xe41e, 0x6760, 0xcf1f, 0x2437, 0xee20, 0x0, 0x0);
        gbc.writeMem(0x9d60, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe41e);
        EXPECT(gbc.pc(), 0x9d62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d60), 0xcb);
        EXPECT(gbc.readMem(0x9d61), 0xef);
        // CB EF 0188
        gbc.setState(0xd3b8, 0x1987, 0xdd0, 0xcb31, 0x10a, 0xb8c5, 0x0, 0x1);
        gbc.writeMem(0xd3b8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1987);
        EXPECT(gbc.pc(), 0xd3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b8), 0xcb);
        EXPECT(gbc.readMem(0xd3b9), 0xef);
        // CB EF 0189
        gbc.setState(0xdae9, 0x8daa, 0x4cc0, 0xc0aa, 0xaf33, 0x22f3, 0x0, 0x0);
        gbc.writeMem(0xdae9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0xdaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae9), 0xcb);
        EXPECT(gbc.readMem(0xdaea), 0xef);
        // CB EF 018B
        gbc.setState(0xc333, 0x3c11, 0x4740, 0xa975, 0xf7d2, 0xd660, 0x0, 0x0);
        gbc.writeMem(0xc333, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3c11);
        EXPECT(gbc.pc(), 0xc335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc333), 0xcb);
        EXPECT(gbc.readMem(0xc334), 0xef);
        // CB EF 018C
        gbc.setState(0x7e10, 0x89fc, 0x34c0, 0xeed, 0xd036, 0x90d5, 0x1, 0x1);
        gbc.writeMem(0x7e10, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x89fc);
        EXPECT(gbc.pc(), 0x7e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 018D
        gbc.setState(0x63d3, 0x440f, 0xb440, 0xf44d, 0x681a, 0xaa2b, 0x1, 0x0);
        gbc.writeMem(0x63d3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0x63d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 018E
        gbc.setState(0x87c9, 0x3832, 0xd860, 0x4299, 0x5759, 0xe6f1, 0x0, 0x1);
        gbc.writeMem(0x87c9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3832);
        EXPECT(gbc.pc(), 0x87cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c9), 0xcb);
        EXPECT(gbc.readMem(0x87ca), 0xef);
        // CB EF 018F
        gbc.setState(0x6699, 0xceab, 0x6110, 0x12d1, 0xc81c, 0x9eb6, 0x0, 0x0);
        gbc.writeMem(0x6699, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xceab);
        EXPECT(gbc.pc(), 0x669b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0190
        gbc.setState(0x976e, 0x5f7a, 0x44c0, 0x7c4e, 0xaba0, 0xaa2, 0x0, 0x1);
        gbc.writeMem(0x976e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5f7a);
        EXPECT(gbc.pc(), 0x9770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976e), 0xcb);
        EXPECT(gbc.readMem(0x976f), 0xef);
        // CB EF 0192
        gbc.setState(0xd00f, 0xb541, 0x990, 0x5197, 0x94e1, 0xb5c1, 0x0, 0x0);
        gbc.writeMem(0xd00f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb541);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00f), 0xcb);
        EXPECT(gbc.readMem(0xd010), 0xef);
        // CB EF 0193
        gbc.setState(0x8c80, 0xb456, 0x24f0, 0x10be, 0x2454, 0x3219, 0x1, 0x1);
        gbc.writeMem(0x8c80, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb456);
        EXPECT(gbc.pc(), 0x8c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c80), 0xcb);
        EXPECT(gbc.readMem(0x8c81), 0xef);
        // CB EF 0194
        gbc.setState(0x9f7, 0x9405, 0x30, 0x3417, 0xdc78, 0xf0d9, 0x1, 0x1);
        gbc.writeMem(0x9f7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9405);
        EXPECT(gbc.pc(), 0x9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0195
        gbc.setState(0x1316, 0x1767, 0xbdf0, 0xc3ae, 0xed8a, 0xcc13, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1767);
        EXPECT(gbc.pc(), 0x1318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0196
        gbc.setState(0x2437, 0xd93c, 0x9b80, 0x8833, 0x70dc, 0xe984, 0x1, 0x1);
        gbc.writeMem(0x2437, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd93c);
        EXPECT(gbc.pc(), 0x2439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0197
        gbc.setState(0x2c04, 0x75f8, 0x9a60, 0xa7d9, 0x14c3, 0x463d, 0x1, 0x1);
        gbc.writeMem(0x2c04, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x75f8);
        EXPECT(gbc.pc(), 0x2c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0198
        gbc.setState(0x666e, 0x4277, 0xe870, 0xd85b, 0xb9d3, 0x9471, 0x0, 0x1);
        gbc.writeMem(0x666e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4277);
        EXPECT(gbc.pc(), 0x6670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0199
        gbc.setState(0x548d, 0xcf79, 0x9450, 0x5260, 0xedcc, 0x791f, 0x0, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf79);
        EXPECT(gbc.pc(), 0x548f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 019A
        gbc.setState(0xd033, 0x82ae, 0xa350, 0x609, 0x38dc, 0xa42b, 0x1, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x82ae);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd033), 0xcb);
        EXPECT(gbc.readMem(0xd034), 0xef);
        // CB EF 019B
        gbc.setState(0x1fbb, 0x2cbe, 0xdbb0, 0xa7f1, 0x7984, 0xbd4e, 0x0, 0x0);
        gbc.writeMem(0x1fbb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x1fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 019C
        gbc.setState(0xe7ce, 0xce7b, 0x4a00, 0x6ca5, 0x236f, 0xe393, 0x1, 0x1);
        gbc.writeMem(0xe7ce, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xce7b);
        EXPECT(gbc.pc(), 0xe7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ce), 0xcb);
        EXPECT(gbc.readMem(0xe7cf), 0xef);
        // CB EF 019D
        gbc.setState(0xd533, 0x888e, 0xcc60, 0xc1e8, 0x46f0, 0xaaca, 0x0, 0x0);
        gbc.writeMem(0xd533, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x888e);
        EXPECT(gbc.pc(), 0xd535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd533), 0xcb);
        EXPECT(gbc.readMem(0xd534), 0xef);
        // CB EF 019E
        gbc.setState(0xd446, 0x26b3, 0x6bc0, 0xb191, 0xcb5, 0x203, 0x0, 0x0);
        gbc.writeMem(0xd446, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26b3);
        EXPECT(gbc.pc(), 0xd448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd446), 0xcb);
        EXPECT(gbc.readMem(0xd447), 0xef);
        // CB EF 019F
        gbc.setState(0x7a38, 0x1776, 0xeaa0, 0x62a2, 0x5703, 0x422d, 0x1, 0x0);
        gbc.writeMem(0x7a38, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1776);
        EXPECT(gbc.pc(), 0x7a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01A0
        gbc.setState(0x8c08, 0xafbd, 0xf5e0, 0x8929, 0x25ed, 0x9aa, 0x0, 0x1);
        gbc.writeMem(0x8c08, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xafbd);
        EXPECT(gbc.pc(), 0x8c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c08), 0xcb);
        EXPECT(gbc.readMem(0x8c09), 0xef);
        // CB EF 01A1
        gbc.setState(0x8503, 0x71f, 0xd560, 0xe714, 0x682c, 0x6a2f, 0x0, 0x1);
        gbc.writeMem(0x8503, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x71f);
        EXPECT(gbc.pc(), 0x8505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8503), 0xcb);
        EXPECT(gbc.readMem(0x8504), 0xef);
        // CB EF 01A3
        gbc.setState(0xea9a, 0x1cd7, 0xafc0, 0xdde6, 0x905b, 0xf82c, 0x0, 0x0);
        gbc.writeMem(0xea9a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1cd7);
        EXPECT(gbc.pc(), 0xea9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9a), 0xcb);
        EXPECT(gbc.readMem(0xea9b), 0xef);
        // CB EF 01A4
        gbc.setState(0x24eb, 0x9349, 0xcc90, 0x3416, 0xe585, 0xe0ea, 0x1, 0x1);
        gbc.writeMem(0x24eb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9349);
        EXPECT(gbc.pc(), 0x24ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01A5
        gbc.setState(0xb628, 0x1b23, 0x45b0, 0xaaad, 0x8419, 0xbc43, 0x0, 0x0);
        gbc.writeMem(0xb628, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b23);
        EXPECT(gbc.pc(), 0xb62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb628), 0xcb);
        EXPECT(gbc.readMem(0xb629), 0xef);
        // CB EF 01A7
        gbc.setState(0x42c9, 0xd83, 0xf070, 0x590c, 0x357e, 0xc052, 0x0, 0x0);
        gbc.writeMem(0x42c9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd83);
        EXPECT(gbc.pc(), 0x42cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01A8
        gbc.setState(0x350d, 0xf33a, 0x900, 0x2c41, 0x3eb8, 0x935e, 0x1, 0x0);
        gbc.writeMem(0x350d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0x350f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01A9
        gbc.setState(0x4a50, 0xf1bc, 0xfaf0, 0xa8ee, 0x2843, 0x7d3b, 0x1, 0x0);
        gbc.writeMem(0x4a50, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf1bc);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01AA
        gbc.setState(0x746e, 0x6f1b, 0x8b20, 0x7de, 0xc92f, 0xe292, 0x0, 0x0);
        gbc.writeMem(0x746e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6f1b);
        EXPECT(gbc.pc(), 0x7470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01AB
        gbc.setState(0xdbb8, 0x8095, 0xe750, 0xaa62, 0x9890, 0x65a9, 0x0, 0x0);
        gbc.writeMem(0xdbb8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8095);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb8), 0xcb);
        EXPECT(gbc.readMem(0xdbb9), 0xef);
        // CB EF 01AC
        gbc.setState(0x7302, 0x19de, 0x9390, 0xe0ef, 0xf48d, 0x5c9d, 0x1, 0x0);
        gbc.writeMem(0x7302, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x19de);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01AD
        gbc.setState(0xdb35, 0xe9b0, 0x9720, 0x6e7c, 0x1469, 0x1619, 0x1, 0x0);
        gbc.writeMem(0xdb35, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0xdb37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb35), 0xcb);
        EXPECT(gbc.readMem(0xdb36), 0xef);
        // CB EF 01AE
        gbc.setState(0x7a72, 0xa5dd, 0xa990, 0x2e13, 0x936f, 0xa79d, 0x0, 0x0);
        gbc.writeMem(0x7a72, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa5dd);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01AF
        gbc.setState(0xeb41, 0x5806, 0x5eb0, 0x15d7, 0x79e1, 0x3b7b, 0x1, 0x1);
        gbc.writeMem(0xeb41, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5806);
        EXPECT(gbc.pc(), 0xeb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb41), 0xcb);
        EXPECT(gbc.readMem(0xeb42), 0xef);
        // CB EF 01B1
        gbc.setState(0x4af6, 0x1d58, 0x8df0, 0x9377, 0x94a2, 0x48a3, 0x0, 0x1);
        gbc.writeMem(0x4af6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1d58);
        EXPECT(gbc.pc(), 0x4af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01B2
        gbc.setState(0x2e0e, 0x12d1, 0xb870, 0x15fd, 0x5698, 0xcb1f, 0x0, 0x1);
        gbc.writeMem(0x2e0e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x12d1);
        EXPECT(gbc.pc(), 0x2e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01B3
        gbc.setState(0x68cc, 0xa8a5, 0x3d90, 0xfaad, 0xfe35, 0xc371, 0x0, 0x0);
        gbc.writeMem(0x68cc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa8a5);
        EXPECT(gbc.pc(), 0x68ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01B4
        gbc.setState(0xd9c9, 0x8934, 0xade0, 0x3ab9, 0x1cd3, 0x70c2, 0x1, 0x0);
        gbc.writeMem(0xd9c9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8934);
        EXPECT(gbc.pc(), 0xd9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c9), 0xcb);
        EXPECT(gbc.readMem(0xd9ca), 0xef);
        // CB EF 01B5
        gbc.setState(0x91a, 0x7d64, 0x3690, 0x79e7, 0x14a4, 0xb885, 0x0, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0x91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01B6
        gbc.setState(0x94eb, 0x6e29, 0x80a0, 0x654b, 0x25e1, 0x2dd8, 0x1, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6e29);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0xef);
        // CB EF 01B7
        gbc.setState(0x4f8b, 0x43db, 0x7dc0, 0x58a0, 0x8b81, 0xdbbf, 0x0, 0x0);
        gbc.writeMem(0x4f8b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x43db);
        EXPECT(gbc.pc(), 0x4f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01B8
        gbc.setState(0x2bde, 0x8a86, 0x7e80, 0x4b04, 0x4488, 0xd46a, 0x1, 0x1);
        gbc.writeMem(0x2bde, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8a86);
        EXPECT(gbc.pc(), 0x2be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01B9
        gbc.setState(0xb94e, 0x2ce3, 0xf780, 0xa157, 0xe256, 0x8883, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2ce3);
        EXPECT(gbc.pc(), 0xb950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb94e), 0xcb);
        EXPECT(gbc.readMem(0xb94f), 0xef);
        // CB EF 01BA
        gbc.setState(0x1c26, 0x16d0, 0xa210, 0xfb4a, 0x21d7, 0x4e33, 0x1, 0x0);
        gbc.writeMem(0x1c26, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x16d0);
        EXPECT(gbc.pc(), 0x1c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01BB
        gbc.setState(0x822b, 0x3c39, 0x7fe0, 0xc55c, 0x34bb, 0xf4ee, 0x1, 0x1);
        gbc.writeMem(0x822b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3c39);
        EXPECT(gbc.pc(), 0x822d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822b), 0xcb);
        EXPECT(gbc.readMem(0x822c), 0xef);
        // CB EF 01BC
        gbc.setState(0xac63, 0x8694, 0x2210, 0xc19, 0xa6d7, 0x8231, 0x0, 0x0);
        gbc.writeMem(0xac63, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0xac65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac63), 0xcb);
        EXPECT(gbc.readMem(0xac64), 0xef);
        // CB EF 01BD
        gbc.setState(0xd144, 0x4582, 0x22a0, 0x38c0, 0x9246, 0x9334, 0x1, 0x0);
        gbc.writeMem(0xd144, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4582);
        EXPECT(gbc.pc(), 0xd146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd144), 0xcb);
        EXPECT(gbc.readMem(0xd145), 0xef);
        // CB EF 01BF
        gbc.setState(0xd400, 0x7635, 0xaa70, 0xf7a, 0x7787, 0x2f07, 0x1, 0x0);
        gbc.writeMem(0xd400, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7635);
        EXPECT(gbc.pc(), 0xd402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd400), 0xcb);
        EXPECT(gbc.readMem(0xd401), 0xef);
        // CB EF 01C0
        gbc.setState(0x7315, 0xdc49, 0xed50, 0xbf30, 0x86c9, 0x106a, 0x1, 0x1);
        gbc.writeMem(0x7315, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdc49);
        EXPECT(gbc.pc(), 0x7317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01C1
        gbc.setState(0x17e4, 0xeb68, 0x5870, 0x6912, 0x6929, 0x241f, 0x0, 0x1);
        gbc.writeMem(0x17e4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xeb68);
        EXPECT(gbc.pc(), 0x17e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01C2
        gbc.setState(0x9f16, 0xa1d6, 0x13a0, 0xc958, 0x7224, 0xc388, 0x0, 0x1);
        gbc.writeMem(0x9f16, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa1d6);
        EXPECT(gbc.pc(), 0x9f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f16), 0xcb);
        EXPECT(gbc.readMem(0x9f17), 0xef);
        // CB EF 01C3
        gbc.setState(0x9e75, 0xf3a6, 0xae90, 0xd779, 0xf896, 0x1dbb, 0x0, 0x1);
        gbc.writeMem(0x9e75, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf3a6);
        EXPECT(gbc.pc(), 0x9e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e75), 0xcb);
        EXPECT(gbc.readMem(0x9e76), 0xef);
        // CB EF 01C4
        gbc.setState(0x7651, 0xff8d, 0xaec0, 0x6b36, 0x7d37, 0x9322, 0x1, 0x0);
        gbc.writeMem(0x7651, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xff8d);
        EXPECT(gbc.pc(), 0x7653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01C5
        gbc.setState(0x731a, 0x8570, 0x5430, 0x55b4, 0x53fe, 0xf324, 0x1, 0x1);
        gbc.writeMem(0x731a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8570);
        EXPECT(gbc.pc(), 0x731c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01C6
        gbc.setState(0x8107, 0x5396, 0xb390, 0x8a55, 0x3229, 0x233c, 0x0, 0x1);
        gbc.writeMem(0x8107, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5396);
        EXPECT(gbc.pc(), 0x8109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8107), 0xcb);
        EXPECT(gbc.readMem(0x8108), 0xef);
        // CB EF 01C7
        gbc.setState(0x811e, 0xe200, 0xc640, 0xc135, 0xb055, 0xcd24, 0x1, 0x1);
        gbc.writeMem(0x811e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe200);
        EXPECT(gbc.pc(), 0x8120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811e), 0xcb);
        EXPECT(gbc.readMem(0x811f), 0xef);
        // CB EF 01C8
        gbc.setState(0xaa5c, 0xf7e4, 0xf910, 0x63c1, 0x4bda, 0x567a, 0x1, 0x0);
        gbc.writeMem(0xaa5c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0xaa5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5c), 0xcb);
        EXPECT(gbc.readMem(0xaa5d), 0xef);
        // CB EF 01C9
        gbc.setState(0x5983, 0x5b9, 0x3670, 0xc827, 0xc5d1, 0xe0ae, 0x1, 0x0);
        gbc.writeMem(0x5983, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5b9);
        EXPECT(gbc.pc(), 0x5985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01CA
        gbc.setState(0x5fe3, 0x1eb1, 0x6f10, 0x504b, 0xaa33, 0xfec0, 0x1, 0x0);
        gbc.writeMem(0x5fe3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1eb1);
        EXPECT(gbc.pc(), 0x5fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01CB
        gbc.setState(0xc7d6, 0x7dc2, 0xa4b0, 0xa26b, 0x4a38, 0x9e41, 0x0, 0x0);
        gbc.writeMem(0xc7d6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0xc7d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d6), 0xcb);
        EXPECT(gbc.readMem(0xc7d7), 0xef);
        // CB EF 01CC
        gbc.setState(0x65ab, 0xe4f7, 0xa620, 0x9932, 0xb712, 0xcd3b, 0x1, 0x1);
        gbc.writeMem(0x65ab, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe4f7);
        EXPECT(gbc.pc(), 0x65ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01CD
        gbc.setState(0xb403, 0x3a73, 0xd7f0, 0x3ce4, 0x70c3, 0xfb73, 0x1, 0x0);
        gbc.writeMem(0xb403, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3a73);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb403), 0xcb);
        EXPECT(gbc.readMem(0xb404), 0xef);
        // CB EF 01CE
        gbc.setState(0xda88, 0xa066, 0x5070, 0xc123, 0xfee3, 0x8fa7, 0x0, 0x1);
        gbc.writeMem(0xda88, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa066);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda88), 0xcb);
        EXPECT(gbc.readMem(0xda89), 0xef);
        // CB EF 01CF
        gbc.setState(0x5e92, 0xd896, 0x1000, 0x7e85, 0xba84, 0xbe52, 0x1, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd896);
        EXPECT(gbc.pc(), 0x5e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01D0
        gbc.setState(0x6d65, 0xde20, 0xdbe0, 0xfd83, 0x1663, 0x8396, 0x1, 0x1);
        gbc.writeMem(0x6d65, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xde20);
        EXPECT(gbc.pc(), 0x6d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01D1
        gbc.setState(0x7ee5, 0x7a03, 0x7390, 0xcdfd, 0xcb78, 0xf625, 0x1, 0x1);
        gbc.writeMem(0x7ee5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7a03);
        EXPECT(gbc.pc(), 0x7ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01D2
        gbc.setState(0x25f9, 0x9f0, 0x9120, 0xc46a, 0x29e4, 0x8622, 0x1, 0x1);
        gbc.writeMem(0x25f9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9f0);
        EXPECT(gbc.pc(), 0x25fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01D3
        gbc.setState(0xc970, 0xa9b0, 0xc800, 0x5b6f, 0x6939, 0x2d33, 0x0, 0x1);
        gbc.writeMem(0xc970, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa9b0);
        EXPECT(gbc.pc(), 0xc972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc970), 0xcb);
        EXPECT(gbc.readMem(0xc971), 0xef);
        // CB EF 01D4
        gbc.setState(0x85bc, 0xd83a, 0x28b0, 0x8c26, 0x37e8, 0x9870, 0x1, 0x1);
        gbc.writeMem(0x85bc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd83a);
        EXPECT(gbc.pc(), 0x85be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85bc), 0xcb);
        EXPECT(gbc.readMem(0x85bd), 0xef);
        // CB EF 01D5
        gbc.setState(0x4a25, 0x9547, 0x2bb0, 0x6502, 0x646e, 0x1a10, 0x0, 0x1);
        gbc.writeMem(0x4a25, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9547);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01D6
        gbc.setState(0x83e2, 0xde8b, 0x8260, 0xf163, 0xba9, 0x75d0, 0x0, 0x0);
        gbc.writeMem(0x83e2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xde8b);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e2), 0xcb);
        EXPECT(gbc.readMem(0x83e3), 0xef);
        // CB EF 01D7
        gbc.setState(0x2f0d, 0x23fd, 0xb050, 0x906, 0x5b23, 0x8274, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x23fd);
        EXPECT(gbc.pc(), 0x2f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01D8
        gbc.setState(0x373c, 0x3114, 0xc2e0, 0x9579, 0x3ea1, 0x5ab2, 0x0, 0x0);
        gbc.writeMem(0x373c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3114);
        EXPECT(gbc.pc(), 0x373e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01D9
        gbc.setState(0x4c91, 0x92c2, 0xe340, 0x43a2, 0xb8f8, 0xc786, 0x1, 0x1);
        gbc.writeMem(0x4c91, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x92c2);
        EXPECT(gbc.pc(), 0x4c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01DA
        gbc.setState(0xfa1, 0x6351, 0x1e20, 0x70b, 0x77d6, 0x7817, 0x1, 0x0);
        gbc.writeMem(0xfa1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0xfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01DB
        gbc.setState(0xded3, 0x28a, 0x7c80, 0xe4fc, 0x9873, 0x5dc8, 0x1, 0x1);
        gbc.writeMem(0xded3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x28a);
        EXPECT(gbc.pc(), 0xded5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded3), 0xcb);
        EXPECT(gbc.readMem(0xded4), 0xef);
        // CB EF 01DC
        gbc.setState(0x1e35, 0x4417, 0x2af0, 0x92f5, 0x5281, 0xf203, 0x0, 0x0);
        gbc.writeMem(0x1e35, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4417);
        EXPECT(gbc.pc(), 0x1e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01DD
        gbc.setState(0x5ec0, 0xa6ff, 0xdc30, 0xb000, 0xb70c, 0xf42a, 0x1, 0x0);
        gbc.writeMem(0x5ec0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa6ff);
        EXPECT(gbc.pc(), 0x5ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01DE
        gbc.setState(0x4880, 0x7283, 0x1ff0, 0x2a22, 0x6e77, 0xac32, 0x0, 0x0);
        gbc.writeMem(0x4880, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7283);
        EXPECT(gbc.pc(), 0x4882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01DF
        gbc.setState(0x9375, 0x5757, 0x5810, 0xb4fc, 0xbd7e, 0x8510, 0x0, 0x0);
        gbc.writeMem(0x9375, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0x9377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9375), 0xcb);
        EXPECT(gbc.readMem(0x9376), 0xef);
        // CB EF 01E0
        gbc.setState(0x56a5, 0xba9b, 0x82b0, 0x35c7, 0x2526, 0x16da, 0x1, 0x1);
        gbc.writeMem(0x56a5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0x56a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01E1
        gbc.setState(0x7007, 0xbcc2, 0x7990, 0xe58d, 0x83c, 0x5e2b, 0x0, 0x0);
        gbc.writeMem(0x7007, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbcc2);
        EXPECT(gbc.pc(), 0x7009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01E2
        gbc.setState(0xb83a, 0x34a5, 0xd80, 0x857e, 0xc7bc, 0xece9, 0x1, 0x0);
        gbc.writeMem(0xb83a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x34a5);
        EXPECT(gbc.pc(), 0xb83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83a), 0xcb);
        EXPECT(gbc.readMem(0xb83b), 0xef);
        // CB EF 01E3
        gbc.setState(0xd31a, 0x5e7c, 0x2820, 0xe19b, 0x7b0a, 0x6010, 0x0, 0x0);
        gbc.writeMem(0xd31a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5e7c);
        EXPECT(gbc.pc(), 0xd31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31a), 0xcb);
        EXPECT(gbc.readMem(0xd31b), 0xef);
        // CB EF 01E4
        gbc.setState(0x2b02, 0xe77, 0x7b60, 0x3ee1, 0x9c78, 0xa698, 0x1, 0x0);
        gbc.writeMem(0x2b02, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe77);
        EXPECT(gbc.pc(), 0x2b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01E5
        gbc.setState(0xc748, 0xa425, 0x5b70, 0x2d18, 0x7715, 0x467c, 0x0, 0x1);
        gbc.writeMem(0xc748, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa425);
        EXPECT(gbc.pc(), 0xc74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc748), 0xcb);
        EXPECT(gbc.readMem(0xc749), 0xef);
        // CB EF 01E6
        gbc.setState(0x7778, 0xcdb2, 0x5540, 0x6b40, 0xace3, 0x7271, 0x1, 0x1);
        gbc.writeMem(0x7778, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcdb2);
        EXPECT(gbc.pc(), 0x777a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01E7
        gbc.setState(0x5e5a, 0x435, 0xded0, 0x3e66, 0x9884, 0xb33d, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x435);
        EXPECT(gbc.pc(), 0x5e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01E8
        gbc.setState(0xe75d, 0xd7df, 0x3bb0, 0x6c88, 0xdd25, 0x68f0, 0x0, 0x1);
        gbc.writeMem(0xe75d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd7df);
        EXPECT(gbc.pc(), 0xe75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75d), 0xcb);
        EXPECT(gbc.readMem(0xe75e), 0xef);
        // CB EF 01E9
        gbc.setState(0x58c9, 0x709f, 0xa610, 0x3357, 0x9448, 0x46f3, 0x1, 0x0);
        gbc.writeMem(0x58c9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0x58cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01EA
        gbc.setState(0x1ddf, 0x10fa, 0xcce0, 0xdccd, 0x24bf, 0x8be5, 0x1, 0x1);
        gbc.writeMem(0x1ddf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x10fa);
        EXPECT(gbc.pc(), 0x1de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01EB
        gbc.setState(0xdb91, 0xfc85, 0x5c20, 0xe4e6, 0xd4c7, 0xf315, 0x1, 0x0);
        gbc.writeMem(0xdb91, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0xdb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb91), 0xcb);
        EXPECT(gbc.readMem(0xdb92), 0xef);
        // CB EF 01EC
        gbc.setState(0x143a, 0x14db, 0xbe40, 0x452b, 0xe549, 0x1d37, 0x0, 0x0);
        gbc.writeMem(0x143a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x14db);
        EXPECT(gbc.pc(), 0x143c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01ED
        gbc.setState(0xd9c8, 0xbe9a, 0x3470, 0xcbde, 0xf0d7, 0xaf32, 0x0, 0x0);
        gbc.writeMem(0xd9c8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbe9a);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c8), 0xcb);
        EXPECT(gbc.readMem(0xd9c9), 0xef);
        // CB EF 01EE
        gbc.setState(0x74f8, 0x87e7, 0xabc0, 0xa6d0, 0x3253, 0xb9b8, 0x0, 0x1);
        gbc.writeMem(0x74f8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x87e7);
        EXPECT(gbc.pc(), 0x74fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01EF
        gbc.setState(0x955f, 0xf209, 0x9c00, 0x12c0, 0x7e42, 0xa93a, 0x1, 0x0);
        gbc.writeMem(0x955f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf209);
        EXPECT(gbc.pc(), 0x9561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955f), 0xcb);
        EXPECT(gbc.readMem(0x9560), 0xef);
        // CB EF 01F0
        gbc.setState(0x3d8e, 0xe54e, 0xa090, 0xb0cb, 0xd34e, 0x38e, 0x1, 0x1);
        gbc.writeMem(0x3d8e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe54e);
        EXPECT(gbc.pc(), 0x3d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01F1
        gbc.setState(0xedeb, 0x47fd, 0xd3b0, 0xc975, 0x2467, 0x416, 0x1, 0x0);
        gbc.writeMem(0xedeb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x47fd);
        EXPECT(gbc.pc(), 0xeded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedeb), 0xcb);
        EXPECT(gbc.readMem(0xedec), 0xef);
        // CB EF 01F2
        gbc.setState(0x8245, 0xf7d1, 0xbd10, 0x4294, 0x511, 0x983e, 0x1, 0x1);
        gbc.writeMem(0x8245, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0x8247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8245), 0xcb);
        EXPECT(gbc.readMem(0x8246), 0xef);
        // CB EF 01F3
        gbc.setState(0x974, 0x79d5, 0x9140, 0x3734, 0x1eb8, 0xa729, 0x0, 0x1);
        gbc.writeMem(0x974, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x79d5);
        EXPECT(gbc.pc(), 0x976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01F4
        gbc.setState(0x419f, 0x4317, 0xe060, 0x395a, 0x853e, 0x8340, 0x0, 0x1);
        gbc.writeMem(0x419f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0x41a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01F5
        gbc.setState(0x500e, 0x8299, 0x9540, 0x5d43, 0x30cd, 0x6e1f, 0x0, 0x1);
        gbc.writeMem(0x500e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x5010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01F6
        gbc.setState(0xae43, 0xef1d, 0x99c0, 0xa5d8, 0x94af, 0x25b5, 0x1, 0x0);
        gbc.writeMem(0xae43, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xef1d);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae43), 0xcb);
        EXPECT(gbc.readMem(0xae44), 0xef);
        // CB EF 01F7
        gbc.setState(0x7ec9, 0x2982, 0xe9d0, 0x4c07, 0xded9, 0x4130, 0x1, 0x1);
        gbc.writeMem(0x7ec9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2982);
        EXPECT(gbc.pc(), 0x7ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01F8
        gbc.setState(0x7914, 0xaadc, 0x29f0, 0xb80e, 0xefad, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0x7914, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaadc);
        EXPECT(gbc.pc(), 0x7916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 01F9
        gbc.setState(0xb566, 0xbdbe, 0xa580, 0x14ec, 0x8fd5, 0x1a1d, 0x1, 0x0);
        gbc.writeMem(0xb566, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbdbe);
        EXPECT(gbc.pc(), 0xb568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb566), 0xcb);
        EXPECT(gbc.readMem(0xb567), 0xef);
        // CB EF 01FA
        gbc.setState(0xd091, 0x2fcc, 0xcac0, 0xcce6, 0x8acd, 0x6bef, 0x1, 0x0);
        gbc.writeMem(0xd091, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2fcc);
        EXPECT(gbc.pc(), 0xd093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd091), 0xcb);
        EXPECT(gbc.readMem(0xd092), 0xef);
        // CB EF 01FB
        gbc.setState(0x43ad, 0xbc91, 0xbac0, 0xccd4, 0x4bf5, 0x2ba8, 0x0, 0x0);
        gbc.writeMem(0x43ad, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbc91);
        EXPECT(gbc.pc(), 0x43af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01FC
        gbc.setState(0xc5dc, 0x2060, 0xd6e0, 0x39f4, 0x6b4, 0xa57c, 0x0, 0x0);
        gbc.writeMem(0xc5dc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2060);
        EXPECT(gbc.pc(), 0xc5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5dc), 0xcb);
        EXPECT(gbc.readMem(0xc5dd), 0xef);
        // CB EF 01FD
        gbc.setState(0x1cf0, 0x2bfe, 0x8aa0, 0xf235, 0x2e73, 0x7460, 0x0, 0x1);
        gbc.writeMem(0x1cf0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0x1cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01FE
        gbc.setState(0x26dc, 0x2e34, 0x5280, 0x9651, 0x66fc, 0xa791, 0x1, 0x1);
        gbc.writeMem(0x26dc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2e34);
        EXPECT(gbc.pc(), 0x26de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 01FF
        gbc.setState(0x7f2a, 0xe201, 0x2f80, 0x8b38, 0x7685, 0xdb83, 0x1, 0x0);
        gbc.writeMem(0x7f2a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe201);
        EXPECT(gbc.pc(), 0x7f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0200
        gbc.setState(0x5ea0, 0x737a, 0xcfd0, 0x894c, 0xa68c, 0xa2c8, 0x0, 0x1);
        gbc.writeMem(0x5ea0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x737a);
        EXPECT(gbc.pc(), 0x5ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0201
        gbc.setState(0xcb22, 0xfa2c, 0x81c0, 0x7a83, 0xe378, 0x66b1, 0x1, 0x1);
        gbc.writeMem(0xcb22, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfa2c);
        EXPECT(gbc.pc(), 0xcb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb22), 0xcb);
        EXPECT(gbc.readMem(0xcb23), 0xef);
        // CB EF 0202
        gbc.setState(0x92a8, 0x9af3, 0x34a0, 0x3366, 0xde71, 0x7a62, 0x1, 0x0);
        gbc.writeMem(0x92a8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9af3);
        EXPECT(gbc.pc(), 0x92aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a8), 0xcb);
        EXPECT(gbc.readMem(0x92a9), 0xef);
        // CB EF 0203
        gbc.setState(0x5e6, 0x7184, 0x2e40, 0x9306, 0x357, 0xb720, 0x1, 0x0);
        gbc.writeMem(0x5e6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7184);
        EXPECT(gbc.pc(), 0x5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0204
        gbc.setState(0xcf68, 0x43dd, 0xbe70, 0xe9ef, 0x5b8d, 0xe790, 0x1, 0x0);
        gbc.writeMem(0xcf68, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x43dd);
        EXPECT(gbc.pc(), 0xcf6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf68), 0xcb);
        EXPECT(gbc.readMem(0xcf69), 0xef);
        // CB EF 0205
        gbc.setState(0x4759, 0xb6f7, 0x1f60, 0xb72f, 0x24b7, 0xe423, 0x1, 0x1);
        gbc.writeMem(0x4759, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb6f7);
        EXPECT(gbc.pc(), 0x475b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0206
        gbc.setState(0x1cf, 0x26e2, 0xcec0, 0xef97, 0x3c71, 0x4591, 0x0, 0x1);
        gbc.writeMem(0x1cf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x26e2);
        EXPECT(gbc.pc(), 0x1d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0207
        gbc.setState(0x8481, 0x2965, 0x3b50, 0x2960, 0x7e07, 0x71a9, 0x0, 0x0);
        gbc.writeMem(0x8481, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2965);
        EXPECT(gbc.pc(), 0x8483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8481), 0xcb);
        EXPECT(gbc.readMem(0x8482), 0xef);
        // CB EF 0208
        gbc.setState(0x3500, 0x3a76, 0x9700, 0x7511, 0x503b, 0x852b, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3a76);
        EXPECT(gbc.pc(), 0x3502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0209
        gbc.setState(0x6e9e, 0x7b2, 0x6a20, 0x77fe, 0x21da, 0x374, 0x1, 0x0);
        gbc.writeMem(0x6e9e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7b2);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 020A
        gbc.setState(0x2876, 0xd734, 0x4b70, 0x6e50, 0x3775, 0x3d15, 0x0, 0x1);
        gbc.writeMem(0x2876, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd734);
        EXPECT(gbc.pc(), 0x2878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 020C
        gbc.setState(0xc4a8, 0x38d8, 0x7e00, 0x5df2, 0x59a2, 0x576, 0x0, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x38d8);
        EXPECT(gbc.pc(), 0xc4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a8), 0xcb);
        EXPECT(gbc.readMem(0xc4a9), 0xef);
        // CB EF 020D
        gbc.setState(0x688d, 0xba3f, 0x2280, 0xfced, 0xe79c, 0xa2e3, 0x1, 0x0);
        gbc.writeMem(0x688d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xba3f);
        EXPECT(gbc.pc(), 0x688f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 020F
        gbc.setState(0x3d7b, 0x202e, 0x1a60, 0x7cd2, 0x4467, 0xb171, 0x0, 0x0);
        gbc.writeMem(0x3d7b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x202e);
        EXPECT(gbc.pc(), 0x3d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0210
        gbc.setState(0xea8b, 0x471c, 0x4110, 0x21eb, 0x4d3a, 0x5c1, 0x0, 0x1);
        gbc.writeMem(0xea8b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x471c);
        EXPECT(gbc.pc(), 0xea8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8b), 0xcb);
        EXPECT(gbc.readMem(0xea8c), 0xef);
        // CB EF 0211
        gbc.setState(0xa998, 0xbc2d, 0x2670, 0x2aca, 0x5f8a, 0xaf20, 0x1, 0x0);
        gbc.writeMem(0xa998, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbc2d);
        EXPECT(gbc.pc(), 0xa99a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa998), 0xcb);
        EXPECT(gbc.readMem(0xa999), 0xef);
        // CB EF 0212
        gbc.setState(0x55a1, 0x1291, 0x4910, 0xe731, 0xc45f, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x55a1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1291);
        EXPECT(gbc.pc(), 0x55a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0213
        gbc.setState(0xf0d, 0x87f6, 0x29f0, 0xbdea, 0x757f, 0x7591, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x87f6);
        EXPECT(gbc.pc(), 0xf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0214
        gbc.setState(0xce23, 0xf0bb, 0xc20, 0x43df, 0xfb66, 0xdd92, 0x1, 0x0);
        gbc.writeMem(0xce23, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf0bb);
        EXPECT(gbc.pc(), 0xce25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce23), 0xcb);
        EXPECT(gbc.readMem(0xce24), 0xef);
        // CB EF 0215
        gbc.setState(0x7822, 0xeed1, 0xba50, 0xc0cd, 0xdf63, 0xabd4, 0x1, 0x0);
        gbc.writeMem(0x7822, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeed1);
        EXPECT(gbc.pc(), 0x7824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0216
        gbc.setState(0xbfe, 0x11c3, 0x9120, 0x7e27, 0x93eb, 0x97a0, 0x0, 0x1);
        gbc.writeMem(0xbfe, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x11c3);
        EXPECT(gbc.pc(), 0xc00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0217
        gbc.setState(0x1535, 0x217, 0x8700, 0xa03f, 0x67ca, 0x98de, 0x0, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x217);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0218
        gbc.setState(0x2eb8, 0x439d, 0x8040, 0xc36d, 0x896f, 0x342f, 0x1, 0x0);
        gbc.writeMem(0x2eb8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x439d);
        EXPECT(gbc.pc(), 0x2eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0219
        gbc.setState(0x93b6, 0xb5fa, 0x58f0, 0x331, 0xdb54, 0x9d25, 0x1, 0x1);
        gbc.writeMem(0x93b6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb5fa);
        EXPECT(gbc.pc(), 0x93b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b6), 0xcb);
        EXPECT(gbc.readMem(0x93b7), 0xef);
        // CB EF 021A
        gbc.setState(0xca67, 0xb832, 0xab30, 0x8beb, 0xc249, 0x340f, 0x0, 0x1);
        gbc.writeMem(0xca67, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb832);
        EXPECT(gbc.pc(), 0xca69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca67), 0xcb);
        EXPECT(gbc.readMem(0xca68), 0xef);
        // CB EF 021B
        gbc.setState(0x5d37, 0x4047, 0xbeb0, 0x44c3, 0xaaa, 0xbbbc, 0x1, 0x0);
        gbc.writeMem(0x5d37, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0x5d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 021C
        gbc.setState(0xc1d3, 0x398a, 0x9dc0, 0x666f, 0x71bb, 0x2eca, 0x0, 0x1);
        gbc.writeMem(0xc1d3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x398a);
        EXPECT(gbc.pc(), 0xc1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d3), 0xcb);
        EXPECT(gbc.readMem(0xc1d4), 0xef);
        // CB EF 021D
        gbc.setState(0x751a, 0xf86a, 0xac60, 0x4827, 0xa5fc, 0x2bd4, 0x0, 0x0);
        gbc.writeMem(0x751a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf86a);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 021E
        gbc.setState(0xe7b2, 0x4d89, 0x3e60, 0x4519, 0x3a67, 0xaeee, 0x0, 0x0);
        gbc.writeMem(0xe7b2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4d89);
        EXPECT(gbc.pc(), 0xe7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b2), 0xcb);
        EXPECT(gbc.readMem(0xe7b3), 0xef);
        // CB EF 021F
        gbc.setState(0x447f, 0xb488, 0xf570, 0xeec3, 0x34d6, 0xf017, 0x1, 0x1);
        gbc.writeMem(0x447f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb488);
        EXPECT(gbc.pc(), 0x4481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0220
        gbc.setState(0x3f73, 0x43e2, 0x10c0, 0xe89f, 0x262d, 0xfcf4, 0x1, 0x1);
        gbc.writeMem(0x3f73, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x43e2);
        EXPECT(gbc.pc(), 0x3f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0221
        gbc.setState(0x3b2c, 0x6fa5, 0x60a0, 0x3203, 0x6183, 0xf1b5, 0x1, 0x0);
        gbc.writeMem(0x3b2c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x3b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0222
        gbc.setState(0xe046, 0x39e5, 0x8960, 0x5ea8, 0xaffc, 0x7290, 0x1, 0x1);
        gbc.writeMem(0xe046, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x39e5);
        EXPECT(gbc.pc(), 0xe048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe046), 0xcb);
        EXPECT(gbc.readMem(0xe047), 0xef);
        // CB EF 0223
        gbc.setState(0x9e55, 0x28a7, 0x39c0, 0x3fb1, 0xdd8d, 0x8ee1, 0x0, 0x0);
        gbc.writeMem(0x9e55, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x28a7);
        EXPECT(gbc.pc(), 0x9e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e55), 0xcb);
        EXPECT(gbc.readMem(0x9e56), 0xef);
        // CB EF 0224
        gbc.setState(0xd988, 0x8613, 0x9f70, 0x6956, 0xdb2f, 0x8232, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8613);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0xef);
        // CB EF 0225
        gbc.setState(0x21e0, 0xd113, 0x2740, 0xa5d6, 0xb56d, 0x15fb, 0x1, 0x1);
        gbc.writeMem(0x21e0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x21e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0226
        gbc.setState(0xb57f, 0x8e20, 0x2df0, 0x251c, 0x103f, 0xceb2, 0x1, 0x0);
        gbc.writeMem(0xb57f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8e20);
        EXPECT(gbc.pc(), 0xb581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57f), 0xcb);
        EXPECT(gbc.readMem(0xb580), 0xef);
        // CB EF 0227
        gbc.setState(0xe782, 0x7e4a, 0xd790, 0xc0, 0x7a5f, 0xd78a, 0x0, 0x1);
        gbc.writeMem(0xe782, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7e4a);
        EXPECT(gbc.pc(), 0xe784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe782), 0xcb);
        EXPECT(gbc.readMem(0xe783), 0xef);
        // CB EF 0228
        gbc.setState(0xd2ac, 0xeed9, 0xebd0, 0x7612, 0x214e, 0xd5ed, 0x0, 0x0);
        gbc.writeMem(0xd2ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeed9);
        EXPECT(gbc.pc(), 0xd2ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ac), 0xcb);
        EXPECT(gbc.readMem(0xd2ad), 0xef);
        // CB EF 0229
        gbc.setState(0x6388, 0x9751, 0xeeb0, 0xe1b1, 0x3d36, 0x3eb6, 0x1, 0x1);
        gbc.writeMem(0x6388, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9751);
        EXPECT(gbc.pc(), 0x638a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 022A
        gbc.setState(0x43fe, 0x64d5, 0x7b70, 0x7666, 0xa0d6, 0x3eab, 0x0, 0x0);
        gbc.writeMem(0x43fe, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x64d5);
        EXPECT(gbc.pc(), 0x4400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 022B
        gbc.setState(0x56aa, 0x33c1, 0x2a10, 0x798e, 0x36fc, 0xf701, 0x1, 0x1);
        gbc.writeMem(0x56aa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x33c1);
        EXPECT(gbc.pc(), 0x56ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 022C
        gbc.setState(0x79a0, 0x4269, 0x4590, 0xb738, 0x3c3c, 0xa693, 0x0, 0x1);
        gbc.writeMem(0x79a0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4269);
        EXPECT(gbc.pc(), 0x79a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 022D
        gbc.setState(0xe21f, 0xc6cb, 0x6320, 0xd2a8, 0xc042, 0xdd50, 0x0, 0x1);
        gbc.writeMem(0xe21f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc6cb);
        EXPECT(gbc.pc(), 0xe221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21f), 0xcb);
        EXPECT(gbc.readMem(0xe220), 0xef);
        // CB EF 022E
        gbc.setState(0x14ea, 0x79df, 0x6800, 0x56bf, 0x648b, 0xdbae, 0x0, 0x1);
        gbc.writeMem(0x14ea, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x79df);
        EXPECT(gbc.pc(), 0x14ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 022F
        gbc.setState(0x2316, 0x54e7, 0xf420, 0xfe50, 0xe370, 0x4b67, 0x0, 0x0);
        gbc.writeMem(0x2316, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x54e7);
        EXPECT(gbc.pc(), 0x2318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0230
        gbc.setState(0x838a, 0x9440, 0xcd10, 0x12c5, 0xdd80, 0xe994, 0x0, 0x1);
        gbc.writeMem(0x838a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9440);
        EXPECT(gbc.pc(), 0x838c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838a), 0xcb);
        EXPECT(gbc.readMem(0x838b), 0xef);
        // CB EF 0231
        gbc.setState(0x960b, 0xc4, 0xdd40, 0xb8af, 0xd962, 0xa13e, 0x0, 0x0);
        gbc.writeMem(0x960b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0x960d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960b), 0xcb);
        EXPECT(gbc.readMem(0x960c), 0xef);
        // CB EF 0232
        gbc.setState(0xc3e9, 0x3d70, 0xa910, 0x1bd2, 0x6088, 0xa78a, 0x0, 0x1);
        gbc.writeMem(0xc3e9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3d70);
        EXPECT(gbc.pc(), 0xc3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e9), 0xcb);
        EXPECT(gbc.readMem(0xc3ea), 0xef);
        // CB EF 0233
        gbc.setState(0x1570, 0xce44, 0xb110, 0xc023, 0x7bcc, 0x5804, 0x0, 0x1);
        gbc.writeMem(0x1570, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0x1572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0234
        gbc.setState(0x54be, 0xc656, 0xfca0, 0x9156, 0x7b6c, 0xed6e, 0x0, 0x1);
        gbc.writeMem(0x54be, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc656);
        EXPECT(gbc.pc(), 0x54c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0235
        gbc.setState(0x1b8c, 0xb919, 0x67e0, 0xcc20, 0x501e, 0x31f0, 0x0, 0x1);
        gbc.writeMem(0x1b8c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb919);
        EXPECT(gbc.pc(), 0x1b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0236
        gbc.setState(0x3f95, 0x74f1, 0x5430, 0x66fa, 0xceea, 0x1cbc, 0x0, 0x1);
        gbc.writeMem(0x3f95, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x74f1);
        EXPECT(gbc.pc(), 0x3f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0237
        gbc.setState(0x91ac, 0x799d, 0x46c0, 0x41e9, 0x93e, 0x3a0f, 0x0, 0x0);
        gbc.writeMem(0x91ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x799d);
        EXPECT(gbc.pc(), 0x91ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ac), 0xcb);
        EXPECT(gbc.readMem(0x91ad), 0xef);
        // CB EF 0238
        gbc.setState(0xaffd, 0xedd9, 0x6c70, 0x7e82, 0xbf0f, 0x467c, 0x1, 0x0);
        gbc.writeMem(0xaffd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xedd9);
        EXPECT(gbc.pc(), 0xafff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffd), 0xcb);
        EXPECT(gbc.readMem(0xaffe), 0xef);
        // CB EF 0239
        gbc.setState(0x7831, 0x819a, 0x5210, 0x9c4c, 0x4b1e, 0x59de, 0x0, 0x1);
        gbc.writeMem(0x7831, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0x7833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 023A
        gbc.setState(0x4ccd, 0x5cd9, 0x6690, 0xaff2, 0x94b2, 0x76e5, 0x1, 0x0);
        gbc.writeMem(0x4ccd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5cd9);
        EXPECT(gbc.pc(), 0x4ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 023B
        gbc.setState(0x372e, 0x100d, 0x5360, 0x2ac3, 0xbc94, 0x70f3, 0x1, 0x0);
        gbc.writeMem(0x372e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x100d);
        EXPECT(gbc.pc(), 0x3730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 023D
        gbc.setState(0xc6c8, 0xaeb0, 0x79d0, 0x501f, 0x8f26, 0x4bc0, 0x1, 0x1);
        gbc.writeMem(0xc6c8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaeb0);
        EXPECT(gbc.pc(), 0xc6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c8), 0xcb);
        EXPECT(gbc.readMem(0xc6c9), 0xef);
        // CB EF 023E
        gbc.setState(0x1ed4, 0x88cb, 0xb9d0, 0xba65, 0xf650, 0x8630, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x88cb);
        EXPECT(gbc.pc(), 0x1ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 023F
        gbc.setState(0xda47, 0x9b08, 0xe570, 0x72ff, 0xe103, 0xb8af, 0x0, 0x0);
        gbc.writeMem(0xda47, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9b08);
        EXPECT(gbc.pc(), 0xda49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda47), 0xcb);
        EXPECT(gbc.readMem(0xda48), 0xef);
        // CB EF 0240
        gbc.setState(0x2f28, 0x9a90, 0xeef0, 0xaa4e, 0xce30, 0x25e2, 0x0, 0x0);
        gbc.writeMem(0x2f28, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9a90);
        EXPECT(gbc.pc(), 0x2f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0241
        gbc.setState(0x6818, 0x9842, 0x2160, 0x25a6, 0xb51a, 0x6043, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9842);
        EXPECT(gbc.pc(), 0x681a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0242
        gbc.setState(0x2e70, 0x6738, 0x4d80, 0x1819, 0xc18c, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6738);
        EXPECT(gbc.pc(), 0x2e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0243
        gbc.setState(0x87dd, 0x243a, 0x8990, 0x8bc0, 0x888d, 0x5df, 0x1, 0x0);
        gbc.writeMem(0x87dd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x243a);
        EXPECT(gbc.pc(), 0x87df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87dd), 0xcb);
        EXPECT(gbc.readMem(0x87de), 0xef);
        // CB EF 0244
        gbc.setState(0x5ee9, 0xb53b, 0xe8c0, 0x114e, 0xd10f, 0xbe4, 0x1, 0x1);
        gbc.writeMem(0x5ee9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb53b);
        EXPECT(gbc.pc(), 0x5eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0245
        gbc.setState(0x459d, 0x2340, 0x1150, 0x2858, 0x2d42, 0x724d, 0x0, 0x1);
        gbc.writeMem(0x459d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0x459f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0246
        gbc.setState(0x9221, 0x677a, 0x60d0, 0x4d48, 0x6204, 0xe840, 0x0, 0x1);
        gbc.writeMem(0x9221, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0x9223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9221), 0xcb);
        EXPECT(gbc.readMem(0x9222), 0xef);
        // CB EF 0247
        gbc.setState(0xb5b5, 0x16cf, 0x8a00, 0x1e8a, 0xc8f4, 0xef3, 0x0, 0x1);
        gbc.writeMem(0xb5b5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x16cf);
        EXPECT(gbc.pc(), 0xb5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b5), 0xcb);
        EXPECT(gbc.readMem(0xb5b6), 0xef);
        // CB EF 0248
        gbc.setState(0x6f5b, 0x5a92, 0xa9c0, 0x124f, 0x8ea0, 0x470d, 0x0, 0x0);
        gbc.writeMem(0x6f5b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5a92);
        EXPECT(gbc.pc(), 0x6f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0249
        gbc.setState(0xdc2c, 0xd7fd, 0x9cf0, 0x8048, 0xf122, 0x9cf0, 0x1, 0x0);
        gbc.writeMem(0xdc2c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd7fd);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0xef);
        // CB EF 024A
        gbc.setState(0x3031, 0x8947, 0xffb0, 0xacff, 0xdf77, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0x3031, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8947);
        EXPECT(gbc.pc(), 0x3033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 024B
        gbc.setState(0xccf, 0xc421, 0x37b0, 0x749, 0x436, 0x2c9b, 0x1, 0x0);
        gbc.writeMem(0xccf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc421);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 024C
        gbc.setState(0x3a87, 0x8975, 0x72d0, 0xce05, 0xc4e4, 0xb6a4, 0x1, 0x1);
        gbc.writeMem(0x3a87, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8975);
        EXPECT(gbc.pc(), 0x3a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 024D
        gbc.setState(0x605c, 0x6ac, 0xd670, 0x7366, 0x8ced, 0x3fc5, 0x1, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6ac);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 024E
        gbc.setState(0x7837, 0x74e7, 0x7750, 0x609d, 0x1360, 0xc4d, 0x1, 0x1);
        gbc.writeMem(0x7837, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x74e7);
        EXPECT(gbc.pc(), 0x7839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 024F
        gbc.setState(0xd668, 0xa61f, 0x7a0, 0xc0bc, 0x6ef3, 0x276c, 0x0, 0x0);
        gbc.writeMem(0xd668, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa61f);
        EXPECT(gbc.pc(), 0xd66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd668), 0xcb);
        EXPECT(gbc.readMem(0xd669), 0xef);
        // CB EF 0250
        gbc.setState(0x5297, 0x41a2, 0x9090, 0x8d8, 0x3887, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x41a2);
        EXPECT(gbc.pc(), 0x5299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0251
        gbc.setState(0xb928, 0x3bcf, 0xa0e0, 0xe5f2, 0x9d81, 0x680c, 0x0, 0x0);
        gbc.writeMem(0xb928, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3bcf);
        EXPECT(gbc.pc(), 0xb92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb928), 0xcb);
        EXPECT(gbc.readMem(0xb929), 0xef);
        // CB EF 0253
        gbc.setState(0x8354, 0x3a67, 0x6130, 0x85a8, 0xe681, 0x7789, 0x0, 0x0);
        gbc.writeMem(0x8354, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3a67);
        EXPECT(gbc.pc(), 0x8356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8354), 0xcb);
        EXPECT(gbc.readMem(0x8355), 0xef);
        // CB EF 0254
        gbc.setState(0xa53d, 0xc7fd, 0x8ff0, 0xbc71, 0xf538, 0x9b5f, 0x0, 0x0);
        gbc.writeMem(0xa53d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc7fd);
        EXPECT(gbc.pc(), 0xa53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa53d), 0xcb);
        EXPECT(gbc.readMem(0xa53e), 0xef);
        // CB EF 0255
        gbc.setState(0x5473, 0xa4af, 0x8360, 0x7c41, 0x6a1e, 0x8a40, 0x0, 0x0);
        gbc.writeMem(0x5473, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa4af);
        EXPECT(gbc.pc(), 0x5475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0256
        gbc.setState(0x309f, 0x21ff, 0xb890, 0x1a13, 0x6103, 0xedba, 0x1, 0x0);
        gbc.writeMem(0x309f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0x30a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0257
        gbc.setState(0x2dc0, 0xcd72, 0x16b0, 0x58ba, 0xac01, 0xfec6, 0x0, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcd72);
        EXPECT(gbc.pc(), 0x2dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0258
        gbc.setState(0x7a3f, 0x66c3, 0xec00, 0x7a1d, 0xfd18, 0x5b07, 0x0, 0x1);
        gbc.writeMem(0x7a3f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x66c3);
        EXPECT(gbc.pc(), 0x7a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0259
        gbc.setState(0x996d, 0x66b9, 0x78b0, 0x4fcf, 0x7a7d, 0xc607, 0x1, 0x0);
        gbc.writeMem(0x996d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x66b9);
        EXPECT(gbc.pc(), 0x996f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996d), 0xcb);
        EXPECT(gbc.readMem(0x996e), 0xef);
        // CB EF 025A
        gbc.setState(0xfd, 0x55b2, 0xa480, 0xce0, 0xb524, 0x2686, 0x0, 0x1);
        gbc.writeMem(0xfd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x55b2);
        EXPECT(gbc.pc(), 0xff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 025B
        gbc.setState(0x1ddb, 0xb506, 0x1ad0, 0x3ad4, 0xfce0, 0x8d1d, 0x0, 0x0);
        gbc.writeMem(0x1ddb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0x1ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 025C
        gbc.setState(0x31c, 0xeb20, 0x10f0, 0xd276, 0x225b, 0x15e6, 0x1, 0x1);
        gbc.writeMem(0x31c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeb20);
        EXPECT(gbc.pc(), 0x31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 025D
        gbc.setState(0x44ca, 0xd930, 0xf450, 0xe995, 0x2fbb, 0x5507, 0x1, 0x0);
        gbc.writeMem(0x44ca, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd930);
        EXPECT(gbc.pc(), 0x44cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0260
        gbc.setState(0x9408, 0xe523, 0xf40, 0xce9e, 0x1496, 0x71e2, 0x1, 0x0);
        gbc.writeMem(0x9408, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe523);
        EXPECT(gbc.pc(), 0x940a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9408), 0xcb);
        EXPECT(gbc.readMem(0x9409), 0xef);
        // CB EF 0261
        gbc.setState(0xc673, 0x912d, 0x7900, 0x3c52, 0xb6b, 0x9451, 0x1, 0x1);
        gbc.writeMem(0xc673, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x912d);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc673), 0xcb);
        EXPECT(gbc.readMem(0xc674), 0xef);
        // CB EF 0262
        gbc.setState(0x50d, 0x4338, 0x4c50, 0xbe43, 0x549a, 0xb799, 0x1, 0x0);
        gbc.writeMem(0x50d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4338);
        EXPECT(gbc.pc(), 0x50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0263
        gbc.setState(0x2c36, 0x1376, 0x60e0, 0xfd06, 0x20e0, 0xe7be, 0x0, 0x0);
        gbc.writeMem(0x2c36, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1376);
        EXPECT(gbc.pc(), 0x2c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0264
        gbc.setState(0x16bc, 0x1036, 0x5e20, 0x9aa7, 0x55a1, 0xf58, 0x0, 0x0);
        gbc.writeMem(0x16bc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1036);
        EXPECT(gbc.pc(), 0x16be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0265
        gbc.setState(0x6c35, 0xea76, 0x3090, 0x468f, 0xa13e, 0xa837, 0x1, 0x1);
        gbc.writeMem(0x6c35, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xea76);
        EXPECT(gbc.pc(), 0x6c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0266
        gbc.setState(0xbcf6, 0x663a, 0x9900, 0x4f7, 0x6ba, 0x8b5a, 0x1, 0x0);
        gbc.writeMem(0xbcf6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x663a);
        EXPECT(gbc.pc(), 0xbcf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf6), 0xcb);
        EXPECT(gbc.readMem(0xbcf7), 0xef);
        // CB EF 0267
        gbc.setState(0x9e1, 0xea0d, 0x1da0, 0xdf85, 0x10c, 0x783c, 0x0, 0x0);
        gbc.writeMem(0x9e1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xea0d);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0268
        gbc.setState(0xbcf3, 0x88a7, 0xc040, 0xd1f3, 0x89d4, 0x7b7c, 0x0, 0x1);
        gbc.writeMem(0xbcf3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x88a7);
        EXPECT(gbc.pc(), 0xbcf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf3), 0xcb);
        EXPECT(gbc.readMem(0xbcf4), 0xef);
        // CB EF 0269
        gbc.setState(0x31a4, 0x3955, 0xecf0, 0x684e, 0xf7d2, 0x7f39, 0x1, 0x1);
        gbc.writeMem(0x31a4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3955);
        EXPECT(gbc.pc(), 0x31a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 026A
        gbc.setState(0x81fd, 0x4bd9, 0x2b70, 0xae8f, 0x5a59, 0x8ae0, 0x0, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4bd9);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xef);
        // CB EF 026B
        gbc.setState(0xc710, 0xefa7, 0xefa0, 0xb184, 0x642b, 0x15db, 0x1, 0x0);
        gbc.writeMem(0xc710, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xefa7);
        EXPECT(gbc.pc(), 0xc712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc710), 0xcb);
        EXPECT(gbc.readMem(0xc711), 0xef);
        // CB EF 026C
        gbc.setState(0xde78, 0xddd9, 0xda50, 0xce46, 0xd1de, 0x5522, 0x1, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xddd9);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde78), 0xcb);
        EXPECT(gbc.readMem(0xde79), 0xef);
        // CB EF 026D
        gbc.setState(0x5d2c, 0xd7c7, 0x2ea0, 0x9088, 0x7064, 0xee4, 0x0, 0x1);
        gbc.writeMem(0x5d2c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd7c7);
        EXPECT(gbc.pc(), 0x5d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 026E
        gbc.setState(0x4a12, 0x3283, 0x2b70, 0x4c9, 0x4fb2, 0xac09, 0x1, 0x0);
        gbc.writeMem(0x4a12, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3283);
        EXPECT(gbc.pc(), 0x4a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 026F
        gbc.setState(0xb84b, 0x7069, 0x9170, 0x70a7, 0xce83, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0xb84b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7069);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84b), 0xcb);
        EXPECT(gbc.readMem(0xb84c), 0xef);
        // CB EF 0270
        gbc.setState(0x652f, 0xd9f0, 0xd850, 0x780f, 0x4f1e, 0xf4e7, 0x1, 0x1);
        gbc.writeMem(0x652f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd9f0);
        EXPECT(gbc.pc(), 0x6531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0271
        gbc.setState(0x253c, 0xff4b, 0x6620, 0xb25d, 0x3777, 0x6f1c, 0x0, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xff4b);
        EXPECT(gbc.pc(), 0x253e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0272
        gbc.setState(0xa8aa, 0xae7e, 0x7a90, 0xfa4e, 0xb35, 0x858a, 0x0, 0x1);
        gbc.writeMem(0xa8aa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xae7e);
        EXPECT(gbc.pc(), 0xa8ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8aa), 0xcb);
        EXPECT(gbc.readMem(0xa8ab), 0xef);
        // CB EF 0273
        gbc.setState(0x120d, 0x8825, 0xc220, 0x4ce9, 0x4172, 0xdd7c, 0x0, 0x0);
        gbc.writeMem(0x120d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8825);
        EXPECT(gbc.pc(), 0x120f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0274
        gbc.setState(0x659a, 0xac88, 0xc260, 0x8395, 0x3b92, 0x7913, 0x1, 0x0);
        gbc.writeMem(0x659a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xac88);
        EXPECT(gbc.pc(), 0x659c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0275
        gbc.setState(0x6c37, 0x451, 0x8080, 0xd4ff, 0x12c0, 0x298, 0x0, 0x0);
        gbc.writeMem(0x6c37, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x451);
        EXPECT(gbc.pc(), 0x6c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0276
        gbc.setState(0x92ce, 0xcd2f, 0xf550, 0x258d, 0x88a3, 0x6ece, 0x1, 0x1);
        gbc.writeMem(0x92ce, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0x92d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ce), 0xcb);
        EXPECT(gbc.readMem(0x92cf), 0xef);
        // CB EF 0277
        gbc.setState(0x367a, 0xd636, 0x97e0, 0xc7d7, 0xa21e, 0xd87b, 0x0, 0x1);
        gbc.writeMem(0x367a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd636);
        EXPECT(gbc.pc(), 0x367c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0278
        gbc.setState(0x9791, 0xddf7, 0x5d50, 0x5546, 0xb496, 0xe9e2, 0x1, 0x1);
        gbc.writeMem(0x9791, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xddf7);
        EXPECT(gbc.pc(), 0x9793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9791), 0xcb);
        EXPECT(gbc.readMem(0x9792), 0xef);
        // CB EF 0279
        gbc.setState(0x6012, 0xd9c2, 0xe170, 0xfea6, 0xca3c, 0x4ac2, 0x1, 0x0);
        gbc.writeMem(0x6012, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd9c2);
        EXPECT(gbc.pc(), 0x6014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 027A
        gbc.setState(0x1d67, 0x48af, 0xb610, 0xc9e0, 0x3036, 0xc252, 0x1, 0x1);
        gbc.writeMem(0x1d67, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x48af);
        EXPECT(gbc.pc(), 0x1d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 027B
        gbc.setState(0xcac1, 0x9531, 0x4020, 0x815d, 0x1954, 0x11bc, 0x0, 0x0);
        gbc.writeMem(0xcac1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9531);
        EXPECT(gbc.pc(), 0xcac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac1), 0xcb);
        EXPECT(gbc.readMem(0xcac2), 0xef);
        // CB EF 027C
        gbc.setState(0xed0a, 0xb713, 0xf390, 0xddb8, 0xfdd5, 0x1252, 0x1, 0x1);
        gbc.writeMem(0xed0a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb713);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0a), 0xcb);
        EXPECT(gbc.readMem(0xed0b), 0xef);
        // CB EF 027D
        gbc.setState(0x847, 0xaeb5, 0x69f0, 0xa1d0, 0xa5a9, 0x1b15, 0x0, 0x1);
        gbc.writeMem(0x847, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaeb5);
        EXPECT(gbc.pc(), 0x849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 027E
        gbc.setState(0x2fe5, 0xf37f, 0x670, 0x542e, 0x30c9, 0x1a86, 0x1, 0x1);
        gbc.writeMem(0x2fe5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf37f);
        EXPECT(gbc.pc(), 0x2fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 027F
        gbc.setState(0x74a, 0xb19c, 0x7c80, 0x5d1c, 0x2ee3, 0xd157, 0x0, 0x0);
        gbc.writeMem(0x74a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb19c);
        EXPECT(gbc.pc(), 0x74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0280
        gbc.setState(0x3df3, 0x7ff3, 0x1580, 0x2f31, 0x4796, 0x97c5, 0x0, 0x0);
        gbc.writeMem(0x3df3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7ff3);
        EXPECT(gbc.pc(), 0x3df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0282
        gbc.setState(0x4866, 0x33e2, 0xfc70, 0x40b1, 0xc443, 0x73c0, 0x0, 0x1);
        gbc.writeMem(0x4866, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x33e2);
        EXPECT(gbc.pc(), 0x4868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0283
        gbc.setState(0x7489, 0x8d8a, 0x70c0, 0x1bfb, 0xe6cd, 0x50a8, 0x1, 0x0);
        gbc.writeMem(0x7489, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8d8a);
        EXPECT(gbc.pc(), 0x748b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0284
        gbc.setState(0x17c5, 0xca95, 0x3a80, 0xbb87, 0x97e9, 0x19a9, 0x0, 0x0);
        gbc.writeMem(0x17c5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xca95);
        EXPECT(gbc.pc(), 0x17c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0285
        gbc.setState(0x4aa2, 0x7dfd, 0xdb0, 0xa0b4, 0x91e4, 0x9708, 0x0, 0x0);
        gbc.writeMem(0x4aa2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7dfd);
        EXPECT(gbc.pc(), 0x4aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0286
        gbc.setState(0x961a, 0x975d, 0x42f0, 0x53cd, 0x6c0, 0xf9d2, 0x0, 0x0);
        gbc.writeMem(0x961a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x975d);
        EXPECT(gbc.pc(), 0x961c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961a), 0xcb);
        EXPECT(gbc.readMem(0x961b), 0xef);
        // CB EF 0287
        gbc.setState(0xdd22, 0x4f83, 0xe380, 0xe738, 0x8d79, 0x8243, 0x1, 0x1);
        gbc.writeMem(0xdd22, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4f83);
        EXPECT(gbc.pc(), 0xdd24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd22), 0xcb);
        EXPECT(gbc.readMem(0xdd23), 0xef);
        // CB EF 0288
        gbc.setState(0xee38, 0x613c, 0x9af0, 0xf063, 0x4234, 0x933, 0x0, 0x0);
        gbc.writeMem(0xee38, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x613c);
        EXPECT(gbc.pc(), 0xee3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee38), 0xcb);
        EXPECT(gbc.readMem(0xee39), 0xef);
        // CB EF 0289
        gbc.setState(0xdbbb, 0xb1fd, 0xae50, 0xe22a, 0x54db, 0x8de8, 0x1, 0x1);
        gbc.writeMem(0xdbbb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb1fd);
        EXPECT(gbc.pc(), 0xdbbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbb), 0xcb);
        EXPECT(gbc.readMem(0xdbbc), 0xef);
        // CB EF 028A
        gbc.setState(0x6b0c, 0x3c76, 0x210, 0x8973, 0xb3a4, 0xc334, 0x0, 0x0);
        gbc.writeMem(0x6b0c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c76);
        EXPECT(gbc.pc(), 0x6b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 028B
        gbc.setState(0x362e, 0x441d, 0xfac0, 0xd413, 0x3ae7, 0x6e35, 0x0, 0x1);
        gbc.writeMem(0x362e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x441d);
        EXPECT(gbc.pc(), 0x3630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 028E
        gbc.setState(0xcfa2, 0x53f5, 0x4030, 0xb6b9, 0x3cc2, 0x5a3d, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x53f5);
        EXPECT(gbc.pc(), 0xcfa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa2), 0xcb);
        EXPECT(gbc.readMem(0xcfa3), 0xef);
        // CB EF 028F
        gbc.setState(0x1b9d, 0x3659, 0xbab0, 0xb0fa, 0x3cd5, 0xbdbe, 0x1, 0x1);
        gbc.writeMem(0x1b9d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3659);
        EXPECT(gbc.pc(), 0x1b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0290
        gbc.setState(0x829c, 0xd857, 0x4040, 0xc294, 0x48dd, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x829c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd857);
        EXPECT(gbc.pc(), 0x829e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829c), 0xcb);
        EXPECT(gbc.readMem(0x829d), 0xef);
        // CB EF 0291
        gbc.setState(0x9d11, 0x8a0c, 0xed00, 0xff58, 0x47f4, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x9d11, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8a0c);
        EXPECT(gbc.pc(), 0x9d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d11), 0xcb);
        EXPECT(gbc.readMem(0x9d12), 0xef);
        // CB EF 0292
        gbc.setState(0x1d26, 0x9bcb, 0x9b60, 0x8f5a, 0xe9fb, 0x4dbb, 0x0, 0x1);
        gbc.writeMem(0x1d26, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9bcb);
        EXPECT(gbc.pc(), 0x1d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0293
        gbc.setState(0x5430, 0xc1d5, 0x1060, 0x497, 0x90f6, 0xc5ac, 0x1, 0x1);
        gbc.writeMem(0x5430, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc1d5);
        EXPECT(gbc.pc(), 0x5432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0294
        gbc.setState(0xb023, 0x6834, 0xca40, 0x5fdc, 0xf0d7, 0x967, 0x0, 0x1);
        gbc.writeMem(0xb023, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6834);
        EXPECT(gbc.pc(), 0xb025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb023), 0xcb);
        EXPECT(gbc.readMem(0xb024), 0xef);
        // CB EF 0295
        gbc.setState(0xc20e, 0x48b3, 0x1920, 0x2885, 0xefe, 0x5b30, 0x1, 0x0);
        gbc.writeMem(0xc20e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x48b3);
        EXPECT(gbc.pc(), 0xc210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20e), 0xcb);
        EXPECT(gbc.readMem(0xc20f), 0xef);
        // CB EF 0296
        gbc.setState(0x6296, 0x43f1, 0x4ec0, 0x8a16, 0x8dfa, 0x680a, 0x0, 0x0);
        gbc.writeMem(0x6296, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x43f1);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0297
        gbc.setState(0x1c42, 0x7e8d, 0x50e0, 0x7fe1, 0x792a, 0x77d3, 0x1, 0x0);
        gbc.writeMem(0x1c42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7e8d);
        EXPECT(gbc.pc(), 0x1c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0298
        gbc.setState(0xa2cc, 0x3f82, 0xc170, 0x61b4, 0x31fa, 0x9222, 0x1, 0x1);
        gbc.writeMem(0xa2cc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3f82);
        EXPECT(gbc.pc(), 0xa2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2cc), 0xcb);
        EXPECT(gbc.readMem(0xa2cd), 0xef);
        // CB EF 0299
        gbc.setState(0x89ac, 0xd69b, 0x27b0, 0xba98, 0x709a, 0xe806, 0x1, 0x1);
        gbc.writeMem(0x89ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd69b);
        EXPECT(gbc.pc(), 0x89ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ac), 0xcb);
        EXPECT(gbc.readMem(0x89ad), 0xef);
        // CB EF 029A
        gbc.setState(0x5ad4, 0x885d, 0xedc0, 0xa86d, 0xf079, 0xd086, 0x1, 0x0);
        gbc.writeMem(0x5ad4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x885d);
        EXPECT(gbc.pc(), 0x5ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 029B
        gbc.setState(0x367b, 0xb376, 0xfe90, 0x5af0, 0x1272, 0x9078, 0x0, 0x0);
        gbc.writeMem(0x367b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb376);
        EXPECT(gbc.pc(), 0x367d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 029C
        gbc.setState(0xdce9, 0xb636, 0x90e0, 0x5c89, 0xcfe4, 0xbc5e, 0x1, 0x0);
        gbc.writeMem(0xdce9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb636);
        EXPECT(gbc.pc(), 0xdceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce9), 0xcb);
        EXPECT(gbc.readMem(0xdcea), 0xef);
        // CB EF 029D
        gbc.setState(0xd512, 0x98d3, 0x46e0, 0xa6df, 0xf7fe, 0x19d1, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x98d3);
        EXPECT(gbc.pc(), 0xd514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd512), 0xcb);
        EXPECT(gbc.readMem(0xd513), 0xef);
        // CB EF 029E
        gbc.setState(0x9c75, 0x52ab, 0x2ef0, 0x23ab, 0x7cdf, 0x13ee, 0x0, 0x1);
        gbc.writeMem(0x9c75, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c75), 0xcb);
        EXPECT(gbc.readMem(0x9c76), 0xef);
        // CB EF 029F
        gbc.setState(0x42b7, 0xefe9, 0xe6a0, 0xe970, 0x339a, 0x1038, 0x1, 0x0);
        gbc.writeMem(0x42b7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xefe9);
        EXPECT(gbc.pc(), 0x42b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02A0
        gbc.setState(0x28e, 0x2d63, 0x8c20, 0xaca0, 0xc96f, 0xf225, 0x1, 0x1);
        gbc.writeMem(0x28e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2d63);
        EXPECT(gbc.pc(), 0x290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02A1
        gbc.setState(0xb2de, 0xd677, 0xf970, 0x55e6, 0x62fa, 0xe5f9, 0x1, 0x1);
        gbc.writeMem(0xb2de, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd677);
        EXPECT(gbc.pc(), 0xb2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2de), 0xcb);
        EXPECT(gbc.readMem(0xb2df), 0xef);
        // CB EF 02A3
        gbc.setState(0xeeca, 0x33f0, 0xdd50, 0xe13a, 0x237, 0x370f, 0x0, 0x0);
        gbc.writeMem(0xeeca, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x33f0);
        EXPECT(gbc.pc(), 0xeecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeca), 0xcb);
        EXPECT(gbc.readMem(0xeecb), 0xef);
        // CB EF 02A4
        gbc.setState(0xcf23, 0x769a, 0x1df0, 0x7e2e, 0x6f2e, 0xe1e3, 0x0, 0x1);
        gbc.writeMem(0xcf23, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x769a);
        EXPECT(gbc.pc(), 0xcf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf23), 0xcb);
        EXPECT(gbc.readMem(0xcf24), 0xef);
        // CB EF 02A5
        gbc.setState(0xe1d2, 0xbd6e, 0x53a0, 0xc95e, 0xde03, 0x6c97, 0x1, 0x0);
        gbc.writeMem(0xe1d2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbd6e);
        EXPECT(gbc.pc(), 0xe1d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d2), 0xcb);
        EXPECT(gbc.readMem(0xe1d3), 0xef);
        // CB EF 02A6
        gbc.setState(0x78b8, 0x6bf2, 0x2ba0, 0x2b8f, 0x83d9, 0x5bbd, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6bf2);
        EXPECT(gbc.pc(), 0x78ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02A7
        gbc.setState(0xa3a7, 0xc2ca, 0x2b40, 0xb475, 0xe15c, 0xb3ef, 0x1, 0x0);
        gbc.writeMem(0xa3a7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc2ca);
        EXPECT(gbc.pc(), 0xa3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a7), 0xcb);
        EXPECT(gbc.readMem(0xa3a8), 0xef);
        // CB EF 02A8
        gbc.setState(0x1296, 0x61fe, 0x4e60, 0xb141, 0xf30c, 0x7d91, 0x0, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02A9
        gbc.setState(0xb40, 0x4210, 0x28e0, 0x89f4, 0x408e, 0xccf, 0x1, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4210);
        EXPECT(gbc.pc(), 0xb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02AA
        gbc.setState(0x3051, 0x71b9, 0x3f60, 0xaef9, 0x3eee, 0x2e0d, 0x0, 0x1);
        gbc.writeMem(0x3051, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x71b9);
        EXPECT(gbc.pc(), 0x3053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02AB
        gbc.setState(0x70b2, 0x3561, 0x4570, 0xef68, 0xb937, 0xc73b, 0x1, 0x1);
        gbc.writeMem(0x70b2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3561);
        EXPECT(gbc.pc(), 0x70b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02AC
        gbc.setState(0xc78c, 0x2ff7, 0xa390, 0x68fb, 0x7df0, 0xea78, 0x1, 0x0);
        gbc.writeMem(0xc78c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2ff7);
        EXPECT(gbc.pc(), 0xc78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc78c), 0xcb);
        EXPECT(gbc.readMem(0xc78d), 0xef);
        // CB EF 02AD
        gbc.setState(0x294, 0xab2b, 0x8070, 0x4f57, 0x5403, 0x266b, 0x0, 0x0);
        gbc.writeMem(0x294, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xab2b);
        EXPECT(gbc.pc(), 0x296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02AE
        gbc.setState(0xe11c, 0xea84, 0x1aa0, 0x7d08, 0x57de, 0x9c4a, 0x0, 0x0);
        gbc.writeMem(0xe11c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0xe11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11c), 0xcb);
        EXPECT(gbc.readMem(0xe11d), 0xef);
        // CB EF 02AF
        gbc.setState(0x9527, 0xffe7, 0x30f0, 0xe3f1, 0x6daa, 0xf807, 0x1, 0x0);
        gbc.writeMem(0x9527, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0x9529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9527), 0xcb);
        EXPECT(gbc.readMem(0x9528), 0xef);
        // CB EF 02B0
        gbc.setState(0x2c5b, 0xf1cb, 0xf590, 0xdf2e, 0xff2d, 0xd81, 0x0, 0x0);
        gbc.writeMem(0x2c5b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf1cb);
        EXPECT(gbc.pc(), 0x2c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02B1
        gbc.setState(0x6dbb, 0xa287, 0xef70, 0x49c7, 0x88b3, 0x9e40, 0x0, 0x1);
        gbc.writeMem(0x6dbb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa287);
        EXPECT(gbc.pc(), 0x6dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02B2
        gbc.setState(0x3ca3, 0x1d66, 0x91e0, 0xb2ac, 0x39c9, 0x4d22, 0x0, 0x1);
        gbc.writeMem(0x3ca3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1d66);
        EXPECT(gbc.pc(), 0x3ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02B3
        gbc.setState(0xa773, 0xf7ec, 0xbd20, 0x6787, 0xc50c, 0x842c, 0x1, 0x1);
        gbc.writeMem(0xa773, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf7ec);
        EXPECT(gbc.pc(), 0xa775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa773), 0xcb);
        EXPECT(gbc.readMem(0xa774), 0xef);
        // CB EF 02B4
        gbc.setState(0xbcad, 0xc0ee, 0xfe80, 0x72e6, 0xb28, 0xd2f6, 0x0, 0x0);
        gbc.writeMem(0xbcad, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc0ee);
        EXPECT(gbc.pc(), 0xbcaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcad), 0xcb);
        EXPECT(gbc.readMem(0xbcae), 0xef);
        // CB EF 02B5
        gbc.setState(0x1191, 0xd11, 0x2160, 0xdd3f, 0x8287, 0xb981, 0x1, 0x1);
        gbc.writeMem(0x1191, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd11);
        EXPECT(gbc.pc(), 0x1193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02B6
        gbc.setState(0x5d66, 0xeb6e, 0x3040, 0x597a, 0x716f, 0x6651, 0x1, 0x1);
        gbc.writeMem(0x5d66, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeb6e);
        EXPECT(gbc.pc(), 0x5d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02B7
        gbc.setState(0x41bb, 0xe589, 0x77e0, 0xf6ea, 0xa347, 0x5619, 0x0, 0x1);
        gbc.writeMem(0x41bb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe589);
        EXPECT(gbc.pc(), 0x41bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02B8
        gbc.setState(0x42b9, 0x14, 0x6b40, 0xd0cf, 0x74f2, 0xe3ff, 0x0, 0x0);
        gbc.writeMem(0x42b9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x14);
        EXPECT(gbc.pc(), 0x42bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02B9
        gbc.setState(0xd155, 0x9ddf, 0x8780, 0xfa72, 0x306c, 0x27fa, 0x0, 0x0);
        gbc.writeMem(0xd155, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9ddf);
        EXPECT(gbc.pc(), 0xd157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd155), 0xcb);
        EXPECT(gbc.readMem(0xd156), 0xef);
        // CB EF 02BA
        gbc.setState(0x66a3, 0xf590, 0xb410, 0xd1cf, 0xd7ec, 0x42d4, 0x1, 0x1);
        gbc.writeMem(0x66a3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf590);
        EXPECT(gbc.pc(), 0x66a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02BB
        gbc.setState(0x7a88, 0x96cf, 0xed20, 0x880a, 0x7eae, 0x9e69, 0x1, 0x1);
        gbc.writeMem(0x7a88, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x96cf);
        EXPECT(gbc.pc(), 0x7a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02BC
        gbc.setState(0xd37d, 0x9246, 0x460, 0x5d4a, 0x4a29, 0x78ad, 0x1, 0x0);
        gbc.writeMem(0xd37d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9246);
        EXPECT(gbc.pc(), 0xd37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37d), 0xcb);
        EXPECT(gbc.readMem(0xd37e), 0xef);
        // CB EF 02BD
        gbc.setState(0x73ec, 0xf0da, 0x27b0, 0x8950, 0x24a8, 0x7b23, 0x0, 0x1);
        gbc.writeMem(0x73ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf0da);
        EXPECT(gbc.pc(), 0x73ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02BE
        gbc.setState(0xd530, 0xb5b6, 0x6530, 0x3a4f, 0xf, 0xcb62, 0x0, 0x0);
        gbc.writeMem(0xd530, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb5b6);
        EXPECT(gbc.pc(), 0xd532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd530), 0xcb);
        EXPECT(gbc.readMem(0xd531), 0xef);
        // CB EF 02BF
        gbc.setState(0x2a40, 0xaa0a, 0xf1b0, 0x6f9, 0xac5e, 0xa64, 0x0, 0x0);
        gbc.writeMem(0x2a40, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaa0a);
        EXPECT(gbc.pc(), 0x2a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02C0
        gbc.setState(0x9cc7, 0xe08a, 0x7150, 0x8f8f, 0x59dd, 0x280b, 0x1, 0x0);
        gbc.writeMem(0x9cc7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x9cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc7), 0xcb);
        EXPECT(gbc.readMem(0x9cc8), 0xef);
        // CB EF 02C1
        gbc.setState(0x13ae, 0x7e04, 0x6940, 0xe41a, 0x1caf, 0x70f9, 0x1, 0x1);
        gbc.writeMem(0x13ae, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0x13b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02C2
        gbc.setState(0x38ea, 0xa852, 0xfc20, 0xf082, 0x6f6, 0x7832, 0x0, 0x1);
        gbc.writeMem(0x38ea, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa852);
        EXPECT(gbc.pc(), 0x38ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02C3
        gbc.setState(0xaf13, 0x6192, 0xaf20, 0x78a8, 0x4ef2, 0xa0ed, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6192);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0xef);
        // CB EF 02C4
        gbc.setState(0xebff, 0xa99e, 0x5c90, 0xa50c, 0x29a4, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0xebff, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa99e);
        EXPECT(gbc.pc(), 0xec01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebff), 0xcb);
        EXPECT(gbc.readMem(0xec00), 0xef);
        // CB EF 02C5
        gbc.setState(0xf4b, 0xb94a, 0x6c30, 0xa980, 0x9371, 0x560c, 0x0, 0x1);
        gbc.writeMem(0xf4b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb94a);
        EXPECT(gbc.pc(), 0xf4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02C7
        gbc.setState(0x90a6, 0x32e6, 0xabb0, 0x6793, 0x5320, 0x9e4c, 0x0, 0x0);
        gbc.writeMem(0x90a6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x32e6);
        EXPECT(gbc.pc(), 0x90a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a6), 0xcb);
        EXPECT(gbc.readMem(0x90a7), 0xef);
        // CB EF 02C8
        gbc.setState(0x4dd6, 0xf4ee, 0x3e10, 0x6fb9, 0x89, 0x236e, 0x1, 0x1);
        gbc.writeMem(0x4dd6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf4ee);
        EXPECT(gbc.pc(), 0x4dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02C9
        gbc.setState(0x47f1, 0x871f, 0xf4c0, 0x9cb8, 0xf5f7, 0xd891, 0x1, 0x1);
        gbc.writeMem(0x47f1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x871f);
        EXPECT(gbc.pc(), 0x47f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02CA
        gbc.setState(0x4395, 0x11ef, 0x8d00, 0xfbce, 0x95f, 0xbe0b, 0x1, 0x0);
        gbc.writeMem(0x4395, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x11ef);
        EXPECT(gbc.pc(), 0x4397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02CB
        gbc.setState(0x43ea, 0xcf8f, 0x9010, 0xdcbe, 0xfef5, 0x848d, 0x0, 0x1);
        gbc.writeMem(0x43ea, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02CC
        gbc.setState(0x444a, 0xd270, 0x3ff0, 0xe896, 0x478c, 0x9005, 0x1, 0x0);
        gbc.writeMem(0x444a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd270);
        EXPECT(gbc.pc(), 0x444c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02CD
        gbc.setState(0x3acd, 0x1d6f, 0x8a00, 0x88b1, 0x8b73, 0x4d8a, 0x1, 0x0);
        gbc.writeMem(0x3acd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1d6f);
        EXPECT(gbc.pc(), 0x3acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02CE
        gbc.setState(0x4ab8, 0x457b, 0x580, 0x193b, 0xc3f0, 0x631, 0x1, 0x1);
        gbc.writeMem(0x4ab8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x457b);
        EXPECT(gbc.pc(), 0x4aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02CF
        gbc.setState(0xa9f4, 0x47be, 0x1390, 0xdaba, 0x3592, 0x7005, 0x0, 0x1);
        gbc.writeMem(0xa9f4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x47be);
        EXPECT(gbc.pc(), 0xa9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f4), 0xcb);
        EXPECT(gbc.readMem(0xa9f5), 0xef);
        // CB EF 02D0
        gbc.setState(0xbf44, 0x7740, 0x1a40, 0x4f9e, 0x6bac, 0x75d4, 0x1, 0x0);
        gbc.writeMem(0xbf44, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7740);
        EXPECT(gbc.pc(), 0xbf46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf44), 0xcb);
        EXPECT(gbc.readMem(0xbf45), 0xef);
        // CB EF 02D1
        gbc.setState(0x912c, 0xc477, 0x8380, 0xdc0, 0xe81b, 0xe44, 0x0, 0x1);
        gbc.writeMem(0x912c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc477);
        EXPECT(gbc.pc(), 0x912e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912c), 0xcb);
        EXPECT(gbc.readMem(0x912d), 0xef);
        // CB EF 02D2
        gbc.setState(0x2320, 0x1752, 0x9230, 0xa241, 0x7833, 0x9e61, 0x1, 0x0);
        gbc.writeMem(0x2320, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1752);
        EXPECT(gbc.pc(), 0x2322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02D3
        gbc.setState(0x6d17, 0x122, 0x35d0, 0x6dd8, 0xc175, 0xcf8, 0x0, 0x1);
        gbc.writeMem(0x6d17, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x122);
        EXPECT(gbc.pc(), 0x6d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02D4
        gbc.setState(0x535, 0x9ba1, 0x63a0, 0xefaa, 0x97b4, 0xd419, 0x0, 0x0);
        gbc.writeMem(0x535, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9ba1);
        EXPECT(gbc.pc(), 0x537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02D5
        gbc.setState(0x4d31, 0x2fb7, 0x6980, 0x2243, 0xf1d0, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2fb7);
        EXPECT(gbc.pc(), 0x4d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02D6
        gbc.setState(0xb920, 0xff39, 0xc7c0, 0xddf0, 0xbfb8, 0x39bd, 0x0, 0x1);
        gbc.writeMem(0xb920, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xff39);
        EXPECT(gbc.pc(), 0xb922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb920), 0xcb);
        EXPECT(gbc.readMem(0xb921), 0xef);
        // CB EF 02D7
        gbc.setState(0x6e59, 0x850d, 0xcee0, 0x28d7, 0x4aca, 0x8338, 0x0, 0x1);
        gbc.writeMem(0x6e59, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x6e5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02D9
        gbc.setState(0xa0b1, 0x53a9, 0xa4f0, 0x69c4, 0x192c, 0xcd8f, 0x0, 0x1);
        gbc.writeMem(0xa0b1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x53a9);
        EXPECT(gbc.pc(), 0xa0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b1), 0xcb);
        EXPECT(gbc.readMem(0xa0b2), 0xef);
        // CB EF 02DA
        gbc.setState(0xe23f, 0x1b59, 0xf590, 0x68bc, 0xd563, 0x545b, 0x1, 0x0);
        gbc.writeMem(0xe23f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1b59);
        EXPECT(gbc.pc(), 0xe241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23f), 0xcb);
        EXPECT(gbc.readMem(0xe240), 0xef);
        // CB EF 02DB
        gbc.setState(0xdbd8, 0xdb76, 0xbf80, 0xabe2, 0x4593, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xdbd8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdb76);
        EXPECT(gbc.pc(), 0xdbda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd8), 0xcb);
        EXPECT(gbc.readMem(0xdbd9), 0xef);
        // CB EF 02DC
        gbc.setState(0x3eee, 0xcdfa, 0xad90, 0x4025, 0x6fb2, 0x7312, 0x0, 0x1);
        gbc.writeMem(0x3eee, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcdfa);
        EXPECT(gbc.pc(), 0x3ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02DD
        gbc.setState(0x2dfd, 0xf7d0, 0x9970, 0x444a, 0x5d87, 0xfb64, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf7d0);
        EXPECT(gbc.pc(), 0x2dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02DE
        gbc.setState(0x43dc, 0x4ede, 0x2ce0, 0x9085, 0xfcec, 0x8ce, 0x0, 0x1);
        gbc.writeMem(0x43dc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4ede);
        EXPECT(gbc.pc(), 0x43de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02E0
        gbc.setState(0x493d, 0xecd7, 0xec50, 0x2d15, 0xdc68, 0x5b8, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xecd7);
        EXPECT(gbc.pc(), 0x493f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02E1
        gbc.setState(0x52a3, 0x9815, 0x40b0, 0xdf3c, 0x4458, 0xc6c8, 0x1, 0x1);
        gbc.writeMem(0x52a3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0x52a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02E2
        gbc.setState(0x5e58, 0xfded, 0x5b60, 0x1c8, 0xdf0, 0x55fa, 0x0, 0x0);
        gbc.writeMem(0x5e58, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfded);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02E3
        gbc.setState(0xc54a, 0x4f43, 0xb030, 0x74e7, 0xd51d, 0x8276, 0x1, 0x1);
        gbc.writeMem(0xc54a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4f43);
        EXPECT(gbc.pc(), 0xc54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc54a), 0xcb);
        EXPECT(gbc.readMem(0xc54b), 0xef);
        // CB EF 02E4
        gbc.setState(0x4a3b, 0xa6de, 0xfba0, 0x43a1, 0xf165, 0xd3a3, 0x0, 0x1);
        gbc.writeMem(0x4a3b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa6de);
        EXPECT(gbc.pc(), 0x4a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02E5
        gbc.setState(0xe10a, 0x6fee, 0x4ab0, 0x4a2c, 0x6478, 0x8cb, 0x0, 0x1);
        gbc.writeMem(0xe10a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6fee);
        EXPECT(gbc.pc(), 0xe10c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10a), 0xcb);
        EXPECT(gbc.readMem(0xe10b), 0xef);
        // CB EF 02E6
        gbc.setState(0x63ce, 0x70ae, 0x690, 0x979c, 0xf028, 0xe86, 0x1, 0x0);
        gbc.writeMem(0x63ce, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x70ae);
        EXPECT(gbc.pc(), 0x63d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02E7
        gbc.setState(0xa0ec, 0xa62e, 0xd40, 0x3fac, 0xf676, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xa0ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa62e);
        EXPECT(gbc.pc(), 0xa0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ec), 0xcb);
        EXPECT(gbc.readMem(0xa0ed), 0xef);
        // CB EF 02E8
        gbc.setState(0xdc19, 0x38dc, 0x9e70, 0x9004, 0x1d0f, 0xa4df, 0x0, 0x1);
        gbc.writeMem(0xdc19, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0xdc1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc19), 0xcb);
        EXPECT(gbc.readMem(0xdc1a), 0xef);
        // CB EF 02E9
        gbc.setState(0x42a5, 0xbc0a, 0xa340, 0xc60c, 0x9612, 0x79ae, 0x1, 0x1);
        gbc.writeMem(0x42a5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbc0a);
        EXPECT(gbc.pc(), 0x42a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02EA
        gbc.setState(0x1786, 0xb91e, 0xe2e0, 0x4fe1, 0x6e0e, 0x353f, 0x1, 0x0);
        gbc.writeMem(0x1786, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb91e);
        EXPECT(gbc.pc(), 0x1788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02EB
        gbc.setState(0x4477, 0x1220, 0x3190, 0xaadd, 0x2b85, 0x9f69, 0x0, 0x0);
        gbc.writeMem(0x4477, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1220);
        EXPECT(gbc.pc(), 0x4479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02EC
        gbc.setState(0x2d0d, 0xd4c7, 0xe070, 0x1790, 0x83d9, 0xee04, 0x1, 0x1);
        gbc.writeMem(0x2d0d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd4c7);
        EXPECT(gbc.pc(), 0x2d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02ED
        gbc.setState(0xe9c5, 0x2613, 0x7800, 0x2f45, 0x5e31, 0x9b2d, 0x1, 0x0);
        gbc.writeMem(0xe9c5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2613);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c5), 0xcb);
        EXPECT(gbc.readMem(0xe9c6), 0xef);
        // CB EF 02EE
        gbc.setState(0x271e, 0x47ae, 0x6640, 0xb88e, 0xc21, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x271e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x47ae);
        EXPECT(gbc.pc(), 0x2720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02EF
        gbc.setState(0x265b, 0x2b, 0xf790, 0x9045, 0x62e2, 0xe024, 0x0, 0x0);
        gbc.writeMem(0x265b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2b);
        EXPECT(gbc.pc(), 0x265d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02F0
        gbc.setState(0x661, 0x9d3e, 0x19c0, 0x2547, 0x841c, 0x8c8b, 0x1, 0x1);
        gbc.writeMem(0x661, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9d3e);
        EXPECT(gbc.pc(), 0x663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02F1
        gbc.setState(0x846, 0x11dc, 0x5220, 0x7e68, 0xb61, 0x3a35, 0x1, 0x1);
        gbc.writeMem(0x846, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x11dc);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02F2
        gbc.setState(0x77d0, 0x1331, 0xaa70, 0x3127, 0xa06d, 0xadd2, 0x0, 0x0);
        gbc.writeMem(0x77d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1331);
        EXPECT(gbc.pc(), 0x77d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02F3
        gbc.setState(0x4a5e, 0x805, 0x3f40, 0xc8a5, 0xebc, 0x18d0, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x805);
        EXPECT(gbc.pc(), 0x4a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 02F4
        gbc.setState(0xac2a, 0x9285, 0x3290, 0x2a79, 0xba5b, 0x33e6, 0x0, 0x1);
        gbc.writeMem(0xac2a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9285);
        EXPECT(gbc.pc(), 0xac2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2a), 0xcb);
        EXPECT(gbc.readMem(0xac2b), 0xef);
        // CB EF 02F5
        gbc.setState(0x304, 0x6766, 0xd170, 0x3256, 0x8e40, 0x56e4, 0x0, 0x1);
        gbc.writeMem(0x304, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6766);
        EXPECT(gbc.pc(), 0x306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02F6
        gbc.setState(0x5b60, 0xb486, 0xd170, 0xd9c3, 0x518b, 0x8875, 0x1, 0x1);
        gbc.writeMem(0x5b60, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0x5b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02F7
        gbc.setState(0xd54e, 0x5431, 0xf130, 0x2375, 0x91d5, 0x130a, 0x1, 0x1);
        gbc.writeMem(0xd54e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5431);
        EXPECT(gbc.pc(), 0xd550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54e), 0xcb);
        EXPECT(gbc.readMem(0xd54f), 0xef);
        // CB EF 02F9
        gbc.setState(0xd69e, 0x82d4, 0x6ec0, 0x929e, 0x2d28, 0xb277, 0x0, 0x1);
        gbc.writeMem(0xd69e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x82d4);
        EXPECT(gbc.pc(), 0xd6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69e), 0xcb);
        EXPECT(gbc.readMem(0xd69f), 0xef);
        // CB EF 02FA
        gbc.setState(0x70b1, 0xa847, 0x6410, 0x4e54, 0x2473, 0xd495, 0x1, 0x0);
        gbc.writeMem(0x70b1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa847);
        EXPECT(gbc.pc(), 0x70b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02FB
        gbc.setState(0xa24d, 0xcfef, 0xfe20, 0x6db, 0x562e, 0x6f6b, 0x0, 0x1);
        gbc.writeMem(0xa24d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcfef);
        EXPECT(gbc.pc(), 0xa24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24d), 0xcb);
        EXPECT(gbc.readMem(0xa24e), 0xef);
        // CB EF 02FC
        gbc.setState(0x58a4, 0xaa05, 0xd2b0, 0x3d3f, 0xc8d0, 0x2053, 0x1, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaa05);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 02FD
        gbc.setState(0x8525, 0x2e69, 0x23a0, 0xf97f, 0x2ed9, 0x47b7, 0x1, 0x0);
        gbc.writeMem(0x8525, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2e69);
        EXPECT(gbc.pc(), 0x8527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8525), 0xcb);
        EXPECT(gbc.readMem(0x8526), 0xef);
        // CB EF 02FE
        gbc.setState(0xd3e5, 0xa934, 0xcb60, 0xc16c, 0xff3, 0x76f6, 0x0, 0x1);
        gbc.writeMem(0xd3e5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa934);
        EXPECT(gbc.pc(), 0xd3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e5), 0xcb);
        EXPECT(gbc.readMem(0xd3e6), 0xef);
        // CB EF 02FF
        gbc.setState(0x1eab, 0xc980, 0xff0, 0x715c, 0xc219, 0x115b, 0x0, 0x1);
        gbc.writeMem(0x1eab, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc980);
        EXPECT(gbc.pc(), 0x1ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0300
        gbc.setState(0xb642, 0x1415, 0x5410, 0x2793, 0x91e0, 0x7fed, 0x1, 0x0);
        gbc.writeMem(0xb642, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1415);
        EXPECT(gbc.pc(), 0xb644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb642), 0xcb);
        EXPECT(gbc.readMem(0xb643), 0xef);
        // CB EF 0301
        gbc.setState(0x8264, 0x41c, 0xd650, 0x58f5, 0x5ae1, 0xbb4, 0x0, 0x0);
        gbc.writeMem(0x8264, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x41c);
        EXPECT(gbc.pc(), 0x8266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8264), 0xcb);
        EXPECT(gbc.readMem(0x8265), 0xef);
        // CB EF 0302
        gbc.setState(0xa1fb, 0xf963, 0x88e0, 0xd406, 0x8abe, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0xa1fb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf963);
        EXPECT(gbc.pc(), 0xa1fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fb), 0xcb);
        EXPECT(gbc.readMem(0xa1fc), 0xef);
        // CB EF 0303
        gbc.setState(0xda21, 0x8e09, 0x14d0, 0xab3a, 0x8b29, 0xee77, 0x1, 0x1);
        gbc.writeMem(0xda21, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8e09);
        EXPECT(gbc.pc(), 0xda23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda21), 0xcb);
        EXPECT(gbc.readMem(0xda22), 0xef);
        // CB EF 0304
        gbc.setState(0xe915, 0xae2c, 0xe0c0, 0xabd, 0x40ed, 0x4e07, 0x1, 0x1);
        gbc.writeMem(0xe915, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xae2c);
        EXPECT(gbc.pc(), 0xe917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe915), 0xcb);
        EXPECT(gbc.readMem(0xe916), 0xef);
        // CB EF 0305
        gbc.setState(0x8c42, 0x2f47, 0xb960, 0xa0a2, 0x6eab, 0xae7e, 0x1, 0x1);
        gbc.writeMem(0x8c42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2f47);
        EXPECT(gbc.pc(), 0x8c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c42), 0xcb);
        EXPECT(gbc.readMem(0x8c43), 0xef);
        // CB EF 0306
        gbc.setState(0xe021, 0xbd9f, 0xb180, 0xadfa, 0xdb34, 0x421, 0x1, 0x1);
        gbc.writeMem(0xe021, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd9f);
        EXPECT(gbc.pc(), 0xe023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe021), 0xcb);
        EXPECT(gbc.readMem(0xe022), 0xef);
        // CB EF 0307
        gbc.setState(0x6652, 0xa5d5, 0xf200, 0x5ff1, 0xc18b, 0xfad1, 0x0, 0x1);
        gbc.writeMem(0x6652, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa5d5);
        EXPECT(gbc.pc(), 0x6654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0308
        gbc.setState(0xa1f6, 0x791c, 0x8c70, 0xfc13, 0xaf4, 0xf682, 0x0, 0x1);
        gbc.writeMem(0xa1f6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x791c);
        EXPECT(gbc.pc(), 0xa1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f6), 0xcb);
        EXPECT(gbc.readMem(0xa1f7), 0xef);
        // CB EF 0309
        gbc.setState(0x9066, 0x21c4, 0x29c0, 0x64f0, 0xca81, 0x1261, 0x1, 0x1);
        gbc.writeMem(0x9066, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0x9068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9066), 0xcb);
        EXPECT(gbc.readMem(0x9067), 0xef);
        // CB EF 030A
        gbc.setState(0xd6c8, 0x6295, 0xe8b0, 0x7c69, 0x9f63, 0x1c8d, 0x0, 0x1);
        gbc.writeMem(0xd6c8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6295);
        EXPECT(gbc.pc(), 0xd6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c8), 0xcb);
        EXPECT(gbc.readMem(0xd6c9), 0xef);
        // CB EF 030B
        gbc.setState(0x51e3, 0x83d2, 0xf4a0, 0x2f86, 0xdfab, 0xaf1d, 0x1, 0x1);
        gbc.writeMem(0x51e3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x83d2);
        EXPECT(gbc.pc(), 0x51e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 030C
        gbc.setState(0xc0a8, 0xa23, 0x1890, 0xd827, 0x7d5d, 0x75ac, 0x1, 0x0);
        gbc.writeMem(0xc0a8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa23);
        EXPECT(gbc.pc(), 0xc0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a8), 0xcb);
        EXPECT(gbc.readMem(0xc0a9), 0xef);
        // CB EF 030D
        gbc.setState(0x1ea8, 0x41da, 0x57b0, 0xa33, 0xe1e8, 0xad5c, 0x1, 0x0);
        gbc.writeMem(0x1ea8, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x41da);
        EXPECT(gbc.pc(), 0x1eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 030E
        gbc.setState(0xee3d, 0x7499, 0x6e10, 0xd250, 0xf5d0, 0x6bed, 0x0, 0x0);
        gbc.writeMem(0xee3d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0xee3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3d), 0xcb);
        EXPECT(gbc.readMem(0xee3e), 0xef);
        // CB EF 030F
        gbc.setState(0x9211, 0xe011, 0x8470, 0xa413, 0xc78a, 0x141a, 0x0, 0x0);
        gbc.writeMem(0x9211, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe011);
        EXPECT(gbc.pc(), 0x9213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9211), 0xcb);
        EXPECT(gbc.readMem(0x9212), 0xef);
        // CB EF 0310
        gbc.setState(0xbd69, 0x524b, 0x7450, 0x8caf, 0x8d83, 0xe988, 0x1, 0x0);
        gbc.writeMem(0xbd69, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x524b);
        EXPECT(gbc.pc(), 0xbd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd69), 0xcb);
        EXPECT(gbc.readMem(0xbd6a), 0xef);
        // CB EF 0311
        gbc.setState(0x53a3, 0xeedc, 0x2220, 0x34a8, 0x1cf1, 0xe6b1, 0x1, 0x1);
        gbc.writeMem(0x53a3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xeedc);
        EXPECT(gbc.pc(), 0x53a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0312
        gbc.setState(0xc06c, 0x42e6, 0xae70, 0xfd07, 0xf6c5, 0x9647, 0x0, 0x0);
        gbc.writeMem(0xc06c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x42e6);
        EXPECT(gbc.pc(), 0xc06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc06c), 0xcb);
        EXPECT(gbc.readMem(0xc06d), 0xef);
        // CB EF 0313
        gbc.setState(0x2273, 0x8788, 0x7340, 0xad1a, 0x35dd, 0x6f6d, 0x0, 0x1);
        gbc.writeMem(0x2273, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8788);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0314
        gbc.setState(0xa406, 0x643d, 0xc120, 0xde6d, 0xadc3, 0x8589, 0x1, 0x1);
        gbc.writeMem(0xa406, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x643d);
        EXPECT(gbc.pc(), 0xa408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa406), 0xcb);
        EXPECT(gbc.readMem(0xa407), 0xef);
        // CB EF 0315
        gbc.setState(0x3396, 0x6559, 0x3ed0, 0x754c, 0xce06, 0x1d88, 0x1, 0x0);
        gbc.writeMem(0x3396, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6559);
        EXPECT(gbc.pc(), 0x3398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0316
        gbc.setState(0x688, 0xd637, 0xf8c0, 0x5fc1, 0x418b, 0xdac, 0x0, 0x1);
        gbc.writeMem(0x688, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd637);
        EXPECT(gbc.pc(), 0x68a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0317
        gbc.setState(0x9a73, 0x1dd8, 0x7f90, 0x881c, 0xe576, 0x8310, 0x0, 0x0);
        gbc.writeMem(0x9a73, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1dd8);
        EXPECT(gbc.pc(), 0x9a75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a73), 0xcb);
        EXPECT(gbc.readMem(0x9a74), 0xef);
        // CB EF 0318
        gbc.setState(0x6e97, 0x6bdb, 0x7ad0, 0x9b07, 0xce12, 0xf377, 0x0, 0x1);
        gbc.writeMem(0x6e97, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6bdb);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0319
        gbc.setState(0xb1b0, 0xe689, 0xfb00, 0xd88b, 0x6792, 0x2481, 0x1, 0x1);
        gbc.writeMem(0xb1b0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe689);
        EXPECT(gbc.pc(), 0xb1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b0), 0xcb);
        EXPECT(gbc.readMem(0xb1b1), 0xef);
        // CB EF 031A
        gbc.setState(0xac26, 0x74ad, 0xe40, 0x1df5, 0x7607, 0xd04a, 0x0, 0x1);
        gbc.writeMem(0xac26, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x74ad);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac26), 0xcb);
        EXPECT(gbc.readMem(0xac27), 0xef);
        // CB EF 031B
        gbc.setState(0x692a, 0x8e9, 0xd800, 0xae56, 0x5a3e, 0x960d, 0x1, 0x1);
        gbc.writeMem(0x692a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8e9);
        EXPECT(gbc.pc(), 0x692c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 031C
        gbc.setState(0xc89a, 0x11d2, 0x89e0, 0xa966, 0x9e6b, 0x1f63, 0x1, 0x0);
        gbc.writeMem(0xc89a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x11d2);
        EXPECT(gbc.pc(), 0xc89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89a), 0xcb);
        EXPECT(gbc.readMem(0xc89b), 0xef);
        // CB EF 031D
        gbc.setState(0x6ef2, 0x20c6, 0x24e0, 0x72ef, 0xc14b, 0xfdd8, 0x1, 0x1);
        gbc.writeMem(0x6ef2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x20c6);
        EXPECT(gbc.pc(), 0x6ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 031E
        gbc.setState(0xab56, 0x2881, 0xba00, 0x67b2, 0xb1fc, 0xcd89, 0x0, 0x1);
        gbc.writeMem(0xab56, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2881);
        EXPECT(gbc.pc(), 0xab58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab56), 0xcb);
        EXPECT(gbc.readMem(0xab57), 0xef);
        // CB EF 031F
        gbc.setState(0x87af, 0xc9d7, 0xd990, 0x936e, 0xce8d, 0x4cb, 0x1, 0x0);
        gbc.writeMem(0x87af, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc9d7);
        EXPECT(gbc.pc(), 0x87b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87af), 0xcb);
        EXPECT(gbc.readMem(0x87b0), 0xef);
        // CB EF 0320
        gbc.setState(0xc638, 0x5fa7, 0x73c0, 0x590, 0xf44e, 0x37f7, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5fa7);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0xef);
        // CB EF 0322
        gbc.setState(0xd163, 0xb574, 0xf1e0, 0xd9fa, 0x90c1, 0x70d7, 0x1, 0x1);
        gbc.writeMem(0xd163, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb574);
        EXPECT(gbc.pc(), 0xd165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd163), 0xcb);
        EXPECT(gbc.readMem(0xd164), 0xef);
        // CB EF 0323
        gbc.setState(0xd024, 0xa7ef, 0x6ed0, 0x3dfa, 0x3e37, 0x1c6, 0x1, 0x0);
        gbc.writeMem(0xd024, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa7ef);
        EXPECT(gbc.pc(), 0xd026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd024), 0xcb);
        EXPECT(gbc.readMem(0xd025), 0xef);
        // CB EF 0324
        gbc.setState(0xb6fa, 0x96a2, 0xf010, 0xeb2c, 0xc440, 0x6c61, 0x0, 0x1);
        gbc.writeMem(0xb6fa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96a2);
        EXPECT(gbc.pc(), 0xb6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6fa), 0xcb);
        EXPECT(gbc.readMem(0xb6fb), 0xef);
        // CB EF 0325
        gbc.setState(0x9011, 0xeb, 0x5cf0, 0xf32a, 0x9fd4, 0x30aa, 0x0, 0x0);
        gbc.writeMem(0x9011, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0x9013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9011), 0xcb);
        EXPECT(gbc.readMem(0x9012), 0xef);
        // CB EF 0326
        gbc.setState(0x90ee, 0x61cf, 0xf800, 0x6335, 0x2c02, 0x479c, 0x0, 0x0);
        gbc.writeMem(0x90ee, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x61cf);
        EXPECT(gbc.pc(), 0x90f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ee), 0xcb);
        EXPECT(gbc.readMem(0x90ef), 0xef);
        // CB EF 0327
        gbc.setState(0x3bbe, 0x1af1, 0x410, 0x9020, 0xdf75, 0x1e55, 0x0, 0x1);
        gbc.writeMem(0x3bbe, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1af1);
        EXPECT(gbc.pc(), 0x3bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0328
        gbc.setState(0xd470, 0xc758, 0xffe0, 0xeadc, 0xc6d5, 0x4d1d, 0x1, 0x1);
        gbc.writeMem(0xd470, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc758);
        EXPECT(gbc.pc(), 0xd472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd470), 0xcb);
        EXPECT(gbc.readMem(0xd471), 0xef);
        // CB EF 0329
        gbc.setState(0x5580, 0x5527, 0x5ae0, 0xfa9c, 0x9766, 0x8820, 0x1, 0x1);
        gbc.writeMem(0x5580, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5527);
        EXPECT(gbc.pc(), 0x5582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 032A
        gbc.setState(0xe61c, 0xfa0f, 0xb000, 0x5ec7, 0x2f08, 0x9dbc, 0x1, 0x0);
        gbc.writeMem(0xe61c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfa0f);
        EXPECT(gbc.pc(), 0xe61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61c), 0xcb);
        EXPECT(gbc.readMem(0xe61d), 0xef);
        // CB EF 032B
        gbc.setState(0x865b, 0x6fb9, 0x2fa0, 0x1272, 0x31f6, 0x9d46, 0x0, 0x0);
        gbc.writeMem(0x865b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6fb9);
        EXPECT(gbc.pc(), 0x865d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865b), 0xcb);
        EXPECT(gbc.readMem(0x865c), 0xef);
        // CB EF 032C
        gbc.setState(0x3f77, 0x4d49, 0x12e0, 0x83f5, 0x9ecd, 0x52c0, 0x0, 0x0);
        gbc.writeMem(0x3f77, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4d49);
        EXPECT(gbc.pc(), 0x3f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 032D
        gbc.setState(0xc25d, 0xa399, 0x4170, 0x75f6, 0xf9b, 0xee2f, 0x1, 0x1);
        gbc.writeMem(0xc25d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa399);
        EXPECT(gbc.pc(), 0xc25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25d), 0xcb);
        EXPECT(gbc.readMem(0xc25e), 0xef);
        // CB EF 032E
        gbc.setState(0x96d3, 0x7abc, 0xaed0, 0x40d2, 0xe240, 0xab3e, 0x0, 0x1);
        gbc.writeMem(0x96d3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7abc);
        EXPECT(gbc.pc(), 0x96d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d3), 0xcb);
        EXPECT(gbc.readMem(0x96d4), 0xef);
        // CB EF 0330
        gbc.setState(0xcb42, 0x5518, 0xc270, 0xf8bc, 0x8adb, 0xc24c, 0x0, 0x1);
        gbc.writeMem(0xcb42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5518);
        EXPECT(gbc.pc(), 0xcb44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb42), 0xcb);
        EXPECT(gbc.readMem(0xcb43), 0xef);
        // CB EF 0331
        gbc.setState(0xd2af, 0xb946, 0xd840, 0x143c, 0xa0e6, 0xb8cb, 0x0, 0x1);
        gbc.writeMem(0xd2af, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb946);
        EXPECT(gbc.pc(), 0xd2b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2af), 0xcb);
        EXPECT(gbc.readMem(0xd2b0), 0xef);
        // CB EF 0332
        gbc.setState(0x4a25, 0xd78, 0x5530, 0x5090, 0xd981, 0xaa2f, 0x0, 0x0);
        gbc.writeMem(0x4a25, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd78);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0333
        gbc.setState(0xe0, 0xf093, 0xc6d0, 0x4c74, 0x278f, 0x4d54, 0x1, 0x0);
        gbc.writeMem(0xe0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf093);
        EXPECT(gbc.pc(), 0xe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0334
        gbc.setState(0x7efa, 0xfe7b, 0xa150, 0x7d, 0x57a6, 0xd6b6, 0x0, 0x1);
        gbc.writeMem(0x7efa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0x7efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0335
        gbc.setState(0x3736, 0xea31, 0x7100, 0x697e, 0xce8c, 0xb45d, 0x1, 0x1);
        gbc.writeMem(0x3736, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0x3738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0336
        gbc.setState(0xdc3c, 0xc562, 0x4690, 0x4413, 0xff70, 0x1e5, 0x1, 0x1);
        gbc.writeMem(0xdc3c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc562);
        EXPECT(gbc.pc(), 0xdc3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3c), 0xcb);
        EXPECT(gbc.readMem(0xdc3d), 0xef);
        // CB EF 0337
        gbc.setState(0x9785, 0x280e, 0x8600, 0x2b3b, 0xff13, 0x4fdb, 0x0, 0x0);
        gbc.writeMem(0x9785, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x280e);
        EXPECT(gbc.pc(), 0x9787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9785), 0xcb);
        EXPECT(gbc.readMem(0x9786), 0xef);
        // CB EF 0338
        gbc.setState(0x125, 0x282f, 0xc340, 0x7d6d, 0x418c, 0x8e45, 0x0, 0x1);
        gbc.writeMem(0x125, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x282f);
        EXPECT(gbc.pc(), 0x127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 033A
        gbc.setState(0x4d37, 0xd98f, 0x5860, 0x3d13, 0x782a, 0x2fe3, 0x1, 0x1);
        gbc.writeMem(0x4d37, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd98f);
        EXPECT(gbc.pc(), 0x4d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 033B
        gbc.setState(0x8fc3, 0x95ac, 0x9440, 0x567d, 0x3f4d, 0xba56, 0x0, 0x0);
        gbc.writeMem(0x8fc3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x95ac);
        EXPECT(gbc.pc(), 0x8fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc3), 0xcb);
        EXPECT(gbc.readMem(0x8fc4), 0xef);
        // CB EF 033C
        gbc.setState(0x894, 0x9ccf, 0xb720, 0x5d73, 0xac49, 0x2c71, 0x1, 0x1);
        gbc.writeMem(0x894, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9ccf);
        EXPECT(gbc.pc(), 0x896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 033D
        gbc.setState(0x5f17, 0xff19, 0x6d70, 0x5dec, 0xaaaf, 0x36a, 0x0, 0x0);
        gbc.writeMem(0x5f17, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xff19);
        EXPECT(gbc.pc(), 0x5f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 033E
        gbc.setState(0xd1c, 0xcab2, 0xac80, 0xe2b8, 0xb723, 0xafae, 0x1, 0x1);
        gbc.writeMem(0xd1c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcab2);
        EXPECT(gbc.pc(), 0xd1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 033F
        gbc.setState(0x4623, 0xf4c6, 0x4360, 0x5b06, 0x4ba1, 0xf8e4, 0x0, 0x0);
        gbc.writeMem(0x4623, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf4c6);
        EXPECT(gbc.pc(), 0x4625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0340
        gbc.setState(0x680a, 0x3ea9, 0xc550, 0x6984, 0xa3ce, 0x23c1, 0x1, 0x1);
        gbc.writeMem(0x680a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3ea9);
        EXPECT(gbc.pc(), 0x680c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0341
        gbc.setState(0x1ac7, 0xeac2, 0x1740, 0xfa71, 0x1563, 0xca75, 0x1, 0x1);
        gbc.writeMem(0x1ac7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeac2);
        EXPECT(gbc.pc(), 0x1ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0342
        gbc.setState(0x5379, 0xde95, 0x2450, 0x6b51, 0x24aa, 0xe72a, 0x0, 0x0);
        gbc.writeMem(0x5379, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xde95);
        EXPECT(gbc.pc(), 0x537b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0343
        gbc.setState(0x2730, 0xafcb, 0x6bf0, 0x9af0, 0x7cbc, 0x5740, 0x1, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0x2732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0344
        gbc.setState(0x329c, 0xe90, 0x6270, 0x76c5, 0x1d7b, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x329c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe90);
        EXPECT(gbc.pc(), 0x329e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0345
        gbc.setState(0xad6b, 0xe438, 0x4c90, 0x82ad, 0xddf, 0xc338, 0x1, 0x1);
        gbc.writeMem(0xad6b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe438);
        EXPECT(gbc.pc(), 0xad6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6b), 0xcb);
        EXPECT(gbc.readMem(0xad6c), 0xef);
        // CB EF 0346
        gbc.setState(0x1d6, 0x4c79, 0x9150, 0xf0a3, 0x3a22, 0xd74a, 0x0, 0x1);
        gbc.writeMem(0x1d6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4c79);
        EXPECT(gbc.pc(), 0x1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0347
        gbc.setState(0x2539, 0x31ab, 0x5500, 0xab8a, 0xad94, 0x1b83, 0x0, 0x1);
        gbc.writeMem(0x2539, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x31ab);
        EXPECT(gbc.pc(), 0x253b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0348
        gbc.setState(0x4fc4, 0xb487, 0xd80, 0x15a5, 0xd00c, 0x9a95, 0x1, 0x0);
        gbc.writeMem(0x4fc4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb487);
        EXPECT(gbc.pc(), 0x4fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0349
        gbc.setState(0x1fbc, 0x2e05, 0x2cb0, 0x6b7a, 0x2ebc, 0xfe1e, 0x0, 0x0);
        gbc.writeMem(0x1fbc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2e05);
        EXPECT(gbc.pc(), 0x1fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 034A
        gbc.setState(0x3328, 0xd809, 0x7990, 0xfeb5, 0xae02, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x3328, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd809);
        EXPECT(gbc.pc(), 0x332a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 034B
        gbc.setState(0x1851, 0xe446, 0x5890, 0xa915, 0xd05b, 0x9e19, 0x0, 0x1);
        gbc.writeMem(0x1851, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe446);
        EXPECT(gbc.pc(), 0x1853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 034C
        gbc.setState(0x8302, 0x632e, 0x9590, 0x1e8, 0x864e, 0x63e1, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x632e);
        EXPECT(gbc.pc(), 0x8304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8302), 0xcb);
        EXPECT(gbc.readMem(0x8303), 0xef);
        // CB EF 034D
        gbc.setState(0x5fb5, 0xd1db, 0x52c0, 0x5cea, 0xe681, 0xc1e4, 0x0, 0x0);
        gbc.writeMem(0x5fb5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd1db);
        EXPECT(gbc.pc(), 0x5fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 034E
        gbc.setState(0x83b7, 0x4032, 0x63c0, 0x2e5d, 0xc37b, 0x5d47, 0x1, 0x0);
        gbc.writeMem(0x83b7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4032);
        EXPECT(gbc.pc(), 0x83b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b7), 0xcb);
        EXPECT(gbc.readMem(0x83b8), 0xef);
        // CB EF 034F
        gbc.setState(0x6c43, 0xc879, 0xafe0, 0x656c, 0x1837, 0xdf4, 0x0, 0x0);
        gbc.writeMem(0x6c43, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc879);
        EXPECT(gbc.pc(), 0x6c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0350
        gbc.setState(0x37bc, 0x55a, 0xeaa0, 0x32ac, 0x1e08, 0xa971, 0x1, 0x0);
        gbc.writeMem(0x37bc, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x55a);
        EXPECT(gbc.pc(), 0x37be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0351
        gbc.setState(0xc692, 0x7eca, 0x8e0, 0x4bdb, 0xf9d3, 0x429d, 0x1, 0x1);
        gbc.writeMem(0xc692, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7eca);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc692), 0xcb);
        EXPECT(gbc.readMem(0xc693), 0xef);
        // CB EF 0352
        gbc.setState(0x5e42, 0x522c, 0xb2e0, 0x2fe6, 0x28b7, 0x900c, 0x1, 0x0);
        gbc.writeMem(0x5e42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0x5e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0353
        gbc.setState(0x2aeb, 0x6b35, 0xfa00, 0x7294, 0x6390, 0x244e, 0x1, 0x1);
        gbc.writeMem(0x2aeb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6b35);
        EXPECT(gbc.pc(), 0x2aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0354
        gbc.setState(0x5125, 0xd648, 0x84c0, 0x8da4, 0xc218, 0xbca, 0x0, 0x1);
        gbc.writeMem(0x5125, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x5127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0355
        gbc.setState(0x94fa, 0x7ac7, 0xbc10, 0xd128, 0x29f0, 0xc122, 0x1, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7ac7);
        EXPECT(gbc.pc(), 0x94fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fa), 0xcb);
        EXPECT(gbc.readMem(0x94fb), 0xef);
        // CB EF 0356
        gbc.setState(0xb227, 0x5434, 0x6ce0, 0xdb59, 0xff80, 0xa862, 0x1, 0x1);
        gbc.writeMem(0xb227, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5434);
        EXPECT(gbc.pc(), 0xb229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb227), 0xcb);
        EXPECT(gbc.readMem(0xb228), 0xef);
        // CB EF 0357
        gbc.setState(0x9116, 0x4b8f, 0x1dd0, 0x4a8e, 0x97bf, 0x6d67, 0x1, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4b8f);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9116), 0xcb);
        EXPECT(gbc.readMem(0x9117), 0xef);
        // CB EF 0358
        gbc.setState(0x36ea, 0x87b4, 0x6ba0, 0x64ec, 0xdd1a, 0xc7a2, 0x0, 0x1);
        gbc.writeMem(0x36ea, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x87b4);
        EXPECT(gbc.pc(), 0x36ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0359
        gbc.setState(0x9816, 0xb14, 0xd0a0, 0x3a48, 0xd0a, 0x52c5, 0x0, 0x0);
        gbc.writeMem(0x9816, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb14);
        EXPECT(gbc.pc(), 0x9818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9816), 0xcb);
        EXPECT(gbc.readMem(0x9817), 0xef);
        // CB EF 035A
        gbc.setState(0xbd5c, 0x4382, 0xd050, 0x5ae4, 0x5ac7, 0x6795, 0x0, 0x0);
        gbc.writeMem(0xbd5c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4382);
        EXPECT(gbc.pc(), 0xbd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5c), 0xcb);
        EXPECT(gbc.readMem(0xbd5d), 0xef);
        // CB EF 035C
        gbc.setState(0x5fd7, 0x923, 0xdf80, 0x4674, 0x8760, 0xbe03, 0x1, 0x0);
        gbc.writeMem(0x5fd7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x923);
        EXPECT(gbc.pc(), 0x5fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 035D
        gbc.setState(0xfa, 0xa7a2, 0x98d0, 0x891a, 0x41f9, 0xb8e7, 0x0, 0x0);
        gbc.writeMem(0xfa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa7a2);
        EXPECT(gbc.pc(), 0xfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 035E
        gbc.setState(0x9e7, 0x197b, 0x19f0, 0x4b84, 0x55d2, 0x58d4, 0x1, 0x0);
        gbc.writeMem(0x9e7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x197b);
        EXPECT(gbc.pc(), 0x9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 035F
        gbc.setState(0xdb58, 0x5821, 0x7830, 0xc5dc, 0xdf9f, 0xe38c, 0x0, 0x0);
        gbc.writeMem(0xdb58, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0xdb5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb58), 0xcb);
        EXPECT(gbc.readMem(0xdb59), 0xef);
        // CB EF 0360
        gbc.setState(0xaa3e, 0xdc29, 0x4cd0, 0x5b5e, 0xc89, 0x993c, 0x0, 0x1);
        gbc.writeMem(0xaa3e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdc29);
        EXPECT(gbc.pc(), 0xaa40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3e), 0xcb);
        EXPECT(gbc.readMem(0xaa3f), 0xef);
        // CB EF 0361
        gbc.setState(0x13d1, 0x1cd3, 0x1820, 0x9d4c, 0x3038, 0xe17e, 0x0, 0x1);
        gbc.writeMem(0x13d1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1cd3);
        EXPECT(gbc.pc(), 0x13d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0362
        gbc.setState(0x8b55, 0xf0cc, 0xed0, 0xdcbd, 0x2db1, 0xb44a, 0x1, 0x1);
        gbc.writeMem(0x8b55, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf0cc);
        EXPECT(gbc.pc(), 0x8b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b55), 0xcb);
        EXPECT(gbc.readMem(0x8b56), 0xef);
        // CB EF 0363
        gbc.setState(0x2c7f, 0x6bfd, 0xc560, 0x4d71, 0xe0e1, 0xc274, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6bfd);
        EXPECT(gbc.pc(), 0x2c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0364
        gbc.setState(0xb6b4, 0xdb56, 0x3870, 0xbfe2, 0x10a6, 0xa7f4, 0x0, 0x0);
        gbc.writeMem(0xb6b4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0xb6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b4), 0xcb);
        EXPECT(gbc.readMem(0xb6b5), 0xef);
        // CB EF 0365
        gbc.setState(0x376b, 0x702b, 0xcd50, 0xae84, 0x49a8, 0x5f38, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x702b);
        EXPECT(gbc.pc(), 0x376d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0367
        gbc.setState(0xa8ed, 0x54bf, 0x1ef0, 0x68f9, 0x9444, 0xd630, 0x0, 0x1);
        gbc.writeMem(0xa8ed, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x54bf);
        EXPECT(gbc.pc(), 0xa8ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ed), 0xcb);
        EXPECT(gbc.readMem(0xa8ee), 0xef);
        // CB EF 0368
        gbc.setState(0x1d77, 0x61c1, 0x74c0, 0x44f1, 0x4a70, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x1d77, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x61c1);
        EXPECT(gbc.pc(), 0x1d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0369
        gbc.setState(0x46de, 0xced5, 0xc400, 0x9b3c, 0xdc3e, 0x621, 0x0, 0x0);
        gbc.writeMem(0x46de, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xced5);
        EXPECT(gbc.pc(), 0x46e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 036A
        gbc.setState(0xd538, 0x8a1d, 0xf7f0, 0xe14d, 0xba6d, 0x5919, 0x1, 0x1);
        gbc.writeMem(0xd538, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8a1d);
        EXPECT(gbc.pc(), 0xd53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd538), 0xcb);
        EXPECT(gbc.readMem(0xd539), 0xef);
        // CB EF 036B
        gbc.setState(0x69ec, 0xcecd, 0x56d0, 0x89f8, 0x9fe8, 0x68f4, 0x0, 0x1);
        gbc.writeMem(0x69ec, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcecd);
        EXPECT(gbc.pc(), 0x69ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 036C
        gbc.setState(0x6bb4, 0xb6c3, 0xd00, 0x65f0, 0x69fe, 0xa16b, 0x0, 0x0);
        gbc.writeMem(0x6bb4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb6c3);
        EXPECT(gbc.pc(), 0x6bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 036D
        gbc.setState(0x6c42, 0x3072, 0x1820, 0x4bc1, 0x76e4, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0x6c42, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3072);
        EXPECT(gbc.pc(), 0x6c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 036E
        gbc.setState(0x82f0, 0x22d, 0xe390, 0xf804, 0x8899, 0x9b28, 0x0, 0x1);
        gbc.writeMem(0x82f0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x22d);
        EXPECT(gbc.pc(), 0x82f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f0), 0xcb);
        EXPECT(gbc.readMem(0x82f1), 0xef);
        // CB EF 036F
        gbc.setState(0xba13, 0x7166, 0x4f90, 0xd55b, 0x9927, 0xef8, 0x0, 0x1);
        gbc.writeMem(0xba13, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0xba15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba13), 0xcb);
        EXPECT(gbc.readMem(0xba14), 0xef);
        // CB EF 0370
        gbc.setState(0x1b09, 0xff43, 0x1a80, 0xfb59, 0x2bca, 0xbbea, 0x0, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff43);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0371
        gbc.setState(0x47d6, 0x76a6, 0xd760, 0x4627, 0x61ba, 0xac4f, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x76a6);
        EXPECT(gbc.pc(), 0x47d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0372
        gbc.setState(0xddf5, 0xf1ad, 0xd750, 0xc4a1, 0x874a, 0xc618, 0x0, 0x1);
        gbc.writeMem(0xddf5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf1ad);
        EXPECT(gbc.pc(), 0xddf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf5), 0xcb);
        EXPECT(gbc.readMem(0xddf6), 0xef);
        // CB EF 0373
        gbc.setState(0xb3a5, 0x132e, 0x4af0, 0x7109, 0x3e12, 0x20e0, 0x1, 0x1);
        gbc.writeMem(0xb3a5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x132e);
        EXPECT(gbc.pc(), 0xb3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a5), 0xcb);
        EXPECT(gbc.readMem(0xb3a6), 0xef);
        // CB EF 0374
        gbc.setState(0xe351, 0xb765, 0x98f0, 0xca92, 0xba92, 0x8735, 0x1, 0x1);
        gbc.writeMem(0xe351, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb765);
        EXPECT(gbc.pc(), 0xe353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe351), 0xcb);
        EXPECT(gbc.readMem(0xe352), 0xef);
        // CB EF 0375
        gbc.setState(0x661a, 0x8efb, 0xfb50, 0x3922, 0x192c, 0x36f3, 0x0, 0x0);
        gbc.writeMem(0x661a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8efb);
        EXPECT(gbc.pc(), 0x661c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0376
        gbc.setState(0x27d7, 0x86b8, 0xfc00, 0x5e9f, 0xae4c, 0xe235, 0x1, 0x1);
        gbc.writeMem(0x27d7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x86b8);
        EXPECT(gbc.pc(), 0x27d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0377
        gbc.setState(0x4271, 0xe865, 0x5c50, 0x85f8, 0x357a, 0x234f, 0x1, 0x0);
        gbc.writeMem(0x4271, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe865);
        EXPECT(gbc.pc(), 0x4273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0378
        gbc.setState(0x8165, 0x6c50, 0xb220, 0x511, 0xf532, 0x8112, 0x0, 0x0);
        gbc.writeMem(0x8165, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6c50);
        EXPECT(gbc.pc(), 0x8167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8165), 0xcb);
        EXPECT(gbc.readMem(0x8166), 0xef);
        // CB EF 037A
        gbc.setState(0x76f7, 0xb3ac, 0xe040, 0xec87, 0xc617, 0xc38a, 0x1, 0x1);
        gbc.writeMem(0x76f7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb3ac);
        EXPECT(gbc.pc(), 0x76f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 037B
        gbc.setState(0xd85b, 0xde7c, 0xaa90, 0x4b70, 0xff59, 0x971c, 0x0, 0x0);
        gbc.writeMem(0xd85b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0xd85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85b), 0xcb);
        EXPECT(gbc.readMem(0xd85c), 0xef);
        // CB EF 037C
        gbc.setState(0xea2c, 0x573c, 0x4520, 0xa3bf, 0x810a, 0x6396, 0x1, 0x0);
        gbc.writeMem(0xea2c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x573c);
        EXPECT(gbc.pc(), 0xea2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2c), 0xcb);
        EXPECT(gbc.readMem(0xea2d), 0xef);
        // CB EF 037D
        gbc.setState(0x4882, 0xe342, 0x2300, 0x5c5e, 0x24e1, 0xa599, 0x1, 0x0);
        gbc.writeMem(0x4882, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe342);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 037E
        gbc.setState(0x488a, 0xdd0c, 0x9fa0, 0xa1bd, 0x2b05, 0x630e, 0x0, 0x0);
        gbc.writeMem(0x488a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdd0c);
        EXPECT(gbc.pc(), 0x488c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 037F
        gbc.setState(0xdc64, 0xe293, 0x12b0, 0x7e31, 0x8372, 0x3f, 0x0, 0x1);
        gbc.writeMem(0xdc64, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe293);
        EXPECT(gbc.pc(), 0xdc66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc64), 0xcb);
        EXPECT(gbc.readMem(0xdc65), 0xef);
        // CB EF 0380
        gbc.setState(0xb1e1, 0xb07e, 0xd830, 0xcc78, 0x803, 0x99ab, 0x1, 0x1);
        gbc.writeMem(0xb1e1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb07e);
        EXPECT(gbc.pc(), 0xb1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e1), 0xcb);
        EXPECT(gbc.readMem(0xb1e2), 0xef);
        // CB EF 0381
        gbc.setState(0xbb9c, 0xcb9a, 0xb4d0, 0x2492, 0x20d4, 0x6814, 0x0, 0x1);
        gbc.writeMem(0xbb9c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0xbb9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb9c), 0xcb);
        EXPECT(gbc.readMem(0xbb9d), 0xef);
        // CB EF 0382
        gbc.setState(0x16f6, 0xb00, 0x3b20, 0xd679, 0xfe6c, 0x3629, 0x1, 0x1);
        gbc.writeMem(0x16f6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb00);
        EXPECT(gbc.pc(), 0x16f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0383
        gbc.setState(0x6485, 0xf26b, 0xdb70, 0x1894, 0xa25e, 0x2aaf, 0x0, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf26b);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0384
        gbc.setState(0x8d82, 0x3e6d, 0x8d10, 0x7c51, 0xff26, 0xdb21, 0x0, 0x0);
        gbc.writeMem(0x8d82, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3e6d);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0xef);
        // CB EF 0385
        gbc.setState(0x9df4, 0xda78, 0xb410, 0x1382, 0x3817, 0x7ab, 0x0, 0x1);
        gbc.writeMem(0x9df4, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xda78);
        EXPECT(gbc.pc(), 0x9df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df4), 0xcb);
        EXPECT(gbc.readMem(0x9df5), 0xef);
        // CB EF 0386
        gbc.setState(0xc59d, 0x93ef, 0xbad0, 0xf73d, 0x3acd, 0x3526, 0x0, 0x1);
        gbc.writeMem(0xc59d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x93ef);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59d), 0xcb);
        EXPECT(gbc.readMem(0xc59e), 0xef);
        // CB EF 0388
        gbc.setState(0x6af0, 0x5ad4, 0xe660, 0xce4c, 0xdeb5, 0xc528, 0x1, 0x1);
        gbc.writeMem(0x6af0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5ad4);
        EXPECT(gbc.pc(), 0x6af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0389
        gbc.setState(0x8a28, 0xba0d, 0x6b30, 0xf8b5, 0x424a, 0xe40d, 0x0, 0x0);
        gbc.writeMem(0x8a28, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0x8a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a28), 0xcb);
        EXPECT(gbc.readMem(0x8a29), 0xef);
        // CB EF 038A
        gbc.setState(0x3141, 0xba96, 0x3ba0, 0x203a, 0xec2b, 0x433, 0x1, 0x0);
        gbc.writeMem(0x3141, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xba96);
        EXPECT(gbc.pc(), 0x3143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 038B
        gbc.setState(0xcd9b, 0x1754, 0xf7d0, 0x62b2, 0xe26d, 0x5623, 0x1, 0x0);
        gbc.writeMem(0xcd9b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1754);
        EXPECT(gbc.pc(), 0xcd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9b), 0xcb);
        EXPECT(gbc.readMem(0xcd9c), 0xef);
        // CB EF 038C
        gbc.setState(0x49ca, 0xa5d8, 0x8340, 0x4600, 0x7e99, 0x83dd, 0x1, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0x49cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 038D
        gbc.setState(0x4e7e, 0x48db, 0x5140, 0xa938, 0x8e27, 0x5621, 0x1, 0x0);
        gbc.writeMem(0x4e7e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x48db);
        EXPECT(gbc.pc(), 0x4e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 038E
        gbc.setState(0x4498, 0x6414, 0xce00, 0x34c0, 0x9b38, 0x1e1c, 0x1, 0x0);
        gbc.writeMem(0x4498, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6414);
        EXPECT(gbc.pc(), 0x449a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 038F
        gbc.setState(0x1b81, 0x8ac1, 0x31c0, 0x223f, 0x2104, 0xbe60, 0x1, 0x1);
        gbc.writeMem(0x1b81, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0x1b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0390
        gbc.setState(0xd4d0, 0xf9d7, 0x58e0, 0x8056, 0x9af, 0xf49e, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf9d7);
        EXPECT(gbc.pc(), 0xd4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d0), 0xcb);
        EXPECT(gbc.readMem(0xd4d1), 0xef);
        // CB EF 0391
        gbc.setState(0x4663, 0xc612, 0xffe0, 0xd2fa, 0x198d, 0x8c65, 0x1, 0x0);
        gbc.writeMem(0x4663, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc612);
        EXPECT(gbc.pc(), 0x4665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0392
        gbc.setState(0x7c2c, 0x8e5, 0xbd90, 0x5d94, 0xd0da, 0xf689, 0x0, 0x1);
        gbc.writeMem(0x7c2c, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8e5);
        EXPECT(gbc.pc(), 0x7c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 0393
        gbc.setState(0xdbe2, 0xe4a9, 0xe1a0, 0xa278, 0x6d38, 0xe203, 0x1, 0x0);
        gbc.writeMem(0xdbe2, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe4a9);
        EXPECT(gbc.pc(), 0xdbe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe2), 0xcb);
        EXPECT(gbc.readMem(0xdbe3), 0xef);
        // CB EF 0394
        gbc.setState(0x5960, 0xd352, 0x4480, 0x62ec, 0x5684, 0x2c5c, 0x0, 0x1);
        gbc.writeMem(0x5960, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd352);
        EXPECT(gbc.pc(), 0x5962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0395
        gbc.setState(0xedb9, 0x6e61, 0xc30, 0xd28a, 0x2554, 0xa0a6, 0x0, 0x0);
        gbc.writeMem(0xedb9, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6e61);
        EXPECT(gbc.pc(), 0xedbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb9), 0xcb);
        EXPECT(gbc.readMem(0xedba), 0xef);
        // CB EF 0396
        gbc.setState(0x7b02, 0xa868, 0x56c0, 0x3e81, 0xd167, 0x38d8, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa868);
        EXPECT(gbc.pc(), 0x7b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 0397
        gbc.setState(0x8b32, 0x4ecc, 0x3dc0, 0xcd8d, 0x25cf, 0x28fa, 0x1, 0x1);
        gbc.writeMem(0x8b32, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4ecc);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b32), 0xcb);
        EXPECT(gbc.readMem(0x8b33), 0xef);
        // CB EF 0398
        gbc.setState(0x8e86, 0x6b5f, 0xfb50, 0x2c65, 0xad50, 0x590f, 0x0, 0x0);
        gbc.writeMem(0x8e86, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6b5f);
        EXPECT(gbc.pc(), 0x8e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e86), 0xcb);
        EXPECT(gbc.readMem(0x8e87), 0xef);
        // CB EF 0399
        gbc.setState(0x7b8d, 0x5934, 0xf100, 0x8778, 0xc228, 0x86b1, 0x1, 0x1);
        gbc.writeMem(0x7b8d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5934);
        EXPECT(gbc.pc(), 0x7b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 039A
        gbc.setState(0x5868, 0xf1f1, 0xe270, 0x84b1, 0x1bdb, 0xa011, 0x0, 0x0);
        gbc.writeMem(0x5868, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf1f1);
        EXPECT(gbc.pc(), 0x586a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 039B
        gbc.setState(0x90c3, 0x9ac4, 0x48a0, 0xd727, 0x9562, 0xd9ae, 0x0, 0x1);
        gbc.writeMem(0x90c3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c3), 0xcb);
        EXPECT(gbc.readMem(0x90c4), 0xef);
        // CB EF 039C
        gbc.setState(0x98ba, 0x967e, 0x78e0, 0xc224, 0x4e7f, 0xcf54, 0x0, 0x0);
        gbc.writeMem(0x98ba, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x967e);
        EXPECT(gbc.pc(), 0x98bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ba), 0xcb);
        EXPECT(gbc.readMem(0x98bb), 0xef);
        // CB EF 039D
        gbc.setState(0xd186, 0x6902, 0x8270, 0x2434, 0x20ba, 0x5f1d, 0x1, 0x1);
        gbc.writeMem(0xd186, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6902);
        EXPECT(gbc.pc(), 0xd188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd186), 0xcb);
        EXPECT(gbc.readMem(0xd187), 0xef);
        // CB EF 039E
        gbc.setState(0x1a1e, 0x57c0, 0x7420, 0x7666, 0x31d2, 0x621f, 0x1, 0x1);
        gbc.writeMem(0x1a1e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0x1a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 039F
        gbc.setState(0x4321, 0xd165, 0x6f20, 0x5329, 0x2624, 0x6f99, 0x0, 0x0);
        gbc.writeMem(0x4321, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd165);
        EXPECT(gbc.pc(), 0x4323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03A0
        gbc.setState(0x9293, 0x6243, 0xd070, 0x516e, 0xfc9e, 0xa3a, 0x0, 0x0);
        gbc.writeMem(0x9293, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6243);
        EXPECT(gbc.pc(), 0x9295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9293), 0xcb);
        EXPECT(gbc.readMem(0x9294), 0xef);
        // CB EF 03A1
        gbc.setState(0x5ad6, 0x62a5, 0xb9e0, 0x93a7, 0x9e4a, 0x6356, 0x1, 0x0);
        gbc.writeMem(0x5ad6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x62a5);
        EXPECT(gbc.pc(), 0x5ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03A2
        gbc.setState(0xbf82, 0x3e8d, 0x9b20, 0x35c4, 0x8a6, 0x3fff, 0x0, 0x0);
        gbc.writeMem(0xbf82, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3e8d);
        EXPECT(gbc.pc(), 0xbf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf82), 0xcb);
        EXPECT(gbc.readMem(0xbf83), 0xef);
        // CB EF 03A3
        gbc.setState(0xab9f, 0x7307, 0x6010, 0xcf99, 0x6eaf, 0x6a68, 0x1, 0x1);
        gbc.writeMem(0xab9f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7307);
        EXPECT(gbc.pc(), 0xaba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9f), 0xcb);
        EXPECT(gbc.readMem(0xaba0), 0xef);
        // CB EF 03A4
        gbc.setState(0x780a, 0x2c26, 0xb7b0, 0x8c15, 0x3968, 0x27d0, 0x1, 0x0);
        gbc.writeMem(0x780a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2c26);
        EXPECT(gbc.pc(), 0x780c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03A6
        gbc.setState(0x56f, 0xa1d7, 0x1550, 0xbc51, 0x5725, 0x781d, 0x0, 0x1);
        gbc.writeMem(0x56f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa1d7);
        EXPECT(gbc.pc(), 0x571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03A7
        gbc.setState(0x519a, 0x8299, 0x54e0, 0x9688, 0xc9, 0x67de, 0x0, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03A8
        gbc.setState(0x9695, 0xcd20, 0x8f60, 0xddc0, 0xfb2a, 0xdbf3, 0x1, 0x1);
        gbc.writeMem(0x9695, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcd20);
        EXPECT(gbc.pc(), 0x9697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9695), 0xcb);
        EXPECT(gbc.readMem(0x9696), 0xef);
        // CB EF 03A9
        gbc.setState(0xa81f, 0xae91, 0xd8c0, 0xeb39, 0x1c32, 0xdb71, 0x1, 0x0);
        gbc.writeMem(0xa81f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xae91);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0xef);
        // CB EF 03AA
        gbc.setState(0x8976, 0x6b44, 0x89a0, 0x4a84, 0x328d, 0xfe2b, 0x1, 0x0);
        gbc.writeMem(0x8976, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6b44);
        EXPECT(gbc.pc(), 0x8978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8976), 0xcb);
        EXPECT(gbc.readMem(0x8977), 0xef);
        // CB EF 03AB
        gbc.setState(0x49e5, 0x2c8b, 0x56b0, 0xfa06, 0x86d2, 0xa8e8, 0x0, 0x1);
        gbc.writeMem(0x49e5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2c8b);
        EXPECT(gbc.pc(), 0x49e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03AC
        gbc.setState(0x5dc1, 0xdf, 0xe2c0, 0xd88c, 0x5f17, 0x595f, 0x0, 0x0);
        gbc.writeMem(0x5dc1, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdf);
        EXPECT(gbc.pc(), 0x5dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03AD
        gbc.setState(0x7cbf, 0xbca1, 0xbcf0, 0x2a89, 0xff8, 0xcfb7, 0x1, 0x1);
        gbc.writeMem(0x7cbf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbca1);
        EXPECT(gbc.pc(), 0x7cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03AE
        gbc.setState(0x8c7f, 0x3d64, 0xdc30, 0x9bf1, 0x358f, 0x41c9, 0x0, 0x0);
        gbc.writeMem(0x8c7f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3d64);
        EXPECT(gbc.pc(), 0x8c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7f), 0xcb);
        EXPECT(gbc.readMem(0x8c80), 0xef);
        // CB EF 03AF
        gbc.setState(0x5acd, 0xba78, 0x1f70, 0x989, 0x19ad, 0xe736, 0x1, 0x0);
        gbc.writeMem(0x5acd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xba78);
        EXPECT(gbc.pc(), 0x5acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03B0
        gbc.setState(0x45d6, 0x421c, 0xab70, 0x3228, 0xfe00, 0xdfa5, 0x0, 0x1);
        gbc.writeMem(0x45d6, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x421c);
        EXPECT(gbc.pc(), 0x45d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03B1
        gbc.setState(0x6856, 0xc10b, 0xce0, 0xe07a, 0x3d9, 0xd070, 0x0, 0x1);
        gbc.writeMem(0x6856, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc10b);
        EXPECT(gbc.pc(), 0x6858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03B2
        gbc.setState(0x400a, 0xb686, 0x5040, 0x23f, 0xc35e, 0x5e87, 0x0, 0x1);
        gbc.writeMem(0x400a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb686);
        EXPECT(gbc.pc(), 0x400c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03B3
        gbc.setState(0xc7d0, 0x9ae0, 0xf600, 0x2411, 0xd3f9, 0x7a18, 0x0, 0x0);
        gbc.writeMem(0xc7d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9ae0);
        EXPECT(gbc.pc(), 0xc7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d0), 0xcb);
        EXPECT(gbc.readMem(0xc7d1), 0xef);
        // CB EF 03B4
        gbc.setState(0xc7ef, 0xad28, 0x3620, 0x28b0, 0xa12e, 0xc915, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xad28);
        EXPECT(gbc.pc(), 0xc7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ef), 0xcb);
        EXPECT(gbc.readMem(0xc7f0), 0xef);
        // CB EF 03B5
        gbc.setState(0x361a, 0x27c3, 0x78c0, 0xde71, 0x70b3, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0x361a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x27c3);
        EXPECT(gbc.pc(), 0x361c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03B6
        gbc.setState(0x2b5, 0x7394, 0x250, 0x3e74, 0x8c3b, 0x1fac, 0x1, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7394);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03B7
        gbc.setState(0xe315, 0x1ff7, 0x3780, 0xe3b5, 0x7a88, 0x61c5, 0x0, 0x0);
        gbc.writeMem(0xe315, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1ff7);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0xef);
        // CB EF 03B8
        gbc.setState(0xc3db, 0x1b64, 0xec30, 0x72b7, 0xe56e, 0xd18b, 0x1, 0x0);
        gbc.writeMem(0xc3db, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1b64);
        EXPECT(gbc.pc(), 0xc3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3db), 0xcb);
        EXPECT(gbc.readMem(0xc3dc), 0xef);
        // CB EF 03B9
        gbc.setState(0x8b, 0x2e34, 0x1af0, 0x329c, 0x9151, 0x550e, 0x0, 0x0);
        gbc.writeMem(0x8b, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2e34);
        EXPECT(gbc.pc(), 0x8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03BA
        gbc.setState(0x3829, 0x3a33, 0x4c20, 0x7aa5, 0x12ec, 0xef69, 0x1, 0x1);
        gbc.writeMem(0x3829, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3a33);
        EXPECT(gbc.pc(), 0x382b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03BB
        gbc.setState(0x39f7, 0xa0e5, 0xfeb0, 0x9a52, 0x967b, 0x529b, 0x1, 0x1);
        gbc.writeMem(0x39f7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa0e5);
        EXPECT(gbc.pc(), 0x39f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03BC
        gbc.setState(0x164f, 0x400b, 0xca30, 0x1fde, 0x9313, 0x4f14, 0x1, 0x1);
        gbc.writeMem(0x164f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x400b);
        EXPECT(gbc.pc(), 0x1651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03BD
        gbc.setState(0xdae, 0xfa10, 0x3b40, 0xaa80, 0xc0e4, 0xebd2, 0x1, 0x0);
        gbc.writeMem(0xdae, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfa10);
        EXPECT(gbc.pc(), 0xdb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03BE
        gbc.setState(0x9866, 0x17f7, 0x1320, 0x46d3, 0x9275, 0x2daa, 0x0, 0x1);
        gbc.writeMem(0x9866, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x9868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9866), 0xcb);
        EXPECT(gbc.readMem(0x9867), 0xef);
        // CB EF 03BF
        gbc.setState(0x88db, 0x6e9a, 0x1810, 0xaf94, 0x4f8e, 0xa701, 0x1, 0x1);
        gbc.writeMem(0x88db, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6e9a);
        EXPECT(gbc.pc(), 0x88dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88db), 0xcb);
        EXPECT(gbc.readMem(0x88dc), 0xef);
        // CB EF 03C0
        gbc.setState(0xb750, 0xb599, 0x6a0, 0x6e48, 0x2532, 0x7382, 0x0, 0x1);
        gbc.writeMem(0xb750, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb599);
        EXPECT(gbc.pc(), 0xb752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb750), 0xcb);
        EXPECT(gbc.readMem(0xb751), 0xef);
        // CB EF 03C1
        gbc.setState(0xa5, 0xf53c, 0x6820, 0xed47, 0xd029, 0xfa80, 0x1, 0x1);
        gbc.writeMem(0xa5, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf53c);
        EXPECT(gbc.pc(), 0xa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03C2
        gbc.setState(0xd153, 0xaf2f, 0xd180, 0xfc, 0xa0ab, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0xd153, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaf2f);
        EXPECT(gbc.pc(), 0xd155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd153), 0xcb);
        EXPECT(gbc.readMem(0xd154), 0xef);
        // CB EF 03C3
        gbc.setState(0xc4e7, 0xbd4d, 0xfb80, 0xe8cf, 0x3772, 0x170b, 0x0, 0x0);
        gbc.writeMem(0xc4e7, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbd4d);
        EXPECT(gbc.pc(), 0xc4e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e7), 0xcb);
        EXPECT(gbc.readMem(0xc4e8), 0xef);
        // CB EF 03C4
        gbc.setState(0x32eb, 0x9ee3, 0xbf50, 0xb74c, 0x1e4c, 0xd960, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9ee3);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03C5
        gbc.setState(0xac93, 0x97e4, 0xeda0, 0xf9d4, 0x1cf5, 0x48e0, 0x1, 0x0);
        gbc.writeMem(0xac93, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x97e4);
        EXPECT(gbc.pc(), 0xac95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac93), 0xcb);
        EXPECT(gbc.readMem(0xac94), 0xef);
        // CB EF 03C6
        gbc.setState(0x6f69, 0x26f6, 0x1b0, 0xbab3, 0x5924, 0x8bfc, 0x0, 0x1);
        gbc.writeMem(0x6f69, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0x6f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03C7
        gbc.setState(0xa40d, 0x6a12, 0x4250, 0xe0a, 0x64a3, 0xc7ee, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6a12);
        EXPECT(gbc.pc(), 0xa40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40d), 0xcb);
        EXPECT(gbc.readMem(0xa40e), 0xef);
        // CB EF 03C8
        gbc.setState(0x58bf, 0x3737, 0x20a0, 0x52a9, 0x8687, 0x35e2, 0x1, 0x1);
        gbc.writeMem(0x58bf, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3737);
        EXPECT(gbc.pc(), 0x58c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03C9
        gbc.setState(0xc2de, 0x2c8e, 0x8e40, 0x7d09, 0x3651, 0x5204, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2c8e);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0xef);
        // CB EF 03CA
        gbc.setState(0xc8ac, 0x48, 0x780, 0x8bd6, 0xabbb, 0x5b84, 0x1, 0x1);
        gbc.writeMem(0xc8ac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x48);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ac), 0xcb);
        EXPECT(gbc.readMem(0xc8ad), 0xef);
        // CB EF 03CB
        gbc.setState(0xbeac, 0x48f8, 0xb6b0, 0x7f8d, 0xdaba, 0xf8cc, 0x0, 0x1);
        gbc.writeMem(0xbeac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x48f8);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeac), 0xcb);
        EXPECT(gbc.readMem(0xbead), 0xef);
        // CB EF 03CC
        gbc.setState(0x4c29, 0xbf17, 0x5c10, 0x7765, 0xb8c9, 0x6c68, 0x1, 0x0);
        gbc.writeMem(0x4c29, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbf17);
        EXPECT(gbc.pc(), 0x4c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03CD
        gbc.setState(0xb34a, 0x32ad, 0xe060, 0xb8eb, 0xd276, 0x4d3c, 0x1, 0x0);
        gbc.writeMem(0xb34a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x32ad);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34a), 0xcb);
        EXPECT(gbc.readMem(0xb34b), 0xef);
        // CB EF 03CE
        gbc.setState(0x9434, 0x8c6e, 0x250, 0x16d2, 0x2382, 0xc470, 0x0, 0x1);
        gbc.writeMem(0x9434, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8c6e);
        EXPECT(gbc.pc(), 0x9436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9434), 0xcb);
        EXPECT(gbc.readMem(0x9435), 0xef);
        // CB EF 03CF
        gbc.setState(0x6647, 0xfe73, 0x3d50, 0xb5f3, 0xe19, 0xcaa7, 0x0, 0x0);
        gbc.writeMem(0x6647, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfe73);
        EXPECT(gbc.pc(), 0x6649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03D0
        gbc.setState(0x2597, 0xc6c5, 0x630, 0xb583, 0x8f3c, 0x5f60, 0x1, 0x1);
        gbc.writeMem(0x2597, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc6c5);
        EXPECT(gbc.pc(), 0x2599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03D1
        gbc.setState(0x1803, 0xfd6c, 0x2130, 0xb3a, 0x3ea9, 0x7b76, 0x1, 0x1);
        gbc.writeMem(0x1803, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfd6c);
        EXPECT(gbc.pc(), 0x1805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03D3
        gbc.setState(0x876f, 0x9608, 0x7f30, 0xc95, 0xd487, 0x813a, 0x1, 0x1);
        gbc.writeMem(0x876f, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9608);
        EXPECT(gbc.pc(), 0x8771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876f), 0xcb);
        EXPECT(gbc.readMem(0x8770), 0xef);
        // CB EF 03D4
        gbc.setState(0x3a69, 0x6418, 0x25b0, 0x996c, 0xdded, 0xe955, 0x1, 0x0);
        gbc.writeMem(0x3a69, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6418);
        EXPECT(gbc.pc(), 0x3a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03D5
        gbc.setState(0x88bb, 0x63a9, 0xbfb0, 0x5564, 0x51f6, 0xdd60, 0x0, 0x1);
        gbc.writeMem(0x88bb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x63a9);
        EXPECT(gbc.pc(), 0x88bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bb), 0xcb);
        EXPECT(gbc.readMem(0x88bc), 0xef);
        // CB EF 03D6
        gbc.setState(0x5043, 0x4e83, 0xddf0, 0x19cf, 0xc793, 0x7692, 0x1, 0x1);
        gbc.writeMem(0x5043, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4e83);
        EXPECT(gbc.pc(), 0x5045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03D7
        gbc.setState(0xca5e, 0xa385, 0x4a40, 0xc54b, 0xf7d4, 0xa1ac, 0x0, 0x0);
        gbc.writeMem(0xca5e, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa385);
        EXPECT(gbc.pc(), 0xca60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5e), 0xcb);
        EXPECT(gbc.readMem(0xca5f), 0xef);
        // CB EF 03D8
        gbc.setState(0x1bac, 0x99ff, 0xcd20, 0x2e09, 0x4868, 0x98fc, 0x1, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x99ff);
        EXPECT(gbc.pc(), 0x1bae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03D9
        gbc.setState(0x2712, 0xac8c, 0x56d0, 0xe85a, 0xa8ab, 0x8808, 0x1, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xac8c);
        EXPECT(gbc.pc(), 0x2714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03DA
        gbc.setState(0x71d3, 0x2d08, 0x7140, 0xecd6, 0x625a, 0xe969, 0x0, 0x1);
        gbc.writeMem(0x71d3, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2d08);
        EXPECT(gbc.pc(), 0x71d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03DB
        gbc.setState(0x58aa, 0x8d9b, 0x82d0, 0x3851, 0x6128, 0x818b, 0x0, 0x0);
        gbc.writeMem(0x58aa, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8d9b);
        EXPECT(gbc.pc(), 0x58ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03DC
        gbc.setState(0x9465, 0x60be, 0x4cb0, 0x610, 0x11ca, 0xaa3e, 0x0, 0x1);
        gbc.writeMem(0x9465, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x60be);
        EXPECT(gbc.pc(), 0x9467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9465), 0xcb);
        EXPECT(gbc.readMem(0x9466), 0xef);
        // CB EF 03DD
        gbc.setState(0xd354, 0x632b, 0x9b50, 0xef2, 0x9d0f, 0x734, 0x0, 0x0);
        gbc.writeMem(0xd354, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x632b);
        EXPECT(gbc.pc(), 0xd356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd354), 0xcb);
        EXPECT(gbc.readMem(0xd355), 0xef);
        // CB EF 03DE
        gbc.setState(0x26cd, 0x26ae, 0xee60, 0xdfa1, 0xc1cd, 0xe678, 0x0, 0x1);
        gbc.writeMem(0x26cd, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x26ae);
        EXPECT(gbc.pc(), 0x26cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03DF
        gbc.setState(0xb0bb, 0x8c27, 0x8120, 0x2f04, 0xf32e, 0xcfec, 0x1, 0x1);
        gbc.writeMem(0xb0bb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8c27);
        EXPECT(gbc.pc(), 0xb0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0bb), 0xcb);
        EXPECT(gbc.readMem(0xb0bc), 0xef);
        // CB EF 03E0
        gbc.setState(0x338, 0xca90, 0xf6d0, 0x85f5, 0x77, 0xbee4, 0x0, 0x0);
        gbc.writeMem(0x338, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xca90);
        EXPECT(gbc.pc(), 0x33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03E1
        gbc.setState(0xd51a, 0x28b0, 0x5f20, 0x54ea, 0xdea3, 0x62ae, 0x1, 0x0);
        gbc.writeMem(0xd51a, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0xd51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51a), 0xcb);
        EXPECT(gbc.readMem(0xd51b), 0xef);
        // CB EF 03E2
        gbc.setState(0x9d9d, 0x12df, 0xee00, 0xac4a, 0xdd8d, 0x96fa, 0x1, 0x1);
        gbc.writeMem(0x9d9d, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x12df);
        EXPECT(gbc.pc(), 0x9d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9d), 0xcb);
        EXPECT(gbc.readMem(0x9d9e), 0xef);
        // CB EF 03E3
        gbc.setState(0x3391, 0x1520, 0x8420, 0x8e7, 0x82ac, 0x11c6, 0x0, 0x1);
        gbc.writeMem(0x3391, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1520);
        EXPECT(gbc.pc(), 0x3393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03E4
        gbc.setState(0x54d0, 0x370d, 0x7fa0, 0x2fa, 0x61db, 0xf05d, 0x1, 0x1);
        gbc.writeMem(0x54d0, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x370d);
        EXPECT(gbc.pc(), 0x54d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EF 03E5
        gbc.setState(0x7adb, 0xdf7c, 0x6f50, 0x723e, 0x7913, 0x885a, 0x0, 0x0);
        gbc.writeMem(0x7adb, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdf7c);
        EXPECT(gbc.pc(), 0x7add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EF 03E6
        gbc.setState(0xbf39, 0xf709, 0x900, 0xa60a, 0xc985, 0x9308, 0x0, 0x1);
        gbc.writeMem(0xbf39, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf709);
        EXPECT(gbc.pc(), 0xbf3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf39), 0xcb);
        EXPECT(gbc.readMem(0xbf3a), 0xef);
        // CB EF 03E7
        gbc.setState(0x3108, 0x5ee8, 0x1120, 0x6f0d, 0x63ca, 0xd349, 0x0, 0x0);
        gbc.writeMem(0x3108, { 0xcb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5ee8);
        EXPECT(gbc.pc(), 0x310a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
