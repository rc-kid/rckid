    TEST(gbcemu, opcode_cb_77) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 77 0000
        gbc.setState(0x1411, 0x7685, 0x4b70, 0x8081, 0x47c6, 0xe82a, 0x1, 0x0);
        gbc.writeMem(0x1411, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0x1413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0001
        gbc.setState(0xb9c4, 0xa8c6, 0xf890, 0x6b4a, 0x350a, 0xa963, 0x0, 0x0);
        gbc.writeMem(0xb9c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa8c6, gbc.sp());
        EXPECT(0xb9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c4));
        EXPECT(0x77, gbc.readMem(0xb9c5));
        // CB 77 0002
        gbc.setState(0x5f87, 0x5960, 0xa860, 0x28d3, 0x88c8, 0xd553, 0x0, 0x0);
        gbc.writeMem(0x5f87, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5960, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0003
        gbc.setState(0x3cf7, 0x572b, 0x1550, 0xa9cd, 0xf25b, 0xd84e, 0x0, 0x1);
        gbc.writeMem(0x3cf7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x572b, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0005
        gbc.setState(0xa01e, 0x887f, 0x9cc0, 0x4d2d, 0x9338, 0x9158, 0x0, 0x0);
        gbc.writeMem(0xa01e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x887f, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01e));
        EXPECT(0x77, gbc.readMem(0xa01f));
        // CB 77 0007
        gbc.setState(0x1f6, 0xcbc8, 0x6ab0, 0x4839, 0x49d4, 0xb424, 0x0, 0x0);
        gbc.writeMem(0x1f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcbc8, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0008
        gbc.setState(0x924, 0xe6da, 0xff70, 0xd57f, 0xf284, 0x2af8, 0x0, 0x1);
        gbc.writeMem(0x924, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe6da, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0009
        gbc.setState(0x6d75, 0xec9a, 0x7bf0, 0x8279, 0x25e, 0x8246, 0x1, 0x1);
        gbc.writeMem(0x6d75, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xec9a, gbc.sp());
        EXPECT(0x6d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 000A
        gbc.setState(0xc8b9, 0x22e9, 0xd140, 0x6c84, 0x9872, 0x6326, 0x0, 0x1);
        gbc.writeMem(0xc8b9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22e9, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b9));
        EXPECT(0x77, gbc.readMem(0xc8ba));
        // CB 77 000B
        gbc.setState(0xabe1, 0x3c7, 0x9890, 0x631e, 0x646b, 0x702b, 0x0, 0x1);
        gbc.writeMem(0xabe1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3c7, gbc.sp());
        EXPECT(0xabe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe1));
        EXPECT(0x77, gbc.readMem(0xabe2));
        // CB 77 000C
        gbc.setState(0x3a10, 0xe190, 0x2e30, 0x3036, 0xc384, 0x47ee, 0x0, 0x1);
        gbc.writeMem(0x3a10, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 000D
        gbc.setState(0x373, 0x5bf8, 0xce70, 0xe4eb, 0xfa37, 0xb2c0, 0x1, 0x0);
        gbc.writeMem(0x373, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5bf8, gbc.sp());
        EXPECT(0x375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 000E
        gbc.setState(0xbf2, 0x46c1, 0x6f40, 0xffdc, 0x76b8, 0xe07f, 0x0, 0x1);
        gbc.writeMem(0xbf2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 000F
        gbc.setState(0x3a43, 0x3c56, 0x6fc0, 0xd50c, 0xef56, 0x538, 0x1, 0x0);
        gbc.writeMem(0x3a43, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x3a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0010
        gbc.setState(0x80d5, 0xe12, 0xf930, 0x7cd0, 0x6ac9, 0xad0f, 0x1, 0x1);
        gbc.writeMem(0x80d5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0x80d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d5));
        EXPECT(0x77, gbc.readMem(0x80d6));
        // CB 77 0011
        gbc.setState(0xa68b, 0xa986, 0x6800, 0xede3, 0x1ed, 0xc6c9, 0x1, 0x0);
        gbc.writeMem(0xa68b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0xa68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68b));
        EXPECT(0x77, gbc.readMem(0xa68c));
        // CB 77 0012
        gbc.setState(0xdd72, 0x2733, 0xd5f0, 0x7a0b, 0x19dd, 0x9cb9, 0x0, 0x0);
        gbc.writeMem(0xdd72, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2733, gbc.sp());
        EXPECT(0xdd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd72));
        EXPECT(0x77, gbc.readMem(0xdd73));
        // CB 77 0013
        gbc.setState(0x76a0, 0xebc, 0xb4b0, 0x6d12, 0x2997, 0x7b56, 0x0, 0x1);
        gbc.writeMem(0x76a0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0x76a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0014
        gbc.setState(0x2bc4, 0x5184, 0x8690, 0x9976, 0x8de8, 0xd584, 0x0, 0x1);
        gbc.writeMem(0x2bc4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0x2bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0015
        gbc.setState(0x8e1d, 0xa20a, 0x7700, 0xd3f8, 0x562f, 0xe5c4, 0x0, 0x1);
        gbc.writeMem(0x8e1d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa20a, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1d));
        EXPECT(0x77, gbc.readMem(0x8e1e));
        // CB 77 0016
        gbc.setState(0xef41, 0xbd7b, 0xf4b0, 0x728e, 0x463a, 0xd9b, 0x0, 0x0);
        gbc.writeMem(0xef41, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbd7b, gbc.sp());
        EXPECT(0xef43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef41));
        EXPECT(0x77, gbc.readMem(0xef42));
        // CB 77 0017
        gbc.setState(0x20f6, 0x76b3, 0x9c70, 0x4517, 0xeb, 0x5679, 0x1, 0x1);
        gbc.writeMem(0x20f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x76b3, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0018
        gbc.setState(0x39e1, 0x36ba, 0xfda0, 0x194e, 0x2596, 0xbaf7, 0x0, 0x1);
        gbc.writeMem(0x39e1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x36ba, gbc.sp());
        EXPECT(0x39e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0019
        gbc.setState(0x2a07, 0x6f83, 0xcee0, 0x81c9, 0x36e9, 0xbef7, 0x0, 0x1);
        gbc.writeMem(0x2a07, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 001A
        gbc.setState(0xa743, 0xe28, 0x40c0, 0x35d7, 0x94b, 0xfc6d, 0x0, 0x0);
        gbc.writeMem(0xa743, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe28, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa743));
        EXPECT(0x77, gbc.readMem(0xa744));
        // CB 77 001B
        gbc.setState(0x685d, 0xe770, 0xe950, 0x281d, 0xd78f, 0x6dec, 0x0, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe770, gbc.sp());
        EXPECT(0x685f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 001C
        gbc.setState(0x5ee1, 0x866f, 0xcd70, 0x174f, 0x9960, 0x24b, 0x0, 0x0);
        gbc.writeMem(0x5ee1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x866f, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 001D
        gbc.setState(0xda67, 0xf694, 0xccf0, 0xe98c, 0x854d, 0x208e, 0x1, 0x1);
        gbc.writeMem(0xda67, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda67));
        EXPECT(0x77, gbc.readMem(0xda68));
        // CB 77 001E
        gbc.setState(0xe532, 0xcb32, 0xad50, 0x3a45, 0x601b, 0xf193, 0x1, 0x0);
        gbc.writeMem(0xe532, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0xe534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe532));
        EXPECT(0x77, gbc.readMem(0xe533));
        // CB 77 0020
        gbc.setState(0xeb7a, 0x23d5, 0xe830, 0x856e, 0xbd87, 0x9e45, 0x1, 0x1);
        gbc.writeMem(0xeb7a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0xeb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7a));
        EXPECT(0x77, gbc.readMem(0xeb7b));
        // CB 77 0021
        gbc.setState(0x7627, 0x7b01, 0x19d0, 0x822a, 0x5e3d, 0x6351, 0x0, 0x0);
        gbc.writeMem(0x7627, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0x7629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0022
        gbc.setState(0x24fe, 0xb034, 0x42d0, 0xc718, 0xe8cf, 0xf457, 0x0, 0x1);
        gbc.writeMem(0x24fe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x2500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0023
        gbc.setState(0x408e, 0x393e, 0xac30, 0xee98, 0xc03a, 0xb127, 0x1, 0x1);
        gbc.writeMem(0x408e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0x4090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0024
        gbc.setState(0xd38c, 0x13e5, 0xe5d0, 0x54a0, 0x83ba, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38c));
        EXPECT(0x77, gbc.readMem(0xd38d));
        // CB 77 0025
        gbc.setState(0x5548, 0xa1c9, 0x4c00, 0x204e, 0x9ccc, 0xf35c, 0x0, 0x1);
        gbc.writeMem(0x5548, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0x554a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0026
        gbc.setState(0x85e6, 0xd90c, 0x14e0, 0xcf92, 0xb366, 0xb129, 0x0, 0x0);
        gbc.writeMem(0x85e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e6));
        EXPECT(0x77, gbc.readMem(0x85e7));
        // CB 77 0028
        gbc.setState(0xdc31, 0xce08, 0x8760, 0x485, 0x861d, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce08, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc31));
        EXPECT(0x77, gbc.readMem(0xdc32));
        // CB 77 0029
        gbc.setState(0x894e, 0x3618, 0x8e00, 0x8096, 0x87cc, 0xdec9, 0x0, 0x0);
        gbc.writeMem(0x894e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894e));
        EXPECT(0x77, gbc.readMem(0x894f));
        // CB 77 002A
        gbc.setState(0xeca4, 0x72e4, 0x75d0, 0x719d, 0xfc83, 0xb62c, 0x1, 0x0);
        gbc.writeMem(0xeca4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x72e4, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca4));
        EXPECT(0x77, gbc.readMem(0xeca5));
        // CB 77 002C
        gbc.setState(0x4371, 0xfb5b, 0x5690, 0xcb59, 0x35d6, 0x93b0, 0x0, 0x0);
        gbc.writeMem(0x4371, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0x4373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 002D
        gbc.setState(0xba6, 0xa575, 0x4a90, 0x30a7, 0x4328, 0xfb73, 0x0, 0x1);
        gbc.writeMem(0xba6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa575, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 002E
        gbc.setState(0x9e85, 0x7a49, 0x55b0, 0xa40b, 0xf7c4, 0xe92b, 0x1, 0x1);
        gbc.writeMem(0x9e85, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7a49, gbc.sp());
        EXPECT(0x9e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e85));
        EXPECT(0x77, gbc.readMem(0x9e86));
        // CB 77 002F
        gbc.setState(0x4054, 0x4c72, 0x8bd0, 0x7656, 0xb955, 0x2e44, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4c72, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0030
        gbc.setState(0xbf44, 0x3721, 0x66c0, 0x845b, 0xbd67, 0xee26, 0x0, 0x1);
        gbc.writeMem(0xbf44, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3721, gbc.sp());
        EXPECT(0xbf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf44));
        EXPECT(0x77, gbc.readMem(0xbf45));
        // CB 77 0031
        gbc.setState(0x3071, 0x3314, 0xc600, 0xa767, 0xf35b, 0x3aea, 0x0, 0x0);
        gbc.writeMem(0x3071, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0032
        gbc.setState(0x2280, 0xa2fe, 0xbdc0, 0xca9b, 0x28d4, 0xa3fb, 0x1, 0x0);
        gbc.writeMem(0x2280, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x2282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0033
        gbc.setState(0x2368, 0xcc28, 0x7f00, 0x4ca7, 0xc847, 0xcb4c, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcc28, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0034
        gbc.setState(0xdd53, 0x6d23, 0xb600, 0x5be3, 0x5329, 0x1819, 0x1, 0x0);
        gbc.writeMem(0xdd53, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0xdd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd53));
        EXPECT(0x77, gbc.readMem(0xdd54));
        // CB 77 0035
        gbc.setState(0xdc71, 0xd033, 0x9a0, 0xd972, 0x9629, 0x14b6, 0x0, 0x0);
        gbc.writeMem(0xdc71, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0xdc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc71));
        EXPECT(0x77, gbc.readMem(0xdc72));
        // CB 77 0036
        gbc.setState(0x9aa7, 0x2ce7, 0xf5a0, 0xb556, 0xab08, 0x35d8, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x9aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa7));
        EXPECT(0x77, gbc.readMem(0x9aa8));
        // CB 77 0037
        gbc.setState(0xe025, 0xee5, 0x50b0, 0x8915, 0x61d4, 0x17c0, 0x1, 0x1);
        gbc.writeMem(0xe025, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0xe027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe025));
        EXPECT(0x77, gbc.readMem(0xe026));
        // CB 77 0038
        gbc.setState(0xe291, 0xfc09, 0xd9c0, 0x6259, 0x7a1b, 0x487e, 0x0, 0x0);
        gbc.writeMem(0xe291, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfc09, gbc.sp());
        EXPECT(0xe293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe291));
        EXPECT(0x77, gbc.readMem(0xe292));
        // CB 77 0039
        gbc.setState(0xdcc3, 0x1b9d, 0x3160, 0x6bfe, 0x7aaa, 0x7c50, 0x1, 0x0);
        gbc.writeMem(0xdcc3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1b9d, gbc.sp());
        EXPECT(0xdcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc3));
        EXPECT(0x77, gbc.readMem(0xdcc4));
        // CB 77 003A
        gbc.setState(0xc1c0, 0x117d, 0x2e40, 0xeee, 0x6722, 0x7aeb, 0x1, 0x1);
        gbc.writeMem(0xc1c0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x117d, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x77, gbc.readMem(0xc1c1));
        // CB 77 003B
        gbc.setState(0xe781, 0x1540, 0xb1e0, 0xd197, 0x625d, 0x629c, 0x0, 0x1);
        gbc.writeMem(0xe781, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe781));
        EXPECT(0x77, gbc.readMem(0xe782));
        // CB 77 003D
        gbc.setState(0x1173, 0x2193, 0x8ff0, 0x140e, 0x304e, 0x6a01, 0x0, 0x0);
        gbc.writeMem(0x1173, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2193, gbc.sp());
        EXPECT(0x1175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 003E
        gbc.setState(0x1d7d, 0xbe8b, 0x2560, 0xdc46, 0x8b23, 0x1602, 0x0, 0x1);
        gbc.writeMem(0x1d7d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbe8b, gbc.sp());
        EXPECT(0x1d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 003F
        gbc.setState(0x3ba2, 0x4cb4, 0x8310, 0x8f4d, 0x6130, 0xf278, 0x1, 0x1);
        gbc.writeMem(0x3ba2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4cb4, gbc.sp());
        EXPECT(0x3ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0040
        gbc.setState(0x2dc8, 0x79d, 0xdd70, 0xf528, 0xfbc4, 0x9fdb, 0x0, 0x0);
        gbc.writeMem(0x2dc8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x79d, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0041
        gbc.setState(0x9856, 0x83dd, 0xe0e0, 0x1957, 0x5e89, 0x89c1, 0x0, 0x0);
        gbc.writeMem(0x9856, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0x9858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9856));
        EXPECT(0x77, gbc.readMem(0x9857));
        // CB 77 0042
        gbc.setState(0x7c5, 0x2ae0, 0x60f0, 0xfca, 0xb347, 0xede9, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0043
        gbc.setState(0xc83b, 0x5f1, 0xc700, 0xe58d, 0x31d2, 0xa7c4, 0x0, 0x0);
        gbc.writeMem(0xc83b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5f1, gbc.sp());
        EXPECT(0xc83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83b));
        EXPECT(0x77, gbc.readMem(0xc83c));
        // CB 77 0044
        gbc.setState(0xda88, 0xb1ab, 0xcd40, 0x2c3, 0xdfd9, 0x8813, 0x1, 0x1);
        gbc.writeMem(0xda88, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda88));
        EXPECT(0x77, gbc.readMem(0xda89));
        // CB 77 0045
        gbc.setState(0xb04f, 0x7ab8, 0xb870, 0x3f2e, 0xbe85, 0x3ea2, 0x1, 0x0);
        gbc.writeMem(0xb04f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7ab8, gbc.sp());
        EXPECT(0xb051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04f));
        EXPECT(0x77, gbc.readMem(0xb050));
        // CB 77 0047
        gbc.setState(0x44f6, 0xb4c4, 0xa940, 0xe9c5, 0x6a7e, 0xcc62, 0x1, 0x1);
        gbc.writeMem(0x44f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x44f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0048
        gbc.setState(0xd983, 0x8a2c, 0xa990, 0x126a, 0xf29e, 0x5823, 0x0, 0x0);
        gbc.writeMem(0xd983, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8a2c, gbc.sp());
        EXPECT(0xd985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd983));
        EXPECT(0x77, gbc.readMem(0xd984));
        // CB 77 0049
        gbc.setState(0x146a, 0xf998, 0x5a90, 0x2c54, 0x1a0a, 0x4ad7, 0x1, 0x1);
        gbc.writeMem(0x146a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf998, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 004A
        gbc.setState(0x787d, 0xccb8, 0x79c0, 0xbca0, 0xdd2c, 0x11e2, 0x0, 0x1);
        gbc.writeMem(0x787d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xccb8, gbc.sp());
        EXPECT(0x787f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 004B
        gbc.setState(0x603b, 0x70c4, 0x17a0, 0x5c39, 0xcdd6, 0xd95b, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 004C
        gbc.setState(0x7598, 0xf4f9, 0x5650, 0xee38, 0x4424, 0xba53, 0x1, 0x1);
        gbc.writeMem(0x7598, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf4f9, gbc.sp());
        EXPECT(0x759a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 004D
        gbc.setState(0x50e8, 0x57db, 0x350, 0x9465, 0xf911, 0x93ad, 0x1, 0x0);
        gbc.writeMem(0x50e8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x57db, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 004E
        gbc.setState(0x6d05, 0x89b9, 0xd9c0, 0xd93e, 0xfc25, 0xe988, 0x0, 0x0);
        gbc.writeMem(0x6d05, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x6d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 004F
        gbc.setState(0x2e2a, 0x6d13, 0x34b0, 0xa33e, 0xafac, 0x313, 0x1, 0x0);
        gbc.writeMem(0x2e2a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6d13, gbc.sp());
        EXPECT(0x2e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0050
        gbc.setState(0xee0e, 0xfc5, 0x9470, 0xed54, 0x412b, 0xf8c, 0x0, 0x0);
        gbc.writeMem(0xee0e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0e));
        EXPECT(0x77, gbc.readMem(0xee0f));
        // CB 77 0051
        gbc.setState(0xc396, 0x45cb, 0x5c40, 0x5b75, 0x2787, 0xcd1a, 0x1, 0x0);
        gbc.writeMem(0xc396, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc396));
        EXPECT(0x77, gbc.readMem(0xc397));
        // CB 77 0052
        gbc.setState(0xe21a, 0xbe93, 0x95f0, 0x6ef8, 0x923c, 0x535c, 0x1, 0x1);
        gbc.writeMem(0xe21a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbe93, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0x77, gbc.readMem(0xe21b));
        // CB 77 0053
        gbc.setState(0x41e3, 0x37ec, 0xe7f0, 0xa349, 0x6ac9, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0x41e3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x37ec, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0054
        gbc.setState(0xeb9f, 0x5708, 0xa770, 0xf435, 0x6551, 0xaa51, 0x0, 0x0);
        gbc.writeMem(0xeb9f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xeba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9f));
        EXPECT(0x77, gbc.readMem(0xeba0));
        // CB 77 0056
        gbc.setState(0x44cf, 0xc01e, 0x9e10, 0xf303, 0x2ee5, 0xe8ff, 0x1, 0x1);
        gbc.writeMem(0x44cf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0x44d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0057
        gbc.setState(0x1b23, 0x14bc, 0xdf40, 0x2a3d, 0xa805, 0x993e, 0x0, 0x0);
        gbc.writeMem(0x1b23, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x14bc, gbc.sp());
        EXPECT(0x1b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0058
        gbc.setState(0x768a, 0x46f6, 0x52f0, 0xea42, 0x7cdb, 0x4495, 0x0, 0x0);
        gbc.writeMem(0x768a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x46f6, gbc.sp());
        EXPECT(0x768c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0059
        gbc.setState(0x296f, 0x41f6, 0x31a0, 0xadc3, 0x67b0, 0xd157, 0x1, 0x0);
        gbc.writeMem(0x296f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0x2971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 005B
        gbc.setState(0x20cd, 0xe8d7, 0x2fc0, 0x8127, 0x9593, 0xc5d0, 0x0, 0x0);
        gbc.writeMem(0x20cd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe8d7, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 005C
        gbc.setState(0x6a14, 0x8d43, 0x7340, 0xeca1, 0x63a8, 0xe449, 0x1, 0x1);
        gbc.writeMem(0x6a14, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8d43, gbc.sp());
        EXPECT(0x6a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 005D
        gbc.setState(0x54df, 0x5973, 0x52d0, 0xb310, 0x2284, 0xb359, 0x0, 0x0);
        gbc.writeMem(0x54df, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5973, gbc.sp());
        EXPECT(0x54e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 005E
        gbc.setState(0x8719, 0xf30e, 0x49d0, 0x1a86, 0x9fa, 0x6931, 0x1, 0x1);
        gbc.writeMem(0x8719, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0x871b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8719));
        EXPECT(0x77, gbc.readMem(0x871a));
        // CB 77 005F
        gbc.setState(0x5bf0, 0x1137, 0xd70, 0x662d, 0xa643, 0x4cb1, 0x0, 0x0);
        gbc.writeMem(0x5bf0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0060
        gbc.setState(0xa38f, 0xe809, 0x42d0, 0x3641, 0x3d28, 0xa51f, 0x1, 0x1);
        gbc.writeMem(0xa38f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe809, gbc.sp());
        EXPECT(0xa391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38f));
        EXPECT(0x77, gbc.readMem(0xa390));
        // CB 77 0062
        gbc.setState(0xaaef, 0x2e13, 0x9310, 0x486e, 0x1d21, 0x28f1, 0x1, 0x0);
        gbc.writeMem(0xaaef, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e13, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaef));
        EXPECT(0x77, gbc.readMem(0xaaf0));
        // CB 77 0063
        gbc.setState(0xea9a, 0xf3cf, 0xd0b0, 0x629c, 0x886f, 0x2c1e, 0x1, 0x1);
        gbc.writeMem(0xea9a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf3cf, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9a));
        EXPECT(0x77, gbc.readMem(0xea9b));
        // CB 77 0064
        gbc.setState(0x40db, 0x8a65, 0x4150, 0xa5e7, 0xc05d, 0x9e61, 0x0, 0x0);
        gbc.writeMem(0x40db, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8a65, gbc.sp());
        EXPECT(0x40dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0065
        gbc.setState(0xc159, 0xea18, 0x1f00, 0x937e, 0xe84d, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0xc159, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xea18, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc159));
        EXPECT(0x77, gbc.readMem(0xc15a));
        // CB 77 0066
        gbc.setState(0x1929, 0x58b8, 0x8740, 0x1497, 0x6b4f, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x1929, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x58b8, gbc.sp());
        EXPECT(0x192b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0067
        gbc.setState(0x9147, 0xf5c5, 0xb910, 0xb1aa, 0xbdb4, 0xcbde, 0x1, 0x1);
        gbc.writeMem(0x9147, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf5c5, gbc.sp());
        EXPECT(0x9149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9147));
        EXPECT(0x77, gbc.readMem(0x9148));
        // CB 77 0068
        gbc.setState(0x4ea4, 0xe975, 0x8d0, 0x2c00, 0xcec1, 0xef2e, 0x1, 0x0);
        gbc.writeMem(0x4ea4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe975, gbc.sp());
        EXPECT(0x4ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0069
        gbc.setState(0xb881, 0xacb, 0x3ab0, 0x6387, 0x55e9, 0xb06a, 0x1, 0x1);
        gbc.writeMem(0xb881, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xacb, gbc.sp());
        EXPECT(0xb883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb881));
        EXPECT(0x77, gbc.readMem(0xb882));
        // CB 77 006A
        gbc.setState(0xc142, 0xcf1f, 0x2110, 0x411b, 0xe22f, 0xed05, 0x1, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf1f, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0x77, gbc.readMem(0xc143));
        // CB 77 006B
        gbc.setState(0x6ac0, 0x392c, 0x70b0, 0x3ccf, 0x83c4, 0x66fb, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x392c, gbc.sp());
        EXPECT(0x6ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 006C
        gbc.setState(0x40b6, 0x214c, 0x4360, 0x6859, 0x9533, 0x5714, 0x1, 0x1);
        gbc.writeMem(0x40b6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x214c, gbc.sp());
        EXPECT(0x40b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 006D
        gbc.setState(0x9e8a, 0x1487, 0x3930, 0x46ac, 0x71bd, 0xabe5, 0x1, 0x0);
        gbc.writeMem(0x9e8a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x9e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8a));
        EXPECT(0x77, gbc.readMem(0x9e8b));
        // CB 77 006E
        gbc.setState(0xab95, 0x6e30, 0x10c0, 0x799a, 0x3b50, 0x6bde, 0x1, 0x0);
        gbc.writeMem(0xab95, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6e30, gbc.sp());
        EXPECT(0xab97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab95));
        EXPECT(0x77, gbc.readMem(0xab96));
        // CB 77 006F
        gbc.setState(0x1675, 0x4f97, 0x8620, 0xaa81, 0x591e, 0xef08, 0x1, 0x1);
        gbc.writeMem(0x1675, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f97, gbc.sp());
        EXPECT(0x1677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0070
        gbc.setState(0x6972, 0x61c5, 0xd620, 0x29b4, 0xe54c, 0xf81a, 0x1, 0x0);
        gbc.writeMem(0x6972, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0071
        gbc.setState(0x3387, 0xfccf, 0x2ac0, 0xc6eb, 0xc6da, 0x66b9, 0x0, 0x0);
        gbc.writeMem(0x3387, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfccf, gbc.sp());
        EXPECT(0x3389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0072
        gbc.setState(0xceef, 0xee38, 0xeef0, 0xc600, 0xe013, 0xfc9c, 0x1, 0x1);
        gbc.writeMem(0xceef, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xee38, gbc.sp());
        EXPECT(0xcef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceef));
        EXPECT(0x77, gbc.readMem(0xcef0));
        // CB 77 0073
        gbc.setState(0x9a30, 0x4d74, 0x35d0, 0x4932, 0xf216, 0xa3d8, 0x0, 0x1);
        gbc.writeMem(0x9a30, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4d74, gbc.sp());
        EXPECT(0x9a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a30));
        EXPECT(0x77, gbc.readMem(0x9a31));
        // CB 77 0074
        gbc.setState(0x1c64, 0x5841, 0x9410, 0xadf7, 0x9fe4, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0x1c64, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0075
        gbc.setState(0x3dfa, 0x2d0f, 0x5c30, 0xd4b1, 0xc5b5, 0x6ce3, 0x0, 0x0);
        gbc.writeMem(0x3dfa, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0076
        gbc.setState(0x97ce, 0xe056, 0x21c0, 0x2e45, 0xca20, 0x8da, 0x0, 0x0);
        gbc.writeMem(0x97ce, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x97d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ce));
        EXPECT(0x77, gbc.readMem(0x97cf));
        // CB 77 0077
        gbc.setState(0x733c, 0x634a, 0x4d00, 0x7bff, 0xbb42, 0x5cd0, 0x0, 0x0);
        gbc.writeMem(0x733c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x634a, gbc.sp());
        EXPECT(0x733e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0078
        gbc.setState(0xd337, 0xcee3, 0xbe40, 0xbe68, 0xd7af, 0x7409, 0x0, 0x0);
        gbc.writeMem(0xd337, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0xd339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd337));
        EXPECT(0x77, gbc.readMem(0xd338));
        // CB 77 0079
        gbc.setState(0x1f5b, 0x2abf, 0x2740, 0x6982, 0x2555, 0x6e8e, 0x1, 0x1);
        gbc.writeMem(0x1f5b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2abf, gbc.sp());
        EXPECT(0x1f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 007A
        gbc.setState(0x6cbd, 0xf581, 0xa810, 0xcbf5, 0x39a5, 0x5d66, 0x0, 0x0);
        gbc.writeMem(0x6cbd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0x6cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 007B
        gbc.setState(0x79e6, 0x3f4a, 0x2e30, 0x7a67, 0x3931, 0xd607, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 007C
        gbc.setState(0x312b, 0x5be5, 0x840, 0xe04, 0x2bc7, 0x7de2, 0x1, 0x0);
        gbc.writeMem(0x312b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0x312d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 007D
        gbc.setState(0x7cc9, 0x7776, 0x3240, 0x4c77, 0xe8dc, 0x8c77, 0x0, 0x0);
        gbc.writeMem(0x7cc9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0x7ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 007E
        gbc.setState(0x4158, 0x59a4, 0xb2a0, 0xdfd4, 0xd87c, 0x8405, 0x1, 0x1);
        gbc.writeMem(0x4158, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0x415a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 007F
        gbc.setState(0x2f7d, 0xa74d, 0xe840, 0x3553, 0x8616, 0x5f04, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa74d, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0080
        gbc.setState(0x1870, 0x90df, 0x9d80, 0x3705, 0x8472, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0x1870, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x90df, gbc.sp());
        EXPECT(0x1872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0081
        gbc.setState(0x9ae5, 0x4804, 0x1b40, 0x2389, 0xf17f, 0xf72a, 0x1, 0x0);
        gbc.writeMem(0x9ae5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4804, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae5));
        EXPECT(0x77, gbc.readMem(0x9ae6));
        // CB 77 0082
        gbc.setState(0x6bd2, 0xc295, 0x64d0, 0x9683, 0x8382, 0xa848, 0x1, 0x1);
        gbc.writeMem(0x6bd2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc295, gbc.sp());
        EXPECT(0x6bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0083
        gbc.setState(0x40e2, 0xc4d1, 0x4e80, 0xbe1d, 0xf8cc, 0x4843, 0x1, 0x1);
        gbc.writeMem(0x40e2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0084
        gbc.setState(0x528a, 0xe136, 0x5dc0, 0x296d, 0xfa42, 0x6a5e, 0x0, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe136, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0085
        gbc.setState(0xc68, 0xd923, 0x470, 0x16a5, 0x6daf, 0x1807, 0x0, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd923, gbc.sp());
        EXPECT(0xc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0086
        gbc.setState(0xefbd, 0x8912, 0xfa60, 0x741c, 0x2e21, 0x755f, 0x1, 0x0);
        gbc.writeMem(0xefbd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0xefbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbd));
        EXPECT(0x77, gbc.readMem(0xefbe));
        // CB 77 0087
        gbc.setState(0xeb93, 0x57f, 0x97b0, 0xd17b, 0x216e, 0x799a, 0x1, 0x1);
        gbc.writeMem(0xeb93, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x57f, gbc.sp());
        EXPECT(0xeb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb93));
        EXPECT(0x77, gbc.readMem(0xeb94));
        // CB 77 0088
        gbc.setState(0x4f63, 0x44c1, 0x8990, 0x709b, 0x2921, 0xe3f9, 0x0, 0x1);
        gbc.writeMem(0x4f63, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0089
        gbc.setState(0x54d6, 0xf542, 0x90c0, 0xa1a0, 0xcd36, 0xef13, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0x54d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 008B
        gbc.setState(0x647a, 0xc26f, 0x6a50, 0x86f8, 0xfe71, 0x3296, 0x1, 0x0);
        gbc.writeMem(0x647a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x647c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 008C
        gbc.setState(0x5b2d, 0x9d59, 0xc10, 0x7803, 0xf637, 0xea9b, 0x0, 0x0);
        gbc.writeMem(0x5b2d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 008E
        gbc.setState(0xb21a, 0xca5, 0x1130, 0x2f67, 0xec19, 0xfccd, 0x0, 0x0);
        gbc.writeMem(0xb21a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21a));
        EXPECT(0x77, gbc.readMem(0xb21b));
        // CB 77 008F
        gbc.setState(0x72b2, 0xd2ae, 0x58d0, 0x4333, 0x4104, 0x891b, 0x0, 0x0);
        gbc.writeMem(0x72b2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd2ae, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0090
        gbc.setState(0x9cd0, 0xc7a7, 0x6c80, 0x397, 0x1f89, 0x5f62, 0x0, 0x0);
        gbc.writeMem(0x9cd0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0x9cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd0));
        EXPECT(0x77, gbc.readMem(0x9cd1));
        // CB 77 0091
        gbc.setState(0x6dc1, 0x8ea8, 0xf410, 0x5820, 0x1a66, 0x9060, 0x0, 0x0);
        gbc.writeMem(0x6dc1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8ea8, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0092
        gbc.setState(0xec10, 0x2444, 0x7980, 0x6953, 0x3a1d, 0xa655, 0x1, 0x0);
        gbc.writeMem(0xec10, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2444, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec10));
        EXPECT(0x77, gbc.readMem(0xec11));
        // CB 77 0093
        gbc.setState(0xe6dc, 0xc258, 0xcb80, 0x863b, 0xcb5a, 0xb060, 0x1, 0x0);
        gbc.writeMem(0xe6dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc258, gbc.sp());
        EXPECT(0xe6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6dc));
        EXPECT(0x77, gbc.readMem(0xe6dd));
        // CB 77 0094
        gbc.setState(0xd5fd, 0xa510, 0x9c90, 0xa0c3, 0x97e0, 0xd2b5, 0x1, 0x1);
        gbc.writeMem(0xd5fd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa510, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5fd));
        EXPECT(0x77, gbc.readMem(0xd5fe));
        // CB 77 0096
        gbc.setState(0xdb8b, 0x4ba, 0xa2f0, 0x6293, 0x6540, 0x352e, 0x1, 0x0);
        gbc.writeMem(0xdb8b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4ba, gbc.sp());
        EXPECT(0xdb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8b));
        EXPECT(0x77, gbc.readMem(0xdb8c));
        // CB 77 0097
        gbc.setState(0xa1d3, 0xe767, 0x1780, 0xd68b, 0x92cf, 0x9d9b, 0x0, 0x1);
        gbc.writeMem(0xa1d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d3));
        EXPECT(0x77, gbc.readMem(0xa1d4));
        // CB 77 0098
        gbc.setState(0x5161, 0x1af, 0x2c40, 0xa723, 0x9fbe, 0x5d7e, 0x0, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x5163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0099
        gbc.setState(0xdc9d, 0xa601, 0x53f0, 0x14b1, 0xc386, 0x1d27, 0x0, 0x0);
        gbc.writeMem(0xdc9d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0xdc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9d));
        EXPECT(0x77, gbc.readMem(0xdc9e));
        // CB 77 009A
        gbc.setState(0x8cd8, 0xfdd3, 0xadc0, 0x405d, 0x8c92, 0x181b, 0x1, 0x1);
        gbc.writeMem(0x8cd8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd8));
        EXPECT(0x77, gbc.readMem(0x8cd9));
        // CB 77 009B
        gbc.setState(0x344f, 0x6f5d, 0x8250, 0x16d6, 0x379c, 0xe998, 0x0, 0x1);
        gbc.writeMem(0x344f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6f5d, gbc.sp());
        EXPECT(0x3451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 009C
        gbc.setState(0xe46f, 0x3cd2, 0xadc0, 0x664b, 0x3665, 0x9c0a, 0x1, 0x1);
        gbc.writeMem(0xe46f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0xe471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46f));
        EXPECT(0x77, gbc.readMem(0xe470));
        // CB 77 009D
        gbc.setState(0x7510, 0xf13e, 0x4d10, 0x9249, 0x1aa8, 0xa8bd, 0x0, 0x1);
        gbc.writeMem(0x7510, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf13e, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 009E
        gbc.setState(0x7468, 0x994a, 0xd050, 0x2fa8, 0x83be, 0xa59, 0x1, 0x1);
        gbc.writeMem(0x7468, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x994a, gbc.sp());
        EXPECT(0x746a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 009F
        gbc.setState(0x1233, 0xa204, 0x53b0, 0xeab1, 0xe400, 0xd2b8, 0x1, 0x0);
        gbc.writeMem(0x1233, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00A1
        gbc.setState(0x5d33, 0x9c7f, 0x5830, 0x851, 0x71df, 0xc3b0, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0x5d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00A3
        gbc.setState(0xada4, 0xceee, 0xf270, 0xc04b, 0xd60e, 0xa8dd, 0x0, 0x0);
        gbc.writeMem(0xada4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada4));
        EXPECT(0x77, gbc.readMem(0xada5));
        // CB 77 00A4
        gbc.setState(0xb4aa, 0x66ca, 0xcd50, 0x8539, 0xc8d1, 0xc79e, 0x1, 0x0);
        gbc.writeMem(0xb4aa, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0xb4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4aa));
        EXPECT(0x77, gbc.readMem(0xb4ab));
        // CB 77 00A5
        gbc.setState(0x23c4, 0x9b47, 0xad0, 0x7f87, 0x6037, 0x7f52, 0x0, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00A6
        gbc.setState(0x6d85, 0xb538, 0x8070, 0xe9d3, 0x9dae, 0x2990, 0x0, 0x0);
        gbc.writeMem(0x6d85, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00A7
        gbc.setState(0x2aaf, 0x6b89, 0xae30, 0x2cd2, 0x1585, 0x87ef, 0x1, 0x0);
        gbc.writeMem(0x2aaf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6b89, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00A8
        gbc.setState(0xb48d, 0xdb87, 0xf2c0, 0x43eb, 0x9842, 0x7eb4, 0x1, 0x0);
        gbc.writeMem(0xb48d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdb87, gbc.sp());
        EXPECT(0xb48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48d));
        EXPECT(0x77, gbc.readMem(0xb48e));
        // CB 77 00A9
        gbc.setState(0xe00c, 0x8ea1, 0x75e0, 0x991f, 0xb456, 0x4270, 0x1, 0x1);
        gbc.writeMem(0xe00c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8ea1, gbc.sp());
        EXPECT(0xe00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00c));
        EXPECT(0x77, gbc.readMem(0xe00d));
        // CB 77 00AA
        gbc.setState(0x54af, 0xffc, 0xedc0, 0xc75, 0x3d8e, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x54af, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xffc, gbc.sp());
        EXPECT(0x54b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00AB
        gbc.setState(0x6be5, 0x50d, 0x77c0, 0x51db, 0x3c9b, 0x7e0a, 0x1, 0x0);
        gbc.writeMem(0x6be5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0x6be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00AC
        gbc.setState(0xa1ec, 0x5b19, 0x4fc0, 0x85bf, 0x29e5, 0xd83d, 0x1, 0x1);
        gbc.writeMem(0xa1ec, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5b19, gbc.sp());
        EXPECT(0xa1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ec));
        EXPECT(0x77, gbc.readMem(0xa1ed));
        // CB 77 00AD
        gbc.setState(0x74c6, 0xd99d, 0xcc50, 0xf11e, 0xe621, 0xd513, 0x0, 0x1);
        gbc.writeMem(0x74c6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd99d, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00AE
        gbc.setState(0x9bf4, 0x9881, 0x7750, 0x7f9, 0xbcb6, 0x758a, 0x0, 0x1);
        gbc.writeMem(0x9bf4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x77, gbc.readMem(0x9bf5));
        // CB 77 00AF
        gbc.setState(0x504, 0x8473, 0xd9a0, 0x4851, 0xedba, 0x1366, 0x1, 0x0);
        gbc.writeMem(0x504, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8473, gbc.sp());
        EXPECT(0x506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00B0
        gbc.setState(0x2f73, 0x94e6, 0x6230, 0x43f7, 0x2bff, 0x4153, 0x1, 0x1);
        gbc.writeMem(0x2f73, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x2f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00B1
        gbc.setState(0x37f5, 0x488b, 0xee20, 0x2b70, 0xd805, 0x4b9f, 0x0, 0x1);
        gbc.writeMem(0x37f5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0x37f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00B2
        gbc.setState(0xa5ed, 0xc776, 0x49c0, 0x8ced, 0xe9fd, 0xafa5, 0x0, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc776, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0x77, gbc.readMem(0xa5ee));
        // CB 77 00B3
        gbc.setState(0x596b, 0x78e6, 0x77a0, 0xb92b, 0xfefd, 0xdee2, 0x1, 0x1);
        gbc.writeMem(0x596b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x78e6, gbc.sp());
        EXPECT(0x596d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00B4
        gbc.setState(0x81d8, 0x2d56, 0x3e60, 0x2e58, 0xf3e9, 0x5bc2, 0x1, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2d56, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0x77, gbc.readMem(0x81d9));
        // CB 77 00B5
        gbc.setState(0x178e, 0xf9be, 0x1800, 0x21d6, 0x247, 0x3f5e, 0x1, 0x1);
        gbc.writeMem(0x178e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00B6
        gbc.setState(0x87ab, 0x1bc, 0xfea0, 0x7380, 0xb314, 0x8b38, 0x0, 0x1);
        gbc.writeMem(0x87ab, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1bc, gbc.sp());
        EXPECT(0x87ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ab));
        EXPECT(0x77, gbc.readMem(0x87ac));
        // CB 77 00B7
        gbc.setState(0xea0b, 0xa3b, 0x4a60, 0x2ae, 0xc969, 0x9f2, 0x0, 0x1);
        gbc.writeMem(0xea0b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0xea0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0b));
        EXPECT(0x77, gbc.readMem(0xea0c));
        // CB 77 00B8
        gbc.setState(0x5f79, 0xe2d, 0x1330, 0x1d21, 0x7059, 0x3af0, 0x0, 0x0);
        gbc.writeMem(0x5f79, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x5f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00B9
        gbc.setState(0x8dbe, 0x13de, 0x250, 0x92dd, 0x79c2, 0x6b2a, 0x1, 0x0);
        gbc.writeMem(0x8dbe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbe));
        EXPECT(0x77, gbc.readMem(0x8dbf));
        // CB 77 00BA
        gbc.setState(0x52a5, 0x630e, 0xc5a0, 0xb61b, 0x44cd, 0x6332, 0x0, 0x1);
        gbc.writeMem(0x52a5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x630e, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00BB
        gbc.setState(0x311a, 0xc074, 0x1250, 0xf432, 0xd847, 0xce8e, 0x1, 0x1);
        gbc.writeMem(0x311a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00BC
        gbc.setState(0x3314, 0x79e2, 0x4bb0, 0xc53c, 0xbacb, 0x231f, 0x0, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x79e2, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00BD
        gbc.setState(0x745a, 0x9e28, 0xf80, 0x2596, 0x2da1, 0x49d, 0x1, 0x0);
        gbc.writeMem(0x745a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e28, gbc.sp());
        EXPECT(0x745c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00BE
        gbc.setState(0xacf4, 0x9772, 0x91c0, 0x5547, 0xbedb, 0xe3b5, 0x0, 0x1);
        gbc.writeMem(0xacf4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9772, gbc.sp());
        EXPECT(0xacf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf4));
        EXPECT(0x77, gbc.readMem(0xacf5));
        // CB 77 00BF
        gbc.setState(0xe262, 0xff1f, 0xb2a0, 0xeffb, 0xa6c4, 0x27df, 0x0, 0x0);
        gbc.writeMem(0xe262, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0xe264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe262));
        EXPECT(0x77, gbc.readMem(0xe263));
        // CB 77 00C0
        gbc.setState(0x92b1, 0xe75e, 0x4370, 0xb7e3, 0xb4c4, 0x9905, 0x1, 0x0);
        gbc.writeMem(0x92b1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe75e, gbc.sp());
        EXPECT(0x92b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b1));
        EXPECT(0x77, gbc.readMem(0x92b2));
        // CB 77 00C1
        gbc.setState(0x3ea9, 0x2791, 0x7130, 0x1f6a, 0x189f, 0x6fec, 0x1, 0x0);
        gbc.writeMem(0x3ea9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00C2
        gbc.setState(0xca4a, 0xe966, 0xdfa0, 0x456e, 0x6b01, 0x846e, 0x1, 0x1);
        gbc.writeMem(0xca4a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0xca4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4a));
        EXPECT(0x77, gbc.readMem(0xca4b));
        // CB 77 00C3
        gbc.setState(0x274c, 0x5474, 0x6ff0, 0xedc0, 0x7abe, 0xbad, 0x1, 0x1);
        gbc.writeMem(0x274c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0x274e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00C4
        gbc.setState(0x2726, 0x888d, 0x5b40, 0x22c7, 0x937f, 0x687a, 0x1, 0x0);
        gbc.writeMem(0x2726, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x888d, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00C5
        gbc.setState(0x168, 0x7f67, 0xef10, 0x8f40, 0xd019, 0xaf36, 0x0, 0x1);
        gbc.writeMem(0x168, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7f67, gbc.sp());
        EXPECT(0x16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00C6
        gbc.setState(0xe19, 0xdae, 0xa5d0, 0xb3ce, 0x460, 0xee77, 0x0, 0x0);
        gbc.writeMem(0xe19, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00C7
        gbc.setState(0x851f, 0x7a1e, 0xd610, 0x6fe4, 0xc7e4, 0xaff3, 0x0, 0x0);
        gbc.writeMem(0x851f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7a1e, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851f));
        EXPECT(0x77, gbc.readMem(0x8520));
        // CB 77 00C8
        gbc.setState(0xdc9d, 0xb1c3, 0x6ce0, 0x978f, 0x607a, 0x378e, 0x0, 0x0);
        gbc.writeMem(0xdc9d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb1c3, gbc.sp());
        EXPECT(0xdc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9d));
        EXPECT(0x77, gbc.readMem(0xdc9e));
        // CB 77 00C9
        gbc.setState(0xc950, 0x6d1a, 0xf250, 0x1e50, 0xa0ee, 0x2080, 0x1, 0x0);
        gbc.writeMem(0xc950, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0xc952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc950));
        EXPECT(0x77, gbc.readMem(0xc951));
        // CB 77 00CA
        gbc.setState(0xadba, 0xc79e, 0x4e50, 0x38e1, 0x6dae, 0x6717, 0x0, 0x1);
        gbc.writeMem(0xadba, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc79e, gbc.sp());
        EXPECT(0xadbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadba));
        EXPECT(0x77, gbc.readMem(0xadbb));
        // CB 77 00CB
        gbc.setState(0x9669, 0x26df, 0x5f20, 0xaeff, 0xc0c5, 0xa562, 0x1, 0x0);
        gbc.writeMem(0x9669, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9669));
        EXPECT(0x77, gbc.readMem(0x966a));
        // CB 77 00CC
        gbc.setState(0x508c, 0x5558, 0xd9e0, 0x7c29, 0xb7f4, 0x2326, 0x0, 0x1);
        gbc.writeMem(0x508c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5558, gbc.sp());
        EXPECT(0x508e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00CD
        gbc.setState(0x3929, 0xf0a3, 0x77d0, 0x1b6d, 0x6f0c, 0x23aa, 0x0, 0x1);
        gbc.writeMem(0x3929, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf0a3, gbc.sp());
        EXPECT(0x392b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00CE
        gbc.setState(0xb11a, 0x2467, 0xbb20, 0x9f56, 0x94c7, 0xc163, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2467, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0x77, gbc.readMem(0xb11b));
        // CB 77 00CF
        gbc.setState(0xb471, 0xa16f, 0x48b0, 0x1901, 0x5c78, 0xb896, 0x0, 0x1);
        gbc.writeMem(0xb471, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa16f, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb471));
        EXPECT(0x77, gbc.readMem(0xb472));
        // CB 77 00D0
        gbc.setState(0xcadd, 0x5bf5, 0xd300, 0x1664, 0x14ef, 0xc4b5, 0x1, 0x1);
        gbc.writeMem(0xcadd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5bf5, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadd));
        EXPECT(0x77, gbc.readMem(0xcade));
        // CB 77 00D1
        gbc.setState(0xb5dc, 0xec81, 0x77a0, 0xd3d1, 0x610f, 0x5036, 0x0, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xec81, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0x77, gbc.readMem(0xb5dd));
        // CB 77 00D2
        gbc.setState(0xb1e8, 0x4a01, 0x1560, 0xd18e, 0xcd85, 0xd8f1, 0x1, 0x1);
        gbc.writeMem(0xb1e8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4a01, gbc.sp());
        EXPECT(0xb1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e8));
        EXPECT(0x77, gbc.readMem(0xb1e9));
        // CB 77 00D3
        gbc.setState(0x3133, 0xdcf8, 0x2090, 0xb702, 0x918d, 0x2fd5, 0x1, 0x0);
        gbc.writeMem(0x3133, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdcf8, gbc.sp());
        EXPECT(0x3135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00D5
        gbc.setState(0x729f, 0x75af, 0xa720, 0x996f, 0x5f51, 0x2a3e, 0x0, 0x1);
        gbc.writeMem(0x729f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x75af, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00D6
        gbc.setState(0x73a2, 0x47a7, 0x12e0, 0xc9cb, 0x6c4a, 0x8efb, 0x0, 0x1);
        gbc.writeMem(0x73a2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0x73a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00D7
        gbc.setState(0x50ba, 0x30b1, 0xf440, 0x80ad, 0x5b49, 0x2f95, 0x1, 0x1);
        gbc.writeMem(0x50ba, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x50bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00D8
        gbc.setState(0xe57d, 0x99a4, 0x6e60, 0x7b4a, 0xf26c, 0x8f45, 0x0, 0x0);
        gbc.writeMem(0xe57d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x99a4, gbc.sp());
        EXPECT(0xe57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57d));
        EXPECT(0x77, gbc.readMem(0xe57e));
        // CB 77 00D9
        gbc.setState(0x2b18, 0x7dc9, 0x2550, 0xcec, 0xed55, 0x4084, 0x1, 0x0);
        gbc.writeMem(0x2b18, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00DA
        gbc.setState(0xcab7, 0xb2d7, 0xf7a0, 0x1cb8, 0x32b9, 0x4a7a, 0x1, 0x1);
        gbc.writeMem(0xcab7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb2d7, gbc.sp());
        EXPECT(0xcab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab7));
        EXPECT(0x77, gbc.readMem(0xcab8));
        // CB 77 00DC
        gbc.setState(0x7314, 0xab3e, 0xbc90, 0x557, 0xf256, 0xb567, 0x1, 0x1);
        gbc.writeMem(0x7314, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab3e, gbc.sp());
        EXPECT(0x7316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00DD
        gbc.setState(0x9526, 0x8165, 0x4260, 0xb02c, 0xb22d, 0x12d7, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8165, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9526));
        EXPECT(0x77, gbc.readMem(0x9527));
        // CB 77 00DE
        gbc.setState(0x14a5, 0x8f8b, 0x48c0, 0xad5c, 0x3079, 0x3bf8, 0x1, 0x1);
        gbc.writeMem(0x14a5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x14a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00DF
        gbc.setState(0x6a33, 0x8d32, 0x3f50, 0x5d9d, 0xf363, 0xb487, 0x1, 0x0);
        gbc.writeMem(0x6a33, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8d32, gbc.sp());
        EXPECT(0x6a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00E0
        gbc.setState(0xb49f, 0xe57d, 0xbbc0, 0x8b77, 0xcaea, 0xc9c6, 0x0, 0x0);
        gbc.writeMem(0xb49f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0xb4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49f));
        EXPECT(0x77, gbc.readMem(0xb4a0));
        // CB 77 00E1
        gbc.setState(0x438, 0x7e29, 0x6b60, 0x2040, 0x7a51, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7e29, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00E2
        gbc.setState(0xb797, 0x5a6f, 0x1ab0, 0xb966, 0xa625, 0xd221, 0x0, 0x1);
        gbc.writeMem(0xb797, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5a6f, gbc.sp());
        EXPECT(0xb799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb797));
        EXPECT(0x77, gbc.readMem(0xb798));
        // CB 77 00E3
        gbc.setState(0x525, 0xa83b, 0x63c0, 0x7159, 0x86af, 0x6171, 0x0, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa83b, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00E4
        gbc.setState(0x325f, 0x3a41, 0x9490, 0x5494, 0x4ff1, 0x3d5c, 0x1, 0x1);
        gbc.writeMem(0x325f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3a41, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00E5
        gbc.setState(0x7a72, 0xa13b, 0xc900, 0xa58c, 0x96e1, 0xb946, 0x1, 0x1);
        gbc.writeMem(0x7a72, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0x7a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00E6
        gbc.setState(0xce9c, 0xa702, 0xb390, 0x9f9a, 0xd4e, 0x1530, 0x1, 0x1);
        gbc.writeMem(0xce9c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0xce9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9c));
        EXPECT(0x77, gbc.readMem(0xce9d));
        // CB 77 00E8
        gbc.setState(0xb9ac, 0x3130, 0x3b10, 0xea29, 0x9752, 0xd0e, 0x1, 0x0);
        gbc.writeMem(0xb9ac, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3130, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ac));
        EXPECT(0x77, gbc.readMem(0xb9ad));
        // CB 77 00E9
        gbc.setState(0x9db1, 0x77e9, 0xe1a0, 0x5b11, 0x84a9, 0xa26f, 0x1, 0x0);
        gbc.writeMem(0x9db1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db1));
        EXPECT(0x77, gbc.readMem(0x9db2));
        // CB 77 00EA
        gbc.setState(0x6e6f, 0xb967, 0x62a0, 0xa4c3, 0x7488, 0xf57d, 0x0, 0x0);
        gbc.writeMem(0x6e6f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb967, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00EB
        gbc.setState(0x6543, 0xace6, 0x88b0, 0x7459, 0xa9b7, 0xfe8c, 0x1, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xace6, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00EC
        gbc.setState(0x9c2a, 0x87f9, 0xe3b0, 0x4c8d, 0x99a6, 0x8d24, 0x0, 0x0);
        gbc.writeMem(0x9c2a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x87f9, gbc.sp());
        EXPECT(0x9c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2a));
        EXPECT(0x77, gbc.readMem(0x9c2b));
        // CB 77 00ED
        gbc.setState(0x7ce5, 0x5aaa, 0x140, 0xae94, 0x25c2, 0x5940, 0x1, 0x1);
        gbc.writeMem(0x7ce5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00EE
        gbc.setState(0xb743, 0x1e0b, 0x2b50, 0x457a, 0xa091, 0xba07, 0x1, 0x0);
        gbc.writeMem(0xb743, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1e0b, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb743));
        EXPECT(0x77, gbc.readMem(0xb744));
        // CB 77 00EF
        gbc.setState(0x454e, 0x64de, 0xf400, 0x5a13, 0x739c, 0x2048, 0x1, 0x0);
        gbc.writeMem(0x454e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x64de, gbc.sp());
        EXPECT(0x4550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00F0
        gbc.setState(0x175a, 0x843e, 0xd4c0, 0x7939, 0x5c56, 0x7f8c, 0x1, 0x1);
        gbc.writeMem(0x175a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x843e, gbc.sp());
        EXPECT(0x175c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00F1
        gbc.setState(0x92ae, 0xadb6, 0xb380, 0xaecb, 0xcc11, 0x5071, 0x1, 0x0);
        gbc.writeMem(0x92ae, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ae));
        EXPECT(0x77, gbc.readMem(0x92af));
        // CB 77 00F2
        gbc.setState(0x3f6e, 0x9d5b, 0x66f0, 0x84fc, 0x211e, 0xb0b, 0x1, 0x1);
        gbc.writeMem(0x3f6e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9d5b, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00F3
        gbc.setState(0xd563, 0x5296, 0xbf00, 0x3c58, 0xc191, 0x7f09, 0x0, 0x0);
        gbc.writeMem(0xd563, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5296, gbc.sp());
        EXPECT(0xd565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd563));
        EXPECT(0x77, gbc.readMem(0xd564));
        // CB 77 00F4
        gbc.setState(0x7675, 0x8c5e, 0x7330, 0x13cf, 0xbdd, 0x90d0, 0x0, 0x1);
        gbc.writeMem(0x7675, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0x7677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00F5
        gbc.setState(0x4169, 0xc46c, 0x1c80, 0x9a6f, 0xf05c, 0xd98, 0x1, 0x0);
        gbc.writeMem(0x4169, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0x416b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00F7
        gbc.setState(0x8bef, 0xb077, 0x0, 0x3c28, 0x2290, 0xd5c, 0x0, 0x1);
        gbc.writeMem(0x8bef, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x8bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bef));
        EXPECT(0x77, gbc.readMem(0x8bf0));
        // CB 77 00F8
        gbc.setState(0xb1a8, 0xfbff, 0x4b50, 0xf98c, 0xbd7b, 0x11, 0x0, 0x0);
        gbc.writeMem(0xb1a8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfbff, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a8));
        EXPECT(0x77, gbc.readMem(0xb1a9));
        // CB 77 00FA
        gbc.setState(0x2805, 0x5715, 0xf830, 0x3048, 0x8bc0, 0xaca2, 0x1, 0x0);
        gbc.writeMem(0x2805, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5715, gbc.sp());
        EXPECT(0x2807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00FB
        gbc.setState(0xd38a, 0x1a56, 0x53c0, 0xf3e0, 0xec10, 0xd3ad, 0x1, 0x0);
        gbc.writeMem(0xd38a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0xd38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38a));
        EXPECT(0x77, gbc.readMem(0xd38b));
        // CB 77 00FC
        gbc.setState(0xd0b7, 0x2cb0, 0x16c0, 0xf06, 0xf2cf, 0xb578, 0x1, 0x0);
        gbc.writeMem(0xd0b7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2cb0, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b7));
        EXPECT(0x77, gbc.readMem(0xd0b8));
        // CB 77 00FD
        gbc.setState(0x58cf, 0xc525, 0x5d40, 0x822b, 0xc93b, 0x11ee, 0x0, 0x1);
        gbc.writeMem(0x58cf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc525, gbc.sp());
        EXPECT(0x58d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 00FE
        gbc.setState(0x3f65, 0x2245, 0x9570, 0xefc5, 0x25f8, 0x43e4, 0x1, 0x1);
        gbc.writeMem(0x3f65, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0x3f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 00FF
        gbc.setState(0x4349, 0x82bb, 0x5f90, 0x8991, 0xd641, 0x34bd, 0x0, 0x0);
        gbc.writeMem(0x4349, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x82bb, gbc.sp());
        EXPECT(0x434b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0100
        gbc.setState(0x6015, 0x69f5, 0xd470, 0x3529, 0x319, 0xf84f, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x69f5, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0101
        gbc.setState(0xb853, 0x76d9, 0x6d10, 0x2ba9, 0xe051, 0x5364, 0x0, 0x0);
        gbc.writeMem(0xb853, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0xb855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb853));
        EXPECT(0x77, gbc.readMem(0xb854));
        // CB 77 0102
        gbc.setState(0x4563, 0xe28, 0x3720, 0x61d4, 0x4744, 0xf933, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe28, gbc.sp());
        EXPECT(0x4565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0103
        gbc.setState(0x42c4, 0x7140, 0xd540, 0x5ae6, 0x193c, 0x2583, 0x0, 0x0);
        gbc.writeMem(0x42c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0104
        gbc.setState(0xe9c5, 0xf122, 0xd710, 0xaf4c, 0xef44, 0x18de, 0x0, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c5));
        EXPECT(0x77, gbc.readMem(0xe9c6));
        // CB 77 0105
        gbc.setState(0x57cb, 0x505c, 0x7f00, 0xc233, 0x9ccd, 0x1207, 0x0, 0x1);
        gbc.writeMem(0x57cb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x57cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0106
        gbc.setState(0x58ef, 0xa130, 0x8b00, 0x7270, 0x4d69, 0x6768, 0x1, 0x1);
        gbc.writeMem(0x58ef, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0x58f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0107
        gbc.setState(0x16a9, 0x47dd, 0x4650, 0x1e1d, 0x36a1, 0xd8a8, 0x0, 0x1);
        gbc.writeMem(0x16a9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x47dd, gbc.sp());
        EXPECT(0x16ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0109
        gbc.setState(0xac7e, 0x595e, 0x4940, 0xf413, 0x1e19, 0xc619, 0x1, 0x1);
        gbc.writeMem(0xac7e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x595e, gbc.sp());
        EXPECT(0xac80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7e));
        EXPECT(0x77, gbc.readMem(0xac7f));
        // CB 77 010A
        gbc.setState(0xb012, 0x1818, 0xdd60, 0xf64e, 0x32a7, 0xbb3c, 0x1, 0x1);
        gbc.writeMem(0xb012, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0xb014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb012));
        EXPECT(0x77, gbc.readMem(0xb013));
        // CB 77 010B
        gbc.setState(0x1f93, 0x74be, 0x5c20, 0xdf6b, 0xc8e3, 0x85a6, 0x0, 0x1);
        gbc.writeMem(0x1f93, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x74be, gbc.sp());
        EXPECT(0x1f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 010D
        gbc.setState(0x3805, 0x442d, 0x5290, 0xbea0, 0xc66d, 0x8fbe, 0x1, 0x0);
        gbc.writeMem(0x3805, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x442d, gbc.sp());
        EXPECT(0x3807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 010E
        gbc.setState(0x12bc, 0xb6d1, 0xad50, 0xb138, 0x6026, 0x3261, 0x0, 0x1);
        gbc.writeMem(0x12bc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb6d1, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 010F
        gbc.setState(0xbf15, 0x1d8e, 0x6c80, 0xc02b, 0x4104, 0xa108, 0x1, 0x0);
        gbc.writeMem(0xbf15, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0xbf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf15));
        EXPECT(0x77, gbc.readMem(0xbf16));
        // CB 77 0110
        gbc.setState(0xb68, 0x48af, 0xd600, 0x5d2a, 0xe79, 0xb840, 0x1, 0x0);
        gbc.writeMem(0xb68, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x48af, gbc.sp());
        EXPECT(0xb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0111
        gbc.setState(0x3442, 0xd4f2, 0xfbe0, 0x2ec1, 0x2b2d, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0x3442, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0112
        gbc.setState(0x87dc, 0x686, 0x3210, 0x96a8, 0x49ac, 0x5067, 0x0, 0x0);
        gbc.writeMem(0x87dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x686, gbc.sp());
        EXPECT(0x87de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dc));
        EXPECT(0x77, gbc.readMem(0x87dd));
        // CB 77 0113
        gbc.setState(0x1591, 0x5a55, 0xa090, 0x31b2, 0xccbc, 0xcf39, 0x1, 0x1);
        gbc.writeMem(0x1591, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5a55, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0114
        gbc.setState(0xd6fc, 0x3e3, 0x4cf0, 0x76d9, 0x5958, 0xdb7e, 0x1, 0x0);
        gbc.writeMem(0xd6fc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3e3, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fc));
        EXPECT(0x77, gbc.readMem(0xd6fd));
        // CB 77 0115
        gbc.setState(0xe2b0, 0xcb79, 0x7340, 0xcde9, 0xa871, 0x3834, 0x0, 0x0);
        gbc.writeMem(0xe2b0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b0));
        EXPECT(0x77, gbc.readMem(0xe2b1));
        // CB 77 0116
        gbc.setState(0x4252, 0xb1f2, 0xead0, 0x860e, 0xd59c, 0x6dde, 0x0, 0x1);
        gbc.writeMem(0x4252, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0117
        gbc.setState(0x5725, 0x8917, 0x1410, 0x404c, 0x418, 0x2846, 0x1, 0x0);
        gbc.writeMem(0x5725, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8917, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0119
        gbc.setState(0xd55c, 0xee83, 0x5650, 0x972e, 0x7fd, 0x4d15, 0x0, 0x0);
        gbc.writeMem(0xd55c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xee83, gbc.sp());
        EXPECT(0xd55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55c));
        EXPECT(0x77, gbc.readMem(0xd55d));
        // CB 77 011B
        gbc.setState(0xd9e6, 0x81ec, 0x2840, 0xbb67, 0x888f, 0xb641, 0x1, 0x0);
        gbc.writeMem(0xd9e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x81ec, gbc.sp());
        EXPECT(0xd9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e6));
        EXPECT(0x77, gbc.readMem(0xd9e7));
        // CB 77 011D
        gbc.setState(0xe5d5, 0xae6f, 0x4440, 0xea65, 0x896d, 0x3464, 0x0, 0x0);
        gbc.writeMem(0xe5d5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d5));
        EXPECT(0x77, gbc.readMem(0xe5d6));
        // CB 77 011E
        gbc.setState(0x3f17, 0x1a6d, 0x2cd0, 0x4006, 0xa3ff, 0x6a88, 0x0, 0x0);
        gbc.writeMem(0x3f17, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 011F
        gbc.setState(0x2ff2, 0x4d26, 0xc6f0, 0x9415, 0xb47e, 0xcf8, 0x1, 0x0);
        gbc.writeMem(0x2ff2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0120
        gbc.setState(0xec5b, 0xd602, 0x5ab0, 0x9507, 0x63e0, 0x525a, 0x1, 0x1);
        gbc.writeMem(0xec5b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0xec5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5b));
        EXPECT(0x77, gbc.readMem(0xec5c));
        // CB 77 0121
        gbc.setState(0xe06a, 0x45ca, 0x7020, 0x195b, 0x8486, 0xb2b1, 0x0, 0x0);
        gbc.writeMem(0xe06a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x45ca, gbc.sp());
        EXPECT(0xe06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06a));
        EXPECT(0x77, gbc.readMem(0xe06b));
        // CB 77 0122
        gbc.setState(0x27a, 0xe72c, 0xf930, 0x40cd, 0xa3f3, 0x716a, 0x0, 0x0);
        gbc.writeMem(0x27a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0123
        gbc.setState(0x1a19, 0x1e1d, 0xa700, 0x5e4, 0x1c28, 0x1144, 0x0, 0x0);
        gbc.writeMem(0x1a19, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1e1d, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0124
        gbc.setState(0x7960, 0x7c02, 0xa620, 0xb6a1, 0xa3f9, 0xe513, 0x1, 0x1);
        gbc.writeMem(0x7960, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7c02, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0125
        gbc.setState(0x407, 0xab95, 0x2310, 0x85b1, 0x63d6, 0xdf63, 0x0, 0x1);
        gbc.writeMem(0x407, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0126
        gbc.setState(0x806e, 0x8494, 0x2e20, 0x8ecc, 0xd013, 0xe52a, 0x1, 0x1);
        gbc.writeMem(0x806e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8494, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806e));
        EXPECT(0x77, gbc.readMem(0x806f));
        // CB 77 0128
        gbc.setState(0xd454, 0x26f5, 0x80a0, 0x9988, 0x25a7, 0x1cf, 0x0, 0x0);
        gbc.writeMem(0xd454, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd454));
        EXPECT(0x77, gbc.readMem(0xd455));
        // CB 77 012A
        gbc.setState(0x6818, 0x5316, 0x22f0, 0x2904, 0xa70a, 0x5dcc, 0x1, 0x1);
        gbc.writeMem(0x6818, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5316, gbc.sp());
        EXPECT(0x681a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 012B
        gbc.setState(0x417e, 0xb504, 0x71c0, 0x3ffd, 0xe8c8, 0x3b14, 0x1, 0x1);
        gbc.writeMem(0x417e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0x4180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 012C
        gbc.setState(0x5f67, 0xfee8, 0x80a0, 0xc7d7, 0xe361, 0xf3ef, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 012D
        gbc.setState(0x97f2, 0xb46f, 0x4ac0, 0x7281, 0x5f63, 0xae59, 0x1, 0x0);
        gbc.writeMem(0x97f2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f2));
        EXPECT(0x77, gbc.readMem(0x97f3));
        // CB 77 012F
        gbc.setState(0x667b, 0xd0dd, 0x45b0, 0x7656, 0xb949, 0x251c, 0x1, 0x0);
        gbc.writeMem(0x667b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd0dd, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0130
        gbc.setState(0x220c, 0xd7f9, 0x20e0, 0x2280, 0xf04d, 0x458e, 0x1, 0x0);
        gbc.writeMem(0x220c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd7f9, gbc.sp());
        EXPECT(0x220e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0131
        gbc.setState(0x27ad, 0xbfd7, 0x5190, 0xfe64, 0x208f, 0x2ab7, 0x1, 0x0);
        gbc.writeMem(0x27ad, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0132
        gbc.setState(0xc545, 0xfcd0, 0x6250, 0x7475, 0x72ea, 0x11be, 0x0, 0x0);
        gbc.writeMem(0xc545, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfcd0, gbc.sp());
        EXPECT(0xc547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc545));
        EXPECT(0x77, gbc.readMem(0xc546));
        // CB 77 0133
        gbc.setState(0x82de, 0x21a7, 0x81f0, 0x9281, 0x4e82, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x82de, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x21a7, gbc.sp());
        EXPECT(0x82e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82de));
        EXPECT(0x77, gbc.readMem(0x82df));
        // CB 77 0134
        gbc.setState(0x73fb, 0x3342, 0x1420, 0xb04, 0x384a, 0x6583, 0x0, 0x0);
        gbc.writeMem(0x73fb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0x73fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0135
        gbc.setState(0xc45b, 0x6960, 0x1a60, 0xe0e3, 0x3ccf, 0xbded, 0x1, 0x0);
        gbc.writeMem(0xc45b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0x77, gbc.readMem(0xc45c));
        // CB 77 0136
        gbc.setState(0x483b, 0xce45, 0x81e0, 0xc3e, 0x51ad, 0x3e3f, 0x0, 0x0);
        gbc.writeMem(0x483b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0137
        gbc.setState(0xf5f, 0x79d3, 0x8bd0, 0x21f3, 0xe17e, 0xfed5, 0x1, 0x1);
        gbc.writeMem(0xf5f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x79d3, gbc.sp());
        EXPECT(0xf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0138
        gbc.setState(0x2305, 0x7d40, 0x4840, 0x24f4, 0x4c9f, 0xe6a9, 0x0, 0x1);
        gbc.writeMem(0x2305, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0x2307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0139
        gbc.setState(0x1ea5, 0x70b9, 0x9950, 0x5964, 0x998a, 0xa5d2, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 013A
        gbc.setState(0x81a6, 0x70bf, 0xe920, 0x7dc0, 0xbb06, 0x9cb4, 0x0, 0x0);
        gbc.writeMem(0x81a6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0x81a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a6));
        EXPECT(0x77, gbc.readMem(0x81a7));
        // CB 77 013B
        gbc.setState(0x453f, 0x123, 0x6120, 0x7f7f, 0x7704, 0xa053, 0x0, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x123, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 013D
        gbc.setState(0x1074, 0x4d9a, 0xd270, 0x440, 0x30e, 0xffed, 0x1, 0x0);
        gbc.writeMem(0x1074, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x1076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 013E
        gbc.setState(0x54c0, 0x3bac, 0xa2a0, 0x2e87, 0x568c, 0x4289, 0x0, 0x1);
        gbc.writeMem(0x54c0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 013F
        gbc.setState(0x6e47, 0xca28, 0x6c80, 0x48e2, 0x98e4, 0x79b4, 0x0, 0x0);
        gbc.writeMem(0x6e47, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x6e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0140
        gbc.setState(0x89b5, 0x6f6f, 0xc410, 0xc683, 0xca59, 0x136f, 0x1, 0x1);
        gbc.writeMem(0x89b5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0x89b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b5));
        EXPECT(0x77, gbc.readMem(0x89b6));
        // CB 77 0142
        gbc.setState(0x91ba, 0xbab0, 0x9f10, 0xab7a, 0xdd1c, 0x981a, 0x0, 0x0);
        gbc.writeMem(0x91ba, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbab0, gbc.sp());
        EXPECT(0x91bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ba));
        EXPECT(0x77, gbc.readMem(0x91bb));
        // CB 77 0143
        gbc.setState(0xd4c4, 0x451c, 0x1ef0, 0x263d, 0xfba1, 0x1108, 0x1, 0x1);
        gbc.writeMem(0xd4c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x451c, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c4));
        EXPECT(0x77, gbc.readMem(0xd4c5));
        // CB 77 0144
        gbc.setState(0x6e9e, 0x111d, 0x95c0, 0x6098, 0x9f5c, 0xb588, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x111d, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0145
        gbc.setState(0x457d, 0xd257, 0xb370, 0x309e, 0x6af8, 0x3833, 0x0, 0x0);
        gbc.writeMem(0x457d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x457f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0146
        gbc.setState(0xc548, 0xec7b, 0x76d0, 0xc32e, 0x3669, 0xc74, 0x1, 0x1);
        gbc.writeMem(0xc548, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0xc54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc548));
        EXPECT(0x77, gbc.readMem(0xc549));
        // CB 77 0148
        gbc.setState(0xce54, 0xacb3, 0x9530, 0x99d6, 0x342d, 0xb1fa, 0x1, 0x0);
        gbc.writeMem(0xce54, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xacb3, gbc.sp());
        EXPECT(0xce56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce54));
        EXPECT(0x77, gbc.readMem(0xce55));
        // CB 77 0149
        gbc.setState(0x15c9, 0x344b, 0xbf60, 0x7ff5, 0x82f0, 0x8fdb, 0x1, 0x1);
        gbc.writeMem(0x15c9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 014A
        gbc.setState(0x3872, 0xad43, 0xa010, 0xeb54, 0xb7cc, 0xd69b, 0x1, 0x0);
        gbc.writeMem(0x3872, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad43, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 014C
        gbc.setState(0x42d4, 0x94a5, 0x78e0, 0xa1e7, 0x4986, 0x1d6d, 0x1, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 014D
        gbc.setState(0xc4f6, 0x4884, 0xc9d0, 0x8e8, 0x394c, 0x3d41, 0x0, 0x0);
        gbc.writeMem(0xc4f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0xc4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f6));
        EXPECT(0x77, gbc.readMem(0xc4f7));
        // CB 77 014E
        gbc.setState(0x86e8, 0xcb68, 0xbf50, 0x4e2c, 0x73df, 0x3fee, 0x0, 0x0);
        gbc.writeMem(0x86e8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcb68, gbc.sp());
        EXPECT(0x86ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e8));
        EXPECT(0x77, gbc.readMem(0x86e9));
        // CB 77 014F
        gbc.setState(0xba95, 0x5d0, 0x6ad0, 0x2d46, 0xa4de, 0xbfec, 0x1, 0x0);
        gbc.writeMem(0xba95, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d0, gbc.sp());
        EXPECT(0xba97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba95));
        EXPECT(0x77, gbc.readMem(0xba96));
        // CB 77 0150
        gbc.setState(0x2832, 0x6480, 0x6cb0, 0x5ae5, 0xd61d, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0x2832, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0x2834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0151
        gbc.setState(0x87af, 0xc080, 0x26d0, 0xcc64, 0xef6f, 0x2351, 0x0, 0x0);
        gbc.writeMem(0x87af, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc080, gbc.sp());
        EXPECT(0x87b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87af));
        EXPECT(0x77, gbc.readMem(0x87b0));
        // CB 77 0152
        gbc.setState(0x6860, 0x3692, 0x3070, 0x32f0, 0x45cd, 0xa90a, 0x0, 0x1);
        gbc.writeMem(0x6860, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3692, gbc.sp());
        EXPECT(0x6862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0153
        gbc.setState(0x7d37, 0x91fe, 0x7eb0, 0x16f0, 0x4de3, 0xa015, 0x1, 0x1);
        gbc.writeMem(0x7d37, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x91fe, gbc.sp());
        EXPECT(0x7d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0154
        gbc.setState(0xc6d6, 0x32e6, 0x5ea0, 0x59e6, 0xd630, 0xd5c4, 0x1, 0x0);
        gbc.writeMem(0xc6d6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x32e6, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d6));
        EXPECT(0x77, gbc.readMem(0xc6d7));
        // CB 77 0155
        gbc.setState(0x7760, 0xf6cc, 0x22f0, 0xb5e, 0x838c, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0x7760, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf6cc, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0156
        gbc.setState(0x14a8, 0x3463, 0x9fb0, 0xb4fd, 0xfa6a, 0xe7fc, 0x0, 0x1);
        gbc.writeMem(0x14a8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3463, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0157
        gbc.setState(0x6477, 0xb1a4, 0xe880, 0x6f2f, 0x6b2e, 0xcf9d, 0x1, 0x1);
        gbc.writeMem(0x6477, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb1a4, gbc.sp());
        EXPECT(0x6479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0159
        gbc.setState(0xb109, 0x832f, 0x8a80, 0x8720, 0x3742, 0x6dcc, 0x0, 0x1);
        gbc.writeMem(0xb109, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x832f, gbc.sp());
        EXPECT(0xb10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb109));
        EXPECT(0x77, gbc.readMem(0xb10a));
        // CB 77 015A
        gbc.setState(0xe33d, 0x3fa6, 0xa820, 0xbc6e, 0x6871, 0xcf8f, 0x0, 0x0);
        gbc.writeMem(0xe33d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3fa6, gbc.sp());
        EXPECT(0xe33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33d));
        EXPECT(0x77, gbc.readMem(0xe33e));
        // CB 77 015B
        gbc.setState(0xd73d, 0x9c95, 0xf6a0, 0xbb40, 0xf32b, 0xace8, 0x0, 0x0);
        gbc.writeMem(0xd73d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73d));
        EXPECT(0x77, gbc.readMem(0xd73e));
        // CB 77 015C
        gbc.setState(0xbcea, 0x7dad, 0xe720, 0xf5ad, 0x2c1d, 0xb8b8, 0x1, 0x1);
        gbc.writeMem(0xbcea, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0xbcec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcea));
        EXPECT(0x77, gbc.readMem(0xbceb));
        // CB 77 015D
        gbc.setState(0x89, 0x320c, 0xb60, 0x8bc8, 0x7ca6, 0x13eb, 0x0, 0x0);
        gbc.writeMem(0x89, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0x8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 015E
        gbc.setState(0xae8d, 0x32c9, 0x4770, 0xfbc4, 0x1156, 0x52c6, 0x1, 0x0);
        gbc.writeMem(0xae8d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0xae8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8d));
        EXPECT(0x77, gbc.readMem(0xae8e));
        // CB 77 015F
        gbc.setState(0xe73, 0x8018, 0x8b00, 0xdb58, 0x6063, 0x1ac0, 0x1, 0x0);
        gbc.writeMem(0xe73, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0xe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0160
        gbc.setState(0x6ca, 0x5f6c, 0x5e70, 0xe5b8, 0xf46f, 0x22f0, 0x0, 0x1);
        gbc.writeMem(0x6ca, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5f6c, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0161
        gbc.setState(0xec, 0xc8e, 0xe6a0, 0xf1f6, 0x923d, 0x5cc9, 0x1, 0x1);
        gbc.writeMem(0xec, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc8e, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0162
        gbc.setState(0x5ee, 0xd784, 0xafb0, 0xb04a, 0x46f6, 0x14d2, 0x0, 0x1);
        gbc.writeMem(0x5ee, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd784, gbc.sp());
        EXPECT(0x5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0163
        gbc.setState(0x3ae9, 0xdd5b, 0x5a0, 0x55e4, 0x2115, 0x69d4, 0x0, 0x1);
        gbc.writeMem(0x3ae9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdd5b, gbc.sp());
        EXPECT(0x3aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0164
        gbc.setState(0x8db9, 0x8e49, 0x4260, 0xbbc3, 0xf7eb, 0xce58, 0x0, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0x77, gbc.readMem(0x8dba));
        // CB 77 0165
        gbc.setState(0x3a0e, 0xb17e, 0x6b80, 0x83b1, 0xf042, 0x6529, 0x0, 0x0);
        gbc.writeMem(0x3a0e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0166
        gbc.setState(0x5427, 0x77bd, 0xa9c0, 0x8835, 0xe1d7, 0x5b46, 0x1, 0x1);
        gbc.writeMem(0x5427, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0167
        gbc.setState(0x7dc4, 0xa5e8, 0xf030, 0x89f1, 0xe3e2, 0xc02e, 0x1, 0x0);
        gbc.writeMem(0x7dc4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa5e8, gbc.sp());
        EXPECT(0x7dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0168
        gbc.setState(0x70a, 0x152b, 0xa0, 0x32ac, 0xb8b6, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0x70a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0x70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0169
        gbc.setState(0xd009, 0x5593, 0x9b60, 0xef76, 0x20dd, 0xca53, 0x1, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0x77, gbc.readMem(0xd00a));
        // CB 77 016A
        gbc.setState(0x7c89, 0xbff1, 0xad60, 0xca51, 0x1ae5, 0x747d, 0x0, 0x0);
        gbc.writeMem(0x7c89, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbff1, gbc.sp());
        EXPECT(0x7c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 016B
        gbc.setState(0x1a34, 0x47f4, 0x71f0, 0xb721, 0xf351, 0x2f98, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x47f4, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 016C
        gbc.setState(0x5f0c, 0xe584, 0xe5f0, 0x7e3b, 0x6487, 0xe8dc, 0x1, 0x0);
        gbc.writeMem(0x5f0c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 016D
        gbc.setState(0x5401, 0xe273, 0x4ce0, 0x3630, 0x7ee6, 0xb41, 0x0, 0x1);
        gbc.writeMem(0x5401, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 016E
        gbc.setState(0x8726, 0xfd8a, 0x3b30, 0x40bc, 0x6574, 0xd266, 0x0, 0x0);
        gbc.writeMem(0x8726, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8726));
        EXPECT(0x77, gbc.readMem(0x8727));
        // CB 77 016F
        gbc.setState(0x5c1d, 0x2af, 0x7fc0, 0x3b57, 0xebfa, 0x3cb7, 0x1, 0x1);
        gbc.writeMem(0x5c1d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0171
        gbc.setState(0x9b31, 0x6a73, 0xee70, 0x2df, 0x44fa, 0xdd6, 0x0, 0x1);
        gbc.writeMem(0x9b31, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b31));
        EXPECT(0x77, gbc.readMem(0x9b32));
        // CB 77 0172
        gbc.setState(0x8154, 0x881, 0x47c0, 0x2039, 0x52ec, 0xdb9d, 0x0, 0x1);
        gbc.writeMem(0x8154, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x881, gbc.sp());
        EXPECT(0x8156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8154));
        EXPECT(0x77, gbc.readMem(0x8155));
        // CB 77 0173
        gbc.setState(0xb90f, 0xf0da, 0xd570, 0xf661, 0xf8cb, 0xe322, 0x0, 0x0);
        gbc.writeMem(0xb90f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf0da, gbc.sp());
        EXPECT(0xb911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90f));
        EXPECT(0x77, gbc.readMem(0xb910));
        // CB 77 0174
        gbc.setState(0x94b6, 0x352e, 0x3ba0, 0xb31f, 0x965b, 0x781d, 0x0, 0x1);
        gbc.writeMem(0x94b6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0x94b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b6));
        EXPECT(0x77, gbc.readMem(0x94b7));
        // CB 77 0175
        gbc.setState(0xc0e0, 0x1524, 0xcc00, 0xf22a, 0xa472, 0xba73, 0x0, 0x1);
        gbc.writeMem(0xc0e0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xc0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e0));
        EXPECT(0x77, gbc.readMem(0xc0e1));
        // CB 77 0176
        gbc.setState(0x86ea, 0x4879, 0xa760, 0x4f10, 0xaae, 0x170c, 0x1, 0x0);
        gbc.writeMem(0x86ea, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4879, gbc.sp());
        EXPECT(0x86ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ea));
        EXPECT(0x77, gbc.readMem(0x86eb));
        // CB 77 0177
        gbc.setState(0x93cb, 0x5161, 0x10e0, 0x6717, 0xd021, 0x9739, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5161, gbc.sp());
        EXPECT(0x93cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cb));
        EXPECT(0x77, gbc.readMem(0x93cc));
        // CB 77 0178
        gbc.setState(0x9d65, 0xeb91, 0xf8b0, 0x9982, 0x4b8e, 0x337e, 0x0, 0x1);
        gbc.writeMem(0x9d65, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeb91, gbc.sp());
        EXPECT(0x9d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d65));
        EXPECT(0x77, gbc.readMem(0x9d66));
        // CB 77 0179
        gbc.setState(0x6c9, 0x29e3, 0x87a0, 0xec3, 0x84fc, 0x877a, 0x1, 0x1);
        gbc.writeMem(0x6c9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0x6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 017A
        gbc.setState(0xd7c7, 0xc185, 0x2d0, 0x8abb, 0x99f7, 0xff78, 0x0, 0x1);
        gbc.writeMem(0xd7c7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc185, gbc.sp());
        EXPECT(0xd7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c7));
        EXPECT(0x77, gbc.readMem(0xd7c8));
        // CB 77 017B
        gbc.setState(0x75f4, 0x3729, 0x78c0, 0xfe16, 0x1cf, 0xdd46, 0x0, 0x1);
        gbc.writeMem(0x75f4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3729, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 017C
        gbc.setState(0x4d45, 0xb980, 0xbac0, 0x7b2f, 0xeaa3, 0xb448, 0x0, 0x0);
        gbc.writeMem(0x4d45, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb980, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 017D
        gbc.setState(0x451b, 0xd5ad, 0x32f0, 0xc9a3, 0x3b9b, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x451b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd5ad, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 017E
        gbc.setState(0x5b20, 0xbac8, 0xd050, 0x2ba6, 0x8441, 0x2b6e, 0x0, 0x0);
        gbc.writeMem(0x5b20, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbac8, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 017F
        gbc.setState(0xa923, 0xbf8d, 0x1ca0, 0xa0ba, 0x572a, 0x1a09, 0x1, 0x0);
        gbc.writeMem(0xa923, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0xa925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa923));
        EXPECT(0x77, gbc.readMem(0xa924));
        // CB 77 0180
        gbc.setState(0xd3c3, 0x6a, 0xcc80, 0x27c7, 0xc046, 0xb92a, 0x0, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0x77, gbc.readMem(0xd3c4));
        // CB 77 0181
        gbc.setState(0x8186, 0xecf8, 0x89e0, 0x321c, 0x2ae, 0x3b50, 0x1, 0x0);
        gbc.writeMem(0x8186, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x8188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8186));
        EXPECT(0x77, gbc.readMem(0x8187));
        // CB 77 0182
        gbc.setState(0x5373, 0xf207, 0xe880, 0x867f, 0x644d, 0xda47, 0x0, 0x1);
        gbc.writeMem(0x5373, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0183
        gbc.setState(0x2271, 0xf35c, 0xb700, 0xe553, 0x4ad0, 0xd956, 0x0, 0x1);
        gbc.writeMem(0x2271, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf35c, gbc.sp());
        EXPECT(0x2273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0184
        gbc.setState(0x39ab, 0xd68b, 0xa100, 0x3900, 0x322f, 0x6b57, 0x1, 0x0);
        gbc.writeMem(0x39ab, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd68b, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0185
        gbc.setState(0xd4af, 0x841b, 0x36f0, 0x5c3e, 0xe48a, 0xce5d, 0x1, 0x1);
        gbc.writeMem(0xd4af, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4af));
        EXPECT(0x77, gbc.readMem(0xd4b0));
        // CB 77 0186
        gbc.setState(0x1d6e, 0xbe77, 0x4ea0, 0x9389, 0xf6ef, 0xf9c4, 0x0, 0x0);
        gbc.writeMem(0x1d6e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0x1d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0187
        gbc.setState(0xa0b7, 0x7551, 0x5910, 0xabb4, 0x77f5, 0x5872, 0x1, 0x1);
        gbc.writeMem(0xa0b7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7551, gbc.sp());
        EXPECT(0xa0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b7));
        EXPECT(0x77, gbc.readMem(0xa0b8));
        // CB 77 0188
        gbc.setState(0xa6fd, 0x3f7e, 0x4cd0, 0x7f86, 0x1d67, 0xbaf2, 0x0, 0x0);
        gbc.writeMem(0xa6fd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f7e, gbc.sp());
        EXPECT(0xa6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fd));
        EXPECT(0x77, gbc.readMem(0xa6fe));
        // CB 77 0189
        gbc.setState(0x86bb, 0x8c84, 0x23e0, 0x4017, 0x915c, 0xab68, 0x1, 0x1);
        gbc.writeMem(0x86bb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8c84, gbc.sp());
        EXPECT(0x86bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bb));
        EXPECT(0x77, gbc.readMem(0x86bc));
        // CB 77 018A
        gbc.setState(0x2b12, 0xf2ad, 0xd2e0, 0x2b4d, 0xc7c2, 0x5d42, 0x1, 0x0);
        gbc.writeMem(0x2b12, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 018B
        gbc.setState(0x6343, 0xe7dd, 0x9490, 0x3aa6, 0x4e1f, 0x5f52, 0x0, 0x0);
        gbc.writeMem(0x6343, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe7dd, gbc.sp());
        EXPECT(0x6345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 018C
        gbc.setState(0x7473, 0xcf55, 0x22a0, 0xabfa, 0x1d69, 0x15b3, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 018D
        gbc.setState(0x53c6, 0x1d9f, 0x9640, 0x6f53, 0xee90, 0x23fc, 0x0, 0x0);
        gbc.writeMem(0x53c6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1d9f, gbc.sp());
        EXPECT(0x53c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 018E
        gbc.setState(0xe51b, 0xf033, 0x3480, 0x27b8, 0xdaef, 0xa1c1, 0x1, 0x1);
        gbc.writeMem(0xe51b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0xe51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51b));
        EXPECT(0x77, gbc.readMem(0xe51c));
        // CB 77 018F
        gbc.setState(0x87dd, 0xf21c, 0xdd60, 0x17ed, 0xdb68, 0x3a9c, 0x1, 0x1);
        gbc.writeMem(0x87dd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0x87df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dd));
        EXPECT(0x77, gbc.readMem(0x87de));
        // CB 77 0191
        gbc.setState(0x59b, 0x5aa6, 0xaa30, 0xe7f4, 0x364b, 0x7f7f, 0x1, 0x0);
        gbc.writeMem(0x59b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0192
        gbc.setState(0xea4f, 0x2e5b, 0xaa80, 0xb3d2, 0x3bb5, 0x7f93, 0x0, 0x0);
        gbc.writeMem(0xea4f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0xea51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4f));
        EXPECT(0x77, gbc.readMem(0xea50));
        // CB 77 0193
        gbc.setState(0x1fd3, 0x6b52, 0x5740, 0x915, 0xb5b8, 0xbc56, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6b52, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0194
        gbc.setState(0x21e4, 0xb766, 0xb410, 0xd606, 0x4bb5, 0x51f9, 0x1, 0x0);
        gbc.writeMem(0x21e4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb766, gbc.sp());
        EXPECT(0x21e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0195
        gbc.setState(0xe9c1, 0x1a6f, 0x1270, 0x2b43, 0x88dd, 0x86f2, 0x0, 0x1);
        gbc.writeMem(0xe9c1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c1));
        EXPECT(0x77, gbc.readMem(0xe9c2));
        // CB 77 0197
        gbc.setState(0x9b62, 0x8eea, 0x28e0, 0x1f15, 0xdcb4, 0xbc05, 0x0, 0x0);
        gbc.writeMem(0x9b62, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8eea, gbc.sp());
        EXPECT(0x9b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b62));
        EXPECT(0x77, gbc.readMem(0x9b63));
        // CB 77 0198
        gbc.setState(0xbb22, 0xd0e5, 0xa6e0, 0x41c3, 0xe14c, 0x6f23, 0x0, 0x1);
        gbc.writeMem(0xbb22, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0xbb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb22));
        EXPECT(0x77, gbc.readMem(0xbb23));
        // CB 77 0199
        gbc.setState(0xe2b0, 0xc79b, 0xacb0, 0xc1cd, 0x6755, 0x129c, 0x0, 0x0);
        gbc.writeMem(0xe2b0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc79b, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b0));
        EXPECT(0x77, gbc.readMem(0xe2b1));
        // CB 77 019A
        gbc.setState(0x369c, 0xf24a, 0x4380, 0x2c6c, 0xcee9, 0xcbff, 0x1, 0x1);
        gbc.writeMem(0x369c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 019C
        gbc.setState(0x7f03, 0x62ad, 0x6f70, 0x24, 0xc0c, 0x11d, 0x1, 0x0);
        gbc.writeMem(0x7f03, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 019D
        gbc.setState(0x731e, 0xb1a2, 0x19d0, 0x6a26, 0x7551, 0xb0a2, 0x1, 0x0);
        gbc.writeMem(0x731e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb1a2, gbc.sp());
        EXPECT(0x7320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 019E
        gbc.setState(0xcf67, 0x79e3, 0x740, 0xf184, 0x342, 0xf5e1, 0x1, 0x0);
        gbc.writeMem(0xcf67, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x79e3, gbc.sp());
        EXPECT(0xcf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf67));
        EXPECT(0x77, gbc.readMem(0xcf68));
        // CB 77 01A0
        gbc.setState(0x457f, 0xcb75, 0x9f30, 0x5761, 0x442e, 0x1947, 0x0, 0x0);
        gbc.writeMem(0x457f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01A1
        gbc.setState(0x99dc, 0x623b, 0xe530, 0x36e7, 0xb01, 0x7ce, 0x1, 0x1);
        gbc.writeMem(0x99dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x623b, gbc.sp());
        EXPECT(0x99de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99dc));
        EXPECT(0x77, gbc.readMem(0x99dd));
        // CB 77 01A2
        gbc.setState(0x3fdb, 0x557, 0xda80, 0xe7eb, 0xfe83, 0xff43, 0x0, 0x0);
        gbc.writeMem(0x3fdb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0x3fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01A3
        gbc.setState(0x2b27, 0x6b89, 0xc4a0, 0xb4dc, 0xfa3f, 0x2149, 0x0, 0x1);
        gbc.writeMem(0x2b27, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6b89, gbc.sp());
        EXPECT(0x2b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01A4
        gbc.setState(0xc0ad, 0xe5a0, 0xba0, 0x886b, 0xe60b, 0x62e, 0x1, 0x0);
        gbc.writeMem(0xc0ad, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe5a0, gbc.sp());
        EXPECT(0xc0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ad));
        EXPECT(0x77, gbc.readMem(0xc0ae));
        // CB 77 01A5
        gbc.setState(0x65f9, 0xa123, 0x45b0, 0x76d0, 0x4277, 0xfe57, 0x1, 0x1);
        gbc.writeMem(0x65f9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01A6
        gbc.setState(0x4363, 0xf2a9, 0xedc0, 0x451c, 0x3038, 0x5e44, 0x1, 0x1);
        gbc.writeMem(0x4363, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf2a9, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01A7
        gbc.setState(0xc4cb, 0xc8e8, 0xd70, 0xd5f6, 0xce66, 0xd5dc, 0x1, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc8e8, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x77, gbc.readMem(0xc4cc));
        // CB 77 01A9
        gbc.setState(0xe483, 0x3740, 0x2cb0, 0xa190, 0x22fe, 0x7bfe, 0x1, 0x1);
        gbc.writeMem(0xe483, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0xe485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe483));
        EXPECT(0x77, gbc.readMem(0xe484));
        // CB 77 01AA
        gbc.setState(0xcfdd, 0xff1b, 0xc8c0, 0xc07f, 0x9ef1, 0xabd4, 0x0, 0x1);
        gbc.writeMem(0xcfdd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff1b, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdd));
        EXPECT(0x77, gbc.readMem(0xcfde));
        // CB 77 01AB
        gbc.setState(0x8e13, 0xb444, 0xd8e0, 0x3d99, 0xb848, 0xcfd7, 0x1, 0x0);
        gbc.writeMem(0x8e13, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb444, gbc.sp());
        EXPECT(0x8e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e13));
        EXPECT(0x77, gbc.readMem(0x8e14));
        // CB 77 01AC
        gbc.setState(0x2b73, 0x18d5, 0xaf00, 0x9dab, 0x264d, 0x65ce, 0x0, 0x1);
        gbc.writeMem(0x2b73, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x18d5, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01AD
        gbc.setState(0xb663, 0x859c, 0xbb10, 0x9d42, 0xf465, 0x5fef, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x859c, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x77, gbc.readMem(0xb664));
        // CB 77 01AE
        gbc.setState(0x58dc, 0x46e2, 0x3910, 0xe5a1, 0x94d7, 0x888b, 0x1, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46e2, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01AF
        gbc.setState(0x781c, 0xf15, 0x3fa0, 0x2d1f, 0xcddc, 0xfc84, 0x0, 0x0);
        gbc.writeMem(0x781c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf15, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01B0
        gbc.setState(0x2ec0, 0xc568, 0x8580, 0xe6e0, 0x6900, 0x14e5, 0x1, 0x1);
        gbc.writeMem(0x2ec0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc568, gbc.sp());
        EXPECT(0x2ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01B1
        gbc.setState(0xa579, 0xd636, 0xd440, 0x72fc, 0xb3c7, 0xe3e6, 0x1, 0x1);
        gbc.writeMem(0xa579, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd636, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa579));
        EXPECT(0x77, gbc.readMem(0xa57a));
        // CB 77 01B2
        gbc.setState(0x63bc, 0x1ab6, 0x66b0, 0xe8dd, 0xa97, 0x7205, 0x1, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01B3
        gbc.setState(0x5366, 0x6e2e, 0xd650, 0xa6e9, 0xb8f5, 0x95ae, 0x1, 0x0);
        gbc.writeMem(0x5366, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01B4
        gbc.setState(0x8a33, 0x9c62, 0xc850, 0x7939, 0x9bcf, 0x4b0, 0x1, 0x1);
        gbc.writeMem(0x8a33, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0x8a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a33));
        EXPECT(0x77, gbc.readMem(0x8a34));
        // CB 77 01B5
        gbc.setState(0x5753, 0x5842, 0xe060, 0x475b, 0x2d34, 0x3928, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0x5755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01B6
        gbc.setState(0xbc55, 0xf334, 0xe890, 0x9961, 0xb89, 0xdaa9, 0x0, 0x1);
        gbc.writeMem(0xbc55, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf334, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc55));
        EXPECT(0x77, gbc.readMem(0xbc56));
        // CB 77 01B7
        gbc.setState(0x9201, 0x69ef, 0x4d10, 0xbe4d, 0xe9a, 0x8596, 0x1, 0x0);
        gbc.writeMem(0x9201, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9201));
        EXPECT(0x77, gbc.readMem(0x9202));
        // CB 77 01B8
        gbc.setState(0xc03c, 0xd573, 0x7520, 0x291d, 0x9260, 0x14d7, 0x1, 0x1);
        gbc.writeMem(0xc03c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd573, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03c));
        EXPECT(0x77, gbc.readMem(0xc03d));
        // CB 77 01B9
        gbc.setState(0xb6c7, 0x126d, 0xe190, 0xbecd, 0x2bb8, 0xcaa2, 0x0, 0x1);
        gbc.writeMem(0xb6c7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c7));
        EXPECT(0x77, gbc.readMem(0xb6c8));
        // CB 77 01BA
        gbc.setState(0xda5a, 0x4746, 0x3c70, 0xc38b, 0xc8aa, 0x79e, 0x0, 0x1);
        gbc.writeMem(0xda5a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5a));
        EXPECT(0x77, gbc.readMem(0xda5b));
        // CB 77 01BB
        gbc.setState(0xb260, 0x501b, 0xed20, 0x9c73, 0x80cd, 0xb196, 0x1, 0x1);
        gbc.writeMem(0xb260, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0x77, gbc.readMem(0xb261));
        // CB 77 01BC
        gbc.setState(0x6497, 0x834a, 0x3250, 0xf9c9, 0x2736, 0xc479, 0x0, 0x1);
        gbc.writeMem(0x6497, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0x6499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01BD
        gbc.setState(0x3809, 0xe912, 0xc040, 0x590c, 0xbae6, 0x31b9, 0x0, 0x0);
        gbc.writeMem(0x3809, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe912, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01BE
        gbc.setState(0xe5c3, 0xcaf, 0x9f70, 0xf5c9, 0xd2e3, 0x249b, 0x0, 0x0);
        gbc.writeMem(0xe5c3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c3));
        EXPECT(0x77, gbc.readMem(0xe5c4));
        // CB 77 01BF
        gbc.setState(0x6b47, 0xa6de, 0x91e0, 0xf9f0, 0xda13, 0xcbee, 0x0, 0x1);
        gbc.writeMem(0x6b47, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01C0
        gbc.setState(0x1e9f, 0xe1c0, 0xe070, 0x70f2, 0x2f98, 0x6013, 0x1, 0x0);
        gbc.writeMem(0x1e9f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0x1ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01C1
        gbc.setState(0xbae0, 0x2ae, 0xb180, 0xfb38, 0xf2e9, 0xccec, 0x1, 0x1);
        gbc.writeMem(0xbae0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0xbae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae0));
        EXPECT(0x77, gbc.readMem(0xbae1));
        // CB 77 01C2
        gbc.setState(0x57d1, 0x191a, 0x1660, 0x63b9, 0x175f, 0xc6a5, 0x1, 0x0);
        gbc.writeMem(0x57d1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x191a, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01C3
        gbc.setState(0xcbc4, 0x794f, 0xb6a0, 0x9d8e, 0x833c, 0xf27a, 0x1, 0x0);
        gbc.writeMem(0xcbc4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x794f, gbc.sp());
        EXPECT(0xcbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc4));
        EXPECT(0x77, gbc.readMem(0xcbc5));
        // CB 77 01C4
        gbc.setState(0x4a01, 0x60bf, 0x9450, 0x2dc1, 0x2e3e, 0x9977, 0x0, 0x1);
        gbc.writeMem(0x4a01, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01C5
        gbc.setState(0x310a, 0x94da, 0x2e90, 0x2feb, 0xa5f7, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x310a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x310c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01C6
        gbc.setState(0x1eae, 0x7b1a, 0x3820, 0xbc5a, 0x4a34, 0x614e, 0x0, 0x0);
        gbc.writeMem(0x1eae, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01C7
        gbc.setState(0xc992, 0x18dc, 0xb620, 0xc61b, 0x17e9, 0x5a69, 0x1, 0x1);
        gbc.writeMem(0xc992, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x18dc, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc992));
        EXPECT(0x77, gbc.readMem(0xc993));
        // CB 77 01C8
        gbc.setState(0xc06c, 0xff78, 0x5ca0, 0x241f, 0x90f2, 0x745a, 0x1, 0x1);
        gbc.writeMem(0xc06c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06c));
        EXPECT(0x77, gbc.readMem(0xc06d));
        // CB 77 01C9
        gbc.setState(0x37ec, 0xb542, 0x8da0, 0x20cb, 0xc319, 0x3118, 0x0, 0x1);
        gbc.writeMem(0x37ec, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb542, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01CA
        gbc.setState(0x6b92, 0xca2b, 0x4630, 0x5276, 0x87c3, 0x6be, 0x1, 0x0);
        gbc.writeMem(0x6b92, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xca2b, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01CB
        gbc.setState(0xea36, 0x643c, 0xa390, 0xa271, 0xee38, 0x8a79, 0x0, 0x0);
        gbc.writeMem(0xea36, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x643c, gbc.sp());
        EXPECT(0xea38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea36));
        EXPECT(0x77, gbc.readMem(0xea37));
        // CB 77 01CC
        gbc.setState(0x7343, 0x7fab, 0xdc70, 0x2e8d, 0xc8eb, 0xac31, 0x1, 0x1);
        gbc.writeMem(0x7343, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7fab, gbc.sp());
        EXPECT(0x7345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01CD
        gbc.setState(0xa8b0, 0xebab, 0xb0, 0xe1a5, 0x3472, 0xbaae, 0x0, 0x0);
        gbc.writeMem(0xa8b0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xebab, gbc.sp());
        EXPECT(0xa8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b0));
        EXPECT(0x77, gbc.readMem(0xa8b1));
        // CB 77 01CE
        gbc.setState(0x716c, 0xef18, 0x5310, 0x5bdc, 0x778c, 0xb114, 0x0, 0x0);
        gbc.writeMem(0x716c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01D0
        gbc.setState(0x64bc, 0x4834, 0xb970, 0xfdce, 0x2236, 0x64df, 0x0, 0x1);
        gbc.writeMem(0x64bc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4834, gbc.sp());
        EXPECT(0x64be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01D1
        gbc.setState(0x5e76, 0xaf74, 0xe2a0, 0x3c9b, 0x3965, 0x7fd0, 0x1, 0x1);
        gbc.writeMem(0x5e76, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaf74, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01D2
        gbc.setState(0xa59e, 0x552c, 0xc430, 0xca22, 0x7a4b, 0x3015, 0x1, 0x0);
        gbc.writeMem(0xa59e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59e));
        EXPECT(0x77, gbc.readMem(0xa59f));
        // CB 77 01D3
        gbc.setState(0x55dd, 0x592c, 0x59b0, 0x4679, 0xfaf4, 0x2ba3, 0x1, 0x0);
        gbc.writeMem(0x55dd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01D4
        gbc.setState(0x6ca8, 0x2527, 0x7190, 0xda50, 0x1e44, 0x989, 0x0, 0x1);
        gbc.writeMem(0x6ca8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2527, gbc.sp());
        EXPECT(0x6caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01D5
        gbc.setState(0xc06d, 0xb061, 0x6b00, 0x53eb, 0x1a22, 0x543b, 0x1, 0x0);
        gbc.writeMem(0xc06d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb061, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06d));
        EXPECT(0x77, gbc.readMem(0xc06e));
        // CB 77 01D6
        gbc.setState(0x3fcb, 0xf4c3, 0x7440, 0xd0ed, 0xc956, 0x684, 0x0, 0x0);
        gbc.writeMem(0x3fcb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf4c3, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01D7
        gbc.setState(0xa135, 0x5a4a, 0xe990, 0x531a, 0x3350, 0x7d35, 0x0, 0x1);
        gbc.writeMem(0xa135, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa135));
        EXPECT(0x77, gbc.readMem(0xa136));
        // CB 77 01D8
        gbc.setState(0x52d1, 0x6bc2, 0xe990, 0xeac9, 0xa82f, 0xe503, 0x1, 0x0);
        gbc.writeMem(0x52d1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0x52d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01D9
        gbc.setState(0x720b, 0xc43a, 0xa370, 0x5fa8, 0xcb54, 0x57e9, 0x1, 0x0);
        gbc.writeMem(0x720b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01DA
        gbc.setState(0x507a, 0xce6d, 0xacb0, 0x71c5, 0x12b3, 0xa14d, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0x507c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01DB
        gbc.setState(0x210, 0xdecd, 0x8580, 0xc638, 0x104b, 0xb18f, 0x1, 0x0);
        gbc.writeMem(0x210, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdecd, gbc.sp());
        EXPECT(0x212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01DC
        gbc.setState(0x81e0, 0xfe4, 0xbc30, 0xfb65, 0x4c79, 0x38b8, 0x1, 0x0);
        gbc.writeMem(0x81e0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0x81e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e0));
        EXPECT(0x77, gbc.readMem(0x81e1));
        // CB 77 01DD
        gbc.setState(0xaaa9, 0x6d3a, 0xefb0, 0x95d8, 0x2e17, 0xb644, 0x1, 0x0);
        gbc.writeMem(0xaaa9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6d3a, gbc.sp());
        EXPECT(0xaaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa9));
        EXPECT(0x77, gbc.readMem(0xaaaa));
        // CB 77 01DE
        gbc.setState(0x58c4, 0x6c6d, 0xc900, 0x5ce3, 0xe659, 0xbd63, 0x0, 0x0);
        gbc.writeMem(0x58c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6c6d, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01DF
        gbc.setState(0x8b29, 0xe875, 0xe7e0, 0x363d, 0x18b9, 0xf781, 0x0, 0x0);
        gbc.writeMem(0x8b29, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe875, gbc.sp());
        EXPECT(0x8b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b29));
        EXPECT(0x77, gbc.readMem(0x8b2a));
        // CB 77 01E0
        gbc.setState(0xe922, 0x63c3, 0x600, 0x81f, 0x4ecd, 0x9d12, 0x0, 0x1);
        gbc.writeMem(0xe922, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x63c3, gbc.sp());
        EXPECT(0xe924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe922));
        EXPECT(0x77, gbc.readMem(0xe923));
        // CB 77 01E1
        gbc.setState(0xc1dc, 0x8715, 0xe6a0, 0x12d4, 0x4dc3, 0x5db7, 0x1, 0x1);
        gbc.writeMem(0xc1dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8715, gbc.sp());
        EXPECT(0xc1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1dc));
        EXPECT(0x77, gbc.readMem(0xc1dd));
        // CB 77 01E2
        gbc.setState(0xd3c7, 0xb1e, 0x3670, 0xe48c, 0x5a73, 0x1721, 0x0, 0x0);
        gbc.writeMem(0xd3c7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb1e, gbc.sp());
        EXPECT(0xd3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c7));
        EXPECT(0x77, gbc.readMem(0xd3c8));
        // CB 77 01E3
        gbc.setState(0xdc1c, 0x6e95, 0x6690, 0x2a8b, 0x53ac, 0xf0d8, 0x1, 0x1);
        gbc.writeMem(0xdc1c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6e95, gbc.sp());
        EXPECT(0xdc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1c));
        EXPECT(0x77, gbc.readMem(0xdc1d));
        // CB 77 01E4
        gbc.setState(0xbd3b, 0x927e, 0x5090, 0x3a00, 0xf234, 0x917a, 0x0, 0x0);
        gbc.writeMem(0xbd3b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0xbd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3b));
        EXPECT(0x77, gbc.readMem(0xbd3c));
        // CB 77 01E5
        gbc.setState(0x2d57, 0x824a, 0x7030, 0x55a2, 0xd78f, 0xe5ad, 0x0, 0x1);
        gbc.writeMem(0x2d57, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x824a, gbc.sp());
        EXPECT(0x2d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01E6
        gbc.setState(0x2c50, 0x1637, 0xb580, 0x62fb, 0xdae3, 0x2024, 0x0, 0x0);
        gbc.writeMem(0x2c50, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1637, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01E7
        gbc.setState(0x140, 0xc79, 0x8670, 0xfe3e, 0x9c6e, 0x6946, 0x0, 0x1);
        gbc.writeMem(0x140, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc79, gbc.sp());
        EXPECT(0x142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01E8
        gbc.setState(0x9dc7, 0xae59, 0xfce0, 0xbe7, 0x268d, 0xd9e1, 0x1, 0x1);
        gbc.writeMem(0x9dc7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc7));
        EXPECT(0x77, gbc.readMem(0x9dc8));
        // CB 77 01E9
        gbc.setState(0x2d3f, 0x9b30, 0xdd70, 0x9760, 0xd1b7, 0x67a1, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01EA
        gbc.setState(0x8690, 0x8ebc, 0x4da0, 0xc37e, 0x2af0, 0x4279, 0x0, 0x1);
        gbc.writeMem(0x8690, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8ebc, gbc.sp());
        EXPECT(0x8692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8690));
        EXPECT(0x77, gbc.readMem(0x8691));
        // CB 77 01EB
        gbc.setState(0x82fa, 0x4d82, 0x4d30, 0x6ddb, 0xc3ec, 0x42fa, 0x1, 0x0);
        gbc.writeMem(0x82fa, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4d82, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fa));
        EXPECT(0x77, gbc.readMem(0x82fb));
        // CB 77 01EC
        gbc.setState(0x7c81, 0x8693, 0x41f0, 0xb763, 0x508, 0x1c4e, 0x1, 0x1);
        gbc.writeMem(0x7c81, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8693, gbc.sp());
        EXPECT(0x7c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01ED
        gbc.setState(0xafad, 0xa078, 0x1270, 0x29a3, 0x313c, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0xafad, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa078, gbc.sp());
        EXPECT(0xafaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafad));
        EXPECT(0x77, gbc.readMem(0xafae));
        // CB 77 01EE
        gbc.setState(0x7670, 0x5a8a, 0xc530, 0x1a66, 0x4b19, 0x1eca, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5a8a, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01EF
        gbc.setState(0xc7a7, 0xb46c, 0xbe10, 0x1318, 0x2a7a, 0x88f8, 0x0, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb46c, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x77, gbc.readMem(0xc7a8));
        // CB 77 01F0
        gbc.setState(0xdc0b, 0xee1a, 0x2f70, 0xc019, 0x561e, 0xce36, 0x0, 0x0);
        gbc.writeMem(0xdc0b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xee1a, gbc.sp());
        EXPECT(0xdc0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0b));
        EXPECT(0x77, gbc.readMem(0xdc0c));
        // CB 77 01F1
        gbc.setState(0x71d6, 0x20c7, 0x1f50, 0x47e, 0x9a35, 0x65ef, 0x0, 0x0);
        gbc.writeMem(0x71d6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x20c7, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01F2
        gbc.setState(0x8bcb, 0xdc66, 0x47a0, 0x4ef9, 0x595, 0x5ef9, 0x1, 0x0);
        gbc.writeMem(0x8bcb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcb));
        EXPECT(0x77, gbc.readMem(0x8bcc));
        // CB 77 01F3
        gbc.setState(0x3530, 0xd151, 0xd050, 0x7b43, 0xd12e, 0x7c9d, 0x0, 0x0);
        gbc.writeMem(0x3530, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd151, gbc.sp());
        EXPECT(0x3532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 01F4
        gbc.setState(0xa0, 0xd27d, 0xd880, 0x1747, 0x3343, 0x9668, 0x1, 0x1);
        gbc.writeMem(0xa0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd27d, gbc.sp());
        EXPECT(0xa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01F5
        gbc.setState(0xa185, 0xdf6f, 0x9890, 0xfbb5, 0x3c7e, 0x2330, 0x0, 0x1);
        gbc.writeMem(0xa185, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x77, gbc.readMem(0xa186));
        // CB 77 01F6
        gbc.setState(0xeccd, 0xaec4, 0x1580, 0xf3ca, 0x83f1, 0xa029, 0x0, 0x1);
        gbc.writeMem(0xeccd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeccd));
        EXPECT(0x77, gbc.readMem(0xecce));
        // CB 77 01F7
        gbc.setState(0x6cd3, 0xeb05, 0x3780, 0xda22, 0x7204, 0x24fb, 0x0, 0x1);
        gbc.writeMem(0x6cd3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeb05, gbc.sp());
        EXPECT(0x6cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01F8
        gbc.setState(0x150, 0xdccd, 0x4be0, 0xadaa, 0xf381, 0xa618, 0x1, 0x1);
        gbc.writeMem(0x150, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdccd, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01F9
        gbc.setState(0x6f49, 0x837b, 0x6760, 0xb1cb, 0xb2da, 0xa4f9, 0x1, 0x0);
        gbc.writeMem(0x6f49, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x837b, gbc.sp());
        EXPECT(0x6f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01FA
        gbc.setState(0x3028, 0x85e1, 0x4340, 0xaf6d, 0x8842, 0x81e2, 0x1, 0x1);
        gbc.writeMem(0x3028, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x85e1, gbc.sp());
        EXPECT(0x302a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01FB
        gbc.setState(0x9b24, 0xd110, 0x8910, 0xcd84, 0x4085, 0x59b6, 0x0, 0x1);
        gbc.writeMem(0x9b24, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd110, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b24));
        EXPECT(0x77, gbc.readMem(0x9b25));
        // CB 77 01FC
        gbc.setState(0xdc2e, 0x4990, 0xbce0, 0x66f8, 0x85f0, 0x1dbc, 0x1, 0x1);
        gbc.writeMem(0xdc2e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0xdc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2e));
        EXPECT(0x77, gbc.readMem(0xdc2f));
        // CB 77 01FD
        gbc.setState(0xeb3a, 0x9886, 0x1d60, 0x4cb3, 0x84b0, 0xe079, 0x0, 0x1);
        gbc.writeMem(0xeb3a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9886, gbc.sp());
        EXPECT(0xeb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3a));
        EXPECT(0x77, gbc.readMem(0xeb3b));
        // CB 77 01FE
        gbc.setState(0x4f60, 0x838d, 0x9360, 0x4253, 0xde82, 0x9159, 0x0, 0x1);
        gbc.writeMem(0x4f60, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x838d, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 01FF
        gbc.setState(0x6543, 0x700f, 0x6cc0, 0x9f0b, 0x7ac5, 0xb1ff, 0x0, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x700f, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0201
        gbc.setState(0x9007, 0x2430, 0xc90, 0x68d2, 0x59dd, 0x617d, 0x0, 0x1);
        gbc.writeMem(0x9007, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9007));
        EXPECT(0x77, gbc.readMem(0x9008));
        // CB 77 0202
        gbc.setState(0x7620, 0x170b, 0x460, 0x43c3, 0x3834, 0x6aab, 0x0, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x170b, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0203
        gbc.setState(0xb793, 0xa3e9, 0xc660, 0x838, 0x272d, 0xfb7f, 0x0, 0x1);
        gbc.writeMem(0xb793, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa3e9, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb793));
        EXPECT(0x77, gbc.readMem(0xb794));
        // CB 77 0204
        gbc.setState(0x7e25, 0x709, 0x12f0, 0xcca6, 0x7129, 0x3815, 0x1, 0x0);
        gbc.writeMem(0x7e25, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x709, gbc.sp());
        EXPECT(0x7e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0205
        gbc.setState(0xc675, 0x167a, 0xab20, 0xc642, 0xdcd5, 0xb964, 0x1, 0x0);
        gbc.writeMem(0xc675, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x167a, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc675));
        EXPECT(0x77, gbc.readMem(0xc676));
        // CB 77 0206
        gbc.setState(0x10e5, 0x571c, 0xb750, 0xd807, 0x64dc, 0xfc7d, 0x1, 0x0);
        gbc.writeMem(0x10e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x571c, gbc.sp());
        EXPECT(0x10e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0207
        gbc.setState(0x92b2, 0x2f9, 0x19c0, 0x6bc5, 0x84cf, 0xa759, 0x1, 0x0);
        gbc.writeMem(0x92b2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2f9, gbc.sp());
        EXPECT(0x92b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b2));
        EXPECT(0x77, gbc.readMem(0x92b3));
        // CB 77 0208
        gbc.setState(0x97e5, 0xd9ea, 0x6280, 0xb039, 0x7bbc, 0x25cd, 0x1, 0x1);
        gbc.writeMem(0x97e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd9ea, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e5));
        EXPECT(0x77, gbc.readMem(0x97e6));
        // CB 77 0209
        gbc.setState(0x4857, 0x2819, 0xf20, 0x4d11, 0xe781, 0x56a0, 0x1, 0x0);
        gbc.writeMem(0x4857, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 020A
        gbc.setState(0x12dd, 0x747a, 0xc8e0, 0x43b3, 0x8f64, 0x668c, 0x0, 0x0);
        gbc.writeMem(0x12dd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0x12df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 020C
        gbc.setState(0xb7d3, 0x5ff5, 0x1b80, 0x371a, 0x4f67, 0x15b4, 0x1, 0x0);
        gbc.writeMem(0xb7d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5ff5, gbc.sp());
        EXPECT(0xb7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d3));
        EXPECT(0x77, gbc.readMem(0xb7d4));
        // CB 77 020D
        gbc.setState(0x5543, 0xdfc3, 0x1fb0, 0xe544, 0x2d01, 0x5b9, 0x0, 0x1);
        gbc.writeMem(0x5543, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 020E
        gbc.setState(0xa0d5, 0xa15a, 0x9720, 0x379, 0xbb6d, 0x238, 0x0, 0x0);
        gbc.writeMem(0xa0d5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0xa0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d5));
        EXPECT(0x77, gbc.readMem(0xa0d6));
        // CB 77 020F
        gbc.setState(0xc8b6, 0x91d3, 0x89b0, 0x9fb5, 0x3e7b, 0x9a58, 0x1, 0x0);
        gbc.writeMem(0xc8b6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b6));
        EXPECT(0x77, gbc.readMem(0xc8b7));
        // CB 77 0210
        gbc.setState(0x770b, 0xe5ed, 0x2970, 0x5095, 0x96f3, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe5ed, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0211
        gbc.setState(0xb8f5, 0xe074, 0x9ae0, 0x113d, 0x9b36, 0xc90, 0x0, 0x1);
        gbc.writeMem(0xb8f5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe074, gbc.sp());
        EXPECT(0xb8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f5));
        EXPECT(0x77, gbc.readMem(0xb8f6));
        // CB 77 0212
        gbc.setState(0x1031, 0x68d0, 0x1650, 0x7ffe, 0x91c1, 0x800, 0x0, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x68d0, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0213
        gbc.setState(0x47c6, 0xac0a, 0x6370, 0x9764, 0xbf66, 0xccc1, 0x1, 0x1);
        gbc.writeMem(0x47c6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x47c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0214
        gbc.setState(0x56d9, 0x26fa, 0x92b0, 0xa51e, 0x149a, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0x56d9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x26fa, gbc.sp());
        EXPECT(0x56db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0215
        gbc.setState(0x87a1, 0x6c66, 0x920, 0x91f5, 0x2324, 0xbabb, 0x0, 0x1);
        gbc.writeMem(0x87a1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a1));
        EXPECT(0x77, gbc.readMem(0x87a2));
        // CB 77 0216
        gbc.setState(0x3c55, 0xfc64, 0xf700, 0xbd11, 0xeb7c, 0xd849, 0x1, 0x1);
        gbc.writeMem(0x3c55, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfc64, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0217
        gbc.setState(0xb201, 0x3e10, 0x1e0, 0xd935, 0xa4e0, 0x437d, 0x1, 0x0);
        gbc.writeMem(0xb201, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e10, gbc.sp());
        EXPECT(0xb203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb201));
        EXPECT(0x77, gbc.readMem(0xb202));
        // CB 77 0218
        gbc.setState(0x46ee, 0x2092, 0x4fb0, 0x708b, 0xfa0d, 0x5fee, 0x0, 0x1);
        gbc.writeMem(0x46ee, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0x46f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0219
        gbc.setState(0x51f5, 0x28c2, 0x8e80, 0xae7b, 0x6f2e, 0xfea3, 0x1, 0x0);
        gbc.writeMem(0x51f5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0x51f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 021A
        gbc.setState(0x4525, 0xc752, 0xfe00, 0x4c7, 0x2858, 0x6916, 0x1, 0x0);
        gbc.writeMem(0x4525, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc752, gbc.sp());
        EXPECT(0x4527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 021B
        gbc.setState(0xad2, 0x83c6, 0x9690, 0xdeb0, 0x49d8, 0x2c0e, 0x0, 0x1);
        gbc.writeMem(0xad2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0xad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 021C
        gbc.setState(0x7744, 0x661, 0xf80, 0x92a5, 0xa844, 0xe903, 0x0, 0x0);
        gbc.writeMem(0x7744, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 021D
        gbc.setState(0x99d5, 0x97ba, 0x4460, 0x1420, 0x3457, 0x13c7, 0x0, 0x1);
        gbc.writeMem(0x99d5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0x99d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d5));
        EXPECT(0x77, gbc.readMem(0x99d6));
        // CB 77 021E
        gbc.setState(0xba18, 0x528e, 0xbc0, 0xd043, 0xd989, 0x95b0, 0x1, 0x1);
        gbc.writeMem(0xba18, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x528e, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba18));
        EXPECT(0x77, gbc.readMem(0xba19));
        // CB 77 021F
        gbc.setState(0x36b4, 0x29c6, 0x12a0, 0x5d4, 0x103a, 0xdf0d, 0x0, 0x0);
        gbc.writeMem(0x36b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x29c6, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0220
        gbc.setState(0x6b7, 0xeb9e, 0xcc50, 0xc8a5, 0xc687, 0x3a09, 0x0, 0x1);
        gbc.writeMem(0x6b7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeb9e, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0221
        gbc.setState(0xdb78, 0xca15, 0xe0b0, 0x9bf8, 0xf666, 0xe049, 0x0, 0x1);
        gbc.writeMem(0xdb78, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0x77, gbc.readMem(0xdb79));
        // CB 77 0222
        gbc.setState(0xa56c, 0xb315, 0xa4e0, 0x74a8, 0xe51c, 0xa08c, 0x1, 0x0);
        gbc.writeMem(0xa56c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56c));
        EXPECT(0x77, gbc.readMem(0xa56d));
        // CB 77 0223
        gbc.setState(0xafc6, 0xa37, 0xc860, 0xbca1, 0x2bc0, 0x7b0, 0x0, 0x1);
        gbc.writeMem(0xafc6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa37, gbc.sp());
        EXPECT(0xafc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc6));
        EXPECT(0x77, gbc.readMem(0xafc7));
        // CB 77 0224
        gbc.setState(0x9a2a, 0xde23, 0x3ed0, 0x6e18, 0x3f9f, 0x9acf, 0x1, 0x0);
        gbc.writeMem(0x9a2a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xde23, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2a));
        EXPECT(0x77, gbc.readMem(0x9a2b));
        // CB 77 0225
        gbc.setState(0x48e9, 0xbd35, 0x40f0, 0x2cc6, 0x3446, 0x26c4, 0x0, 0x1);
        gbc.writeMem(0x48e9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0226
        gbc.setState(0x4787, 0x99a, 0x3a0, 0xc2, 0xa370, 0x478c, 0x1, 0x1);
        gbc.writeMem(0x4787, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0227
        gbc.setState(0x8325, 0x9e41, 0x8e20, 0x92db, 0x2473, 0xa345, 0x0, 0x0);
        gbc.writeMem(0x8325, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9e41, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8325));
        EXPECT(0x77, gbc.readMem(0x8326));
        // CB 77 0228
        gbc.setState(0xd94f, 0x841a, 0xde40, 0x9c39, 0xfe52, 0x8e15, 0x0, 0x1);
        gbc.writeMem(0xd94f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x841a, gbc.sp());
        EXPECT(0xd951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94f));
        EXPECT(0x77, gbc.readMem(0xd950));
        // CB 77 0229
        gbc.setState(0xae31, 0x9c9, 0xd3f0, 0xc697, 0xa96a, 0xdc9b, 0x1, 0x1);
        gbc.writeMem(0xae31, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0xae33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae31));
        EXPECT(0x77, gbc.readMem(0xae32));
        // CB 77 022A
        gbc.setState(0xc953, 0x8aa4, 0x54c0, 0x60f6, 0xe3ab, 0x9340, 0x0, 0x0);
        gbc.writeMem(0xc953, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8aa4, gbc.sp());
        EXPECT(0xc955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc953));
        EXPECT(0x77, gbc.readMem(0xc954));
        // CB 77 022B
        gbc.setState(0x90f2, 0x9bbf, 0xf150, 0xb937, 0x5f3a, 0x406, 0x0, 0x1);
        gbc.writeMem(0x90f2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9bbf, gbc.sp());
        EXPECT(0x90f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f2));
        EXPECT(0x77, gbc.readMem(0x90f3));
        // CB 77 022C
        gbc.setState(0xd57b, 0x2aec, 0xa2f0, 0x76bc, 0x1109, 0x6e36, 0x0, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57b));
        EXPECT(0x77, gbc.readMem(0xd57c));
        // CB 77 022D
        gbc.setState(0x8084, 0x8c4f, 0xb340, 0xb45c, 0x6ae3, 0x98d6, 0x0, 0x0);
        gbc.writeMem(0x8084, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0x77, gbc.readMem(0x8085));
        // CB 77 022F
        gbc.setState(0x30e5, 0xb00a, 0x2180, 0x516d, 0x45e2, 0xc041, 0x1, 0x0);
        gbc.writeMem(0x30e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb00a, gbc.sp());
        EXPECT(0x30e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0230
        gbc.setState(0x1719, 0x352f, 0x3340, 0x5c59, 0x1907, 0x1e71, 0x0, 0x0);
        gbc.writeMem(0x1719, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x352f, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0231
        gbc.setState(0x1779, 0xea8c, 0xdb0, 0xb7e1, 0x38a3, 0x683f, 0x1, 0x1);
        gbc.writeMem(0x1779, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xea8c, gbc.sp());
        EXPECT(0x177b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0232
        gbc.setState(0x8f18, 0x4ae4, 0xdda0, 0x49d5, 0xe0c4, 0x8697, 0x1, 0x0);
        gbc.writeMem(0x8f18, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ae4, gbc.sp());
        EXPECT(0x8f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f18));
        EXPECT(0x77, gbc.readMem(0x8f19));
        // CB 77 0233
        gbc.setState(0x5416, 0x28e, 0xfe70, 0xc69, 0xdd27, 0x97d3, 0x1, 0x1);
        gbc.writeMem(0x5416, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0234
        gbc.setState(0xe08, 0xa890, 0xe8c0, 0x261a, 0x6150, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0xe08, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0235
        gbc.setState(0x2da8, 0x5683, 0xe230, 0x55a2, 0x8967, 0x53a2, 0x1, 0x0);
        gbc.writeMem(0x2da8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5683, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0236
        gbc.setState(0x409c, 0x6848, 0xd500, 0x80cb, 0x4f26, 0xf516, 0x0, 0x1);
        gbc.writeMem(0x409c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x409e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0237
        gbc.setState(0x1114, 0x3760, 0x6e60, 0xa8d7, 0xbdec, 0xa3c3, 0x0, 0x1);
        gbc.writeMem(0x1114, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3760, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0238
        gbc.setState(0xc736, 0xad09, 0x93c0, 0xcadc, 0x1f48, 0x61ab, 0x0, 0x1);
        gbc.writeMem(0xc736, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0xc738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc736));
        EXPECT(0x77, gbc.readMem(0xc737));
        // CB 77 0239
        gbc.setState(0x10ce, 0x48f2, 0x6750, 0xfcb1, 0x1fac, 0xd064, 0x1, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x48f2, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 023A
        gbc.setState(0x8054, 0xfa55, 0x5110, 0x9486, 0x5812, 0x46af, 0x0, 0x1);
        gbc.writeMem(0x8054, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8054));
        EXPECT(0x77, gbc.readMem(0x8055));
        // CB 77 023C
        gbc.setState(0x9996, 0x50e2, 0x5140, 0x60d3, 0xf213, 0x54dc, 0x1, 0x1);
        gbc.writeMem(0x9996, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0x9998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9996));
        EXPECT(0x77, gbc.readMem(0x9997));
        // CB 77 023D
        gbc.setState(0xb698, 0x1471, 0x5700, 0xeb34, 0x5597, 0x8e1e, 0x0, 0x0);
        gbc.writeMem(0xb698, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1471, gbc.sp());
        EXPECT(0xb69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb698));
        EXPECT(0x77, gbc.readMem(0xb699));
        // CB 77 023E
        gbc.setState(0x16d3, 0x674f, 0x35a0, 0x8a49, 0x2cb1, 0x4118, 0x1, 0x1);
        gbc.writeMem(0x16d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x16d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 023F
        gbc.setState(0xe584, 0xbf0f, 0xa6a0, 0x9b42, 0x6748, 0x57c0, 0x1, 0x0);
        gbc.writeMem(0xe584, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0x77, gbc.readMem(0xe585));
        // CB 77 0240
        gbc.setState(0x77c5, 0x760a, 0x28a0, 0x4072, 0x13e, 0xe4b8, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0x77c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0241
        gbc.setState(0xc77b, 0xceab, 0x5c50, 0x8cff, 0x8bdf, 0x5a76, 0x1, 0x0);
        gbc.writeMem(0xc77b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xceab, gbc.sp());
        EXPECT(0xc77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77b));
        EXPECT(0x77, gbc.readMem(0xc77c));
        // CB 77 0242
        gbc.setState(0x1142, 0x7450, 0xc950, 0x58dd, 0xf1e, 0x985b, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0243
        gbc.setState(0x8b45, 0xec21, 0x1b0, 0xc108, 0x8f6b, 0xe879, 0x0, 0x1);
        gbc.writeMem(0x8b45, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b45));
        EXPECT(0x77, gbc.readMem(0x8b46));
        // CB 77 0244
        gbc.setState(0x862c, 0xbd42, 0x3b70, 0x758d, 0xdf64, 0x8c32, 0x1, 0x0);
        gbc.writeMem(0x862c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd42, gbc.sp());
        EXPECT(0x862e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862c));
        EXPECT(0x77, gbc.readMem(0x862d));
        // CB 77 0245
        gbc.setState(0x9e5, 0x351f, 0xe4f0, 0xa17b, 0xaa47, 0x2290, 0x1, 0x1);
        gbc.writeMem(0x9e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x351f, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0246
        gbc.setState(0x4743, 0x9e7f, 0x13c0, 0xd8dd, 0xe770, 0xd68a, 0x0, 0x1);
        gbc.writeMem(0x4743, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9e7f, gbc.sp());
        EXPECT(0x4745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0247
        gbc.setState(0x4006, 0xd1f8, 0x96b0, 0x43cf, 0xe419, 0x882f, 0x0, 0x1);
        gbc.writeMem(0x4006, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd1f8, gbc.sp());
        EXPECT(0x4008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0248
        gbc.setState(0xd0e5, 0x9abf, 0x1190, 0x6adc, 0x5148, 0x610a, 0x1, 0x0);
        gbc.writeMem(0xd0e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0xd0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e5));
        EXPECT(0x77, gbc.readMem(0xd0e6));
        // CB 77 0249
        gbc.setState(0xc6b9, 0x6359, 0x38d0, 0xe5c3, 0x2efd, 0xc93, 0x1, 0x0);
        gbc.writeMem(0xc6b9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6359, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b9));
        EXPECT(0x77, gbc.readMem(0xc6ba));
        // CB 77 024A
        gbc.setState(0x2837, 0x55a, 0x1440, 0x94ae, 0x6874, 0x311c, 0x0, 0x0);
        gbc.writeMem(0x2837, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0x2839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 024B
        gbc.setState(0xbe8b, 0x7eb1, 0x9d30, 0x11f0, 0x8df4, 0x57ff, 0x1, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0x77, gbc.readMem(0xbe8c));
        // CB 77 024C
        gbc.setState(0x9f94, 0xc1a3, 0x62d0, 0xb0fd, 0x3a0, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f94));
        EXPECT(0x77, gbc.readMem(0x9f95));
        // CB 77 024D
        gbc.setState(0x1666, 0x1f94, 0x92a0, 0x81d7, 0x1e5a, 0x526c, 0x1, 0x0);
        gbc.writeMem(0x1666, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f94, gbc.sp());
        EXPECT(0x1668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 024E
        gbc.setState(0x5a2b, 0x3da6, 0x4f20, 0xacec, 0xa0fb, 0xaefa, 0x1, 0x0);
        gbc.writeMem(0x5a2b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3da6, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 024F
        gbc.setState(0x1c2b, 0x33fc, 0x5ab0, 0x118e, 0x5e20, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x1c2b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0250
        gbc.setState(0xdfdf, 0x359a, 0x5910, 0xc49c, 0xad96, 0x1fca, 0x0, 0x1);
        gbc.writeMem(0xdfdf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x359a, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdf));
        EXPECT(0x77, gbc.readMem(0xdfe0));
        // CB 77 0251
        gbc.setState(0x18dd, 0x8f4c, 0xb50, 0x225e, 0x88a8, 0x57ba, 0x1, 0x1);
        gbc.writeMem(0x18dd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8f4c, gbc.sp());
        EXPECT(0x18df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0252
        gbc.setState(0x3cc7, 0xab93, 0xe2a0, 0xe772, 0x32a9, 0x55a2, 0x0, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xab93, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0253
        gbc.setState(0x9ee7, 0x51f7, 0x22e0, 0x1869, 0x4818, 0xf6e6, 0x1, 0x0);
        gbc.writeMem(0x9ee7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee7));
        EXPECT(0x77, gbc.readMem(0x9ee8));
        // CB 77 0254
        gbc.setState(0xaf8a, 0xe003, 0xd130, 0x2990, 0x132c, 0x7cb9, 0x0, 0x0);
        gbc.writeMem(0xaf8a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe003, gbc.sp());
        EXPECT(0xaf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8a));
        EXPECT(0x77, gbc.readMem(0xaf8b));
        // CB 77 0255
        gbc.setState(0x513d, 0x5155, 0x4ec0, 0xdd83, 0xc37, 0x54cd, 0x1, 0x1);
        gbc.writeMem(0x513d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x513f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0256
        gbc.setState(0x98f6, 0xd733, 0xf240, 0xb393, 0xd67e, 0x1c14, 0x1, 0x0);
        gbc.writeMem(0x98f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0x98f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f6));
        EXPECT(0x77, gbc.readMem(0x98f7));
        // CB 77 0257
        gbc.setState(0x32, 0x43fa, 0x9a80, 0xd787, 0xf118, 0xfa9e, 0x1, 0x0);
        gbc.writeMem(0x32, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0259
        gbc.setState(0xa1c4, 0x58a8, 0x15b0, 0x7a53, 0xb117, 0x7c68, 0x1, 0x0);
        gbc.writeMem(0xa1c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x58a8, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x77, gbc.readMem(0xa1c5));
        // CB 77 025A
        gbc.setState(0xc81e, 0xe976, 0x2460, 0x90d, 0x28c3, 0x8e64, 0x0, 0x1);
        gbc.writeMem(0xc81e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe976, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81e));
        EXPECT(0x77, gbc.readMem(0xc81f));
        // CB 77 025B
        gbc.setState(0x3279, 0xe63, 0x7ba0, 0xb9d9, 0x3ad3, 0x5738, 0x1, 0x0);
        gbc.writeMem(0x3279, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe63, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 025C
        gbc.setState(0x331d, 0x662f, 0x4ed0, 0x3b82, 0x4e5c, 0xa7ed, 0x0, 0x1);
        gbc.writeMem(0x331d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x662f, gbc.sp());
        EXPECT(0x331f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 025D
        gbc.setState(0x112c, 0x88eb, 0x3b0, 0x57a6, 0x30e0, 0x452, 0x1, 0x0);
        gbc.writeMem(0x112c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x88eb, gbc.sp());
        EXPECT(0x112e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 025E
        gbc.setState(0xae3, 0x502c, 0x5200, 0x3167, 0xa41e, 0x815d, 0x0, 0x0);
        gbc.writeMem(0xae3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x502c, gbc.sp());
        EXPECT(0xae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 025F
        gbc.setState(0xba1, 0xf9e6, 0x28a0, 0x5d30, 0x8cf2, 0xec82, 0x0, 0x1);
        gbc.writeMem(0xba1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf9e6, gbc.sp());
        EXPECT(0xba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0260
        gbc.setState(0x1ea9, 0xfcf6, 0xbe70, 0xa0ae, 0x504, 0x2885, 0x1, 0x1);
        gbc.writeMem(0x1ea9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfcf6, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0261
        gbc.setState(0xc260, 0xf36d, 0xa430, 0xe8f3, 0x8592, 0xb411, 0x1, 0x0);
        gbc.writeMem(0xc260, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf36d, gbc.sp());
        EXPECT(0xc262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc260));
        EXPECT(0x77, gbc.readMem(0xc261));
        // CB 77 0262
        gbc.setState(0xaecd, 0xf53d, 0x9a40, 0x39f, 0x9003, 0x2fdf, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecd));
        EXPECT(0x77, gbc.readMem(0xaece));
        // CB 77 0264
        gbc.setState(0x30c1, 0x679, 0xef10, 0x3bc2, 0xf70e, 0xf2bd, 0x0, 0x0);
        gbc.writeMem(0x30c1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x30c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0265
        gbc.setState(0xc07c, 0x4947, 0x5a90, 0x130c, 0x2c52, 0x70f3, 0x0, 0x0);
        gbc.writeMem(0xc07c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4947, gbc.sp());
        EXPECT(0xc07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07c));
        EXPECT(0x77, gbc.readMem(0xc07d));
        // CB 77 0266
        gbc.setState(0x6c3a, 0x3113, 0xf950, 0xd99f, 0x7ce7, 0x7613, 0x1, 0x1);
        gbc.writeMem(0x6c3a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0267
        gbc.setState(0x8eb9, 0x45dd, 0x6030, 0xef92, 0x147e, 0x4fdc, 0x1, 0x0);
        gbc.writeMem(0x8eb9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x45dd, gbc.sp());
        EXPECT(0x8ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb9));
        EXPECT(0x77, gbc.readMem(0x8eba));
        // CB 77 0269
        gbc.setState(0x905c, 0xa9a0, 0x8940, 0x196c, 0xb2f0, 0x3d4, 0x0, 0x0);
        gbc.writeMem(0x905c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9a0, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905c));
        EXPECT(0x77, gbc.readMem(0x905d));
        // CB 77 026A
        gbc.setState(0x66f6, 0xa06e, 0x2d20, 0xbb9c, 0xe2d0, 0x7c3b, 0x1, 0x0);
        gbc.writeMem(0x66f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 026B
        gbc.setState(0xa0, 0x60db, 0xc5e0, 0xc86d, 0x6f0, 0x45fc, 0x0, 0x1);
        gbc.writeMem(0xa0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0xa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 026C
        gbc.setState(0xd1e0, 0x6eae, 0x120, 0x373c, 0x3649, 0xf3cc, 0x1, 0x0);
        gbc.writeMem(0xd1e0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0xd1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e0));
        EXPECT(0x77, gbc.readMem(0xd1e1));
        // CB 77 026D
        gbc.setState(0x6fe5, 0xce03, 0xd000, 0x6981, 0xa4ea, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x6fe5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0x6fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 026E
        gbc.setState(0xdb2, 0x58b3, 0x4f20, 0xb753, 0x4483, 0xce4b, 0x1, 0x1);
        gbc.writeMem(0xdb2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0xdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 026F
        gbc.setState(0xdf3a, 0x3298, 0x9f80, 0x9fc1, 0xb680, 0x7b7e, 0x0, 0x1);
        gbc.writeMem(0xdf3a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0xdf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3a));
        EXPECT(0x77, gbc.readMem(0xdf3b));
        // CB 77 0270
        gbc.setState(0x8270, 0xecdc, 0xdbb0, 0x9aa, 0x5d76, 0x7628, 0x0, 0x0);
        gbc.writeMem(0x8270, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xecdc, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8270));
        EXPECT(0x77, gbc.readMem(0x8271));
        // CB 77 0271
        gbc.setState(0x15b4, 0x285, 0x6750, 0xe5e5, 0xc719, 0x66f6, 0x1, 0x0);
        gbc.writeMem(0x15b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0272
        gbc.setState(0x31ee, 0xb39, 0xe0d0, 0xf10e, 0x1296, 0xea21, 0x0, 0x1);
        gbc.writeMem(0x31ee, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb39, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0274
        gbc.setState(0x125e, 0xffcf, 0x6930, 0x79f0, 0x47c8, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0x125e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x1260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0275
        gbc.setState(0x2d19, 0x303e, 0x6650, 0xb272, 0x1aec, 0x3914, 0x0, 0x0);
        gbc.writeMem(0x2d19, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x303e, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0276
        gbc.setState(0x2667, 0x75c7, 0x6ed0, 0xff49, 0xc924, 0xb386, 0x0, 0x1);
        gbc.writeMem(0x2667, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x75c7, gbc.sp());
        EXPECT(0x2669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0277
        gbc.setState(0x8b04, 0x7632, 0x42e0, 0x409a, 0x7e04, 0xc2af, 0x1, 0x0);
        gbc.writeMem(0x8b04, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7632, gbc.sp());
        EXPECT(0x8b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b04));
        EXPECT(0x77, gbc.readMem(0x8b05));
        // CB 77 0278
        gbc.setState(0x2f5, 0x2738, 0xed00, 0xa742, 0x883e, 0x640f, 0x1, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2738, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0279
        gbc.setState(0x9031, 0xb852, 0xe60, 0x7efa, 0xafe9, 0x8307, 0x0, 0x0);
        gbc.writeMem(0x9031, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb852, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9031));
        EXPECT(0x77, gbc.readMem(0x9032));
        // CB 77 027A
        gbc.setState(0x6bd1, 0xf941, 0x2b70, 0xaabb, 0xd2b6, 0x7bb9, 0x1, 0x0);
        gbc.writeMem(0x6bd1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf941, gbc.sp());
        EXPECT(0x6bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 027B
        gbc.setState(0x10fe, 0xb8a8, 0x8eb0, 0xe349, 0x1d19, 0x1399, 0x0, 0x0);
        gbc.writeMem(0x10fe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb8a8, gbc.sp());
        EXPECT(0x1100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 027C
        gbc.setState(0xebb1, 0x56d0, 0xd120, 0x3c05, 0xc2, 0x71d8, 0x1, 0x1);
        gbc.writeMem(0xebb1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x56d0, gbc.sp());
        EXPECT(0xebb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb1));
        EXPECT(0x77, gbc.readMem(0xebb2));
        // CB 77 027D
        gbc.setState(0x880, 0x9dbc, 0xbe30, 0x804b, 0x306b, 0x4df9, 0x1, 0x0);
        gbc.writeMem(0x880, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 027E
        gbc.setState(0x3bc2, 0xdebc, 0x1b30, 0xe47b, 0x65b7, 0x92f6, 0x1, 0x1);
        gbc.writeMem(0x3bc2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdebc, gbc.sp());
        EXPECT(0x3bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 027F
        gbc.setState(0x5d96, 0xe967, 0x9cf0, 0x6ff0, 0xce42, 0x33ee, 0x1, 0x0);
        gbc.writeMem(0x5d96, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x5d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0280
        gbc.setState(0x4348, 0x9bd5, 0xb7f0, 0xd233, 0x2a10, 0xf71d, 0x1, 0x1);
        gbc.writeMem(0x4348, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9bd5, gbc.sp());
        EXPECT(0x434a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0281
        gbc.setState(0xac6f, 0x526f, 0xa9c0, 0xffa4, 0x39dd, 0xfea5, 0x1, 0x1);
        gbc.writeMem(0xac6f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x526f, gbc.sp());
        EXPECT(0xac71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6f));
        EXPECT(0x77, gbc.readMem(0xac70));
        // CB 77 0283
        gbc.setState(0xc56d, 0xe853, 0x83a0, 0x826e, 0x61f1, 0x23bf, 0x0, 0x0);
        gbc.writeMem(0xc56d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0xc56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56d));
        EXPECT(0x77, gbc.readMem(0xc56e));
        // CB 77 0284
        gbc.setState(0x5e16, 0x5ea4, 0x530, 0xbe5, 0x9c11, 0xc957, 0x1, 0x0);
        gbc.writeMem(0x5e16, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x5e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0285
        gbc.setState(0x37e9, 0xc0bf, 0xbff0, 0xc175, 0x17b3, 0x3c5c, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0286
        gbc.setState(0x553c, 0x28e, 0x1d10, 0x54f3, 0xb893, 0xfbeb, 0x1, 0x0);
        gbc.writeMem(0x553c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0x553e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0287
        gbc.setState(0x309b, 0x7490, 0x5fe0, 0xd058, 0x6c6d, 0x4353, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0288
        gbc.setState(0xe65c, 0x379, 0x5e90, 0x297e, 0xf0d3, 0xddd1, 0x1, 0x1);
        gbc.writeMem(0xe65c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x379, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65c));
        EXPECT(0x77, gbc.readMem(0xe65d));
        // CB 77 028A
        gbc.setState(0x5e52, 0xdcb8, 0x8a60, 0x1226, 0x42b1, 0x7cda, 0x1, 0x1);
        gbc.writeMem(0x5e52, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdcb8, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 028B
        gbc.setState(0x467e, 0x7391, 0x5190, 0xbc8e, 0xaa45, 0x2a6f, 0x1, 0x0);
        gbc.writeMem(0x467e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7391, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 028C
        gbc.setState(0x83f6, 0x9928, 0x4cc0, 0x2149, 0x9b14, 0x91aa, 0x0, 0x0);
        gbc.writeMem(0x83f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f6));
        EXPECT(0x77, gbc.readMem(0x83f7));
        // CB 77 028D
        gbc.setState(0xee74, 0xbb48, 0x5170, 0xf725, 0x5ae3, 0x2d97, 0x0, 0x1);
        gbc.writeMem(0xee74, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbb48, gbc.sp());
        EXPECT(0xee76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee74));
        EXPECT(0x77, gbc.readMem(0xee75));
        // CB 77 028E
        gbc.setState(0xc12d, 0xc4e7, 0xe80, 0xf8ab, 0x9eb5, 0x4018, 0x0, 0x1);
        gbc.writeMem(0xc12d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12d));
        EXPECT(0x77, gbc.readMem(0xc12e));
        // CB 77 028F
        gbc.setState(0x5be6, 0xde55, 0xa8a0, 0xe273, 0x3693, 0x90b1, 0x1, 0x1);
        gbc.writeMem(0x5be6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xde55, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0290
        gbc.setState(0xab14, 0x325e, 0x4700, 0x1462, 0x5842, 0x8546, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab14));
        EXPECT(0x77, gbc.readMem(0xab15));
        // CB 77 0291
        gbc.setState(0xd8b4, 0x8dc7, 0x37b0, 0x157f, 0x1c1c, 0x7ca, 0x1, 0x1);
        gbc.writeMem(0xd8b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0xd8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b4));
        EXPECT(0x77, gbc.readMem(0xd8b5));
        // CB 77 0292
        gbc.setState(0x8b30, 0xc084, 0xccf0, 0xea26, 0xd00f, 0x8328, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc084, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b30));
        EXPECT(0x77, gbc.readMem(0x8b31));
        // CB 77 0293
        gbc.setState(0x3ab6, 0xa1c2, 0x77e0, 0xc280, 0xaa88, 0x9e2c, 0x1, 0x0);
        gbc.writeMem(0x3ab6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa1c2, gbc.sp());
        EXPECT(0x3ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0294
        gbc.setState(0x45b, 0x66eb, 0xf650, 0xe870, 0xedc5, 0xd17c, 0x1, 0x1);
        gbc.writeMem(0x45b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x66eb, gbc.sp());
        EXPECT(0x45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0295
        gbc.setState(0x3aa3, 0xc89d, 0x8720, 0xecf1, 0xf93, 0x5229, 0x0, 0x0);
        gbc.writeMem(0x3aa3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc89d, gbc.sp());
        EXPECT(0x3aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0296
        gbc.setState(0x6283, 0x5522, 0x3410, 0xba81, 0xd10c, 0x12ff, 0x0, 0x0);
        gbc.writeMem(0x6283, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5522, gbc.sp());
        EXPECT(0x6285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0297
        gbc.setState(0x8368, 0xf988, 0xfd30, 0xf26a, 0xb5f4, 0x9140, 0x0, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf988, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8368));
        EXPECT(0x77, gbc.readMem(0x8369));
        // CB 77 0298
        gbc.setState(0x5818, 0x48eb, 0x1ea0, 0x3490, 0xd02e, 0xb9a6, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0299
        gbc.setState(0xe94a, 0x1fe4, 0xcb30, 0xf41d, 0x2af3, 0x6633, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1fe4, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94a));
        EXPECT(0x77, gbc.readMem(0xe94b));
        // CB 77 029A
        gbc.setState(0x5efe, 0x58eb, 0xee60, 0x95e3, 0x5e25, 0x85e0, 0x0, 0x0);
        gbc.writeMem(0x5efe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x58eb, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 029B
        gbc.setState(0xe610, 0xe39b, 0x6bd0, 0x3882, 0x27da, 0xee7e, 0x1, 0x0);
        gbc.writeMem(0xe610, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe39b, gbc.sp());
        EXPECT(0xe612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe610));
        EXPECT(0x77, gbc.readMem(0xe611));
        // CB 77 029C
        gbc.setState(0x3c78, 0x2c98, 0x2be0, 0xbb19, 0x54e7, 0x5bf4, 0x0, 0x1);
        gbc.writeMem(0x3c78, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2c98, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 029D
        gbc.setState(0xd0db, 0x70f0, 0x90f0, 0x2e2, 0xb1db, 0x26be, 0x1, 0x0);
        gbc.writeMem(0xd0db, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0xd0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0db));
        EXPECT(0x77, gbc.readMem(0xd0dc));
        // CB 77 029E
        gbc.setState(0xb3d6, 0xd1be, 0xa10, 0x8ee9, 0xa3b3, 0x6659, 0x1, 0x1);
        gbc.writeMem(0xb3d6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd1be, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d6));
        EXPECT(0x77, gbc.readMem(0xb3d7));
        // CB 77 029F
        gbc.setState(0x5301, 0xa85f, 0xc010, 0x6fe1, 0x44ef, 0x8566, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa85f, gbc.sp());
        EXPECT(0x5303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02A0
        gbc.setState(0xd3f7, 0xf7a3, 0x8a10, 0xd262, 0xe92d, 0xa1d, 0x1, 0x0);
        gbc.writeMem(0xd3f7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0xd3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f7));
        EXPECT(0x77, gbc.readMem(0xd3f8));
        // CB 77 02A1
        gbc.setState(0x7bfe, 0xbff4, 0xf170, 0xb431, 0xf202, 0x8293, 0x1, 0x0);
        gbc.writeMem(0x7bfe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0x7c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02A2
        gbc.setState(0x3ce8, 0x7db7, 0x7140, 0x161c, 0x4314, 0x3018, 0x0, 0x1);
        gbc.writeMem(0x3ce8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02A3
        gbc.setState(0xe1e3, 0xfb43, 0x8a20, 0xcc11, 0x656f, 0xee89, 0x0, 0x1);
        gbc.writeMem(0xe1e3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0xe1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e3));
        EXPECT(0x77, gbc.readMem(0xe1e4));
        // CB 77 02A4
        gbc.setState(0x94cd, 0x26c5, 0x380, 0x61d8, 0xf23, 0xa2c4, 0x0, 0x1);
        gbc.writeMem(0x94cd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x26c5, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cd));
        EXPECT(0x77, gbc.readMem(0x94ce));
        // CB 77 02A5
        gbc.setState(0x9023, 0x4ddc, 0x1960, 0xb7a7, 0x1560, 0xeecc, 0x1, 0x1);
        gbc.writeMem(0x9023, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x9025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9023));
        EXPECT(0x77, gbc.readMem(0x9024));
        // CB 77 02A6
        gbc.setState(0x1555, 0xf0bf, 0xfaf0, 0xb283, 0x671d, 0x8c76, 0x1, 0x1);
        gbc.writeMem(0x1555, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0x1557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02A7
        gbc.setState(0xee29, 0xe9b0, 0x2890, 0xc5c8, 0xc00b, 0xd7d7, 0x0, 0x0);
        gbc.writeMem(0xee29, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe9b0, gbc.sp());
        EXPECT(0xee2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee29));
        EXPECT(0x77, gbc.readMem(0xee2a));
        // CB 77 02A8
        gbc.setState(0x3d6c, 0x6177, 0xef40, 0x9c3d, 0x8f5c, 0x5e60, 0x1, 0x0);
        gbc.writeMem(0x3d6c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6177, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02A9
        gbc.setState(0xe5db, 0xedfd, 0xd240, 0xece4, 0xc14f, 0x64fc, 0x1, 0x0);
        gbc.writeMem(0xe5db, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xedfd, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5db));
        EXPECT(0x77, gbc.readMem(0xe5dc));
        // CB 77 02AA
        gbc.setState(0x3e46, 0xd4ed, 0x6d60, 0xfeb4, 0x49b5, 0x17df, 0x0, 0x1);
        gbc.writeMem(0x3e46, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02AB
        gbc.setState(0x5e7d, 0xf88e, 0x58d0, 0x4296, 0xf351, 0x88db, 0x1, 0x0);
        gbc.writeMem(0x5e7d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0x5e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02AC
        gbc.setState(0xb6d3, 0xed66, 0xa0f0, 0x816b, 0x4693, 0xf692, 0x1, 0x0);
        gbc.writeMem(0xb6d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xed66, gbc.sp());
        EXPECT(0xb6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d3));
        EXPECT(0x77, gbc.readMem(0xb6d4));
        // CB 77 02AD
        gbc.setState(0x3d29, 0x17df, 0xfb60, 0xa2f3, 0x46c4, 0x2d0c, 0x0, 0x1);
        gbc.writeMem(0x3d29, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x3d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02AE
        gbc.setState(0x7cd8, 0x8e45, 0x1230, 0xaab, 0x6158, 0x4dd, 0x0, 0x1);
        gbc.writeMem(0x7cd8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8e45, gbc.sp());
        EXPECT(0x7cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02AF
        gbc.setState(0x247d, 0x7cdc, 0x3ba0, 0x118a, 0x5feb, 0xf814, 0x1, 0x1);
        gbc.writeMem(0x247d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7cdc, gbc.sp());
        EXPECT(0x247f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02B0
        gbc.setState(0x426c, 0xd2e7, 0xf680, 0xca4, 0x8f45, 0x6813, 0x1, 0x0);
        gbc.writeMem(0x426c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0x426e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02B2
        gbc.setState(0xdb6d, 0x6335, 0x62f0, 0xdeab, 0x7171, 0x31b9, 0x0, 0x0);
        gbc.writeMem(0xdb6d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0xdb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6d));
        EXPECT(0x77, gbc.readMem(0xdb6e));
        // CB 77 02B3
        gbc.setState(0x3d6f, 0xdfa6, 0x89d0, 0x7f89, 0xb39c, 0xc507, 0x0, 0x1);
        gbc.writeMem(0x3d6f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdfa6, gbc.sp());
        EXPECT(0x3d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02B4
        gbc.setState(0xb153, 0xfc3a, 0x1a0, 0x4597, 0x25de, 0x3d00, 0x1, 0x1);
        gbc.writeMem(0xb153, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc3a, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb153));
        EXPECT(0x77, gbc.readMem(0xb154));
        // CB 77 02B6
        gbc.setState(0xb5c0, 0x6b5, 0x6250, 0x2003, 0x76b9, 0xb494, 0x1, 0x1);
        gbc.writeMem(0xb5c0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6b5, gbc.sp());
        EXPECT(0xb5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c0));
        EXPECT(0x77, gbc.readMem(0xb5c1));
        // CB 77 02B7
        gbc.setState(0x89f, 0x1a7c, 0x4f90, 0xa0eb, 0xdc38, 0xc2a2, 0x1, 0x1);
        gbc.writeMem(0x89f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1a7c, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02B8
        gbc.setState(0xa122, 0x621b, 0x8a80, 0xc1d, 0x1b8b, 0x7354, 0x0, 0x0);
        gbc.writeMem(0xa122, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x621b, gbc.sp());
        EXPECT(0xa124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa122));
        EXPECT(0x77, gbc.readMem(0xa123));
        // CB 77 02B9
        gbc.setState(0x285f, 0x7d0d, 0x8cb0, 0x815d, 0xfd1c, 0x2443, 0x1, 0x1);
        gbc.writeMem(0x285f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7d0d, gbc.sp());
        EXPECT(0x2861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02BA
        gbc.setState(0x8851, 0x4530, 0x8d50, 0xd063, 0xa84f, 0x63b9, 0x0, 0x0);
        gbc.writeMem(0x8851, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4530, gbc.sp());
        EXPECT(0x8853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8851));
        EXPECT(0x77, gbc.readMem(0x8852));
        // CB 77 02BB
        gbc.setState(0xc966, 0xcc34, 0x5970, 0xe0cf, 0xf6c6, 0x8da0, 0x0, 0x1);
        gbc.writeMem(0xc966, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc34, gbc.sp());
        EXPECT(0xc968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc966));
        EXPECT(0x77, gbc.readMem(0xc967));
        // CB 77 02BC
        gbc.setState(0xc3cd, 0xf668, 0x7ef0, 0x941a, 0x63cc, 0x88b3, 0x1, 0x1);
        gbc.writeMem(0xc3cd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf668, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cd));
        EXPECT(0x77, gbc.readMem(0xc3ce));
        // CB 77 02BD
        gbc.setState(0x3026, 0x179d, 0x36d0, 0xdf58, 0xe7fe, 0x8ab9, 0x1, 0x0);
        gbc.writeMem(0x3026, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x179d, gbc.sp());
        EXPECT(0x3028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02BE
        gbc.setState(0xeba3, 0x5ec, 0x2dd0, 0x485d, 0x7917, 0x87aa, 0x0, 0x1);
        gbc.writeMem(0xeba3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0xeba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba3));
        EXPECT(0x77, gbc.readMem(0xeba4));
        // CB 77 02BF
        gbc.setState(0x6342, 0x75ea, 0x9200, 0xa64e, 0x349b, 0xf77c, 0x1, 0x1);
        gbc.writeMem(0x6342, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x6344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02C0
        gbc.setState(0xcced, 0x7290, 0xe2b0, 0x6267, 0x51a1, 0x72cb, 0x1, 0x1);
        gbc.writeMem(0xcced, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7290, gbc.sp());
        EXPECT(0xccef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcced));
        EXPECT(0x77, gbc.readMem(0xccee));
        // CB 77 02C1
        gbc.setState(0x18a, 0x74bb, 0x37b0, 0x6c47, 0x3748, 0xcd55, 0x1, 0x1);
        gbc.writeMem(0x18a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x74bb, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02C2
        gbc.setState(0x77d7, 0x7fd4, 0xd650, 0xd4be, 0x2753, 0xf301, 0x0, 0x0);
        gbc.writeMem(0x77d7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0x77d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02C3
        gbc.setState(0x7c15, 0x3724, 0xc640, 0x7e08, 0x731a, 0xef58, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02C4
        gbc.setState(0xc76d, 0xe13, 0xa5e0, 0xbe81, 0x870b, 0x4e24, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe13, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0x77, gbc.readMem(0xc76e));
        // CB 77 02C5
        gbc.setState(0x7625, 0xd250, 0x46d0, 0x9d1, 0x31e1, 0xf372, 0x1, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02C6
        gbc.setState(0x418c, 0x282f, 0x2d90, 0xf21b, 0xd6d1, 0xd8cf, 0x1, 0x0);
        gbc.writeMem(0x418c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x282f, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02C7
        gbc.setState(0x651a, 0xc49f, 0x1690, 0xc5fe, 0xfe66, 0x15d, 0x1, 0x0);
        gbc.writeMem(0x651a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc49f, gbc.sp());
        EXPECT(0x651c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02C8
        gbc.setState(0xc8cc, 0x7914, 0xf4f0, 0x7113, 0x7867, 0x4be4, 0x1, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0xc8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cc));
        EXPECT(0x77, gbc.readMem(0xc8cd));
        // CB 77 02C9
        gbc.setState(0xb64, 0xe321, 0x7810, 0x76aa, 0xbb73, 0x43e3, 0x0, 0x1);
        gbc.writeMem(0xb64, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe321, gbc.sp());
        EXPECT(0xb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02CA
        gbc.setState(0xda50, 0x7351, 0xd790, 0x176f, 0x1ff0, 0x6934, 0x1, 0x0);
        gbc.writeMem(0xda50, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0x77, gbc.readMem(0xda51));
        // CB 77 02CB
        gbc.setState(0xd559, 0xe94c, 0xf030, 0x8417, 0x8a01, 0x1e1e, 0x1, 0x1);
        gbc.writeMem(0xd559, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xd55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd559));
        EXPECT(0x77, gbc.readMem(0xd55a));
        // CB 77 02CC
        gbc.setState(0x9b4a, 0x3234, 0xf590, 0xceae, 0xfeb2, 0xd3d6, 0x1, 0x0);
        gbc.writeMem(0x9b4a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3234, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4a));
        EXPECT(0x77, gbc.readMem(0x9b4b));
        // CB 77 02CD
        gbc.setState(0x7c2d, 0x535a, 0x7d70, 0x1def, 0xeca, 0xae92, 0x0, 0x0);
        gbc.writeMem(0x7c2d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02CE
        gbc.setState(0x4fd3, 0xf65c, 0x7560, 0xdb4d, 0x329c, 0xfdcf, 0x0, 0x1);
        gbc.writeMem(0x4fd3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0x4fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02CF
        gbc.setState(0x2f, 0x3901, 0x9c10, 0x13d, 0x221d, 0x4280, 0x0, 0x1);
        gbc.writeMem(0x2f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3901, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02D0
        gbc.setState(0x316f, 0xf6a7, 0x80d0, 0x778a, 0x129f, 0xc30a, 0x0, 0x1);
        gbc.writeMem(0x316f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf6a7, gbc.sp());
        EXPECT(0x3171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02D1
        gbc.setState(0x5c55, 0x864b, 0x6d60, 0x4bb4, 0x1444, 0x7ee2, 0x1, 0x1);
        gbc.writeMem(0x5c55, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x864b, gbc.sp());
        EXPECT(0x5c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02D2
        gbc.setState(0xc70f, 0x109a, 0xccf0, 0xd609, 0x1ed6, 0xb82b, 0x0, 0x1);
        gbc.writeMem(0xc70f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x109a, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70f));
        EXPECT(0x77, gbc.readMem(0xc710));
        // CB 77 02D3
        gbc.setState(0x34c7, 0x2dcd, 0xefc0, 0x6a1a, 0xb8a6, 0x7e6c, 0x1, 0x0);
        gbc.writeMem(0x34c7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x34c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02D4
        gbc.setState(0xb8c2, 0x5440, 0x6200, 0x568e, 0x129b, 0x1200, 0x1, 0x1);
        gbc.writeMem(0xb8c2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5440, gbc.sp());
        EXPECT(0xb8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c2));
        EXPECT(0x77, gbc.readMem(0xb8c3));
        // CB 77 02D5
        gbc.setState(0x82db, 0xa1d6, 0xd700, 0xf2b1, 0x96d9, 0xf5b1, 0x0, 0x0);
        gbc.writeMem(0x82db, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82db));
        EXPECT(0x77, gbc.readMem(0x82dc));
        // CB 77 02D6
        gbc.setState(0x5ea2, 0x7298, 0x32e0, 0x17db, 0x6728, 0x8496, 0x1, 0x0);
        gbc.writeMem(0x5ea2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7298, gbc.sp());
        EXPECT(0x5ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02D7
        gbc.setState(0xa092, 0xdcf8, 0x5fb0, 0xe508, 0xccea, 0x9193, 0x0, 0x1);
        gbc.writeMem(0xa092, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdcf8, gbc.sp());
        EXPECT(0xa094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa092));
        EXPECT(0x77, gbc.readMem(0xa093));
        // CB 77 02D8
        gbc.setState(0x3bd3, 0xcb5d, 0x1470, 0xd8bd, 0x4b76, 0x37d5, 0x1, 0x0);
        gbc.writeMem(0x3bd3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0x3bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02D9
        gbc.setState(0x8eee, 0xea27, 0xd260, 0x3622, 0xdef4, 0xef75, 0x1, 0x1);
        gbc.writeMem(0x8eee, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xea27, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eee));
        EXPECT(0x77, gbc.readMem(0x8eef));
        // CB 77 02DA
        gbc.setState(0x1db4, 0x558f, 0x27f0, 0x5a8d, 0x2dd3, 0xd59e, 0x0, 0x0);
        gbc.writeMem(0x1db4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x558f, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02DB
        gbc.setState(0xed24, 0xb750, 0x7cf0, 0xb717, 0x8785, 0xe7bf, 0x1, 0x1);
        gbc.writeMem(0xed24, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb750, gbc.sp());
        EXPECT(0xed26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed24));
        EXPECT(0x77, gbc.readMem(0xed25));
        // CB 77 02DC
        gbc.setState(0xca86, 0x9cdd, 0x51e0, 0xc195, 0x1be7, 0xe3db, 0x1, 0x0);
        gbc.writeMem(0xca86, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9cdd, gbc.sp());
        EXPECT(0xca88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca86));
        EXPECT(0x77, gbc.readMem(0xca87));
        // CB 77 02DD
        gbc.setState(0xcb4f, 0x42ce, 0x3150, 0x8ba4, 0xe90e, 0x510f, 0x1, 0x0);
        gbc.writeMem(0xcb4f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x42ce, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4f));
        EXPECT(0x77, gbc.readMem(0xcb50));
        // CB 77 02DE
        gbc.setState(0xd8b2, 0x67c1, 0xe730, 0xad63, 0x8358, 0x17d, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x67c1, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b2));
        EXPECT(0x77, gbc.readMem(0xd8b3));
        // CB 77 02DF
        gbc.setState(0x7cda, 0x967f, 0x3e60, 0xed44, 0xa424, 0xcb49, 0x1, 0x0);
        gbc.writeMem(0x7cda, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x967f, gbc.sp());
        EXPECT(0x7cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02E0
        gbc.setState(0x8b1f, 0x5d8f, 0xba10, 0xfbc2, 0x8e6d, 0xe5, 0x0, 0x0);
        gbc.writeMem(0x8b1f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0x8b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1f));
        EXPECT(0x77, gbc.readMem(0x8b20));
        // CB 77 02E1
        gbc.setState(0xb9c2, 0xd60, 0xd50, 0x9ac, 0xb376, 0xbd7b, 0x1, 0x0);
        gbc.writeMem(0xb9c2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd60, gbc.sp());
        EXPECT(0xb9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c2));
        EXPECT(0x77, gbc.readMem(0xb9c3));
        // CB 77 02E3
        gbc.setState(0xe601, 0x86e9, 0x57c0, 0x7c7b, 0xf466, 0xc6bc, 0x1, 0x0);
        gbc.writeMem(0xe601, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x86e9, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe601));
        EXPECT(0x77, gbc.readMem(0xe602));
        // CB 77 02E4
        gbc.setState(0x1994, 0xd4a8, 0x8280, 0x6195, 0x283e, 0xfab4, 0x1, 0x0);
        gbc.writeMem(0x1994, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd4a8, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02E5
        gbc.setState(0x25a3, 0x7c87, 0x5520, 0x7349, 0x4f12, 0x5b9c, 0x0, 0x0);
        gbc.writeMem(0x25a3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7c87, gbc.sp());
        EXPECT(0x25a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02E6
        gbc.setState(0x80ec, 0x3131, 0x2ae0, 0xf8e7, 0x48c8, 0xa3ac, 0x1, 0x0);
        gbc.writeMem(0x80ec, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ec));
        EXPECT(0x77, gbc.readMem(0x80ed));
        // CB 77 02E7
        gbc.setState(0x661d, 0x644e, 0x7900, 0xd1bf, 0xeb09, 0xc3e7, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x644e, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02E8
        gbc.setState(0x4a94, 0xa5d6, 0x3c30, 0xaaac, 0xd8cc, 0x1d09, 0x0, 0x1);
        gbc.writeMem(0x4a94, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa5d6, gbc.sp());
        EXPECT(0x4a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02E9
        gbc.setState(0x6b40, 0xc6e2, 0x3f90, 0x4311, 0x38cd, 0x544b, 0x1, 0x1);
        gbc.writeMem(0x6b40, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc6e2, gbc.sp());
        EXPECT(0x6b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02EB
        gbc.setState(0x386f, 0x714c, 0x8450, 0x34e8, 0x6a86, 0xf108, 0x1, 0x0);
        gbc.writeMem(0x386f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02EC
        gbc.setState(0x6ffc, 0x597a, 0x6380, 0x3981, 0x87cd, 0xf491, 0x1, 0x1);
        gbc.writeMem(0x6ffc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x597a, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02ED
        gbc.setState(0x621b, 0x4c89, 0xb6c0, 0x3959, 0xf768, 0x8c56, 0x0, 0x0);
        gbc.writeMem(0x621b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c89, gbc.sp());
        EXPECT(0x621d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02EE
        gbc.setState(0x888d, 0xb2b1, 0xed00, 0x2454, 0xdd4c, 0xc0cd, 0x0, 0x0);
        gbc.writeMem(0x888d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888d));
        EXPECT(0x77, gbc.readMem(0x888e));
        // CB 77 02EF
        gbc.setState(0xa6df, 0x4c7a, 0xc2c0, 0x8e65, 0x2d20, 0x41d4, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4c7a, gbc.sp());
        EXPECT(0xa6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6df));
        EXPECT(0x77, gbc.readMem(0xa6e0));
        // CB 77 02F0
        gbc.setState(0x8555, 0xb3cd, 0x4bb0, 0xca6, 0xf478, 0xaf5e, 0x1, 0x0);
        gbc.writeMem(0x8555, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb3cd, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8555));
        EXPECT(0x77, gbc.readMem(0x8556));
        // CB 77 02F1
        gbc.setState(0xc53e, 0x1fd4, 0xba10, 0xc6c1, 0x4957, 0x4551, 0x1, 0x1);
        gbc.writeMem(0xc53e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1fd4, gbc.sp());
        EXPECT(0xc540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53e));
        EXPECT(0x77, gbc.readMem(0xc53f));
        // CB 77 02F2
        gbc.setState(0xb827, 0xeeb9, 0x7f60, 0xe3ad, 0xe671, 0xb249, 0x0, 0x1);
        gbc.writeMem(0xb827, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeeb9, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb827));
        EXPECT(0x77, gbc.readMem(0xb828));
        // CB 77 02F3
        gbc.setState(0xdbc0, 0x95f9, 0xc750, 0xf78d, 0xbb2c, 0x8700, 0x0, 0x1);
        gbc.writeMem(0xdbc0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x95f9, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc0));
        EXPECT(0x77, gbc.readMem(0xdbc1));
        // CB 77 02F4
        gbc.setState(0x87fe, 0xce3a, 0x2980, 0x736a, 0x3ba7, 0x5750, 0x1, 0x0);
        gbc.writeMem(0x87fe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xce3a, gbc.sp());
        EXPECT(0x8800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fe));
        EXPECT(0x77, gbc.readMem(0x87ff));
        // CB 77 02F5
        gbc.setState(0x17cf, 0x9869, 0xfcd0, 0x9c94, 0x777e, 0x9fd7, 0x0, 0x1);
        gbc.writeMem(0x17cf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9869, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02F6
        gbc.setState(0xe47e, 0x6297, 0x1ad0, 0x473f, 0x5a73, 0xf0c2, 0x0, 0x0);
        gbc.writeMem(0xe47e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6297, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0x77, gbc.readMem(0xe47f));
        // CB 77 02F8
        gbc.setState(0x2695, 0x7c9c, 0x4b80, 0x8669, 0xec01, 0xb323, 0x0, 0x1);
        gbc.writeMem(0x2695, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0x2697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02F9
        gbc.setState(0x4431, 0xf993, 0x4dc0, 0xb4ac, 0xe3e6, 0x4e40, 0x0, 0x1);
        gbc.writeMem(0x4431, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf993, gbc.sp());
        EXPECT(0x4433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 02FA
        gbc.setState(0x5d07, 0x4c28, 0xc450, 0x27b, 0x6c3c, 0x6b52, 0x0, 0x1);
        gbc.writeMem(0x5d07, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4c28, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02FB
        gbc.setState(0xc6c1, 0x9355, 0x7770, 0x350b, 0xf60d, 0x8f85, 0x0, 0x1);
        gbc.writeMem(0xc6c1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x77, gbc.readMem(0xc6c2));
        // CB 77 02FC
        gbc.setState(0x97e4, 0xb479, 0xecb0, 0x95b6, 0x25cc, 0x390, 0x1, 0x0);
        gbc.writeMem(0x97e4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb479, gbc.sp());
        EXPECT(0x97e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e4));
        EXPECT(0x77, gbc.readMem(0x97e5));
        // CB 77 02FD
        gbc.setState(0x437, 0x839a, 0x4f30, 0x640c, 0x629, 0x6273, 0x0, 0x1);
        gbc.writeMem(0x437, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0x439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 02FE
        gbc.setState(0xba31, 0xd6b6, 0xded0, 0x630, 0x1269, 0x341c, 0x0, 0x0);
        gbc.writeMem(0xba31, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba31));
        EXPECT(0x77, gbc.readMem(0xba32));
        // CB 77 02FF
        gbc.setState(0x3c80, 0x80d6, 0xd2a0, 0x53c9, 0xce67, 0x4d69, 0x1, 0x1);
        gbc.writeMem(0x3c80, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x3c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0300
        gbc.setState(0x4d01, 0x65c6, 0x96a0, 0x8093, 0x75eb, 0x21c2, 0x1, 0x1);
        gbc.writeMem(0x4d01, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x65c6, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0301
        gbc.setState(0x6f74, 0xd29c, 0xd620, 0xabce, 0x6cfb, 0x3993, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd29c, gbc.sp());
        EXPECT(0x6f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0302
        gbc.setState(0x685, 0x681b, 0xc200, 0x91a2, 0x4181, 0x31d4, 0x0, 0x0);
        gbc.writeMem(0x685, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x681b, gbc.sp());
        EXPECT(0x687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0303
        gbc.setState(0xa106, 0xf6f8, 0x6bd0, 0x4201, 0xd7e0, 0x72c1, 0x1, 0x0);
        gbc.writeMem(0xa106, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6f8, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa106));
        EXPECT(0x77, gbc.readMem(0xa107));
        // CB 77 0304
        gbc.setState(0x2b40, 0x543f, 0x7dd0, 0x341d, 0x9f7a, 0xbb, 0x1, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x543f, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0305
        gbc.setState(0x2dd7, 0xa950, 0xb320, 0x7f8b, 0xfa38, 0xf724, 0x1, 0x1);
        gbc.writeMem(0x2dd7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0x2dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0306
        gbc.setState(0x55a2, 0x567d, 0x1920, 0xb0cb, 0x6c62, 0xc627, 0x1, 0x0);
        gbc.writeMem(0x55a2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x567d, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0307
        gbc.setState(0x5b4, 0x9a9a, 0xc720, 0x5c96, 0x7544, 0x16f, 0x1, 0x1);
        gbc.writeMem(0x5b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a9a, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0308
        gbc.setState(0x87b, 0xb5d8, 0x16c0, 0x3bc9, 0x1f1d, 0x5671, 0x0, 0x1);
        gbc.writeMem(0x87b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0309
        gbc.setState(0x60be, 0x305a, 0xf5a0, 0xccae, 0x86a4, 0x7a38, 0x1, 0x1);
        gbc.writeMem(0x60be, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x305a, gbc.sp());
        EXPECT(0x60c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 030A
        gbc.setState(0x2c43, 0x900b, 0xad00, 0x55d5, 0xd201, 0x86aa, 0x0, 0x1);
        gbc.writeMem(0x2c43, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x900b, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 030B
        gbc.setState(0x3211, 0xcff4, 0xf700, 0xb78, 0x63d4, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x3211, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0x3213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 030C
        gbc.setState(0xcd39, 0xc732, 0xf9b0, 0x9d52, 0x5b22, 0x9d81, 0x0, 0x0);
        gbc.writeMem(0xcd39, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc732, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd39));
        EXPECT(0x77, gbc.readMem(0xcd3a));
        // CB 77 030D
        gbc.setState(0xbe97, 0xb9ba, 0x96e0, 0x2728, 0xe655, 0xac65, 0x1, 0x1);
        gbc.writeMem(0xbe97, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb9ba, gbc.sp());
        EXPECT(0xbe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe97));
        EXPECT(0x77, gbc.readMem(0xbe98));
        // CB 77 030E
        gbc.setState(0x8e, 0x2677, 0xb840, 0xfde6, 0xc41b, 0xc87c, 0x1, 0x1);
        gbc.writeMem(0x8e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0310
        gbc.setState(0x8dc3, 0x5e88, 0xa180, 0xea3c, 0x21f7, 0xa200, 0x0, 0x1);
        gbc.writeMem(0x8dc3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5e88, gbc.sp());
        EXPECT(0x8dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc3));
        EXPECT(0x77, gbc.readMem(0x8dc4));
        // CB 77 0311
        gbc.setState(0xae3f, 0x9c68, 0xf440, 0x8bcc, 0xf660, 0x3796, 0x1, 0x1);
        gbc.writeMem(0xae3f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9c68, gbc.sp());
        EXPECT(0xae41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3f));
        EXPECT(0x77, gbc.readMem(0xae40));
        // CB 77 0312
        gbc.setState(0x335f, 0x900c, 0x640, 0x751c, 0x4239, 0xfdc6, 0x0, 0x1);
        gbc.writeMem(0x335f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x900c, gbc.sp());
        EXPECT(0x3361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0313
        gbc.setState(0xbbf, 0xea1, 0x8320, 0x8c58, 0x1a2e, 0xd78a, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xea1, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0314
        gbc.setState(0xcf90, 0xffbe, 0x5430, 0x2dc0, 0xc27b, 0x9b90, 0x1, 0x1);
        gbc.writeMem(0xcf90, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf90));
        EXPECT(0x77, gbc.readMem(0xcf91));
        // CB 77 0315
        gbc.setState(0x5e1c, 0x835, 0x19d0, 0xa7b, 0x53f8, 0x8920, 0x0, 0x0);
        gbc.writeMem(0x5e1c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x835, gbc.sp());
        EXPECT(0x5e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0316
        gbc.setState(0x7d5e, 0x6d60, 0x51a0, 0x41a8, 0x1b58, 0x2af7, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0317
        gbc.setState(0xc9f0, 0xe8fc, 0x7ac0, 0xbdc4, 0xd230, 0x1cd0, 0x0, 0x1);
        gbc.writeMem(0xc9f0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0x77, gbc.readMem(0xc9f1));
        // CB 77 0318
        gbc.setState(0x3d95, 0x35b3, 0xce30, 0x6056, 0x5d9c, 0xa223, 0x1, 0x1);
        gbc.writeMem(0x3d95, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0x3d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0319
        gbc.setState(0x7643, 0x726, 0x79d0, 0xd1d7, 0x4ac8, 0xc229, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x726, gbc.sp());
        EXPECT(0x7645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 031A
        gbc.setState(0x5e87, 0xfb0b, 0x6e90, 0x21cc, 0xd951, 0x464b, 0x0, 0x0);
        gbc.writeMem(0x5e87, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfb0b, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 031B
        gbc.setState(0x8876, 0x9066, 0x2c50, 0x6b89, 0x9a4f, 0x80c, 0x0, 0x0);
        gbc.writeMem(0x8876, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x8878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8876));
        EXPECT(0x77, gbc.readMem(0x8877));
        // CB 77 031C
        gbc.setState(0xc759, 0x2f52, 0xac60, 0x27c3, 0xd265, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0xc759, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2f52, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc759));
        EXPECT(0x77, gbc.readMem(0xc75a));
        // CB 77 031D
        gbc.setState(0xb6d0, 0x1c7a, 0xd7b0, 0xdd9b, 0x2b85, 0xd09a, 0x0, 0x0);
        gbc.writeMem(0xb6d0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d0));
        EXPECT(0x77, gbc.readMem(0xb6d1));
        // CB 77 031E
        gbc.setState(0xdee4, 0x6c70, 0xfee0, 0x7e82, 0xb810, 0xbe7e, 0x0, 0x1);
        gbc.writeMem(0xdee4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6c70, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee4));
        EXPECT(0x77, gbc.readMem(0xdee5));
        // CB 77 031F
        gbc.setState(0xc326, 0xbcc2, 0x7bd0, 0xca0a, 0x5825, 0x3545, 0x1, 0x1);
        gbc.writeMem(0xc326, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0x77, gbc.readMem(0xc327));
        // CB 77 0320
        gbc.setState(0x3288, 0x1e33, 0x2e70, 0xef25, 0xafe5, 0x9d44, 0x0, 0x0);
        gbc.writeMem(0x3288, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1e33, gbc.sp());
        EXPECT(0x328a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0321
        gbc.setState(0xa0e6, 0xe236, 0xa960, 0xb60, 0x1d1a, 0x27b0, 0x0, 0x1);
        gbc.writeMem(0xa0e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe236, gbc.sp());
        EXPECT(0xa0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e6));
        EXPECT(0x77, gbc.readMem(0xa0e7));
        // CB 77 0322
        gbc.setState(0x9d48, 0x4f4e, 0xed00, 0x76be, 0x9d35, 0xa25c, 0x0, 0x0);
        gbc.writeMem(0x9d48, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4f4e, gbc.sp());
        EXPECT(0x9d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d48));
        EXPECT(0x77, gbc.readMem(0x9d49));
        // CB 77 0323
        gbc.setState(0xb20a, 0xdb3f, 0x9b80, 0x7c21, 0x3959, 0xe83e, 0x0, 0x1);
        gbc.writeMem(0xb20a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20a));
        EXPECT(0x77, gbc.readMem(0xb20b));
        // CB 77 0324
        gbc.setState(0x7a96, 0xb981, 0x9300, 0x28bb, 0x2105, 0x4c2, 0x0, 0x0);
        gbc.writeMem(0x7a96, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb981, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0325
        gbc.setState(0x1ffe, 0xfe96, 0x3c20, 0x4a3c, 0xf3de, 0xc284, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe96, gbc.sp());
        EXPECT(0x2000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0326
        gbc.setState(0xd3c5, 0x6f55, 0x1ec0, 0x1ba9, 0x730b, 0x9063, 0x0, 0x0);
        gbc.writeMem(0xd3c5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0xd3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c5));
        EXPECT(0x77, gbc.readMem(0xd3c6));
        // CB 77 0327
        gbc.setState(0x71c1, 0x1dda, 0x460, 0x3d48, 0xf7da, 0x81af, 0x1, 0x0);
        gbc.writeMem(0x71c1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1dda, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0328
        gbc.setState(0x4fae, 0x912d, 0x2d00, 0xe083, 0x4cb2, 0x30db, 0x0, 0x0);
        gbc.writeMem(0x4fae, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x912d, gbc.sp());
        EXPECT(0x4fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0329
        gbc.setState(0xb3cf, 0x1175, 0x7290, 0xf80, 0x52e4, 0x3401, 0x1, 0x1);
        gbc.writeMem(0xb3cf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cf));
        EXPECT(0x77, gbc.readMem(0xb3d0));
        // CB 77 032A
        gbc.setState(0x6c77, 0x8150, 0x2260, 0x65f9, 0xa5e7, 0x3de8, 0x1, 0x1);
        gbc.writeMem(0x6c77, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8150, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 032B
        gbc.setState(0x41b1, 0xbd46, 0xb0d0, 0xa82c, 0x53da, 0x3e73, 0x1, 0x0);
        gbc.writeMem(0x41b1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbd46, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 032C
        gbc.setState(0x6e6, 0x256, 0x41a0, 0x5552, 0xb82e, 0xdd43, 0x0, 0x0);
        gbc.writeMem(0x6e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x256, gbc.sp());
        EXPECT(0x6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 032D
        gbc.setState(0xcd76, 0xb0a3, 0x5d30, 0xd3e4, 0xf4cf, 0xe43b, 0x0, 0x1);
        gbc.writeMem(0xcd76, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0xcd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd76));
        EXPECT(0x77, gbc.readMem(0xcd77));
        // CB 77 032E
        gbc.setState(0xced1, 0x526e, 0x6c60, 0xf412, 0x790a, 0xabf4, 0x1, 0x1);
        gbc.writeMem(0xced1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x526e, gbc.sp());
        EXPECT(0xced3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced1));
        EXPECT(0x77, gbc.readMem(0xced2));
        // CB 77 032F
        gbc.setState(0xa2ca, 0xd42e, 0x5740, 0x1730, 0xd0d7, 0x3573, 0x0, 0x1);
        gbc.writeMem(0xa2ca, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0xa2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ca));
        EXPECT(0x77, gbc.readMem(0xa2cb));
        // CB 77 0330
        gbc.setState(0xc123, 0xb529, 0xb2f0, 0x1ea1, 0x9ba, 0x5c7e, 0x0, 0x1);
        gbc.writeMem(0xc123, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb529, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0x77, gbc.readMem(0xc124));
        // CB 77 0331
        gbc.setState(0x8d22, 0xf4, 0xf950, 0xe49a, 0x4242, 0x65cf, 0x0, 0x0);
        gbc.writeMem(0x8d22, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d22));
        EXPECT(0x77, gbc.readMem(0x8d23));
        // CB 77 0332
        gbc.setState(0x7921, 0x2a8e, 0x2a30, 0x18c4, 0xd65d, 0x5d1d, 0x1, 0x0);
        gbc.writeMem(0x7921, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0333
        gbc.setState(0xe461, 0x4368, 0x6140, 0x1b01, 0xe0ad, 0xb671, 0x0, 0x1);
        gbc.writeMem(0xe461, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4368, gbc.sp());
        EXPECT(0xe463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe461));
        EXPECT(0x77, gbc.readMem(0xe462));
        // CB 77 0334
        gbc.setState(0x3cc, 0x60da, 0x9e00, 0x4b9b, 0x7c41, 0xe8d2, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0335
        gbc.setState(0x7e1d, 0x2189, 0x40d0, 0xbe7d, 0xdaab, 0x67b1, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0336
        gbc.setState(0xb9ab, 0x6aa5, 0xc6a0, 0xd573, 0x4b70, 0xb76e, 0x0, 0x1);
        gbc.writeMem(0xb9ab, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ab));
        EXPECT(0x77, gbc.readMem(0xb9ac));
        // CB 77 0337
        gbc.setState(0x435e, 0x23b6, 0xe7f0, 0x7719, 0x804d, 0x15e6, 0x1, 0x1);
        gbc.writeMem(0x435e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x23b6, gbc.sp());
        EXPECT(0x4360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0338
        gbc.setState(0xee12, 0x53, 0xb2a0, 0x752c, 0xce71, 0x532b, 0x0, 0x0);
        gbc.writeMem(0xee12, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53, gbc.sp());
        EXPECT(0xee14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee12));
        EXPECT(0x77, gbc.readMem(0xee13));
        // CB 77 0339
        gbc.setState(0x1529, 0xc28f, 0xa450, 0x2ddf, 0x4434, 0xa15f, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc28f, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 033A
        gbc.setState(0x92fc, 0xfb0c, 0xc060, 0x18a0, 0xceb6, 0x5ffb, 0x1, 0x0);
        gbc.writeMem(0x92fc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfb0c, gbc.sp());
        EXPECT(0x92fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fc));
        EXPECT(0x77, gbc.readMem(0x92fd));
        // CB 77 033B
        gbc.setState(0x63d2, 0xedf7, 0xdf60, 0xebbe, 0x95c9, 0x22d0, 0x1, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 033C
        gbc.setState(0xff1, 0x3c0a, 0x3030, 0x935, 0xf14d, 0x90bd, 0x1, 0x0);
        gbc.writeMem(0xff1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c0a, gbc.sp());
        EXPECT(0xff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 033D
        gbc.setState(0x77dc, 0x4cd7, 0xc870, 0x15f7, 0x346b, 0xcb91, 0x0, 0x1);
        gbc.writeMem(0x77dc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 033E
        gbc.setState(0x5c8b, 0xac55, 0x6b30, 0xac6b, 0x8d2b, 0x157, 0x1, 0x1);
        gbc.writeMem(0x5c8b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xac55, gbc.sp());
        EXPECT(0x5c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 033F
        gbc.setState(0x6714, 0x1bfe, 0xd6d0, 0xf002, 0x4ff3, 0xf9d8, 0x0, 0x1);
        gbc.writeMem(0x6714, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0x6716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0340
        gbc.setState(0xc4f6, 0xc39b, 0xca50, 0xb267, 0x6ac7, 0x6d41, 0x1, 0x0);
        gbc.writeMem(0xc4f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0xc4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f6));
        EXPECT(0x77, gbc.readMem(0xc4f7));
        // CB 77 0341
        gbc.setState(0x5cb0, 0x53c7, 0x6fd0, 0xaa46, 0x901, 0x5851, 0x1, 0x0);
        gbc.writeMem(0x5cb0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0342
        gbc.setState(0xa6d3, 0xd3a3, 0xdb70, 0x835c, 0xa515, 0x124e, 0x1, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d3));
        EXPECT(0x77, gbc.readMem(0xa6d4));
        // CB 77 0343
        gbc.setState(0xebe5, 0xa18b, 0xd460, 0xef96, 0xb5b9, 0xa393, 0x0, 0x0);
        gbc.writeMem(0xebe5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa18b, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe5));
        EXPECT(0x77, gbc.readMem(0xebe6));
        // CB 77 0344
        gbc.setState(0x1649, 0x7221, 0x3020, 0xbf86, 0x7f04, 0xed6, 0x1, 0x0);
        gbc.writeMem(0x1649, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x164b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0345
        gbc.setState(0x69b4, 0x443e, 0xb500, 0xdbb8, 0x1d1a, 0x732e, 0x1, 0x0);
        gbc.writeMem(0x69b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x443e, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0346
        gbc.setState(0x9d75, 0xa627, 0x25c0, 0xa174, 0xd3e8, 0xd635, 0x0, 0x1);
        gbc.writeMem(0x9d75, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa627, gbc.sp());
        EXPECT(0x9d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d75));
        EXPECT(0x77, gbc.readMem(0x9d76));
        // CB 77 0347
        gbc.setState(0xa5c0, 0x63dd, 0x4210, 0x27ac, 0x27f5, 0xa996, 0x0, 0x0);
        gbc.writeMem(0xa5c0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x63dd, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c0));
        EXPECT(0x77, gbc.readMem(0xa5c1));
        // CB 77 0348
        gbc.setState(0x1335, 0x7450, 0x1fb0, 0x3cc3, 0xdb5e, 0x221d, 0x0, 0x1);
        gbc.writeMem(0x1335, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0349
        gbc.setState(0x539d, 0x31b6, 0xc590, 0xa274, 0x60f0, 0xc1c8, 0x0, 0x0);
        gbc.writeMem(0x539d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x31b6, gbc.sp());
        EXPECT(0x539f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 034A
        gbc.setState(0x62eb, 0xc282, 0xf410, 0x9d85, 0xb81d, 0xdbd8, 0x0, 0x0);
        gbc.writeMem(0x62eb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc282, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 034B
        gbc.setState(0x8309, 0x5f6a, 0x3710, 0x19d2, 0x318e, 0x562e, 0x1, 0x0);
        gbc.writeMem(0x8309, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0x830b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8309));
        EXPECT(0x77, gbc.readMem(0x830a));
        // CB 77 034C
        gbc.setState(0x60cc, 0xde07, 0x63a0, 0x36d2, 0xb35, 0xd470, 0x1, 0x0);
        gbc.writeMem(0x60cc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0x60ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 034D
        gbc.setState(0x7c55, 0xca84, 0xe610, 0xe752, 0x124e, 0x6124, 0x1, 0x1);
        gbc.writeMem(0x7c55, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca84, gbc.sp());
        EXPECT(0x7c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 034E
        gbc.setState(0xefbf, 0x1279, 0x6ca0, 0x4ba2, 0xf6fe, 0x4aff, 0x0, 0x0);
        gbc.writeMem(0xefbf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbf));
        EXPECT(0x77, gbc.readMem(0xefc0));
        // CB 77 034F
        gbc.setState(0xac5, 0x7fc2, 0xfde0, 0xa6d6, 0x8181, 0x8c1d, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0350
        gbc.setState(0x842, 0xcd58, 0xcf0, 0xc470, 0xc5b7, 0x40c1, 0x1, 0x0);
        gbc.writeMem(0x842, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0x844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0351
        gbc.setState(0xa4c, 0x2126, 0x4340, 0xcf89, 0x9352, 0x74f1, 0x0, 0x0);
        gbc.writeMem(0xa4c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2126, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0352
        gbc.setState(0x3cb7, 0xb577, 0x9ec0, 0xc1be, 0x7627, 0xc9d5, 0x0, 0x1);
        gbc.writeMem(0x3cb7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x3cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0353
        gbc.setState(0x9f4f, 0x10ec, 0x1fd0, 0x78cf, 0x4562, 0xe2b7, 0x0, 0x0);
        gbc.writeMem(0x9f4f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x10ec, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0x77, gbc.readMem(0x9f50));
        // CB 77 0354
        gbc.setState(0x575b, 0x1b64, 0x1c60, 0x65dc, 0xf049, 0xb878, 0x1, 0x0);
        gbc.writeMem(0x575b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0x575d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0355
        gbc.setState(0xee0, 0xa7ef, 0xa860, 0xd0e6, 0x47be, 0xc1fc, 0x0, 0x1);
        gbc.writeMem(0xee0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa7ef, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0356
        gbc.setState(0x9099, 0xf30b, 0x5fb0, 0x1027, 0x8414, 0xfa2d, 0x1, 0x1);
        gbc.writeMem(0x9099, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf30b, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9099));
        EXPECT(0x77, gbc.readMem(0x909a));
        // CB 77 0357
        gbc.setState(0xdd71, 0x306, 0xba10, 0x5237, 0xbd22, 0x6d64, 0x0, 0x1);
        gbc.writeMem(0xdd71, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0xdd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd71));
        EXPECT(0x77, gbc.readMem(0xdd72));
        // CB 77 0358
        gbc.setState(0x7bf7, 0x6a5, 0xb8d0, 0x7c5a, 0xc38c, 0xaf7c, 0x1, 0x0);
        gbc.writeMem(0x7bf7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6a5, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0359
        gbc.setState(0x5e98, 0x33b9, 0x740, 0x8f0a, 0x9299, 0xad6a, 0x1, 0x0);
        gbc.writeMem(0x5e98, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 035A
        gbc.setState(0x4a13, 0x3a73, 0xee40, 0xf526, 0x2257, 0xa39a, 0x1, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3a73, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 035B
        gbc.setState(0x7c2a, 0xe289, 0x5dc0, 0x9b05, 0x5099, 0x47dc, 0x1, 0x1);
        gbc.writeMem(0x7c2a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 035C
        gbc.setState(0xc2, 0xa204, 0xc860, 0x6336, 0xd51f, 0xe0ca, 0x0, 0x0);
        gbc.writeMem(0xc2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0xc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 035D
        gbc.setState(0xc343, 0x4375, 0x4130, 0x3067, 0x989e, 0xacf3, 0x1, 0x0);
        gbc.writeMem(0xc343, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0xc345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc343));
        EXPECT(0x77, gbc.readMem(0xc344));
        // CB 77 035E
        gbc.setState(0x1b99, 0x3790, 0x7860, 0xa739, 0x6507, 0xbe28, 0x0, 0x0);
        gbc.writeMem(0x1b99, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3790, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 035F
        gbc.setState(0x8b3d, 0xb2ae, 0xc0c0, 0x345e, 0x12f6, 0xea3, 0x1, 0x0);
        gbc.writeMem(0x8b3d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3d));
        EXPECT(0x77, gbc.readMem(0x8b3e));
        // CB 77 0360
        gbc.setState(0x6253, 0xd56e, 0x7750, 0xa2ed, 0x7328, 0x9987, 0x0, 0x0);
        gbc.writeMem(0x6253, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd56e, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0361
        gbc.setState(0x153, 0xd3b5, 0xe8d0, 0x2ed6, 0xc633, 0x166a, 0x1, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd3b5, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0362
        gbc.setState(0xa1c4, 0x50a9, 0x4230, 0xce4d, 0xab93, 0x4b39, 0x1, 0x0);
        gbc.writeMem(0xa1c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x50a9, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c4));
        EXPECT(0x77, gbc.readMem(0xa1c5));
        // CB 77 0364
        gbc.setState(0x3817, 0x4194, 0xbaf0, 0x27b4, 0x9108, 0x7f45, 0x0, 0x1);
        gbc.writeMem(0x3817, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4194, gbc.sp());
        EXPECT(0x3819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0365
        gbc.setState(0xbac2, 0x9877, 0xf80, 0x57a6, 0xf06b, 0xb5ed, 0x1, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9877, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac2));
        EXPECT(0x77, gbc.readMem(0xbac3));
        // CB 77 0366
        gbc.setState(0x52a6, 0xa221, 0xa500, 0x4baf, 0x1348, 0x49ce, 0x0, 0x1);
        gbc.writeMem(0x52a6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa221, gbc.sp());
        EXPECT(0x52a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0367
        gbc.setState(0xcd05, 0xe899, 0xded0, 0x2a0b, 0xd112, 0x5e3d, 0x0, 0x0);
        gbc.writeMem(0xcd05, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe899, gbc.sp());
        EXPECT(0xcd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd05));
        EXPECT(0x77, gbc.readMem(0xcd06));
        // CB 77 0368
        gbc.setState(0x5bc5, 0x159e, 0x1230, 0x242e, 0xf038, 0xf5f, 0x0, 0x0);
        gbc.writeMem(0x5bc5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0369
        gbc.setState(0xcd38, 0xa740, 0xcc50, 0x4123, 0x9803, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0xcd38, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa740, gbc.sp());
        EXPECT(0xcd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd38));
        EXPECT(0x77, gbc.readMem(0xcd39));
        // CB 77 036A
        gbc.setState(0x5b52, 0x93a0, 0x4580, 0x235a, 0x7703, 0xc6fa, 0x0, 0x1);
        gbc.writeMem(0x5b52, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x93a0, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 036B
        gbc.setState(0x602, 0x9c12, 0x60, 0xc4e9, 0x8ddd, 0x4219, 0x0, 0x1);
        gbc.writeMem(0x602, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9c12, gbc.sp());
        EXPECT(0x604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 036C
        gbc.setState(0xc7fb, 0xe297, 0xaf50, 0xbeff, 0xf2bd, 0xa6f5, 0x0, 0x1);
        gbc.writeMem(0xc7fb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe297, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0x77, gbc.readMem(0xc7fc));
        // CB 77 036E
        gbc.setState(0x4d0c, 0x67b5, 0x7530, 0xa15c, 0x7411, 0x1f10, 0x1, 0x0);
        gbc.writeMem(0x4d0c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x67b5, gbc.sp());
        EXPECT(0x4d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0370
        gbc.setState(0xcd2a, 0x156c, 0x9630, 0x30d, 0x118f, 0x873c, 0x1, 0x1);
        gbc.writeMem(0xcd2a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2a));
        EXPECT(0x77, gbc.readMem(0xcd2b));
        // CB 77 0371
        gbc.setState(0xe510, 0xb9c1, 0xc710, 0x2ab5, 0x2d41, 0x4e85, 0x0, 0x1);
        gbc.writeMem(0xe510, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb9c1, gbc.sp());
        EXPECT(0xe512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe510));
        EXPECT(0x77, gbc.readMem(0xe511));
        // CB 77 0372
        gbc.setState(0x2de, 0x4c92, 0x2af0, 0xe3a1, 0x9547, 0xe78d, 0x1, 0x0);
        gbc.writeMem(0x2de, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0373
        gbc.setState(0x1f91, 0x1082, 0xa5c0, 0xe5b2, 0x719b, 0xa958, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1082, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0374
        gbc.setState(0x1c92, 0xa2db, 0xea20, 0x676, 0x6053, 0x712e, 0x1, 0x1);
        gbc.writeMem(0x1c92, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0x1c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0375
        gbc.setState(0xfa2, 0x3132, 0xa870, 0xe226, 0x6fe, 0xc63a, 0x0, 0x1);
        gbc.writeMem(0xfa2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0376
        gbc.setState(0xd735, 0x139c, 0x1fc0, 0xfb87, 0xdb54, 0xd942, 0x0, 0x0);
        gbc.writeMem(0xd735, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x139c, gbc.sp());
        EXPECT(0xd737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd735));
        EXPECT(0x77, gbc.readMem(0xd736));
        // CB 77 0377
        gbc.setState(0x1819, 0x88ea, 0xeaf0, 0x942f, 0x226e, 0x4aeb, 0x1, 0x1);
        gbc.writeMem(0x1819, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0x181b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0378
        gbc.setState(0x34c4, 0x708a, 0xb920, 0x106c, 0x880d, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x34c4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0379
        gbc.setState(0xcaf3, 0x4eba, 0x1180, 0x54c2, 0xf6fa, 0x99cd, 0x1, 0x0);
        gbc.writeMem(0xcaf3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4eba, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0x77, gbc.readMem(0xcaf4));
        // CB 77 037A
        gbc.setState(0x6983, 0x3227, 0xd2b0, 0x5d55, 0xaa5f, 0xe601, 0x1, 0x0);
        gbc.writeMem(0x6983, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 037B
        gbc.setState(0x25bf, 0x7144, 0xbe60, 0xcc50, 0x8a4b, 0xbe31, 0x1, 0x0);
        gbc.writeMem(0x25bf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 037C
        gbc.setState(0x161e, 0xe775, 0x8c00, 0xd6c, 0x8c9f, 0x84a4, 0x0, 0x0);
        gbc.writeMem(0x161e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe775, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 037D
        gbc.setState(0x97ab, 0x1800, 0xe290, 0xea77, 0x19ce, 0x64de, 0x0, 0x1);
        gbc.writeMem(0x97ab, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ab));
        EXPECT(0x77, gbc.readMem(0x97ac));
        // CB 77 037E
        gbc.setState(0x225b, 0xa03c, 0x9010, 0xe983, 0xd052, 0x5484, 0x1, 0x1);
        gbc.writeMem(0x225b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x225d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 037F
        gbc.setState(0x79b0, 0xb6e0, 0xa590, 0x2a73, 0x41f, 0x8b8c, 0x0, 0x1);
        gbc.writeMem(0x79b0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb6e0, gbc.sp());
        EXPECT(0x79b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0381
        gbc.setState(0x6ceb, 0xdf0c, 0x9920, 0x9f7a, 0x29c3, 0x6ce6, 0x1, 0x1);
        gbc.writeMem(0x6ceb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0x6ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0382
        gbc.setState(0xc90f, 0x82a5, 0x3cb0, 0xf168, 0x7723, 0x6c3c, 0x0, 0x0);
        gbc.writeMem(0xc90f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x82a5, gbc.sp());
        EXPECT(0xc911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90f));
        EXPECT(0x77, gbc.readMem(0xc910));
        // CB 77 0383
        gbc.setState(0x96ce, 0xfda3, 0x8570, 0x151b, 0x8afb, 0x3c4a, 0x0, 0x0);
        gbc.writeMem(0x96ce, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfda3, gbc.sp());
        EXPECT(0x96d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ce));
        EXPECT(0x77, gbc.readMem(0x96cf));
        // CB 77 0384
        gbc.setState(0x19f, 0xeb18, 0x2800, 0x647e, 0x29a8, 0x3cc0, 0x0, 0x0);
        gbc.writeMem(0x19f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xeb18, gbc.sp());
        EXPECT(0x1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0385
        gbc.setState(0x83d2, 0x403f, 0x8540, 0xdaf7, 0xe31c, 0xa1f6, 0x1, 0x0);
        gbc.writeMem(0x83d2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x403f, gbc.sp());
        EXPECT(0x83d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d2));
        EXPECT(0x77, gbc.readMem(0x83d3));
        // CB 77 0386
        gbc.setState(0xdd11, 0xc14b, 0x9e00, 0xb4e6, 0xb1dd, 0x7152, 0x0, 0x0);
        gbc.writeMem(0xdd11, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0xdd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd11));
        EXPECT(0x77, gbc.readMem(0xdd12));
        // CB 77 0387
        gbc.setState(0xea24, 0xfe79, 0x74d0, 0xc034, 0xdbc0, 0xf05, 0x1, 0x1);
        gbc.writeMem(0xea24, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfe79, gbc.sp());
        EXPECT(0xea26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea24));
        EXPECT(0x77, gbc.readMem(0xea25));
        // CB 77 0388
        gbc.setState(0x49f5, 0x7a0c, 0xe240, 0x93f9, 0xa479, 0x4744, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 038A
        gbc.setState(0x7a99, 0xd903, 0xab80, 0x9948, 0x1ec6, 0xd0a9, 0x1, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd903, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 038B
        gbc.setState(0xd65c, 0x3a17, 0x68e0, 0xfb12, 0x4998, 0xa88a, 0x0, 0x1);
        gbc.writeMem(0xd65c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3a17, gbc.sp());
        EXPECT(0xd65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65c));
        EXPECT(0x77, gbc.readMem(0xd65d));
        // CB 77 038C
        gbc.setState(0x6be4, 0x1f0b, 0xefe0, 0x69b7, 0xf33d, 0x71e7, 0x0, 0x1);
        gbc.writeMem(0x6be4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1f0b, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 038D
        gbc.setState(0x7753, 0x1070, 0x71f0, 0x606, 0xc813, 0x6f4c, 0x0, 0x1);
        gbc.writeMem(0x7753, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1070, gbc.sp());
        EXPECT(0x7755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 038E
        gbc.setState(0xd84b, 0x93d8, 0xda70, 0x2fab, 0xd4dd, 0x2887, 0x1, 0x0);
        gbc.writeMem(0xd84b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x93d8, gbc.sp());
        EXPECT(0xd84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84b));
        EXPECT(0x77, gbc.readMem(0xd84c));
        // CB 77 038F
        gbc.setState(0x67e2, 0x17ca, 0xbcf0, 0xc76e, 0xad74, 0x3444, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x17ca, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0390
        gbc.setState(0xe795, 0xf7aa, 0x22e0, 0x2bf0, 0x3e88, 0x2866, 0x1, 0x1);
        gbc.writeMem(0xe795, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe795));
        EXPECT(0x77, gbc.readMem(0xe796));
        // CB 77 0391
        gbc.setState(0x31a7, 0xdff5, 0x6310, 0x788a, 0x2d6, 0xe824, 0x0, 0x0);
        gbc.writeMem(0x31a7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0392
        gbc.setState(0x22d3, 0xc4b2, 0x6a90, 0xeafc, 0xb9fb, 0x7220, 0x1, 0x0);
        gbc.writeMem(0x22d3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0393
        gbc.setState(0x542d, 0xdd80, 0xd330, 0x4a33, 0xfbf, 0x3b94, 0x0, 0x1);
        gbc.writeMem(0x542d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdd80, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0394
        gbc.setState(0x585f, 0xbe77, 0x490, 0x1751, 0x447, 0x8c75, 0x1, 0x1);
        gbc.writeMem(0x585f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0x5861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0395
        gbc.setState(0x10ba, 0xf81, 0x7a20, 0x87a4, 0xf255, 0xfe32, 0x1, 0x1);
        gbc.writeMem(0x10ba, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x10bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 0396
        gbc.setState(0xd0d2, 0xe2f4, 0xad30, 0x8194, 0x186c, 0x6a44, 0x0, 0x1);
        gbc.writeMem(0xd0d2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0xd0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d2));
        EXPECT(0x77, gbc.readMem(0xd0d3));
        // CB 77 0398
        gbc.setState(0x3fd0, 0xa2e9, 0xa530, 0xe918, 0xbd05, 0xd475, 0x1, 0x0);
        gbc.writeMem(0x3fd0, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0x3fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 0399
        gbc.setState(0xe7eb, 0x556e, 0x3f30, 0x1779, 0x6bfd, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0xe7eb, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0xe7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7eb));
        EXPECT(0x77, gbc.readMem(0xe7ec));
        // CB 77 039A
        gbc.setState(0xb59f, 0xa66d, 0x63f0, 0x383d, 0xacf5, 0xa4f3, 0x0, 0x0);
        gbc.writeMem(0xb59f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0xb5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59f));
        EXPECT(0x77, gbc.readMem(0xb5a0));
        // CB 77 039B
        gbc.setState(0xd5d4, 0x9d7f, 0x2640, 0xb7c1, 0xdd56, 0x3d86, 0x1, 0x1);
        gbc.writeMem(0xd5d4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0xd5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d4));
        EXPECT(0x77, gbc.readMem(0xd5d5));
        // CB 77 039C
        gbc.setState(0x22a, 0xf0f, 0x77a0, 0xa0a4, 0x8d5, 0xba2c, 0x1, 0x1);
        gbc.writeMem(0x22a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 039D
        gbc.setState(0x595f, 0xd512, 0x74a0, 0x8707, 0x55a9, 0x20ea, 0x1, 0x1);
        gbc.writeMem(0x595f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 039E
        gbc.setState(0xd724, 0xd3e0, 0x46c0, 0x162e, 0x7c72, 0x54ad, 0x1, 0x1);
        gbc.writeMem(0xd724, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd3e0, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd724));
        EXPECT(0x77, gbc.readMem(0xd725));
        // CB 77 039F
        gbc.setState(0x5ebc, 0xb23c, 0x4360, 0x13d9, 0xacca, 0x1c2, 0x1, 0x1);
        gbc.writeMem(0x5ebc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x5ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03A0
        gbc.setState(0x4391, 0x8cd7, 0xba30, 0x32c9, 0x5a24, 0x9ed8, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8cd7, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03A1
        gbc.setState(0x23e5, 0xe653, 0x9c50, 0xd4e1, 0x8735, 0x1e84, 0x1, 0x0);
        gbc.writeMem(0x23e5, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0x23e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03A2
        gbc.setState(0x4a40, 0xc09b, 0xb10, 0xe36, 0xd290, 0x49eb, 0x1, 0x0);
        gbc.writeMem(0x4a40, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc09b, gbc.sp());
        EXPECT(0x4a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03A3
        gbc.setState(0x80be, 0xc2e2, 0xd560, 0xe26, 0xde99, 0xd356, 0x0, 0x0);
        gbc.writeMem(0x80be, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0x80c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80be));
        EXPECT(0x77, gbc.readMem(0x80bf));
        // CB 77 03A4
        gbc.setState(0x6a16, 0x13d9, 0x4230, 0xa74b, 0xd372, 0x7efa, 0x1, 0x0);
        gbc.writeMem(0x6a16, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x13d9, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03A5
        gbc.setState(0xa3b9, 0xc55, 0x3100, 0x9c8d, 0x13ce, 0xd4b9, 0x0, 0x1);
        gbc.writeMem(0xa3b9, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0xa3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b9));
        EXPECT(0x77, gbc.readMem(0xa3ba));
        // CB 77 03A6
        gbc.setState(0xc8fa, 0xb13c, 0xd5b0, 0xf4f, 0x5caa, 0xd727, 0x0, 0x1);
        gbc.writeMem(0xc8fa, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb13c, gbc.sp());
        EXPECT(0xc8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fa));
        EXPECT(0x77, gbc.readMem(0xc8fb));
        // CB 77 03A7
        gbc.setState(0xcde4, 0xb35b, 0x83e0, 0x3628, 0x5d0e, 0xa654, 0x0, 0x0);
        gbc.writeMem(0xcde4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb35b, gbc.sp());
        EXPECT(0xcde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde4));
        EXPECT(0x77, gbc.readMem(0xcde5));
        // CB 77 03A9
        gbc.setState(0x29bf, 0x3b51, 0xa880, 0x645e, 0x84d9, 0x4106, 0x0, 0x0);
        gbc.writeMem(0x29bf, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03AA
        gbc.setState(0x827c, 0x59, 0xadc0, 0x9115, 0xa9b4, 0xd781, 0x0, 0x1);
        gbc.writeMem(0x827c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x59, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827c));
        EXPECT(0x77, gbc.readMem(0x827d));
        // CB 77 03AB
        gbc.setState(0x9bd4, 0x1605, 0x1e00, 0x9840, 0xce58, 0xa0aa, 0x0, 0x0);
        gbc.writeMem(0x9bd4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0x77, gbc.readMem(0x9bd5));
        // CB 77 03AC
        gbc.setState(0xe33c, 0xa5f7, 0x5fc0, 0xfe40, 0x3e95, 0xa63c, 0x0, 0x1);
        gbc.writeMem(0xe33c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa5f7, gbc.sp());
        EXPECT(0xe33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33c));
        EXPECT(0x77, gbc.readMem(0xe33d));
        // CB 77 03AD
        gbc.setState(0x617e, 0x7af9, 0x98b0, 0x27fa, 0x8fe, 0x54db, 0x1, 0x0);
        gbc.writeMem(0x617e, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7af9, gbc.sp());
        EXPECT(0x6180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03AE
        gbc.setState(0xaca8, 0xaca9, 0xfa50, 0xef59, 0x11d7, 0x6a7e, 0x1, 0x0);
        gbc.writeMem(0xaca8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0xacaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca8));
        EXPECT(0x77, gbc.readMem(0xaca9));
        // CB 77 03B0
        gbc.setState(0x7a6b, 0x5ada, 0x8580, 0x59c3, 0xa90, 0x441f, 0x1, 0x1);
        gbc.writeMem(0x7a6b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5ada, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03B1
        gbc.setState(0x314c, 0xdfe, 0x3a20, 0xe81, 0x472e, 0x3046, 0x0, 0x1);
        gbc.writeMem(0x314c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdfe, gbc.sp());
        EXPECT(0x314e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03B2
        gbc.setState(0x2289, 0xa7d2, 0x4e50, 0xfebd, 0x237d, 0x7ceb, 0x0, 0x1);
        gbc.writeMem(0x2289, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa7d2, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03B3
        gbc.setState(0x1719, 0xb032, 0x6370, 0x7934, 0x92fa, 0xedbb, 0x1, 0x1);
        gbc.writeMem(0x1719, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb032, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03B4
        gbc.setState(0xda1d, 0x62a4, 0xbcc0, 0xdddc, 0x2302, 0x6413, 0x1, 0x1);
        gbc.writeMem(0xda1d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0xda1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1d));
        EXPECT(0x77, gbc.readMem(0xda1e));
        // CB 77 03B5
        gbc.setState(0x9297, 0xcb3f, 0xbbd0, 0xfca5, 0x2119, 0x4d36, 0x1, 0x1);
        gbc.writeMem(0x9297, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcb3f, gbc.sp());
        EXPECT(0x9299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9297));
        EXPECT(0x77, gbc.readMem(0x9298));
        // CB 77 03B6
        gbc.setState(0xa119, 0xa9ad, 0xad70, 0xabb1, 0x8875, 0x8817, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa9ad, gbc.sp());
        EXPECT(0xa11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa119));
        EXPECT(0x77, gbc.readMem(0xa11a));
        // CB 77 03B7
        gbc.setState(0x326, 0x96d7, 0x6070, 0x68dd, 0x753d, 0xe981, 0x0, 0x1);
        gbc.writeMem(0x326, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03B8
        gbc.setState(0x86ca, 0xb460, 0x7da0, 0xb243, 0x5d20, 0xe75c, 0x1, 0x0);
        gbc.writeMem(0x86ca, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb460, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ca));
        EXPECT(0x77, gbc.readMem(0x86cb));
        // CB 77 03B9
        gbc.setState(0x33cd, 0xe5ad, 0xf600, 0xb4e, 0x87e4, 0x7c2f, 0x1, 0x1);
        gbc.writeMem(0x33cd, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03BA
        gbc.setState(0x1cc7, 0x75bd, 0xf6c0, 0xda5e, 0xe3e3, 0xe091, 0x0, 0x0);
        gbc.writeMem(0x1cc7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x75bd, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03BB
        gbc.setState(0x8710, 0xed0, 0x19e0, 0xd69f, 0xf6df, 0x65b7, 0x1, 0x0);
        gbc.writeMem(0x8710, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8710));
        EXPECT(0x77, gbc.readMem(0x8711));
        // CB 77 03BC
        gbc.setState(0xbe1b, 0xefeb, 0x9ec0, 0xd48d, 0xa251, 0x1000, 0x0, 0x1);
        gbc.writeMem(0xbe1b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0xbe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1b));
        EXPECT(0x77, gbc.readMem(0xbe1c));
        // CB 77 03BD
        gbc.setState(0xcc32, 0xaa18, 0x90c0, 0xbf11, 0x5b33, 0xf6cb, 0x1, 0x1);
        gbc.writeMem(0xcc32, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa18, gbc.sp());
        EXPECT(0xcc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc32));
        EXPECT(0x77, gbc.readMem(0xcc33));
        // CB 77 03BE
        gbc.setState(0x75ea, 0x9681, 0xdb00, 0x5e92, 0x9864, 0xccf2, 0x0, 0x0);
        gbc.writeMem(0x75ea, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03BF
        gbc.setState(0x4a45, 0x3b6, 0xbde0, 0xd5c4, 0x71a1, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b6, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03C0
        gbc.setState(0xb391, 0x1f44, 0xbb50, 0x1138, 0x9cce, 0x5b21, 0x0, 0x0);
        gbc.writeMem(0xb391, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1f44, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb391));
        EXPECT(0x77, gbc.readMem(0xb392));
        // CB 77 03C1
        gbc.setState(0x9ae, 0x2a71, 0xf0c0, 0xd60e, 0xfb60, 0x2994, 0x1, 0x1);
        gbc.writeMem(0x9ae, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03C3
        gbc.setState(0xa663, 0xe7f6, 0xed50, 0x5ef5, 0x4d31, 0x8e63, 0x0, 0x0);
        gbc.writeMem(0xa663, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa663));
        EXPECT(0x77, gbc.readMem(0xa664));
        // CB 77 03C4
        gbc.setState(0x4919, 0x9ace, 0x28d0, 0xc4ef, 0xe4b2, 0xce5e, 0x1, 0x1);
        gbc.writeMem(0x4919, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9ace, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03C5
        gbc.setState(0x7bf3, 0xb585, 0x1d60, 0xfb85, 0x385d, 0x6ead, 0x1, 0x0);
        gbc.writeMem(0x7bf3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0x7bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03C6
        gbc.setState(0x2c07, 0xe670, 0x2fd0, 0x95ea, 0x91d5, 0x7d5, 0x0, 0x0);
        gbc.writeMem(0x2c07, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03C7
        gbc.setState(0x9c8, 0x9ebe, 0x6720, 0xd46c, 0x373a, 0x7d7d, 0x0, 0x1);
        gbc.writeMem(0x9c8, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9ebe, gbc.sp());
        EXPECT(0x9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03C8
        gbc.setState(0x5913, 0x796c, 0x8320, 0x183e, 0x4d6b, 0x407f, 0x0, 0x0);
        gbc.writeMem(0x5913, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x796c, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03C9
        gbc.setState(0x35d7, 0xadbc, 0x42a0, 0xf548, 0xf525, 0x99ac, 0x0, 0x0);
        gbc.writeMem(0x35d7, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0x35d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03CA
        gbc.setState(0x22e6, 0x76e8, 0xdfd0, 0xe54a, 0x3dd2, 0xb09c, 0x0, 0x1);
        gbc.writeMem(0x22e6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x76e8, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03CB
        gbc.setState(0x4ab2, 0x20ae, 0x3a10, 0x212d, 0x6a48, 0xe0b2, 0x1, 0x0);
        gbc.writeMem(0x4ab2, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0x4ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03CD
        gbc.setState(0x7214, 0x66da, 0xc600, 0x403, 0x4f1b, 0x430c, 0x0, 0x0);
        gbc.writeMem(0x7214, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0x7216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03CE
        gbc.setState(0x4b9a, 0x7979, 0xdcf0, 0x27d3, 0x1f35, 0xd06a, 0x1, 0x0);
        gbc.writeMem(0x4b9a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03CF
        gbc.setState(0x3193, 0xe5cd, 0x81b0, 0x5c30, 0x2a88, 0xa7b7, 0x1, 0x1);
        gbc.writeMem(0x3193, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03D0
        gbc.setState(0xa3be, 0x4136, 0x5c80, 0x18ea, 0x573a, 0xd9d, 0x1, 0x1);
        gbc.writeMem(0xa3be, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4136, gbc.sp());
        EXPECT(0xa3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3be));
        EXPECT(0x77, gbc.readMem(0xa3bf));
        // CB 77 03D1
        gbc.setState(0x340c, 0xb2fe, 0xd8d0, 0x6bc6, 0xfe46, 0x8a4b, 0x0, 0x1);
        gbc.writeMem(0x340c, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb2fe, gbc.sp());
        EXPECT(0x340e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03D2
        gbc.setState(0x4d7b, 0x51b2, 0xc2c0, 0x61e5, 0xd009, 0x45c6, 0x1, 0x0);
        gbc.writeMem(0x4d7b, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x51b2, gbc.sp());
        EXPECT(0x4d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03D3
        gbc.setState(0xa473, 0x4f, 0xddc0, 0x1c6c, 0xdc08, 0x7b82, 0x0, 0x0);
        gbc.writeMem(0xa473, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4f, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa473));
        EXPECT(0x77, gbc.readMem(0xa474));
        // CB 77 03D4
        gbc.setState(0xb7f6, 0x30c8, 0x1160, 0xd930, 0xda88, 0xb073, 0x1, 0x0);
        gbc.writeMem(0xb7f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0xb7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f6));
        EXPECT(0x77, gbc.readMem(0xb7f7));
        // CB 77 03D5
        gbc.setState(0x91f6, 0xb856, 0x6250, 0x8fc8, 0x235e, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0x91f6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb856, gbc.sp());
        EXPECT(0x91f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f6));
        EXPECT(0x77, gbc.readMem(0x91f7));
        // CB 77 03D6
        gbc.setState(0xbf9f, 0x9ae, 0xfa20, 0x7ede, 0xffd6, 0xac3b, 0x0, 0x0);
        gbc.writeMem(0xbf9f, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0xbfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9f));
        EXPECT(0x77, gbc.readMem(0xbfa0));
        // CB 77 03D7
        gbc.setState(0xac45, 0x3cc5, 0x560, 0xea38, 0x8911, 0x6296, 0x1, 0x0);
        gbc.writeMem(0xac45, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0xac47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac45));
        EXPECT(0x77, gbc.readMem(0xac46));
        // CB 77 03D8
        gbc.setState(0xab9d, 0x6a13, 0x83c0, 0x8524, 0xa07f, 0x355a, 0x0, 0x0);
        gbc.writeMem(0xab9d, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6a13, gbc.sp());
        EXPECT(0xab9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9d));
        EXPECT(0x77, gbc.readMem(0xab9e));
        // CB 77 03D9
        gbc.setState(0x84af, 0x8f51, 0x1d00, 0x9ee4, 0x5b31, 0x3051, 0x0, 0x0);
        gbc.writeMem(0x84af, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0x77, gbc.readMem(0x84b0));
        // CB 77 03DA
        gbc.setState(0xebdc, 0xc8d5, 0x7640, 0xc3ad, 0xa3b2, 0xb0b7, 0x1, 0x1);
        gbc.writeMem(0xebdc, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0xebde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdc));
        EXPECT(0x77, gbc.readMem(0xebdd));
        // CB 77 03DB
        gbc.setState(0xe216, 0xf1a7, 0x63a0, 0x5028, 0xa96d, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0xe216, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf1a7, gbc.sp());
        EXPECT(0xe218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe216));
        EXPECT(0x77, gbc.readMem(0xe217));
        // CB 77 03DC
        gbc.setState(0xa036, 0xf7ae, 0x47b0, 0xf44e, 0x4e1a, 0xeee0, 0x1, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf7ae, gbc.sp());
        EXPECT(0xa038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa036));
        EXPECT(0x77, gbc.readMem(0xa037));
        // CB 77 03DD
        gbc.setState(0x15f3, 0xbf3d, 0xa140, 0x83f, 0xfd3b, 0x1678, 0x0, 0x1);
        gbc.writeMem(0x15f3, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbf3d, gbc.sp());
        EXPECT(0x15f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 77 03DE
        gbc.setState(0xb8b4, 0xddd3, 0x7d0, 0xe735, 0xb5b, 0xab4d, 0x1, 0x1);
        gbc.writeMem(0xb8b4, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0xb8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b4));
        EXPECT(0x77, gbc.readMem(0xb8b5));
        // CB 77 03E1
        gbc.setState(0x545a, 0xa47b, 0x69f0, 0x892d, 0x14a0, 0xeacc, 0x0, 0x1);
        gbc.writeMem(0x545a, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0x545c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03E2
        gbc.setState(0xca84, 0x3fca, 0x4c0, 0xfcba, 0xd5ee, 0xe1da, 0x0, 0x1);
        gbc.writeMem(0xca84, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3fca, gbc.sp());
        EXPECT(0xca86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca84));
        EXPECT(0x77, gbc.readMem(0xca85));
        // CB 77 03E3
        gbc.setState(0xea72, 0x80b6, 0x7e60, 0x4d57, 0xc79b, 0xda42, 0x1, 0x1);
        gbc.writeMem(0xea72, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea72));
        EXPECT(0x77, gbc.readMem(0xea73));
        // CB 77 03E4
        gbc.setState(0x35d1, 0xb6b1, 0xe6d0, 0x7580, 0x8547, 0xd8c4, 0x1, 0x0);
        gbc.writeMem(0x35d1, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0x35d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03E5
        gbc.setState(0x8021, 0xd04c, 0x6e10, 0x46cb, 0x4aca, 0x10f0, 0x1, 0x1);
        gbc.writeMem(0x8021, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x8023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8021));
        EXPECT(0x77, gbc.readMem(0x8022));
        // CB 77 03E6
        gbc.setState(0x2be6, 0x909c, 0x8930, 0x5203, 0xd366, 0x24aa, 0x1, 0x0);
        gbc.writeMem(0x2be6, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 77 03E7
        gbc.setState(0x8216, 0xe5fd, 0xd7e0, 0xe588, 0xc035, 0xd4f7, 0x1, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0x77 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8216));
        EXPECT(0x77, gbc.readMem(0x8217));
    }
