    TEST(gbcemu, opcode_cb_b2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B2 0000
        gbc.setState(0x94f, 0x261d, 0x34f0, 0xa130, 0x6d84, 0x9372, 0x1, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0001
        gbc.setState(0xbdc4, 0x4754, 0x9530, 0xd992, 0x5062, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4754, gbc.sp());
        EXPECT(0xbdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc4));
        EXPECT(0xb2, gbc.readMem(0xbdc5));
        // CB B2 0002
        gbc.setState(0x9cdb, 0x2316, 0xb9e0, 0x62fc, 0x5c6e, 0xa153, 0x1, 0x0);
        gbc.writeMem(0x9cdb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0x9cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdb));
        EXPECT(0xb2, gbc.readMem(0x9cdc));
        // CB B2 0003
        gbc.setState(0x6a81, 0x4f66, 0x3a80, 0xdb6d, 0xc17e, 0xeba4, 0x1, 0x0);
        gbc.writeMem(0x6a81, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0x6a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0004
        gbc.setState(0x8dc8, 0xcfb7, 0x1060, 0x32f4, 0x43e4, 0x12f4, 0x1, 0x0);
        gbc.writeMem(0x8dc8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcfb7, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc8));
        EXPECT(0xb2, gbc.readMem(0x8dc9));
        // CB B2 0005
        gbc.setState(0x6fc4, 0xd40, 0x4d40, 0xe53c, 0xe5de, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x6fc4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0006
        gbc.setState(0xc317, 0xadc5, 0x5f20, 0x6e76, 0xda08, 0x47f3, 0x1, 0x1);
        gbc.writeMem(0xc317, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xadc5, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc317));
        EXPECT(0xb2, gbc.readMem(0xc318));
        // CB B2 0007
        gbc.setState(0x58ca, 0x2f1c, 0xf640, 0x643e, 0x3afe, 0xcaa, 0x0, 0x1);
        gbc.writeMem(0x58ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f1c, gbc.sp());
        EXPECT(0x58cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0008
        gbc.setState(0xb431, 0x6d5c, 0xf0c0, 0x473c, 0xa2b, 0x5bfa, 0x1, 0x1);
        gbc.writeMem(0xb431, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6d5c, gbc.sp());
        EXPECT(0xb433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb431));
        EXPECT(0xb2, gbc.readMem(0xb432));
        // CB B2 0009
        gbc.setState(0xecbd, 0xb5bd, 0xc770, 0x89b0, 0x6e13, 0x39fa, 0x0, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb5bd, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0xb2, gbc.readMem(0xecbe));
        // CB B2 000A
        gbc.setState(0x26d5, 0x92b2, 0x57d0, 0x56c1, 0x342, 0x33b6, 0x0, 0x0);
        gbc.writeMem(0x26d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x26d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 000B
        gbc.setState(0xb979, 0x376e, 0xdbf0, 0x3214, 0xb3e, 0x47cc, 0x1, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb979));
        EXPECT(0xb2, gbc.readMem(0xb97a));
        // CB B2 000C
        gbc.setState(0xb165, 0x6254, 0xe400, 0x2b6, 0xbfd3, 0x2ccc, 0x1, 0x0);
        gbc.writeMem(0xb165, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6254, gbc.sp());
        EXPECT(0xb167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb165));
        EXPECT(0xb2, gbc.readMem(0xb166));
        // CB B2 000D
        gbc.setState(0x1d2a, 0x7654, 0xd730, 0xded9, 0x212e, 0x771f, 0x1, 0x1);
        gbc.writeMem(0x1d2a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7654, gbc.sp());
        EXPECT(0x1d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 000E
        gbc.setState(0x9cd7, 0xd484, 0xb180, 0x3931, 0x2df6, 0xd239, 0x1, 0x0);
        gbc.writeMem(0x9cd7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd484, gbc.sp());
        EXPECT(0x9cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd7));
        EXPECT(0xb2, gbc.readMem(0x9cd8));
        // CB B2 000F
        gbc.setState(0x24cb, 0x35c7, 0x24e0, 0xea0a, 0x5d40, 0xed26, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x35c7, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0010
        gbc.setState(0x8b22, 0xbf4f, 0x8620, 0xbeb1, 0x7833, 0x37f8, 0x0, 0x1);
        gbc.writeMem(0x8b22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b22));
        EXPECT(0xb2, gbc.readMem(0x8b23));
        // CB B2 0011
        gbc.setState(0xa20e, 0x9339, 0x5380, 0x87ba, 0x625b, 0xf961, 0x0, 0x0);
        gbc.writeMem(0xa20e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9339, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20e));
        EXPECT(0xb2, gbc.readMem(0xa20f));
        // CB B2 0012
        gbc.setState(0x2829, 0x8b91, 0xf130, 0x2563, 0x62ba, 0x1b7f, 0x0, 0x1);
        gbc.writeMem(0x2829, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0x282b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0013
        gbc.setState(0x92a0, 0xbfe9, 0x3890, 0x7a29, 0x3d3c, 0x2fd4, 0x0, 0x0);
        gbc.writeMem(0x92a0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfe9, gbc.sp());
        EXPECT(0x92a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a0));
        EXPECT(0xb2, gbc.readMem(0x92a1));
        // CB B2 0014
        gbc.setState(0x10bd, 0xcd0d, 0x8a60, 0xe3f7, 0x10d4, 0xfe6, 0x0, 0x0);
        gbc.writeMem(0x10bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0015
        gbc.setState(0xd710, 0xd3d8, 0xbf30, 0xd71d, 0xf4ab, 0x4060, 0x0, 0x1);
        gbc.writeMem(0xd710, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0xd712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd710));
        EXPECT(0xb2, gbc.readMem(0xd711));
        // CB B2 0016
        gbc.setState(0x411b, 0x4dc5, 0xef00, 0xb7cc, 0x89bd, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0x411b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4dc5, gbc.sp());
        EXPECT(0x411d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0017
        gbc.setState(0x1673, 0x5d65, 0xdca0, 0xf992, 0xd014, 0xdb8a, 0x0, 0x1);
        gbc.writeMem(0x1673, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5d65, gbc.sp());
        EXPECT(0x1675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0018
        gbc.setState(0x7cdf, 0x8159, 0x7140, 0xaa2a, 0x6605, 0x831b, 0x0, 0x0);
        gbc.writeMem(0x7cdf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8159, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0019
        gbc.setState(0x71f1, 0xc40e, 0xc120, 0x33b4, 0x8ddc, 0x92ac, 0x0, 0x1);
        gbc.writeMem(0x71f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0x71f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 001A
        gbc.setState(0xa627, 0x5e10, 0x6750, 0x2ba6, 0x5fe0, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0xa627, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e10, gbc.sp());
        EXPECT(0xa629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa627));
        EXPECT(0xb2, gbc.readMem(0xa628));
        // CB B2 001C
        gbc.setState(0xc752, 0xee98, 0x2c20, 0x5a2d, 0x29d8, 0x1291, 0x1, 0x1);
        gbc.writeMem(0xc752, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee98, gbc.sp());
        EXPECT(0xc754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc752));
        EXPECT(0xb2, gbc.readMem(0xc753));
        // CB B2 001D
        gbc.setState(0xc018, 0x2448, 0xfd40, 0x3d85, 0x9f4e, 0xee69, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0xb2, gbc.readMem(0xc019));
        // CB B2 001E
        gbc.setState(0x4c6, 0xaf7c, 0x4100, 0x1fda, 0x6ded, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0x4c6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0x4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 001F
        gbc.setState(0x822f, 0xc3ba, 0x1790, 0xc6b2, 0x1dd2, 0x14a6, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822f));
        EXPECT(0xb2, gbc.readMem(0x8230));
        // CB B2 0020
        gbc.setState(0x6cc6, 0xa8f5, 0xe530, 0xad7e, 0x4531, 0x1d01, 0x0, 0x0);
        gbc.writeMem(0x6cc6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa8f5, gbc.sp());
        EXPECT(0x6cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0021
        gbc.setState(0x60fb, 0xd3ec, 0x8c0, 0xf751, 0x9cff, 0x6d47, 0x0, 0x0);
        gbc.writeMem(0x60fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd3ec, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0022
        gbc.setState(0x39ba, 0x822f, 0x2fd0, 0x649f, 0x105, 0x567, 0x1, 0x1);
        gbc.writeMem(0x39ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x822f, gbc.sp());
        EXPECT(0x39bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0024
        gbc.setState(0x566a, 0x2c4b, 0x7d50, 0xa4da, 0x5f13, 0x5a0, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0025
        gbc.setState(0xa7aa, 0xdbb6, 0x1d70, 0x5e5e, 0xc7f, 0x9f0d, 0x1, 0x0);
        gbc.writeMem(0xa7aa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdbb6, gbc.sp());
        EXPECT(0xa7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7aa));
        EXPECT(0xb2, gbc.readMem(0xa7ab));
        // CB B2 0026
        gbc.setState(0x2555, 0x42bb, 0x28a0, 0x77e0, 0xd44d, 0x352d, 0x1, 0x0);
        gbc.writeMem(0x2555, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x42bb, gbc.sp());
        EXPECT(0x2557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0027
        gbc.setState(0x8be0, 0xa7c3, 0x8f00, 0x491a, 0x693a, 0xda32, 0x0, 0x1);
        gbc.writeMem(0x8be0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa7c3, gbc.sp());
        EXPECT(0x8be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be0));
        EXPECT(0xb2, gbc.readMem(0x8be1));
        // CB B2 0028
        gbc.setState(0xed8, 0xab13, 0x3680, 0x6096, 0xb38e, 0xf70, 0x0, 0x0);
        gbc.writeMem(0xed8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0xeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0029
        gbc.setState(0x161c, 0xf90d, 0x9210, 0x2a2f, 0xf18e, 0x40d, 0x1, 0x0);
        gbc.writeMem(0x161c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf90d, gbc.sp());
        EXPECT(0x161e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 002A
        gbc.setState(0x1b83, 0xf868, 0xfe00, 0x65c9, 0xa865, 0xea, 0x0, 0x1);
        gbc.writeMem(0x1b83, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0x1b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 002B
        gbc.setState(0xbb41, 0x2bad, 0x6f40, 0xe2a9, 0x651c, 0xf411, 0x0, 0x1);
        gbc.writeMem(0xbb41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0xbb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb41));
        EXPECT(0xb2, gbc.readMem(0xbb42));
        // CB B2 002C
        gbc.setState(0xda0f, 0xa02f, 0x9af0, 0x5b6f, 0xe93f, 0xe98e, 0x0, 0x0);
        gbc.writeMem(0xda0f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0xda11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0f));
        EXPECT(0xb2, gbc.readMem(0xda10));
        // CB B2 002D
        gbc.setState(0x564d, 0x5438, 0x9170, 0xea22, 0x23c5, 0xd3f9, 0x1, 0x1);
        gbc.writeMem(0x564d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5438, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 002E
        gbc.setState(0x4a06, 0xd36e, 0x7b40, 0x70c5, 0x586d, 0xbdc7, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd36e, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 002F
        gbc.setState(0x35e9, 0x11f5, 0x7490, 0x382b, 0x215, 0x9b6e, 0x1, 0x0);
        gbc.writeMem(0x35e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x11f5, gbc.sp());
        EXPECT(0x35eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0030
        gbc.setState(0xd05b, 0x4c12, 0x480, 0xe872, 0xe875, 0x7e4, 0x1, 0x1);
        gbc.writeMem(0xd05b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4c12, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05b));
        EXPECT(0xb2, gbc.readMem(0xd05c));
        // CB B2 0031
        gbc.setState(0xbd07, 0x88e8, 0xb060, 0x3e8a, 0x188, 0xb855, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x88e8, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0xb2, gbc.readMem(0xbd08));
        // CB B2 0032
        gbc.setState(0xc7f9, 0xad77, 0xc340, 0x3284, 0x921d, 0x5054, 0x1, 0x0);
        gbc.writeMem(0xc7f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0xc7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f9));
        EXPECT(0xb2, gbc.readMem(0xc7fa));
        // CB B2 0033
        gbc.setState(0x93be, 0x3e23, 0x2c30, 0x80dc, 0xf27a, 0x125d, 0x1, 0x1);
        gbc.writeMem(0x93be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3e23, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93be));
        EXPECT(0xb2, gbc.readMem(0x93bf));
        // CB B2 0034
        gbc.setState(0x926c, 0x6b0b, 0x2f00, 0x53ea, 0x8adc, 0x5168, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6b0b, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926c));
        EXPECT(0xb2, gbc.readMem(0x926d));
        // CB B2 0035
        gbc.setState(0x29c2, 0x2f78, 0xe060, 0x300c, 0xee93, 0x587d, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2f78, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0036
        gbc.setState(0xd817, 0xcecf, 0x22c0, 0x17d7, 0xd5be, 0x7681, 0x0, 0x1);
        gbc.writeMem(0xd817, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0xd819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd817));
        EXPECT(0xb2, gbc.readMem(0xd818));
        // CB B2 0037
        gbc.setState(0xefc5, 0x189d, 0xae40, 0x6d0e, 0xd0a6, 0xae3c, 0x0, 0x1);
        gbc.writeMem(0xefc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc5));
        EXPECT(0xb2, gbc.readMem(0xefc6));
        // CB B2 0038
        gbc.setState(0xe7ba, 0x8080, 0x36a0, 0x3c88, 0xbd43, 0xae02, 0x0, 0x0);
        gbc.writeMem(0xe7ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8080, gbc.sp());
        EXPECT(0xe7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ba));
        EXPECT(0xb2, gbc.readMem(0xe7bb));
        // CB B2 0039
        gbc.setState(0x4f3c, 0x4a49, 0xb270, 0x1536, 0x3574, 0x7e5b, 0x0, 0x0);
        gbc.writeMem(0x4f3c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4a49, gbc.sp());
        EXPECT(0x4f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 003A
        gbc.setState(0x2b29, 0x7bea, 0xe140, 0x9bc6, 0x2e38, 0x3df6, 0x0, 0x0);
        gbc.writeMem(0x2b29, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7bea, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 003B
        gbc.setState(0xbd84, 0x3f1a, 0x6450, 0x2d07, 0x7d40, 0x74a, 0x0, 0x1);
        gbc.writeMem(0xbd84, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3f1a, gbc.sp());
        EXPECT(0xbd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd84));
        EXPECT(0xb2, gbc.readMem(0xbd85));
        // CB B2 003C
        gbc.setState(0x4a17, 0x698b, 0x55d0, 0x4104, 0xc9f7, 0x13eb, 0x1, 0x0);
        gbc.writeMem(0x4a17, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x698b, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 003D
        gbc.setState(0xe8d5, 0x33fc, 0x3cc0, 0x25d4, 0x9225, 0x2e00, 0x0, 0x0);
        gbc.writeMem(0xe8d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0xe8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d5));
        EXPECT(0xb2, gbc.readMem(0xe8d6));
        // CB B2 003E
        gbc.setState(0xa01, 0x41f0, 0x7640, 0x51f8, 0xb7a9, 0xf4db, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0xa03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 003F
        gbc.setState(0x4d37, 0x710b, 0x2c90, 0xc991, 0xf68, 0x76e5, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x710b, gbc.sp());
        EXPECT(0x4d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0040
        gbc.setState(0x6c28, 0x32e7, 0xaa20, 0xd366, 0xad43, 0x5a28, 0x0, 0x0);
        gbc.writeMem(0x6c28, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x32e7, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0041
        gbc.setState(0x5515, 0xfb96, 0x4410, 0x8146, 0x870b, 0xf6fa, 0x0, 0x1);
        gbc.writeMem(0x5515, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0x5517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0042
        gbc.setState(0xaba1, 0x2e5c, 0x7f10, 0x6827, 0x2535, 0xf524, 0x1, 0x1);
        gbc.writeMem(0xaba1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0xaba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba1));
        EXPECT(0xb2, gbc.readMem(0xaba2));
        // CB B2 0043
        gbc.setState(0x986e, 0xff9b, 0x7e0, 0x5865, 0x4128, 0x8485, 0x0, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xff9b, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986e));
        EXPECT(0xb2, gbc.readMem(0x986f));
        // CB B2 0044
        gbc.setState(0xa7a7, 0xbb13, 0x6ec0, 0xc558, 0x94ce, 0xc6b6, 0x1, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0xa7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a7));
        EXPECT(0xb2, gbc.readMem(0xa7a8));
        // CB B2 0046
        gbc.setState(0x206d, 0x74e2, 0x21a0, 0x45dd, 0x7550, 0xb746, 0x1, 0x1);
        gbc.writeMem(0x206d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x74e2, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0047
        gbc.setState(0xbd5e, 0xb91c, 0x8cf0, 0xdbb6, 0x3dde, 0x48b6, 0x0, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb91c, gbc.sp());
        EXPECT(0xbd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5e));
        EXPECT(0xb2, gbc.readMem(0xbd5f));
        // CB B2 0048
        gbc.setState(0xe8de, 0xcbac, 0xfa40, 0xfdf5, 0x4fd1, 0x8199, 0x1, 0x0);
        gbc.writeMem(0xe8de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xe8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8de));
        EXPECT(0xb2, gbc.readMem(0xe8df));
        // CB B2 0049
        gbc.setState(0xb506, 0x77bf, 0xe1f0, 0x5a39, 0xa09f, 0x1ce, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb506));
        EXPECT(0xb2, gbc.readMem(0xb507));
        // CB B2 004A
        gbc.setState(0xba64, 0xfbeb, 0x7910, 0xc407, 0x4504, 0xc743, 0x1, 0x0);
        gbc.writeMem(0xba64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfbeb, gbc.sp());
        EXPECT(0xba66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba64));
        EXPECT(0xb2, gbc.readMem(0xba65));
        // CB B2 004B
        gbc.setState(0xe4cb, 0xdbd9, 0x2950, 0x9103, 0xa9e, 0x984f, 0x1, 0x1);
        gbc.writeMem(0xe4cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdbd9, gbc.sp());
        EXPECT(0xe4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cb));
        EXPECT(0xb2, gbc.readMem(0xe4cc));
        // CB B2 004D
        gbc.setState(0x28d4, 0x4ef2, 0xb6f0, 0x140b, 0xb262, 0x7623, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 004E
        gbc.setState(0x16a8, 0xf4ff, 0x3c40, 0x2515, 0x34df, 0xbdae, 0x1, 0x1);
        gbc.writeMem(0x16a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0x16aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 004F
        gbc.setState(0x448c, 0x37b3, 0x3e50, 0xdf23, 0xdb0a, 0x4ea1, 0x0, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0050
        gbc.setState(0x47ca, 0xde69, 0xd090, 0x2e1e, 0xb9a8, 0xee2, 0x0, 0x0);
        gbc.writeMem(0x47ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x47cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0052
        gbc.setState(0xd894, 0xd5d, 0x5350, 0x546a, 0xfe88, 0x3cf1, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd5d, gbc.sp());
        EXPECT(0xd896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd894));
        EXPECT(0xb2, gbc.readMem(0xd895));
        // CB B2 0053
        gbc.setState(0x9551, 0xa0c4, 0xdcd0, 0xf24f, 0xf0b3, 0x1908, 0x0, 0x1);
        gbc.writeMem(0x9551, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa0c4, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9551));
        EXPECT(0xb2, gbc.readMem(0x9552));
        // CB B2 0054
        gbc.setState(0x3ed1, 0xc524, 0x9d90, 0x8117, 0xa14a, 0xa811, 0x0, 0x0);
        gbc.writeMem(0x3ed1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc524, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0055
        gbc.setState(0x14a9, 0xc921, 0x3ca0, 0xc74e, 0x4b2f, 0xe6a2, 0x1, 0x0);
        gbc.writeMem(0x14a9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc921, gbc.sp());
        EXPECT(0x14ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0056
        gbc.setState(0x77e6, 0x76f8, 0xb730, 0xd316, 0xd2d8, 0x2d4d, 0x0, 0x1);
        gbc.writeMem(0x77e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0057
        gbc.setState(0xa623, 0x3151, 0x7f30, 0x7717, 0x5b45, 0xd34d, 0x1, 0x1);
        gbc.writeMem(0xa623, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3151, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa623));
        EXPECT(0xb2, gbc.readMem(0xa624));
        // CB B2 0058
        gbc.setState(0xd7c7, 0x8828, 0x8e20, 0x401f, 0xc5a, 0xa8c4, 0x0, 0x1);
        gbc.writeMem(0xd7c7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8828, gbc.sp());
        EXPECT(0xd7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c7));
        EXPECT(0xb2, gbc.readMem(0xd7c8));
        // CB B2 0059
        gbc.setState(0x535e, 0xb8b6, 0xbe20, 0xeb1e, 0xcb84, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0x535e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb8b6, gbc.sp());
        EXPECT(0x5360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 005A
        gbc.setState(0x2341, 0xd1e5, 0x6bf0, 0xaf95, 0x76a5, 0xa427, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 005B
        gbc.setState(0xb1c8, 0xbd4f, 0x9dc0, 0xb29f, 0x767e, 0x369b, 0x0, 0x0);
        gbc.writeMem(0xb1c8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0xb1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c8));
        EXPECT(0xb2, gbc.readMem(0xb1c9));
        // CB B2 005C
        gbc.setState(0x7245, 0x9cb9, 0x7d20, 0x362a, 0xe77c, 0x689e, 0x0, 0x1);
        gbc.writeMem(0x7245, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 005D
        gbc.setState(0x56ae, 0xfde2, 0xfa80, 0xf89, 0xeb21, 0x94f1, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 005E
        gbc.setState(0xec45, 0x25d9, 0x36d0, 0x7205, 0x2baf, 0x5a68, 0x1, 0x0);
        gbc.writeMem(0xec45, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x25d9, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec45));
        EXPECT(0xb2, gbc.readMem(0xec46));
        // CB B2 005F
        gbc.setState(0xce7, 0x58e9, 0x5c40, 0x8301, 0xaafc, 0x664f, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x58e9, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0060
        gbc.setState(0x58a9, 0x294c, 0x1160, 0xa6f8, 0xed42, 0x2f3c, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0061
        gbc.setState(0x4fcf, 0xefa2, 0xbe70, 0xc583, 0x653e, 0xd29f, 0x1, 0x0);
        gbc.writeMem(0x4fcf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0x4fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0062
        gbc.setState(0x9bff, 0x164f, 0xfd80, 0xcbfe, 0xcc4d, 0x2eab, 0x0, 0x0);
        gbc.writeMem(0x9bff, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x9c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bff));
        EXPECT(0xb2, gbc.readMem(0x9c00));
        // CB B2 0063
        gbc.setState(0x32eb, 0x1393, 0x98e0, 0x65b, 0xf728, 0xfe1c, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1393, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0064
        gbc.setState(0x62cd, 0x28d8, 0xfdb0, 0xa8c0, 0xdce4, 0xc09a, 0x0, 0x0);
        gbc.writeMem(0x62cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x28d8, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0065
        gbc.setState(0x5dca, 0x256d, 0x1b70, 0xa1c3, 0xe89b, 0xa1fb, 0x0, 0x0);
        gbc.writeMem(0x5dca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x256d, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0066
        gbc.setState(0xda70, 0x1880, 0x4e90, 0x7c40, 0x5d01, 0xa5f9, 0x1, 0x0);
        gbc.writeMem(0xda70, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0xda72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda70));
        EXPECT(0xb2, gbc.readMem(0xda71));
        // CB B2 0067
        gbc.setState(0x9040, 0x6d8, 0xa0b0, 0xa9ae, 0xf796, 0xde1e, 0x1, 0x1);
        gbc.writeMem(0x9040, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x9042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9040));
        EXPECT(0xb2, gbc.readMem(0x9041));
        // CB B2 0068
        gbc.setState(0x4cd4, 0xb9bf, 0x14b0, 0xac75, 0xcc9f, 0x3094, 0x1, 0x0);
        gbc.writeMem(0x4cd4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0x4cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0069
        gbc.setState(0x7f75, 0x6f65, 0x7990, 0xa242, 0x99c9, 0xbcf0, 0x0, 0x1);
        gbc.writeMem(0x7f75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 006A
        gbc.setState(0x2710, 0x2c3e, 0x5bb0, 0xb745, 0xa636, 0x343, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2c3e, gbc.sp());
        EXPECT(0x2712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 006B
        gbc.setState(0xdfd5, 0xea61, 0xf930, 0x145b, 0x265b, 0x6b32, 0x0, 0x0);
        gbc.writeMem(0xdfd5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xea61, gbc.sp());
        EXPECT(0xdfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd5));
        EXPECT(0xb2, gbc.readMem(0xdfd6));
        // CB B2 006C
        gbc.setState(0xdc40, 0xb90a, 0x2130, 0x6805, 0xd675, 0xc6bb, 0x0, 0x1);
        gbc.writeMem(0xdc40, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb90a, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc40));
        EXPECT(0xb2, gbc.readMem(0xdc41));
        // CB B2 006D
        gbc.setState(0xdd59, 0xd48f, 0xa5a0, 0x624b, 0xb685, 0x9c21, 0x0, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0xb2, gbc.readMem(0xdd5a));
        // CB B2 006E
        gbc.setState(0x9b23, 0x7df0, 0x370, 0xe2b5, 0x22a9, 0xac00, 0x1, 0x1);
        gbc.writeMem(0x9b23, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b23));
        EXPECT(0xb2, gbc.readMem(0x9b24));
        // CB B2 006F
        gbc.setState(0x9923, 0x226f, 0xb480, 0xbf3f, 0x5e6d, 0xde4f, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x9925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9923));
        EXPECT(0xb2, gbc.readMem(0x9924));
        // CB B2 0070
        gbc.setState(0xda8b, 0x474e, 0x77d0, 0x1af1, 0x2851, 0x7581, 0x1, 0x1);
        gbc.writeMem(0xda8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8b));
        EXPECT(0xb2, gbc.readMem(0xda8c));
        // CB B2 0071
        gbc.setState(0xef4a, 0xb7f1, 0x380, 0x40e0, 0xce4f, 0x20c7, 0x1, 0x0);
        gbc.writeMem(0xef4a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb7f1, gbc.sp());
        EXPECT(0xef4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4a));
        EXPECT(0xb2, gbc.readMem(0xef4b));
        // CB B2 0072
        gbc.setState(0x202a, 0x4fc0, 0x7920, 0xae39, 0x2b46, 0xf88, 0x1, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0073
        gbc.setState(0x8048, 0xf113, 0x5d60, 0x2450, 0x8460, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0x8048, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0x804a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8048));
        EXPECT(0xb2, gbc.readMem(0x8049));
        // CB B2 0074
        gbc.setState(0x2990, 0xbed4, 0x8650, 0x518e, 0x484b, 0x8c36, 0x1, 0x1);
        gbc.writeMem(0x2990, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0x2992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0075
        gbc.setState(0x9043, 0xb0d3, 0x2cf0, 0xc14e, 0x4627, 0x3f91, 0x1, 0x0);
        gbc.writeMem(0x9043, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9043));
        EXPECT(0xb2, gbc.readMem(0x9044));
        // CB B2 0076
        gbc.setState(0x3bfa, 0x18d7, 0x5f10, 0x8a87, 0xbe5a, 0xd08f, 0x1, 0x1);
        gbc.writeMem(0x3bfa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0x3bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0077
        gbc.setState(0x768c, 0xe5c2, 0x46b0, 0xb097, 0x8d99, 0x97b, 0x1, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe5c2, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0078
        gbc.setState(0xaa98, 0x7c6b, 0x3250, 0xd9f3, 0x10eb, 0x2189, 0x1, 0x0);
        gbc.writeMem(0xaa98, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0xaa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa98));
        EXPECT(0xb2, gbc.readMem(0xaa99));
        // CB B2 0079
        gbc.setState(0x5c6d, 0xe7bc, 0xb0b0, 0x2bbc, 0xe4c5, 0xedd6, 0x1, 0x0);
        gbc.writeMem(0x5c6d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0x5c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 007A
        gbc.setState(0x25fc, 0xecaa, 0x45f0, 0xed37, 0xe32c, 0xa28f, 0x0, 0x0);
        gbc.writeMem(0x25fc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xecaa, gbc.sp());
        EXPECT(0x25fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 007B
        gbc.setState(0x46b0, 0x1b1, 0xed60, 0x9e5b, 0xf1db, 0x8a31, 0x1, 0x0);
        gbc.writeMem(0x46b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1b1, gbc.sp());
        EXPECT(0x46b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 007C
        gbc.setState(0xdc8d, 0xe19d, 0xf920, 0xc6f8, 0x3152, 0x698e, 0x0, 0x0);
        gbc.writeMem(0xdc8d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe19d, gbc.sp());
        EXPECT(0xdc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8d));
        EXPECT(0xb2, gbc.readMem(0xdc8e));
        // CB B2 007D
        gbc.setState(0x30fb, 0x7fbf, 0xd9e0, 0x8b27, 0x569, 0x56f, 0x0, 0x0);
        gbc.writeMem(0x30fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0080
        gbc.setState(0x1879, 0x5117, 0xd0b0, 0x25f7, 0xe892, 0x7564, 0x0, 0x1);
        gbc.writeMem(0x1879, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5117, gbc.sp());
        EXPECT(0x187b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0081
        gbc.setState(0x7484, 0x6785, 0x2760, 0xfe79, 0xb2d0, 0x106d, 0x0, 0x0);
        gbc.writeMem(0x7484, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6785, gbc.sp());
        EXPECT(0x7486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0082
        gbc.setState(0x8f80, 0x6c70, 0x4d20, 0xa13b, 0x1765, 0xdb6d, 0x1, 0x0);
        gbc.writeMem(0x8f80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6c70, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f80));
        EXPECT(0xb2, gbc.readMem(0x8f81));
        // CB B2 0083
        gbc.setState(0xe9ed, 0xefad, 0x8820, 0xafb2, 0xdc57, 0xf37a, 0x0, 0x1);
        gbc.writeMem(0xe9ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xefad, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0xb2, gbc.readMem(0xe9ee));
        // CB B2 0084
        gbc.setState(0x3b9c, 0x73d3, 0x5990, 0x7332, 0xc87, 0xb99d, 0x0, 0x0);
        gbc.writeMem(0x3b9c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x73d3, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0085
        gbc.setState(0x76f1, 0x12d4, 0x8ee0, 0xa978, 0x90dc, 0xb0d4, 0x0, 0x0);
        gbc.writeMem(0x76f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x12d4, gbc.sp());
        EXPECT(0x76f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0087
        gbc.setState(0x9, 0xa5ec, 0x6240, 0xa543, 0x8448, 0x96cb, 0x0, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa5ec, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0088
        gbc.setState(0x68f0, 0x692a, 0x730, 0x8c07, 0x1e, 0xf7c0, 0x1, 0x1);
        gbc.writeMem(0x68f0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x692a, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0089
        gbc.setState(0xcf95, 0x9102, 0xa620, 0xf8d6, 0x6bb0, 0x75fd, 0x1, 0x1);
        gbc.writeMem(0xcf95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9102, gbc.sp());
        EXPECT(0xcf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf95));
        EXPECT(0xb2, gbc.readMem(0xcf96));
        // CB B2 008A
        gbc.setState(0x6736, 0x809d, 0x8b10, 0x7211, 0x2c54, 0x8ca4, 0x1, 0x1);
        gbc.writeMem(0x6736, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x809d, gbc.sp());
        EXPECT(0x6738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 008B
        gbc.setState(0x67d0, 0xc20f, 0x7ff0, 0x5dee, 0x7c8e, 0xabf4, 0x1, 0x0);
        gbc.writeMem(0x67d0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0x67d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 008C
        gbc.setState(0xecce, 0xa6f2, 0xcc60, 0x919e, 0x7aaf, 0xd6f9, 0x0, 0x1);
        gbc.writeMem(0xecce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa6f2, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecce));
        EXPECT(0xb2, gbc.readMem(0xeccf));
        // CB B2 008D
        gbc.setState(0xe166, 0x13db, 0xbd0, 0x9be2, 0x755, 0x9bea, 0x0, 0x0);
        gbc.writeMem(0xe166, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x13db, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe166));
        EXPECT(0xb2, gbc.readMem(0xe167));
        // CB B2 008F
        gbc.setState(0x419b, 0xff7a, 0x6380, 0x725, 0xae63, 0x9245, 0x1, 0x0);
        gbc.writeMem(0x419b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xff7a, gbc.sp());
        EXPECT(0x419d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0090
        gbc.setState(0x2e74, 0xbf72, 0x6dc0, 0x3fa4, 0x66ac, 0xe09c, 0x1, 0x0);
        gbc.writeMem(0x2e74, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbf72, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0091
        gbc.setState(0x2484, 0x77c1, 0x6020, 0x32d5, 0xeac0, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0x2484, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x77c1, gbc.sp());
        EXPECT(0x2486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0092
        gbc.setState(0x48dd, 0x644f, 0x4bc0, 0x7449, 0x905e, 0x6275, 0x0, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0093
        gbc.setState(0xc2d4, 0x7602, 0xce0, 0x2809, 0x99b1, 0x8e00, 0x0, 0x0);
        gbc.writeMem(0xc2d4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7602, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d4));
        EXPECT(0xb2, gbc.readMem(0xc2d5));
        // CB B2 0094
        gbc.setState(0x7d72, 0x1578, 0xc530, 0xe4dd, 0x1e9f, 0x2dda, 0x0, 0x1);
        gbc.writeMem(0x7d72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0095
        gbc.setState(0x8e85, 0xd842, 0x8c20, 0xa269, 0x1bef, 0x6c9b, 0x0, 0x0);
        gbc.writeMem(0x8e85, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd842, gbc.sp());
        EXPECT(0x8e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e85));
        EXPECT(0xb2, gbc.readMem(0x8e86));
        // CB B2 0096
        gbc.setState(0x557f, 0x268d, 0x3930, 0x9bb0, 0x9676, 0x2d7c, 0x0, 0x0);
        gbc.writeMem(0x557f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0098
        gbc.setState(0xcf09, 0x5403, 0xf70, 0x5b80, 0x8e44, 0xd393, 0x0, 0x0);
        gbc.writeMem(0xcf09, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5403, gbc.sp());
        EXPECT(0xcf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf09));
        EXPECT(0xb2, gbc.readMem(0xcf0a));
        // CB B2 0099
        gbc.setState(0xba14, 0xdb1a, 0x89f0, 0x9dea, 0xba, 0x8f53, 0x0, 0x1);
        gbc.writeMem(0xba14, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdb1a, gbc.sp());
        EXPECT(0xba16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba14));
        EXPECT(0xb2, gbc.readMem(0xba15));
        // CB B2 009A
        gbc.setState(0x92e6, 0x53d5, 0x5b0, 0x9b9a, 0x1a37, 0x2b3a, 0x1, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0xb2, gbc.readMem(0x92e7));
        // CB B2 009B
        gbc.setState(0x1998, 0xf821, 0xd280, 0xe2e8, 0xd235, 0x759, 0x0, 0x0);
        gbc.writeMem(0x1998, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf821, gbc.sp());
        EXPECT(0x199a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 009C
        gbc.setState(0x20f9, 0xe317, 0xec0, 0xa228, 0x8f89, 0x96c3, 0x0, 0x0);
        gbc.writeMem(0x20f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe317, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 009D
        gbc.setState(0xa986, 0xbec6, 0x3ce0, 0x5402, 0x4bbf, 0xdc20, 0x0, 0x0);
        gbc.writeMem(0xa986, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbec6, gbc.sp());
        EXPECT(0xa988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa986));
        EXPECT(0xb2, gbc.readMem(0xa987));
        // CB B2 009E
        gbc.setState(0x8630, 0xb419, 0xde80, 0x7acb, 0xf87f, 0x265f, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb419, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8630));
        EXPECT(0xb2, gbc.readMem(0x8631));
        // CB B2 009F
        gbc.setState(0xd05d, 0xc7c0, 0xfdc0, 0xff8, 0x93ad, 0xce9b, 0x1, 0x0);
        gbc.writeMem(0xd05d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05d));
        EXPECT(0xb2, gbc.readMem(0xd05e));
        // CB B2 00A0
        gbc.setState(0x49e3, 0x21c0, 0xac30, 0xe554, 0xbbc8, 0x5526, 0x0, 0x0);
        gbc.writeMem(0x49e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x21c0, gbc.sp());
        EXPECT(0x49e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00A1
        gbc.setState(0x3247, 0x92c3, 0xba40, 0xd13c, 0x40ec, 0x1c8, 0x0, 0x1);
        gbc.writeMem(0x3247, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00A3
        gbc.setState(0x182, 0x5a8f, 0xf630, 0xf2a7, 0x1754, 0x4327, 0x0, 0x0);
        gbc.writeMem(0x182, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00A4
        gbc.setState(0xb5d2, 0x72f7, 0xeb30, 0xaefb, 0x8378, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0xb5d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x72f7, gbc.sp());
        EXPECT(0xb5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d2));
        EXPECT(0xb2, gbc.readMem(0xb5d3));
        // CB B2 00A6
        gbc.setState(0x48eb, 0xd48e, 0x4030, 0xb1ea, 0xd7a2, 0x52f4, 0x1, 0x0);
        gbc.writeMem(0x48eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd48e, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00A8
        gbc.setState(0xdd9b, 0x2ccb, 0xc70, 0x5bbc, 0xda39, 0x1d46, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9b));
        EXPECT(0xb2, gbc.readMem(0xdd9c));
        // CB B2 00A9
        gbc.setState(0xa6bd, 0xc45c, 0x87e0, 0xa676, 0x715d, 0x59c0, 0x1, 0x0);
        gbc.writeMem(0xa6bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc45c, gbc.sp());
        EXPECT(0xa6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6bd));
        EXPECT(0xb2, gbc.readMem(0xa6be));
        // CB B2 00AA
        gbc.setState(0xd022, 0x3a3e, 0xc960, 0xb2e2, 0xb399, 0xc978, 0x0, 0x0);
        gbc.writeMem(0xd022, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3a3e, gbc.sp());
        EXPECT(0xd024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd022));
        EXPECT(0xb2, gbc.readMem(0xd023));
        // CB B2 00AB
        gbc.setState(0x96cd, 0x1527, 0x2ce0, 0x76aa, 0x3a39, 0x4d04, 0x0, 0x1);
        gbc.writeMem(0x96cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1527, gbc.sp());
        EXPECT(0x96cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cd));
        EXPECT(0xb2, gbc.readMem(0x96ce));
        // CB B2 00AC
        gbc.setState(0xb166, 0x509e, 0xdf80, 0x2af9, 0x151f, 0x6485, 0x0, 0x1);
        gbc.writeMem(0xb166, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0xb168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb166));
        EXPECT(0xb2, gbc.readMem(0xb167));
        // CB B2 00AD
        gbc.setState(0xab17, 0x7575, 0xf4d0, 0x83ec, 0xa49d, 0x3260, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7575, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0xb2, gbc.readMem(0xab18));
        // CB B2 00AE
        gbc.setState(0x3f3c, 0xf366, 0x36d0, 0x3ca, 0x1903, 0x4f99, 0x1, 0x1);
        gbc.writeMem(0x3f3c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf366, gbc.sp());
        EXPECT(0x3f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00AF
        gbc.setState(0x8aae, 0x347, 0x9f10, 0x8e15, 0xf4cf, 0xf21, 0x1, 0x0);
        gbc.writeMem(0x8aae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x347, gbc.sp());
        EXPECT(0x8ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aae));
        EXPECT(0xb2, gbc.readMem(0x8aaf));
        // CB B2 00B0
        gbc.setState(0x3ba4, 0xcac6, 0x7560, 0x8419, 0x7491, 0x68eb, 0x1, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcac6, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00B1
        gbc.setState(0xb776, 0xf2a6, 0xaf0, 0xbc93, 0x35a7, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0xb776, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf2a6, gbc.sp());
        EXPECT(0xb778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb776));
        EXPECT(0xb2, gbc.readMem(0xb777));
        // CB B2 00B2
        gbc.setState(0x19fb, 0x2c1a, 0x5050, 0x1031, 0xeb87, 0x26b3, 0x1, 0x1);
        gbc.writeMem(0x19fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2c1a, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00B3
        gbc.setState(0x9f1a, 0x8d66, 0xc9c0, 0xde20, 0xdd1b, 0xc6c9, 0x1, 0x1);
        gbc.writeMem(0x9f1a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8d66, gbc.sp());
        EXPECT(0x9f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1a));
        EXPECT(0xb2, gbc.readMem(0x9f1b));
        // CB B2 00B4
        gbc.setState(0xefd, 0x8178, 0xb9a0, 0xec17, 0xe085, 0x1e08, 0x1, 0x0);
        gbc.writeMem(0xefd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8178, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00B5
        gbc.setState(0xb6e2, 0xe3aa, 0xf630, 0x74b0, 0x7d4c, 0x49a5, 0x0, 0x0);
        gbc.writeMem(0xb6e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe3aa, gbc.sp());
        EXPECT(0xb6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e2));
        EXPECT(0xb2, gbc.readMem(0xb6e3));
        // CB B2 00B6
        gbc.setState(0xf5, 0xc55b, 0x76b0, 0x63ef, 0xc727, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0xf5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc55b, gbc.sp());
        EXPECT(0xf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00B7
        gbc.setState(0xec73, 0x6a17, 0xebe0, 0x5298, 0x8eaf, 0x5b25, 0x0, 0x1);
        gbc.writeMem(0xec73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0xec75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec73));
        EXPECT(0xb2, gbc.readMem(0xec74));
        // CB B2 00B8
        gbc.setState(0x6a05, 0xd9d8, 0xcdc0, 0xf829, 0x2c3, 0x9b80, 0x1, 0x1);
        gbc.writeMem(0x6a05, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0x6a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00B9
        gbc.setState(0xcf64, 0xc912, 0xe160, 0xdd1a, 0xd91f, 0xa6e3, 0x0, 0x1);
        gbc.writeMem(0xcf64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc912, gbc.sp());
        EXPECT(0xcf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf64));
        EXPECT(0xb2, gbc.readMem(0xcf65));
        // CB B2 00BA
        gbc.setState(0x55de, 0x6bef, 0xed40, 0x667e, 0xe5f3, 0xfb59, 0x1, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6bef, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00BB
        gbc.setState(0x742e, 0xf4a, 0x9c60, 0x606f, 0xd2a8, 0x1098, 0x1, 0x1);
        gbc.writeMem(0x742e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf4a, gbc.sp());
        EXPECT(0x7430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00BC
        gbc.setState(0xd4f9, 0x70c4, 0xf7a0, 0x74ed, 0x5fae, 0x64e4, 0x0, 0x0);
        gbc.writeMem(0xd4f9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f9));
        EXPECT(0xb2, gbc.readMem(0xd4fa));
        // CB B2 00BD
        gbc.setState(0x3ce0, 0xac8f, 0x7d20, 0x73b0, 0x771f, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xac8f, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00BE
        gbc.setState(0xad3d, 0x9617, 0x7380, 0xe3eb, 0x50f, 0x2af7, 0x0, 0x0);
        gbc.writeMem(0xad3d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3d));
        EXPECT(0xb2, gbc.readMem(0xad3e));
        // CB B2 00BF
        gbc.setState(0x2f30, 0xc4a2, 0x57a0, 0x1291, 0x980, 0x9d3c, 0x0, 0x0);
        gbc.writeMem(0x2f30, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc4a2, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00C0
        gbc.setState(0x2b8, 0xde38, 0x8c70, 0x3303, 0xb011, 0x45ad, 0x1, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00C1
        gbc.setState(0x70bb, 0xab67, 0x8a40, 0x939, 0x39be, 0xec06, 0x1, 0x1);
        gbc.writeMem(0x70bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xab67, gbc.sp());
        EXPECT(0x70bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00C2
        gbc.setState(0x2f13, 0x9cd7, 0x4480, 0x89f1, 0x394, 0xcb, 0x0, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00C3
        gbc.setState(0x4cb6, 0x2f39, 0x25f0, 0x307a, 0x1e55, 0x91db, 0x0, 0x0);
        gbc.writeMem(0x4cb6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00C4
        gbc.setState(0x58a4, 0x9ade, 0x7be0, 0x6158, 0x7e35, 0x427e, 0x1, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9ade, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00C5
        gbc.setState(0x73c3, 0x2329, 0x6ee0, 0xfdeb, 0x8192, 0xfafa, 0x1, 0x0);
        gbc.writeMem(0x73c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2329, gbc.sp());
        EXPECT(0x73c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00C6
        gbc.setState(0x10d9, 0x5599, 0xad10, 0xa21d, 0x1d9, 0x8fad, 0x0, 0x0);
        gbc.writeMem(0x10d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5599, gbc.sp());
        EXPECT(0x10db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00C7
        gbc.setState(0x9ea7, 0x8944, 0xf9c0, 0xb363, 0xbdda, 0x1454, 0x1, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8944, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0xb2, gbc.readMem(0x9ea8));
        // CB B2 00C8
        gbc.setState(0xed78, 0x77b3, 0xc700, 0x70aa, 0xc71c, 0xf3c5, 0x1, 0x1);
        gbc.writeMem(0xed78, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x77b3, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed78));
        EXPECT(0xb2, gbc.readMem(0xed79));
        // CB B2 00C9
        gbc.setState(0x9cb0, 0x32c2, 0x6220, 0x8b9e, 0x5cb8, 0xf982, 0x1, 0x0);
        gbc.writeMem(0x9cb0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x32c2, gbc.sp());
        EXPECT(0x9cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb0));
        EXPECT(0xb2, gbc.readMem(0x9cb1));
        // CB B2 00CA
        gbc.setState(0x76ef, 0x55bc, 0xa280, 0x7d96, 0xfbd9, 0x8b55, 0x0, 0x0);
        gbc.writeMem(0x76ef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00CB
        gbc.setState(0x7afe, 0xcd7, 0xfd10, 0x46ff, 0xe99e, 0x5953, 0x0, 0x1);
        gbc.writeMem(0x7afe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0x7b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00CC
        gbc.setState(0x61f4, 0x4a1f, 0x52b0, 0xd1cb, 0x1bb1, 0x21bf, 0x0, 0x0);
        gbc.writeMem(0x61f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00CD
        gbc.setState(0x6b9d, 0x1f7c, 0xe390, 0x2383, 0xd3bf, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1f7c, gbc.sp());
        EXPECT(0x6b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00CE
        gbc.setState(0x5c4e, 0xbdac, 0x2190, 0x4832, 0xef1f, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x5c4e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbdac, gbc.sp());
        EXPECT(0x5c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00CF
        gbc.setState(0xa3e4, 0xbbdc, 0x72c0, 0x90f3, 0xe2ff, 0xfd2d, 0x0, 0x0);
        gbc.writeMem(0xa3e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbbdc, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e4));
        EXPECT(0xb2, gbc.readMem(0xa3e5));
        // CB B2 00D0
        gbc.setState(0x7b71, 0xdd4d, 0x41a0, 0xabf5, 0xc9a9, 0xf233, 0x0, 0x1);
        gbc.writeMem(0x7b71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdd4d, gbc.sp());
        EXPECT(0x7b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00D1
        gbc.setState(0x2dce, 0x52ad, 0x8880, 0xce5d, 0x45e8, 0x8f54, 0x0, 0x1);
        gbc.writeMem(0x2dce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00D2
        gbc.setState(0x6a22, 0x5342, 0x8860, 0x2ae1, 0xd2a0, 0xdeec, 0x0, 0x1);
        gbc.writeMem(0x6a22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5342, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00D3
        gbc.setState(0x1eea, 0x5d4, 0xde10, 0xd20f, 0x5b77, 0x6d6d, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0x1eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00D4
        gbc.setState(0x253d, 0xa02c, 0xfac0, 0x5abe, 0x954a, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x253d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa02c, gbc.sp());
        EXPECT(0x253f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00D5
        gbc.setState(0x63da, 0xf27a, 0x69f0, 0x37c0, 0xd5a7, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x63da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00D6
        gbc.setState(0x9603, 0xb8cc, 0xe690, 0x6957, 0xb870, 0x93ba, 0x1, 0x0);
        gbc.writeMem(0x9603, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb8cc, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0xb2, gbc.readMem(0x9604));
        // CB B2 00D7
        gbc.setState(0xc95d, 0x83ef, 0x4970, 0x4e81, 0x8bd3, 0x4bb1, 0x0, 0x0);
        gbc.writeMem(0xc95d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x83ef, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95d));
        EXPECT(0xb2, gbc.readMem(0xc95e));
        // CB B2 00D8
        gbc.setState(0x9200, 0xd375, 0x9940, 0xfa00, 0x2837, 0x5f97, 0x1, 0x0);
        gbc.writeMem(0x9200, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd375, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9200));
        EXPECT(0xb2, gbc.readMem(0x9201));
        // CB B2 00D9
        gbc.setState(0x7786, 0xadf0, 0x320, 0x2400, 0xb05a, 0xe1e2, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xadf0, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00DA
        gbc.setState(0x62df, 0xbe1f, 0x73a0, 0x2000, 0x9df9, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x62df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00DC
        gbc.setState(0xb5ee, 0x605e, 0xa860, 0xa59b, 0x1f0d, 0x9f4c, 0x1, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x605e, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ee));
        EXPECT(0xb2, gbc.readMem(0xb5ef));
        // CB B2 00DD
        gbc.setState(0xc51d, 0xe827, 0xa870, 0x9052, 0x354, 0xb2fd, 0x1, 0x0);
        gbc.writeMem(0xc51d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0xc51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51d));
        EXPECT(0xb2, gbc.readMem(0xc51e));
        // CB B2 00DE
        gbc.setState(0xd72, 0xbba9, 0xac0, 0x5942, 0x9053, 0x981a, 0x0, 0x1);
        gbc.writeMem(0xd72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00DF
        gbc.setState(0x1b62, 0x794b, 0xda00, 0x5e35, 0x3bfd, 0x6f48, 0x1, 0x1);
        gbc.writeMem(0x1b62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00E0
        gbc.setState(0xd72e, 0x5937, 0x2ce0, 0x4e89, 0xa478, 0xc686, 0x1, 0x0);
        gbc.writeMem(0xd72e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5937, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72e));
        EXPECT(0xb2, gbc.readMem(0xd72f));
        // CB B2 00E1
        gbc.setState(0xad30, 0x82ee, 0xb650, 0x6284, 0xc3ab, 0xcfda, 0x0, 0x1);
        gbc.writeMem(0xad30, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x82ee, gbc.sp());
        EXPECT(0xad32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad30));
        EXPECT(0xb2, gbc.readMem(0xad31));
        // CB B2 00E2
        gbc.setState(0xc2f3, 0x5c4f, 0xc460, 0x9c4c, 0xde33, 0xef56, 0x0, 0x1);
        gbc.writeMem(0xc2f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        EXPECT(0xb2, gbc.readMem(0xc2f4));
        // CB B2 00E3
        gbc.setState(0x8df9, 0xdc25, 0x4ba0, 0x4de9, 0x9d38, 0x4f9e, 0x0, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc25, gbc.sp());
        EXPECT(0x8dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df9));
        EXPECT(0xb2, gbc.readMem(0x8dfa));
        // CB B2 00E4
        gbc.setState(0xbfda, 0x9df1, 0xd1e0, 0x9f6a, 0x7719, 0x330f, 0x0, 0x0);
        gbc.writeMem(0xbfda, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9df1, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfda));
        EXPECT(0xb2, gbc.readMem(0xbfdb));
        // CB B2 00E5
        gbc.setState(0x30e6, 0xb699, 0x8160, 0x4459, 0x9c6b, 0x383, 0x0, 0x1);
        gbc.writeMem(0x30e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00E6
        gbc.setState(0x5a64, 0xa9cd, 0x8970, 0x8aef, 0xc02c, 0xf9ef, 0x1, 0x1);
        gbc.writeMem(0x5a64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa9cd, gbc.sp());
        EXPECT(0x5a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00E7
        gbc.setState(0x918, 0x3bb3, 0x5730, 0x4186, 0x8ba5, 0x899a, 0x1, 0x0);
        gbc.writeMem(0x918, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0x91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00E8
        gbc.setState(0x9849, 0x6020, 0xe460, 0xc087, 0xd5cc, 0x77a5, 0x1, 0x1);
        gbc.writeMem(0x9849, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6020, gbc.sp());
        EXPECT(0x984b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9849));
        EXPECT(0xb2, gbc.readMem(0x984a));
        // CB B2 00E9
        gbc.setState(0xee57, 0x753d, 0x15b0, 0x5901, 0x6ecc, 0xe2a0, 0x1, 0x1);
        gbc.writeMem(0xee57, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x753d, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee57));
        EXPECT(0xb2, gbc.readMem(0xee58));
        // CB B2 00EA
        gbc.setState(0xd590, 0x59e1, 0xc2f0, 0x8492, 0x1e50, 0x4e0f, 0x0, 0x0);
        gbc.writeMem(0xd590, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd590));
        EXPECT(0xb2, gbc.readMem(0xd591));
        // CB B2 00EC
        gbc.setState(0x7c12, 0x8b4c, 0x9320, 0x8adb, 0xdcee, 0x5ac9, 0x0, 0x1);
        gbc.writeMem(0x7c12, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0x7c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00ED
        gbc.setState(0xbad2, 0x5006, 0x5480, 0xa684, 0x5555, 0x5a84, 0x0, 0x1);
        gbc.writeMem(0xbad2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0xbad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad2));
        EXPECT(0xb2, gbc.readMem(0xbad3));
        // CB B2 00EE
        gbc.setState(0xbc2c, 0x73c3, 0xdb50, 0xb8c7, 0x206c, 0x804, 0x1, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x73c3, gbc.sp());
        EXPECT(0xbc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2c));
        EXPECT(0xb2, gbc.readMem(0xbc2d));
        // CB B2 00EF
        gbc.setState(0xbbbc, 0x14b8, 0x5860, 0x5225, 0xc27c, 0x595, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x14b8, gbc.sp());
        EXPECT(0xbbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbc));
        EXPECT(0xb2, gbc.readMem(0xbbbd));
        // CB B2 00F0
        gbc.setState(0xb42e, 0x183a, 0x2960, 0xae02, 0x4677, 0x8152, 0x0, 0x1);
        gbc.writeMem(0xb42e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x183a, gbc.sp());
        EXPECT(0xb430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42e));
        EXPECT(0xb2, gbc.readMem(0xb42f));
        // CB B2 00F1
        gbc.setState(0xcca5, 0xd575, 0x9e70, 0xe3ad, 0x38c0, 0x3d60, 0x0, 0x0);
        gbc.writeMem(0xcca5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0xcca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca5));
        EXPECT(0xb2, gbc.readMem(0xcca6));
        // CB B2 00F2
        gbc.setState(0x3986, 0xd71f, 0x53c0, 0x21c2, 0x3bf7, 0xa9c8, 0x0, 0x1);
        gbc.writeMem(0x3986, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd71f, gbc.sp());
        EXPECT(0x3988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00F3
        gbc.setState(0x62a1, 0x307, 0x7810, 0xb1c3, 0x878a, 0x1b7c, 0x1, 0x1);
        gbc.writeMem(0x62a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x307, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00F4
        gbc.setState(0xbfac, 0xc451, 0x89e0, 0x7b71, 0x1664, 0xee3a, 0x1, 0x1);
        gbc.writeMem(0xbfac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0xbfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfac));
        EXPECT(0xb2, gbc.readMem(0xbfad));
        // CB B2 00F5
        gbc.setState(0x8162, 0x6f2a, 0xce90, 0x4618, 0x5af2, 0x5e8b, 0x1, 0x0);
        gbc.writeMem(0x8162, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6f2a, gbc.sp());
        EXPECT(0x8164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8162));
        EXPECT(0xb2, gbc.readMem(0x8163));
        // CB B2 00F6
        gbc.setState(0x8445, 0x4868, 0xa500, 0xb1c9, 0x701, 0x228d, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4868, gbc.sp());
        EXPECT(0x8447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8445));
        EXPECT(0xb2, gbc.readMem(0x8446));
        // CB B2 00F7
        gbc.setState(0x8992, 0xe158, 0xfed0, 0x8db0, 0xce2, 0x7fbc, 0x1, 0x1);
        gbc.writeMem(0x8992, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x8994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8992));
        EXPECT(0xb2, gbc.readMem(0x8993));
        // CB B2 00F8
        gbc.setState(0xcc95, 0x7823, 0xbc90, 0xfa22, 0xa699, 0xb284, 0x0, 0x1);
        gbc.writeMem(0xcc95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7823, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc95));
        EXPECT(0xb2, gbc.readMem(0xcc96));
        // CB B2 00F9
        gbc.setState(0xc9ba, 0x7973, 0xd0f0, 0xb9e7, 0x2d7e, 0xebfc, 0x1, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ba));
        EXPECT(0xb2, gbc.readMem(0xc9bb));
        // CB B2 00FA
        gbc.setState(0xa975, 0x6132, 0x3ce0, 0x31c6, 0xd36f, 0xc4d8, 0x1, 0x1);
        gbc.writeMem(0xa975, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6132, gbc.sp());
        EXPECT(0xa977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa975));
        EXPECT(0xb2, gbc.readMem(0xa976));
        // CB B2 00FB
        gbc.setState(0xe85a, 0xe594, 0x67f0, 0xa6c3, 0x299d, 0x47df, 0x1, 0x1);
        gbc.writeMem(0xe85a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0xe85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85a));
        EXPECT(0xb2, gbc.readMem(0xe85b));
        // CB B2 00FC
        gbc.setState(0x5ef0, 0x7582, 0xf7b0, 0xd531, 0x19bd, 0x2bc, 0x0, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 00FD
        gbc.setState(0x3b36, 0xd201, 0x8fc0, 0x45da, 0xa065, 0x5a4f, 0x0, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x3b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 00FE
        gbc.setState(0xd868, 0x6cc1, 0x2ba0, 0x4f22, 0x179d, 0x2fc, 0x0, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd868));
        EXPECT(0xb2, gbc.readMem(0xd869));
        // CB B2 00FF
        gbc.setState(0x3e66, 0x6f40, 0x3cd0, 0xd772, 0xdea7, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x3e66, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6f40, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0100
        gbc.setState(0xb2ce, 0x27fc, 0x62c0, 0xc8fe, 0x8b6e, 0x9ffc, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xb2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ce));
        EXPECT(0xb2, gbc.readMem(0xb2cf));
        // CB B2 0101
        gbc.setState(0x778c, 0x1458, 0xc8a0, 0xc62c, 0xd3c8, 0x5002, 0x1, 0x0);
        gbc.writeMem(0x778c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0103
        gbc.setState(0x9990, 0xae6c, 0x6910, 0x9075, 0x523f, 0x86d5, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xae6c, gbc.sp());
        EXPECT(0x9992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9990));
        EXPECT(0xb2, gbc.readMem(0x9991));
        // CB B2 0105
        gbc.setState(0x3a86, 0x1f5c, 0x5d70, 0xf97b, 0xfffa, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x3a86, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0x3a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0106
        gbc.setState(0xcd9, 0x5f43, 0x8eb0, 0x4b1c, 0x29e0, 0x1af1, 0x1, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5f43, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0107
        gbc.setState(0xe1cd, 0xcec6, 0xf1c0, 0xe2d0, 0x6bfb, 0x7aed, 0x1, 0x1);
        gbc.writeMem(0xe1cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcec6, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cd));
        EXPECT(0xb2, gbc.readMem(0xe1ce));
        // CB B2 0108
        gbc.setState(0xe984, 0xc39f, 0x5d10, 0xc2d, 0x6eca, 0xedb4, 0x1, 0x0);
        gbc.writeMem(0xe984, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe984));
        EXPECT(0xb2, gbc.readMem(0xe985));
        // CB B2 0109
        gbc.setState(0x5c12, 0xfe43, 0xf380, 0x6fa7, 0x2cd8, 0xdfa7, 0x1, 0x1);
        gbc.writeMem(0x5c12, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 010A
        gbc.setState(0x9269, 0x4c40, 0x5100, 0x3fb4, 0x1e16, 0xa58c, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0x926b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9269));
        EXPECT(0xb2, gbc.readMem(0x926a));
        // CB B2 010B
        gbc.setState(0x49f4, 0x89f1, 0x5230, 0x6ceb, 0x2740, 0x68b1, 0x0, 0x0);
        gbc.writeMem(0x49f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x89f1, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 010C
        gbc.setState(0xdff8, 0xa14b, 0x96b0, 0x9d2e, 0xde7a, 0xec91, 0x1, 0x0);
        gbc.writeMem(0xdff8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff8));
        EXPECT(0xb2, gbc.readMem(0xdff9));
        // CB B2 010D
        gbc.setState(0x9225, 0xc87b, 0xd3d0, 0x37e, 0x6393, 0xe8df, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc87b, gbc.sp());
        EXPECT(0x9227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9225));
        EXPECT(0xb2, gbc.readMem(0x9226));
        // CB B2 010E
        gbc.setState(0x6e2, 0xbfb6, 0x5050, 0xc023, 0x85cd, 0xaf5e, 0x1, 0x0);
        gbc.writeMem(0x6e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0x6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 010F
        gbc.setState(0xe1d, 0xecf, 0xeac0, 0xd93b, 0xb5d4, 0x8f57, 0x0, 0x1);
        gbc.writeMem(0xe1d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0110
        gbc.setState(0x3df2, 0x57f8, 0x63e0, 0x4e75, 0xa3dc, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0x3df2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x57f8, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0111
        gbc.setState(0x6c7b, 0xe7aa, 0x9ba0, 0x9c73, 0x393e, 0x4cc4, 0x1, 0x1);
        gbc.writeMem(0x6c7b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe7aa, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0112
        gbc.setState(0x58b9, 0x2b16, 0x8820, 0x731e, 0xd2f0, 0x8c41, 0x1, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0113
        gbc.setState(0x3c72, 0x1893, 0x1110, 0xfdb8, 0x1469, 0x1ee5, 0x1, 0x1);
        gbc.writeMem(0x3c72, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x3c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0114
        gbc.setState(0xc175, 0xd591, 0x2800, 0x3454, 0x8436, 0x8d81, 0x0, 0x1);
        gbc.writeMem(0xc175, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd591, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc175));
        EXPECT(0xb2, gbc.readMem(0xc176));
        // CB B2 0115
        gbc.setState(0x600b, 0xfbf9, 0xb000, 0xf598, 0x7d0, 0x566f, 0x1, 0x0);
        gbc.writeMem(0x600b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfbf9, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0116
        gbc.setState(0x5b59, 0xe1a2, 0xc0, 0x39bf, 0x5fbb, 0xeaad, 0x1, 0x0);
        gbc.writeMem(0x5b59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0x5b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0117
        gbc.setState(0x66bf, 0x22d3, 0x2820, 0xc215, 0x4df2, 0xb110, 0x0, 0x1);
        gbc.writeMem(0x66bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x22d3, gbc.sp());
        EXPECT(0x66c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0118
        gbc.setState(0xccae, 0xb948, 0x2830, 0xcbb, 0x24c4, 0x3c94, 0x1, 0x1);
        gbc.writeMem(0xccae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0xccb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccae));
        EXPECT(0xb2, gbc.readMem(0xccaf));
        // CB B2 0119
        gbc.setState(0x440d, 0xf163, 0xa480, 0x27b8, 0x4f59, 0xde1a, 0x1, 0x1);
        gbc.writeMem(0x440d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0x440f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 011A
        gbc.setState(0xdea6, 0xbcdd, 0x8520, 0xfcf2, 0x57fa, 0x5cf1, 0x0, 0x0);
        gbc.writeMem(0xdea6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xdea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea6));
        EXPECT(0xb2, gbc.readMem(0xdea7));
        // CB B2 011B
        gbc.setState(0x4f69, 0xefc5, 0x5bd0, 0xbf46, 0x6b3c, 0xeeaf, 0x0, 0x1);
        gbc.writeMem(0x4f69, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xefc5, gbc.sp());
        EXPECT(0x4f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 011C
        gbc.setState(0xa394, 0xf05f, 0xe640, 0x4b90, 0x5e39, 0xad3c, 0x0, 0x0);
        gbc.writeMem(0xa394, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0xa396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa394));
        EXPECT(0xb2, gbc.readMem(0xa395));
        // CB B2 011D
        gbc.setState(0xaf90, 0x3089, 0x8270, 0x5fa6, 0xd6c8, 0xbbbc, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3089, gbc.sp());
        EXPECT(0xaf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf90));
        EXPECT(0xb2, gbc.readMem(0xaf91));
        // CB B2 011E
        gbc.setState(0x4c21, 0xf6e1, 0x2f90, 0x5be4, 0xc79d, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0x4c21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 011F
        gbc.setState(0x3f16, 0x3a23, 0x66b0, 0x41a3, 0x7c2c, 0xa583, 0x1, 0x1);
        gbc.writeMem(0x3f16, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0x3f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0120
        gbc.setState(0x900f, 0xf21e, 0x8040, 0x5877, 0x21c6, 0x6155, 0x1, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900f));
        EXPECT(0xb2, gbc.readMem(0x9010));
        // CB B2 0121
        gbc.setState(0xe4ce, 0x6d4f, 0x7fe0, 0x90a, 0x2592, 0x165e, 0x0, 0x1);
        gbc.writeMem(0xe4ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0xe4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ce));
        EXPECT(0xb2, gbc.readMem(0xe4cf));
        // CB B2 0122
        gbc.setState(0x817b, 0x9973, 0x9eb0, 0xea1b, 0x6d55, 0x381a, 0x1, 0x1);
        gbc.writeMem(0x817b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9973, gbc.sp());
        EXPECT(0x817d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817b));
        EXPECT(0xb2, gbc.readMem(0x817c));
        // CB B2 0123
        gbc.setState(0x4dea, 0xfeca, 0x2420, 0x22af, 0xc255, 0xf60c, 0x0, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfeca, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0124
        gbc.setState(0xd4d7, 0xf9a2, 0x38f0, 0x633a, 0xaa23, 0x8cd0, 0x0, 0x1);
        gbc.writeMem(0xd4d7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf9a2, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d7));
        EXPECT(0xb2, gbc.readMem(0xd4d8));
        // CB B2 0125
        gbc.setState(0x9fce, 0xc722, 0xb450, 0xe1b8, 0x801e, 0xffec, 0x0, 0x0);
        gbc.writeMem(0x9fce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fce));
        EXPECT(0xb2, gbc.readMem(0x9fcf));
        // CB B2 0126
        gbc.setState(0xd6f5, 0xba10, 0xcd40, 0x6734, 0xddaa, 0x92f4, 0x1, 0x1);
        gbc.writeMem(0xd6f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xba10, gbc.sp());
        EXPECT(0xd6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f5));
        EXPECT(0xb2, gbc.readMem(0xd6f6));
        // CB B2 0127
        gbc.setState(0x7feb, 0x45e1, 0x6320, 0x8f10, 0x4964, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x45e1, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0128
        gbc.setState(0x656b, 0x2099, 0xeb50, 0x29f4, 0x708f, 0x8c03, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2099, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0129
        gbc.setState(0x4c10, 0x500a, 0xa9d0, 0x368e, 0x41ee, 0xa584, 0x0, 0x1);
        gbc.writeMem(0x4c10, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x500a, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 012A
        gbc.setState(0x6089, 0xc99c, 0x1100, 0xaa10, 0x7005, 0x68b4, 0x0, 0x1);
        gbc.writeMem(0x6089, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc99c, gbc.sp());
        EXPECT(0x608b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 012B
        gbc.setState(0xbff3, 0x74e4, 0x2250, 0x395a, 0x44f8, 0x6c19, 0x1, 0x0);
        gbc.writeMem(0xbff3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x74e4, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff3));
        EXPECT(0xb2, gbc.readMem(0xbff4));
        // CB B2 012C
        gbc.setState(0xe79c, 0x58b9, 0x6610, 0x9dd1, 0xe4be, 0x34c2, 0x0, 0x1);
        gbc.writeMem(0xe79c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x58b9, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79c));
        EXPECT(0xb2, gbc.readMem(0xe79d));
        // CB B2 012D
        gbc.setState(0xd0b0, 0xb63c, 0xb940, 0xb6c8, 0xf750, 0x964b, 0x1, 0x1);
        gbc.writeMem(0xd0b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b0));
        EXPECT(0xb2, gbc.readMem(0xd0b1));
        // CB B2 012E
        gbc.setState(0xdebf, 0xefd2, 0x3020, 0x97b9, 0xcf46, 0x3a96, 0x1, 0x0);
        gbc.writeMem(0xdebf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0xdec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebf));
        EXPECT(0xb2, gbc.readMem(0xdec0));
        // CB B2 012F
        gbc.setState(0x8064, 0xb2b8, 0x8710, 0x1ac0, 0x543c, 0xc072, 0x1, 0x1);
        gbc.writeMem(0x8064, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb2b8, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8064));
        EXPECT(0xb2, gbc.readMem(0x8065));
        // CB B2 0130
        gbc.setState(0x4127, 0xeaa7, 0x9570, 0x8ff4, 0xc144, 0x80d0, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0x4129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0131
        gbc.setState(0x94f4, 0x3e30, 0xf900, 0x2ef5, 0x9195, 0x5b2c, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3e30, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0xb2, gbc.readMem(0x94f5));
        // CB B2 0132
        gbc.setState(0xd3da, 0x5a3, 0x9ad0, 0xe2d5, 0xa4ce, 0x889e, 0x0, 0x0);
        gbc.writeMem(0xd3da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5a3, gbc.sp());
        EXPECT(0xd3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3da));
        EXPECT(0xb2, gbc.readMem(0xd3db));
        // CB B2 0133
        gbc.setState(0xd7a3, 0xd926, 0x9790, 0x96fb, 0x794b, 0xc68b, 0x0, 0x0);
        gbc.writeMem(0xd7a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd926, gbc.sp());
        EXPECT(0xd7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a3));
        EXPECT(0xb2, gbc.readMem(0xd7a4));
        // CB B2 0134
        gbc.setState(0xde53, 0xf32d, 0x9a00, 0x8f65, 0xc849, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0xde53, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf32d, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde53));
        EXPECT(0xb2, gbc.readMem(0xde54));
        // CB B2 0135
        gbc.setState(0xedf7, 0x90c3, 0x8130, 0x5106, 0xa6e7, 0xc1cd, 0x0, 0x1);
        gbc.writeMem(0xedf7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x90c3, gbc.sp());
        EXPECT(0xedf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf7));
        EXPECT(0xb2, gbc.readMem(0xedf8));
        // CB B2 0136
        gbc.setState(0xb41a, 0xf699, 0xca70, 0xcec0, 0x785a, 0x7715, 0x0, 0x1);
        gbc.writeMem(0xb41a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0xb41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41a));
        EXPECT(0xb2, gbc.readMem(0xb41b));
        // CB B2 0137
        gbc.setState(0xc94c, 0xd24f, 0x9430, 0x4bf2, 0x6b31, 0xb608, 0x1, 0x1);
        gbc.writeMem(0xc94c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd24f, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94c));
        EXPECT(0xb2, gbc.readMem(0xc94d));
        // CB B2 0138
        gbc.setState(0x7a8e, 0xd4fd, 0x7720, 0xafd9, 0x61d6, 0xecad, 0x0, 0x1);
        gbc.writeMem(0x7a8e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0x7a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0139
        gbc.setState(0xb325, 0x9adb, 0x9b30, 0x744, 0x1c8d, 0xec6, 0x1, 0x1);
        gbc.writeMem(0xb325, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9adb, gbc.sp());
        EXPECT(0xb327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb325));
        EXPECT(0xb2, gbc.readMem(0xb326));
        // CB B2 013A
        gbc.setState(0x63c3, 0xe9e0, 0xeda0, 0xbb7d, 0x2463, 0x2c73, 0x1, 0x0);
        gbc.writeMem(0x63c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe9e0, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 013B
        gbc.setState(0x985f, 0x21e0, 0xae90, 0x9e5a, 0xbf53, 0x8e59, 0x1, 0x1);
        gbc.writeMem(0x985f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x21e0, gbc.sp());
        EXPECT(0x9861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985f));
        EXPECT(0xb2, gbc.readMem(0x9860));
        // CB B2 013D
        gbc.setState(0x13c3, 0xa4b7, 0x5b40, 0xb398, 0x4dc8, 0x981, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0x13c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 013E
        gbc.setState(0x64a6, 0x5937, 0x4840, 0x5f37, 0x75a6, 0x182f, 0x0, 0x0);
        gbc.writeMem(0x64a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5937, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 013F
        gbc.setState(0x79c2, 0x3bed, 0xcc20, 0x75ca, 0xe325, 0x176a, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0140
        gbc.setState(0x134b, 0xbd36, 0xfee0, 0x49dd, 0xfa48, 0xa7ad, 0x1, 0x0);
        gbc.writeMem(0x134b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0141
        gbc.setState(0x3f59, 0x7649, 0xae50, 0xea28, 0x14aa, 0x583d, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7649, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0142
        gbc.setState(0xdf41, 0x4a90, 0xe410, 0xdc5a, 0xfa04, 0x31db, 0x1, 0x0);
        gbc.writeMem(0xdf41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0xdf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf41));
        EXPECT(0xb2, gbc.readMem(0xdf42));
        // CB B2 0143
        gbc.setState(0x5098, 0xf21b, 0xf9c0, 0xda9, 0x8b24, 0xf1fa, 0x1, 0x1);
        gbc.writeMem(0x5098, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0144
        gbc.setState(0xbeeb, 0xea58, 0x63c0, 0xba5b, 0x1540, 0xdeeb, 0x1, 0x1);
        gbc.writeMem(0xbeeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0xbeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeeb));
        EXPECT(0xb2, gbc.readMem(0xbeec));
        // CB B2 0145
        gbc.setState(0x3433, 0xc49b, 0x4650, 0xb3df, 0xbefa, 0x7a10, 0x0, 0x1);
        gbc.writeMem(0x3433, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0x3435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0146
        gbc.setState(0x937, 0x61, 0xa880, 0xb767, 0x5d13, 0xe7a8, 0x0, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x61, gbc.sp());
        EXPECT(0x939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0147
        gbc.setState(0xb6c4, 0xe44e, 0x59c0, 0x5d66, 0x23da, 0xccad, 0x0, 0x1);
        gbc.writeMem(0xb6c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c4));
        EXPECT(0xb2, gbc.readMem(0xb6c5));
        // CB B2 0148
        gbc.setState(0x5d65, 0xfe87, 0x9550, 0xfba6, 0x9c8b, 0xdccf, 0x1, 0x0);
        gbc.writeMem(0x5d65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfe87, gbc.sp());
        EXPECT(0x5d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0149
        gbc.setState(0x37da, 0xf0e0, 0x7dd0, 0xed26, 0x9bed, 0x1927, 0x0, 0x1);
        gbc.writeMem(0x37da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 014A
        gbc.setState(0x9b08, 0xab2d, 0xebe0, 0xde1, 0x8487, 0x3d09, 0x0, 0x1);
        gbc.writeMem(0x9b08, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xab2d, gbc.sp());
        EXPECT(0x9b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b08));
        EXPECT(0xb2, gbc.readMem(0x9b09));
        // CB B2 014B
        gbc.setState(0x803d, 0x98b4, 0x4130, 0xcf46, 0xc70e, 0xc79c, 0x0, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803d));
        EXPECT(0xb2, gbc.readMem(0x803e));
        // CB B2 014C
        gbc.setState(0x3209, 0xf93, 0xee90, 0x9f3b, 0x7fa0, 0x414b, 0x0, 0x0);
        gbc.writeMem(0x3209, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf93, gbc.sp());
        EXPECT(0x320b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 014D
        gbc.setState(0xe61a, 0x8316, 0xea20, 0x1f63, 0xa74, 0xf77d, 0x0, 0x0);
        gbc.writeMem(0xe61a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0xb2, gbc.readMem(0xe61b));
        // CB B2 014F
        gbc.setState(0x3067, 0xa78e, 0xd1b0, 0x4d48, 0xd9a9, 0x57ad, 0x1, 0x1);
        gbc.writeMem(0x3067, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa78e, gbc.sp());
        EXPECT(0x3069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0150
        gbc.setState(0xcaa7, 0x3416, 0x7c20, 0x52ac, 0x4f56, 0x338b, 0x1, 0x1);
        gbc.writeMem(0xcaa7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3416, gbc.sp());
        EXPECT(0xcaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa7));
        EXPECT(0xb2, gbc.readMem(0xcaa8));
        // CB B2 0151
        gbc.setState(0x161c, 0x3253, 0x7e80, 0x7e66, 0x7a17, 0xd82b, 0x0, 0x1);
        gbc.writeMem(0x161c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x161e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0152
        gbc.setState(0x3517, 0xf05c, 0x47a0, 0x3746, 0x89bd, 0xb192, 0x0, 0x1);
        gbc.writeMem(0x3517, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf05c, gbc.sp());
        EXPECT(0x3519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0153
        gbc.setState(0x998b, 0x92de, 0x7090, 0xc22e, 0x5a1e, 0x8955, 0x0, 0x1);
        gbc.writeMem(0x998b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998b));
        EXPECT(0xb2, gbc.readMem(0x998c));
        // CB B2 0154
        gbc.setState(0x2b47, 0x59b4, 0x57d0, 0xe34b, 0x2d55, 0xcbec, 0x1, 0x1);
        gbc.writeMem(0x2b47, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x59b4, gbc.sp());
        EXPECT(0x2b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0155
        gbc.setState(0xc950, 0xce0b, 0x2580, 0x38db, 0x7, 0xb68d, 0x0, 0x0);
        gbc.writeMem(0xc950, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0xc952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc950));
        EXPECT(0xb2, gbc.readMem(0xc951));
        // CB B2 0156
        gbc.setState(0x485a, 0x73c0, 0xb9b0, 0x461, 0xa46f, 0xd996, 0x1, 0x1);
        gbc.writeMem(0x485a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0x485c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0157
        gbc.setState(0x7125, 0x7f41, 0xa6b0, 0x6a3b, 0x9b85, 0xe6d7, 0x1, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7f41, gbc.sp());
        EXPECT(0x7127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0158
        gbc.setState(0xb330, 0xb207, 0x4390, 0x29d2, 0xf62a, 0xd7c7, 0x0, 0x0);
        gbc.writeMem(0xb330, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0xb332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb330));
        EXPECT(0xb2, gbc.readMem(0xb331));
        // CB B2 0159
        gbc.setState(0x21e6, 0xb213, 0x6530, 0xbdfe, 0x44e1, 0x4ce4, 0x0, 0x0);
        gbc.writeMem(0x21e6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x21e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 015A
        gbc.setState(0x607e, 0xf102, 0x3d80, 0xa1d0, 0x525c, 0x814e, 0x1, 0x1);
        gbc.writeMem(0x607e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf102, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 015B
        gbc.setState(0xc918, 0x511f, 0xf6d0, 0x23fe, 0x883a, 0x9302, 0x0, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x511f, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0xb2, gbc.readMem(0xc919));
        // CB B2 015C
        gbc.setState(0x4e63, 0x9ca1, 0x6e50, 0x2074, 0x87e0, 0x1673, 0x0, 0x1);
        gbc.writeMem(0x4e63, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9ca1, gbc.sp());
        EXPECT(0x4e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 015D
        gbc.setState(0xa57e, 0xcf66, 0x6f30, 0xe024, 0x3343, 0x9783, 0x1, 0x1);
        gbc.writeMem(0xa57e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcf66, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57e));
        EXPECT(0xb2, gbc.readMem(0xa57f));
        // CB B2 015E
        gbc.setState(0xdf5b, 0x9e6c, 0x4350, 0xa56a, 0x1f06, 0x4e4, 0x0, 0x0);
        gbc.writeMem(0xdf5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9e6c, gbc.sp());
        EXPECT(0xdf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5b));
        EXPECT(0xb2, gbc.readMem(0xdf5c));
        // CB B2 015F
        gbc.setState(0xb5a5, 0x600, 0x67b0, 0xed2b, 0xc1ee, 0xe651, 0x0, 0x0);
        gbc.writeMem(0xb5a5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x600, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a5));
        EXPECT(0xb2, gbc.readMem(0xb5a6));
        // CB B2 0160
        gbc.setState(0xc8c9, 0x80e7, 0x7590, 0x7433, 0xd3f4, 0xcbd2, 0x0, 0x0);
        gbc.writeMem(0xc8c9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x80e7, gbc.sp());
        EXPECT(0xc8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c9));
        EXPECT(0xb2, gbc.readMem(0xc8ca));
        // CB B2 0161
        gbc.setState(0x5133, 0xff15, 0x9f00, 0x640f, 0xa346, 0x26c6, 0x0, 0x0);
        gbc.writeMem(0x5133, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0162
        gbc.setState(0x5c07, 0xaca2, 0x93e0, 0x944c, 0x7a02, 0xb20a, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaca2, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0163
        gbc.setState(0x23cd, 0xc786, 0x5d40, 0xe183, 0xeae6, 0xad75, 0x1, 0x1);
        gbc.writeMem(0x23cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc786, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0164
        gbc.setState(0xc597, 0x51e3, 0xfc10, 0x5272, 0x7b5f, 0xb19f, 0x1, 0x1);
        gbc.writeMem(0xc597, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51e3, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc597));
        EXPECT(0xb2, gbc.readMem(0xc598));
        // CB B2 0166
        gbc.setState(0x5f3f, 0x324b, 0xe400, 0x1666, 0x920d, 0x681d, 0x1, 0x0);
        gbc.writeMem(0x5f3f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x324b, gbc.sp());
        EXPECT(0x5f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0167
        gbc.setState(0x54f, 0x61be, 0xf9e0, 0x57f3, 0x989, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0x54f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0x551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0168
        gbc.setState(0xadbb, 0x9311, 0x7c10, 0x7906, 0x789c, 0x4afd, 0x1, 0x1);
        gbc.writeMem(0xadbb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xadbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbb));
        EXPECT(0xb2, gbc.readMem(0xadbc));
        // CB B2 0169
        gbc.setState(0x8051, 0x619, 0x3140, 0x949, 0x8a51, 0xd5ef, 0x1, 0x1);
        gbc.writeMem(0x8051, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x8053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8051));
        EXPECT(0xb2, gbc.readMem(0x8052));
        // CB B2 016A
        gbc.setState(0x2cb1, 0x8784, 0x930, 0xbdf3, 0x1873, 0x8452, 0x0, 0x1);
        gbc.writeMem(0x2cb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8784, gbc.sp());
        EXPECT(0x2cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 016B
        gbc.setState(0x27a4, 0x11d5, 0x47e0, 0xaf59, 0x8729, 0x90cf, 0x1, 0x1);
        gbc.writeMem(0x27a4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x11d5, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 016C
        gbc.setState(0xc1ed, 0xc7fe, 0x960, 0x6cad, 0xee4, 0xa624, 0x0, 0x0);
        gbc.writeMem(0xc1ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc7fe, gbc.sp());
        EXPECT(0xc1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ed));
        EXPECT(0xb2, gbc.readMem(0xc1ee));
        // CB B2 016D
        gbc.setState(0xcd94, 0xc04b, 0xabc0, 0x5172, 0xb756, 0x840c, 0x1, 0x1);
        gbc.writeMem(0xcd94, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd94));
        EXPECT(0xb2, gbc.readMem(0xcd95));
        // CB B2 016E
        gbc.setState(0x5ead, 0xfe4, 0xad90, 0x9ce8, 0x2917, 0x1f85, 0x1, 0x0);
        gbc.writeMem(0x5ead, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 016F
        gbc.setState(0x1054, 0xf1d8, 0x61c0, 0x17ac, 0x7e9a, 0xe0e3, 0x1, 0x0);
        gbc.writeMem(0x1054, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf1d8, gbc.sp());
        EXPECT(0x1056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0170
        gbc.setState(0xd711, 0xb4cb, 0xe4c0, 0x29f4, 0x2ce1, 0x54f6, 0x0, 0x0);
        gbc.writeMem(0xd711, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0xd713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd711));
        EXPECT(0xb2, gbc.readMem(0xd712));
        // CB B2 0171
        gbc.setState(0x6c74, 0x57a4, 0xd360, 0x55fb, 0x5695, 0x244b, 0x0, 0x0);
        gbc.writeMem(0x6c74, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x57a4, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0172
        gbc.setState(0xde1c, 0xcb03, 0x200, 0x8dfe, 0xb113, 0xbcbd, 0x0, 0x1);
        gbc.writeMem(0xde1c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcb03, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1c));
        EXPECT(0xb2, gbc.readMem(0xde1d));
        // CB B2 0173
        gbc.setState(0xb6b1, 0x6a9e, 0x5820, 0xe0eb, 0xd901, 0x34af, 0x0, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6a9e, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b1));
        EXPECT(0xb2, gbc.readMem(0xb6b2));
        // CB B2 0174
        gbc.setState(0xa5b6, 0x67ef, 0xfb40, 0xa8d0, 0xff3a, 0x64b9, 0x1, 0x0);
        gbc.writeMem(0xa5b6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x67ef, gbc.sp());
        EXPECT(0xa5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b6));
        EXPECT(0xb2, gbc.readMem(0xa5b7));
        // CB B2 0175
        gbc.setState(0x3186, 0x7df0, 0x6900, 0x511, 0x5b5f, 0x218f, 0x0, 0x1);
        gbc.writeMem(0x3186, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0x3188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0176
        gbc.setState(0x12bf, 0xd306, 0xee20, 0x6752, 0xe031, 0xd3bf, 0x0, 0x0);
        gbc.writeMem(0x12bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd306, gbc.sp());
        EXPECT(0x12c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0177
        gbc.setState(0x536, 0xd339, 0xe1b0, 0x3256, 0xcf3f, 0xe45c, 0x0, 0x1);
        gbc.writeMem(0x536, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd339, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0178
        gbc.setState(0xcc1a, 0xda55, 0xc7e0, 0x6a4b, 0x9d9c, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda55, gbc.sp());
        EXPECT(0xcc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1a));
        EXPECT(0xb2, gbc.readMem(0xcc1b));
        // CB B2 0179
        gbc.setState(0x2c8b, 0x8b, 0x42d0, 0x2b1f, 0x44dc, 0x357b, 0x1, 0x0);
        gbc.writeMem(0x2c8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8b, gbc.sp());
        EXPECT(0x2c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 017A
        gbc.setState(0x90c9, 0xdb31, 0x9e70, 0x2114, 0x8f83, 0x39b3, 0x1, 0x0);
        gbc.writeMem(0x90c9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdb31, gbc.sp());
        EXPECT(0x90cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c9));
        EXPECT(0xb2, gbc.readMem(0x90ca));
        // CB B2 017B
        gbc.setState(0xc249, 0xf05f, 0xaec0, 0xfecb, 0x85dc, 0x61c7, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0xb2, gbc.readMem(0xc24a));
        // CB B2 017C
        gbc.setState(0x66d5, 0x24ca, 0xf230, 0x41fb, 0x9c94, 0xb274, 0x1, 0x1);
        gbc.writeMem(0x66d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x66d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 017D
        gbc.setState(0x77bb, 0x69db, 0x2f80, 0xe0f2, 0xd1b3, 0x2ecd, 0x1, 0x0);
        gbc.writeMem(0x77bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x69db, gbc.sp());
        EXPECT(0x77bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 017E
        gbc.setState(0xaf0e, 0xdb4c, 0x7130, 0x6fa9, 0xe85, 0xb5b6, 0x1, 0x1);
        gbc.writeMem(0xaf0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0xaf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0e));
        EXPECT(0xb2, gbc.readMem(0xaf0f));
        // CB B2 017F
        gbc.setState(0x4403, 0xf4a1, 0xbe00, 0xf9dd, 0xb536, 0x6e6b, 0x1, 0x0);
        gbc.writeMem(0x4403, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf4a1, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0180
        gbc.setState(0xedb2, 0xcee3, 0x1220, 0x42b7, 0x59b, 0xccb9, 0x0, 0x0);
        gbc.writeMem(0xedb2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb2));
        EXPECT(0xb2, gbc.readMem(0xedb3));
        // CB B2 0181
        gbc.setState(0xa0f3, 0xb28b, 0xd620, 0x1c30, 0x32e, 0x8b11, 0x0, 0x0);
        gbc.writeMem(0xa0f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f3));
        EXPECT(0xb2, gbc.readMem(0xa0f4));
        // CB B2 0182
        gbc.setState(0xc817, 0x1b10, 0xbc20, 0x364e, 0xb35, 0xa777, 0x1, 0x1);
        gbc.writeMem(0xc817, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1b10, gbc.sp());
        EXPECT(0xc819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc817));
        EXPECT(0xb2, gbc.readMem(0xc818));
        // CB B2 0183
        gbc.setState(0xdde9, 0xe483, 0xf060, 0xffaf, 0xe151, 0x47d5, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe483, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde9));
        EXPECT(0xb2, gbc.readMem(0xddea));
        // CB B2 0184
        gbc.setState(0x13fe, 0x63c7, 0x3390, 0xf5f5, 0x1aaf, 0x21f0, 0x0, 0x1);
        gbc.writeMem(0x13fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0185
        gbc.setState(0x5164, 0x29af, 0x2370, 0x49cc, 0xd3da, 0x7f1, 0x0, 0x1);
        gbc.writeMem(0x5164, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0186
        gbc.setState(0xa4d2, 0x3dbe, 0x29c0, 0x4003, 0x276c, 0xc0c3, 0x0, 0x0);
        gbc.writeMem(0xa4d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0xa4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d2));
        EXPECT(0xb2, gbc.readMem(0xa4d3));
        // CB B2 0187
        gbc.setState(0x66bd, 0x2c5f, 0x3c60, 0xc28c, 0xb9e3, 0x273f, 0x1, 0x1);
        gbc.writeMem(0x66bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0188
        gbc.setState(0xc173, 0x7d4a, 0xd6c0, 0xa2b1, 0x9138, 0x64df, 0x1, 0x1);
        gbc.writeMem(0xc173, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0xb2, gbc.readMem(0xc174));
        // CB B2 0189
        gbc.setState(0x2dfe, 0x9e72, 0x7340, 0x31dc, 0x3700, 0x40f0, 0x0, 0x0);
        gbc.writeMem(0x2dfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 018A
        gbc.setState(0x5c4b, 0xa61b, 0xbf30, 0x24b4, 0xad60, 0x906c, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0x5c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 018B
        gbc.setState(0xc1e9, 0x2be, 0x8870, 0xe22f, 0x6822, 0xfa4, 0x1, 0x0);
        gbc.writeMem(0xc1e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0xc1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e9));
        EXPECT(0xb2, gbc.readMem(0xc1ea));
        // CB B2 018C
        gbc.setState(0xe36, 0x7cf8, 0xd750, 0xaa7f, 0xdf7f, 0xd355, 0x0, 0x0);
        gbc.writeMem(0xe36, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 018D
        gbc.setState(0x1e60, 0xa365, 0x8440, 0x4ff9, 0x925b, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x1e60, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa365, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 018E
        gbc.setState(0x2121, 0xda04, 0x5060, 0x6d10, 0xf824, 0xf80c, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xda04, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 018F
        gbc.setState(0xe2df, 0xdb0f, 0x5290, 0x4fcd, 0x4e02, 0x57bc, 0x1, 0x0);
        gbc.writeMem(0xe2df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0xe2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2df));
        EXPECT(0xb2, gbc.readMem(0xe2e0));
        // CB B2 0190
        gbc.setState(0x9c5d, 0xd15a, 0xb310, 0x3e23, 0xe0d9, 0x26e0, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5d));
        EXPECT(0xb2, gbc.readMem(0x9c5e));
        // CB B2 0191
        gbc.setState(0x9abe, 0x651e, 0xbda0, 0x5bf9, 0x30, 0xb40e, 0x1, 0x1);
        gbc.writeMem(0x9abe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0xb2, gbc.readMem(0x9abf));
        // CB B2 0192
        gbc.setState(0xe5f5, 0x4376, 0x3a10, 0xef9a, 0x90, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4376, gbc.sp());
        EXPECT(0xe5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f5));
        EXPECT(0xb2, gbc.readMem(0xe5f6));
        // CB B2 0193
        gbc.setState(0x1924, 0x905, 0xc470, 0x7451, 0x70b5, 0x98b0, 0x1, 0x1);
        gbc.writeMem(0x1924, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0x1926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0194
        gbc.setState(0x6f75, 0x5447, 0xd10, 0x3dff, 0x1603, 0x1ca5, 0x1, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5447, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0198
        gbc.setState(0x211b, 0x182e, 0x18a0, 0x2220, 0x882d, 0xafb2, 0x0, 0x0);
        gbc.writeMem(0x211b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x182e, gbc.sp());
        EXPECT(0x211d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0199
        gbc.setState(0x6c62, 0xf8e2, 0x7c70, 0x96db, 0xf7dc, 0x2251, 0x0, 0x1);
        gbc.writeMem(0x6c62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf8e2, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 019A
        gbc.setState(0xdb71, 0xe389, 0x1820, 0x3ce4, 0xa3d0, 0x71cb, 0x0, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe389, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0xb2, gbc.readMem(0xdb72));
        // CB B2 019B
        gbc.setState(0x1a01, 0x9262, 0x5f50, 0x39fa, 0xfc82, 0x1c0, 0x0, 0x1);
        gbc.writeMem(0x1a01, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9262, gbc.sp());
        EXPECT(0x1a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 019C
        gbc.setState(0xca20, 0xc804, 0xb60, 0x47c3, 0x8f3f, 0xf7b8, 0x0, 0x0);
        gbc.writeMem(0xca20, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca20));
        EXPECT(0xb2, gbc.readMem(0xca21));
        // CB B2 019D
        gbc.setState(0xe5d8, 0x29dc, 0xf260, 0xfd9f, 0xbb6f, 0x4363, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x29dc, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d8));
        EXPECT(0xb2, gbc.readMem(0xe5d9));
        // CB B2 019E
        gbc.setState(0xa162, 0x2f51, 0xef80, 0xe7c3, 0xc2c1, 0xff8d, 0x0, 0x0);
        gbc.writeMem(0xa162, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2f51, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa162));
        EXPECT(0xb2, gbc.readMem(0xa163));
        // CB B2 019F
        gbc.setState(0x24ff, 0x9533, 0x64a0, 0x381b, 0x9c35, 0xb067, 0x0, 0x0);
        gbc.writeMem(0x24ff, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0x2501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01A0
        gbc.setState(0xe5a1, 0x9e90, 0x2bd0, 0xfaa8, 0xa8bc, 0x287d, 0x1, 0x0);
        gbc.writeMem(0xe5a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9e90, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0xb2, gbc.readMem(0xe5a2));
        // CB B2 01A2
        gbc.setState(0xef4b, 0xf40f, 0x7100, 0xf632, 0xe1e5, 0x3f99, 0x0, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf40f, gbc.sp());
        EXPECT(0xef4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4b));
        EXPECT(0xb2, gbc.readMem(0xef4c));
        // CB B2 01A3
        gbc.setState(0x9cba, 0x52e9, 0x9560, 0x9650, 0x51cf, 0x8d4d, 0x1, 0x1);
        gbc.writeMem(0x9cba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x52e9, gbc.sp());
        EXPECT(0x9cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cba));
        EXPECT(0xb2, gbc.readMem(0x9cbb));
        // CB B2 01A4
        gbc.setState(0x5d69, 0xc558, 0xed70, 0xadcb, 0x163b, 0xc459, 0x1, 0x1);
        gbc.writeMem(0x5d69, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc558, gbc.sp());
        EXPECT(0x5d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01A5
        gbc.setState(0x55d, 0x9570, 0x6930, 0xa75d, 0xe524, 0x905c, 0x0, 0x0);
        gbc.writeMem(0x55d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9570, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01A9
        gbc.setState(0x2c0a, 0x7ebc, 0xb230, 0xc248, 0xc473, 0xf209, 0x0, 0x0);
        gbc.writeMem(0x2c0a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0x2c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01AA
        gbc.setState(0xd58c, 0x7e32, 0xc780, 0xbd0e, 0xa849, 0x8ff6, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58c));
        EXPECT(0xb2, gbc.readMem(0xd58d));
        // CB B2 01AB
        gbc.setState(0xd68f, 0x2f33, 0x6d30, 0xf007, 0x4491, 0x8578, 0x1, 0x0);
        gbc.writeMem(0xd68f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68f));
        EXPECT(0xb2, gbc.readMem(0xd690));
        // CB B2 01AC
        gbc.setState(0x3a5c, 0x3971, 0x1140, 0xd6d6, 0xf8e4, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x3a5c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3971, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01AD
        gbc.setState(0x9c77, 0x3b1a, 0x6b50, 0xc37f, 0xead5, 0xf289, 0x1, 0x0);
        gbc.writeMem(0x9c77, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b1a, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c77));
        EXPECT(0xb2, gbc.readMem(0x9c78));
        // CB B2 01AE
        gbc.setState(0x3fc2, 0x46f3, 0xb140, 0x27e9, 0x51e9, 0xe720, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01AF
        gbc.setState(0xe33f, 0x3479, 0x8000, 0x871d, 0xc783, 0xee1c, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0xe341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33f));
        EXPECT(0xb2, gbc.readMem(0xe340));
        // CB B2 01B0
        gbc.setState(0x5bb, 0xadbe, 0x8620, 0xc27b, 0x7106, 0x4db4, 0x0, 0x1);
        gbc.writeMem(0x5bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0x5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01B2
        gbc.setState(0x3402, 0xf6c1, 0xfe10, 0xd1c5, 0xf550, 0x273c, 0x0, 0x0);
        gbc.writeMem(0x3402, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0x3404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01B3
        gbc.setState(0x80ec, 0xf596, 0xa50, 0xe43f, 0x3156, 0xff2e, 0x0, 0x0);
        gbc.writeMem(0x80ec, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf596, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ec));
        EXPECT(0xb2, gbc.readMem(0x80ed));
        // CB B2 01B5
        gbc.setState(0x920b, 0x9ac6, 0x5e0, 0xd7eb, 0xa440, 0xa5a2, 0x1, 0x0);
        gbc.writeMem(0x920b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ac6, gbc.sp());
        EXPECT(0x920d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920b));
        EXPECT(0xb2, gbc.readMem(0x920c));
        // CB B2 01B6
        gbc.setState(0xb711, 0x2b35, 0x5f90, 0x4a75, 0x6a62, 0x1afb, 0x1, 0x0);
        gbc.writeMem(0xb711, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0xb713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb711));
        EXPECT(0xb2, gbc.readMem(0xb712));
        // CB B2 01B7
        gbc.setState(0x28b3, 0x289d, 0x51c0, 0x1b21, 0x39c5, 0xb9e0, 0x0, 0x1);
        gbc.writeMem(0x28b3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01B8
        gbc.setState(0x3871, 0x8b25, 0xf850, 0x4fa7, 0x9000, 0xdc82, 0x1, 0x1);
        gbc.writeMem(0x3871, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8b25, gbc.sp());
        EXPECT(0x3873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01B9
        gbc.setState(0x8a7, 0x3978, 0x4bc0, 0xa242, 0xe132, 0xe663, 0x0, 0x1);
        gbc.writeMem(0x8a7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3978, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01BA
        gbc.setState(0x53cb, 0xeb6a, 0x4530, 0x1543, 0xb860, 0x2fc8, 0x1, 0x1);
        gbc.writeMem(0x53cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01BB
        gbc.setState(0x32a6, 0x8a82, 0xe020, 0x695c, 0xa567, 0x3718, 0x1, 0x1);
        gbc.writeMem(0x32a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a82, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01BC
        gbc.setState(0x8077, 0x6b3f, 0x24d0, 0xf9a2, 0x9435, 0xe376, 0x1, 0x0);
        gbc.writeMem(0x8077, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6b3f, gbc.sp());
        EXPECT(0x8079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8077));
        EXPECT(0xb2, gbc.readMem(0x8078));
        // CB B2 01BD
        gbc.setState(0x476f, 0x1da8, 0xbf40, 0xaa4f, 0xb688, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x476f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1da8, gbc.sp());
        EXPECT(0x4771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01BE
        gbc.setState(0x2523, 0x201, 0xa020, 0x38d5, 0xe968, 0x1e72, 0x1, 0x1);
        gbc.writeMem(0x2523, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x201, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01BF
        gbc.setState(0xa95c, 0xab79, 0x5330, 0x61fa, 0x5bb7, 0x40c1, 0x0, 0x1);
        gbc.writeMem(0xa95c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xab79, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95c));
        EXPECT(0xb2, gbc.readMem(0xa95d));
        // CB B2 01C0
        gbc.setState(0x2039, 0xe69, 0x4f0, 0x68ff, 0x4bce, 0x1a7c, 0x0, 0x1);
        gbc.writeMem(0x2039, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0x203b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01C1
        gbc.setState(0x2269, 0x4f48, 0x9350, 0x8bda, 0x2060, 0x1b8e, 0x1, 0x1);
        gbc.writeMem(0x2269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x226b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01C2
        gbc.setState(0x170e, 0x1e87, 0x7c90, 0xdf13, 0x2e99, 0x9fdd, 0x1, 0x1);
        gbc.writeMem(0x170e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e87, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01C4
        gbc.setState(0x396f, 0x7e55, 0xc890, 0xeff8, 0xa82f, 0x96c1, 0x0, 0x1);
        gbc.writeMem(0x396f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01C5
        gbc.setState(0x32d, 0xf57, 0xe940, 0xcb3a, 0x8bed, 0xd8fe, 0x1, 0x0);
        gbc.writeMem(0x32d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01C6
        gbc.setState(0x1118, 0xb7c1, 0x69d0, 0x1e1f, 0xdadc, 0x4a2d, 0x1, 0x0);
        gbc.writeMem(0x1118, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb7c1, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01C7
        gbc.setState(0xd3ed, 0x6418, 0x4060, 0xf599, 0x5806, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0xd3ed, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ed));
        EXPECT(0xb2, gbc.readMem(0xd3ee));
        // CB B2 01C8
        gbc.setState(0x61ce, 0x9e2c, 0xfe80, 0x67f, 0x32f4, 0x1bbc, 0x0, 0x1);
        gbc.writeMem(0x61ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9e2c, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01C9
        gbc.setState(0xcede, 0x2729, 0xaaa0, 0x6c90, 0x9a83, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0xcede, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2729, gbc.sp());
        EXPECT(0xcee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcede));
        EXPECT(0xb2, gbc.readMem(0xcedf));
        // CB B2 01CA
        gbc.setState(0x55ae, 0x8f68, 0x69d0, 0x2f98, 0x7138, 0xea6c, 0x0, 0x0);
        gbc.writeMem(0x55ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8f68, gbc.sp());
        EXPECT(0x55b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01CC
        gbc.setState(0xde06, 0xc3f, 0x8020, 0x88c6, 0x16ca, 0x35fb, 0x0, 0x1);
        gbc.writeMem(0xde06, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc3f, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde06));
        EXPECT(0xb2, gbc.readMem(0xde07));
        // CB B2 01CD
        gbc.setState(0xe9d6, 0xf36c, 0x7bd0, 0x98c3, 0x5341, 0x6f1b, 0x0, 0x1);
        gbc.writeMem(0xe9d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf36c, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d6));
        EXPECT(0xb2, gbc.readMem(0xe9d7));
        // CB B2 01CE
        gbc.setState(0x14ac, 0xcc8d, 0xb940, 0x30af, 0xd71b, 0xf630, 0x1, 0x0);
        gbc.writeMem(0x14ac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcc8d, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01CF
        gbc.setState(0x7af9, 0x7022, 0x4310, 0xfc6d, 0x7c47, 0xa4af, 0x0, 0x1);
        gbc.writeMem(0x7af9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7022, gbc.sp());
        EXPECT(0x7afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01D0
        gbc.setState(0xa7d2, 0xc318, 0xa710, 0x97c6, 0x8e6a, 0xa791, 0x0, 0x1);
        gbc.writeMem(0xa7d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc318, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d2));
        EXPECT(0xb2, gbc.readMem(0xa7d3));
        // CB B2 01D1
        gbc.setState(0x2eef, 0xb565, 0xcfa0, 0x7ba2, 0x8b78, 0x5fe3, 0x1, 0x1);
        gbc.writeMem(0x2eef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb565, gbc.sp());
        EXPECT(0x2ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01D2
        gbc.setState(0x2479, 0x4922, 0xc3c0, 0xbaeb, 0x7bbc, 0xe3b5, 0x1, 0x0);
        gbc.writeMem(0x2479, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0x247b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01D3
        gbc.setState(0xb887, 0x7256, 0x9dd0, 0x3edb, 0xd5bd, 0xd29f, 0x0, 0x0);
        gbc.writeMem(0xb887, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7256, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb887));
        EXPECT(0xb2, gbc.readMem(0xb888));
        // CB B2 01D5
        gbc.setState(0x991d, 0x7cfd, 0xecb0, 0x142b, 0x2dc2, 0xe945, 0x0, 0x0);
        gbc.writeMem(0x991d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7cfd, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991d));
        EXPECT(0xb2, gbc.readMem(0x991e));
        // CB B2 01D6
        gbc.setState(0xddde, 0xa2dc, 0x3230, 0xa39, 0x7da8, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0xddde, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0xdde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddde));
        EXPECT(0xb2, gbc.readMem(0xdddf));
        // CB B2 01D7
        gbc.setState(0xae34, 0x4563, 0xa760, 0xd345, 0x77a0, 0xab3b, 0x1, 0x1);
        gbc.writeMem(0xae34, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4563, gbc.sp());
        EXPECT(0xae36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae34));
        EXPECT(0xb2, gbc.readMem(0xae35));
        // CB B2 01D8
        gbc.setState(0xdde5, 0x32d9, 0x1740, 0x71c8, 0x25ec, 0x2fde, 0x0, 0x1);
        gbc.writeMem(0xdde5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0xdde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde5));
        EXPECT(0xb2, gbc.readMem(0xdde6));
        // CB B2 01D9
        gbc.setState(0x924e, 0xe51c, 0x2a40, 0xf342, 0x44b1, 0x90d0, 0x1, 0x1);
        gbc.writeMem(0x924e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe51c, gbc.sp());
        EXPECT(0x9250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924e));
        EXPECT(0xb2, gbc.readMem(0x924f));
        // CB B2 01DA
        gbc.setState(0x4844, 0x4f4d, 0x7700, 0x8fae, 0xca88, 0x1d23, 0x1, 0x0);
        gbc.writeMem(0x4844, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4f4d, gbc.sp());
        EXPECT(0x4846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01DB
        gbc.setState(0x7aae, 0x2818, 0xbc40, 0xa19e, 0xb195, 0x849e, 0x0, 0x1);
        gbc.writeMem(0x7aae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01DC
        gbc.setState(0x9f2b, 0xd25c, 0xd3c0, 0x1aab, 0x144c, 0xa166, 0x0, 0x1);
        gbc.writeMem(0x9f2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0x9f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2b));
        EXPECT(0xb2, gbc.readMem(0x9f2c));
        // CB B2 01DD
        gbc.setState(0x4949, 0x20a7, 0xd5f0, 0x5eba, 0x50d0, 0x97b9, 0x1, 0x0);
        gbc.writeMem(0x4949, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x494b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01DE
        gbc.setState(0x4a44, 0xceb8, 0xd7b0, 0x6c58, 0x243c, 0xee07, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01DF
        gbc.setState(0xd0a6, 0xa345, 0xeb10, 0xc32d, 0x9aff, 0x4033, 0x0, 0x0);
        gbc.writeMem(0xd0a6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa345, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0xb2, gbc.readMem(0xd0a7));
        // CB B2 01E0
        gbc.setState(0xcaef, 0xc186, 0xffe0, 0x55a2, 0xb200, 0x23ba, 0x0, 0x1);
        gbc.writeMem(0xcaef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaef));
        EXPECT(0xb2, gbc.readMem(0xcaf0));
        // CB B2 01E1
        gbc.setState(0xe35f, 0xd584, 0x6890, 0xd231, 0x5868, 0x4770, 0x0, 0x1);
        gbc.writeMem(0xe35f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd584, gbc.sp());
        EXPECT(0xe361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35f));
        EXPECT(0xb2, gbc.readMem(0xe360));
        // CB B2 01E2
        gbc.setState(0x6d2d, 0x5208, 0xb150, 0xb1a4, 0x95d1, 0xc83c, 0x0, 0x0);
        gbc.writeMem(0x6d2d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5208, gbc.sp());
        EXPECT(0x6d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01E3
        gbc.setState(0xc52f, 0x9ede, 0x3140, 0x6ed1, 0x4f52, 0xafe0, 0x1, 0x1);
        gbc.writeMem(0xc52f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0xc531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52f));
        EXPECT(0xb2, gbc.readMem(0xc530));
        // CB B2 01E4
        gbc.setState(0x259a, 0x8eaa, 0x2f60, 0x330f, 0x8f67, 0x56a7, 0x0, 0x0);
        gbc.writeMem(0x259a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01E5
        gbc.setState(0x9578, 0xcd42, 0x3f30, 0xfd39, 0xa0dc, 0xb6d9, 0x0, 0x0);
        gbc.writeMem(0x9578, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcd42, gbc.sp());
        EXPECT(0x957a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9578));
        EXPECT(0xb2, gbc.readMem(0x9579));
        // CB B2 01E6
        gbc.setState(0x8e2a, 0xf684, 0xcc40, 0x2c04, 0x7492, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0x8e2a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x8e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2a));
        EXPECT(0xb2, gbc.readMem(0x8e2b));
        // CB B2 01E7
        gbc.setState(0xb2bd, 0x6394, 0xcf70, 0x532, 0xd4e6, 0x3ae9, 0x0, 0x0);
        gbc.writeMem(0xb2bd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0xb2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2bd));
        EXPECT(0xb2, gbc.readMem(0xb2be));
        // CB B2 01E8
        gbc.setState(0xb972, 0x87d7, 0x3a20, 0xab1c, 0xc3a2, 0x18bf, 0x1, 0x0);
        gbc.writeMem(0xb972, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x87d7, gbc.sp());
        EXPECT(0xb974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb972));
        EXPECT(0xb2, gbc.readMem(0xb973));
        // CB B2 01E9
        gbc.setState(0x190b, 0xfef0, 0x13a0, 0x54da, 0x84c3, 0x56c0, 0x0, 0x0);
        gbc.writeMem(0x190b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01EA
        gbc.setState(0x1edc, 0x21fc, 0x6d70, 0xe431, 0x7c93, 0x2d62, 0x1, 0x0);
        gbc.writeMem(0x1edc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x1ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01EB
        gbc.setState(0x5b64, 0x4dd0, 0x7de0, 0xcf49, 0x4f5f, 0xed9f, 0x0, 0x0);
        gbc.writeMem(0x5b64, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01EC
        gbc.setState(0x6658, 0x3544, 0x7c80, 0x3870, 0xc11f, 0x2a87, 0x0, 0x0);
        gbc.writeMem(0x6658, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0x665a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01EE
        gbc.setState(0xcf7e, 0x8260, 0x8d0, 0x8ef6, 0xabd6, 0x68c0, 0x0, 0x0);
        gbc.writeMem(0xcf7e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8260, gbc.sp());
        EXPECT(0xcf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf7e));
        EXPECT(0xb2, gbc.readMem(0xcf7f));
        // CB B2 01EF
        gbc.setState(0x5b29, 0x6601, 0x58a0, 0x25af, 0x563b, 0xac56, 0x0, 0x0);
        gbc.writeMem(0x5b29, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01F0
        gbc.setState(0x5175, 0xf2dd, 0xb670, 0xd013, 0x66c5, 0xe95b, 0x0, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01F1
        gbc.setState(0xad65, 0x4362, 0x4ff0, 0xc44a, 0xd92d, 0xdd05, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad65));
        EXPECT(0xb2, gbc.readMem(0xad66));
        // CB B2 01F2
        gbc.setState(0x948d, 0x9b58, 0x33c0, 0x124e, 0x716c, 0x1e7, 0x1, 0x0);
        gbc.writeMem(0x948d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0x948f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948d));
        EXPECT(0xb2, gbc.readMem(0x948e));
        // CB B2 01F3
        gbc.setState(0xd85b, 0xc884, 0x8120, 0x4c8e, 0xdc24, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0xd85b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc884, gbc.sp());
        EXPECT(0xd85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85b));
        EXPECT(0xb2, gbc.readMem(0xd85c));
        // CB B2 01F4
        gbc.setState(0x46ea, 0x5f34, 0x33a0, 0xec88, 0xe183, 0x5de4, 0x1, 0x1);
        gbc.writeMem(0x46ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5f34, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01F5
        gbc.setState(0x8421, 0xee4a, 0x9d0, 0x1fcf, 0xc291, 0xdb65, 0x1, 0x0);
        gbc.writeMem(0x8421, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0x8423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8421));
        EXPECT(0xb2, gbc.readMem(0x8422));
        // CB B2 01F6
        gbc.setState(0x9da5, 0x396f, 0xb920, 0xe4b, 0x5d4b, 0x3c9, 0x0, 0x0);
        gbc.writeMem(0x9da5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x396f, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da5));
        EXPECT(0xb2, gbc.readMem(0x9da6));
        // CB B2 01F7
        gbc.setState(0x3200, 0xa7e3, 0x3fe0, 0x4b3d, 0x16e9, 0x3589, 0x0, 0x0);
        gbc.writeMem(0x3200, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa7e3, gbc.sp());
        EXPECT(0x3202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01F8
        gbc.setState(0x8a8f, 0x9d08, 0x62c0, 0x6a2a, 0x215a, 0x6211, 0x0, 0x0);
        gbc.writeMem(0x8a8f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9d08, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8f));
        EXPECT(0xb2, gbc.readMem(0x8a90));
        // CB B2 01F9
        gbc.setState(0xcdb1, 0x758c, 0x5c80, 0x26fd, 0x4364, 0x1118, 0x0, 0x1);
        gbc.writeMem(0xcdb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x758c, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb1));
        EXPECT(0xb2, gbc.readMem(0xcdb2));
        // CB B2 01FA
        gbc.setState(0x1a33, 0xe158, 0x7fe0, 0xa226, 0xb2ed, 0x2af9, 0x0, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 01FB
        gbc.setState(0xe481, 0x487f, 0x6c50, 0x58, 0xfb0, 0x2daf, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0xb2, gbc.readMem(0xe482));
        // CB B2 01FC
        gbc.setState(0x480, 0x1cd5, 0x4270, 0x39c4, 0xe5c2, 0xab21, 0x0, 0x1);
        gbc.writeMem(0x480, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1cd5, gbc.sp());
        EXPECT(0x482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01FD
        gbc.setState(0x7e8b, 0xe539, 0x99d0, 0x5683, 0xd791, 0x16af, 0x0, 0x1);
        gbc.writeMem(0x7e8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe539, gbc.sp());
        EXPECT(0x7e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 01FE
        gbc.setState(0x9057, 0xa145, 0x87f0, 0xbd5f, 0x85af, 0x3c88, 0x0, 0x1);
        gbc.writeMem(0x9057, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa145, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9057));
        EXPECT(0xb2, gbc.readMem(0x9058));
        // CB B2 01FF
        gbc.setState(0xd7d6, 0xfd39, 0xc130, 0xed44, 0x786f, 0x8911, 0x1, 0x1);
        gbc.writeMem(0xd7d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfd39, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d6));
        EXPECT(0xb2, gbc.readMem(0xd7d7));
        // CB B2 0200
        gbc.setState(0x327f, 0x4890, 0x61f0, 0x9c74, 0x2b98, 0x1cb3, 0x1, 0x0);
        gbc.writeMem(0x327f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4890, gbc.sp());
        EXPECT(0x3281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0201
        gbc.setState(0x2650, 0x3abe, 0x20e0, 0x5ef0, 0x4d80, 0x984, 0x1, 0x1);
        gbc.writeMem(0x2650, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3abe, gbc.sp());
        EXPECT(0x2652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0202
        gbc.setState(0x1bfd, 0x56cb, 0x5fe0, 0x1088, 0xc4f4, 0x97e6, 0x0, 0x1);
        gbc.writeMem(0x1bfd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0203
        gbc.setState(0x5968, 0x983c, 0x9cb0, 0xb685, 0xf9cc, 0xb40c, 0x1, 0x1);
        gbc.writeMem(0x5968, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x983c, gbc.sp());
        EXPECT(0x596a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0204
        gbc.setState(0x5518, 0xd9de, 0xaa60, 0x76b0, 0x1b73, 0xd371, 0x1, 0x1);
        gbc.writeMem(0x5518, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0x551a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0206
        gbc.setState(0x7fdf, 0xce60, 0xdb50, 0x3bef, 0xc4d5, 0x5032, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xce60, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0207
        gbc.setState(0x6946, 0xe73c, 0x1ed0, 0x2444, 0xcab2, 0xaa6c, 0x1, 0x1);
        gbc.writeMem(0x6946, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe73c, gbc.sp());
        EXPECT(0x6948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0208
        gbc.setState(0x7a6f, 0x3b61, 0xa1c0, 0xdae7, 0x7772, 0xbabd, 0x1, 0x0);
        gbc.writeMem(0x7a6f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3b61, gbc.sp());
        EXPECT(0x7a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0209
        gbc.setState(0xa6f2, 0xd8b2, 0x5a80, 0x7ed, 0xfd44, 0xd291, 0x1, 0x0);
        gbc.writeMem(0xa6f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0xb2, gbc.readMem(0xa6f3));
        // CB B2 020A
        gbc.setState(0xc9bb, 0x98d1, 0x19f0, 0x33b2, 0x36ac, 0xb8d4, 0x0, 0x1);
        gbc.writeMem(0xc9bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0xc9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bb));
        EXPECT(0xb2, gbc.readMem(0xc9bc));
        // CB B2 020B
        gbc.setState(0x4de9, 0x1854, 0x3d70, 0x35be, 0x5574, 0xd147, 0x1, 0x1);
        gbc.writeMem(0x4de9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1854, gbc.sp());
        EXPECT(0x4deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 020C
        gbc.setState(0x6d22, 0x1ddd, 0x3680, 0xaa7b, 0xc1ce, 0x6a18, 0x1, 0x1);
        gbc.writeMem(0x6d22, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0x6d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 020D
        gbc.setState(0x98f2, 0x3097, 0x7890, 0x8e09, 0x2948, 0xab97, 0x1, 0x1);
        gbc.writeMem(0x98f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3097, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f2));
        EXPECT(0xb2, gbc.readMem(0x98f3));
        // CB B2 020E
        gbc.setState(0xdbb3, 0x808d, 0xdf30, 0x272d, 0x789d, 0x667f, 0x0, 0x1);
        gbc.writeMem(0xdbb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x808d, gbc.sp());
        EXPECT(0xdbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb3));
        EXPECT(0xb2, gbc.readMem(0xdbb4));
        // CB B2 020F
        gbc.setState(0xe1c, 0xe318, 0x7e00, 0x926, 0x2fd0, 0x5649, 0x1, 0x1);
        gbc.writeMem(0xe1c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0210
        gbc.setState(0x90d9, 0x5df, 0x6540, 0xbf6, 0xad6e, 0xb54f, 0x1, 0x1);
        gbc.writeMem(0x90d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d9));
        EXPECT(0xb2, gbc.readMem(0x90da));
        // CB B2 0211
        gbc.setState(0xd25c, 0xae86, 0xa830, 0xc6b, 0x60c4, 0x5bb9, 0x0, 0x1);
        gbc.writeMem(0xd25c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25c));
        EXPECT(0xb2, gbc.readMem(0xd25d));
        // CB B2 0212
        gbc.setState(0xefd3, 0x4fc3, 0x1740, 0xfa08, 0x54fa, 0xf7ce, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd3));
        EXPECT(0xb2, gbc.readMem(0xefd4));
        // CB B2 0213
        gbc.setState(0x851d, 0xce18, 0x49b0, 0x3e05, 0xf085, 0x7787, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0xb2, gbc.readMem(0x851e));
        // CB B2 0214
        gbc.setState(0x5b6d, 0xddf1, 0x7a10, 0xb8db, 0xb075, 0xcd9e, 0x1, 0x1);
        gbc.writeMem(0x5b6d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0215
        gbc.setState(0x8d0e, 0x1819, 0xf710, 0xd4d9, 0x61d, 0x2fd, 0x1, 0x0);
        gbc.writeMem(0x8d0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1819, gbc.sp());
        EXPECT(0x8d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0e));
        EXPECT(0xb2, gbc.readMem(0x8d0f));
        // CB B2 0216
        gbc.setState(0x8842, 0x62df, 0xdbd0, 0x2512, 0xaa84, 0xe94, 0x0, 0x0);
        gbc.writeMem(0x8842, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x62df, gbc.sp());
        EXPECT(0x8844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8842));
        EXPECT(0xb2, gbc.readMem(0x8843));
        // CB B2 0217
        gbc.setState(0x33bb, 0x2caa, 0x1490, 0xa17b, 0x2c9e, 0x13bf, 0x0, 0x1);
        gbc.writeMem(0x33bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2caa, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0218
        gbc.setState(0x6a45, 0x6c4c, 0xe680, 0x78d9, 0x6c73, 0xfbf4, 0x0, 0x1);
        gbc.writeMem(0x6a45, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6c4c, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0219
        gbc.setState(0x1ea5, 0x5d89, 0x9e0, 0x7807, 0x8bc, 0x9bac, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 021A
        gbc.setState(0x18a3, 0xc67, 0xdb0, 0x39cc, 0x2c85, 0x2e03, 0x1, 0x0);
        gbc.writeMem(0x18a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc67, gbc.sp());
        EXPECT(0x18a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 021B
        gbc.setState(0x710f, 0xe4a, 0x9350, 0x4d94, 0x6003, 0xca80, 0x1, 0x1);
        gbc.writeMem(0x710f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 021C
        gbc.setState(0x9ba, 0x4911, 0xffd0, 0xf635, 0xdf79, 0xeba1, 0x1, 0x1);
        gbc.writeMem(0x9ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4911, gbc.sp());
        EXPECT(0x9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 021D
        gbc.setState(0x6de5, 0xc7ea, 0xe860, 0x921, 0x5c22, 0x50d4, 0x0, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc7ea, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 021E
        gbc.setState(0x5ecf, 0x8cda, 0xeac0, 0x46a0, 0x8966, 0xe34b, 0x0, 0x0);
        gbc.writeMem(0x5ecf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 021F
        gbc.setState(0xc8a8, 0x5489, 0x30c0, 0x2fe2, 0x227a, 0xd4a2, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5489, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0xb2, gbc.readMem(0xc8a9));
        // CB B2 0220
        gbc.setState(0x59bf, 0x51f6, 0xd9a0, 0xfed6, 0x907b, 0x4f33, 0x1, 0x1);
        gbc.writeMem(0x59bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x51f6, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0221
        gbc.setState(0x601d, 0xc24, 0xa170, 0x3303, 0xf551, 0xde29, 0x1, 0x1);
        gbc.writeMem(0x601d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc24, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0222
        gbc.setState(0xbbd0, 0x9d9c, 0x2ca0, 0x23c8, 0x874d, 0xe030, 0x1, 0x0);
        gbc.writeMem(0xbbd0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d9c, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd0));
        EXPECT(0xb2, gbc.readMem(0xbbd1));
        // CB B2 0223
        gbc.setState(0xbe7a, 0x8fae, 0x5760, 0xcc6b, 0x1972, 0x9f8e, 0x1, 0x1);
        gbc.writeMem(0xbe7a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0xbe7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7a));
        EXPECT(0xb2, gbc.readMem(0xbe7b));
        // CB B2 0224
        gbc.setState(0x74cb, 0xfa78, 0x5b40, 0xad48, 0x5cfd, 0x60d6, 0x0, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa78, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0225
        gbc.setState(0xc74f, 0x938b, 0x700, 0x7329, 0x5892, 0xf146, 0x0, 0x0);
        gbc.writeMem(0xc74f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x938b, gbc.sp());
        EXPECT(0xc751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74f));
        EXPECT(0xb2, gbc.readMem(0xc750));
        // CB B2 0226
        gbc.setState(0x6d8b, 0x13fb, 0xf810, 0xc587, 0x870b, 0xbf32, 0x0, 0x0);
        gbc.writeMem(0x6d8b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x13fb, gbc.sp());
        EXPECT(0x6d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0227
        gbc.setState(0x1fe4, 0x74f8, 0x1a00, 0xf38d, 0x1f42, 0x99bf, 0x0, 0x1);
        gbc.writeMem(0x1fe4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x74f8, gbc.sp());
        EXPECT(0x1fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0228
        gbc.setState(0x914e, 0xc8f1, 0x4ce0, 0x9dd2, 0x28aa, 0xc1ff, 0x0, 0x0);
        gbc.writeMem(0x914e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914e));
        EXPECT(0xb2, gbc.readMem(0x914f));
        // CB B2 0229
        gbc.setState(0xd505, 0xc98c, 0x97c0, 0x4dfe, 0xd193, 0x3a58, 0x0, 0x1);
        gbc.writeMem(0xd505, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc98c, gbc.sp());
        EXPECT(0xd507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd505));
        EXPECT(0xb2, gbc.readMem(0xd506));
        // CB B2 022A
        gbc.setState(0x72db, 0xd35c, 0x38d0, 0xb915, 0xaeb4, 0x1c61, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd35c, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 022B
        gbc.setState(0x49ca, 0x6b6b, 0x5890, 0xec2, 0xb4c3, 0xc2e, 0x1, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b6b, gbc.sp());
        EXPECT(0x49cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 022C
        gbc.setState(0xeffb, 0xbd43, 0x7f00, 0x56bd, 0xef7c, 0xe824, 0x0, 0x0);
        gbc.writeMem(0xeffb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbd43, gbc.sp());
        EXPECT(0xeffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffb));
        EXPECT(0xb2, gbc.readMem(0xeffc));
        // CB B2 022D
        gbc.setState(0xb03c, 0x1f2d, 0xa7f0, 0xa613, 0x9347, 0xca6c, 0x1, 0x1);
        gbc.writeMem(0xb03c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0xb03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03c));
        EXPECT(0xb2, gbc.readMem(0xb03d));
        // CB B2 022E
        gbc.setState(0x6f59, 0x3f56, 0x9220, 0x986b, 0xc55d, 0x5927, 0x1, 0x1);
        gbc.writeMem(0x6f59, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f56, gbc.sp());
        EXPECT(0x6f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 022F
        gbc.setState(0x1831, 0x62f8, 0x7950, 0xaa27, 0x2fd, 0x999e, 0x1, 0x0);
        gbc.writeMem(0x1831, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x62f8, gbc.sp());
        EXPECT(0x1833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0230
        gbc.setState(0x33d9, 0xd985, 0x8a10, 0xf9ec, 0x205f, 0x75ff, 0x0, 0x0);
        gbc.writeMem(0x33d9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0231
        gbc.setState(0x5999, 0x7789, 0x3df0, 0x655d, 0xa4df, 0x4ec5, 0x1, 0x1);
        gbc.writeMem(0x5999, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7789, gbc.sp());
        EXPECT(0x599b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0232
        gbc.setState(0x165a, 0x2be1, 0x300, 0xe6f4, 0x46e6, 0xe6ce, 0x0, 0x1);
        gbc.writeMem(0x165a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2be1, gbc.sp());
        EXPECT(0x165c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0234
        gbc.setState(0x25d6, 0xe505, 0xf230, 0xc82d, 0xb14, 0x14e3, 0x0, 0x0);
        gbc.writeMem(0x25d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe505, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0235
        gbc.setState(0x3554, 0x3bbf, 0x3910, 0x1ca6, 0x5c3c, 0xd3b9, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3bbf, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0236
        gbc.setState(0xbf55, 0xc8cd, 0x7a70, 0xabf3, 0x4f51, 0xdad1, 0x1, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf55));
        EXPECT(0xb2, gbc.readMem(0xbf56));
        // CB B2 0237
        gbc.setState(0x7300, 0xc3cc, 0x27d0, 0x409e, 0x5e99, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0x7300, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc3cc, gbc.sp());
        EXPECT(0x7302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0238
        gbc.setState(0xced2, 0x186b, 0x5690, 0x3c75, 0x532a, 0x74b5, 0x1, 0x1);
        gbc.writeMem(0xced2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced2));
        EXPECT(0xb2, gbc.readMem(0xced3));
        // CB B2 0239
        gbc.setState(0x2369, 0x1acd, 0xb410, 0x947, 0xc512, 0x87bb, 0x1, 0x0);
        gbc.writeMem(0x2369, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1acd, gbc.sp());
        EXPECT(0x236b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 023A
        gbc.setState(0x7f89, 0xf1a0, 0x7810, 0x7c5b, 0x45e7, 0x2655, 0x1, 0x0);
        gbc.writeMem(0x7f89, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf1a0, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 023B
        gbc.setState(0x4445, 0x2de1, 0x8610, 0xb301, 0xb38d, 0x610a, 0x0, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 023C
        gbc.setState(0x2ddb, 0x876f, 0xcf00, 0xa1fe, 0x6f64, 0x422b, 0x1, 0x1);
        gbc.writeMem(0x2ddb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x876f, gbc.sp());
        EXPECT(0x2ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 023D
        gbc.setState(0xcd81, 0xeaa8, 0x6470, 0x568d, 0xf6fd, 0x807, 0x1, 0x1);
        gbc.writeMem(0xcd81, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeaa8, gbc.sp());
        EXPECT(0xcd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd81));
        EXPECT(0xb2, gbc.readMem(0xcd82));
        // CB B2 023E
        gbc.setState(0x1e50, 0x66c2, 0xb640, 0x1174, 0x3d22, 0xba55, 0x0, 0x0);
        gbc.writeMem(0x1e50, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x66c2, gbc.sp());
        EXPECT(0x1e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0240
        gbc.setState(0x6294, 0x8a3b, 0x8700, 0x6643, 0xe0fc, 0x1eab, 0x1, 0x0);
        gbc.writeMem(0x6294, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8a3b, gbc.sp());
        EXPECT(0x6296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0241
        gbc.setState(0x1505, 0xd887, 0xbd90, 0xc493, 0xb905, 0xaa82, 0x1, 0x1);
        gbc.writeMem(0x1505, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd887, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0242
        gbc.setState(0xc5a2, 0x6dd9, 0xd280, 0xb83e, 0x36bb, 0xac4a, 0x0, 0x0);
        gbc.writeMem(0xc5a2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a2));
        EXPECT(0xb2, gbc.readMem(0xc5a3));
        // CB B2 0243
        gbc.setState(0xc9ab, 0xb41c, 0xb420, 0xbc31, 0xc20b, 0x2822, 0x0, 0x1);
        gbc.writeMem(0xc9ab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xc9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ab));
        EXPECT(0xb2, gbc.readMem(0xc9ac));
        // CB B2 0244
        gbc.setState(0x161, 0xf28e, 0x4720, 0x4a0d, 0x4b86, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x161, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf28e, gbc.sp());
        EXPECT(0x163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0245
        gbc.setState(0xb8ea, 0x6682, 0xd870, 0xe04f, 0xc5f3, 0xec4b, 0x1, 0x1);
        gbc.writeMem(0xb8ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0xb8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ea));
        EXPECT(0xb2, gbc.readMem(0xb8eb));
        // CB B2 0246
        gbc.setState(0x5a91, 0x107c, 0x2cb0, 0x3b5f, 0xc4fb, 0x8d1e, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0247
        gbc.setState(0x859, 0xa2b8, 0x8d60, 0xbfca, 0xa6a7, 0x9fd, 0x0, 0x0);
        gbc.writeMem(0x859, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0248
        gbc.setState(0x3bbd, 0xf5df, 0xd2c0, 0xf737, 0x2cb2, 0x1e2, 0x1, 0x0);
        gbc.writeMem(0x3bbd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0249
        gbc.setState(0x49de, 0xcf86, 0x2c0, 0xa95, 0x7eb3, 0x232d, 0x0, 0x1);
        gbc.writeMem(0x49de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcf86, gbc.sp());
        EXPECT(0x49e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 024A
        gbc.setState(0xc270, 0xfb20, 0xebf0, 0x764b, 0x4f55, 0xca45, 0x1, 0x1);
        gbc.writeMem(0xc270, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb20, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc270));
        EXPECT(0xb2, gbc.readMem(0xc271));
        // CB B2 024B
        gbc.setState(0x3527, 0x2184, 0x4240, 0x417, 0xd936, 0x8484, 0x1, 0x0);
        gbc.writeMem(0x3527, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0x3529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 024C
        gbc.setState(0x1c8, 0xbd3e, 0xc6a0, 0x89, 0xdcbf, 0x6a29, 0x0, 0x0);
        gbc.writeMem(0x1c8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0x1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 024D
        gbc.setState(0x9cb7, 0x8628, 0x1c60, 0x66b, 0xad15, 0x4c3e, 0x0, 0x1);
        gbc.writeMem(0x9cb7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8628, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0xb2, gbc.readMem(0x9cb8));
        // CB B2 024E
        gbc.setState(0x7420, 0xd7f0, 0xa350, 0xe486, 0xba3b, 0xe4db, 0x0, 0x0);
        gbc.writeMem(0x7420, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd7f0, gbc.sp());
        EXPECT(0x7422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 024F
        gbc.setState(0x8df, 0x6ab5, 0x3620, 0xf9e7, 0xf4bd, 0x6334, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0250
        gbc.setState(0x5409, 0x9275, 0x9d0, 0x339b, 0x3e98, 0x8828, 0x0, 0x1);
        gbc.writeMem(0x5409, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9275, gbc.sp());
        EXPECT(0x540b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0251
        gbc.setState(0x2acc, 0xcd7a, 0x3970, 0xea56, 0x51f2, 0x1d86, 0x1, 0x0);
        gbc.writeMem(0x2acc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcd7a, gbc.sp());
        EXPECT(0x2ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0252
        gbc.setState(0x999c, 0x6012, 0x4590, 0xc1db, 0xd955, 0xb789, 0x1, 0x1);
        gbc.writeMem(0x999c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0x999e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999c));
        EXPECT(0xb2, gbc.readMem(0x999d));
        // CB B2 0253
        gbc.setState(0x7e9e, 0x48d3, 0x9ae0, 0x9c0b, 0x7a9, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0x7e9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x48d3, gbc.sp());
        EXPECT(0x7ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0254
        gbc.setState(0x2a96, 0x51b3, 0x13c0, 0xb909, 0x10a8, 0x9d3b, 0x0, 0x1);
        gbc.writeMem(0x2a96, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0x2a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0255
        gbc.setState(0xe1df, 0x3ef3, 0x24c0, 0x10c4, 0x6b61, 0xc4c5, 0x1, 0x0);
        gbc.writeMem(0xe1df, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3ef3, gbc.sp());
        EXPECT(0xe1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1df));
        EXPECT(0xb2, gbc.readMem(0xe1e0));
        // CB B2 0257
        gbc.setState(0x20b5, 0x2e94, 0xb770, 0xc631, 0x938d, 0x6776, 0x0, 0x0);
        gbc.writeMem(0x20b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2e94, gbc.sp());
        EXPECT(0x20b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0258
        gbc.setState(0xeb4d, 0x2aec, 0x2e10, 0x4f25, 0xcf16, 0xb562, 0x1, 0x1);
        gbc.writeMem(0xeb4d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0xeb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4d));
        EXPECT(0xb2, gbc.readMem(0xeb4e));
        // CB B2 0259
        gbc.setState(0xbef1, 0x3ed7, 0x4d0, 0x875e, 0x8bc3, 0xccd0, 0x1, 0x1);
        gbc.writeMem(0xbef1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3ed7, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef1));
        EXPECT(0xb2, gbc.readMem(0xbef2));
        // CB B2 025A
        gbc.setState(0x21f3, 0xab0f, 0x6120, 0x6cf9, 0xbdac, 0x84c1, 0x1, 0x1);
        gbc.writeMem(0x21f3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xab0f, gbc.sp());
        EXPECT(0x21f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 025B
        gbc.setState(0x2138, 0x6054, 0xc610, 0x42c8, 0x8956, 0x5bb9, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6054, gbc.sp());
        EXPECT(0x213a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 025C
        gbc.setState(0xc5b, 0xb376, 0x3120, 0x3320, 0x5979, 0xd370, 0x1, 0x1);
        gbc.writeMem(0xc5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0xc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 025D
        gbc.setState(0x40c0, 0xdd50, 0xad80, 0x342a, 0xbf86, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0x40c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdd50, gbc.sp());
        EXPECT(0x40c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 025E
        gbc.setState(0x3d61, 0xe615, 0x6920, 0x8e0b, 0x9102, 0x78e6, 0x1, 0x0);
        gbc.writeMem(0x3d61, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 025F
        gbc.setState(0xe088, 0x18a6, 0x8030, 0x49fb, 0x8c7b, 0xe587, 0x0, 0x0);
        gbc.writeMem(0xe088, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x18a6, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe088));
        EXPECT(0xb2, gbc.readMem(0xe089));
        // CB B2 0260
        gbc.setState(0x8da0, 0xd188, 0xeaa0, 0x49ae, 0xd1b0, 0x1847, 0x0, 0x1);
        gbc.writeMem(0x8da0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd188, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da0));
        EXPECT(0xb2, gbc.readMem(0x8da1));
        // CB B2 0261
        gbc.setState(0xac65, 0xedca, 0xf8e0, 0x5001, 0x770c, 0xcf2, 0x0, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xedca, gbc.sp());
        EXPECT(0xac67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac65));
        EXPECT(0xb2, gbc.readMem(0xac66));
        // CB B2 0262
        gbc.setState(0x4ea9, 0x3856, 0x5400, 0x3dee, 0x1180, 0x9c40, 0x0, 0x1);
        gbc.writeMem(0x4ea9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3856, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0264
        gbc.setState(0xafba, 0x686, 0x26e0, 0xd05a, 0x21f6, 0x8b8c, 0x1, 0x0);
        gbc.writeMem(0xafba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x686, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafba));
        EXPECT(0xb2, gbc.readMem(0xafbb));
        // CB B2 0265
        gbc.setState(0x24ce, 0x3b29, 0xebb0, 0x8246, 0xa552, 0x5f2e, 0x0, 0x1);
        gbc.writeMem(0x24ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3b29, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0267
        gbc.setState(0xa0d, 0x6c23, 0x9f0, 0xed7a, 0x783d, 0xcb83, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6c23, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0268
        gbc.setState(0x6469, 0xd495, 0x53d0, 0xe734, 0xd6a9, 0x9a9, 0x0, 0x1);
        gbc.writeMem(0x6469, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x646b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0269
        gbc.setState(0xc5f4, 0xac5f, 0x7000, 0x4259, 0xb5b3, 0x110e, 0x1, 0x0);
        gbc.writeMem(0xc5f4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0xc5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f4));
        EXPECT(0xb2, gbc.readMem(0xc5f5));
        // CB B2 026A
        gbc.setState(0x2f35, 0x4e5e, 0x86c0, 0x63f6, 0x44df, 0xd4ea, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 026B
        gbc.setState(0xa252, 0x5c1a, 0xfcb0, 0xce3, 0x8027, 0xf8f1, 0x0, 0x1);
        gbc.writeMem(0xa252, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa252));
        EXPECT(0xb2, gbc.readMem(0xa253));
        // CB B2 026D
        gbc.setState(0x76bf, 0x3f1d, 0x61e0, 0x7910, 0xd325, 0x7967, 0x0, 0x0);
        gbc.writeMem(0x76bf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3f1d, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 026E
        gbc.setState(0xdf80, 0x7e81, 0x3760, 0x5a14, 0x42f4, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0xdf80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7e81, gbc.sp());
        EXPECT(0xdf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf80));
        EXPECT(0xb2, gbc.readMem(0xdf81));
        // CB B2 026F
        gbc.setState(0x8c3, 0x7cb2, 0x58a0, 0xd2b2, 0xb855, 0xff48, 0x1, 0x0);
        gbc.writeMem(0x8c3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7cb2, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0270
        gbc.setState(0xc9cb, 0x89c, 0xf770, 0xa408, 0x6c02, 0xc44f, 0x0, 0x1);
        gbc.writeMem(0xc9cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0xc9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cb));
        EXPECT(0xb2, gbc.readMem(0xc9cc));
        // CB B2 0271
        gbc.setState(0xcbc5, 0xfeeb, 0x2f70, 0xf38e, 0x66d7, 0xf9f, 0x0, 0x1);
        gbc.writeMem(0xcbc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0xcbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc5));
        EXPECT(0xb2, gbc.readMem(0xcbc6));
        // CB B2 0273
        gbc.setState(0x8b87, 0xb955, 0xf770, 0x580b, 0x871, 0x42a4, 0x1, 0x1);
        gbc.writeMem(0x8b87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb955, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b87));
        EXPECT(0xb2, gbc.readMem(0x8b88));
        // CB B2 0274
        gbc.setState(0x350, 0x6cf6, 0x39a0, 0x2bb3, 0xdc4f, 0x7889, 0x1, 0x1);
        gbc.writeMem(0x350, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6cf6, gbc.sp());
        EXPECT(0x352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0275
        gbc.setState(0x3b93, 0xba32, 0xe7d0, 0xdd8c, 0x7f10, 0x836b, 0x1, 0x0);
        gbc.writeMem(0x3b93, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba32, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0276
        gbc.setState(0xd905, 0xa1b8, 0x3070, 0xab69, 0x9c3c, 0x1050, 0x0, 0x1);
        gbc.writeMem(0xd905, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa1b8, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd905));
        EXPECT(0xb2, gbc.readMem(0xd906));
        // CB B2 0277
        gbc.setState(0xe0b8, 0xc858, 0x5a20, 0xdbaa, 0x1a2e, 0xe380, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc858, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b8));
        EXPECT(0xb2, gbc.readMem(0xe0b9));
        // CB B2 0278
        gbc.setState(0x4f2e, 0x17e1, 0xa600, 0xdea2, 0x31cd, 0x13f, 0x1, 0x1);
        gbc.writeMem(0x4f2e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0x4f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0279
        gbc.setState(0x41c1, 0x7662, 0x2af0, 0x18e2, 0x4d83, 0x90f0, 0x1, 0x1);
        gbc.writeMem(0x41c1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0x41c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 027A
        gbc.setState(0xa40c, 0x9d40, 0x8260, 0x9e8a, 0x71b8, 0xb0cb, 0x0, 0x0);
        gbc.writeMem(0xa40c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40c));
        EXPECT(0xb2, gbc.readMem(0xa40d));
        // CB B2 027B
        gbc.setState(0x5176, 0x326d, 0x4e50, 0x971b, 0x2d1c, 0x7c7b, 0x1, 0x1);
        gbc.writeMem(0x5176, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x326d, gbc.sp());
        EXPECT(0x5178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 027C
        gbc.setState(0xc55f, 0x7c0b, 0x12c0, 0xf117, 0xd6b7, 0xd84b, 0x0, 0x0);
        gbc.writeMem(0xc55f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55f));
        EXPECT(0xb2, gbc.readMem(0xc560));
        // CB B2 027D
        gbc.setState(0xa125, 0x4f30, 0xde10, 0xeb5d, 0xdee4, 0x909, 0x1, 0x1);
        gbc.writeMem(0xa125, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4f30, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa125));
        EXPECT(0xb2, gbc.readMem(0xa126));
        // CB B2 027E
        gbc.setState(0x2b00, 0xb123, 0x1040, 0xa5bb, 0xd7bf, 0xf2a3, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x2b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 027F
        gbc.setState(0x421, 0x5962, 0x9ef0, 0x92dd, 0x48c4, 0xa81, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0280
        gbc.setState(0x5c61, 0xd84a, 0xd8c0, 0x9136, 0xa813, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd84a, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0282
        gbc.setState(0xafd2, 0x3eb6, 0x6100, 0xa66e, 0x46c6, 0x7d6b, 0x0, 0x0);
        gbc.writeMem(0xafd2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3eb6, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd2));
        EXPECT(0xb2, gbc.readMem(0xafd3));
        // CB B2 0283
        gbc.setState(0x6fea, 0x3d87, 0x1cf0, 0x848d, 0xe715, 0x6b58, 0x1, 0x1);
        gbc.writeMem(0x6fea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0284
        gbc.setState(0xc013, 0xf90a, 0x5940, 0x4be6, 0x4a1f, 0x751f, 0x0, 0x0);
        gbc.writeMem(0xc013, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0xc015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc013));
        EXPECT(0xb2, gbc.readMem(0xc014));
        // CB B2 0285
        gbc.setState(0xb7e7, 0x5a82, 0xe350, 0x2d94, 0xad29, 0xa927, 0x0, 0x1);
        gbc.writeMem(0xb7e7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0xb7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e7));
        EXPECT(0xb2, gbc.readMem(0xb7e8));
        // CB B2 0286
        gbc.setState(0x9cb3, 0xc6ec, 0xa360, 0x30e0, 0xf1a9, 0xb486, 0x1, 0x0);
        gbc.writeMem(0x9cb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb3));
        EXPECT(0xb2, gbc.readMem(0x9cb4));
        // CB B2 0287
        gbc.setState(0x5816, 0x6b91, 0x9130, 0x2a9e, 0xf2cc, 0x5f29, 0x0, 0x0);
        gbc.writeMem(0x5816, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6b91, gbc.sp());
        EXPECT(0x5818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0288
        gbc.setState(0x60c7, 0x7e58, 0xf6d0, 0xdb9f, 0x237f, 0x1a67, 0x1, 0x1);
        gbc.writeMem(0x60c7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7e58, gbc.sp());
        EXPECT(0x60c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0289
        gbc.setState(0x3106, 0x480b, 0xf00, 0xc5c9, 0x531, 0x8948, 0x1, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x480b, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 028A
        gbc.setState(0x8608, 0x1ae7, 0x6160, 0x33c1, 0x4536, 0x3ce2, 0x1, 0x1);
        gbc.writeMem(0x8608, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ae7, gbc.sp());
        EXPECT(0x860a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8608));
        EXPECT(0xb2, gbc.readMem(0x8609));
        // CB B2 028B
        gbc.setState(0x8df9, 0x5537, 0xb6b0, 0xfad6, 0xae17, 0x6a5c, 0x1, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x8dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df9));
        EXPECT(0xb2, gbc.readMem(0x8dfa));
        // CB B2 028C
        gbc.setState(0x2424, 0xde32, 0x3f90, 0xb71b, 0x86be, 0xeb3c, 0x1, 0x1);
        gbc.writeMem(0x2424, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xde32, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 028D
        gbc.setState(0x3f32, 0x632a, 0xe90, 0xd5a1, 0x1c, 0xbb95, 0x1, 0x0);
        gbc.writeMem(0x3f32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0x3f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 028E
        gbc.setState(0x29e8, 0xffc4, 0x2e00, 0x9b89, 0xf5bc, 0x8517, 0x0, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 028F
        gbc.setState(0x6bb3, 0x9af3, 0x34a0, 0x2adb, 0x4525, 0x2279, 0x0, 0x1);
        gbc.writeMem(0x6bb3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9af3, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0290
        gbc.setState(0x12ad, 0x9db8, 0x7720, 0x50d9, 0x7ece, 0x3523, 0x1, 0x1);
        gbc.writeMem(0x12ad, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9db8, gbc.sp());
        EXPECT(0x12af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0292
        gbc.setState(0x1523, 0xbb28, 0x4660, 0x3233, 0x9171, 0x5f88, 0x1, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0293
        gbc.setState(0xd28b, 0x39ef, 0x4a20, 0xee9c, 0x955b, 0xa682, 0x0, 0x1);
        gbc.writeMem(0xd28b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28b));
        EXPECT(0xb2, gbc.readMem(0xd28c));
        // CB B2 0294
        gbc.setState(0x6cd2, 0x2482, 0x4c90, 0x53bd, 0xff0e, 0x490a, 0x0, 0x1);
        gbc.writeMem(0x6cd2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2482, gbc.sp());
        EXPECT(0x6cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0295
        gbc.setState(0xcddb, 0xb15, 0x9950, 0xbab1, 0xc4a8, 0x2249, 0x0, 0x1);
        gbc.writeMem(0xcddb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb15, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddb));
        EXPECT(0xb2, gbc.readMem(0xcddc));
        // CB B2 0296
        gbc.setState(0x9fee, 0x96f2, 0xda40, 0xf899, 0x3748, 0x5741, 0x1, 0x1);
        gbc.writeMem(0x9fee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x9ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fee));
        EXPECT(0xb2, gbc.readMem(0x9fef));
        // CB B2 0297
        gbc.setState(0x3af8, 0x25b5, 0xb80, 0x52e3, 0xa032, 0x164e, 0x0, 0x0);
        gbc.writeMem(0x3af8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x25b5, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0298
        gbc.setState(0xd264, 0xd26d, 0x93e0, 0x1c6f, 0xc800, 0x62f1, 0x0, 0x1);
        gbc.writeMem(0xd264, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd26d, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd264));
        EXPECT(0xb2, gbc.readMem(0xd265));
        // CB B2 0299
        gbc.setState(0xb4de, 0x2e85, 0x49d0, 0xc701, 0x8b4a, 0x5fd0, 0x0, 0x0);
        gbc.writeMem(0xb4de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4de));
        EXPECT(0xb2, gbc.readMem(0xb4df));
        // CB B2 029B
        gbc.setState(0x2bbe, 0xb790, 0x4c70, 0x560, 0xe347, 0x81c4, 0x1, 0x0);
        gbc.writeMem(0x2bbe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb790, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 029C
        gbc.setState(0xa613, 0x3b40, 0xd840, 0xccda, 0x3055, 0xbffe, 0x1, 0x0);
        gbc.writeMem(0xa613, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0xa615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa613));
        EXPECT(0xb2, gbc.readMem(0xa614));
        // CB B2 029D
        gbc.setState(0x669c, 0x8b7a, 0x9020, 0x6e13, 0x7e6d, 0x76d2, 0x0, 0x1);
        gbc.writeMem(0x669c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8b7a, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 029E
        gbc.setState(0xcd07, 0xe0df, 0x58e0, 0xc9c8, 0xc6e5, 0x33ef, 0x0, 0x1);
        gbc.writeMem(0xcd07, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe0df, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xb2, gbc.readMem(0xcd08));
        // CB B2 029F
        gbc.setState(0x218d, 0x5812, 0x34f0, 0xa5a5, 0xc455, 0xa015, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5812, gbc.sp());
        EXPECT(0x218f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02A0
        gbc.setState(0x1833, 0x198b, 0x5b70, 0x34bb, 0x743, 0x40f, 0x0, 0x0);
        gbc.writeMem(0x1833, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x198b, gbc.sp());
        EXPECT(0x1835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02A1
        gbc.setState(0xc27c, 0xd6b7, 0x1f00, 0x5690, 0x7f32, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0xc27c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd6b7, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27c));
        EXPECT(0xb2, gbc.readMem(0xc27d));
        // CB B2 02A2
        gbc.setState(0x6751, 0xb2a7, 0x7fc0, 0xac2, 0x5ad5, 0xf43a, 0x0, 0x0);
        gbc.writeMem(0x6751, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb2a7, gbc.sp());
        EXPECT(0x6753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02A4
        gbc.setState(0xbc7e, 0x8f9b, 0x3090, 0x954b, 0xb30, 0x7007, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8f9b, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7e));
        EXPECT(0xb2, gbc.readMem(0xbc7f));
        // CB B2 02A5
        gbc.setState(0x9eaf, 0x6f28, 0xd4b0, 0xc741, 0x7351, 0xa9d, 0x0, 0x1);
        gbc.writeMem(0x9eaf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f28, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eaf));
        EXPECT(0xb2, gbc.readMem(0x9eb0));
        // CB B2 02A6
        gbc.setState(0x7bac, 0x49c1, 0xe400, 0x68d8, 0xea7a, 0x99dc, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x49c1, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02A8
        gbc.setState(0x5f80, 0x43c9, 0x3340, 0xcfd1, 0xf53c, 0x2d9a, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0x5f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02A9
        gbc.setState(0x309b, 0xeba0, 0x1040, 0x6ef0, 0xcabe, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x309b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeba0, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02AA
        gbc.setState(0xd7e4, 0xd2f2, 0x43b0, 0x7886, 0x6f7a, 0xfa56, 0x0, 0x0);
        gbc.writeMem(0xd7e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd2f2, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e4));
        EXPECT(0xb2, gbc.readMem(0xd7e5));
        // CB B2 02AB
        gbc.setState(0x3c82, 0xc085, 0xd260, 0xfee3, 0x1885, 0x907b, 0x1, 0x1);
        gbc.writeMem(0x3c82, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x3c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02AD
        gbc.setState(0x10cb, 0x2df5, 0x5f00, 0xfab1, 0x29c4, 0xe3bb, 0x1, 0x0);
        gbc.writeMem(0x10cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02AE
        gbc.setState(0x4e46, 0x2121, 0xb3b0, 0xe7dd, 0x13cc, 0xf68c, 0x0, 0x1);
        gbc.writeMem(0x4e46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02AF
        gbc.setState(0x6e96, 0x265e, 0xcd50, 0xa9cd, 0x6bba, 0x4e81, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0x6e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02B0
        gbc.setState(0x8688, 0x860e, 0xeef0, 0x9a06, 0x6f21, 0xa31d, 0x0, 0x0);
        gbc.writeMem(0x8688, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x860e, gbc.sp());
        EXPECT(0x868a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8688));
        EXPECT(0xb2, gbc.readMem(0x8689));
        // CB B2 02B1
        gbc.setState(0xd6d6, 0x16b7, 0x5cc0, 0xf9a9, 0x46, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0xd6d6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0xd6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d6));
        EXPECT(0xb2, gbc.readMem(0xd6d7));
        // CB B2 02B2
        gbc.setState(0x3eab, 0xedeb, 0xb360, 0xee0e, 0xc569, 0x6eb7, 0x1, 0x0);
        gbc.writeMem(0x3eab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xedeb, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02B3
        gbc.setState(0xde87, 0xb835, 0xefa0, 0xcb7f, 0x1b2b, 0xd86a, 0x0, 0x1);
        gbc.writeMem(0xde87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb835, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde87));
        EXPECT(0xb2, gbc.readMem(0xde88));
        // CB B2 02B4
        gbc.setState(0xd33d, 0xf329, 0x7850, 0xa78, 0x1b2, 0x58a5, 0x1, 0x1);
        gbc.writeMem(0xd33d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0xd33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33d));
        EXPECT(0xb2, gbc.readMem(0xd33e));
        // CB B2 02B5
        gbc.setState(0x9228, 0xf60c, 0xe30, 0x72b5, 0x24d9, 0xdbf3, 0x1, 0x1);
        gbc.writeMem(0x9228, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0x922a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9228));
        EXPECT(0xb2, gbc.readMem(0x9229));
        // CB B2 02B6
        gbc.setState(0x38ea, 0x64a7, 0x5d40, 0x9e48, 0xe187, 0x15b2, 0x1, 0x1);
        gbc.writeMem(0x38ea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x64a7, gbc.sp());
        EXPECT(0x38ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02B7
        gbc.setState(0x2f13, 0x204f, 0x4e40, 0xa866, 0x90d2, 0x88d2, 0x0, 0x1);
        gbc.writeMem(0x2f13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02B8
        gbc.setState(0x253e, 0x41ae, 0x9610, 0x400b, 0x7939, 0xeec6, 0x0, 0x0);
        gbc.writeMem(0x253e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x41ae, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02B9
        gbc.setState(0x591, 0xf365, 0x9200, 0x3642, 0xc99c, 0x7b08, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0x593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02BA
        gbc.setState(0x80fb, 0xba73, 0x55e0, 0x67c2, 0xe6b2, 0x41d4, 0x1, 0x0);
        gbc.writeMem(0x80fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xba73, gbc.sp());
        EXPECT(0x80fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fb));
        EXPECT(0xb2, gbc.readMem(0x80fc));
        // CB B2 02BB
        gbc.setState(0xa2c0, 0xfeb8, 0xbdd0, 0x9ae2, 0x1bc4, 0xa9aa, 0x0, 0x1);
        gbc.writeMem(0xa2c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfeb8, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c0));
        EXPECT(0xb2, gbc.readMem(0xa2c1));
        // CB B2 02BC
        gbc.setState(0x17aa, 0x5ab, 0x9c80, 0x2c3b, 0x9a67, 0xcd8b, 0x1, 0x1);
        gbc.writeMem(0x17aa, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5ab, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02BD
        gbc.setState(0x6e91, 0xf7da, 0x9780, 0x89dd, 0x5b3a, 0x2b15, 0x1, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf7da, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02BE
        gbc.setState(0x26ca, 0x5c92, 0x4060, 0x846e, 0xd257, 0x106a, 0x1, 0x1);
        gbc.writeMem(0x26ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c92, gbc.sp());
        EXPECT(0x26cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02BF
        gbc.setState(0xa6fe, 0xe5ba, 0xad00, 0xf911, 0x41b7, 0xcc3b, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe5ba, gbc.sp());
        EXPECT(0xa700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fe));
        EXPECT(0xb2, gbc.readMem(0xa6ff));
        // CB B2 02C0
        gbc.setState(0xe269, 0xfac2, 0x8c0, 0xd5a0, 0x9a5f, 0xa654, 0x1, 0x0);
        gbc.writeMem(0xe269, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0xe26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe269));
        EXPECT(0xb2, gbc.readMem(0xe26a));
        // CB B2 02C1
        gbc.setState(0xb050, 0x14b5, 0x5d30, 0x681b, 0xc50b, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0xb050, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0xb052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb050));
        EXPECT(0xb2, gbc.readMem(0xb051));
        // CB B2 02C2
        gbc.setState(0x8f1d, 0x2bf9, 0xe850, 0xc45c, 0x6c2e, 0x7c38, 0x1, 0x1);
        gbc.writeMem(0x8f1d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0x8f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1d));
        EXPECT(0xb2, gbc.readMem(0x8f1e));
        // CB B2 02C3
        gbc.setState(0xcdc9, 0x9bb, 0xd380, 0x924d, 0xbfdd, 0x4b4a, 0x1, 0x1);
        gbc.writeMem(0xcdc9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0xcdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc9));
        EXPECT(0xb2, gbc.readMem(0xcdca));
        // CB B2 02C4
        gbc.setState(0x39fd, 0xefae, 0xafa0, 0x4ce3, 0x1efd, 0x16b3, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02C5
        gbc.setState(0x94af, 0x655f, 0xf240, 0x5ed7, 0xdf62, 0xfd23, 0x0, 0x0);
        gbc.writeMem(0x94af, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x655f, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94af));
        EXPECT(0xb2, gbc.readMem(0x94b0));
        // CB B2 02C6
        gbc.setState(0x1ca0, 0xe49, 0xb6f0, 0xa800, 0x2026, 0x44cf, 0x1, 0x1);
        gbc.writeMem(0x1ca0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe49, gbc.sp());
        EXPECT(0x1ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02C7
        gbc.setState(0x8245, 0xcee0, 0x5190, 0x5105, 0x6833, 0xf2ac, 0x0, 0x0);
        gbc.writeMem(0x8245, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcee0, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8245));
        EXPECT(0xb2, gbc.readMem(0x8246));
        // CB B2 02C8
        gbc.setState(0x32ca, 0xba08, 0xee30, 0xca30, 0x3545, 0xeff6, 0x0, 0x0);
        gbc.writeMem(0x32ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xba08, gbc.sp());
        EXPECT(0x32cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02C9
        gbc.setState(0x8ccb, 0x8d87, 0xab00, 0x5bd9, 0x83ba, 0xd7da, 0x0, 0x0);
        gbc.writeMem(0x8ccb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d87, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccb));
        EXPECT(0xb2, gbc.readMem(0x8ccc));
        // CB B2 02CA
        gbc.setState(0x3bb9, 0x2f5, 0x7d0, 0x72e2, 0xffd, 0x5a27, 0x0, 0x1);
        gbc.writeMem(0x3bb9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0x3bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02CB
        gbc.setState(0xe6be, 0x9eef, 0x4370, 0xd4d3, 0xc206, 0xa225, 0x0, 0x0);
        gbc.writeMem(0xe6be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9eef, gbc.sp());
        EXPECT(0xe6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6be));
        EXPECT(0xb2, gbc.readMem(0xe6bf));
        // CB B2 02CC
        gbc.setState(0xd7be, 0x9320, 0x8e80, 0x8582, 0x9f11, 0x61a9, 0x0, 0x1);
        gbc.writeMem(0xd7be, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9320, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7be));
        EXPECT(0xb2, gbc.readMem(0xd7bf));
        // CB B2 02CD
        gbc.setState(0x8c62, 0x125a, 0x5fa0, 0xb84e, 0x397b, 0xaf42, 0x0, 0x0);
        gbc.writeMem(0x8c62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x8c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c62));
        EXPECT(0xb2, gbc.readMem(0x8c63));
        // CB B2 02CF
        gbc.setState(0x1ba8, 0xdc19, 0xc980, 0xdb30, 0x682b, 0xa58c, 0x1, 0x1);
        gbc.writeMem(0x1ba8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdc19, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02D0
        gbc.setState(0x4ca5, 0xc5d, 0x90c0, 0xfdf3, 0x6d7d, 0xe7ae, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc5d, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02D1
        gbc.setState(0xc532, 0x279, 0x6940, 0xf70c, 0x1a57, 0x37e, 0x0, 0x1);
        gbc.writeMem(0xc532, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x279, gbc.sp());
        EXPECT(0xc534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc532));
        EXPECT(0xb2, gbc.readMem(0xc533));
        // CB B2 02D2
        gbc.setState(0x8f2b, 0x77e6, 0x7440, 0x4075, 0x7c9b, 0xf0e2, 0x0, 0x0);
        gbc.writeMem(0x8f2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0x8f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2b));
        EXPECT(0xb2, gbc.readMem(0x8f2c));
        // CB B2 02D3
        gbc.setState(0xe45a, 0xd449, 0x5850, 0x832, 0x7407, 0x5efe, 0x0, 0x0);
        gbc.writeMem(0xe45a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd449, gbc.sp());
        EXPECT(0xe45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45a));
        EXPECT(0xb2, gbc.readMem(0xe45b));
        // CB B2 02D4
        gbc.setState(0xb0c0, 0xa3b7, 0xf9f0, 0xb7cd, 0xdbb8, 0x200b, 0x0, 0x1);
        gbc.writeMem(0xb0c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa3b7, gbc.sp());
        EXPECT(0xb0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c0));
        EXPECT(0xb2, gbc.readMem(0xb0c1));
        // CB B2 02D5
        gbc.setState(0x64ab, 0x31, 0x20e0, 0x4d6c, 0xea15, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x64ab, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x31, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02D6
        gbc.setState(0x5f67, 0xb316, 0xdc40, 0xb2b2, 0x3e89, 0x1ca5, 0x0, 0x1);
        gbc.writeMem(0x5f67, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb316, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02D7
        gbc.setState(0x8c8a, 0xc27, 0xa220, 0xbc96, 0x3c83, 0x3160, 0x0, 0x1);
        gbc.writeMem(0x8c8a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8a));
        EXPECT(0xb2, gbc.readMem(0x8c8b));
        // CB B2 02D8
        gbc.setState(0x5015, 0xaf11, 0xf560, 0x6d5c, 0xff38, 0xa670, 0x0, 0x1);
        gbc.writeMem(0x5015, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf11, gbc.sp());
        EXPECT(0x5017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02D9
        gbc.setState(0x54cf, 0x48ab, 0x3f50, 0x5839, 0xa601, 0x70c9, 0x1, 0x1);
        gbc.writeMem(0x54cf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x48ab, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02DA
        gbc.setState(0xcb0, 0xcd, 0xbc00, 0xa3dc, 0x15ce, 0xe098, 0x1, 0x1);
        gbc.writeMem(0xcb0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02DB
        gbc.setState(0xe304, 0xa614, 0xc9a0, 0xb245, 0x6ffe, 0x31a7, 0x0, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0xb2, gbc.readMem(0xe305));
        // CB B2 02DC
        gbc.setState(0xe68, 0xcf3f, 0xd530, 0xc58a, 0x69a9, 0x6451, 0x0, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02DD
        gbc.setState(0xa40b, 0x6bba, 0xdfd0, 0x12d4, 0xb87c, 0x1f9d, 0x1, 0x0);
        gbc.writeMem(0xa40b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0xa40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40b));
        EXPECT(0xb2, gbc.readMem(0xa40c));
        // CB B2 02DE
        gbc.setState(0x4862, 0x8bbf, 0xee50, 0x606e, 0x583, 0x17c3, 0x1, 0x1);
        gbc.writeMem(0x4862, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x4864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02DF
        gbc.setState(0x5f28, 0xe5a8, 0x8e0, 0x2cc4, 0x7c79, 0x9c6d, 0x0, 0x1);
        gbc.writeMem(0x5f28, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe5a8, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02E1
        gbc.setState(0xa52f, 0x32dc, 0xa900, 0x8a9b, 0x1a0f, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52f));
        EXPECT(0xb2, gbc.readMem(0xa530));
        // CB B2 02E2
        gbc.setState(0xad60, 0x8166, 0x2e70, 0xe723, 0xb398, 0xe8b0, 0x1, 0x0);
        gbc.writeMem(0xad60, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8166, gbc.sp());
        EXPECT(0xad62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad60));
        EXPECT(0xb2, gbc.readMem(0xad61));
        // CB B2 02E3
        gbc.setState(0x7fd6, 0x25dd, 0xce80, 0xa220, 0xe7f1, 0x495c, 0x0, 0x1);
        gbc.writeMem(0x7fd6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x25dd, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02E4
        gbc.setState(0x2c80, 0x61bc, 0xf300, 0xafa2, 0x1bc3, 0xf6c3, 0x0, 0x1);
        gbc.writeMem(0x2c80, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x2c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02E5
        gbc.setState(0xad92, 0x2537, 0xaf70, 0x89d, 0xa739, 0x56e5, 0x1, 0x1);
        gbc.writeMem(0xad92, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2537, gbc.sp());
        EXPECT(0xad94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad92));
        EXPECT(0xb2, gbc.readMem(0xad93));
        // CB B2 02E7
        gbc.setState(0xe692, 0x5a04, 0x2750, 0x1fcd, 0xeac, 0x508, 0x0, 0x0);
        gbc.writeMem(0xe692, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe692));
        EXPECT(0xb2, gbc.readMem(0xe693));
        // CB B2 02E8
        gbc.setState(0x5f6e, 0xc20d, 0xbc90, 0x3321, 0x44a6, 0x3c68, 0x1, 0x0);
        gbc.writeMem(0x5f6e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc20d, gbc.sp());
        EXPECT(0x5f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02EA
        gbc.setState(0x5f57, 0xc5d5, 0xe820, 0x5de1, 0x2379, 0x2a2d, 0x1, 0x1);
        gbc.writeMem(0x5f57, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc5d5, gbc.sp());
        EXPECT(0x5f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02EB
        gbc.setState(0x408d, 0x32a7, 0x5790, 0x525, 0xef3f, 0xea27, 0x0, 0x1);
        gbc.writeMem(0x408d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02EC
        gbc.setState(0x840f, 0x3506, 0x4d20, 0x8f0c, 0xf477, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x840f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3506, gbc.sp());
        EXPECT(0x8411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840f));
        EXPECT(0xb2, gbc.readMem(0x8410));
        // CB B2 02ED
        gbc.setState(0xaa3d, 0x7eb7, 0x9b70, 0xbce8, 0x3c5e, 0xc674, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0xaa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3d));
        EXPECT(0xb2, gbc.readMem(0xaa3e));
        // CB B2 02EE
        gbc.setState(0x17f2, 0x4d5b, 0xb0d0, 0x45a5, 0xba12, 0xae2c, 0x0, 0x0);
        gbc.writeMem(0x17f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x17f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02EF
        gbc.setState(0xd1f1, 0xdcf7, 0x8470, 0x2c78, 0xeb5e, 0x4cf0, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdcf7, gbc.sp());
        EXPECT(0xd1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f1));
        EXPECT(0xb2, gbc.readMem(0xd1f2));
        // CB B2 02F0
        gbc.setState(0xa50a, 0x6e1b, 0x6e40, 0xa4ff, 0xd19a, 0xc175, 0x0, 0x0);
        gbc.writeMem(0xa50a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6e1b, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50a));
        EXPECT(0xb2, gbc.readMem(0xa50b));
        // CB B2 02F1
        gbc.setState(0xdfe2, 0x2c1c, 0xbcd0, 0x197d, 0xc69e, 0x16c9, 0x1, 0x0);
        gbc.writeMem(0xdfe2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2c1c, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe2));
        EXPECT(0xb2, gbc.readMem(0xdfe3));
        // CB B2 02F2
        gbc.setState(0x5722, 0xcebf, 0x8c80, 0x182, 0x4ff9, 0x1389, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcebf, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02F3
        gbc.setState(0xce6c, 0x5704, 0x4550, 0x694d, 0xd80c, 0xf556, 0x1, 0x0);
        gbc.writeMem(0xce6c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0xce6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6c));
        EXPECT(0xb2, gbc.readMem(0xce6d));
        // CB B2 02F4
        gbc.setState(0xe298, 0xbb3f, 0xb4d0, 0x4b1e, 0xc45, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0xe298, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbb3f, gbc.sp());
        EXPECT(0xe29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe298));
        EXPECT(0xb2, gbc.readMem(0xe299));
        // CB B2 02F5
        gbc.setState(0xcd39, 0x2d1e, 0xfb20, 0xc526, 0xe620, 0xcb09, 0x0, 0x1);
        gbc.writeMem(0xcd39, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d1e, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd39));
        EXPECT(0xb2, gbc.readMem(0xcd3a));
        // CB B2 02F6
        gbc.setState(0xaef1, 0x8abd, 0x6d90, 0x7178, 0x5a8a, 0x18c4, 0x0, 0x0);
        gbc.writeMem(0xaef1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0xaef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef1));
        EXPECT(0xb2, gbc.readMem(0xaef2));
        // CB B2 02F7
        gbc.setState(0x9f58, 0xb1f9, 0xc350, 0xcd24, 0xc202, 0xdb76, 0x0, 0x0);
        gbc.writeMem(0x9f58, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb1f9, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f58));
        EXPECT(0xb2, gbc.readMem(0x9f59));
        // CB B2 02F9
        gbc.setState(0x154b, 0x288, 0xd480, 0x28eb, 0x6ef3, 0xc4f1, 0x0, 0x0);
        gbc.writeMem(0x154b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x288, gbc.sp());
        EXPECT(0x154d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 02FA
        gbc.setState(0x5112, 0x4bc2, 0xd1f0, 0x8b58, 0xbb6, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x5112, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4bc2, gbc.sp());
        EXPECT(0x5114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02FC
        gbc.setState(0x7859, 0xbaad, 0xd010, 0x59b3, 0xd79a, 0x659e, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 02FD
        gbc.setState(0x9804, 0x5f37, 0x560, 0xc301, 0xf21, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5f37, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0xb2, gbc.readMem(0x9805));
        // CB B2 02FE
        gbc.setState(0x8824, 0xf5d2, 0xa120, 0x68a2, 0x984b, 0x2e6a, 0x1, 0x0);
        gbc.writeMem(0x8824, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf5d2, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0xb2, gbc.readMem(0x8825));
        // CB B2 0300
        gbc.setState(0x74fe, 0xbc8c, 0xf2f0, 0x59ad, 0xaa2b, 0x98e9, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0301
        gbc.setState(0x255d, 0x3fe8, 0xa0, 0x783c, 0xfa96, 0x16e1, 0x0, 0x0);
        gbc.writeMem(0x255d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0x255f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0302
        gbc.setState(0xded2, 0x40f3, 0x29f0, 0x228a, 0xd41f, 0x8126, 0x1, 0x1);
        gbc.writeMem(0xded2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x40f3, gbc.sp());
        EXPECT(0xded4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded2));
        EXPECT(0xb2, gbc.readMem(0xded3));
        // CB B2 0303
        gbc.setState(0xaaea, 0x1273, 0x4330, 0x75a6, 0x483f, 0x3a6f, 0x1, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaea));
        EXPECT(0xb2, gbc.readMem(0xaaeb));
        // CB B2 0304
        gbc.setState(0x67e4, 0xb465, 0xbae0, 0xae38, 0xfea0, 0x5dce, 0x1, 0x0);
        gbc.writeMem(0x67e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0x67e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0305
        gbc.setState(0x8c00, 0x6087, 0x6f80, 0x7eb1, 0xc3b9, 0x40bc, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6087, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c00));
        EXPECT(0xb2, gbc.readMem(0x8c01));
        // CB B2 0306
        gbc.setState(0x5833, 0xf320, 0xc710, 0x7275, 0x8070, 0xe891, 0x1, 0x1);
        gbc.writeMem(0x5833, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0x5835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0307
        gbc.setState(0x425d, 0x36dd, 0x1620, 0x3e8f, 0x7160, 0x443f, 0x0, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x36dd, gbc.sp());
        EXPECT(0x425f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0308
        gbc.setState(0x18ec, 0xa663, 0x5a00, 0xb0e3, 0xd0bc, 0xac94, 0x1, 0x0);
        gbc.writeMem(0x18ec, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa663, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0309
        gbc.setState(0x2d08, 0x29d5, 0x52d0, 0xd71d, 0xa2a6, 0xa1fe, 0x0, 0x0);
        gbc.writeMem(0x2d08, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x29d5, gbc.sp());
        EXPECT(0x2d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 030A
        gbc.setState(0xeb4e, 0xed7e, 0xe640, 0xc331, 0x412a, 0xeec6, 0x0, 0x0);
        gbc.writeMem(0xeb4e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xed7e, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4e));
        EXPECT(0xb2, gbc.readMem(0xeb4f));
        // CB B2 030B
        gbc.setState(0xe732, 0x30c3, 0xdd00, 0x57e7, 0x4d1d, 0x7e98, 0x1, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x30c3, gbc.sp());
        EXPECT(0xe734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe732));
        EXPECT(0xb2, gbc.readMem(0xe733));
        // CB B2 030C
        gbc.setState(0xef7d, 0xb747, 0x3200, 0xe2a3, 0x2171, 0x914a, 0x0, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0xb2, gbc.readMem(0xef7e));
        // CB B2 030D
        gbc.setState(0x6745, 0x23d4, 0xf0b0, 0x9ce3, 0xe9a2, 0x93bb, 0x0, 0x0);
        gbc.writeMem(0x6745, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x23d4, gbc.sp());
        EXPECT(0x6747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 030E
        gbc.setState(0x304b, 0xb693, 0x4220, 0xf270, 0xee45, 0xd66f, 0x0, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 030F
        gbc.setState(0x9170, 0xaef0, 0x2440, 0xf3d5, 0x8f56, 0x765f, 0x0, 0x0);
        gbc.writeMem(0x9170, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaef0, gbc.sp());
        EXPECT(0x9172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9170));
        EXPECT(0xb2, gbc.readMem(0x9171));
        // CB B2 0310
        gbc.setState(0x72db, 0xc07a, 0x100, 0xa4a7, 0xd407, 0x2c7c, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0311
        gbc.setState(0xb3cc, 0xe855, 0x2660, 0xdca7, 0x5dc1, 0xbcde, 0x1, 0x1);
        gbc.writeMem(0xb3cc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe855, gbc.sp());
        EXPECT(0xb3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cc));
        EXPECT(0xb2, gbc.readMem(0xb3cd));
        // CB B2 0312
        gbc.setState(0xcfef, 0xdc73, 0xf470, 0x51c2, 0x12c9, 0x8d0a, 0x0, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0xcff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfef));
        EXPECT(0xb2, gbc.readMem(0xcff0));
        // CB B2 0313
        gbc.setState(0xdd3, 0x9a3c, 0xb260, 0x7574, 0xaa4e, 0x16a5, 0x0, 0x0);
        gbc.writeMem(0xdd3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9a3c, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0314
        gbc.setState(0xb713, 0x4dfd, 0x8310, 0xe383, 0xe2b1, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xb713, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0xb715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb713));
        EXPECT(0xb2, gbc.readMem(0xb714));
        // CB B2 0315
        gbc.setState(0x2dfe, 0xe9db, 0x6330, 0x2561, 0xf4da, 0x37c1, 0x1, 0x1);
        gbc.writeMem(0x2dfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe9db, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0316
        gbc.setState(0xceaf, 0x7cab, 0xd490, 0x90a9, 0x51ee, 0x5bf3, 0x1, 0x0);
        gbc.writeMem(0xceaf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0xceb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaf));
        EXPECT(0xb2, gbc.readMem(0xceb0));
        // CB B2 0317
        gbc.setState(0x8a41, 0x748d, 0x1590, 0x6477, 0xcb89, 0x3542, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x748d, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a41));
        EXPECT(0xb2, gbc.readMem(0x8a42));
        // CB B2 0318
        gbc.setState(0x10cb, 0xbd8f, 0x7040, 0x20a8, 0xa538, 0xca33, 0x1, 0x1);
        gbc.writeMem(0x10cb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0319
        gbc.setState(0x3b2b, 0x5959, 0xc990, 0x5348, 0xadd, 0x2334, 0x1, 0x1);
        gbc.writeMem(0x3b2b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 031A
        gbc.setState(0x5d32, 0xe210, 0x4960, 0x7485, 0xce4e, 0x8b73, 0x0, 0x0);
        gbc.writeMem(0x5d32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 031B
        gbc.setState(0x73f0, 0x1fde, 0x25e0, 0xb0c7, 0xe603, 0xba7d, 0x1, 0x1);
        gbc.writeMem(0x73f0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1fde, gbc.sp());
        EXPECT(0x73f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 031C
        gbc.setState(0x3485, 0x5cc6, 0x47c0, 0x219, 0xf882, 0xb9e2, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 031D
        gbc.setState(0x5474, 0x7670, 0x3ee0, 0xfd2a, 0x74b7, 0x8c2e, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7670, gbc.sp());
        EXPECT(0x5476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 031E
        gbc.setState(0xbe03, 0xe40d, 0x5ea0, 0x19e0, 0xd2b0, 0x9ae3, 0x1, 0x1);
        gbc.writeMem(0xbe03, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe40d, gbc.sp());
        EXPECT(0xbe05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe03));
        EXPECT(0xb2, gbc.readMem(0xbe04));
        // CB B2 031F
        gbc.setState(0x4c73, 0x65b2, 0x1340, 0x89a1, 0x3e64, 0x4ca3, 0x1, 0x1);
        gbc.writeMem(0x4c73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x65b2, gbc.sp());
        EXPECT(0x4c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0320
        gbc.setState(0xcb38, 0xdb1a, 0x7770, 0xc077, 0x16f2, 0xc708, 0x1, 0x1);
        gbc.writeMem(0xcb38, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb1a, gbc.sp());
        EXPECT(0xcb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb38));
        EXPECT(0xb2, gbc.readMem(0xcb39));
        // CB B2 0321
        gbc.setState(0xc92b, 0xf83f, 0xc730, 0xd431, 0x137e, 0xa341, 0x0, 0x1);
        gbc.writeMem(0xc92b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0xc92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92b));
        EXPECT(0xb2, gbc.readMem(0xc92c));
        // CB B2 0322
        gbc.setState(0x6e75, 0x8182, 0x2f90, 0x6cd2, 0xf5b4, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x6e75, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0x6e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0323
        gbc.setState(0x2ee, 0xa26a, 0xcce0, 0xf139, 0xb7, 0x7887, 0x0, 0x0);
        gbc.writeMem(0x2ee, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0324
        gbc.setState(0x1867, 0x2bef, 0x13b0, 0x6cc1, 0xce15, 0xc78c, 0x0, 0x0);
        gbc.writeMem(0x1867, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2bef, gbc.sp());
        EXPECT(0x1869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0325
        gbc.setState(0x70dc, 0x3049, 0x8720, 0x6d52, 0x798, 0x3fb3, 0x0, 0x0);
        gbc.writeMem(0x70dc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3049, gbc.sp());
        EXPECT(0x70de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0326
        gbc.setState(0xb2d, 0x7f7e, 0x50b0, 0xcea4, 0xac47, 0x1b5c, 0x0, 0x1);
        gbc.writeMem(0xb2d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7f7e, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0327
        gbc.setState(0xa8d8, 0x1d9b, 0x3eb0, 0x97bc, 0x5c49, 0xd47f, 0x0, 0x1);
        gbc.writeMem(0xa8d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d8));
        EXPECT(0xb2, gbc.readMem(0xa8d9));
        // CB B2 0328
        gbc.setState(0xdf3, 0x117b, 0xf790, 0x238b, 0xb21f, 0x3a16, 0x1, 0x1);
        gbc.writeMem(0xdf3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x117b, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0329
        gbc.setState(0x9d62, 0xe2b1, 0x2f90, 0xc0fa, 0x4c7c, 0x9248, 0x1, 0x0);
        gbc.writeMem(0x9d62, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe2b1, gbc.sp());
        EXPECT(0x9d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d62));
        EXPECT(0xb2, gbc.readMem(0x9d63));
        // CB B2 032B
        gbc.setState(0xea95, 0x4d4a, 0x9160, 0x4026, 0x983e, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0xea95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d4a, gbc.sp());
        EXPECT(0xea97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea95));
        EXPECT(0xb2, gbc.readMem(0xea96));
        // CB B2 032C
        gbc.setState(0x2096, 0x9377, 0xd6d0, 0x1ffc, 0xff27, 0xe56, 0x0, 0x1);
        gbc.writeMem(0x2096, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9377, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 032D
        gbc.setState(0x4603, 0x15c9, 0x1d90, 0x6e8f, 0x41fd, 0xad1b, 0x1, 0x0);
        gbc.writeMem(0x4603, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x15c9, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 032F
        gbc.setState(0xa59d, 0xaa6f, 0x350, 0x221, 0x430d, 0x44e8, 0x0, 0x0);
        gbc.writeMem(0xa59d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaa6f, gbc.sp());
        EXPECT(0xa59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59d));
        EXPECT(0xb2, gbc.readMem(0xa59e));
        // CB B2 0331
        gbc.setState(0x15f2, 0xdc5f, 0x3730, 0xd729, 0x927, 0x83ae, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdc5f, gbc.sp());
        EXPECT(0x15f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0332
        gbc.setState(0x2b13, 0x4383, 0x4720, 0xcc1d, 0x1787, 0xd5ec, 0x0, 0x0);
        gbc.writeMem(0x2b13, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x2b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0333
        gbc.setState(0xa721, 0x6d03, 0x75c0, 0x50de, 0x9ac0, 0x9683, 0x1, 0x1);
        gbc.writeMem(0xa721, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa721));
        EXPECT(0xb2, gbc.readMem(0xa722));
        // CB B2 0334
        gbc.setState(0x35f7, 0xdcc5, 0x6660, 0x60b3, 0x466e, 0x14ef, 0x0, 0x0);
        gbc.writeMem(0x35f7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0x35f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0335
        gbc.setState(0x1386, 0x66f0, 0xe6a0, 0xfcec, 0x4db9, 0xedc8, 0x1, 0x1);
        gbc.writeMem(0x1386, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x66f0, gbc.sp());
        EXPECT(0x1388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0336
        gbc.setState(0x39a3, 0xab78, 0x2e90, 0x7aa9, 0x954, 0x65d1, 0x1, 0x1);
        gbc.writeMem(0x39a3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0x39a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0337
        gbc.setState(0xaa9e, 0x78d1, 0xa5d0, 0xb808, 0xa942, 0xf2d7, 0x0, 0x1);
        gbc.writeMem(0xaa9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0xaaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9e));
        EXPECT(0xb2, gbc.readMem(0xaa9f));
        // CB B2 0338
        gbc.setState(0x14e5, 0x3cfd, 0x9af0, 0xb28a, 0x895d, 0x5131, 0x1, 0x0);
        gbc.writeMem(0x14e5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0x14e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0339
        gbc.setState(0x758a, 0xf5a0, 0xed60, 0x8614, 0x9b5c, 0x9df6, 0x1, 0x0);
        gbc.writeMem(0x758a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x758c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 033A
        gbc.setState(0x4d5e, 0x9f9, 0x6150, 0x8325, 0xd0a2, 0xc0b5, 0x0, 0x1);
        gbc.writeMem(0x4d5e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x4d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 033B
        gbc.setState(0x25d2, 0x47ef, 0xc3f0, 0xf3be, 0xd7f5, 0xedc1, 0x1, 0x1);
        gbc.writeMem(0x25d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x47ef, gbc.sp());
        EXPECT(0x25d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 033C
        gbc.setState(0x50e3, 0x441e, 0x7170, 0x3a86, 0x5343, 0xee5, 0x0, 0x0);
        gbc.writeMem(0x50e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0x50e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 033D
        gbc.setState(0xe95, 0x6cc, 0x3cf0, 0x33a2, 0x4c88, 0x132f, 0x1, 0x1);
        gbc.writeMem(0xe95, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 033E
        gbc.setState(0x60e3, 0x7cb8, 0xa790, 0xba89, 0xc36d, 0x69d1, 0x1, 0x0);
        gbc.writeMem(0x60e3, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 033F
        gbc.setState(0x6662, 0xdaa8, 0x3750, 0xa66b, 0x620c, 0xeb03, 0x0, 0x0);
        gbc.writeMem(0x6662, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdaa8, gbc.sp());
        EXPECT(0x6664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0340
        gbc.setState(0xc2b4, 0x8fa0, 0xc230, 0x5d72, 0x4447, 0xe48c, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8fa0, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0xb2, gbc.readMem(0xc2b5));
        // CB B2 0341
        gbc.setState(0x8ce5, 0x59ca, 0x1580, 0xd403, 0xc082, 0xfb35, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce5));
        EXPECT(0xb2, gbc.readMem(0x8ce6));
        // CB B2 0342
        gbc.setState(0x65de, 0x389f, 0x5ed0, 0xfc92, 0x8c51, 0x41c6, 0x0, 0x0);
        gbc.writeMem(0x65de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x389f, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0343
        gbc.setState(0xa6ae, 0x6c56, 0x1870, 0xdf4, 0x174b, 0xf9c3, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ae));
        EXPECT(0xb2, gbc.readMem(0xa6af));
        // CB B2 0344
        gbc.setState(0x41db, 0x4c9e, 0xfa90, 0x7e92, 0xd569, 0x4ec4, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x41dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0345
        gbc.setState(0x18c5, 0x1306, 0x4730, 0xdcba, 0xe557, 0x3efc, 0x0, 0x1);
        gbc.writeMem(0x18c5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1306, gbc.sp());
        EXPECT(0x18c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0346
        gbc.setState(0x17fb, 0x1675, 0xdb60, 0xe44e, 0x3eeb, 0xe0c4, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1675, gbc.sp());
        EXPECT(0x17fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0347
        gbc.setState(0xc8a8, 0x2838, 0xf7a0, 0x1412, 0x7729, 0x65f, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2838, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0xb2, gbc.readMem(0xc8a9));
        // CB B2 0348
        gbc.setState(0x7c3b, 0xc6ec, 0x2980, 0x7630, 0x53ec, 0xae5c, 0x0, 0x0);
        gbc.writeMem(0x7c3b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0x7c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0349
        gbc.setState(0xd6e7, 0x5e4b, 0x33a0, 0x3eca, 0x35d7, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e4b, gbc.sp());
        EXPECT(0xd6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e7));
        EXPECT(0xb2, gbc.readMem(0xd6e8));
        // CB B2 034A
        gbc.setState(0xc4f5, 0xc8fe, 0x9420, 0xb4c8, 0xef00, 0xe7e4, 0x1, 0x0);
        gbc.writeMem(0xc4f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8fe, gbc.sp());
        EXPECT(0xc4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f5));
        EXPECT(0xb2, gbc.readMem(0xc4f6));
        // CB B2 034B
        gbc.setState(0xa2de, 0x9c1d, 0xa920, 0x4f87, 0x6ab0, 0x91aa, 0x0, 0x1);
        gbc.writeMem(0xa2de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c1d, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2de));
        EXPECT(0xb2, gbc.readMem(0xa2df));
        // CB B2 034C
        gbc.setState(0x22e9, 0x823c, 0x97a0, 0x83e1, 0x4cd7, 0x2b53, 0x0, 0x0);
        gbc.writeMem(0x22e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x823c, gbc.sp());
        EXPECT(0x22eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 034D
        gbc.setState(0x5660, 0xa322, 0x1210, 0xac05, 0x2ead, 0xdf77, 0x0, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa322, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 034E
        gbc.setState(0x7edd, 0xc09b, 0xcc30, 0x12c3, 0xe797, 0xd63a, 0x1, 0x0);
        gbc.writeMem(0x7edd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc09b, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 034F
        gbc.setState(0x3558, 0x3f71, 0x95c0, 0x326a, 0x357c, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0x3558, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x355a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0350
        gbc.setState(0xc8ad, 0x4b50, 0x4fe0, 0xa36b, 0x11a, 0x6e13, 0x1, 0x0);
        gbc.writeMem(0xc8ad, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0xc8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ad));
        EXPECT(0xb2, gbc.readMem(0xc8ae));
        // CB B2 0351
        gbc.setState(0x9ea1, 0xab06, 0x4070, 0x20eb, 0xc47a, 0x48bb, 0x0, 0x0);
        gbc.writeMem(0x9ea1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xab06, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea1));
        EXPECT(0xb2, gbc.readMem(0x9ea2));
        // CB B2 0352
        gbc.setState(0xadeb, 0xc3c3, 0xf460, 0x3ae1, 0x6377, 0x4646, 0x0, 0x1);
        gbc.writeMem(0xadeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc3c3, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadeb));
        EXPECT(0xb2, gbc.readMem(0xadec));
        // CB B2 0353
        gbc.setState(0x39c2, 0x5e38, 0xfa10, 0xd1f2, 0x3b4, 0x1633, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0354
        gbc.setState(0x5af, 0x33a9, 0x71c0, 0xf9a2, 0xb5bd, 0xfc69, 0x1, 0x1);
        gbc.writeMem(0x5af, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0355
        gbc.setState(0xecbf, 0xb566, 0x5e40, 0xf1d2, 0x97d5, 0x9d2, 0x1, 0x1);
        gbc.writeMem(0xecbf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbf));
        EXPECT(0xb2, gbc.readMem(0xecc0));
        // CB B2 0356
        gbc.setState(0x12f5, 0x89ee, 0x51c0, 0xfd51, 0x57a9, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x12f5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0357
        gbc.setState(0xed0e, 0xa731, 0x86e0, 0x912d, 0xe723, 0xd8ad, 0x1, 0x0);
        gbc.writeMem(0xed0e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0xed10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0e));
        EXPECT(0xb2, gbc.readMem(0xed0f));
        // CB B2 0358
        gbc.setState(0x9b0c, 0x630d, 0x81d0, 0x7c24, 0x3da7, 0x567d, 0x1, 0x1);
        gbc.writeMem(0x9b0c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x9b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0c));
        EXPECT(0xb2, gbc.readMem(0x9b0d));
        // CB B2 0359
        gbc.setState(0xb1, 0xa181, 0x1a40, 0x90e7, 0x79ba, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0xb1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 035A
        gbc.setState(0x5e7d, 0x5ced, 0x9210, 0x9fd2, 0x89a7, 0x1794, 0x1, 0x1);
        gbc.writeMem(0x5e7d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5ced, gbc.sp());
        EXPECT(0x5e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 035B
        gbc.setState(0x98eb, 0x5466, 0xfd50, 0x1fb7, 0xdf7b, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x98eb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5466, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98eb));
        EXPECT(0xb2, gbc.readMem(0x98ec));
        // CB B2 035C
        gbc.setState(0xe714, 0x8338, 0x7a00, 0xcf30, 0xa1a8, 0xd02d, 0x1, 0x1);
        gbc.writeMem(0xe714, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8338, gbc.sp());
        EXPECT(0xe716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe714));
        EXPECT(0xb2, gbc.readMem(0xe715));
        // CB B2 035D
        gbc.setState(0x11fb, 0x6bd4, 0x5880, 0xd5a4, 0xc4d9, 0x131f, 0x1, 0x0);
        gbc.writeMem(0x11fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 035E
        gbc.setState(0x3157, 0x999d, 0xf9e0, 0xf683, 0x50b1, 0x426d, 0x1, 0x1);
        gbc.writeMem(0x3157, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 035F
        gbc.setState(0x7670, 0xa7a0, 0xfd40, 0x9fb2, 0xe661, 0xe538, 0x0, 0x0);
        gbc.writeMem(0x7670, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa7a0, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0360
        gbc.setState(0x4258, 0x40d0, 0x5960, 0x69d0, 0x6429, 0x338d, 0x1, 0x0);
        gbc.writeMem(0x4258, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x40d0, gbc.sp());
        EXPECT(0x425a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0361
        gbc.setState(0xa803, 0xb87c, 0xe000, 0x26ac, 0x79c7, 0x8dd4, 0x1, 0x0);
        gbc.writeMem(0xa803, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb87c, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa803));
        EXPECT(0xb2, gbc.readMem(0xa804));
        // CB B2 0362
        gbc.setState(0xe3a1, 0x5684, 0xcfa0, 0x5ab4, 0x838b, 0x1d7c, 0x1, 0x1);
        gbc.writeMem(0xe3a1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0xe3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a1));
        EXPECT(0xb2, gbc.readMem(0xe3a2));
        // CB B2 0363
        gbc.setState(0x2570, 0x7499, 0xb520, 0xb876, 0xe2b9, 0x8f63, 0x0, 0x0);
        gbc.writeMem(0x2570, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0364
        gbc.setState(0x726d, 0xb104, 0x26b0, 0xa21b, 0xa1e1, 0x133f, 0x1, 0x0);
        gbc.writeMem(0x726d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb104, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0365
        gbc.setState(0xac7f, 0xe2cc, 0x9800, 0x70a5, 0xeae6, 0x5669, 0x0, 0x0);
        gbc.writeMem(0xac7f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe2cc, gbc.sp());
        EXPECT(0xac81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7f));
        EXPECT(0xb2, gbc.readMem(0xac80));
        // CB B2 0366
        gbc.setState(0xa2d5, 0x7d15, 0x580, 0x3deb, 0x4013, 0xb6b7, 0x1, 0x0);
        gbc.writeMem(0xa2d5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7d15, gbc.sp());
        EXPECT(0xa2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d5));
        EXPECT(0xb2, gbc.readMem(0xa2d6));
        // CB B2 0367
        gbc.setState(0x487b, 0x473, 0x10b0, 0xfc2b, 0xb5a, 0xc2b2, 0x1, 0x1);
        gbc.writeMem(0x487b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x473, gbc.sp());
        EXPECT(0x487d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0368
        gbc.setState(0x5867, 0x9304, 0x5a50, 0xfcbd, 0x565a, 0xf817, 0x1, 0x1);
        gbc.writeMem(0x5867, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x5869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0369
        gbc.setState(0xa37f, 0xa8bb, 0xccf0, 0xf8a, 0xdee2, 0x92d2, 0x1, 0x0);
        gbc.writeMem(0xa37f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa8bb, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0xb2, gbc.readMem(0xa380));
        // CB B2 036A
        gbc.setState(0xd9c0, 0xa5f2, 0xb760, 0x772c, 0xa3d9, 0x47e0, 0x0, 0x1);
        gbc.writeMem(0xd9c0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c0));
        EXPECT(0xb2, gbc.readMem(0xd9c1));
        // CB B2 036B
        gbc.setState(0x94e9, 0x76b0, 0xc970, 0xfe67, 0xfcbb, 0x36a5, 0x1, 0x0);
        gbc.writeMem(0x94e9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x76b0, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e9));
        EXPECT(0xb2, gbc.readMem(0x94ea));
        // CB B2 036C
        gbc.setState(0xac6c, 0x29bd, 0x3940, 0x7eeb, 0xde0a, 0x888e, 0x1, 0x1);
        gbc.writeMem(0xac6c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x29bd, gbc.sp());
        EXPECT(0xac6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6c));
        EXPECT(0xb2, gbc.readMem(0xac6d));
        // CB B2 036D
        gbc.setState(0xd906, 0xa4b9, 0xaf10, 0x1a1f, 0x9d88, 0x8067, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa4b9, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0xb2, gbc.readMem(0xd907));
        // CB B2 036E
        gbc.setState(0x54c5, 0xc20a, 0x5030, 0x4410, 0xd3c3, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x54c5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x54c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 036F
        gbc.setState(0xafb7, 0x915e, 0x8f0, 0x67d3, 0x460e, 0x672f, 0x1, 0x1);
        gbc.writeMem(0xafb7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0xafb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb7));
        EXPECT(0xb2, gbc.readMem(0xafb8));
        // CB B2 0370
        gbc.setState(0x6191, 0xf232, 0xc070, 0x3237, 0xea51, 0x890c, 0x1, 0x0);
        gbc.writeMem(0x6191, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf232, gbc.sp());
        EXPECT(0x6193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0371
        gbc.setState(0xc4b0, 0x8a87, 0x7880, 0x825e, 0x710f, 0x1807, 0x0, 0x1);
        gbc.writeMem(0xc4b0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0xc4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b0));
        EXPECT(0xb2, gbc.readMem(0xc4b1));
        // CB B2 0372
        gbc.setState(0xc047, 0x350a, 0x570, 0x7a1c, 0x80d7, 0xf9e8, 0x1, 0x0);
        gbc.writeMem(0xc047, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x350a, gbc.sp());
        EXPECT(0xc049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc047));
        EXPECT(0xb2, gbc.readMem(0xc048));
        // CB B2 0373
        gbc.setState(0xfe, 0xeb5c, 0xef80, 0xbf77, 0xd31e, 0x5a16, 0x0, 0x0);
        gbc.writeMem(0xfe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb5c, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0374
        gbc.setState(0x5236, 0x1f0, 0xa2a0, 0x7236, 0x4589, 0x3345, 0x1, 0x1);
        gbc.writeMem(0x5236, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1f0, gbc.sp());
        EXPECT(0x5238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0375
        gbc.setState(0x3394, 0x63ba, 0x4970, 0xc0e1, 0xff38, 0xd586, 0x0, 0x1);
        gbc.writeMem(0x3394, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x63ba, gbc.sp());
        EXPECT(0x3396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0377
        gbc.setState(0x7a90, 0x3ac9, 0xcfe0, 0xaa3a, 0x41f8, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x7a90, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3ac9, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0378
        gbc.setState(0x867c, 0x39f4, 0xdb60, 0x6c63, 0xf68d, 0xfa9f, 0x1, 0x1);
        gbc.writeMem(0x867c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867c));
        EXPECT(0xb2, gbc.readMem(0x867d));
        // CB B2 0379
        gbc.setState(0xcc9e, 0x52fd, 0xd9f0, 0x6b2e, 0x2f7e, 0x9177, 0x0, 0x0);
        gbc.writeMem(0xcc9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9e));
        EXPECT(0xb2, gbc.readMem(0xcc9f));
        // CB B2 037A
        gbc.setState(0xae4b, 0xe30a, 0x1c70, 0xc83c, 0x60e6, 0x9169, 0x0, 0x0);
        gbc.writeMem(0xae4b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe30a, gbc.sp());
        EXPECT(0xae4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4b));
        EXPECT(0xb2, gbc.readMem(0xae4c));
        // CB B2 037B
        gbc.setState(0x8a0a, 0x3825, 0x70d0, 0xbddc, 0x4fc, 0xf21d, 0x0, 0x1);
        gbc.writeMem(0x8a0a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3825, gbc.sp());
        EXPECT(0x8a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0a));
        EXPECT(0xb2, gbc.readMem(0x8a0b));
        // CB B2 037D
        gbc.setState(0xdf91, 0x4b9d, 0xb810, 0x783, 0x1c7a, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0xdf91, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf91));
        EXPECT(0xb2, gbc.readMem(0xdf92));
        // CB B2 037F
        gbc.setState(0x16c, 0x6db0, 0x99d0, 0x6768, 0xec73, 0x595e, 0x1, 0x1);
        gbc.writeMem(0x16c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6db0, gbc.sp());
        EXPECT(0x16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0380
        gbc.setState(0xcaf4, 0xb46d, 0x2c90, 0x50d6, 0xb620, 0x3d34, 0x1, 0x1);
        gbc.writeMem(0xcaf4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb46d, gbc.sp());
        EXPECT(0xcaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf4));
        EXPECT(0xb2, gbc.readMem(0xcaf5));
        // CB B2 0381
        gbc.setState(0x127f, 0x8e0d, 0x8b30, 0x72bc, 0xe53, 0xc913, 0x1, 0x0);
        gbc.writeMem(0x127f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8e0d, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0382
        gbc.setState(0x3f6a, 0x615a, 0x3400, 0xee27, 0x163f, 0x49be, 0x1, 0x1);
        gbc.writeMem(0x3f6a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x615a, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0383
        gbc.setState(0xa3e2, 0xe13f, 0x4580, 0x15f2, 0x73c8, 0xa779, 0x1, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe13f, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e2));
        EXPECT(0xb2, gbc.readMem(0xa3e3));
        // CB B2 0384
        gbc.setState(0x7602, 0xca4b, 0x3b90, 0x7eb0, 0xc31, 0xc495, 0x1, 0x0);
        gbc.writeMem(0x7602, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xca4b, gbc.sp());
        EXPECT(0x7604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0385
        gbc.setState(0x907d, 0xa102, 0x3f00, 0x598a, 0x8d, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0x907d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x907f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907d));
        EXPECT(0xb2, gbc.readMem(0x907e));
        // CB B2 0386
        gbc.setState(0xda58, 0x529d, 0x3b0, 0xe2e3, 0x7f43, 0x6d74, 0x1, 0x1);
        gbc.writeMem(0xda58, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x529d, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda58));
        EXPECT(0xb2, gbc.readMem(0xda59));
        // CB B2 0387
        gbc.setState(0x99bb, 0x26da, 0x4e10, 0xfc45, 0x9765, 0x5f0a, 0x1, 0x0);
        gbc.writeMem(0x99bb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0x99bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99bb));
        EXPECT(0xb2, gbc.readMem(0x99bc));
        // CB B2 0388
        gbc.setState(0xe5b, 0x8f33, 0xce40, 0xd180, 0x5af1, 0x4d62, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0389
        gbc.setState(0xdb32, 0x4053, 0x2fd0, 0x4221, 0xdc6f, 0xcc4, 0x0, 0x1);
        gbc.writeMem(0xdb32, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4053, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb32));
        EXPECT(0xb2, gbc.readMem(0xdb33));
        // CB B2 038A
        gbc.setState(0x65d8, 0x1358, 0x28d0, 0xf60e, 0xb421, 0x7e76, 0x1, 0x0);
        gbc.writeMem(0x65d8, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0x65da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 038B
        gbc.setState(0x6332, 0xf994, 0x510, 0xd4a, 0x7616, 0xe032, 0x0, 0x1);
        gbc.writeMem(0x6332, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 038C
        gbc.setState(0x4b46, 0x5dca, 0xf640, 0x8799, 0xc889, 0x171e, 0x1, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5dca, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 038D
        gbc.setState(0x9866, 0x6da7, 0x21c0, 0x71f0, 0xf30d, 0xbf38, 0x1, 0x0);
        gbc.writeMem(0x9866, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6da7, gbc.sp());
        EXPECT(0x9868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9866));
        EXPECT(0xb2, gbc.readMem(0x9867));
        // CB B2 038E
        gbc.setState(0xca63, 0x97ea, 0x7d40, 0xeb05, 0xcc9f, 0xde0a, 0x0, 0x1);
        gbc.writeMem(0xca63, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x97ea, gbc.sp());
        EXPECT(0xca65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca63));
        EXPECT(0xb2, gbc.readMem(0xca64));
        // CB B2 038F
        gbc.setState(0x75ba, 0x9a80, 0x4f30, 0xa26f, 0x952e, 0x38c, 0x0, 0x1);
        gbc.writeMem(0x75ba, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a80, gbc.sp());
        EXPECT(0x75bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0390
        gbc.setState(0x770d, 0x688d, 0x3630, 0x801a, 0x45dd, 0xcf5e, 0x0, 0x0);
        gbc.writeMem(0x770d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x688d, gbc.sp());
        EXPECT(0x770f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0391
        gbc.setState(0x9c20, 0x29fa, 0xe3d0, 0xeb9e, 0xfe3d, 0x3b37, 0x1, 0x1);
        gbc.writeMem(0x9c20, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c20));
        EXPECT(0xb2, gbc.readMem(0x9c21));
        // CB B2 0392
        gbc.setState(0x160a, 0x9fa1, 0xacb0, 0x59fa, 0xb381, 0x83ea, 0x0, 0x0);
        gbc.writeMem(0x160a, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9fa1, gbc.sp());
        EXPECT(0x160c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0393
        gbc.setState(0x8fc5, 0x53c7, 0x9960, 0xf200, 0x50d3, 0xaf6, 0x0, 0x0);
        gbc.writeMem(0x8fc5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0x8fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc5));
        EXPECT(0xb2, gbc.readMem(0x8fc6));
        // CB B2 0395
        gbc.setState(0xb808, 0xea8a, 0xe5c0, 0xe6c1, 0x68b1, 0x5d83, 0x1, 0x1);
        gbc.writeMem(0xb808, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0xb80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb808));
        EXPECT(0xb2, gbc.readMem(0xb809));
        // CB B2 0396
        gbc.setState(0x3569, 0x8ea3, 0xf2f0, 0xa4b3, 0x6bb, 0xade8, 0x1, 0x1);
        gbc.writeMem(0x3569, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8ea3, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0397
        gbc.setState(0x44fe, 0x54d6, 0x75d0, 0xe779, 0xea8d, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x44fe, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0x4500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 0398
        gbc.setState(0x1a21, 0xe87f, 0xa180, 0x41ea, 0x62e6, 0xb0f9, 0x0, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe87f, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 0399
        gbc.setState(0xc079, 0xd1c8, 0x94c0, 0x840, 0xc140, 0xafd, 0x1, 0x0);
        gbc.writeMem(0xc079, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0xc07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc079));
        EXPECT(0xb2, gbc.readMem(0xc07a));
        // CB B2 039A
        gbc.setState(0xafb2, 0x3d16, 0x8220, 0x51d7, 0x13f2, 0xc5ff, 0x0, 0x1);
        gbc.writeMem(0xafb2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3d16, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb2));
        EXPECT(0xb2, gbc.readMem(0xafb3));
        // CB B2 039B
        gbc.setState(0x1e0, 0x393, 0xa560, 0x1af7, 0x38ad, 0xb55a, 0x1, 0x0);
        gbc.writeMem(0x1e0, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x393, gbc.sp());
        EXPECT(0x1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 039C
        gbc.setState(0xd4d2, 0x1e4b, 0x8950, 0x174a, 0x2a33, 0x4b24, 0x1, 0x0);
        gbc.writeMem(0xd4d2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1e4b, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d2));
        EXPECT(0xb2, gbc.readMem(0xd4d3));
        // CB B2 039D
        gbc.setState(0xe1b5, 0xd2d6, 0xfc30, 0x4f92, 0x4ade, 0x59f2, 0x1, 0x0);
        gbc.writeMem(0xe1b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd2d6, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b5));
        EXPECT(0xb2, gbc.readMem(0xe1b6));
        // CB B2 039E
        gbc.setState(0xd88e, 0xe50d, 0x7260, 0x490a, 0xe5b9, 0xa91a, 0x0, 0x1);
        gbc.writeMem(0xd88e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe50d, gbc.sp());
        EXPECT(0xd890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88e));
        EXPECT(0xb2, gbc.readMem(0xd88f));
        // CB B2 039F
        gbc.setState(0x4b21, 0x16ed, 0x25e0, 0x2b92, 0xb6a7, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0x4b21, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03A0
        gbc.setState(0x3f46, 0xe0e5, 0xc120, 0xde4a, 0xbbea, 0x5a0e, 0x1, 0x0);
        gbc.writeMem(0x3f46, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x3f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03A1
        gbc.setState(0x6c5f, 0x7386, 0xb810, 0x9961, 0x5c55, 0xe15a, 0x0, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7386, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03A2
        gbc.setState(0xaecf, 0x5139, 0x6700, 0xf5c8, 0xc07, 0xb8d, 0x0, 0x0);
        gbc.writeMem(0xaecf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0xaed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecf));
        EXPECT(0xb2, gbc.readMem(0xaed0));
        // CB B2 03A3
        gbc.setState(0x67de, 0x6fbe, 0xc540, 0xb48c, 0x5be5, 0xdde1, 0x0, 0x1);
        gbc.writeMem(0x67de, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0x67e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03A4
        gbc.setState(0x244f, 0x606b, 0xd4a0, 0xfce4, 0xdae0, 0x9965, 0x0, 0x0);
        gbc.writeMem(0x244f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x606b, gbc.sp());
        EXPECT(0x2451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03A5
        gbc.setState(0xdfc9, 0xcdb6, 0xd560, 0x465, 0xf881, 0x561a, 0x1, 0x0);
        gbc.writeMem(0xdfc9, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc9));
        EXPECT(0xb2, gbc.readMem(0xdfca));
        // CB B2 03A6
        gbc.setState(0x2e0d, 0x64d3, 0xcd10, 0xcc6a, 0x544d, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0x2e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03A7
        gbc.setState(0x9142, 0x6154, 0x56f0, 0x2867, 0x2852, 0xe20b, 0x1, 0x0);
        gbc.writeMem(0x9142, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6154, gbc.sp());
        EXPECT(0x9144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9142));
        EXPECT(0xb2, gbc.readMem(0x9143));
        // CB B2 03A8
        gbc.setState(0xd07e, 0x8f08, 0x5930, 0xb2ee, 0xc249, 0x1a58, 0x0, 0x1);
        gbc.writeMem(0xd07e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8f08, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07e));
        EXPECT(0xb2, gbc.readMem(0xd07f));
        // CB B2 03A9
        gbc.setState(0xefd, 0xfc54, 0xa3f0, 0x3891, 0x3da0, 0xa59a, 0x1, 0x1);
        gbc.writeMem(0xefd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03AA
        gbc.setState(0x5d73, 0xabe5, 0x8350, 0x6978, 0x1120, 0xc60b, 0x0, 0x0);
        gbc.writeMem(0x5d73, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xabe5, gbc.sp());
        EXPECT(0x5d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03AB
        gbc.setState(0x5718, 0x7cf, 0xd750, 0xdec9, 0x478, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x5718, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7cf, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03AC
        gbc.setState(0xb40c, 0xc0c1, 0x5040, 0x926b, 0x6327, 0x21bc, 0x1, 0x0);
        gbc.writeMem(0xb40c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40c));
        EXPECT(0xb2, gbc.readMem(0xb40d));
        // CB B2 03AD
        gbc.setState(0xe08b, 0x3d28, 0x2e90, 0x5526, 0x1b1e, 0xed6d, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3d28, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08b));
        EXPECT(0xb2, gbc.readMem(0xe08c));
        // CB B2 03AE
        gbc.setState(0xdd89, 0xcbc, 0x78c0, 0xda7e, 0x8202, 0xe4ef, 0x0, 0x0);
        gbc.writeMem(0xdd89, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcbc, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd89));
        EXPECT(0xb2, gbc.readMem(0xdd8a));
        // CB B2 03AF
        gbc.setState(0x98da, 0xa71e, 0xebb0, 0x480c, 0x8d77, 0x78e3, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0xb2, gbc.readMem(0x98db));
        // CB B2 03B0
        gbc.setState(0xa3ca, 0xae3e, 0x7ef0, 0x67a7, 0x664e, 0xda2, 0x0, 0x0);
        gbc.writeMem(0xa3ca, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0xb2, gbc.readMem(0xa3cb));
        // CB B2 03B1
        gbc.setState(0x2f04, 0xc743, 0x9710, 0xe173, 0xffe, 0xfb9, 0x1, 0x0);
        gbc.writeMem(0x2f04, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x2f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03B2
        gbc.setState(0x7da2, 0x503a, 0xa90, 0x51e2, 0xb3e8, 0x8fac, 0x0, 0x0);
        gbc.writeMem(0x7da2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0x7da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03B3
        gbc.setState(0x59b7, 0x8185, 0xcf40, 0x24f5, 0x48cf, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x59b7, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03B4
        gbc.setState(0x8ddf, 0x5c33, 0x4c80, 0xe756, 0xea0e, 0xb726, 0x0, 0x1);
        gbc.writeMem(0x8ddf, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5c33, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddf));
        EXPECT(0xb2, gbc.readMem(0x8de0));
        // CB B2 03B5
        gbc.setState(0xb772, 0x4fd4, 0xcd0, 0xc53, 0xbd5e, 0xfb39, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0xb774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb772));
        EXPECT(0xb2, gbc.readMem(0xb773));
        // CB B2 03B6
        gbc.setState(0x69c6, 0xf0d1, 0x6430, 0xa292, 0xeb6d, 0x4b8e, 0x1, 0x1);
        gbc.writeMem(0x69c6, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03B8
        gbc.setState(0x8e0f, 0x87bd, 0x5550, 0xa580, 0xcbd1, 0x3739, 0x0, 0x0);
        gbc.writeMem(0x8e0f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x87bd, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0f));
        EXPECT(0xb2, gbc.readMem(0x8e10));
        // CB B2 03BA
        gbc.setState(0xb743, 0x4944, 0x8ec0, 0x4357, 0xfbda, 0x309b, 0x1, 0x0);
        gbc.writeMem(0xb743, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb743));
        EXPECT(0xb2, gbc.readMem(0xb744));
        // CB B2 03BB
        gbc.setState(0xe9ce, 0x8ba, 0x22f0, 0xc05d, 0x9fe2, 0x6a18, 0x0, 0x0);
        gbc.writeMem(0xe9ce, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ce));
        EXPECT(0xb2, gbc.readMem(0xe9cf));
        // CB B2 03BC
        gbc.setState(0xee9e, 0xe902, 0x7fd0, 0xf15, 0xe683, 0xddef, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9e));
        EXPECT(0xb2, gbc.readMem(0xee9f));
        // CB B2 03BD
        gbc.setState(0x556e, 0xa696, 0x39d0, 0xed36, 0x3f63, 0xcfd7, 0x1, 0x1);
        gbc.writeMem(0x556e, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa696, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03BE
        gbc.setState(0x8e16, 0x9c05, 0x7fe0, 0x7b96, 0xbc39, 0x756d, 0x1, 0x0);
        gbc.writeMem(0x8e16, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0x8e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e16));
        EXPECT(0xb2, gbc.readMem(0x8e17));
        // CB B2 03BF
        gbc.setState(0xe7cd, 0xd264, 0x10a0, 0x8298, 0xd4e3, 0x12ff, 0x1, 0x1);
        gbc.writeMem(0xe7cd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd264, gbc.sp());
        EXPECT(0xe7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cd));
        EXPECT(0xb2, gbc.readMem(0xe7ce));
        // CB B2 03C0
        gbc.setState(0xb412, 0xe6ea, 0x4f20, 0xec5f, 0x4932, 0xfe96, 0x0, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0xb2, gbc.readMem(0xb413));
        // CB B2 03C1
        gbc.setState(0x5d8f, 0xf99b, 0x5170, 0xa4, 0x5205, 0xfa93, 0x0, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03C2
        gbc.setState(0xbe50, 0xd841, 0x4330, 0x8e33, 0x6486, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0xbe50, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd841, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe50));
        EXPECT(0xb2, gbc.readMem(0xbe51));
        // CB B2 03C3
        gbc.setState(0x5eeb, 0x5bfe, 0xa6c0, 0xfb05, 0x84c3, 0x66d5, 0x1, 0x0);
        gbc.writeMem(0x5eeb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0x5eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03C4
        gbc.setState(0xc117, 0x7d8, 0x5c40, 0x33d0, 0xe55e, 0x14fb, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7d8, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc117));
        EXPECT(0xb2, gbc.readMem(0xc118));
        // CB B2 03C5
        gbc.setState(0xdf71, 0x3e4e, 0x7df0, 0x8e1c, 0x9cf, 0xf24e, 0x0, 0x1);
        gbc.writeMem(0xdf71, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0xdf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf71));
        EXPECT(0xb2, gbc.readMem(0xdf72));
        // CB B2 03C6
        gbc.setState(0xa0fb, 0xe4c, 0x91f0, 0xe1aa, 0x3418, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe4c, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fb));
        EXPECT(0xb2, gbc.readMem(0xa0fc));
        // CB B2 03C7
        gbc.setState(0x6846, 0x251, 0x1870, 0x5286, 0x4b9d, 0x380c, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03C9
        gbc.setState(0xdccd, 0x4347, 0x3800, 0x6667, 0x4d2, 0x89bf, 0x1, 0x0);
        gbc.writeMem(0xdccd, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4347, gbc.sp());
        EXPECT(0xdccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccd));
        EXPECT(0xb2, gbc.readMem(0xdcce));
        // CB B2 03CA
        gbc.setState(0x34e4, 0xb91f, 0x7fb0, 0x6b95, 0x678f, 0x315f, 0x1, 0x0);
        gbc.writeMem(0x34e4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb91f, gbc.sp());
        EXPECT(0x34e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03CB
        gbc.setState(0xaca4, 0xf056, 0x9b50, 0x1e78, 0xb988, 0xf85, 0x1, 0x0);
        gbc.writeMem(0xaca4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf056, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca4));
        EXPECT(0xb2, gbc.readMem(0xaca5));
        // CB B2 03CC
        gbc.setState(0x58b5, 0x98ed, 0x6c40, 0xcad2, 0x7456, 0xf4e7, 0x1, 0x1);
        gbc.writeMem(0x58b5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03CD
        gbc.setState(0xbc8c, 0x963, 0xa390, 0x560d, 0x4470, 0xf2af, 0x1, 0x1);
        gbc.writeMem(0xbc8c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x963, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8c));
        EXPECT(0xb2, gbc.readMem(0xbc8d));
        // CB B2 03CE
        gbc.setState(0x534d, 0x4992, 0x92a0, 0x7bf0, 0xabec, 0x78fc, 0x1, 0x1);
        gbc.writeMem(0x534d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03CF
        gbc.setState(0x4ef4, 0xf1b1, 0xadf0, 0xe54c, 0x8162, 0xb80e, 0x0, 0x0);
        gbc.writeMem(0x4ef4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf1b1, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03D0
        gbc.setState(0x6307, 0x93c2, 0x9700, 0xfcfa, 0x83c4, 0xd770, 0x0, 0x1);
        gbc.writeMem(0x6307, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x93c2, gbc.sp());
        EXPECT(0x6309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03D1
        gbc.setState(0xae51, 0xbf8a, 0x96b0, 0x6c0b, 0xab39, 0xc3f1, 0x0, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0xae53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae51));
        EXPECT(0xb2, gbc.readMem(0xae52));
        // CB B2 03D2
        gbc.setState(0x4738, 0xeb51, 0x7290, 0xb7cd, 0xf304, 0xba7e, 0x0, 0x1);
        gbc.writeMem(0x4738, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeb51, gbc.sp());
        EXPECT(0x473a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B2 03D3
        gbc.setState(0x973b, 0x6571, 0xe300, 0x51b5, 0x7c09, 0x50b5, 0x1, 0x0);
        gbc.writeMem(0x973b, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6571, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973b));
        EXPECT(0xb2, gbc.readMem(0x973c));
        // CB B2 03D4
        gbc.setState(0x836c, 0x4aa2, 0x79e0, 0xeb4a, 0xe9e0, 0xe179, 0x1, 0x0);
        gbc.writeMem(0x836c, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4aa2, gbc.sp());
        EXPECT(0x836e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836c));
        EXPECT(0xb2, gbc.readMem(0x836d));
        // CB B2 03D5
        gbc.setState(0x7443, 0x7ddc, 0xa1e0, 0x5288, 0x8241, 0xcdd8, 0x0, 0x0);
        gbc.writeMem(0x7443, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x7445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03D6
        gbc.setState(0xda04, 0x7664, 0x9eb0, 0x1046, 0x800b, 0xbc86, 0x0, 0x0);
        gbc.writeMem(0xda04, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7664, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda04));
        EXPECT(0xb2, gbc.readMem(0xda05));
        // CB B2 03D7
        gbc.setState(0xb5, 0x5e1f, 0x52c0, 0x3105, 0xf645, 0x1428, 0x0, 0x1);
        gbc.writeMem(0xb5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5e1f, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03D9
        gbc.setState(0x24c1, 0x4b07, 0x6860, 0xb021, 0xc88, 0xa070, 0x1, 0x1);
        gbc.writeMem(0x24c1, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03DA
        gbc.setState(0x65dc, 0x361c, 0xf940, 0x37da, 0xdd70, 0xf88f, 0x1, 0x1);
        gbc.writeMem(0x65dc, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0x65de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03DB
        gbc.setState(0x82c4, 0x5301, 0xacf0, 0x55f0, 0x6c7a, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5301, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c4));
        EXPECT(0xb2, gbc.readMem(0x82c5));
        // CB B2 03DC
        gbc.setState(0x2966, 0xea0, 0x2720, 0xe5e, 0xc59e, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x2966, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xea0, gbc.sp());
        EXPECT(0x2968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03DD
        gbc.setState(0x557d, 0x1a6c, 0x2d20, 0x4758, 0x28bf, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0x557d, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1a6c, gbc.sp());
        EXPECT(0x557f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03DE
        gbc.setState(0xc089, 0x869a, 0xec80, 0x4da5, 0xd933, 0x40f, 0x0, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc089));
        EXPECT(0xb2, gbc.readMem(0xc08a));
        // CB B2 03DF
        gbc.setState(0x6da5, 0x70ee, 0x5640, 0x3d88, 0x4657, 0xa7d1, 0x0, 0x1);
        gbc.writeMem(0x6da5, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x70ee, gbc.sp());
        EXPECT(0x6da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03E0
        gbc.setState(0xd680, 0x7ae1, 0xed50, 0x657c, 0xf6f7, 0x7193, 0x1, 0x1);
        gbc.writeMem(0xd680, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd680));
        EXPECT(0xb2, gbc.readMem(0xd681));
        // CB B2 03E1
        gbc.setState(0xd127, 0x25bc, 0x9eb0, 0x7962, 0x6aac, 0xd4be, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x25bc, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0xb2, gbc.readMem(0xd128));
        // CB B2 03E2
        gbc.setState(0x9a87, 0x15e9, 0x2590, 0x75a6, 0xa1e8, 0xcbb3, 0x0, 0x1);
        gbc.writeMem(0x9a87, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x15e9, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a87));
        EXPECT(0xb2, gbc.readMem(0x9a88));
        // CB B2 03E3
        gbc.setState(0x940, 0xe306, 0x6b40, 0x38a9, 0x3006, 0x406b, 0x1, 0x0);
        gbc.writeMem(0x940, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03E4
        gbc.setState(0x73c4, 0x1a6e, 0xcb20, 0x95f8, 0xf6d8, 0x5e03, 0x1, 0x0);
        gbc.writeMem(0x73c4, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B2 03E5
        gbc.setState(0xc6f2, 0x3626, 0x4660, 0x714f, 0xdf3c, 0x81d8, 0x1, 0x0);
        gbc.writeMem(0xc6f2, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3626, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f2));
        EXPECT(0xb2, gbc.readMem(0xc6f3));
        // CB B2 03E6
        gbc.setState(0x8c67, 0xe97, 0x11a0, 0xa256, 0xe0a0, 0x6054, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0xb2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe97, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c67));
        EXPECT(0xb2, gbc.readMem(0x8c68));
    }
